[{"authorTime":"2018-08-26 22:43:11","codes":[{"authorDate":"2018-08-26 22:43:11","commitOrder":1,"curCode":"    public void testAddConnectionWizdardReturnsNullOnCancel() throws Exception {\n        Util.clearConnections();\n        Util.deleteDriverFiles();\n        \n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final org.netbeans.modules.db.explorer.DatabaseConnection dummyConnection \n                = new org.netbeans.modules.db.explorer.DatabaseConnection(\n                driver.getName(),\n                driver.getClassName(),\n                \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final Holder<DatabaseConnection> result = new Holder<>();\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doCancelClick();\n                    \n                    result.value = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n\n                    finalLock.countDown();\n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(0));\n        assertNull(result.value);\n    }\n","date":"2018-08-26 22:43:11","endLine":83,"groupId":"33464","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddConnectionWizdardReturnsNullOnCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/7e/db0d0c9ff6790c0fa3290eb9a96161c20bc05b.src","preCode":"    public void testAddConnectionWizdardReturnsNullOnCancel() throws Exception {\n        Util.clearConnections();\n        Util.deleteDriverFiles();\n        \n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final org.netbeans.modules.db.explorer.DatabaseConnection dummyConnection \n                = new org.netbeans.modules.db.explorer.DatabaseConnection(\n                driver.getName(),\n                driver.getClassName(),\n                \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final Holder<DatabaseConnection> result = new Holder<>();\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doCancelClick();\n                    \n                    result.value = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n\n                    finalLock.countDown();\n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(0));\n        assertNull(result.value);\n    }\n","realPath":"ide/db/test/unit/src/org/netbeans/modules/db/explorer/dlg/AddConnectionWizardTest.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2018-08-26 22:43:11","commitOrder":1,"curCode":"    public void testAddConnectionWizdardReturnsNonNullOnFinish() throws Exception {\n        Util.clearConnections();\n        Util.deleteDriverFiles();\n        \n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final org.netbeans.modules.db.explorer.DatabaseConnection dummyConnection \n                = new org.netbeans.modules.db.explorer.DatabaseConnection(\n                driver.getName(),\n                driver.getClassName(),\n                \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final Holder<DatabaseConnection> result = new Holder<>();\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doFinishClick();\n                    \n                    result.value = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n\n                    finalLock.countDown();\n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(1));\n        assertNotNull(result.value);\n    }\n","date":"2018-08-26 22:43:11","endLine":122,"groupId":"33464","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddConnectionWizdardReturnsNonNullOnFinish","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/7e/db0d0c9ff6790c0fa3290eb9a96161c20bc05b.src","preCode":"    public void testAddConnectionWizdardReturnsNonNullOnFinish() throws Exception {\n        Util.clearConnections();\n        Util.deleteDriverFiles();\n        \n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final org.netbeans.modules.db.explorer.DatabaseConnection dummyConnection \n                = new org.netbeans.modules.db.explorer.DatabaseConnection(\n                driver.getName(),\n                driver.getClassName(),\n                \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final Holder<DatabaseConnection> result = new Holder<>();\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doFinishClick();\n                    \n                    result.value = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n\n                    finalLock.countDown();\n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(1));\n        assertNotNull(result.value);\n    }\n","realPath":"ide/db/test/unit/src/org/netbeans/modules/db/explorer/dlg/AddConnectionWizardTest.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"0f2e98d513deaedccef831ee9cfc08d09f3650b6","commitMessage":"@@@Merge pull request #791 from ralphbenjamin/NETBEANS-1172_move_ide_modules_to_ide_subdirectory\n\n[NETBEANS-1172] move ide modules to ide subdirectory","date":"2018-08-26 22:43:11","modifiedFileCount":"0","status":"B","submitter":"Geertjan Wielenga"},{"authorTime":"2018-09-04 04:28:32","codes":[{"authorDate":"2018-09-04 04:28:32","commitOrder":2,"curCode":"    public void testAddConnectionWizdardReturnsNullOnCancel() throws Exception {\n        Util.clearConnections();\n        Util.deleteDriverFiles();\n        \n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final org.netbeans.modules.db.explorer.DatabaseConnection dummyConnection \n                = new org.netbeans.modules.db.explorer.DatabaseConnection(\n                driver.getName(),\n                driver.getClassName(),\n                \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final DatabaseConnection[] result = new DatabaseConnection[1];\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doCancelClick();\n                    \n                    result[0] = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n\n                    finalLock.countDown();\n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(0));\n        assertNull(result[0]);\n    }\n","date":"2018-09-04 04:28:32","endLine":82,"groupId":"33464","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddConnectionWizdardReturnsNullOnCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/d3/d6dd0c74e7bccb0bd897424ae717d56c447f9b.src","preCode":"    public void testAddConnectionWizdardReturnsNullOnCancel() throws Exception {\n        Util.clearConnections();\n        Util.deleteDriverFiles();\n        \n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final org.netbeans.modules.db.explorer.DatabaseConnection dummyConnection \n                = new org.netbeans.modules.db.explorer.DatabaseConnection(\n                driver.getName(),\n                driver.getClassName(),\n                \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final Holder<DatabaseConnection> result = new Holder<>();\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doCancelClick();\n                    \n                    result.value = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n\n                    finalLock.countDown();\n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(0));\n        assertNull(result.value);\n    }\n","realPath":"ide/db/test/unit/src/org/netbeans/modules/db/explorer/dlg/AddConnectionWizardTest.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2018-09-04 04:28:32","commitOrder":2,"curCode":"    public void testAddConnectionWizdardReturnsNonNullOnFinish() throws Exception {\n        Util.clearConnections();\n        Util.deleteDriverFiles();\n        \n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final org.netbeans.modules.db.explorer.DatabaseConnection dummyConnection \n                = new org.netbeans.modules.db.explorer.DatabaseConnection(\n                driver.getName(),\n                driver.getClassName(),\n                \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final DatabaseConnection[] result = new DatabaseConnection[1];\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doFinishClick();\n                    \n                    result[0] = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n\n                    finalLock.countDown();\n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(1));\n        assertNotNull(result[0]);\n    }\n","date":"2018-09-04 04:28:32","endLine":121,"groupId":"33464","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddConnectionWizdardReturnsNonNullOnFinish","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/d3/d6dd0c74e7bccb0bd897424ae717d56c447f9b.src","preCode":"    public void testAddConnectionWizdardReturnsNonNullOnFinish() throws Exception {\n        Util.clearConnections();\n        Util.deleteDriverFiles();\n        \n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final org.netbeans.modules.db.explorer.DatabaseConnection dummyConnection \n                = new org.netbeans.modules.db.explorer.DatabaseConnection(\n                driver.getName(),\n                driver.getClassName(),\n                \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final Holder<DatabaseConnection> result = new Holder<>();\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doFinishClick();\n                    \n                    result.value = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n\n                    finalLock.countDown();\n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(1));\n        assertNotNull(result.value);\n    }\n","realPath":"ide/db/test/unit/src/org/netbeans/modules/db/explorer/dlg/AddConnectionWizardTest.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"3219187fddccddb72c2b4218364b2a5a55aebb72","commitMessage":"@@@Merge pull request #833 from matthiasblaesing/remove-jaxws-dep\n\nRemove JAX-WS dependency","date":"2018-09-04 04:28:32","modifiedFileCount":"4","status":"M","submitter":"Geertjan Wielenga"},{"authorTime":"2019-08-19 03:31:44","codes":[{"authorDate":"2019-08-19 03:31:44","commitOrder":3,"curCode":"    public void testAddConnectionWizdardReturnsNullOnCancel() throws Exception {\n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final DatabaseConnection dummyConnection = new DatabaseConnection(driver.getName(), \n                driver.getClassName(), \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final DatabaseConnection[] result = new DatabaseConnection[]{dummyConnection};\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doCancelClick();\n                    \n                    result[0] = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n                } catch (Throwable throwable) {\n                    LOG.log(Level.SEVERE, throwable.getLocalizedMessage(), throwable);\n                } finally {\n                    finalLock.countDown();\n                } \n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(0));\n        assertNull(result[0]);\n    }\n","date":"2019-08-19 03:31:44","endLine":87,"groupId":"101559","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testAddConnectionWizdardReturnsNullOnCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/7e/f4eb03d3bdbb2a017b3879abb7ffed74a19167.src","preCode":"    public void testAddConnectionWizdardReturnsNullOnCancel() throws Exception {\n        Util.clearConnections();\n        Util.deleteDriverFiles();\n        \n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final org.netbeans.modules.db.explorer.DatabaseConnection dummyConnection \n                = new org.netbeans.modules.db.explorer.DatabaseConnection(\n                driver.getName(),\n                driver.getClassName(),\n                \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final DatabaseConnection[] result = new DatabaseConnection[1];\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doCancelClick();\n                    \n                    result[0] = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n\n                    finalLock.countDown();\n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(0));\n        assertNull(result[0]);\n    }\n","realPath":"ide/db/test/unit/src/org/netbeans/modules/db/explorer/dlg/AddConnectionWizardTest.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2019-08-19 03:31:44","commitOrder":3,"curCode":"    public void testAddConnectionWizdardReturnsNonNullOnFinish() throws Exception {\n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final DatabaseConnection dummyConnection = new DatabaseConnection(driver.getName(), \n                driver.getClassName(), \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final DatabaseConnection[] result = new DatabaseConnection[1];\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doFinishClick();\n                    \n                    result[0] = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n                } catch (Throwable throwable) {\n                    LOG.log(Level.SEVERE, throwable.getLocalizedMessage(), throwable);\n                } finally {\n                    finalLock.countDown();\n                }\n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(1));\n        assertNotNull(result[0]);\n    }\n","date":"2019-08-19 03:31:44","endLine":124,"groupId":"101559","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testAddConnectionWizdardReturnsNonNullOnFinish","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/7e/f4eb03d3bdbb2a017b3879abb7ffed74a19167.src","preCode":"    public void testAddConnectionWizdardReturnsNonNullOnFinish() throws Exception {\n        Util.clearConnections();\n        Util.deleteDriverFiles();\n        \n        final CountDownLatch finalLock = new CountDownLatch(1);\n        final JDBCDriver driver = Util.createDummyDriver();\n        final org.netbeans.modules.db.explorer.DatabaseConnection dummyConnection \n                = new org.netbeans.modules.db.explorer.DatabaseConnection(\n                driver.getName(),\n                driver.getClassName(),\n                \"database\", \"schema\", \"user\", \"password\", true);\n        \n        final DatabaseConnection[] result = new DatabaseConnection[1];\n        \n        SwingUtilities.invokeLater(new Runnable() {\n            @Override\n            public void run() {\n                    AddConnectionWizard wiz = reflectiveConstruct(AddConnectionWizard.class,\n                            new Class[] {JDBCDriver.class, String.class, String.class, String.class},\n                            new Object[] {driver, \"jdbc:mysql://dummy\", \"dummy\", \"dummy\"});\n                    \n                    wiz.setDatabaseConnection(dummyConnection);\n                    \n                    WizardDescriptor wd = reflectiveFieldGet(AddConnectionWizard.class, wiz, \"wd\");\n                    wd.doFinishClick();\n                    \n                    result[0] = reflectiveCall(AddConnectionWizard.class, wiz, \"getResult\", new Class[0], new Object[0]);\n\n                    finalLock.countDown();\n            }\n        });\n        \n        finalLock.await();\n        \n        assertThat(ConnectionManager.getDefault().getConnections().length, is(1));\n        assertNotNull(result[0]);\n    }\n","realPath":"ide/db/test/unit/src/org/netbeans/modules/db/explorer/dlg/AddConnectionWizardTest.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"607a3e2a6dc097d57f24addb264ac9c1a9e09fc7","commitMessage":"@@@Merge pull request #1437 from blackleg/fix_ide_db_tests\n\nFix tests in ide/db module","date":"2019-08-19 03:31:44","modifiedFileCount":"3","status":"M","submitter":"Matthias Bl?sing"}]
