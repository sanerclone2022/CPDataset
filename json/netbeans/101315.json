[{"authorTime":"2018-08-18 19:22:43","codes":[{"authorDate":"2018-08-26 22:43:11","commitOrder":2,"curCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","date":"2018-08-26 22:43:11","endLine":169,"groupId":"8091","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkPermission","params":"(Permissionp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/75/fc8a5bd1d976d47591179692f3edbeed29c588.src","preCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","realPath":"ide/ide.kit/test/qa-functional/src/org/netbeans/test/ide/CountingSecurityManager.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"},{"authorDate":"2018-08-18 19:22:43","commitOrder":2,"curCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","date":"2018-08-18 19:22:43","endLine":136,"groupId":"8091","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkPermission","params":"(Permissionp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/bb/888e588943f9ff9aaadf9e500a1d395cef2493.src","preCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","realPath":"platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/CountingSecurityManager.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"NB"}],"commitId":"0f2e98d513deaedccef831ee9cfc08d09f3650b6","commitMessage":"@@@Merge pull request #791 from ralphbenjamin/NETBEANS-1172_move_ide_modules_to_ide_subdirectory\n\n[NETBEANS-1172] move ide modules to ide subdirectory","date":"2018-08-26 22:43:11","modifiedFileCount":"0","status":"M","submitter":"Geertjan Wielenga"},{"authorTime":"2019-01-02 21:23:19","codes":[{"authorDate":"2018-08-26 22:43:11","commitOrder":3,"curCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","date":"2018-08-26 22:43:11","endLine":169,"groupId":"101315","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkPermission","params":"(Permissionp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/75/fc8a5bd1d976d47591179692f3edbeed29c588.src","preCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","realPath":"ide/ide.kit/test/qa-functional/src/org/netbeans/test/ide/CountingSecurityManager.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"N"},{"authorDate":"2019-01-02 21:23:19","commitOrder":3,"curCode":"    public void checkPermission(Permission p) {\n        if (p instanceof MaxCountPerm) {\n            checkMemberAccess(null, ((MaxCountPerm) p).maxCount);\n            return;\n        }\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","date":"2019-01-02 22:34:54","endLine":171,"groupId":"101315","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"checkPermission","params":"(Permissionp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/b7/3f92923bf02a3b2f35845604086e25ad6b4fd0.src","preCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","realPath":"platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/CountingSecurityManager.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"}],"commitId":"0d766ac6a7ab0bcb7005360382c3a1de45d89375","commitMessage":"@@@checkMemberAccess method and other inaccessible classes as of JDK11\n","date":"2019-01-02 22:34:54","modifiedFileCount":"5","status":"M","submitter":"Jaroslav Tulach"}]
