[{"authorTime":"2018-08-26 22:43:11","codes":[{"authorDate":"2018-08-26 22:43:11","commitOrder":1,"curCode":"    public Enumeration queryElements(HintContext ctx) {\n        if (elementDecls == null) return org.openide.util.Enumerations.empty();;\n        \n        Node node = ((Node)ctx).getParentNode();        \n        Set elements = null;\n        \n        if (node instanceof Element) {\n            Element el = (Element) node;\n            if (el == null) return org.openide.util.Enumerations.empty();;\n\n            \r\n            Object model = null;\n            String prefs = System.getProperty(\"netbeans.xml.completion\", \"default\"); \r\n            if (\"fast\".equals(prefs)) {                                      \r\n                model = null;\n            } else if (\"default\".equals(prefs) || \"accurate\".equals(prefs)) { \r\n                model = contentModels.get(el.getTagName());\n            } else {\n                model = null;\n            }\n            if (model instanceof String) {\n                model = ContentModel.parseContentModel((String)model);\n                contentModels.put(el.getTagName(), model);\n            }\n            if (model instanceof ContentModel) {\n                Enumeration en = ((ContentModel)model).whatCanFollow(new PreviousEnumeration(el, ctx));\n                if (en == null) return org.openide.util.Enumerations.empty();\n                String prefix = ctx.getCurrentPrefix();\n                elements = new TreeSet();\n                while (en.hasMoreElements()) {\n                    String next = (String) en.nextElement();\n                    if (next.startsWith(prefix)) {\n                        elements.add(next);\n                    }\n                }\n            }\n            \r\n            if (elements == null) {\n                elements = (Set) elementDecls.get(el.getTagName());\n            }\n        } else if (node instanceof Document) {\n            elements = elementDecls.keySet();  \r\n        } else {\n            return org.openide.util.Enumerations.empty();\n        }\n                \n        if (elements == null) return org.openide.util.Enumerations.empty();;\n        String prefix = ctx.getCurrentPrefix();\n        \n        LinkedList list = new LinkedList ();\n        Iterator it = elements.iterator();\n        while ( it.hasNext()) {\n            String next = (String) it.next();\n            if (next.startsWith(prefix)) {\n                boolean empty = emptyElements.contains(next);\n                list.add(new MyElement(next, empty));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","date":"2018-08-26 22:43:11","endLine":230,"groupId":"46401","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"queryElements","params":"(HintContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/da/e9a8fe1d1c1f032adb3e1bf91c1bd65281760a.src","preCode":"    public Enumeration queryElements(HintContext ctx) {\n        if (elementDecls == null) return org.openide.util.Enumerations.empty();;\n        \n        Node node = ((Node)ctx).getParentNode();        \n        Set elements = null;\n        \n        if (node instanceof Element) {\n            Element el = (Element) node;\n            if (el == null) return org.openide.util.Enumerations.empty();;\n\n            \r\n            Object model = null;\n            String prefs = System.getProperty(\"netbeans.xml.completion\", \"default\"); \r\n            if (\"fast\".equals(prefs)) {                                      \r\n                model = null;\n            } else if (\"default\".equals(prefs) || \"accurate\".equals(prefs)) { \r\n                model = contentModels.get(el.getTagName());\n            } else {\n                model = null;\n            }\n            if (model instanceof String) {\n                model = ContentModel.parseContentModel((String)model);\n                contentModels.put(el.getTagName(), model);\n            }\n            if (model instanceof ContentModel) {\n                Enumeration en = ((ContentModel)model).whatCanFollow(new PreviousEnumeration(el, ctx));\n                if (en == null) return org.openide.util.Enumerations.empty();\n                String prefix = ctx.getCurrentPrefix();\n                elements = new TreeSet();\n                while (en.hasMoreElements()) {\n                    String next = (String) en.nextElement();\n                    if (next.startsWith(prefix)) {\n                        elements.add(next);\n                    }\n                }\n            }\n            \r\n            if (elements == null) {\n                elements = (Set) elementDecls.get(el.getTagName());\n            }\n        } else if (node instanceof Document) {\n            elements = elementDecls.keySet();  \r\n        } else {\n            return org.openide.util.Enumerations.empty();\n        }\n                \n        if (elements == null) return org.openide.util.Enumerations.empty();;\n        String prefix = ctx.getCurrentPrefix();\n        \n        LinkedList list = new LinkedList ();\n        Iterator it = elements.iterator();\n        while ( it.hasNext()) {\n            String next = (String) it.next();\n            if (next.startsWith(prefix)) {\n                boolean empty = emptyElements.contains(next);\n                list.add(new MyElement(next, empty));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","realPath":"ide/xml.core/src/org/netbeans/modules/xml/dtd/grammar/DTDGrammar.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"B"},{"authorDate":"2018-08-26 22:43:11","commitOrder":1,"curCode":"    public Enumeration queryNotations(String prefix) {\n        if (notations == null) return org.openide.util.Enumerations.empty();;\n        \n        LinkedList list = new LinkedList ();\n        Iterator it = notations.iterator();\n        while ( it.hasNext()) {\n            String next = (String) it.next();\n            if (next.startsWith(prefix)) {\n                list.add (new MyNotation(next));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","date":"2018-08-26 22:43:11","endLine":249,"groupId":"64055","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"queryNotations","params":"(Stringprefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/da/e9a8fe1d1c1f032adb3e1bf91c1bd65281760a.src","preCode":"    public Enumeration queryNotations(String prefix) {\n        if (notations == null) return org.openide.util.Enumerations.empty();;\n        \n        LinkedList list = new LinkedList ();\n        Iterator it = notations.iterator();\n        while ( it.hasNext()) {\n            String next = (String) it.next();\n            if (next.startsWith(prefix)) {\n                list.add (new MyNotation(next));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","realPath":"ide/xml.core/src/org/netbeans/modules/xml/dtd/grammar/DTDGrammar.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"}],"commitId":"0f2e98d513deaedccef831ee9cfc08d09f3650b6","commitMessage":"@@@Merge pull request #791 from ralphbenjamin/NETBEANS-1172_move_ide_modules_to_ide_subdirectory\n\n[NETBEANS-1172] move ide modules to ide subdirectory","date":"2018-08-26 22:43:11","modifiedFileCount":"0","status":"B","submitter":"Geertjan Wielenga"},{"authorTime":"2020-03-13 04:47:10","codes":[{"authorDate":"2020-03-13 04:47:10","commitOrder":2,"curCode":"    public Enumeration queryElements(HintContext ctx) {\n        if (elementDecls == null) return org.openide.util.Enumerations.empty();;\n        \n        Node node = ((Node)ctx).getParentNode();        \n        Set elements = null;\n        \n        if (node instanceof Element) {\n            Element el = (Element) node;\n            if (el == null) return org.openide.util.Enumerations.empty();;\n\n            \r\n            Object model = null;\n            String prefs = System.getProperty(\"netbeans.xml.completion\", \"default\"); \r\n            if (\"fast\".equals(prefs)) {                                      \r\n                model = null;\n            } else if (\"default\".equals(prefs) || \"accurate\".equals(prefs)) { \r\n                model = contentModels.get(el.getTagName());\n            } else {\n                model = null;\n            }\n            if (model instanceof String) {\n                model = ContentModel.parseContentModel((String)model);\n                contentModels.put(el.getTagName(), model);\n            }\n            if (model instanceof ContentModel) {\n                Enumeration en = ((ContentModel)model).whatCanFollow(new PreviousEnumeration(el, ctx));\n                if (en == null) return org.openide.util.Enumerations.empty();\n                String prefix = ctx.getCurrentPrefix();\n                elements = new TreeSet();\n                while (en.hasMoreElements()) {\n                    String next = (String) en.nextElement();\n                    if (next.startsWith(prefix)) {\n                        elements.add(next);\n                    }\n                }\n            }\n            \r\n            if (elements == null) {\n                elements = (Set) elementDecls.get(el.getTagName());\n            }\n        } else if (node instanceof Document) {\n            elements = elementDecls.keySet();  \r\n        } else {\n            return org.openide.util.Enumerations.empty();\n        }\n                \n        if (elements == null) return org.openide.util.Enumerations.empty();;\n        String prefix = ctx.getCurrentPrefix();\n        \n        LinkedList list = new LinkedList ();\n        Iterator<String> it = elements.iterator();\n        while ( it.hasNext()) {\n            String next = it.next();\n            if (next.startsWith(prefix)) {\n                boolean empty = emptyElements.contains(next);\n                list.add(new MyElement(next, empty));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","date":"2020-03-13 04:47:10","endLine":230,"groupId":"46401","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"queryElements","params":"(HintContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/9a/e3b590f3b1ffae05a8d11be99133018fe5b47e.src","preCode":"    public Enumeration queryElements(HintContext ctx) {\n        if (elementDecls == null) return org.openide.util.Enumerations.empty();;\n        \n        Node node = ((Node)ctx).getParentNode();        \n        Set elements = null;\n        \n        if (node instanceof Element) {\n            Element el = (Element) node;\n            if (el == null) return org.openide.util.Enumerations.empty();;\n\n            \r\n            Object model = null;\n            String prefs = System.getProperty(\"netbeans.xml.completion\", \"default\"); \r\n            if (\"fast\".equals(prefs)) {                                      \r\n                model = null;\n            } else if (\"default\".equals(prefs) || \"accurate\".equals(prefs)) { \r\n                model = contentModels.get(el.getTagName());\n            } else {\n                model = null;\n            }\n            if (model instanceof String) {\n                model = ContentModel.parseContentModel((String)model);\n                contentModels.put(el.getTagName(), model);\n            }\n            if (model instanceof ContentModel) {\n                Enumeration en = ((ContentModel)model).whatCanFollow(new PreviousEnumeration(el, ctx));\n                if (en == null) return org.openide.util.Enumerations.empty();\n                String prefix = ctx.getCurrentPrefix();\n                elements = new TreeSet();\n                while (en.hasMoreElements()) {\n                    String next = (String) en.nextElement();\n                    if (next.startsWith(prefix)) {\n                        elements.add(next);\n                    }\n                }\n            }\n            \r\n            if (elements == null) {\n                elements = (Set) elementDecls.get(el.getTagName());\n            }\n        } else if (node instanceof Document) {\n            elements = elementDecls.keySet();  \r\n        } else {\n            return org.openide.util.Enumerations.empty();\n        }\n                \n        if (elements == null) return org.openide.util.Enumerations.empty();;\n        String prefix = ctx.getCurrentPrefix();\n        \n        LinkedList list = new LinkedList ();\n        Iterator it = elements.iterator();\n        while ( it.hasNext()) {\n            String next = (String) it.next();\n            if (next.startsWith(prefix)) {\n                boolean empty = emptyElements.contains(next);\n                list.add(new MyElement(next, empty));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","realPath":"ide/xml.core/src/org/netbeans/modules/xml/dtd/grammar/DTDGrammar.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2020-03-13 04:47:10","commitOrder":2,"curCode":"    public Enumeration queryNotations(String prefix) {\n        if (notations == null) return org.openide.util.Enumerations.empty();;\n        \n        LinkedList list = new LinkedList ();\n        Iterator<String> it = notations.iterator();\n        while ( it.hasNext()) {\n            String next = it.next();\n            if (next.startsWith(prefix)) {\n                list.add (new MyNotation(next));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","date":"2020-03-13 04:47:10","endLine":249,"groupId":"46403","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"queryNotations","params":"(Stringprefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/9a/e3b590f3b1ffae05a8d11be99133018fe5b47e.src","preCode":"    public Enumeration queryNotations(String prefix) {\n        if (notations == null) return org.openide.util.Enumerations.empty();;\n        \n        LinkedList list = new LinkedList ();\n        Iterator it = notations.iterator();\n        while ( it.hasNext()) {\n            String next = (String) it.next();\n            if (next.startsWith(prefix)) {\n                list.add (new MyNotation(next));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","realPath":"ide/xml.core/src/org/netbeans/modules/xml/dtd/grammar/DTDGrammar.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"}],"commitId":"166e2bb491c29f6778223c6e9e16f70664252bce","commitMessage":"@@@Merge pull request #2016 from BradWalker/cleanup_raw_iterators\n\n[NETBEANS-4002] - clean Iterator raw types","date":"2020-03-13 04:47:10","modifiedFileCount":"101","status":"M","submitter":"Matthias Bl?sing"},{"authorTime":"2020-03-13 04:47:10","codes":[{"authorDate":"2020-11-25 03:13:15","commitOrder":3,"curCode":"    public Enumeration queryElements(HintContext ctx) {\n        if (elementDecls == null) return org.openide.util.Enumerations.empty();;\n        \n        Node node = ((Node)ctx).getParentNode();        \n        Set<String> elements = null;\n        \n        if (node instanceof Element) {\n            Element el = (Element) node;\n            if (el == null) return org.openide.util.Enumerations.empty();;\n\n            \r\n            Object model = null;\n            String prefs = System.getProperty(\"netbeans.xml.completion\", \"default\"); \r\n            if (\"fast\".equals(prefs)) {                                      \r\n                model = null;\n            } else if (\"default\".equals(prefs) || \"accurate\".equals(prefs)) { \r\n                model = contentModels.get(el.getTagName());\n            } else {\n                model = null;\n            }\n            if (model instanceof String) {\n                model = ContentModel.parseContentModel((String)model);\n                contentModels.put(el.getTagName(), model);\n            }\n            if (model instanceof ContentModel) {\n                Enumeration en = ((ContentModel)model).whatCanFollow(new PreviousEnumeration(el, ctx));\n                if (en == null) return org.openide.util.Enumerations.empty();\n                String prefix = ctx.getCurrentPrefix();\n                elements = new TreeSet<>();\n                while (en.hasMoreElements()) {\n                    String next = (String) en.nextElement();\n                    if (next.startsWith(prefix)) {\n                        elements.add(next);\n                    }\n                }\n            }\n            \r\n            if (elements == null) {\n                elements = (Set) elementDecls.get(el.getTagName());\n            }\n        } else if (node instanceof Document) {\n            elements = elementDecls.keySet();  \r\n        } else {\n            return org.openide.util.Enumerations.empty();\n        }\n                \n        if (elements == null) return org.openide.util.Enumerations.empty();;\n        String prefix = ctx.getCurrentPrefix();\n        \n        LinkedList list = new LinkedList ();\n        Iterator<String> it = elements.iterator();\n        while ( it.hasNext()) {\n            String next = it.next();\n            if (next.startsWith(prefix)) {\n                boolean empty = emptyElements.contains(next);\n                list.add(new MyElement(next, empty));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","date":"2020-11-25 03:13:15","endLine":230,"groupId":"106679","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"queryElements","params":"(HintContextctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/4f/c1b3092547f0771d6d5ca8c25449f5fdaa90fa.src","preCode":"    public Enumeration queryElements(HintContext ctx) {\n        if (elementDecls == null) return org.openide.util.Enumerations.empty();;\n        \n        Node node = ((Node)ctx).getParentNode();        \n        Set elements = null;\n        \n        if (node instanceof Element) {\n            Element el = (Element) node;\n            if (el == null) return org.openide.util.Enumerations.empty();;\n\n            \r\n            Object model = null;\n            String prefs = System.getProperty(\"netbeans.xml.completion\", \"default\"); \r\n            if (\"fast\".equals(prefs)) {                                      \r\n                model = null;\n            } else if (\"default\".equals(prefs) || \"accurate\".equals(prefs)) { \r\n                model = contentModels.get(el.getTagName());\n            } else {\n                model = null;\n            }\n            if (model instanceof String) {\n                model = ContentModel.parseContentModel((String)model);\n                contentModels.put(el.getTagName(), model);\n            }\n            if (model instanceof ContentModel) {\n                Enumeration en = ((ContentModel)model).whatCanFollow(new PreviousEnumeration(el, ctx));\n                if (en == null) return org.openide.util.Enumerations.empty();\n                String prefix = ctx.getCurrentPrefix();\n                elements = new TreeSet();\n                while (en.hasMoreElements()) {\n                    String next = (String) en.nextElement();\n                    if (next.startsWith(prefix)) {\n                        elements.add(next);\n                    }\n                }\n            }\n            \r\n            if (elements == null) {\n                elements = (Set) elementDecls.get(el.getTagName());\n            }\n        } else if (node instanceof Document) {\n            elements = elementDecls.keySet();  \r\n        } else {\n            return org.openide.util.Enumerations.empty();\n        }\n                \n        if (elements == null) return org.openide.util.Enumerations.empty();;\n        String prefix = ctx.getCurrentPrefix();\n        \n        LinkedList list = new LinkedList ();\n        Iterator<String> it = elements.iterator();\n        while ( it.hasNext()) {\n            String next = it.next();\n            if (next.startsWith(prefix)) {\n                boolean empty = emptyElements.contains(next);\n                list.add(new MyElement(next, empty));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","realPath":"ide/xml.core/src/org/netbeans/modules/xml/dtd/grammar/DTDGrammar.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2020-03-13 04:47:10","commitOrder":3,"curCode":"    public Enumeration queryNotations(String prefix) {\n        if (notations == null) return org.openide.util.Enumerations.empty();;\n        \n        LinkedList list = new LinkedList ();\n        Iterator<String> it = notations.iterator();\n        while ( it.hasNext()) {\n            String next = it.next();\n            if (next.startsWith(prefix)) {\n                list.add (new MyNotation(next));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","date":"2020-03-13 04:47:10","endLine":249,"groupId":"106679","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"queryNotations","params":"(Stringprefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/9a/e3b590f3b1ffae05a8d11be99133018fe5b47e.src","preCode":"    public Enumeration queryNotations(String prefix) {\n        if (notations == null) return org.openide.util.Enumerations.empty();;\n        \n        LinkedList list = new LinkedList ();\n        Iterator<String> it = notations.iterator();\n        while ( it.hasNext()) {\n            String next = it.next();\n            if (next.startsWith(prefix)) {\n                list.add (new MyNotation(next));\n            }\n        }\n        \n        return Collections.enumeration (list);\n    }\n","realPath":"ide/xml.core/src/org/netbeans/modules/xml/dtd/grammar/DTDGrammar.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"N"}],"commitId":"e990d2bc21c2f7a11b1480aa46be4f663b825a34","commitMessage":"@@@Merge pull request #2556 from BradWalker/cleanup_set_rawtype_warnings\n\n[NETBEANS-5053] - cleanup Set raw type warnings..","date":"2020-11-25 03:13:15","modifiedFileCount":"26","status":"M","submitter":"Matthias Bl?sing"}]
