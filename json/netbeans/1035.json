[{"authorTime":"2018-08-22 22:28:19","codes":[{"authorDate":"2020-07-21 03:44:12","commitOrder":2,"curCode":"        public DebuggerEngine[] getEngines() {\n            if (engineListener == null) {\n                engineListener = new AntEngineListener();\n                DebuggerManager.getDebuggerManager().addDebuggerListener(\n                        WeakListeners.create(DebuggerManagerListener.class,\n                                             engineListener,\n                                             DebuggerManager.getDebuggerManager()));\n            }\n            DebuggerEngine[] engines = DebuggerManager.getDebuggerManager().getDebuggerEngines();\n            if (engines.length == 0) {\n                return null;\n            }\n            if (engines.length == 1) {\n                if (isAntEngine(engines[0])) {\n                    return engines;\n                } else {\n                    return null;\n                }\n            }\n            \r\n            List<DebuggerEngine> antEngines = null;\n            for (DebuggerEngine e : engines) {\n                if (isAntEngine(e)) {\n                    if (antEngines == null) {\n                        antEngines = new ArrayList<DebuggerEngine>();\n                    }\n                    antEngines.add(e);\n                }\n            }\n            if (antEngines == null) {\n                return null;\n            } else {\n                return antEngines.toArray(new DebuggerEngine[]{});\n            }\n        }\n","date":"2020-07-21 03:44:12","endLine":175,"groupId":"25897","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getEngines","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/e3/40d84b21c7e7bebc0693ab30db2b67207f515d.src","preCode":"        public DebuggerEngine[] getEngines() {\n            if (engineListener == null) {\n                engineListener = new AntEngineListener();\n                DebuggerManager.getDebuggerManager().addDebuggerListener(\n                        WeakListeners.create(DebuggerManagerListener.class,\n                                             engineListener,\n                                             DebuggerManager.getDebuggerManager()));\n            }\n            DebuggerEngine[] engines = DebuggerManager.getDebuggerManager().getDebuggerEngines();\n            if (engines.length == 0) {\n                return null;\n            }\n            if (engines.length == 1) {\n                if (isAntEngine(engines[0])) {\n                    return engines;\n                } else {\n                    return null;\n                }\n            }\n            \r\n            List<DebuggerEngine> antEngines = null;\n            for (DebuggerEngine e : engines) {\n                if (isAntEngine(e)) {\n                    if (antEngines == null) {\n                        antEngines = new ArrayList<DebuggerEngine>();\n                    }\n                    antEngines.add(e);\n                }\n            }\n            if (antEngines == null) {\n                return null;\n            } else {\n                return antEngines.toArray(new DebuggerEngine[]{});\n            }\n        }\n","realPath":"cpplite/cpplite.debugger/src/org/netbeans/modules/cpplite/debugger/breakpoints/CPPLiteBreakpoint.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"B"},{"authorDate":"2018-08-22 22:28:19","commitOrder":2,"curCode":"        public DebuggerEngine[] getEngines() {\n            if (engineListener == null) {\n                engineListener = new AntEngineListener();\n                DebuggerManager.getDebuggerManager().addDebuggerListener(\n                        WeakListeners.create(DebuggerManagerListener.class,\n                                             engineListener,\n                                             DebuggerManager.getDebuggerManager()));\n            }\n            DebuggerEngine[] engines = DebuggerManager.getDebuggerManager().getDebuggerEngines();\n            if (engines.length == 0) {\n                return null;\n            }\n            if (engines.length == 1) {\n                if (isAntEngine(engines[0])) {\n                    return engines;\n                } else {\n                    return null;\n                }\n            }\n            \r\n            List<DebuggerEngine> antEngines = null;\n            for (DebuggerEngine e : engines) {\n                if (isAntEngine(e)) {\n                    if (antEngines == null) {\n                        antEngines = new ArrayList<DebuggerEngine>();\n                    }\n                    antEngines.add(e);\n                }\n            }\n            if (antEngines == null) {\n                return null;\n            } else {\n                return antEngines.toArray(new DebuggerEngine[]{});\n            }\n        }\n","date":"2018-08-22 22:28:19","endLine":175,"groupId":"25897","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"getEngines","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/7b/68bf779c5083af9cb24458ce022a92eb7be8c3.src","preCode":"        public DebuggerEngine[] getEngines() {\n            if (engineListener == null) {\n                engineListener = new AntEngineListener();\n                DebuggerManager.getDebuggerManager().addDebuggerListener(\n                        WeakListeners.create(DebuggerManagerListener.class,\n                                             engineListener,\n                                             DebuggerManager.getDebuggerManager()));\n            }\n            DebuggerEngine[] engines = DebuggerManager.getDebuggerManager().getDebuggerEngines();\n            if (engines.length == 0) {\n                return null;\n            }\n            if (engines.length == 1) {\n                if (isAntEngine(engines[0])) {\n                    return engines;\n                } else {\n                    return null;\n                }\n            }\n            \r\n            List<DebuggerEngine> antEngines = null;\n            for (DebuggerEngine e : engines) {\n                if (isAntEngine(e)) {\n                    if (antEngines == null) {\n                        antEngines = new ArrayList<DebuggerEngine>();\n                    }\n                    antEngines.add(e);\n                }\n            }\n            if (antEngines == null) {\n                return null;\n            } else {\n                return antEngines.toArray(new DebuggerEngine[]{});\n            }\n        }\n","realPath":"java/ant.debugger/src/org/netbeans/modules/ant/debugger/breakpoints/AntBreakpoint.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"NB"}],"commitId":"d50cf8f526554dd8cae2003b57ffa0783467da02","commitMessage":"@@@Temporary lightweight C/C++ support\n\n","date":"2020-07-21 03:44:12","modifiedFileCount":"3","status":"M","submitter":"Jan Lahoda"},{"authorTime":"2018-08-22 22:28:19","codes":[{"authorDate":"2021-02-18 01:58:51","commitOrder":3,"curCode":"        public DebuggerEngine[] getEngines() {\n            if (engineListener == null) {\n                engineListener = new CPPEngineListener();\n                DebuggerManager.getDebuggerManager().addDebuggerListener(\n                        WeakListeners.create(DebuggerManagerListener.class,\n                                             engineListener,\n                                             DebuggerManager.getDebuggerManager()));\n            }\n            DebuggerEngine[] engines = DebuggerManager.getDebuggerManager().getDebuggerEngines();\n            if (engines.length == 0) {\n                return null;\n            }\n            if (engines.length == 1) {\n                if (isCPPEngine(engines[0])) {\n                    return engines;\n                } else {\n                    return null;\n                }\n            }\n            \r\n            List<DebuggerEngine> antEngines = null;\n            for (DebuggerEngine e : engines) {\n                if (isCPPEngine(e)) {\n                    if (antEngines == null) {\n                        antEngines = new ArrayList<>();\n                    }\n                    antEngines.add(e);\n                }\n            }\n            if (antEngines == null) {\n                return null;\n            } else {\n                return antEngines.toArray(new DebuggerEngine[antEngines.size()]);\n            }\n        }\n","date":"2021-02-18 01:58:51","endLine":207,"groupId":"1035","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getEngines","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/6f/063ce6eef43ba76c5d31cc354ae83c83ab24bf.src","preCode":"        public DebuggerEngine[] getEngines() {\n            if (engineListener == null) {\n                engineListener = new AntEngineListener();\n                DebuggerManager.getDebuggerManager().addDebuggerListener(\n                        WeakListeners.create(DebuggerManagerListener.class,\n                                             engineListener,\n                                             DebuggerManager.getDebuggerManager()));\n            }\n            DebuggerEngine[] engines = DebuggerManager.getDebuggerManager().getDebuggerEngines();\n            if (engines.length == 0) {\n                return null;\n            }\n            if (engines.length == 1) {\n                if (isAntEngine(engines[0])) {\n                    return engines;\n                } else {\n                    return null;\n                }\n            }\n            \r\n            List<DebuggerEngine> antEngines = null;\n            for (DebuggerEngine e : engines) {\n                if (isAntEngine(e)) {\n                    if (antEngines == null) {\n                        antEngines = new ArrayList<DebuggerEngine>();\n                    }\n                    antEngines.add(e);\n                }\n            }\n            if (antEngines == null) {\n                return null;\n            } else {\n                return antEngines.toArray(new DebuggerEngine[]{});\n            }\n        }\n","realPath":"cpplite/cpplite.debugger/src/org/netbeans/modules/cpplite/debugger/breakpoints/CPPLiteBreakpoint.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"},{"authorDate":"2018-08-22 22:28:19","commitOrder":3,"curCode":"        public DebuggerEngine[] getEngines() {\n            if (engineListener == null) {\n                engineListener = new AntEngineListener();\n                DebuggerManager.getDebuggerManager().addDebuggerListener(\n                        WeakListeners.create(DebuggerManagerListener.class,\n                                             engineListener,\n                                             DebuggerManager.getDebuggerManager()));\n            }\n            DebuggerEngine[] engines = DebuggerManager.getDebuggerManager().getDebuggerEngines();\n            if (engines.length == 0) {\n                return null;\n            }\n            if (engines.length == 1) {\n                if (isAntEngine(engines[0])) {\n                    return engines;\n                } else {\n                    return null;\n                }\n            }\n            \r\n            List<DebuggerEngine> antEngines = null;\n            for (DebuggerEngine e : engines) {\n                if (isAntEngine(e)) {\n                    if (antEngines == null) {\n                        antEngines = new ArrayList<DebuggerEngine>();\n                    }\n                    antEngines.add(e);\n                }\n            }\n            if (antEngines == null) {\n                return null;\n            } else {\n                return antEngines.toArray(new DebuggerEngine[]{});\n            }\n        }\n","date":"2018-08-22 22:28:19","endLine":175,"groupId":"1035","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getEngines","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/7b/68bf779c5083af9cb24458ce022a92eb7be8c3.src","preCode":"        public DebuggerEngine[] getEngines() {\n            if (engineListener == null) {\n                engineListener = new AntEngineListener();\n                DebuggerManager.getDebuggerManager().addDebuggerListener(\n                        WeakListeners.create(DebuggerManagerListener.class,\n                                             engineListener,\n                                             DebuggerManager.getDebuggerManager()));\n            }\n            DebuggerEngine[] engines = DebuggerManager.getDebuggerManager().getDebuggerEngines();\n            if (engines.length == 0) {\n                return null;\n            }\n            if (engines.length == 1) {\n                if (isAntEngine(engines[0])) {\n                    return engines;\n                } else {\n                    return null;\n                }\n            }\n            \r\n            List<DebuggerEngine> antEngines = null;\n            for (DebuggerEngine e : engines) {\n                if (isAntEngine(e)) {\n                    if (antEngines == null) {\n                        antEngines = new ArrayList<DebuggerEngine>();\n                    }\n                    antEngines.add(e);\n                }\n            }\n            if (antEngines == null) {\n                return null;\n            } else {\n                return antEngines.toArray(new DebuggerEngine[]{});\n            }\n        }\n","realPath":"java/ant.debugger/src/org/netbeans/modules/ant/debugger/breakpoints/AntBreakpoint.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"N"}],"commitId":"a20782d68fc747e321d0c2212fec662022a63b7a","commitMessage":"@@@Merge pull request #2770 from neilcsmith-net/del-master-nb123b3\n\nSync delivery to master post 12.3-beta3 with conflicts resolved","date":"2021-02-18 01:58:51","modifiedFileCount":"24","status":"M","submitter":"Neil C Smith"}]
