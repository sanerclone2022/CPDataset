[{"authorTime":"2018-08-26 22:43:11","codes":[{"authorDate":"2018-08-26 22:43:11","commitOrder":1,"curCode":"    public AttributeSet getFontColors(String highlightName) {\n        assert highlightName != null : \"The parameter highlightName must not be null.\"; \r\n\n        AttributeSet attribs = null;\n        Map<String, AttributeSet> coloringsMap = EditorSettings.getDefault().getHighlightings(profile);\n        if (coloringsMap != null) {\n            attribs = coloringsMap.get(highlightName);\n        }\n\n        if (highlightName.equals(FontColorNames.DEFAULT_COLORING) && (attribs == null || attribs.getAttribute(StyleConstants.FontFamily) == null) ) {\n            ArrayList<AttributeSet> colorings = new ArrayList<AttributeSet>();\n            String name = highlightName;\n\n            for (FontColorSettingsImpl fcsi : allFcsi) {\n                name = processLayer(fcsi, name, colorings);\n            }\n\n            colorings.add(getHardcodedDefaultColoring());\n            colorings.add(AttributesUtilities.createImmutable(\n                    EditorStyleConstants.RenderingHints, getRenderingHints()));\n\n            return AttributesUtilities.createImmutable(colorings.toArray(new AttributeSet[colorings.size()]));\n\n        }\n\n\r\n        return attribs;\n    }\n","date":"2018-08-26 22:43:11","endLine":137,"groupId":"29906","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getFontColors","params":"(StringhighlightName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/f4/b43b7afedec6352512b89f59b1674b05a332b3.src","preCode":"    public AttributeSet getFontColors(String highlightName) {\n        assert highlightName != null : \"The parameter highlightName must not be null.\"; \r\n\n        AttributeSet attribs = null;\n        Map<String, AttributeSet> coloringsMap = EditorSettings.getDefault().getHighlightings(profile);\n        if (coloringsMap != null) {\n            attribs = coloringsMap.get(highlightName);\n        }\n\n        if (highlightName.equals(FontColorNames.DEFAULT_COLORING) && (attribs == null || attribs.getAttribute(StyleConstants.FontFamily) == null) ) {\n            ArrayList<AttributeSet> colorings = new ArrayList<AttributeSet>();\n            String name = highlightName;\n\n            for (FontColorSettingsImpl fcsi : allFcsi) {\n                name = processLayer(fcsi, name, colorings);\n            }\n\n            colorings.add(getHardcodedDefaultColoring());\n            colorings.add(AttributesUtilities.createImmutable(\n                    EditorStyleConstants.RenderingHints, getRenderingHints()));\n\n            return AttributesUtilities.createImmutable(colorings.toArray(new AttributeSet[colorings.size()]));\n\n        }\n\n\r\n        return attribs;\n    }\n","realPath":"ide/editor.settings.storage/src/org/netbeans/modules/editor/settings/storage/fontscolors/CompositeFCS.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"B"},{"authorDate":"2018-08-26 22:43:11","commitOrder":1,"curCode":"    private AttributeSet findColoringForToken(String tokenName) {\n        ArrayList<AttributeSet> colorings = new ArrayList<AttributeSet>();\n        String name = tokenName;\n\n        for (FontColorSettingsImpl fcsi : allFcsi) {\n            name = processLayer(fcsi, name, colorings);\n        }\n\n        if (colorings.size() > 0) {\n            return AttributesUtilities.createImmutable(colorings.toArray(new AttributeSet[colorings.size()]));\n        } else {\n            return NULL;\n        }\n    }\n","date":"2018-08-26 22:43:11","endLine":184,"groupId":"29910","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findColoringForToken","params":"(StringtokenName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/f4/b43b7afedec6352512b89f59b1674b05a332b3.src","preCode":"    private AttributeSet findColoringForToken(String tokenName) {\n        ArrayList<AttributeSet> colorings = new ArrayList<AttributeSet>();\n        String name = tokenName;\n\n        for (FontColorSettingsImpl fcsi : allFcsi) {\n            name = processLayer(fcsi, name, colorings);\n        }\n\n        if (colorings.size() > 0) {\n            return AttributesUtilities.createImmutable(colorings.toArray(new AttributeSet[colorings.size()]));\n        } else {\n            return NULL;\n        }\n    }\n","realPath":"ide/editor.settings.storage/src/org/netbeans/modules/editor/settings/storage/fontscolors/CompositeFCS.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"}],"commitId":"0f2e98d513deaedccef831ee9cfc08d09f3650b6","commitMessage":"@@@Merge pull request #791 from ralphbenjamin/NETBEANS-1172_move_ide_modules_to_ide_subdirectory\n\n[NETBEANS-1172] move ide modules to ide subdirectory","date":"2018-08-26 22:43:11","modifiedFileCount":"0","status":"B","submitter":"Geertjan Wielenga"},{"authorTime":"2019-11-28 21:59:23","codes":[{"authorDate":"2019-11-28 21:59:23","commitOrder":2,"curCode":"    public AttributeSet getFontColors(String highlightName) {\n        assert highlightName != null : \"The parameter highlightName must not be null.\"; \r\n\n        AttributeSet attribs = null;\n        Map<String, AttributeSet> coloringsMap = EditorSettings.getDefault().getHighlightings(profile);\n        if (coloringsMap != null) {\n            attribs = coloringsMap.get(highlightName);\n        }\n\n        if (highlightName.equals(FontColorNames.DEFAULT_COLORING) && (attribs == null || attribs.getAttribute(StyleConstants.FontFamily) == null) ) {\n            ArrayList<AttributeSet> colorings = new ArrayList<>();\n            String name = highlightName;\n\n            for (FontColorSettingsImpl fcsi : allFcsi) {\n                name = processLayer(fcsi, name, colorings);\n            }\n\n            colorings.add(getHardcodedDefaultColoring());\n            colorings.add(AttributesUtilities.createImmutable(\n                    EditorStyleConstants.RenderingHints, getRenderingHints()));\n\n            return AttributesUtilities.createImmutable(colorings.toArray(new AttributeSet[colorings.size()]));\n\n        }\n\n\r\n        return attribs;\n    }\n","date":"2019-11-28 21:59:23","endLine":136,"groupId":"101102","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getFontColors","params":"(StringhighlightName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/57/ba324c31c326b05b3589a4c221d08de633c36c.src","preCode":"    public AttributeSet getFontColors(String highlightName) {\n        assert highlightName != null : \"The parameter highlightName must not be null.\"; \r\n\n        AttributeSet attribs = null;\n        Map<String, AttributeSet> coloringsMap = EditorSettings.getDefault().getHighlightings(profile);\n        if (coloringsMap != null) {\n            attribs = coloringsMap.get(highlightName);\n        }\n\n        if (highlightName.equals(FontColorNames.DEFAULT_COLORING) && (attribs == null || attribs.getAttribute(StyleConstants.FontFamily) == null) ) {\n            ArrayList<AttributeSet> colorings = new ArrayList<AttributeSet>();\n            String name = highlightName;\n\n            for (FontColorSettingsImpl fcsi : allFcsi) {\n                name = processLayer(fcsi, name, colorings);\n            }\n\n            colorings.add(getHardcodedDefaultColoring());\n            colorings.add(AttributesUtilities.createImmutable(\n                    EditorStyleConstants.RenderingHints, getRenderingHints()));\n\n            return AttributesUtilities.createImmutable(colorings.toArray(new AttributeSet[colorings.size()]));\n\n        }\n\n\r\n        return attribs;\n    }\n","realPath":"ide/editor.settings.storage/src/org/netbeans/modules/editor/settings/storage/fontscolors/CompositeFCS.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2019-11-28 21:59:23","commitOrder":2,"curCode":"    private AttributeSet findColoringForToken(String tokenName) {\n        ArrayList<AttributeSet> colorings = new ArrayList<>();\n        String name = tokenName;\n\n        for (FontColorSettingsImpl fcsi : allFcsi) {\n            name = processLayer(fcsi, name, colorings);\n        }\n\n        if (colorings.size() > 0) {\n            return AttributesUtilities.createImmutable(colorings.toArray(new AttributeSet[colorings.size()]));\n        } else {\n            return NULL;\n        }\n    }\n","date":"2019-11-28 21:59:23","endLine":183,"groupId":"101102","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"findColoringForToken","params":"(StringtokenName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/57/ba324c31c326b05b3589a4c221d08de633c36c.src","preCode":"    private AttributeSet findColoringForToken(String tokenName) {\n        ArrayList<AttributeSet> colorings = new ArrayList<AttributeSet>();\n        String name = tokenName;\n\n        for (FontColorSettingsImpl fcsi : allFcsi) {\n            name = processLayer(fcsi, name, colorings);\n        }\n\n        if (colorings.size() > 0) {\n            return AttributesUtilities.createImmutable(colorings.toArray(new AttributeSet[colorings.size()]));\n        } else {\n            return NULL;\n        }\n    }\n","realPath":"ide/editor.settings.storage/src/org/netbeans/modules/editor/settings/storage/fontscolors/CompositeFCS.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"1ee3fe72a2d30151bda5ce55213d3d1ba1185f52","commitMessage":"@@@Merge pull request #1661 from lkishalmi/NETBEANS-3440\n\n[NETBEANS-3440] Allow to define a palette for fontcolors XML Schema.","date":"2019-11-28 21:59:23","modifiedFileCount":"14","status":"M","submitter":"Laszlo Kishalmi"}]
