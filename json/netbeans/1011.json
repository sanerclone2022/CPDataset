[{"authorTime":"2021-01-22 10:41:23","codes":[{"authorDate":"2021-01-22 10:41:23","commitOrder":1,"curCode":"    public String getShortDescription (NodeModel model, Object node) throws UnknownTypeException {\n        EvalWatch ew;\n        synchronized (evalWatches) {\n            ew = evalWatches.get(node);\n        }\n        if (ew != null) {\n            ew.startEvaluate();\n            switch (ew.getStatus()) {\n                case READY:\n                    CPPVariable result = ew.getResult();\n                    return ew.getExpression() + \" = \" + result.getValue();\n                case FAILED:\n                    EvaluateException exc = ew.getException();\n                    return exc.getLocalizedMessage();\n            }\n        }\n        return model.getShortDescription(node);\n    }\n","date":"2021-01-22 10:41:23","endLine":182,"groupId":"63779","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getShortDescription","params":"(NodeModelmodel@Objectnode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/ab/f974078d9a4966f854d04727b48aa1ffa5aadb.src","preCode":"    public String getShortDescription (NodeModel model, Object node) throws UnknownTypeException {\n        EvalWatch ew;\n        synchronized (evalWatches) {\n            ew = evalWatches.get(node);\n        }\n        if (ew != null) {\n            ew.startEvaluate();\n            switch (ew.getStatus()) {\n                case READY:\n                    CPPVariable result = ew.getResult();\n                    return ew.getExpression() + \" = \" + result.getValue();\n                case FAILED:\n                    EvaluateException exc = ew.getException();\n                    return exc.getLocalizedMessage();\n            }\n        }\n        return model.getShortDescription(node);\n    }\n","realPath":"cpplite/cpplite.debugger/src/org/netbeans/modules/cpplite/debugger/models/WatchesModel.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"},{"authorDate":"2021-01-22 10:41:23","commitOrder":1,"curCode":"    public Object getValueAt (Object node, String columnID) throws UnknownTypeException {\n        boolean showValue = columnID == Constants.WATCH_VALUE_COLUMN_ID;\n        if (showValue || columnID == Constants.WATCH_TYPE_COLUMN_ID) {\n            EvalWatch ew;\n            synchronized (evalWatches) {\n                ew = evalWatches.get(node);\n            }\n            if (ew != null) {\n                ew.startEvaluate();\n                switch (ew.getStatus()) {\n                    case READY:\n                        CPPVariable result = ew.getResult();\n                        if (showValue) {\n                            return result.getValue();\n                        } else {\n                            return result.getType();\n                        }\n                    case FAILED:\n                        if (showValue) {\n                            EvaluateException exc = ew.getException();\n                            return exc.getLocalizedMessage();\n                        }\n                }\n                return \"\";\n            }\n        }\n        throw new UnknownTypeException (node);\n    }\n","date":"2021-01-22 10:41:23","endLine":231,"groupId":"63779","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getValueAt","params":"(Objectnode@StringcolumnID)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/ab/f974078d9a4966f854d04727b48aa1ffa5aadb.src","preCode":"    public Object getValueAt (Object node, String columnID) throws UnknownTypeException {\n        boolean showValue = columnID == Constants.WATCH_VALUE_COLUMN_ID;\n        if (showValue || columnID == Constants.WATCH_TYPE_COLUMN_ID) {\n            EvalWatch ew;\n            synchronized (evalWatches) {\n                ew = evalWatches.get(node);\n            }\n            if (ew != null) {\n                ew.startEvaluate();\n                switch (ew.getStatus()) {\n                    case READY:\n                        CPPVariable result = ew.getResult();\n                        if (showValue) {\n                            return result.getValue();\n                        } else {\n                            return result.getType();\n                        }\n                    case FAILED:\n                        if (showValue) {\n                            EvaluateException exc = ew.getException();\n                            return exc.getLocalizedMessage();\n                        }\n                }\n                return \"\";\n            }\n        }\n        throw new UnknownTypeException (node);\n    }\n","realPath":"cpplite/cpplite.debugger/src/org/netbeans/modules/cpplite/debugger/models/WatchesModel.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"B"}],"commitId":"5b677141282c2b6a219417776cb55a02cfe4f628","commitMessage":"@@@Merge pull request #2697 from entlicher/CPPLiteDebugComplete\n\nCompleting the CPPLite debugger: threads.  variables.  watches.  tooltips.  etc...","date":"2021-01-22 10:41:23","modifiedFileCount":"9","status":"B","submitter":"Martin Entlicher"},{"authorTime":"2021-03-22 23:44:49","codes":[{"authorDate":"2021-03-22 23:44:49","commitOrder":2,"curCode":"    public String getShortDescription (NodeModel model, Object node) throws UnknownTypeException {\n        EvalWatch ew;\n        synchronized (evalWatches) {\n            ew = evalWatches.get(node);\n        }\n        if (ew != null) {\n            ew.startEvaluate();\n            switch (ew.getStatus()) {\n                case READY:\n                    NIVariable result = ew.getResult();\n                    return ew.getExpression() + \" = \" + result.getValue();\n                case FAILED:\n                    EvaluateException exc = ew.getException();\n                    return exc.getLocalizedMessage();\n            }\n        }\n        return model.getShortDescription(node);\n    }\n","date":"2021-04-02 05:35:03","endLine":182,"groupId":"1011","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getShortDescription","params":"(NodeModelmodel@Objectnode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/56/707c4c031f209f65502b02ef65f21c54c05681.src","preCode":"    public String getShortDescription (NodeModel model, Object node) throws UnknownTypeException {\n        EvalWatch ew;\n        synchronized (evalWatches) {\n            ew = evalWatches.get(node);\n        }\n        if (ew != null) {\n            ew.startEvaluate();\n            switch (ew.getStatus()) {\n                case READY:\n                    CPPVariable result = ew.getResult();\n                    return ew.getExpression() + \" = \" + result.getValue();\n                case FAILED:\n                    EvaluateException exc = ew.getException();\n                    return exc.getLocalizedMessage();\n            }\n        }\n        return model.getShortDescription(node);\n    }\n","realPath":"cpplite/cpplite.debugger/src/org/netbeans/modules/cpplite/debugger/models/WatchesModel.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2021-03-22 23:44:49","commitOrder":2,"curCode":"    public Object getValueAt (Object node, String columnID) throws UnknownTypeException {\n        boolean showValue = columnID == Constants.WATCH_VALUE_COLUMN_ID;\n        if (showValue || columnID == Constants.WATCH_TYPE_COLUMN_ID) {\n            EvalWatch ew;\n            synchronized (evalWatches) {\n                ew = evalWatches.get(node);\n            }\n            if (ew != null) {\n                ew.startEvaluate();\n                switch (ew.getStatus()) {\n                    case READY:\n                        NIVariable result = ew.getResult();\n                        if (showValue) {\n                            return result.getValue();\n                        } else {\n                            return result.getType();\n                        }\n                    case FAILED:\n                        if (showValue) {\n                            EvaluateException exc = ew.getException();\n                            return exc.getLocalizedMessage();\n                        }\n                }\n                return \"\";\n            }\n        }\n        throw new UnknownTypeException (node);\n    }\n","date":"2021-04-02 05:35:03","endLine":231,"groupId":"1011","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getValueAt","params":"(Objectnode@StringcolumnID)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/56/707c4c031f209f65502b02ef65f21c54c05681.src","preCode":"    public Object getValueAt (Object node, String columnID) throws UnknownTypeException {\n        boolean showValue = columnID == Constants.WATCH_VALUE_COLUMN_ID;\n        if (showValue || columnID == Constants.WATCH_TYPE_COLUMN_ID) {\n            EvalWatch ew;\n            synchronized (evalWatches) {\n                ew = evalWatches.get(node);\n            }\n            if (ew != null) {\n                ew.startEvaluate();\n                switch (ew.getStatus()) {\n                    case READY:\n                        CPPVariable result = ew.getResult();\n                        if (showValue) {\n                            return result.getValue();\n                        } else {\n                            return result.getType();\n                        }\n                    case FAILED:\n                        if (showValue) {\n                            EvaluateException exc = ew.getException();\n                            return exc.getLocalizedMessage();\n                        }\n                }\n                return \"\";\n            }\n        }\n        throw new UnknownTypeException (node);\n    }\n","realPath":"cpplite/cpplite.debugger/src/org/netbeans/modules/cpplite/debugger/models/WatchesModel.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"0344bcf958a48aff2f941738a0f7711bb5d2f3f9","commitMessage":"@@@Native debugging of GraalVM's native images.\n","date":"2021-04-02 05:35:03","modifiedFileCount":"29","status":"M","submitter":"Martin Entlicher"}]
