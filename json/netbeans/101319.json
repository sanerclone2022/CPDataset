[{"authorTime":"2018-08-18 19:22:43","codes":[{"authorDate":"2018-08-18 19:22:43","commitOrder":1,"curCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","date":"2018-08-18 19:22:43","endLine":136,"groupId":"8091","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkPermission","params":"(Permissionp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/bb/888e588943f9ff9aaadf9e500a1d395cef2493.src","preCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","realPath":"platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/CountingSecurityManager.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"},{"authorDate":"2018-08-18 19:22:43","commitOrder":1,"curCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","date":"2018-08-18 19:22:43","endLine":142,"groupId":"8091","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkPermission","params":"(Permissionp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/0e/6bf793cce4ee5abd0d6a73c15242914b9539f1.src","preCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","realPath":"platform/core.startup/test/unit/src/org/netbeans/core/startup/layers/CountingSecurityManager.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"B"}],"commitId":"abe93502d5010781955ad22102893d03326c72e2","commitMessage":"@@@Merge pull request #536 from JaroslavTulach/jtulach/PlatformCluster\n\nPer-cluster repository layout","date":"2018-08-18 19:22:43","modifiedFileCount":"0","status":"B","submitter":"Geertjan Wielenga"},{"authorTime":"2019-01-02 21:23:19","codes":[{"authorDate":"2019-01-02 21:23:19","commitOrder":2,"curCode":"    public void checkPermission(Permission p) {\n        if (p instanceof MaxCountPerm) {\n            checkMemberAccess(null, ((MaxCountPerm) p).maxCount);\n            return;\n        }\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","date":"2019-01-02 22:34:54","endLine":171,"groupId":"101319","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"checkPermission","params":"(Permissionp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/b7/3f92923bf02a3b2f35845604086e25ad6b4fd0.src","preCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","realPath":"platform/netbinox/test/unit/src/org/netbeans/modules/netbinox/CountingSecurityManager.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"},{"authorDate":"2019-01-02 21:23:19","commitOrder":2,"curCode":"    public void checkPermission(Permission p) {\n        if (p instanceof MaxCountCheck) {\n            checkMemberAccess(null, ((MaxCountCheck) p).maxCount);\n            return;\n        }\n\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","date":"2019-01-02 22:34:54","endLine":176,"groupId":"101319","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"checkPermission","params":"(Permissionp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/3f/cde0d701900415f89666ffa89f93dc7eb650ce.src","preCode":"    public void checkPermission(Permission p) {\n        if (isDisabled()) {\n            return;\n        }\n        if (p instanceof RuntimePermission && \"setSecurityManager\".equals(p.getName())) {\n            try {\n                ClassLoader l = Thread.currentThread().getContextClassLoader();\n                Class<?> manClass = Class.forName(\"org.netbeans.TopSecurityManager\", false, l);\n                man = (SecurityManager) manClass.newInstance();\n            } catch (Exception ex) {\n                throw new IllegalStateException(ex);\n            }\n            throw new SecurityException();\n        }\n    }\n","realPath":"platform/core.startup/test/unit/src/org/netbeans/core/startup/layers/CountingSecurityManager.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"0d766ac6a7ab0bcb7005360382c3a1de45d89375","commitMessage":"@@@checkMemberAccess method and other inaccessible classes as of JDK11\n","date":"2019-01-02 22:34:54","modifiedFileCount":"5","status":"M","submitter":"Jaroslav Tulach"}]
