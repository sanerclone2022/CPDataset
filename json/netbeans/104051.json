[{"authorTime":"2018-08-26 22:43:11","codes":[{"authorDate":"2018-08-26 22:43:11","commitOrder":1,"curCode":"    public void implement() throws Exception {\n        Source source = Source.create(sourceFile);\n        final Document doc = source.getDocument(false);\n        ParserManager.parse(Collections.singleton(source), new UserTask() {\n\n            @Override\n            public void run(ResultIterator resultIterator) throws Exception {\n                \r\n                Result result = resultIterator.getParserResult();\n                if(!(result instanceof HtmlParserResult)) {\n                    return ;\n                }\n                ModificationResult modification = new ModificationResult();\n                if(HtmlSourceUtils.importStyleSheet(modification, (HtmlParserResult)result, externalStylesheet)) {\n                    modification.commit();\n\r\n\r\n\r\n\r\n                }\n            }\n        });\n        \n    }\n","date":"2018-08-26 22:43:11","endLine":85,"groupId":"17690","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"implement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/fb/5e5d977f7f3cee47501323116df02c400c512b.src","preCode":"    public void implement() throws Exception {\n        Source source = Source.create(sourceFile);\n        final Document doc = source.getDocument(false);\n        ParserManager.parse(Collections.singleton(source), new UserTask() {\n\n            @Override\n            public void run(ResultIterator resultIterator) throws Exception {\n                \r\n                Result result = resultIterator.getParserResult();\n                if(!(result instanceof HtmlParserResult)) {\n                    return ;\n                }\n                ModificationResult modification = new ModificationResult();\n                if(HtmlSourceUtils.importStyleSheet(modification, (HtmlParserResult)result, externalStylesheet)) {\n                    modification.commit();\n\r\n\r\n\r\n\r\n                }\n            }\n        });\n        \n    }\n","realPath":"ide/html.editor/src/org/netbeans/modules/html/editor/hints/css/AddStylesheetLinkHintFix.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2018-08-26 22:43:11","commitOrder":1,"curCode":"    public void implement() throws Exception {\n        if (createStyleSheet) {\n            FileObject folder = sourceFile.getParent();\n            externalStylesheet = FileUtil.createData(folder, NEW_STYLESHEET_NAME);\n        }\n\n        if (importStyleSheet) {\n            Source source = Source.create(sourceFile);\n            final Document doc = source.getDocument(false);\n            ParserManager.parse(Collections.singleton(source), new UserTask() {\n                @Override\n                public void run(ResultIterator resultIterator) throws Exception {\n                    \r\n                    Result result = resultIterator.getParserResult();\n                    if (!(result instanceof HtmlParserResult)) {\n                        return;\n                    }\n                    ModificationResult modification = new ModificationResult();\n                    if (HtmlSourceUtils.importStyleSheet(modification, (HtmlParserResult) result, externalStylesheet)) {\n                        modification.commit();\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    }\n                }\n            });\n        }\n\n        \r\n        \r\n        final Model model = Utils.createCssSourceModel(Source.create(externalStylesheet));\n        final AtomicReference<ElementHandle> handleRef = new AtomicReference<>();\n        model.runWriteTask(new Model.ModelTask() {\n            @Override\n            public void run(StyleSheet styleSheet) {\n                try {\n                    ModelUtils utils = new ModelUtils(model);\n                    Rule rule = utils.createRule(Collections.singleton(getSelectorText()), Collections.<String>emptyList());\n                    utils.getBody().addRule(rule);\n                    handleRef.set(rule.getElementHandle());\n                    model.applyChanges();\n                } catch (IOException | BadLocationException ex) {\n                    Exceptions.printStackTrace(ex);\n                }\n            }\n        });\n\n        final Model newmodel = Utils.createCssSourceModel(Source.create(externalStylesheet));\n        model.runReadTask(new Model.ModelTask() {\n            @Override\n            public void run(StyleSheet styleSheet) {\n                Rule rule = (Rule) handleRef.get().resolve(newmodel);\n                if (rule != null) {\n                    openLocation(externalStylesheet, rule.getStartOffset());\n                }\n            }\n        });\n    }\n","date":"2018-08-26 22:43:11","endLine":164,"groupId":"17690","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"implement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/36/26fe142beef3972a6b8cefdbd5ea8a4af90569.src","preCode":"    public void implement() throws Exception {\n        if (createStyleSheet) {\n            FileObject folder = sourceFile.getParent();\n            externalStylesheet = FileUtil.createData(folder, NEW_STYLESHEET_NAME);\n        }\n\n        if (importStyleSheet) {\n            Source source = Source.create(sourceFile);\n            final Document doc = source.getDocument(false);\n            ParserManager.parse(Collections.singleton(source), new UserTask() {\n                @Override\n                public void run(ResultIterator resultIterator) throws Exception {\n                    \r\n                    Result result = resultIterator.getParserResult();\n                    if (!(result instanceof HtmlParserResult)) {\n                        return;\n                    }\n                    ModificationResult modification = new ModificationResult();\n                    if (HtmlSourceUtils.importStyleSheet(modification, (HtmlParserResult) result, externalStylesheet)) {\n                        modification.commit();\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    }\n                }\n            });\n        }\n\n        \r\n        \r\n        final Model model = Utils.createCssSourceModel(Source.create(externalStylesheet));\n        final AtomicReference<ElementHandle> handleRef = new AtomicReference<>();\n        model.runWriteTask(new Model.ModelTask() {\n            @Override\n            public void run(StyleSheet styleSheet) {\n                try {\n                    ModelUtils utils = new ModelUtils(model);\n                    Rule rule = utils.createRule(Collections.singleton(getSelectorText()), Collections.<String>emptyList());\n                    utils.getBody().addRule(rule);\n                    handleRef.set(rule.getElementHandle());\n                    model.applyChanges();\n                } catch (IOException | BadLocationException ex) {\n                    Exceptions.printStackTrace(ex);\n                }\n            }\n        });\n\n        final Model newmodel = Utils.createCssSourceModel(Source.create(externalStylesheet));\n        model.runReadTask(new Model.ModelTask() {\n            @Override\n            public void run(StyleSheet styleSheet) {\n                Rule rule = (Rule) handleRef.get().resolve(newmodel);\n                if (rule != null) {\n                    openLocation(externalStylesheet, rule.getStartOffset());\n                }\n            }\n        });\n    }\n","realPath":"ide/html.editor/src/org/netbeans/modules/html/editor/hints/css/CreateRuleInStylesheet.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"}],"commitId":"0f2e98d513deaedccef831ee9cfc08d09f3650b6","commitMessage":"@@@Merge pull request #791 from ralphbenjamin/NETBEANS-1172_move_ide_modules_to_ide_subdirectory\n\n[NETBEANS-1172] move ide modules to ide subdirectory","date":"2018-08-26 22:43:11","modifiedFileCount":"0","status":"B","submitter":"Geertjan Wielenga"},{"authorTime":"2020-10-08 14:17:12","codes":[{"authorDate":"2020-10-08 14:17:12","commitOrder":2,"curCode":"    public void implement() throws Exception {\n        Source source = Source.create(sourceFile);\n        final Document doc = source.getDocument(false);\n        ParserManager.parse(Collections.singleton(source), new UserTask() {\n\n            @Override\n            public void run(ResultIterator resultIterator) throws Exception {\n                \r\n                Result result = resultIterator.getParserResult();\n                if(!(result instanceof HtmlParsingResult)) {\n                    return ;\n                }\n                ModificationResult modification = new ModificationResult();\n                if(HtmlSourceUtils.importStyleSheet(modification, (HtmlParsingResult)result, result.getSnapshot(), externalStylesheet)) {\n                    modification.commit();\n\r\n\r\n\r\n\r\n                }\n            }\n        });\n        \n    }\n","date":"2020-10-08 14:17:12","endLine":84,"groupId":"104051","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"implement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/01/90a50951cf674dfd49961689f8421f15f6e64c.src","preCode":"    public void implement() throws Exception {\n        Source source = Source.create(sourceFile);\n        final Document doc = source.getDocument(false);\n        ParserManager.parse(Collections.singleton(source), new UserTask() {\n\n            @Override\n            public void run(ResultIterator resultIterator) throws Exception {\n                \r\n                Result result = resultIterator.getParserResult();\n                if(!(result instanceof HtmlParserResult)) {\n                    return ;\n                }\n                ModificationResult modification = new ModificationResult();\n                if(HtmlSourceUtils.importStyleSheet(modification, (HtmlParserResult)result, externalStylesheet)) {\n                    modification.commit();\n\r\n\r\n\r\n\r\n                }\n            }\n        });\n        \n    }\n","realPath":"ide/html.editor/src/org/netbeans/modules/html/editor/hints/css/AddStylesheetLinkHintFix.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2020-10-08 14:17:12","commitOrder":2,"curCode":"    public void implement() throws Exception {\n        if (createStyleSheet) {\n            FileObject folder = sourceFile.getParent();\n            externalStylesheet = FileUtil.createData(folder, NEW_STYLESHEET_NAME);\n        }\n\n        if (importStyleSheet) {\n            Source source = Source.create(sourceFile);\n            final Document doc = source.getDocument(false);\n            ParserManager.parse(Collections.singleton(source), new UserTask() {\n                @Override\n                public void run(ResultIterator resultIterator) throws Exception {\n                    \r\n                    Result result = resultIterator.getParserResult();\n                    if (!(result instanceof HtmlParsingResult)) {\n                        return;\n                    }\n                    ModificationResult modification = new ModificationResult();\n                    if (HtmlSourceUtils.importStyleSheet(modification, (HtmlParsingResult)result, result.getSnapshot(), externalStylesheet)) {\n                        modification.commit();\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    }\n                }\n            });\n        }\n\n        \r\n        \r\n        final Model model = Utils.createCssSourceModel(Source.create(externalStylesheet));\n        final AtomicReference<ElementHandle> handleRef = new AtomicReference<>();\n        model.runWriteTask(new Model.ModelTask() {\n            @Override\n            public void run(StyleSheet styleSheet) {\n                try {\n                    ModelUtils utils = new ModelUtils(model);\n                    Rule rule = utils.createRule(Collections.singleton(getSelectorText()), Collections.<String>emptyList());\n                    utils.getBody().addRule(rule);\n                    handleRef.set(rule.getElementHandle());\n                    model.applyChanges();\n                } catch (IOException | BadLocationException ex) {\n                    Exceptions.printStackTrace(ex);\n                }\n            }\n        });\n\n        final Model newmodel = Utils.createCssSourceModel(Source.create(externalStylesheet));\n        model.runReadTask(new Model.ModelTask() {\n            @Override\n            public void run(StyleSheet styleSheet) {\n                Rule rule = (Rule) handleRef.get().resolve(newmodel);\n                if (rule != null) {\n                    openLocation(externalStylesheet, rule.getStartOffset());\n                }\n            }\n        });\n    }\n","date":"2020-10-08 14:17:12","endLine":164,"groupId":"104051","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"implement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-netbeans-10-0.7/blobInfo/CC_OUT/blobs/cf/57ae5265d1d074db81a337ffe99eda4ebd4fcd.src","preCode":"    public void implement() throws Exception {\n        if (createStyleSheet) {\n            FileObject folder = sourceFile.getParent();\n            externalStylesheet = FileUtil.createData(folder, NEW_STYLESHEET_NAME);\n        }\n\n        if (importStyleSheet) {\n            Source source = Source.create(sourceFile);\n            final Document doc = source.getDocument(false);\n            ParserManager.parse(Collections.singleton(source), new UserTask() {\n                @Override\n                public void run(ResultIterator resultIterator) throws Exception {\n                    \r\n                    Result result = resultIterator.getParserResult();\n                    if (!(result instanceof HtmlParserResult)) {\n                        return;\n                    }\n                    ModificationResult modification = new ModificationResult();\n                    if (HtmlSourceUtils.importStyleSheet(modification, (HtmlParserResult) result, externalStylesheet)) {\n                        modification.commit();\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    }\n                }\n            });\n        }\n\n        \r\n        \r\n        final Model model = Utils.createCssSourceModel(Source.create(externalStylesheet));\n        final AtomicReference<ElementHandle> handleRef = new AtomicReference<>();\n        model.runWriteTask(new Model.ModelTask() {\n            @Override\n            public void run(StyleSheet styleSheet) {\n                try {\n                    ModelUtils utils = new ModelUtils(model);\n                    Rule rule = utils.createRule(Collections.singleton(getSelectorText()), Collections.<String>emptyList());\n                    utils.getBody().addRule(rule);\n                    handleRef.set(rule.getElementHandle());\n                    model.applyChanges();\n                } catch (IOException | BadLocationException ex) {\n                    Exceptions.printStackTrace(ex);\n                }\n            }\n        });\n\n        final Model newmodel = Utils.createCssSourceModel(Source.create(externalStylesheet));\n        model.runReadTask(new Model.ModelTask() {\n            @Override\n            public void run(StyleSheet styleSheet) {\n                Rule rule = (Rule) handleRef.get().resolve(newmodel);\n                if (rule != null) {\n                    openLocation(externalStylesheet, rule.getStartOffset());\n                }\n            }\n        });\n    }\n","realPath":"ide/html.editor/src/org/netbeans/modules/html/editor/hints/css/CreateRuleInStylesheet.java","repoName":"netbeans","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"5b96857351f62c971e43f788dcc99ba58f20a0d2","commitMessage":"@@@Merge pull request #2424 from sdedic/sdedic/modularizing2\n\nModularizing Javascript/HTML","date":"2020-10-08 14:17:12","modifiedFileCount":"62","status":"M","submitter":"Svatopluk Dedic"}]
