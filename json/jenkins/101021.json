[{"authorTime":"2008-06-06 07:02:03","codes":[{"authorDate":"2008-06-12 00:23:16","commitOrder":2,"curCode":"    public List<Plugin> getAvailables() {\n        List<Plugin> r = new ArrayList<Plugin>();\n        Data data = getData();\n        if(data ==null)     return Collections.emptyList();\n        for (Plugin p : data.plugins.values()) {\n            if(p.getInstalled()==null)\n                r.add(p);\n        }\n        return r;\n    }\n","date":"2008-06-12 00:23:16","endLine":151,"groupId":"4870","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAvailables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a2/6fad32ee9c43249a8feec1838665f3829962d2.src","preCode":"    public List<Plugin> getAvailables() {\n        List<Plugin> r = new ArrayList<Plugin>();\n        Data data = getData();\n        if(data ==null)     return Collections.emptyList();\n        for (Plugin p : data.plugins.values()) {\n            if(p.getInstalled()==null)\n                r.add(p);\n        }\n        return r;\n    }\n","realPath":"core/src/main/java/hudson/model/UpdateCenter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"},{"authorDate":"2008-06-06 07:02:03","commitOrder":2,"curCode":"    public List<Plugin> getUpdates() {\n        Data data = getData();\n        if(data==null)      return Collections.emptyList(); \r\n\n        List<Plugin> r = new ArrayList<Plugin>();\n        for (PluginWrapper pw : Hudson.getInstance().getPluginManager().getPlugins()) {\n            Plugin p = pw.getUpdateInfo();\n            if(p!=null) r.add(p);\n        }\n\n        return r;\n    }\n","date":"2008-06-06 07:02:03","endLine":168,"groupId":"6777","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c1/2820c3478a4acc6906dfa3186c1f8d94e09de4.src","preCode":"    public List<Plugin> getUpdates() {\n        Data data = getData();\n        if(data==null)      return Collections.emptyList(); \r\n\n        List<Plugin> r = new ArrayList<Plugin>();\n        for (PluginWrapper pw : Hudson.getInstance().getPluginManager().getPlugins()) {\n            Plugin p = pw.getUpdateInfo();\n            if(p!=null) r.add(p);\n        }\n\n        return r;\n    }\n","realPath":"core/src/main/java/hudson/model/UpdateCenter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"NB"}],"commitId":"c8b26e6af01668a4693fd79112c19c9da907d399","commitMessage":"@@@Plugins that are already installed shouldn't show up in the \"available\" list.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@10019 71c3de6d-444a-0410-be80-ed276b4c234a\n","date":"2008-06-12 00:23:16","modifiedFileCount":"1","status":"M","submitter":"kohsuke"},{"authorTime":"2012-08-14 17:46:20","codes":[{"authorDate":"2012-08-14 17:46:20","commitOrder":3,"curCode":"    public List<Plugin> getAvailables() {\n        Map<String,Plugin> pluginMap = new LinkedHashMap<String, Plugin>();\n        for (UpdateSite site : sites) {\n            for (Plugin plugin: site.getAvailables()) {\n                final Plugin existing = pluginMap.get(plugin.name);\n                if (existing == null) {\n                    pluginMap.put(plugin.name, plugin);\n                } else if (!existing.version.equals(plugin.version)) {\n                    \r\n                    \r\n                    final String altKey = plugin.name + \":\" + plugin.version;\n                    if (!pluginMap.containsKey(altKey)) {\n                        pluginMap.put(altKey, plugin);\n                    }\n                }\n            }\n        }\n\n        return new ArrayList<Plugin>(pluginMap.values());\n    }\n","date":"2012-08-14 17:46:53","endLine":516,"groupId":"3387","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getAvailables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c5/d23835547ce9f6749391e69f4a749595098508.src","preCode":"    public List<Plugin> getAvailables() {\n        List<Plugin> r = new ArrayList<Plugin>();\n        Data data = getData();\n        if(data ==null)     return Collections.emptyList();\n        for (Plugin p : data.plugins.values()) {\n            if(p.getInstalled()==null)\n                r.add(p);\n        }\n        return r;\n    }\n","realPath":"core/src/main/java/hudson/model/UpdateCenter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":497,"status":"M"},{"authorDate":"2012-08-14 17:46:20","commitOrder":3,"curCode":"    public List<Plugin> getUpdates() {\n        Map<String,Plugin> pluginMap = new LinkedHashMap<String, Plugin>();\n        for (UpdateSite site : sites) {\n            for (Plugin plugin: site.getUpdates()) {\n                final Plugin existing = pluginMap.get(plugin.name);\n                if (existing == null) {\n                    pluginMap.put(plugin.name, plugin);\n                } else if (!existing.version.equals(plugin.version)) {\n                    \r\n                    \r\n                    final String altKey = plugin.name + \":\" + plugin.version;\n                    if (!pluginMap.containsKey(altKey)) {\n                        pluginMap.put(altKey, plugin);\n                    }\n                }\n            }\n        }\n\n        return new ArrayList<Plugin>(pluginMap.values());\n    }\n","date":"2012-08-14 17:46:53","endLine":564,"groupId":"3387","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c5/d23835547ce9f6749391e69f4a749595098508.src","preCode":"    public List<Plugin> getUpdates() {\n        Data data = getData();\n        if(data==null)      return Collections.emptyList(); \r\n\n        List<Plugin> r = new ArrayList<Plugin>();\n        for (PluginWrapper pw : Hudson.getInstance().getPluginManager().getPlugins()) {\n            Plugin p = pw.getUpdateInfo();\n            if(p!=null) r.add(p);\n        }\n\n        return r;\n    }\n","realPath":"core/src/main/java/hudson/model/UpdateCenter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":545,"status":"M"}],"commitId":"e0986b5f3b78f2eabedb35f64310abaaa3000214","commitMessage":"@@@Reduce duplicate entries for the same plugin and version when multiple update centers are publishing similar data\n","date":"2012-08-14 17:46:53","modifiedFileCount":"1","status":"M","submitter":"Stephen Connolly"},{"authorTime":"2019-04-08 23:18:26","codes":[{"authorDate":"2019-04-08 23:18:26","commitOrder":4,"curCode":"    public List<Plugin> getAvailables() {\n        Map<String,Plugin> pluginMap = new LinkedHashMap<>();\n        for (UpdateSite site : sites) {\n            for (Plugin plugin: site.getAvailables()) {\n                final Plugin existing = pluginMap.get(plugin.name);\n                if (existing == null) {\n                    pluginMap.put(plugin.name, plugin);\n                } else if (!existing.version.equals(plugin.version)) {\n                    \r\n                    \r\n                    final String altKey = plugin.name + \":\" + plugin.version;\n                    if (!pluginMap.containsKey(altKey)) {\n                        pluginMap.put(altKey, plugin);\n                    }\n                }\n            }\n        }\n\n        return new ArrayList<>(pluginMap.values());\n    }\n","date":"2019-04-08 23:18:26","endLine":939,"groupId":"3387","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getAvailables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/38/0bdce8254c12ab8a4759a02df8bb37acca9f60.src","preCode":"    public List<Plugin> getAvailables() {\n        Map<String,Plugin> pluginMap = new LinkedHashMap<String, Plugin>();\n        for (UpdateSite site : sites) {\n            for (Plugin plugin: site.getAvailables()) {\n                final Plugin existing = pluginMap.get(plugin.name);\n                if (existing == null) {\n                    pluginMap.put(plugin.name, plugin);\n                } else if (!existing.version.equals(plugin.version)) {\n                    \r\n                    \r\n                    final String altKey = plugin.name + \":\" + plugin.version;\n                    if (!pluginMap.containsKey(altKey)) {\n                        pluginMap.put(altKey, plugin);\n                    }\n                }\n            }\n        }\n\n        return new ArrayList<Plugin>(pluginMap.values());\n    }\n","realPath":"core/src/main/java/hudson/model/UpdateCenter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":920,"status":"M"},{"authorDate":"2019-04-08 23:18:26","commitOrder":4,"curCode":"    public List<Plugin> getUpdates() {\n        Map<String,Plugin> pluginMap = new LinkedHashMap<>();\n        for (UpdateSite site : sites) {\n            for (Plugin plugin: site.getUpdates()) {\n                final Plugin existing = pluginMap.get(plugin.name);\n                if (existing == null) {\n                    pluginMap.put(plugin.name, plugin);\n                } else if (!existing.version.equals(plugin.version)) {\n                    \r\n                    \r\n                    final String altKey = plugin.name + \":\" + plugin.version;\n                    if (!pluginMap.containsKey(altKey)) {\n                        pluginMap.put(altKey, plugin);\n                    }\n                }\n            }\n        }\n\n        return new ArrayList<>(pluginMap.values());\n    }\n","date":"2019-04-08 23:18:26","endLine":987,"groupId":"3387","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/38/0bdce8254c12ab8a4759a02df8bb37acca9f60.src","preCode":"    public List<Plugin> getUpdates() {\n        Map<String,Plugin> pluginMap = new LinkedHashMap<String, Plugin>();\n        for (UpdateSite site : sites) {\n            for (Plugin plugin: site.getUpdates()) {\n                final Plugin existing = pluginMap.get(plugin.name);\n                if (existing == null) {\n                    pluginMap.put(plugin.name, plugin);\n                } else if (!existing.version.equals(plugin.version)) {\n                    \r\n                    \r\n                    final String altKey = plugin.name + \":\" + plugin.version;\n                    if (!pluginMap.containsKey(altKey)) {\n                        pluginMap.put(altKey, plugin);\n                    }\n                }\n            }\n        }\n\n        return new ArrayList<Plugin>(pluginMap.values());\n    }\n","realPath":"core/src/main/java/hudson/model/UpdateCenter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":968,"status":"M"}],"commitId":"6b4c6c955d10ade9b78ab02fd2733cc29e0b1ab3","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2019-04-08 23:18:26","modifiedFileCount":"242","status":"M","submitter":"Daniel Beck"},{"authorTime":"2019-11-01 06:24:39","codes":[{"authorDate":"2019-04-08 23:18:26","commitOrder":5,"curCode":"    public List<Plugin> getAvailables() {\n        Map<String,Plugin> pluginMap = new LinkedHashMap<>();\n        for (UpdateSite site : sites) {\n            for (Plugin plugin: site.getAvailables()) {\n                final Plugin existing = pluginMap.get(plugin.name);\n                if (existing == null) {\n                    pluginMap.put(plugin.name, plugin);\n                } else if (!existing.version.equals(plugin.version)) {\n                    \r\n                    \r\n                    final String altKey = plugin.name + \":\" + plugin.version;\n                    if (!pluginMap.containsKey(altKey)) {\n                        pluginMap.put(altKey, plugin);\n                    }\n                }\n            }\n        }\n\n        return new ArrayList<>(pluginMap.values());\n    }\n","date":"2019-04-08 23:18:26","endLine":939,"groupId":"101021","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getAvailables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/38/0bdce8254c12ab8a4759a02df8bb37acca9f60.src","preCode":"    public List<Plugin> getAvailables() {\n        Map<String,Plugin> pluginMap = new LinkedHashMap<>();\n        for (UpdateSite site : sites) {\n            for (Plugin plugin: site.getAvailables()) {\n                final Plugin existing = pluginMap.get(plugin.name);\n                if (existing == null) {\n                    pluginMap.put(plugin.name, plugin);\n                } else if (!existing.version.equals(plugin.version)) {\n                    \r\n                    \r\n                    final String altKey = plugin.name + \":\" + plugin.version;\n                    if (!pluginMap.containsKey(altKey)) {\n                        pluginMap.put(altKey, plugin);\n                    }\n                }\n            }\n        }\n\n        return new ArrayList<>(pluginMap.values());\n    }\n","realPath":"core/src/main/java/hudson/model/UpdateCenter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":920,"status":"N"},{"authorDate":"2019-11-01 06:24:39","commitOrder":5,"curCode":"    public List<Plugin> getUpdates() {\n        Map<String,Plugin> pluginMap = new LinkedHashMap<>();\n        final Map<String, Set<Plugin>> incompatiblePluginMap = new LinkedHashMap<>();\n        final PluginManager.MetadataCache cache = new PluginManager.MetadataCache();\n\n        for (UpdateSite site : sites) {\n            for (Plugin plugin: site.getUpdates()) {\n                final Plugin existing = pluginMap.get(plugin.name);\n                if (existing == null) {\n                    pluginMap.put(plugin.name, plugin);\n\n                    if (!plugin.isNeededDependenciesCompatibleWithInstalledVersion()) {\n                       for (Plugin incompatiblePlugin : plugin.getDependenciesIncompatibleWithInstalledVersion(cache)) {\n                           incompatiblePluginMap.computeIfAbsent(incompatiblePlugin.name, _ignored -> new HashSet<>()).add(plugin);\n                       }\n                    }\n                } else if (!existing.version.equals(plugin.version)) {\n                    \r\n                    \r\n                    final String altKey = plugin.name + \":\" + plugin.version;\n                    if (!pluginMap.containsKey(altKey)) {\n                        pluginMap.put(altKey, plugin);\n                    }\n                }\n            }\n        }\n\n        incompatiblePluginMap.forEach((key, incompatiblePlugins) -> pluginMap.computeIfPresent(key, (_ignored, plugin) -> {\n            plugin.setIncompatibleParentPlugins(incompatiblePlugins);\n            return plugin;\n        }));\n\n        return new ArrayList<>(pluginMap.values());\n    }\n","date":"2019-11-01 06:24:38","endLine":1002,"groupId":"101021","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getUpdates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d9/91c565726f85d354a443c339885834df5b92f1.src","preCode":"    public List<Plugin> getUpdates() {\n        Map<String,Plugin> pluginMap = new LinkedHashMap<>();\n        for (UpdateSite site : sites) {\n            for (Plugin plugin: site.getUpdates()) {\n                final Plugin existing = pluginMap.get(plugin.name);\n                if (existing == null) {\n                    pluginMap.put(plugin.name, plugin);\n                } else if (!existing.version.equals(plugin.version)) {\n                    \r\n                    \r\n                    final String altKey = plugin.name + \":\" + plugin.version;\n                    if (!pluginMap.containsKey(altKey)) {\n                        pluginMap.put(altKey, plugin);\n                    }\n                }\n            }\n        }\n\n        return new ArrayList<>(pluginMap.values());\n    }\n","realPath":"core/src/main/java/hudson/model/UpdateCenter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":969,"status":"M"}],"commitId":"e5ba39e3db92c971215c8221758881c2a64bffb3","commitMessage":"@@@Update the Plugin Manager Updates View with more Info about incompatible dependencies and change CSS classes (#4299)\n\n* add information about incompatible plugin updates\n\n* use alert-danger CSS class\n\n* revert stripping whitespaces\n\n* Update core/src/main/resources/hudson/PluginManager/_table.css to include a line brak at the end\n\nCo-Authored-By: Oleg Nenashev <o.v.nenashev@gmail.com>\n\n* use separate text for list of incompatible plugins\n\n* restore and deprecate style.css\n\n* make better use of caching\n","date":"2019-11-01 06:24:38","modifiedFileCount":"2","status":"M","submitter":"Andi Pabst"}]
