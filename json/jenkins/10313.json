[{"authorTime":"2016-07-20 20:30:09","codes":[{"authorDate":"2016-07-20 20:30:09","commitOrder":1,"curCode":"    public void offlineNodeShouldSucceedOnMaster() throws Exception {\n        final Computer masterComputer = Jenkins.getActiveInstance().getComputer(\"\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.DISCONNECT, Jenkins.READ)\n                .invokeWithArgs(\"\");\n        assertThat(result, succeededSilently());\n        assertThat(masterComputer.isOffline(), equalTo(true));\n        assertThat(masterComputer.isTemporarilyOffline(), equalTo(true));\n        assertThat(masterComputer.getOfflineCause(), instanceOf(OfflineCause.ByCLI.class));\n        assertThat(((OfflineCause.ByCLI) masterComputer.getOfflineCause()).message, equalTo(null));\n    }\n","date":"2016-07-20 20:30:09","endLine":467,"groupId":"1229","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"offlineNodeShouldSucceedOnMaster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a1/623f853b5190d376ae61aa2a07f6d5cfcd2c9d.src","preCode":"    public void offlineNodeShouldSucceedOnMaster() throws Exception {\n        final Computer masterComputer = Jenkins.getActiveInstance().getComputer(\"\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.DISCONNECT, Jenkins.READ)\n                .invokeWithArgs(\"\");\n        assertThat(result, succeededSilently());\n        assertThat(masterComputer.isOffline(), equalTo(true));\n        assertThat(masterComputer.isTemporarilyOffline(), equalTo(true));\n        assertThat(masterComputer.getOfflineCause(), instanceOf(OfflineCause.ByCLI.class));\n        assertThat(((OfflineCause.ByCLI) masterComputer.getOfflineCause()).message, equalTo(null));\n    }\n","realPath":"test/src/test/java/hudson/cli/OfflineNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"B"},{"authorDate":"2016-07-20 20:30:09","commitOrder":1,"curCode":"    public void offlineNodeShouldSucceedOnMasterWithCause() throws Exception {\n        final Computer masterComputer = Jenkins.getActiveInstance().getComputer(\"\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.DISCONNECT, Jenkins.READ)\n                .invokeWithArgs(\"\", \"-m\", \"aCause\");\n        assertThat(result, succeededSilently());\n        assertThat(masterComputer.isOffline(), equalTo(true));\n        assertThat(masterComputer.isTemporarilyOffline(), equalTo(true));\n        assertThat(masterComputer.getOfflineCause(), instanceOf(OfflineCause.ByCLI.class));\n        assertThat(((OfflineCause.ByCLI) masterComputer.getOfflineCause()).message, equalTo(\"aCause\"));\n    }\n","date":"2016-07-20 20:30:09","endLine":481,"groupId":"3673","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"offlineNodeShouldSucceedOnMasterWithCause","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a1/623f853b5190d376ae61aa2a07f6d5cfcd2c9d.src","preCode":"    public void offlineNodeShouldSucceedOnMasterWithCause() throws Exception {\n        final Computer masterComputer = Jenkins.getActiveInstance().getComputer(\"\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.DISCONNECT, Jenkins.READ)\n                .invokeWithArgs(\"\", \"-m\", \"aCause\");\n        assertThat(result, succeededSilently());\n        assertThat(masterComputer.isOffline(), equalTo(true));\n        assertThat(masterComputer.isTemporarilyOffline(), equalTo(true));\n        assertThat(masterComputer.getOfflineCause(), instanceOf(OfflineCause.ByCLI.class));\n        assertThat(((OfflineCause.ByCLI) masterComputer.getOfflineCause()).message, equalTo(\"aCause\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/OfflineNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":470,"status":"B"}],"commitId":"fb7458f2e6acbe955fbb4b8f0afd9d352d839181","commitMessage":"@@@[JENKINS-34468] CLI command offline-node extracted from core to CLI (#2392)\n\n* [JENKINS-34468] CLI command offline-node extracted from core to CLI\n\noffline-node extended to accept multiple node names\noffline-node covered by test-cases\n\n* Fixed translation properties\n\n* Fixes based on Oleg's comments\n\n* Fixed HelpCommandTest test-case\n\n* Minor fixes\n\n* Uses Matchers.instanceOf everywhere instead of Java operator instanceof\n","date":"2016-07-20 20:30:09","modifiedFileCount":"2","status":"B","submitter":"Pavel Janousek"},{"authorTime":"2020-01-20 21:55:10","codes":[{"authorDate":"2020-01-20 21:55:10","commitOrder":2,"curCode":"    public void offlineNodeShouldSucceedOnMaster() throws Exception {\n        final Computer masterComputer = Jenkins.get().getComputer(\"\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.DISCONNECT, Jenkins.READ)\n                .invokeWithArgs(\"\");\n        assertThat(result, succeededSilently());\n        assertThat(masterComputer.isOffline(), equalTo(true));\n        assertThat(masterComputer.isTemporarilyOffline(), equalTo(true));\n        assertThat(masterComputer.getOfflineCause(), instanceOf(OfflineCause.ByCLI.class));\n        assertThat(((OfflineCause.ByCLI) masterComputer.getOfflineCause()).message, equalTo(null));\n    }\n","date":"2020-01-20 21:55:10","endLine":466,"groupId":"10313","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"offlineNodeShouldSucceedOnMaster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/6c/64a7ba2f90ebbcffba5df82a6ce87190fcd1b4.src","preCode":"    public void offlineNodeShouldSucceedOnMaster() throws Exception {\n        final Computer masterComputer = Jenkins.getActiveInstance().getComputer(\"\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.DISCONNECT, Jenkins.READ)\n                .invokeWithArgs(\"\");\n        assertThat(result, succeededSilently());\n        assertThat(masterComputer.isOffline(), equalTo(true));\n        assertThat(masterComputer.isTemporarilyOffline(), equalTo(true));\n        assertThat(masterComputer.getOfflineCause(), instanceOf(OfflineCause.ByCLI.class));\n        assertThat(((OfflineCause.ByCLI) masterComputer.getOfflineCause()).message, equalTo(null));\n    }\n","realPath":"test/src/test/java/hudson/cli/OfflineNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":455,"status":"M"},{"authorDate":"2020-01-20 21:55:10","commitOrder":2,"curCode":"    public void offlineNodeShouldSucceedOnMasterWithCause() throws Exception {\n        final Computer masterComputer = Jenkins.get().getComputer(\"\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.DISCONNECT, Jenkins.READ)\n                .invokeWithArgs(\"\", \"-m\", \"aCause\");\n        assertThat(result, succeededSilently());\n        assertThat(masterComputer.isOffline(), equalTo(true));\n        assertThat(masterComputer.isTemporarilyOffline(), equalTo(true));\n        assertThat(masterComputer.getOfflineCause(), instanceOf(OfflineCause.ByCLI.class));\n        assertThat(((OfflineCause.ByCLI) masterComputer.getOfflineCause()).message, equalTo(\"aCause\"));\n    }\n","date":"2020-01-20 21:55:10","endLine":480,"groupId":"10313","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"offlineNodeShouldSucceedOnMasterWithCause","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/6c/64a7ba2f90ebbcffba5df82a6ce87190fcd1b4.src","preCode":"    public void offlineNodeShouldSucceedOnMasterWithCause() throws Exception {\n        final Computer masterComputer = Jenkins.getActiveInstance().getComputer(\"\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.DISCONNECT, Jenkins.READ)\n                .invokeWithArgs(\"\", \"-m\", \"aCause\");\n        assertThat(result, succeededSilently());\n        assertThat(masterComputer.isOffline(), equalTo(true));\n        assertThat(masterComputer.isTemporarilyOffline(), equalTo(true));\n        assertThat(masterComputer.getOfflineCause(), instanceOf(OfflineCause.ByCLI.class));\n        assertThat(((OfflineCause.ByCLI) masterComputer.getOfflineCause()).message, equalTo(\"aCause\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/OfflineNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":469,"status":"M"}],"commitId":"574ec6e5bdf2e4ac9394e290fefff5ac1c9a5c96","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2020-01-20 21:55:10","modifiedFileCount":"193","status":"M","submitter":"Wadeck Follonier"}]
