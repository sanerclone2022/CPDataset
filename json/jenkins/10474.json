[{"authorTime":"2017-12-14 01:53:14","codes":[{"authorDate":"2017-12-14 01:53:14","commitOrder":1,"curCode":"    public void vectorTriggers() throws Exception {\n        AbstractProject<?, ?> p = (AbstractProject) j.jenkins.createProjectFromXML(\"foo\", getClass().getResourceAsStream(\"AbstractProjectTest/vectorTriggers.xml\"));\n        assertEquals(1, p.triggers().size());\n        Trigger<?> t = p.triggers().get(0);\n        assertEquals(SCMTrigger.class, t.getClass());\n        assertEquals(\"*/10 * * * *\", t.getSpec());\n    }\n","date":"2017-12-14 01:53:14","endLine":493,"groupId":"4792","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"vectorTriggers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/30/8fc12993c7f37cc04921e5f63640d16b4b8367.src","preCode":"    public void vectorTriggers() throws Exception {\n        AbstractProject<?, ?> p = (AbstractProject) j.jenkins.createProjectFromXML(\"foo\", getClass().getResourceAsStream(\"AbstractProjectTest/vectorTriggers.xml\"));\n        assertEquals(1, p.triggers().size());\n        Trigger<?> t = p.triggers().get(0);\n        assertEquals(SCMTrigger.class, t.getClass());\n        assertEquals(\"*/10 * * * *\", t.getSpec());\n    }\n","realPath":"test/src/test/java/hudson/model/AbstractProjectTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":487,"status":"B"},{"authorDate":"2017-12-14 01:53:14","commitOrder":1,"curCode":"    public void addTriggerDifferentType() throws Exception {\n        AbstractProject<?, ?> p = (AbstractProject) j.jenkins.createProjectFromXML(\"foo\", getClass().getResourceAsStream(\"AbstractProjectTest/vectorTriggers.xml\"));\n\n        TimerTrigger newTrigger = new TimerTrigger(\"20 * * * *\");\n        p.addTrigger(newTrigger);\n\n        assertEquals(2, p.triggers().size());\n        Trigger<?> t = p.triggers().get(1);\n        assertEquals(newTrigger, t);\n    }\n","date":"2017-12-14 01:53:14","endLine":530,"groupId":"4792","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addTriggerDifferentType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/30/8fc12993c7f37cc04921e5f63640d16b4b8367.src","preCode":"    public void addTriggerDifferentType() throws Exception {\n        AbstractProject<?, ?> p = (AbstractProject) j.jenkins.createProjectFromXML(\"foo\", getClass().getResourceAsStream(\"AbstractProjectTest/vectorTriggers.xml\"));\n\n        TimerTrigger newTrigger = new TimerTrigger(\"20 * * * *\");\n        p.addTrigger(newTrigger);\n\n        assertEquals(2, p.triggers().size());\n        Trigger<?> t = p.triggers().get(1);\n        assertEquals(newTrigger, t);\n    }\n","realPath":"test/src/test/java/hudson/model/AbstractProjectTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":521,"status":"B"}],"commitId":"c0ba0527eece7e1fbcb2fc037f8e25542bc8dd45","commitMessage":"@@@Merge commit '78adf02addc47ccb2629c9bb9101a8dd630b22a5'\n","date":"2017-12-14 01:53:14","modifiedFileCount":"66","status":"B","submitter":"Jesse Glick"},{"authorTime":"2020-07-21 11:16:06","codes":[{"authorDate":"2020-07-21 11:16:06","commitOrder":2,"curCode":"    public void vectorTriggers() throws Exception {\n        AbstractProject<?, ?> p = (AbstractProject<?,?>) j.jenkins.createProjectFromXML(\"foo\", getClass().getResourceAsStream(\"AbstractProjectTest/vectorTriggers.xml\"));\n        assertEquals(1, p.triggers().size());\n        Trigger<?> t = p.triggers().get(0);\n        assertEquals(SCMTrigger.class, t.getClass());\n        assertEquals(\"*/10 * * * *\", t.getSpec());\n    }\n","date":"2020-07-21 11:16:06","endLine":376,"groupId":"10474","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"vectorTriggers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c7/5f2b5c8b0b2743a7b9ad3208e71528f63b57fb.src","preCode":"    public void vectorTriggers() throws Exception {\n        AbstractProject<?, ?> p = (AbstractProject) j.jenkins.createProjectFromXML(\"foo\", getClass().getResourceAsStream(\"AbstractProjectTest/vectorTriggers.xml\"));\n        assertEquals(1, p.triggers().size());\n        Trigger<?> t = p.triggers().get(0);\n        assertEquals(SCMTrigger.class, t.getClass());\n        assertEquals(\"*/10 * * * *\", t.getSpec());\n    }\n","realPath":"test/src/test/java/hudson/model/AbstractProjectTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"M"},{"authorDate":"2020-07-21 11:16:06","commitOrder":2,"curCode":"    public void addTriggerDifferentType() throws Exception {\n        AbstractProject<?, ?> p = (AbstractProject<?,?>) j.jenkins.createProjectFromXML(\"foo\", getClass().getResourceAsStream(\"AbstractProjectTest/vectorTriggers.xml\"));\n\n        TimerTrigger newTrigger = new TimerTrigger(\"20 * * * *\");\n        p.addTrigger(newTrigger);\n\n        assertEquals(2, p.triggers().size());\n        Trigger<?> t = p.triggers().get(1);\n        assertEquals(newTrigger, t);\n    }\n","date":"2020-07-21 11:16:06","endLine":413,"groupId":"10474","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addTriggerDifferentType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c7/5f2b5c8b0b2743a7b9ad3208e71528f63b57fb.src","preCode":"    public void addTriggerDifferentType() throws Exception {\n        AbstractProject<?, ?> p = (AbstractProject) j.jenkins.createProjectFromXML(\"foo\", getClass().getResourceAsStream(\"AbstractProjectTest/vectorTriggers.xml\"));\n\n        TimerTrigger newTrigger = new TimerTrigger(\"20 * * * *\");\n        p.addTrigger(newTrigger);\n\n        assertEquals(2, p.triggers().size());\n        Trigger<?> t = p.triggers().get(1);\n        assertEquals(newTrigger, t);\n    }\n","realPath":"test/src/test/java/hudson/model/AbstractProjectTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":404,"status":"M"}],"commitId":"eb636e252161d8952b9536214dd8a0ec439a3ad7","commitMessage":"@@@Merge pull request #4851 from StefanSpieker/test_refactorings_2\n\nTests: Refactoring of various things","date":"2020-07-21 11:16:06","modifiedFileCount":"19","status":"M","submitter":"Tim Jacomb"}]
