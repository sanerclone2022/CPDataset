[{"authorTime":"2017-05-19 14:12:31","codes":[{"authorDate":"2017-05-19 14:12:31","commitOrder":1,"curCode":"    @Test public void dummyRangeNumberSingleShouldFailIfBuildNumberIsHyphen() throws Exception {\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","date":"2017-05-19 14:12:31","endLine":257,"groupId":"8675","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"dummyRangeNumberSingleShouldFailIfBuildNumberIsHyphen","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5e/45c56493f3b99076232e8bb7c0a49253755a43.src","preCode":"    @Test public void dummyRangeNumberSingleShouldFailIfBuildNumberIsHyphen() throws Exception {\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/RunRangeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"B"},{"authorDate":"2017-05-19 14:12:31","commitOrder":1,"curCode":"    @Test public void dummyRangeRangeSingleShouldFailIfBuildRangeContainsEmptyNumber() throws Exception {\n        CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-1\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-1\\\" is not a valid option\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"1-\");\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: Unable to parse '1-', expected string with a range M-N\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","date":"2017-05-19 14:12:31","endLine":850,"groupId":"8675","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"dummyRangeRangeSingleShouldFailIfBuildRangeContainsEmptyNumber","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5e/45c56493f3b99076232e8bb7c0a49253755a43.src","preCode":"    @Test public void dummyRangeRangeSingleShouldFailIfBuildRangeContainsEmptyNumber() throws Exception {\n        CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-1\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-1\\\" is not a valid option\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"1-\");\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: Unable to parse '1-', expected string with a range M-N\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/RunRangeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":829,"status":"B"}],"commitId":"33afbcc87f783e4b2ea79ef1a77e9bbef6e6b837","commitMessage":"@@@Make all CLI commands compatible with Pipeline where possible (#2874)\n\n* [FIX JENKINS-30785] Generalize some CLI stuff to AbstractItem\n\n* Offering default methods on ParameterizedJob.\n\n* Javadoc typo.\n\n* Cleaner use of default methods in ParameterizedJob.\n\n* Need to pick up https://github.com/infradna/bridge-method-injector/pull/15 to be able to build.\n\n* Sketch of pulling disabled functionality into ParameterizedJob.\n\n* EnableJobCommandTest.groovy ? EnableJobCommandTest.java.  and replacing deprecated Remoting-based CLI calls with CLICommandInvoker.\n\n* All CLI commands could be broken by a missing CLI.*.shortDescription key on just one!\n\n* Forgot to move CLI method short descriptions to new package.\n\n* Needed a @CLIResolver for ParameterizedJob. Adding an OptionHandler while we are here.\n\n* Trying to fix up access-modifier versions; started failing in CI today for unknown reasons.\n\n* Introduced <p:makeDisabled/> by analogy with <p:config-disableBuild/>.\n\n* Using new type bounds.\n\n* access-modifier 1.11 released.\n\n* MatrixProject and MavenModuleSet both expect to have access to makeDisabled.jelly.\n\n* Trying to generalize some more.\n\n* Minor simplification.\n\n* [JENKINS-34716] Generalizing doPolling and schedulePolling.\n\n* isBuildable\n\n* Obsolete comment.\n\n* Updated comments.\n\n* bridge-method-injector 1.17\n\n* Unfortunately AbstractProject.schedulePolling cannot delegate to SCMTriggerItem.\n\n* Making delete-builds and list-changes commands work with Pipeline.\n\n* [FIXED JENKINS-41527] Made console CLI command compatible with Pipeline.\n\n* Fixed set-build-description and set-build-display-name.\n\n* @oleg-nenashev agreed it would be clearer to explicitly mark commands as restricted.  not APIs.\n\n* Updated tests to match slight message changes.\n\n* bridge-method-injector 1.17\n\n* @olivergondza pointed out that RunRangeCommand is a better name than JobRangeCommand.\n","date":"2017-05-19 14:12:31","modifiedFileCount":"10","status":"B","submitter":"Jesse Glick"},{"authorTime":"2020-08-11 14:52:06","codes":[{"authorDate":"2020-08-11 14:52:06","commitOrder":2,"curCode":"    @Test public void dummyRangeNumberSingleShouldFailIfBuildNumberIsHyphen() {\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","date":"2020-08-11 14:52:06","endLine":257,"groupId":"8675","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"dummyRangeNumberSingleShouldFailIfBuildNumberIsHyphen","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/60/b29e791e0e0a6ee46d64998dcd1e5d4ef14626.src","preCode":"    @Test public void dummyRangeNumberSingleShouldFailIfBuildNumberIsHyphen() throws Exception {\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/RunRangeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"M"},{"authorDate":"2020-08-11 14:52:06","commitOrder":2,"curCode":"    @Test public void dummyRangeRangeSingleShouldFailIfBuildRangeContainsEmptyNumber() {\n        CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-1\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-1\\\" is not a valid option\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"1-\");\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: Unable to parse '1-', expected string with a range M-N\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","date":"2020-08-11 14:52:06","endLine":850,"groupId":"8675","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"dummyRangeRangeSingleShouldFailIfBuildRangeContainsEmptyNumber","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/60/b29e791e0e0a6ee46d64998dcd1e5d4ef14626.src","preCode":"    @Test public void dummyRangeRangeSingleShouldFailIfBuildRangeContainsEmptyNumber() throws Exception {\n        CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-1\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-1\\\" is not a valid option\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"1-\");\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: Unable to parse '1-', expected string with a range M-N\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/RunRangeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":829,"status":"M"}],"commitId":"f91b1f76629611185cb0c9624bfd40e0a2872f4f","commitMessage":"@@@minor test refactoring around StandardCharsets.  simplified JUnit assertions.  removed obsolete throws.  fixed deprecation warnings (#4872)\n\n","date":"2020-08-11 14:52:06","modifiedFileCount":"14","status":"M","submitter":"StefanSpieker"},{"authorTime":"2021-04-20 04:54:17","codes":[{"authorDate":"2021-04-20 04:54:17","commitOrder":3,"curCode":"    @Test public void dummyRangeNumberSingleShouldFailIfBuildNumberIsHyphen() {\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Item.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","date":"2021-04-20 04:54:17","endLine":256,"groupId":"10211","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"dummyRangeNumberSingleShouldFailIfBuildNumberIsHyphen","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/07/e8f02865797d4635e74db58dde994e6379888f.src","preCode":"    @Test public void dummyRangeNumberSingleShouldFailIfBuildNumberIsHyphen() {\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/RunRangeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"},{"authorDate":"2021-04-20 04:54:17","commitOrder":3,"curCode":"    @Test public void dummyRangeRangeSingleShouldFailIfBuildRangeContainsEmptyNumber() {\n        CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Item.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-1\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-1\\\" is not a valid option\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Item.READ)\n                .invokeWithArgs(PROJECT_NAME, \"1-\");\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: Unable to parse '1-', expected string with a range M-N\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Item.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","date":"2021-04-20 04:54:17","endLine":849,"groupId":"10211","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"dummyRangeRangeSingleShouldFailIfBuildRangeContainsEmptyNumber","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/07/e8f02865797d4635e74db58dde994e6379888f.src","preCode":"    @Test public void dummyRangeRangeSingleShouldFailIfBuildRangeContainsEmptyNumber() {\n        CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-1\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-1\\\" is not a valid option\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"1-\");\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: Unable to parse '1-', expected string with a range M-N\"));\n\n        result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(PROJECT_NAME, \"-\");\n        assertThat(result, failedWith(2));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: \\\"-\\\" is not a valid option\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/RunRangeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":828,"status":"M"}],"commitId":"0fd55bd6b50fcdf27368c6b771fb3d8363a24f83","commitMessage":"@@@Merge pull request #5419 from basil/subtypes\n\nUse declaring class as qualifier","date":"2021-04-20 04:54:17","modifiedFileCount":"43","status":"M","submitter":"Oleg Nenashev"}]
