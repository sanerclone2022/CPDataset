[{"authorTime":"2015-08-27 02:48:14","codes":[{"authorDate":"2015-08-27 02:48:14","commitOrder":2,"curCode":"    public void negative() throws Exception {\n        DescriptorImpl d = new DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new HelpNotFoundBuilder());\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(404);\n            webclient.addWebResponseListener(statusListener);\n\n            clickAllHelpLinks(webclient, p);\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(d.getHelpFile()));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","date":"2015-08-27 02:48:14","endLine":116,"groupId":"1733","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"negative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/92/bbaacc14291e9a613f640b8881e0b3f705c370.src","preCode":"    public void negative() throws Exception {\n        DescriptorImpl d = new DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new HelpNotFoundBuilder());\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(404);\n            webclient.addWebResponseListener(statusListener);\n\n            clickAllHelpLinks(webclient, p);\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(d.getHelpFile()));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/HelpLinkTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"MB"},{"authorDate":"2015-08-27 02:48:14","commitOrder":2,"curCode":"    public void negative() throws Exception {\n        DescriptorImpl d = new DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new BrokenFormValidatorBuilder());\n\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(500);\n            webclient.addWebResponseListener(statusListener);\n\n            webclient.getPage(p, \"configure\");\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(\"doCheckXyz is broken\"));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","date":"2015-08-27 02:48:14","endLine":101,"groupId":"1733","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"negative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/52/1ee8c70e55ceabc019ea89485509ae7346cb09.src","preCode":"    public void negative() throws Exception {\n        DescriptorImpl d = new DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new BrokenFormValidatorBuilder());\n\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(500);\n            webclient.addWebResponseListener(statusListener);\n\n            webclient.getPage(p, \"configure\");\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(\"doCheckXyz is broken\"));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","realPath":"test/src/test/java/hudson/util/FormFieldValidatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"MB"}],"commitId":"f552d48f5047e42810cc0e999cb33fbf9519d284","commitMessage":"@@@Merge pull request #1774 from tfennelly/upgrade-htmlunit\n\nUpgrade HtmlUnit to v2.18 (from forked version)","date":"2015-08-27 02:48:14","modifiedFileCount":"47","status":"M","submitter":"Tom Fennelly"},{"authorTime":"2015-08-27 02:48:14","codes":[{"authorDate":"2021-05-05 04:31:10","commitOrder":3,"curCode":"    public void negative() throws Exception {\n        HelpNotFoundBuilder.DescriptorImpl d = new HelpNotFoundBuilder.DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new HelpNotFoundBuilder());\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(404);\n            webclient.addWebResponseListener(statusListener);\n\n            clickAllHelpLinks(webclient, p);\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(d.getHelpFile()));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","date":"2021-05-05 04:31:10","endLine":149,"groupId":"1733","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"negative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d2/0a0a5ce3ab3bce64e00f767674d3463259f616.src","preCode":"    public void negative() throws Exception {\n        DescriptorImpl d = new DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new HelpNotFoundBuilder());\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(404);\n            webclient.addWebResponseListener(statusListener);\n\n            clickAllHelpLinks(webclient, p);\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(d.getHelpFile()));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/HelpLinkTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2015-08-27 02:48:14","commitOrder":3,"curCode":"    public void negative() throws Exception {\n        DescriptorImpl d = new DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new BrokenFormValidatorBuilder());\n\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(500);\n            webclient.addWebResponseListener(statusListener);\n\n            webclient.getPage(p, \"configure\");\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(\"doCheckXyz is broken\"));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","date":"2015-08-27 02:48:14","endLine":101,"groupId":"1733","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"negative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/52/1ee8c70e55ceabc019ea89485509ae7346cb09.src","preCode":"    public void negative() throws Exception {\n        DescriptorImpl d = new DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new BrokenFormValidatorBuilder());\n\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(500);\n            webclient.addWebResponseListener(statusListener);\n\n            webclient.getPage(p, \"configure\");\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(\"doCheckXyz is broken\"));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","realPath":"test/src/test/java/hudson/util/FormFieldValidatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"}],"commitId":"6384f1965f290494332cc4853ddbadadd728e810","commitMessage":"@@@Migrate some tests from `HudsonTestCase` to `JenkinsRule` (#5456)\n\n* Migrate some tests from HudsonTestCase to JenkinsRule\n\n* Stop importing HelpLinkTest from HelpLinkTest","date":"2021-05-05 04:31:10","modifiedFileCount":"13","status":"M","submitter":"Basil Crow"},{"authorTime":"2021-06-01 13:02:48","codes":[{"authorDate":"2021-05-05 04:31:10","commitOrder":4,"curCode":"    public void negative() throws Exception {\n        HelpNotFoundBuilder.DescriptorImpl d = new HelpNotFoundBuilder.DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new HelpNotFoundBuilder());\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(404);\n            webclient.addWebResponseListener(statusListener);\n\n            clickAllHelpLinks(webclient, p);\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(d.getHelpFile()));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","date":"2021-05-05 04:31:10","endLine":149,"groupId":"10537","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"negative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d2/0a0a5ce3ab3bce64e00f767674d3463259f616.src","preCode":"    public void negative() throws Exception {\n        HelpNotFoundBuilder.DescriptorImpl d = new HelpNotFoundBuilder.DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new HelpNotFoundBuilder());\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(404);\n            webclient.addWebResponseListener(statusListener);\n\n            clickAllHelpLinks(webclient, p);\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(d.getHelpFile()));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/HelpLinkTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"N"},{"authorDate":"2021-06-01 13:02:48","commitOrder":4,"curCode":"    public void negative() throws Exception {\n        BrokenFormValidatorBuilder.DescriptorImpl d = new BrokenFormValidatorBuilder.DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new BrokenFormValidatorBuilder());\n\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(500);\n            webclient.addWebResponseListener(statusListener);\n\n            webclient.getPage(p, \"configure\");\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(\"doCheckXyz is broken\"));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","date":"2021-06-01 13:02:48","endLine":95,"groupId":"10537","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"negative","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/73/bfd1a5a14af25dd19a43a1d4f0739db9bbf2a8.src","preCode":"    public void negative() throws Exception {\n        DescriptorImpl d = new DescriptorImpl();\n        Publisher.all().add(d);\n        try {\n            FreeStyleProject p = j.createFreeStyleProject();\n            p.getPublishersList().add(new BrokenFormValidatorBuilder());\n\n            JenkinsRule.WebClient webclient = j.createWebClient();\n            WebResponseListener.StatusListener statusListener = new WebResponseListener.StatusListener(500);\n            webclient.addWebResponseListener(statusListener);\n\n            webclient.getPage(p, \"configure\");\n\n            statusListener.assertHasResponses();\n            String contentAsString = statusListener.getResponses().get(0).getContentAsString();\n            Assert.assertTrue(contentAsString.contains(\"doCheckXyz is broken\"));\n        } finally {\n            Publisher.all().remove(d);\n        }\n    }\n","realPath":"test/src/test/java/hudson/util/FormFieldValidatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"9f9ed7b60db1bc67210f1f4368f8ace218a5b9c0","commitMessage":"@@@Fix `BadImport` Error Prone violations (#5510)\n\n* Fix `BadImport` Error Prone violations\n\n* Fix Javadoc","date":"2021-06-01 13:02:48","modifiedFileCount":"39","status":"M","submitter":"Basil Crow"}]
