[{"authorTime":"2018-09-27 21:26:44","codes":[{"authorDate":"2018-09-27 21:26:44","commitOrder":1,"curCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder() throws Exception {\n        \r\n        \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"../../../../../root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"../../../../../root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n    \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n    \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n    \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215root-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%afroot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","date":"2018-09-27 21:26:44","endLine":96,"groupId":"111","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fileParameter_cannotCreateFile_outsideOfBuildFolder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/91/1f88431b2b6d394ba57b365354db9b0a236da7.src","preCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder() throws Exception {\n        \r\n        \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"../../../../../root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"../../../../../root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n    \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n    \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n    \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215root-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%afroot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2018-09-27 21:26:44","commitOrder":1,"curCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder_backslashEdition() throws Exception {\n        Assume.assumeTrue(\"Backslash are only dangerous on Windows\", Functions.isWindows());\n        \n        \r\n    \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","date":"2018-09-27 21:26:44","endLine":137,"groupId":"111","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fileParameter_cannotCreateFile_outsideOfBuildFolder_backslashEdition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/91/1f88431b2b6d394ba57b365354db9b0a236da7.src","preCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder_backslashEdition() throws Exception {\n        Assume.assumeTrue(\"Backslash are only dangerous on Windows\", Functions.isWindows());\n        \n        \r\n    \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"5ddb847d2a55dadc30a84f4f62e2d254780ab30e","commitMessage":"@@@Merge branch 'security-stable-2.138' into security-master\n","date":"2018-09-27 21:26:44","modifiedFileCount":"10","status":"B","submitter":"Daniel Beck"},{"authorTime":"2019-07-03 02:54:16","codes":[{"authorDate":"2018-09-27 21:26:44","commitOrder":2,"curCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder() throws Exception {\n        \r\n        \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"../../../../../root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"../../../../../root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n    \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n    \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n    \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215root-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%afroot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","date":"2018-09-27 21:26:44","endLine":96,"groupId":"111","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fileParameter_cannotCreateFile_outsideOfBuildFolder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/91/1f88431b2b6d394ba57b365354db9b0a236da7.src","preCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder() throws Exception {\n        \r\n        \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"../../../../../root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"../../../../../root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n    \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n    \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n    \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215root-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%afroot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"},{"authorDate":"2019-07-03 02:54:16","commitOrder":2,"curCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder_backslashEdition() throws Exception {\n        Assume.assumeTrue(\"Backslashes are only dangerous on Windows\", Functions.isWindows());\n        \n        \r\n    \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","date":"2019-07-03 02:54:16","endLine":194,"groupId":"111","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fileParameter_cannotCreateFile_outsideOfBuildFolder_backslashEdition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/0e/8c7f65ec30a019fe1efe4f7059856dfa25de7b.src","preCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder_backslashEdition() throws Exception {\n        Assume.assumeTrue(\"Backslash are only dangerous on Windows\", Functions.isWindows());\n        \n        \r\n    \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"2ac9009e061e4603d6ddfc28d10c95e8125ad7d1","commitMessage":"@@@Merge branch 'security-stable-2.176' into security-master\n","date":"2019-07-03 02:54:16","modifiedFileCount":"2","status":"M","submitter":"Jeff Thompson"},{"authorTime":"2020-07-17 22:15:15","codes":[{"authorDate":"2020-07-17 22:15:15","commitOrder":3,"curCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder() throws Exception {\n        \r\n        \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"../../../../../root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent, StandardCharsets.UTF_8);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"../../../../../root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n    \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n    \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n    \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215root-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%afroot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","date":"2020-07-17 22:15:15","endLine":95,"groupId":"10512","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"fileParameter_cannotCreateFile_outsideOfBuildFolder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/2c/1cbd9eef604205314c1f0fc78b735b6ebf80dc.src","preCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder() throws Exception {\n        \r\n        \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"../../../../../root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"../../../../../root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n    \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n    \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n    \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215%u002e%u002e%u2215root-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252froot-level.txt/uploaded-file.txt\", uploadedContent);\n        \r\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%af%c0%2e%c0%2e%c0%afroot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-07-17 22:15:15","commitOrder":3,"curCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder_backslashEdition() throws Exception {\n        Assume.assumeTrue(\"Backslashes are only dangerous on Windows\", Functions.isWindows());\n        \n        \r\n    \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent, StandardCharsets.UTF_8);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","date":"2020-07-17 22:15:15","endLine":193,"groupId":"10512","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"fileParameter_cannotCreateFile_outsideOfBuildFolder_backslashEdition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/2c/1cbd9eef604205314c1f0fc78b735b6ebf80dc.src","preCode":"    public void fileParameter_cannotCreateFile_outsideOfBuildFolder_backslashEdition() throws Exception {\n        Assume.assumeTrue(\"Backslashes are only dangerous on Windows\", Functions.isWindows());\n        \n        \r\n    \n        FilePath root = j.jenkins.getRootPath();\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", null)\n        )));\n        \n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        assertThat(root.child(\"root-level.txt\").exists(), equalTo(false));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..\\\\..\\\\..\\\\..\\\\..\\\\root-level.txt/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/..%2F..%2F..%2F..%2F..%2Froot-level.txt/uploaded-file.txt\", uploadedContent);\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"688647a8540f8db179dc5c9cf62e3208eb444d9f","commitMessage":"@@@tests: minor refactorings either for performance or readability (#4846)\n\ntests: minor refactorings either for performance or readability","date":"2020-07-17 22:15:15","modifiedFileCount":"18","status":"M","submitter":"Tim Jacomb"}]
