[{"authorTime":"2014-05-01 05:46:46","codes":[{"authorDate":"2014-05-01 05:46:46","commitOrder":1,"curCode":"    @Test public void completedStatelessLogAnnotation() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().println(\"---\");\n                listener.getLogger().println(\"ooo\");\n                listener.getLogger().println(\"ooo\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1,rsp.selectNodes(\"//B[@class='demo']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        String nl = System.getProperty(\"line.separator\");\n        assertTrue(raw.getContent().contains(nl+\"---\"+nl+\"ooo\"+nl+\"ooo\"+nl));\n\n        \r\n        String xml = rsp.asXml();\n        assertEquals(xml, 3, xml.split(\"ooo\").length);\n    }\n","date":"2014-05-01 05:46:46","endLine":76,"groupId":"283","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"completedStatelessLogAnnotation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/99/3f749c77515078c74ff6af5944f92308379ed6.src","preCode":"    @Test public void completedStatelessLogAnnotation() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().println(\"---\");\n                listener.getLogger().println(\"ooo\");\n                listener.getLogger().println(\"ooo\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1,rsp.selectNodes(\"//B[@class='demo']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        String nl = System.getProperty(\"line.separator\");\n        assertTrue(raw.getContent().contains(nl+\"---\"+nl+\"ooo\"+nl+\"ooo\"+nl));\n\n        \r\n        String xml = rsp.asXml();\n        assertEquals(xml, 3, xml.split(\"ooo\").length);\n    }\n","realPath":"test/src/test/java/hudson/console/ConsoleAnnotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2014-05-01 05:46:46","commitOrder":1,"curCode":"    @Test public void consoleAnnotationFilterOut() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().print(\"abc\\n\");\n                listener.getLogger().print(HyperlinkNote.encodeTo(\"http://infradna.com/\",\"def\")+\"\\n\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1,rsp.selectNodes(\"//A[@href='http://infradna.com/']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        assertTrue(raw.getContent().contains(\"\\nabc\\ndef\\n\"));\n    }\n","date":"2014-05-01 05:46:46","endLine":121,"groupId":"1766","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"consoleAnnotationFilterOut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/99/3f749c77515078c74ff6af5944f92308379ed6.src","preCode":"    @Test public void consoleAnnotationFilterOut() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().print(\"abc\\n\");\n                listener.getLogger().print(HyperlinkNote.encodeTo(\"http://infradna.com/\",\"def\")+\"\\n\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1,rsp.selectNodes(\"//A[@href='http://infradna.com/']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        assertTrue(raw.getContent().contains(\"\\nabc\\ndef\\n\"));\n    }\n","realPath":"test/src/test/java/hudson/console/ConsoleAnnotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"}],"commitId":"87e66570b8cf83ac78057166eb17e155ef710ae4","commitMessage":"@@@JUnit 4.","date":"2014-05-01 05:46:46","modifiedFileCount":"1","status":"B","submitter":"Jesse Glick"},{"authorTime":"2015-08-27 02:48:14","codes":[{"authorDate":"2015-08-27 02:48:14","commitOrder":2,"curCode":"    @Test public void completedStatelessLogAnnotation() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().println(\"---\");\n                listener.getLogger().println(\"ooo\");\n                listener.getLogger().println(\"ooo\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1, DomNodeUtil.selectNodes(rsp, \"//B[@class='demo']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        String nl = System.getProperty(\"line.separator\");\n        assertTrue(raw.getContent().contains(nl+\"---\"+nl+\"ooo\"+nl+\"ooo\"+nl));\n\n        \r\n        String xml = rsp.asXml();\n        assertEquals(xml, 3, xml.split(\"ooo\").length);\n    }\n","date":"2015-08-27 02:48:14","endLine":77,"groupId":"283","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"completedStatelessLogAnnotation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/83/827f48607a04d991697dc70b8d09249ee7880e.src","preCode":"    @Test public void completedStatelessLogAnnotation() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().println(\"---\");\n                listener.getLogger().println(\"ooo\");\n                listener.getLogger().println(\"ooo\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1,rsp.selectNodes(\"//B[@class='demo']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        String nl = System.getProperty(\"line.separator\");\n        assertTrue(raw.getContent().contains(nl+\"---\"+nl+\"ooo\"+nl+\"ooo\"+nl));\n\n        \r\n        String xml = rsp.asXml();\n        assertEquals(xml, 3, xml.split(\"ooo\").length);\n    }\n","realPath":"test/src/test/java/hudson/console/ConsoleAnnotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2015-08-27 02:48:14","commitOrder":2,"curCode":"    @Test public void consoleAnnotationFilterOut() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().print(\"abc\\n\");\n                listener.getLogger().print(HyperlinkNote.encodeTo(\"http://infradna.com/\",\"def\")+\"\\n\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1, DomNodeUtil.selectNodes(rsp, \"//A[@href='http://infradna.com/']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        assertTrue(raw.getContent().contains(\"\\nabc\\ndef\\n\"));\n    }\n","date":"2015-08-27 02:48:14","endLine":122,"groupId":"7054","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"consoleAnnotationFilterOut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/83/827f48607a04d991697dc70b8d09249ee7880e.src","preCode":"    @Test public void consoleAnnotationFilterOut() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().print(\"abc\\n\");\n                listener.getLogger().print(HyperlinkNote.encodeTo(\"http://infradna.com/\",\"def\")+\"\\n\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1,rsp.selectNodes(\"//A[@href='http://infradna.com/']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        assertTrue(raw.getContent().contains(\"\\nabc\\ndef\\n\"));\n    }\n","realPath":"test/src/test/java/hudson/console/ConsoleAnnotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"f552d48f5047e42810cc0e999cb33fbf9519d284","commitMessage":"@@@Merge pull request #1774 from tfennelly/upgrade-htmlunit\n\nUpgrade HtmlUnit to v2.18 (from forked version)","date":"2015-08-27 02:48:14","modifiedFileCount":"47","status":"M","submitter":"Tom Fennelly"},{"authorTime":"2017-01-24 03:26:10","codes":[{"authorDate":"2015-08-27 02:48:14","commitOrder":3,"curCode":"    @Test public void completedStatelessLogAnnotation() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().println(\"---\");\n                listener.getLogger().println(\"ooo\");\n                listener.getLogger().println(\"ooo\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1, DomNodeUtil.selectNodes(rsp, \"//B[@class='demo']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        String nl = System.getProperty(\"line.separator\");\n        assertTrue(raw.getContent().contains(nl+\"---\"+nl+\"ooo\"+nl+\"ooo\"+nl));\n\n        \r\n        String xml = rsp.asXml();\n        assertEquals(xml, 3, xml.split(\"ooo\").length);\n    }\n","date":"2015-08-27 02:48:14","endLine":77,"groupId":"283","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"completedStatelessLogAnnotation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/83/827f48607a04d991697dc70b8d09249ee7880e.src","preCode":"    @Test public void completedStatelessLogAnnotation() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().println(\"---\");\n                listener.getLogger().println(\"ooo\");\n                listener.getLogger().println(\"ooo\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1, DomNodeUtil.selectNodes(rsp, \"//B[@class='demo']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        String nl = System.getProperty(\"line.separator\");\n        assertTrue(raw.getContent().contains(nl+\"---\"+nl+\"ooo\"+nl+\"ooo\"+nl));\n\n        \r\n        String xml = rsp.asXml();\n        assertEquals(xml, 3, xml.split(\"ooo\").length);\n    }\n","realPath":"test/src/test/java/hudson/console/ConsoleAnnotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"},{"authorDate":"2017-01-24 03:26:10","commitOrder":3,"curCode":"    @Test public void consoleAnnotationFilterOut() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().print(\"abc\\n\");\n                listener.getLogger().print(HyperlinkNote.encodeTo(\"http://infradna.com/\",\"def\")+\"\\n\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1, DomNodeUtil.selectNodes(rsp, \"//A[@href='http://infradna.com/']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        assertThat(raw.getContent(), containsString(\"\\nabc\\ndef\\n\"));\n    }\n","date":"2017-01-24 03:26:10","endLine":122,"groupId":"7054","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"consoleAnnotationFilterOut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a2/5401eabd8b26631455f7df4c868e448d66bd0e.src","preCode":"    @Test public void consoleAnnotationFilterOut() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().print(\"abc\\n\");\n                listener.getLogger().print(HyperlinkNote.encodeTo(\"http://infradna.com/\",\"def\")+\"\\n\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1, DomNodeUtil.selectNodes(rsp, \"//A[@href='http://infradna.com/']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        assertTrue(raw.getContent().contains(\"\\nabc\\ndef\\n\"));\n    }\n","realPath":"test/src/test/java/hudson/console/ConsoleAnnotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"06327a2db6d3facb56e2c2d0f1506c1a77fece5c","commitMessage":"@@@Merge branch 'security-stable-2.32' into security-master\n","date":"2017-01-24 03:26:10","modifiedFileCount":"15","status":"M","submitter":"Jesse Glick"},{"authorTime":"2021-04-28 17:28:25","codes":[{"authorDate":"2021-04-28 17:28:25","commitOrder":4,"curCode":"    @Test public void completedStatelessLogAnnotation() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            @Override\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().println(\"---\");\n                listener.getLogger().println(\"ooo\");\n                listener.getLogger().println(\"ooo\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1, DomNodeUtil.selectNodes(rsp, \"//B[@class='demo']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        String nl = System.getProperty(\"line.separator\");\n        assertTrue(raw.getContent().contains(nl+\"---\"+nl+\"ooo\"+nl+\"ooo\"+nl));\n\n        \r\n        String xml = rsp.asXml();\n        assertEquals(xml, 3, xml.split(\"ooo\").length);\n    }\n","date":"2021-04-28 17:28:25","endLine":84,"groupId":"10338","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"completedStatelessLogAnnotation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/72/9f7969c02c6a1d2dbdf9ef29e3b12b3d76d7bc.src","preCode":"    @Test public void completedStatelessLogAnnotation() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().println(\"---\");\n                listener.getLogger().println(\"ooo\");\n                listener.getLogger().println(\"ooo\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1, DomNodeUtil.selectNodes(rsp, \"//B[@class='demo']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        System.out.println(raw.getContent());\n        String nl = System.getProperty(\"line.separator\");\n        assertTrue(raw.getContent().contains(nl+\"---\"+nl+\"ooo\"+nl+\"ooo\"+nl));\n\n        \r\n        String xml = rsp.asXml();\n        assertEquals(xml, 3, xml.split(\"ooo\").length);\n    }\n","realPath":"test/src/test/java/hudson/console/ConsoleAnnotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2021-04-28 17:28:25","commitOrder":4,"curCode":"    @Test public void consoleAnnotationFilterOut() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            @Override\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().print(\"abc\\n\");\n                listener.getLogger().print(HyperlinkNote.encodeTo(\"http://infradna.com/\",\"def\")+\"\\n\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1, DomNodeUtil.selectNodes(rsp, \"//A[@href='http://infradna.com/']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        assertThat(raw.getContent(), containsString(\"\\nabc\\ndef\\n\"));\n    }\n","date":"2021-04-28 17:28:25","endLine":130,"groupId":"10338","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"consoleAnnotationFilterOut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/72/9f7969c02c6a1d2dbdf9ef29e3b12b3d76d7bc.src","preCode":"    @Test public void consoleAnnotationFilterOut() throws Exception {\n        FreeStyleProject p = r.createFreeStyleProject();\n        p.getBuildersList().add(new TestBuilder() {\n            public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n                listener.getLogger().print(\"abc\\n\");\n                listener.getLogger().print(HyperlinkNote.encodeTo(\"http://infradna.com/\",\"def\")+\"\\n\");\n                return true;\n            }\n        });\n\n        FreeStyleBuild b = r.buildAndAssertSuccess(p);\n\n        \r\n        HtmlPage rsp = r.createWebClient().getPage(b, \"console\");\n        assertEquals(1, DomNodeUtil.selectNodes(rsp, \"//A[@href='http://infradna.com/']\").size());\n\n        \r\n        TextPage raw = (TextPage)r.createWebClient().goTo(b.getUrl()+\"consoleText\",\"text/plain\");\n        assertThat(raw.getContent(), containsString(\"\\nabc\\ndef\\n\"));\n    }\n","realPath":"test/src/test/java/hudson/console/ConsoleAnnotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"f6378676b11288cc2525852b0a1a441d147e31d3","commitMessage":"@@@Add missing @Override annotations (#5430)\n\n","date":"2021-04-28 17:28:25","modifiedFileCount":"405","status":"M","submitter":"Basil Crow"}]
