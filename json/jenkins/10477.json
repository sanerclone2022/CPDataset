[{"authorTime":"2015-01-08 05:12:18","codes":[{"authorDate":"2015-01-08 05:12:18","commitOrder":1,"curCode":"    @Test public void persistence() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        \r\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.setNodes(r.jenkins.getNodes());\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1,q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        q.load();\n        assertEquals(1,q.getItems().length);\n\n        \r\n        assertSame(q.getItems()[0].task,testProject);        \n    }\n","date":"2015-01-08 05:12:18","endLine":129,"groupId":"1283","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"persistence","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/fe/be13d5f248f20431208a6cf098ef26da566ff7.src","preCode":"    @Test public void persistence() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        \r\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.setNodes(r.jenkins.getNodes());\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1,q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        q.load();\n        assertEquals(1,q.getItems().length);\n\n        \r\n        assertSame(q.getItems()[0].task,testProject);        \n    }\n","realPath":"test/src/test/java/hudson/model/QueueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"},{"authorDate":"2015-01-08 05:12:18","commitOrder":1,"curCode":"     @Test public void persistence2() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        \r\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.setNodes(r.jenkins.getNodes());\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1,q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        testProject.delete();\n        q.load();\n        assertEquals(0,q.getItems().length);\n    }\n","date":"2015-01-08 05:12:18","endLine":155,"groupId":"1283","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"persistence2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/fe/be13d5f248f20431208a6cf098ef26da566ff7.src","preCode":"     @Test public void persistence2() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        \r\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.setNodes(r.jenkins.getNodes());\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1,q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        testProject.delete();\n        q.load();\n        assertEquals(0,q.getItems().length);\n    }\n","realPath":"test/src/test/java/hudson/model/QueueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"}],"commitId":"cd0752432ed718e30281eb4e2732646550996868","commitMessage":"@@@Merge remote-tracking branch 'upstream/master' into JENKINS-22811\n\nConflicts:\n\ttest/src/test/java/hudson/model/ItemGroupMixInTest.java\n","date":"2015-01-08 05:12:18","modifiedFileCount":"190","status":"B","submitter":"christ66"},{"authorTime":"2015-02-23 05:18:37","codes":[{"authorDate":"2015-01-08 05:12:18","commitOrder":2,"curCode":"    @Test public void persistence() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        \r\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.setNodes(r.jenkins.getNodes());\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1,q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        q.load();\n        assertEquals(1,q.getItems().length);\n\n        \r\n        assertSame(q.getItems()[0].task,testProject);        \n    }\n","date":"2015-01-08 05:12:18","endLine":129,"groupId":"1283","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"persistence","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/fe/be13d5f248f20431208a6cf098ef26da566ff7.src","preCode":"    @Test public void persistence() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        \r\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.setNodes(r.jenkins.getNodes());\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1,q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        q.load();\n        assertEquals(1,q.getItems().length);\n\n        \r\n        assertSame(q.getItems()[0].task,testProject);        \n    }\n","realPath":"test/src/test/java/hudson/model/QueueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"N"},{"authorDate":"2015-02-23 05:18:37","commitOrder":2,"curCode":"     @Test public void persistence2() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        resetQueueState();\n        assertEquals(0, Queue.WaitingItem.getCurrentCounterValue());\n\n        \r\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.setNodes(r.jenkins.getNodes());\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1, q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        testProject.delete();\n        q.load();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        assertEquals(1, Queue.WaitingItem.getCurrentCounterValue());\n    }\n","date":"2015-02-23 05:18:37","endLine":183,"groupId":"1283","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"persistence2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/26/4bc69e52fb0380d5be6857cf2a455d6b9d2ff8.src","preCode":"     @Test public void persistence2() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        \r\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.setNodes(r.jenkins.getNodes());\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1,q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        testProject.delete();\n        q.load();\n        assertEquals(0,q.getItems().length);\n    }\n","realPath":"test/src/test/java/hudson/model/QueueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"}],"commitId":"9f6be6306e1288af1289b623bd512fee8e56119d","commitMessage":"@@@Merge branch 'master' of git://github.com/jenkinsci/jenkins\n","date":"2015-02-23 05:18:37","modifiedFileCount":"4","status":"M","submitter":"Jesse Glick"},{"authorTime":"2015-03-26 23:13:51","codes":[{"authorDate":"2015-03-26 23:13:51","commitOrder":3,"curCode":"    @Test public void persistence() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        \r\n        r.jenkins.setNumExecutors(0);\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1, q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        q.load();\n        assertEquals(1, q.getItems().length);\n\n        \r\n        assertSame(q.getItems()[0].task,testProject);\n    }\n","date":"2015-03-26 23:13:51","endLine":133,"groupId":"10477","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"persistence","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/77/2860fc8e98cfb768c1e33a5fd0a1dbb127a0f5.src","preCode":"    @Test public void persistence() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        \r\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.setNodes(r.jenkins.getNodes());\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1, q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        q.load();\n        assertEquals(1, q.getItems().length);\n\n        \r\n        assertSame(q.getItems()[0].task,testProject);        \n    }\n","realPath":"test/src/test/java/hudson/model/QueueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2015-03-26 23:13:51","commitOrder":3,"curCode":"     @Test public void persistence2() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        resetQueueState();\n        assertEquals(0, Queue.WaitingItem.getCurrentCounterValue());\n\n        \r\n        r.jenkins.setNumExecutors(0);\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1, q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        testProject.delete();\n        q.load();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        assertEquals(1, Queue.WaitingItem.getCurrentCounterValue());\n    }\n","date":"2015-03-26 23:13:51","endLine":182,"groupId":"10477","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"persistence2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/77/2860fc8e98cfb768c1e33a5fd0a1dbb127a0f5.src","preCode":"     @Test public void persistence2() throws Exception {\n        Queue q = r.jenkins.getQueue();\n\n        resetQueueState();\n        assertEquals(0, Queue.WaitingItem.getCurrentCounterValue());\n\n        \r\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.setNodes(r.jenkins.getNodes());\n\n        FreeStyleProject testProject = r.createFreeStyleProject(\"test\");\n        testProject.scheduleBuild(new UserIdCause());\n        q.save();\n\n        System.out.println(FileUtils.readFileToString(new File(r.jenkins.getRootDir(), \"queue.xml\")));\n\n        assertEquals(1, q.getItems().length);\n        q.clear();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        testProject.delete();\n        q.load();\n        assertEquals(0,q.getItems().length);\n\n        \r\n        assertEquals(1, Queue.WaitingItem.getCurrentCounterValue());\n    }\n","realPath":"test/src/test/java/hudson/model/QueueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"}],"commitId":"ecac963eaff0608accf950d90d75cff8b66bdc4c","commitMessage":"@@@Merge pull request #1596 from stephenc/threadsafe-node-queue\n\n[JENKINS-27565] Fix threading issues with Nodes and Queue","date":"2015-03-26 23:13:51","modifiedFileCount":"22","status":"M","submitter":"Stephen Connolly"}]
