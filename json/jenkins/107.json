[{"authorTime":"2018-03-29 08:01:34","codes":[{"authorDate":"2018-03-29 08:01:34","commitOrder":1,"curCode":"    private void checkInjectionInHref(TestRootAction testParams) throws Exception {\n        testParams.paramHref = hrefPayload;\n        testParams.paramAlt = \"Alternative text for icon\";\n        testParams.paramConfirm = null;\n        \n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        HtmlPage p = wc.goTo(\"test\");\n    \n        HtmlElementUtil.click(getStopLink(p));\n        assertNotEquals(\"hacked\", p.getTitleText());\n        assertTrue(p.getWebResponse().getContentAsString().contains(\"Alternative text for icon\"));\n    }\n","date":"2018-03-29 08:01:34","endLine":87,"groupId":"6255","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkInjectionInHref","params":"(TestRootActiontestParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/91/3c15ec56ade3ef7b3f69277b3e1ecdec79d613.src","preCode":"    private void checkInjectionInHref(TestRootAction testParams) throws Exception {\n        testParams.paramHref = hrefPayload;\n        testParams.paramAlt = \"Alternative text for icon\";\n        testParams.paramConfirm = null;\n        \n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        HtmlPage p = wc.goTo(\"test\");\n    \n        HtmlElementUtil.click(getStopLink(p));\n        assertNotEquals(\"hacked\", p.getTitleText());\n        assertTrue(p.getWebResponse().getContentAsString().contains(\"Alternative text for icon\"));\n    }\n","realPath":"test/src/test/java/lib/layout/StopButtonTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"},{"authorDate":"2018-03-29 08:01:34","commitOrder":1,"curCode":"    private void checkInjectionInConfirm(TestRootAction testParams) throws Exception {\n        testParams.paramHref = \"#\";\n        testParams.paramAlt = \"Alternative text for icon\";\n        testParams.paramConfirm = postPayload;\n        \n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        HtmlPage p = wc.goTo(\"test\");\n    \n        HtmlElementUtil.click(getStopLink(p));\n        assertNotEquals(\"hacked\", p.getTitleText());\n        assertTrue(p.getWebResponse().getContentAsString().contains(\"Alternative text for icon\"));\n    }\n","date":"2018-03-29 08:01:34","endLine":115,"groupId":"6255","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkInjectionInConfirm","params":"(TestRootActiontestParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/91/3c15ec56ade3ef7b3f69277b3e1ecdec79d613.src","preCode":"    private void checkInjectionInConfirm(TestRootAction testParams) throws Exception {\n        testParams.paramHref = \"#\";\n        testParams.paramAlt = \"Alternative text for icon\";\n        testParams.paramConfirm = postPayload;\n        \n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        HtmlPage p = wc.goTo(\"test\");\n    \n        HtmlElementUtil.click(getStopLink(p));\n        assertNotEquals(\"hacked\", p.getTitleText());\n        assertTrue(p.getWebResponse().getContentAsString().contains(\"Alternative text for icon\"));\n    }\n","realPath":"test/src/test/java/lib/layout/StopButtonTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"}],"commitId":"bbe96187ab304b0dff54170d176876f14274aa44","commitMessage":"@@@Merge branch 'security-stable-2.107' into security-master\n","date":"2018-03-29 08:01:34","modifiedFileCount":"7","status":"B","submitter":"Daniel Beck"},{"authorTime":"2019-02-08 13:43:50","codes":[{"authorDate":"2019-02-08 13:43:50","commitOrder":2,"curCode":"    private void checkInjectionInHref(TestRootAction testParams) throws Exception {\n        testParams.paramHref = hrefPayload;\n        testParams.paramAlt = \"Alternative text for icon\";\n        testParams.paramConfirm = null;\n        \n        JenkinsRule.WebClient wc = j.createWebClient()\n                .withThrowExceptionOnFailingStatusCode(false);\n        HtmlPage p = wc.goTo(\"test\");\n    \n        HtmlElementUtil.click(getStopLink(p));\n        assertNotEquals(\"hacked\", p.getTitleText());\n        assertTrue(p.getWebResponse().getContentAsString().contains(\"Alternative text for icon\"));\n    }\n","date":"2019-02-08 13:43:50","endLine":87,"groupId":"107","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkInjectionInHref","params":"(TestRootActiontestParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b4/f8950e7a5346839666ae53ed628c6433039812.src","preCode":"    private void checkInjectionInHref(TestRootAction testParams) throws Exception {\n        testParams.paramHref = hrefPayload;\n        testParams.paramAlt = \"Alternative text for icon\";\n        testParams.paramConfirm = null;\n        \n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        HtmlPage p = wc.goTo(\"test\");\n    \n        HtmlElementUtil.click(getStopLink(p));\n        assertNotEquals(\"hacked\", p.getTitleText());\n        assertTrue(p.getWebResponse().getContentAsString().contains(\"Alternative text for icon\"));\n    }\n","realPath":"test/src/test/java/lib/layout/StopButtonTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2019-02-08 13:43:50","commitOrder":2,"curCode":"    private void checkInjectionInConfirm(TestRootAction testParams) throws Exception {\n        testParams.paramHref = \"#\";\n        testParams.paramAlt = \"Alternative text for icon\";\n        testParams.paramConfirm = postPayload;\n        \n        JenkinsRule.WebClient wc = j.createWebClient()\n                .withThrowExceptionOnFailingStatusCode(false);\n        HtmlPage p = wc.goTo(\"test\");\n    \n        HtmlElementUtil.click(getStopLink(p));\n        assertNotEquals(\"hacked\", p.getTitleText());\n        assertTrue(p.getWebResponse().getContentAsString().contains(\"Alternative text for icon\"));\n    }\n","date":"2019-02-08 13:43:50","endLine":115,"groupId":"107","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkInjectionInConfirm","params":"(TestRootActiontestParams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b4/f8950e7a5346839666ae53ed628c6433039812.src","preCode":"    private void checkInjectionInConfirm(TestRootAction testParams) throws Exception {\n        testParams.paramHref = \"#\";\n        testParams.paramAlt = \"Alternative text for icon\";\n        testParams.paramConfirm = postPayload;\n        \n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        HtmlPage p = wc.goTo(\"test\");\n    \n        HtmlElementUtil.click(getStopLink(p));\n        assertNotEquals(\"hacked\", p.getTitleText());\n        assertTrue(p.getWebResponse().getContentAsString().contains(\"Alternative text for icon\"));\n    }\n","realPath":"test/src/test/java/lib/layout/StopButtonTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"fab166242dd407a08dcafb727abff94fd3ca7dd1","commitMessage":"@@@Merge pull request #3618 from Wadeck/JENKINS-53511_WEBCLIENT_DISCOVERY_IMPROVEMENT\n\n[JENKINS-53511] Improve discovery and readability of WebClient","date":"2019-02-08 13:43:50","modifiedFileCount":"38","status":"M","submitter":"Oleg Nenashev"}]
