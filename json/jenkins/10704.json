[{"authorTime":"2012-01-05 04:18:51","codes":[{"authorDate":"2012-01-05 04:18:51","commitOrder":1,"curCode":"    public void testIsDisplayNameUniqueFalse() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        \n        FreeStyleProject curProject = createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        Assert.assertFalse(jenkins.isDisplayNameUnique(displayName, curJobName));\n    }\n","date":"2012-01-05 04:18:51","endLine":68,"groupId":"8663","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsDisplayNameUniqueFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/cc/7082d16a2243c7cf7e9e3a55fc1a6e83940e4f.src","preCode":"    public void testIsDisplayNameUniqueFalse() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        \n        FreeStyleProject curProject = createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        Assert.assertFalse(jenkins.isDisplayNameUnique(displayName, curJobName));\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"},{"authorDate":"2012-01-05 04:18:51","commitOrder":1,"curCode":"    public void testDoCheckDisplayNameSameAsDisplayName() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        FreeStyleProject curProject = createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        FormValidation v = jenkins.doCheckDisplayName(displayName, curJobName);\n        Assert.assertEquals(FormValidation.Kind.WARNING, v.kind);        \n    }\n","date":"2012-01-05 04:18:51","endLine":147,"groupId":"8663","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDoCheckDisplayNameSameAsDisplayName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/cc/7082d16a2243c7cf7e9e3a55fc1a6e83940e4f.src","preCode":"    public void testDoCheckDisplayNameSameAsDisplayName() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        FreeStyleProject curProject = createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        FormValidation v = jenkins.doCheckDisplayName(displayName, curJobName);\n        Assert.assertEquals(FormValidation.Kind.WARNING, v.kind);        \n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"}],"commitId":"b5973a4a1da2285d4a814dd88b1f48f48376fc8d","commitMessage":"@@@Merge branch 'master' of github.com:jenkinsci/jenkins\n","date":"2012-01-05 04:18:51","modifiedFileCount":"57","status":"B","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2015-01-09 09:11:09","codes":[{"authorDate":"2015-01-09 09:11:09","commitOrder":2,"curCode":"    public void testIsDisplayNameUniqueFalse() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        \n        FreeStyleProject curProject = createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        assertFalse(jenkins.isDisplayNameUnique(displayName, curJobName));\n    }\n","date":"2015-01-09 09:11:09","endLine":102,"groupId":"8663","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsDisplayNameUniqueFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/cf/bdc53e10c4ce803313552b2b8ac0226444c2f8.src","preCode":"    public void testIsDisplayNameUniqueFalse() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        \n        FreeStyleProject curProject = createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        Assert.assertFalse(jenkins.isDisplayNameUnique(displayName, curJobName));\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2015-01-09 09:11:09","commitOrder":2,"curCode":"    public void testDoCheckDisplayNameSameAsDisplayName() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        FreeStyleProject curProject = createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        FormValidation v = jenkins.doCheckDisplayName(displayName, curJobName);\n        assertEquals(FormValidation.Kind.WARNING, v.kind);\n    }\n","date":"2015-01-09 09:11:09","endLine":181,"groupId":"8663","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDoCheckDisplayNameSameAsDisplayName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/cf/bdc53e10c4ce803313552b2b8ac0226444c2f8.src","preCode":"    public void testDoCheckDisplayNameSameAsDisplayName() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        FreeStyleProject curProject = createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        FormValidation v = jenkins.doCheckDisplayName(displayName, curJobName);\n        Assert.assertEquals(FormValidation.Kind.WARNING, v.kind);        \n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"}],"commitId":"28984e5920c606a0ca3c3dbc6bc525b98c2d01d7","commitMessage":"@@@Merge pull request #1521 from darxriggs/consistent-use-of-Assert\n\nstatically import methods used from org.junit.Assert","date":"2015-01-09 09:11:09","modifiedFileCount":"20","status":"M","submitter":"Jesse Glick"},{"authorTime":"2015-04-04 05:32:13","codes":[{"authorDate":"2015-04-04 05:32:13","commitOrder":3,"curCode":"    public void testIsDisplayNameUniqueFalse() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        \n        FreeStyleProject curProject = j.createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = j.createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        assertFalse(jenkins.isDisplayNameUnique(displayName, curJobName));\n    }\n","date":"2015-04-04 05:35:32","endLine":107,"groupId":"1595","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsDisplayNameUniqueFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/18/d42ad4b11127dff1245911099bded66de4972c.src","preCode":"    public void testIsDisplayNameUniqueFalse() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        \n        FreeStyleProject curProject = createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        assertFalse(jenkins.isDisplayNameUnique(displayName, curJobName));\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2015-04-04 05:32:13","commitOrder":3,"curCode":"    public void testDoCheckDisplayNameSameAsDisplayName() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        FreeStyleProject curProject = j.createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = j.createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        FormValidation v = jenkins.doCheckDisplayName(displayName, curJobName);\n        assertEquals(FormValidation.Kind.WARNING, v.kind);\n    }\n","date":"2015-04-04 05:35:32","endLine":185,"groupId":"1595","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDoCheckDisplayNameSameAsDisplayName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/18/d42ad4b11127dff1245911099bded66de4972c.src","preCode":"    public void testDoCheckDisplayNameSameAsDisplayName() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        FreeStyleProject curProject = createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        FormValidation v = jenkins.doCheckDisplayName(displayName, curJobName);\n        assertEquals(FormValidation.Kind.WARNING, v.kind);\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"f2c2f0fa5c6ee880085c1c9f8d89bcad21894f28","commitMessage":"@@@JUnit 4\n","date":"2015-04-04 05:35:32","modifiedFileCount":"1","status":"M","submitter":"Oliver Gond?a"},{"authorTime":"2019-07-03 02:02:48","codes":[{"authorDate":"2019-07-03 02:02:48","commitOrder":4,"curCode":"    public void testIsDisplayNameUniqueFalse() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        \n        FreeStyleProject curProject = j.createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = j.createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.get();\n        assertFalse(jenkins.isDisplayNameUnique(displayName, curJobName));\n    }\n","date":"2019-07-03 02:02:48","endLine":158,"groupId":"10704","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsDisplayNameUniqueFalse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/17/1f7d133f875bfc86e4d08e5210d0d3b28440b1.src","preCode":"    public void testIsDisplayNameUniqueFalse() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        \n        FreeStyleProject curProject = j.createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = j.createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        assertFalse(jenkins.isDisplayNameUnique(displayName, curJobName));\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2019-07-03 02:02:48","commitOrder":4,"curCode":"    public void testDoCheckDisplayNameSameAsDisplayName() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        FreeStyleProject curProject = j.createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = j.createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.get();\n        FormValidation v = jenkins.doCheckDisplayName(displayName, curJobName);\n        assertEquals(FormValidation.Kind.WARNING, v.kind);\n    }\n","date":"2019-07-03 02:02:48","endLine":236,"groupId":"10704","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testDoCheckDisplayNameSameAsDisplayName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/17/1f7d133f875bfc86e4d08e5210d0d3b28440b1.src","preCode":"    public void testDoCheckDisplayNameSameAsDisplayName() throws Exception {\n        final String curJobName = \"curJobName\";\n        final String jobName = \"jobName\";\n        final String displayName = \"displayName\";\n        FreeStyleProject curProject = j.createFreeStyleProject(curJobName);\n        curProject.setDisplayName(\"currentProjectDisplayName\");\n        \n        FreeStyleProject p = j.createFreeStyleProject(jobName);\n        p.setDisplayName(displayName);\n        \n        Jenkins jenkins = Jenkins.getInstance();\n        FormValidation v = jenkins.doCheckDisplayName(displayName, curJobName);\n        assertEquals(FormValidation.Kind.WARNING, v.kind);\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"}],"commitId":"494119294fa2f095b4a28db0dd32c0d2092d9fa1","commitMessage":"@@@Merge commit '4404c6e662befe16e8daa1ea7a412df73b370086' of github.com:jenkinsci/jenkins\n","date":"2019-07-03 02:02:48","modifiedFileCount":"292","status":"M","submitter":"Jeff Thompson"}]
