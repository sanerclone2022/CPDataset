[{"authorTime":"2014-09-17 22:42:17","codes":[{"authorDate":"2014-09-17 22:42:17","commitOrder":1,"curCode":"    public void queueLengthReflectsBuildableItemsAssignedLabel()\n            throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n\n        \r\n        assertTrue(\n                \"Initially the rolling queue length for the label is 0.\",\n                label.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE, new LabelAssignmentActionImpl(),\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength > 0f);\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the queued builds should not decrease.\",\n                labelQueueLengthNew >= labelQueueLength);\n    }\n","date":"2014-09-17 22:42:17","endLine":122,"groupId":"6387","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"queueLengthReflectsBuildableItemsAssignedLabel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/18/a957f3db3219044251fae76f7080bf142c2bb0.src","preCode":"    public void queueLengthReflectsBuildableItemsAssignedLabel()\n            throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n\n        \r\n        assertTrue(\n                \"Initially the rolling queue length for the label is 0.\",\n                label.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE, new LabelAssignmentActionImpl(),\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength > 0f);\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the queued builds should not decrease.\",\n                labelQueueLengthNew >= labelQueueLength);\n    }\n","realPath":"test/src/test/java/hudson/model/LabelLoadStatisticsQueueLengthTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"},{"authorDate":"2014-09-17 22:42:17","commitOrder":1,"curCode":"    public void queueLengthReflectsJobsAssignedLabel() throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n        \r\n        project.setAssignedLabel(label);\n\n        \r\n        assertTrue(\n                \"Initially the rolling queue length for the label is 0.\",\n                label.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n        assertTrue(\n                \"Initially the rolling queue length for the alt label is 0.\",\n                altLabel.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE,\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength > 0f);\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the queued builds should decrease.\",\n                labelQueueLengthNew < labelQueueLength);\n\n        float altLabelQueueLength = altLabel.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the alternate label should be greater than 0.\",\n                altLabelQueueLength > 0f);\n    }\n","date":"2014-09-17 22:42:17","endLine":182,"groupId":"6387","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"queueLengthReflectsJobsAssignedLabel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/18/a957f3db3219044251fae76f7080bf142c2bb0.src","preCode":"    public void queueLengthReflectsJobsAssignedLabel() throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n        \r\n        project.setAssignedLabel(label);\n\n        \r\n        assertTrue(\n                \"Initially the rolling queue length for the label is 0.\",\n                label.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n        assertTrue(\n                \"Initially the rolling queue length for the alt label is 0.\",\n                altLabel.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE,\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength > 0f);\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the queued builds should decrease.\",\n                labelQueueLengthNew < labelQueueLength);\n\n        float altLabelQueueLength = altLabel.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the alternate label should be greater than 0.\",\n                altLabelQueueLength > 0f);\n    }\n","realPath":"test/src/test/java/hudson/model/LabelLoadStatisticsQueueLengthTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"B"}],"commitId":"8b2d70f60bda6878675eebb797a487abf536bb2a","commitMessage":"@@@Merge REMERGE_HEAD into HEAD","date":"2014-09-17 22:42:17","modifiedFileCount":"12","status":"B","submitter":"CloudBees DEV@Cloud"},{"authorTime":"2014-09-17 22:42:17","codes":[{"authorDate":"2015-03-27 22:08:56","commitOrder":2,"curCode":"    public void queueLengthReflectsBuildableItemsAssignedLabel()\n            throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n\n        \r\n        assertTrue(\n                \"Initially the rolling queue length for the label is 0.\",\n                label.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE, new LabelAssignmentActionImpl(),\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        assertEquals(\"The job is still queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertThat(\"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength, greaterThan(0f));\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertThat(\"After assigning an alternate label to the job, the queue length load statistic for the \"\n                        + \"queued builds should not decrease.\",\n                labelQueueLengthNew, greaterThan(labelQueueLength));\n    }\n","date":"2015-03-27 22:08:56","endLine":128,"groupId":"6387","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"queueLengthReflectsBuildableItemsAssignedLabel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/29/e61479c9b496ac056f03feb51e5ddf3765f4ef.src","preCode":"    public void queueLengthReflectsBuildableItemsAssignedLabel()\n            throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n\n        \r\n        assertTrue(\n                \"Initially the rolling queue length for the label is 0.\",\n                label.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE, new LabelAssignmentActionImpl(),\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength > 0f);\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the queued builds should not decrease.\",\n                labelQueueLengthNew >= labelQueueLength);\n    }\n","realPath":"test/src/test/java/hudson/model/LabelLoadStatisticsQueueLengthTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2014-09-17 22:42:17","commitOrder":2,"curCode":"    public void queueLengthReflectsJobsAssignedLabel() throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n        \r\n        project.setAssignedLabel(label);\n\n        \r\n        assertTrue(\n                \"Initially the rolling queue length for the label is 0.\",\n                label.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n        assertTrue(\n                \"Initially the rolling queue length for the alt label is 0.\",\n                altLabel.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE,\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength > 0f);\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the queued builds should decrease.\",\n                labelQueueLengthNew < labelQueueLength);\n\n        float altLabelQueueLength = altLabel.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the alternate label should be greater than 0.\",\n                altLabelQueueLength > 0f);\n    }\n","date":"2014-09-17 22:42:17","endLine":182,"groupId":"6387","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"queueLengthReflectsJobsAssignedLabel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/18/a957f3db3219044251fae76f7080bf142c2bb0.src","preCode":"    public void queueLengthReflectsJobsAssignedLabel() throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n        \r\n        project.setAssignedLabel(label);\n\n        \r\n        assertTrue(\n                \"Initially the rolling queue length for the label is 0.\",\n                label.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n        assertTrue(\n                \"Initially the rolling queue length for the alt label is 0.\",\n                altLabel.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE,\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength > 0f);\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the queued builds should decrease.\",\n                labelQueueLengthNew < labelQueueLength);\n\n        float altLabelQueueLength = altLabel.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the alternate label should be greater than 0.\",\n                altLabelQueueLength > 0f);\n    }\n","realPath":"test/src/test/java/hudson/model/LabelLoadStatisticsQueueLengthTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"N"}],"commitId":"7a64e030a38561c98954c4c51c4438c97469dfd6","commitMessage":"@@@Merge pull request #1629 from stephenc/fix-build-4044\n\nFix build 4044","date":"2015-03-27 22:08:56","modifiedFileCount":"2","status":"M","submitter":"Stephen Connolly"},{"authorTime":"2020-07-21 11:16:06","codes":[{"authorDate":"2020-07-21 11:16:06","commitOrder":3,"curCode":"    public void queueLengthReflectsBuildableItemsAssignedLabel()\n            throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n\n        \r\n        assertEquals(\"Initially the rolling queue length for the label is 0.\", 0f, label.loadStatistics.queueLength.getLatest(TimeScale.SEC10), 0.0);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE, new LabelAssignmentActionImpl(),\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        assertEquals(\"The job is still queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertThat(\"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength, greaterThan(0f));\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertThat(\"After assigning an alternate label to the job, the queue length load statistic for the \"\n                        + \"queued builds should not decrease.\",\n                labelQueueLengthNew, greaterThan(labelQueueLength));\n    }\n","date":"2020-07-21 11:16:06","endLine":124,"groupId":"10509","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"queueLengthReflectsBuildableItemsAssignedLabel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/79/af8d9c9fa61fdf8870bc353d18d45a5b5fe537.src","preCode":"    public void queueLengthReflectsBuildableItemsAssignedLabel()\n            throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n\n        \r\n        assertTrue(\n                \"Initially the rolling queue length for the label is 0.\",\n                label.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE, new LabelAssignmentActionImpl(),\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        assertEquals(\"The job is still queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertThat(\"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength, greaterThan(0f));\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertThat(\"After assigning an alternate label to the job, the queue length load statistic for the \"\n                        + \"queued builds should not decrease.\",\n                labelQueueLengthNew, greaterThan(labelQueueLength));\n    }\n","realPath":"test/src/test/java/hudson/model/LabelLoadStatisticsQueueLengthTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2020-07-21 11:16:06","commitOrder":3,"curCode":"    public void queueLengthReflectsJobsAssignedLabel() throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n        \r\n        project.setAssignedLabel(label);\n\n        \r\n        assertEquals(\"Initially the rolling queue length for the label is 0.\", 0f, label.loadStatistics.queueLength.getLatest(TimeScale.SEC10), 0.0);\n        assertEquals(\"Initially the rolling queue length for the alt label is 0.\", 0f, altLabel.loadStatistics.queueLength.getLatest(TimeScale.SEC10), 0.0);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE,\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength > 0f);\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the queued builds should decrease.\",\n                labelQueueLengthNew < labelQueueLength);\n\n        float altLabelQueueLength = altLabel.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the alternate label should be greater than 0.\",\n                altLabelQueueLength > 0f);\n    }\n","date":"2020-07-21 11:16:06","endLine":180,"groupId":"10509","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"queueLengthReflectsJobsAssignedLabel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/79/af8d9c9fa61fdf8870bc353d18d45a5b5fe537.src","preCode":"    public void queueLengthReflectsJobsAssignedLabel() throws Exception {\n        final Label label = Label.get(LABEL_STRING);\n        final Label altLabel = Label.get(ALT_LABEL_STRING);\n\n        FreeStyleProject project = createTestProject();\n        \r\n        project.setAssignedLabel(label);\n\n        \r\n        assertTrue(\n                \"Initially the rolling queue length for the label is 0.\",\n                label.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n        assertTrue(\n                \"Initially the rolling queue length for the alt label is 0.\",\n                altLabel.loadStatistics.queueLength.getLatest(TimeScale.SEC10) == 0f);\n\n        \r\n        for (int i = 0; i < 3; i++) {\n            project.scheduleBuild(0, CAUSE,\n                    new ParametersAction(new StringParameterValue(\n                            PARAMETER_NAME, String.valueOf(i))));\n        }\n\n        \r\n        assertEquals(\"The job is queued as often as it was scheduled.\", 3, j\n                .getInstance().getQueue().getItems(project).size());\n\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        float labelQueueLength = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After LoadStatisticsUpdater runs, the queue length load statistic for the label is greater than 0.\",\n                labelQueueLength > 0f);\n\n        \r\n        project.setAssignedLabel(altLabel);\n        maintainQueueAndForceRunOfLoadStatisticsUpdater(project);\n\n        \r\n        float labelQueueLengthNew = label.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the queued builds should decrease.\",\n                labelQueueLengthNew < labelQueueLength);\n\n        float altLabelQueueLength = altLabel.loadStatistics.queueLength\n                .getLatest(TimeScale.SEC10);\n        assertTrue(\n                \"After assigning an alternate label to the job, the queue length load statistic for the alternate label should be greater than 0.\",\n                altLabelQueueLength > 0f);\n    }\n","realPath":"test/src/test/java/hudson/model/LabelLoadStatisticsQueueLengthTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"}],"commitId":"eb636e252161d8952b9536214dd8a0ec439a3ad7","commitMessage":"@@@Merge pull request #4851 from StefanSpieker/test_refactorings_2\n\nTests: Refactoring of various things","date":"2020-07-21 11:16:06","modifiedFileCount":"19","status":"M","submitter":"Tim Jacomb"}]
