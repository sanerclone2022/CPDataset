[{"authorTime":"2016-04-09 02:55:20","codes":[{"authorDate":"2016-04-09 02:55:20","commitOrder":1,"curCode":"    @Test public void addJobShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, View.READ, Job.READ, View.CONFIGURE)\n                .invokeWithArgs(\"aView\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","date":"2016-04-09 02:55:20","endLine":65,"groupId":"6835","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addJobShouldSucceed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d4/751b35231287b33a9fb1e1e1bf86f182a4a6d9.src","preCode":"    @Test public void addJobShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, View.READ, Job.READ, View.CONFIGURE)\n                .invokeWithArgs(\"aView\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","realPath":"test/src/test/java/hudson/cli/AddJobToViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2016-04-09 02:55:20","commitOrder":1,"curCode":"    @Test public void addJobManyShouldSucceedEvenAJobIsSpecifiedTwice() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, View.READ, Job.READ, View.CONFIGURE)\n                .invokeWithArgs(\"aView\", \"aProject\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","date":"2016-04-09 02:55:20","endLine":121,"groupId":"6840","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addJobManyShouldSucceedEvenAJobIsSpecifiedTwice","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d4/751b35231287b33a9fb1e1e1bf86f182a4a6d9.src","preCode":"    @Test public void addJobManyShouldSucceedEvenAJobIsSpecifiedTwice() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, View.READ, Job.READ, View.CONFIGURE)\n                .invokeWithArgs(\"aView\", \"aProject\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","realPath":"test/src/test/java/hudson/cli/AddJobToViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"ae82f8e93f57b59fe04b0479b26f310409e64f86","commitMessage":"@@@Merge pull request #2202 from pjanouse/JENKINS-32535\n\n[JENKINS-32535] Improved test coverage 'add-job-to-view' and 'remove-job-from-view'","date":"2016-04-09 02:55:20","modifiedFileCount":"0","status":"B","submitter":"Daniel Beck"},{"authorTime":"2021-04-20 04:54:17","codes":[{"authorDate":"2021-04-20 04:54:17","commitOrder":2,"curCode":"    @Test public void addJobShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, View.READ, Item.READ, View.CONFIGURE)\n                .invokeWithArgs(\"aView\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","date":"2021-04-20 04:54:17","endLine":64,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addJobShouldSucceed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c6/75e54489e42fc3c9337b84a07be583fa3ac329.src","preCode":"    @Test public void addJobShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, View.READ, Job.READ, View.CONFIGURE)\n                .invokeWithArgs(\"aView\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","realPath":"test/src/test/java/hudson/cli/AddJobToViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2021-04-20 04:54:17","commitOrder":2,"curCode":"    @Test public void addJobManyShouldSucceedEvenAJobIsSpecifiedTwice() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, View.READ, Item.READ, View.CONFIGURE)\n                .invokeWithArgs(\"aView\", \"aProject\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","date":"2021-04-20 04:54:17","endLine":120,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addJobManyShouldSucceedEvenAJobIsSpecifiedTwice","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c6/75e54489e42fc3c9337b84a07be583fa3ac329.src","preCode":"    @Test public void addJobManyShouldSucceedEvenAJobIsSpecifiedTwice() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, View.READ, Job.READ, View.CONFIGURE)\n                .invokeWithArgs(\"aView\", \"aProject\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","realPath":"test/src/test/java/hudson/cli/AddJobToViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"0fd55bd6b50fcdf27368c6b771fb3d8363a24f83","commitMessage":"@@@Merge pull request #5419 from basil/subtypes\n\nUse declaring class as qualifier","date":"2021-04-20 04:54:17","modifiedFileCount":"43","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2021-09-05 22:13:34","codes":[{"authorDate":"2021-09-05 22:13:34","commitOrder":3,"curCode":"    @Test public void addJobShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ, View.READ, Item.READ, View.CONFIGURE).everywhere().toAuthenticated());\n        final CLICommandInvoker.Result result = command\n                .invokeWithArgs(\"aView\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","date":"2021-09-05 22:13:34","endLine":65,"groupId":"10109","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"addJobShouldSucceed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3a/5ec4a3b7484bcf99fdefe18f88f06f6a8555ca.src","preCode":"    @Test public void addJobShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, View.READ, Item.READ, View.CONFIGURE)\n                .invokeWithArgs(\"aView\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","realPath":"test/src/test/java/hudson/cli/AddJobToViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2021-09-05 22:13:34","commitOrder":3,"curCode":"    @Test public void addJobManyShouldSucceedEvenAJobIsSpecifiedTwice() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ, View.READ, Item.READ, View.CONFIGURE).everywhere().toAuthenticated());\n        final CLICommandInvoker.Result result = command\n                .invokeWithArgs(\"aView\", \"aProject\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","date":"2021-09-05 22:13:34","endLine":121,"groupId":"10109","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"addJobManyShouldSucceedEvenAJobIsSpecifiedTwice","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3a/5ec4a3b7484bcf99fdefe18f88f06f6a8555ca.src","preCode":"    @Test public void addJobManyShouldSucceedEvenAJobIsSpecifiedTwice() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(0));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, View.READ, Item.READ, View.CONFIGURE)\n                .invokeWithArgs(\"aView\", \"aProject\", \"aProject\");\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\").getAllItems().size(), equalTo(1));\n        assertThat(j.jenkins.getView(\"aView\").contains(project), equalTo(true));\n    }\n","realPath":"test/src/test/java/hudson/cli/AddJobToViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"d7604cfb08cd82449e0d79f25432a196fa04bc2a","commitMessage":"@@@Merge pull request #5701 from jglick/anonymous-to-lambda\n\nReplace some anonymous classes with lambdas","date":"2021-09-05 22:13:34","modifiedFileCount":"32","status":"M","submitter":"Raihaan Shouhell"}]
