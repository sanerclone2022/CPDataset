[{"authorTime":"2014-06-29 06:03:19","codes":[{"authorDate":"2014-06-29 06:03:19","commitOrder":1,"curCode":"    public void testDefaultExcludesOn() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n\n        Publisher artifactArchiver = new ArtifactArchiver(\"**\", \"\", false, false, true, true);\n        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));\n        project.getBuildersList().replaceBy(Collections.singleton(new CreateDefaultExcludesArtifact()));\n\n        assertEquals(Result.SUCCESS, build(project)); \r\n        VirtualFile artifacts = project.getBuildByNumber(1).getArtifactManager().root();\n        assertFalse(artifacts.child(\".svn\").child(\"file\").exists());\n        assertFalse(artifacts.child(\"dir\").child(\".svn\").child(\"file\").exists());\n\n    }\n","date":"2014-06-29 06:03:19","endLine":312,"groupId":"6137","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultExcludesOn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ec/261f5cdf300a9560b635788185cbb9a84228d3.src","preCode":"    public void testDefaultExcludesOn() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n\n        Publisher artifactArchiver = new ArtifactArchiver(\"**\", \"\", false, false, true, true);\n        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));\n        project.getBuildersList().replaceBy(Collections.singleton(new CreateDefaultExcludesArtifact()));\n\n        assertEquals(Result.SUCCESS, build(project)); \r\n        VirtualFile artifacts = project.getBuildByNumber(1).getArtifactManager().root();\n        assertFalse(artifacts.child(\".svn\").child(\"file\").exists());\n        assertFalse(artifacts.child(\"dir\").child(\".svn\").child(\"file\").exists());\n\n    }\n","realPath":"test/src/test/java/hudson/tasks/ArtifactArchiverTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"B"},{"authorDate":"2014-06-29 06:03:19","commitOrder":1,"curCode":"    public void testDefaultExcludesOff() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n\n        Publisher artifactArchiver = new ArtifactArchiver(\"**\", \"\", false, false, true, false);\n        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));\n        project.getBuildersList().replaceBy(Collections.singleton(new CreateDefaultExcludesArtifact()));\n\n        assertEquals(Result.SUCCESS, build(project)); \r\n        VirtualFile artifacts = project.getBuildByNumber(1).getArtifactManager().root();\n        assertTrue(artifacts.child(\".svn\").child(\"file\").exists());\n        assertTrue(artifacts.child(\"dir\").child(\".svn\").child(\"file\").exists());\n    }\n","date":"2014-06-29 06:03:19","endLine":327,"groupId":"6137","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultExcludesOff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ec/261f5cdf300a9560b635788185cbb9a84228d3.src","preCode":"    public void testDefaultExcludesOff() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n\n        Publisher artifactArchiver = new ArtifactArchiver(\"**\", \"\", false, false, true, false);\n        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));\n        project.getBuildersList().replaceBy(Collections.singleton(new CreateDefaultExcludesArtifact()));\n\n        assertEquals(Result.SUCCESS, build(project)); \r\n        VirtualFile artifacts = project.getBuildByNumber(1).getArtifactManager().root();\n        assertTrue(artifacts.child(\".svn\").child(\"file\").exists());\n        assertTrue(artifacts.child(\"dir\").child(\".svn\").child(\"file\").exists());\n    }\n","realPath":"test/src/test/java/hudson/tasks/ArtifactArchiverTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"B"}],"commitId":"6d5c25ae7e88fa2e870209b4fe2e55b7b75fc0aa","commitMessage":"@@@Merge pull request #1287 from nithril/master\n\n[FIXED JENKINS-20086] Allow disabling use of default exclude patterns (.git.  .svn.  etc.)","date":"2014-06-29 06:03:19","modifiedFileCount":"2","status":"B","submitter":"Oleg Nenashev"},{"authorTime":"2014-07-22 03:41:27","codes":[{"authorDate":"2014-06-29 06:03:19","commitOrder":2,"curCode":"    public void testDefaultExcludesOn() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n\n        Publisher artifactArchiver = new ArtifactArchiver(\"**\", \"\", false, false, true, true);\n        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));\n        project.getBuildersList().replaceBy(Collections.singleton(new CreateDefaultExcludesArtifact()));\n\n        assertEquals(Result.SUCCESS, build(project)); \r\n        VirtualFile artifacts = project.getBuildByNumber(1).getArtifactManager().root();\n        assertFalse(artifacts.child(\".svn\").child(\"file\").exists());\n        assertFalse(artifacts.child(\"dir\").child(\".svn\").child(\"file\").exists());\n\n    }\n","date":"2014-06-29 06:03:19","endLine":312,"groupId":"1096","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultExcludesOn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ec/261f5cdf300a9560b635788185cbb9a84228d3.src","preCode":"    public void testDefaultExcludesOn() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n\n        Publisher artifactArchiver = new ArtifactArchiver(\"**\", \"\", false, false, true, true);\n        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));\n        project.getBuildersList().replaceBy(Collections.singleton(new CreateDefaultExcludesArtifact()));\n\n        assertEquals(Result.SUCCESS, build(project)); \r\n        VirtualFile artifacts = project.getBuildByNumber(1).getArtifactManager().root();\n        assertFalse(artifacts.child(\".svn\").child(\"file\").exists());\n        assertFalse(artifacts.child(\"dir\").child(\".svn\").child(\"file\").exists());\n\n    }\n","realPath":"test/src/test/java/hudson/tasks/ArtifactArchiverTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"N"},{"authorDate":"2014-07-22 03:41:27","commitOrder":2,"curCode":"    public void testDefaultExcludesOff() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n\n        ArtifactArchiver artifactArchiver = new ArtifactArchiver(\"**\");\n        artifactArchiver.setDefaultExcludes(false);\n        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));\n        project.getBuildersList().replaceBy(Collections.singleton(new CreateDefaultExcludesArtifact()));\n\n        assertEquals(Result.SUCCESS, build(project)); \r\n        VirtualFile artifacts = project.getBuildByNumber(1).getArtifactManager().root();\n        assertTrue(artifacts.child(\".svn\").child(\"file\").exists());\n        assertTrue(artifacts.child(\"dir\").child(\".svn\").child(\"file\").exists());\n    }\n","date":"2014-07-22 03:41:27","endLine":219,"groupId":"1096","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultExcludesOff","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/8c/0f0e38517eee993c10fa40ada8743693000ba2.src","preCode":"    public void testDefaultExcludesOff() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n\n        Publisher artifactArchiver = new ArtifactArchiver(\"**\", \"\", false, false, true, false);\n        project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver));\n        project.getBuildersList().replaceBy(Collections.singleton(new CreateDefaultExcludesArtifact()));\n\n        assertEquals(Result.SUCCESS, build(project)); \r\n        VirtualFile artifacts = project.getBuildByNumber(1).getArtifactManager().root();\n        assertTrue(artifacts.child(\".svn\").child(\"file\").exists());\n        assertTrue(artifacts.child(\"dir\").child(\".svn\").child(\"file\").exists());\n    }\n","realPath":"test/src/test/java/hudson/tasks/ArtifactArchiverTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"f6b43d08af68b051f6335ebacfb5198d7467a1a7","commitMessage":"@@@Removing ArtifactArchiver.latestOnly; LogRotator.artifactNumToKeep handles this more generally.","date":"2014-07-22 03:41:27","modifiedFileCount":"2","status":"M","submitter":"Jesse Glick"}]
