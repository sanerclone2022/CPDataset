[{"authorTime":"2011-09-10 00:35:37","codes":[{"authorDate":"2010-04-13 22:52:45","commitOrder":6,"curCode":"        public CopyOnWriteList unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n            \r\n            List items = new ArrayList();\n            while (reader.hasMoreChildren()) {\n                reader.moveDown();\n                try {\n                    Object item = readItem(reader, context, items);\n                    items.add(item);\n                } catch (CannotResolveClassException e) {\n                    LOGGER.log(WARNING,\"Failed to resolve class\",e);\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                } catch (LinkageError e) {\n                    LOGGER.log(WARNING,\"Failed to resolve class\",e);\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                }\n                reader.moveUp();\n            }\n\n            return new CopyOnWriteList(items,true);\n        }\n","date":"2010-04-13 22:52:45","endLine":199,"groupId":"5434","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"unmarshal","params":"(HierarchicalStreamReaderreader@UnmarshallingContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/9f/162825275afddee862e4fa7f2b07a4d4ff17a2.src","preCode":"        public CopyOnWriteList unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n            \r\n            List items = new ArrayList();\n            while (reader.hasMoreChildren()) {\n                reader.moveDown();\n                try {\n                    Object item = readItem(reader, context, items);\n                    items.add(item);\n                } catch (CannotResolveClassException e) {\n                    LOGGER.log(WARNING,\"Failed to resolve class\",e);\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                } catch (LinkageError e) {\n                    LOGGER.log(WARNING,\"Failed to resolve class\",e);\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                }\n                reader.moveUp();\n            }\n\n            return new CopyOnWriteList(items,true);\n        }\n","realPath":"core/src/main/java/hudson/util/CopyOnWriteList.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"NB"},{"authorDate":"2011-09-10 00:35:37","commitOrder":6,"curCode":"    public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n        String resolvesTo = reader.getAttribute(\"resolves-to\");\n        if (\"com.google.common.collect.ImmutableList$SerializedForm\".equals(resolvesTo)) {\n            \r\n            List items = new ArrayList();\n            if (reader.hasMoreChildren()) {\n                reader.moveDown();\n\t            \r\n\t            while (reader.hasMoreChildren()) {\n\t                reader.moveDown();\n\t                try {\n\t                    Object item = readItem(reader, context, items);\n\t                    items.add(item);\n\t                } catch (CannotResolveClassException e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                } catch (LinkageError e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                }\n\t                reader.moveUp();\n\t            }\n\n                \r\n                reader.moveUp();\n            }\n            return ImmutableList.copyOf(items);\n        } else {\n            return ImmutableList.copyOf((List)super.unmarshal(reader, context));\n        }\n    }\n","date":"2011-09-24 13:54:55","endLine":94,"groupId":"917","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"unmarshal","params":"(HierarchicalStreamReaderreader@UnmarshallingContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/6c/901e008a78389ac874003c192602e5fef60289.src","preCode":"    public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n        String resolvesTo = reader.getAttribute(\"resolves-to\");\n        if (\"com.google.common.collect.ImmutableList$SerializedForm\".equals(resolvesTo)) {\n            \r\n            List items = new ArrayList();\n            if (reader.hasMoreChildren()) {\n                reader.moveDown();\n\t            \r\n\t            while (reader.hasMoreChildren()) {\n\t                reader.moveDown();\n\t                try {\n\t                    Object item = readItem(reader, context, items);\n\t                    items.add(item);\n\t                } catch (CannotResolveClassException e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                } catch (LinkageError e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                }\n\t                reader.moveUp();\n\t            }\n\n                \r\n                reader.moveUp();\n            }\n            return ImmutableList.copyOf(items);\n        } else {\n            return ImmutableList.copyOf((List)super.unmarshal(reader, context));\n        }\n    }\n","realPath":"core/src/main/java/hudson/util/xstream/ImmutableListConverter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"f356b78ea03309517b112bb46442287f81a4531d","commitMessage":"@@@[FIXED JENKINS-10903] Canceling a parent multi-configuration build produce a\nbuild.xml that can't be deserialized\n\nHandle resolves-to=\"com.google.common.collect.ImmutableList$SerializedForm\"\nmanually and construct a suitable list. Any subsequent serialization of the\nclass will use the direct form of serialization.\n","date":"2011-09-24 13:54:55","modifiedFileCount":"2","status":"M","submitter":"Richard Mortimer"},{"authorTime":"2011-09-10 00:35:37","codes":[{"authorDate":"2013-08-17 04:21:49","commitOrder":7,"curCode":"        public CopyOnWriteList unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n            \r\n            List items = new ArrayList();\n            while (reader.hasMoreChildren()) {\n                reader.moveDown();\n                try {\n                    Object item = readItem(reader, context, items);\n                    items.add(item);\n                } catch (CannotResolveClassException e) {\n                    LOGGER.log(FINE, \"Failed to resolve class\", e);\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                } catch (LinkageError e) {\n                    LOGGER.log(FINE, \"Failed to resolve class\", e);\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                }\n                reader.moveUp();\n            }\n\n            return new CopyOnWriteList(items,true);\n        }\n","date":"2013-08-17 04:21:49","endLine":206,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"unmarshal","params":"(HierarchicalStreamReaderreader@UnmarshallingContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a6/e7372b8bc0311c514bc68fda1fd959e016ec77.src","preCode":"        public CopyOnWriteList unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n            \r\n            List items = new ArrayList();\n            while (reader.hasMoreChildren()) {\n                reader.moveDown();\n                try {\n                    Object item = readItem(reader, context, items);\n                    items.add(item);\n                } catch (CannotResolveClassException e) {\n                    LOGGER.log(WARNING,\"Failed to resolve class\",e);\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                } catch (LinkageError e) {\n                    LOGGER.log(WARNING,\"Failed to resolve class\",e);\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                }\n                reader.moveUp();\n            }\n\n            return new CopyOnWriteList(items,true);\n        }\n","realPath":"core/src/main/java/hudson/util/CopyOnWriteList.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"},{"authorDate":"2011-09-10 00:35:37","commitOrder":7,"curCode":"    public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n        String resolvesTo = reader.getAttribute(\"resolves-to\");\n        if (\"com.google.common.collect.ImmutableList$SerializedForm\".equals(resolvesTo)) {\n            \r\n            List items = new ArrayList();\n            if (reader.hasMoreChildren()) {\n                reader.moveDown();\n\t            \r\n\t            while (reader.hasMoreChildren()) {\n\t                reader.moveDown();\n\t                try {\n\t                    Object item = readItem(reader, context, items);\n\t                    items.add(item);\n\t                } catch (CannotResolveClassException e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                } catch (LinkageError e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                }\n\t                reader.moveUp();\n\t            }\n\n                \r\n                reader.moveUp();\n            }\n            return ImmutableList.copyOf(items);\n        } else {\n            return ImmutableList.copyOf((List)super.unmarshal(reader, context));\n        }\n    }\n","date":"2011-09-24 13:54:55","endLine":94,"groupId":"917","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"unmarshal","params":"(HierarchicalStreamReaderreader@UnmarshallingContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/6c/901e008a78389ac874003c192602e5fef60289.src","preCode":"    public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n        String resolvesTo = reader.getAttribute(\"resolves-to\");\n        if (\"com.google.common.collect.ImmutableList$SerializedForm\".equals(resolvesTo)) {\n            \r\n            List items = new ArrayList();\n            if (reader.hasMoreChildren()) {\n                reader.moveDown();\n\t            \r\n\t            while (reader.hasMoreChildren()) {\n\t                reader.moveDown();\n\t                try {\n\t                    Object item = readItem(reader, context, items);\n\t                    items.add(item);\n\t                } catch (CannotResolveClassException e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                } catch (LinkageError e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                }\n\t                reader.moveUp();\n\t            }\n\n                \r\n                reader.moveUp();\n            }\n            return ImmutableList.copyOf(items);\n        } else {\n            return ImmutableList.copyOf((List)super.unmarshal(reader, context));\n        }\n    }\n","realPath":"core/src/main/java/hudson/util/xstream/ImmutableListConverter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"}],"commitId":"711316a5bed0d388fba00258827ccc9e255a853e","commitMessage":"@@@Log CannotResolveClassException and similar at FINE.  not WARING.\nOldDataMonitor already collates these errors and presents them to the user with a fix.\nPrinting a stack trace for each and every missing class just clutters the log file.\n(Especially when restarting after disabling a widely-used plugin.)","date":"2013-08-17 04:21:49","modifiedFileCount":"3","status":"M","submitter":"Jesse Glick"},{"authorTime":"2013-12-17 04:03:07","codes":[{"authorDate":"2013-12-17 04:03:07","commitOrder":8,"curCode":"        public CopyOnWriteList unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n            \r\n            List items = new ArrayList();\n            while (reader.hasMoreChildren()) {\n                reader.moveDown();\n                try {\n                    Object item = readItem(reader, context, items);\n                    items.add(item);\n                } catch (XStreamException e) {\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                } catch (LinkageError e) {\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                }\n                reader.moveUp();\n            }\n\n            return new CopyOnWriteList(items,true);\n        }\n","date":"2013-12-17 04:03:07","endLine":202,"groupId":"917","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"unmarshal","params":"(HierarchicalStreamReaderreader@UnmarshallingContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/bf/663606585a7f7600b0fcdc9de6baae858e461b.src","preCode":"        public CopyOnWriteList unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n            \r\n            List items = new ArrayList();\n            while (reader.hasMoreChildren()) {\n                reader.moveDown();\n                try {\n                    Object item = readItem(reader, context, items);\n                    items.add(item);\n                } catch (CannotResolveClassException e) {\n                    LOGGER.log(FINE, \"Failed to resolve class\", e);\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                } catch (LinkageError e) {\n                    LOGGER.log(FINE, \"Failed to resolve class\", e);\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                }\n                reader.moveUp();\n            }\n\n            return new CopyOnWriteList(items,true);\n        }\n","realPath":"core/src/main/java/hudson/util/CopyOnWriteList.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"},{"authorDate":"2013-12-17 04:03:07","commitOrder":8,"curCode":"    public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n        String resolvesTo = reader.getAttribute(\"resolves-to\");\n        if (\"com.google.common.collect.ImmutableList$SerializedForm\".equals(resolvesTo)) {\n            \r\n            List items = new ArrayList();\n            if (reader.hasMoreChildren()) {\n                reader.moveDown();\n\t            \r\n\t            while (reader.hasMoreChildren()) {\n\t                reader.moveDown();\n\t                try {\n\t                    Object item = readItem(reader, context, items);\n\t                    items.add(item);\n\t                } catch (XStreamException e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                } catch (LinkageError e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                }\n\t                reader.moveUp();\n\t            }\n\n                \r\n                reader.moveUp();\n            }\n            return ImmutableList.copyOf(items);\n        } else {\n            return ImmutableList.copyOf((List)super.unmarshal(reader, context));\n        }\n    }\n","date":"2013-12-17 04:03:07","endLine":94,"groupId":"917","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"unmarshal","params":"(HierarchicalStreamReaderreader@UnmarshallingContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/18/fd97ec98ada93a66984ac3ed62b68eceac8ed6.src","preCode":"    public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n        String resolvesTo = reader.getAttribute(\"resolves-to\");\n        if (\"com.google.common.collect.ImmutableList$SerializedForm\".equals(resolvesTo)) {\n            \r\n            List items = new ArrayList();\n            if (reader.hasMoreChildren()) {\n                reader.moveDown();\n\t            \r\n\t            while (reader.hasMoreChildren()) {\n\t                reader.moveDown();\n\t                try {\n\t                    Object item = readItem(reader, context, items);\n\t                    items.add(item);\n\t                } catch (CannotResolveClassException e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                } catch (LinkageError e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                }\n\t                reader.moveUp();\n\t            }\n\n                \r\n                reader.moveUp();\n            }\n            return ImmutableList.copyOf(items);\n        } else {\n            return ImmutableList.copyOf((List)super.unmarshal(reader, context));\n        }\n    }\n","realPath":"core/src/main/java/hudson/util/xstream/ImmutableListConverter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"c3508113f0e1659f0e6c1064f31cb2ac1caa2ef3","commitMessage":"@@@[FIXED JENKINS-21024] Catch a full range of XStreamException?s during deserialization.  including rethrown exceptions from readResolve.","date":"2013-12-17 04:03:07","modifiedFileCount":"4","status":"M","submitter":"Jesse Glick"},{"authorTime":"2015-08-16 17:38:51","codes":[{"authorDate":"2015-08-16 17:38:51","commitOrder":9,"curCode":"        public CopyOnWriteList unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n            \r\n            List items = new ArrayList();\n            while (reader.hasMoreChildren()) {\n                reader.moveDown();\n                try {\n                    Object item = readItem(reader, context, items);\n                    items.add(item);\n                } catch (CriticalXStreamException e) {\n                    throw e;\n                } catch (XStreamException e) {\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                } catch (LinkageError e) {\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                }\n                reader.moveUp();\n            }\n\n            return new CopyOnWriteList(items,true);\n        }\n","date":"2015-08-16 17:38:51","endLine":210,"groupId":"917","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"unmarshal","params":"(HierarchicalStreamReaderreader@UnmarshallingContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/43/e189ba19a5a15f70c31b102cc8e2229067504e.src","preCode":"        public CopyOnWriteList unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n            \r\n            List items = new ArrayList();\n            while (reader.hasMoreChildren()) {\n                reader.moveDown();\n                try {\n                    Object item = readItem(reader, context, items);\n                    items.add(item);\n                } catch (XStreamException e) {\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                } catch (LinkageError e) {\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                }\n                reader.moveUp();\n            }\n\n            return new CopyOnWriteList(items,true);\n        }\n","realPath":"core/src/main/java/hudson/util/CopyOnWriteList.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"},{"authorDate":"2015-08-16 17:38:51","commitOrder":9,"curCode":"    public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n        String resolvesTo = reader.getAttribute(\"resolves-to\");\n        if (\"com.google.common.collect.ImmutableList$SerializedForm\".equals(resolvesTo)) {\n            \r\n            List items = new ArrayList();\n            if (reader.hasMoreChildren()) {\n                reader.moveDown();\n\t            \r\n\t            while (reader.hasMoreChildren()) {\n\t                reader.moveDown();\n\t                try {\n\t                    Object item = readItem(reader, context, items);\n\t                    items.add(item);\n\t                } catch (CriticalXStreamException e) {\n\t                    throw e;\n\t                } catch (XStreamException e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                } catch (LinkageError e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                }\n\t                reader.moveUp();\n\t            }\n\n                \r\n                reader.moveUp();\n            }\n            return ImmutableList.copyOf(items);\n        } else {\n            return ImmutableList.copyOf((List)super.unmarshal(reader, context));\n        }\n    }\n","date":"2015-08-16 17:38:51","endLine":98,"groupId":"917","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"unmarshal","params":"(HierarchicalStreamReaderreader@UnmarshallingContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/37/34c472454fa4e4c8fab16d57104c02914c7196.src","preCode":"    public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n        String resolvesTo = reader.getAttribute(\"resolves-to\");\n        if (\"com.google.common.collect.ImmutableList$SerializedForm\".equals(resolvesTo)) {\n            \r\n            List items = new ArrayList();\n            if (reader.hasMoreChildren()) {\n                reader.moveDown();\n\t            \r\n\t            while (reader.hasMoreChildren()) {\n\t                reader.moveDown();\n\t                try {\n\t                    Object item = readItem(reader, context, items);\n\t                    items.add(item);\n\t                } catch (XStreamException e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                } catch (LinkageError e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                }\n\t                reader.moveUp();\n\t            }\n\n                \r\n                reader.moveUp();\n            }\n            return ImmutableList.copyOf(items);\n        } else {\n            return ImmutableList.copyOf((List)super.unmarshal(reader, context));\n        }\n    }\n","realPath":"core/src/main/java/hudson/util/xstream/ImmutableListConverter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"e46afb59fd09c9418297a0573252171921a48cea","commitMessage":"@@@Merge pull request #1715 from ikedam/feature/JENKINS-28440_HandleCriticalField\n\n[JENKINS-28440] Reject configurations with errors in critical fields via REST / CLI","date":"2015-08-16 17:38:51","modifiedFileCount":"6","status":"M","submitter":"Daniel Beck"},{"authorTime":"2019-04-08 23:18:26","codes":[{"authorDate":"2019-04-08 23:18:26","commitOrder":10,"curCode":"        public CopyOnWriteList unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n            \r\n            List items = new ArrayList();\n            while (reader.hasMoreChildren()) {\n                reader.moveDown();\n                try {\n                    Object item = readItem(reader, context, items);\n                    items.add(item);\n                } catch (CriticalXStreamException e) {\n                    throw e;\n                } catch (XStreamException | LinkageError e) {\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                }\n                reader.moveUp();\n            }\n\n            return new CopyOnWriteList(items,true);\n        }\n","date":"2019-04-08 23:18:26","endLine":208,"groupId":"101099","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"unmarshal","params":"(HierarchicalStreamReaderreader@UnmarshallingContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/0e/9bd7862e12ae8ea09d4ba4a56aeaa744de27f1.src","preCode":"        public CopyOnWriteList unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n            \r\n            List items = new ArrayList();\n            while (reader.hasMoreChildren()) {\n                reader.moveDown();\n                try {\n                    Object item = readItem(reader, context, items);\n                    items.add(item);\n                } catch (CriticalXStreamException e) {\n                    throw e;\n                } catch (XStreamException e) {\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                } catch (LinkageError e) {\n                    RobustReflectionConverter.addErrorInContext(context, e);\n                }\n                reader.moveUp();\n            }\n\n            return new CopyOnWriteList(items,true);\n        }\n","realPath":"core/src/main/java/hudson/util/CopyOnWriteList.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"},{"authorDate":"2019-04-08 23:18:26","commitOrder":10,"curCode":"    public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n        String resolvesTo = reader.getAttribute(\"resolves-to\");\n        if (\"com.google.common.collect.ImmutableList$SerializedForm\".equals(resolvesTo)) {\n            \r\n            List items = new ArrayList();\n            if (reader.hasMoreChildren()) {\n                reader.moveDown();\n\t            \r\n\t            while (reader.hasMoreChildren()) {\n\t                reader.moveDown();\n\t                try {\n\t                    Object item = readItem(reader, context, items);\n\t                    items.add(item);\n\t                } catch (CriticalXStreamException e) {\n\t                    throw e;\n\t                } catch (XStreamException | LinkageError e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                }\n                    reader.moveUp();\n\t            }\n\n                \r\n                reader.moveUp();\n            }\n            return ImmutableList.copyOf(items);\n        } else {\n            return ImmutableList.copyOf((List)super.unmarshal(reader, context));\n        }\n    }\n","date":"2019-04-08 23:18:26","endLine":96,"groupId":"101099","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"unmarshal","params":"(HierarchicalStreamReaderreader@UnmarshallingContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/fe/06ac74117047d273b30ec0d905b1d4d29a8b15.src","preCode":"    public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\n        String resolvesTo = reader.getAttribute(\"resolves-to\");\n        if (\"com.google.common.collect.ImmutableList$SerializedForm\".equals(resolvesTo)) {\n            \r\n            List items = new ArrayList();\n            if (reader.hasMoreChildren()) {\n                reader.moveDown();\n\t            \r\n\t            while (reader.hasMoreChildren()) {\n\t                reader.moveDown();\n\t                try {\n\t                    Object item = readItem(reader, context, items);\n\t                    items.add(item);\n\t                } catch (CriticalXStreamException e) {\n\t                    throw e;\n\t                } catch (XStreamException e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                } catch (LinkageError e) {\n\t                    RobustReflectionConverter.addErrorInContext(context, e);\n\t                }\n\t                reader.moveUp();\n\t            }\n\n                \r\n                reader.moveUp();\n            }\n            return ImmutableList.copyOf(items);\n        } else {\n            return ImmutableList.copyOf((List)super.unmarshal(reader, context));\n        }\n    }\n","realPath":"core/src/main/java/hudson/util/xstream/ImmutableListConverter.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"6b4c6c955d10ade9b78ab02fd2733cc29e0b1ab3","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2019-04-08 23:18:26","modifiedFileCount":"242","status":"M","submitter":"Daniel Beck"}]
