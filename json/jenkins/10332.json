[{"authorTime":"2017-09-07 02:43:35","codes":[{"authorDate":"2017-09-07 02:43:35","commitOrder":2,"curCode":"    public void testLaunchWithWorkDir() throws Exception {\n        Assume.assumeFalse(\"Skipping JNLPLauncherTest.testLaunch because we are running headless\", GraphicsEnvironment.isHeadless());\n        File workDir = tmpDir.newFolder(\"workDir\");\n        \n        Computer c = addTestSlave(false);\n        launchJnlpAndVerify(c, buildJnlpArgs(c).add(\"-workDir\", workDir.getAbsolutePath()));\n        assertTrue(\"Remoting work dir should have been created\", new File(workDir, \"remoting\").exists());\n    }\n","date":"2017-09-07 02:43:35","endLine":95,"groupId":"4746","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLaunchWithWorkDir","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3f/44428525622fa9109c0b2ec235832f6513e97d.src","preCode":"    public void testLaunchWithWorkDir() throws Exception {\n        Assume.assumeFalse(\"Skipping JNLPLauncherTest.testLaunch because we are running headless\", GraphicsEnvironment.isHeadless());\n        File workDir = tmpDir.newFolder(\"workDir\");\n        \n        Computer c = addTestSlave(false);\n        launchJnlpAndVerify(c, buildJnlpArgs(c).add(\"-workDir\", workDir.getAbsolutePath()));\n        assertTrue(\"Remoting work dir should have been created\", new File(workDir, \"remoting\").exists());\n    }\n","realPath":"test/src/test/java/hudson/slaves/JNLPLauncherTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"MB"},{"authorDate":"2017-09-07 02:43:35","commitOrder":2,"curCode":"    public void testHeadlessLaunchWithCustomWorkDir() throws Exception {\n        Assume.assumeFalse(\"Skipping JNLPLauncherTest.testLaunch because we are running headless\", GraphicsEnvironment.isHeadless());\n        File workDir = tmpDir.newFolder(\"workDir\");\n        \n        Computer c = addTestSlave(false);\n        launchJnlpAndVerify(c, buildJnlpArgs(c).add(\"-arg\",\"-headless\", \"-workDir\", workDir.getAbsolutePath()));\n        assertEquals(1, ComputerListener.all().get(ListenerImpl.class).offlined);\n    }\n","date":"2017-09-07 02:43:35","endLine":128,"groupId":"6182","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testHeadlessLaunchWithCustomWorkDir","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3f/44428525622fa9109c0b2ec235832f6513e97d.src","preCode":"    public void testHeadlessLaunchWithCustomWorkDir() throws Exception {\n        Assume.assumeFalse(\"Skipping JNLPLauncherTest.testLaunch because we are running headless\", GraphicsEnvironment.isHeadless());\n        File workDir = tmpDir.newFolder(\"workDir\");\n        \n        Computer c = addTestSlave(false);\n        launchJnlpAndVerify(c, buildJnlpArgs(c).add(\"-arg\",\"-headless\", \"-workDir\", workDir.getAbsolutePath()));\n        assertEquals(1, ComputerListener.all().get(ListenerImpl.class).offlined);\n    }\n","realPath":"test/src/test/java/hudson/slaves/JNLPLauncherTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"}],"commitId":"6211e8b6ec5478b9408f41a1efe53f9016378264","commitMessage":"@@@Merge branch 'master' of git://github.com/jenkinsci/jenkins\n","date":"2017-09-07 02:43:35","modifiedFileCount":"90","status":"M","submitter":"Jesse Glick"},{"authorTime":"2020-10-26 20:48:53","codes":[{"authorDate":"2020-10-26 20:48:53","commitOrder":3,"curCode":"    public void testLaunchWithWorkDir() throws Exception {\n        Assume.assumeFalse(\"Skipping JNLPLauncherTest.testLaunch because we are running headless\", GraphicsEnvironment.isHeadless());\n        File workDir = tmpDir.newFolder(\"workDir\");\n        \n        Computer c = addTestAgent(false);\n        launchJnlpAndVerify(c, buildJnlpArgs(c).add(\"-workDir\", workDir.getAbsolutePath()));\n        assertTrue(\"Remoting work dir should have been created\", new File(workDir, \"remoting\").exists());\n    }\n","date":"2020-10-26 20:48:53","endLine":103,"groupId":"10332","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLaunchWithWorkDir","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/1d/2cced0550f324689d30fb8dae7c7e11e7e883c.src","preCode":"    public void testLaunchWithWorkDir() throws Exception {\n        Assume.assumeFalse(\"Skipping JNLPLauncherTest.testLaunch because we are running headless\", GraphicsEnvironment.isHeadless());\n        File workDir = tmpDir.newFolder(\"workDir\");\n        \n        Computer c = addTestSlave(false);\n        launchJnlpAndVerify(c, buildJnlpArgs(c).add(\"-workDir\", workDir.getAbsolutePath()));\n        assertTrue(\"Remoting work dir should have been created\", new File(workDir, \"remoting\").exists());\n    }\n","realPath":"test/src/test/java/hudson/slaves/JNLPLauncherTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2020-10-26 20:48:53","commitOrder":3,"curCode":"    public void testHeadlessLaunchWithCustomWorkDir() throws Exception {\n        Assume.assumeFalse(\"Skipping JNLPLauncherTest.testLaunch because we are running headless\", GraphicsEnvironment.isHeadless());\n        File workDir = tmpDir.newFolder(\"workDir\");\n        \n        Computer c = addTestAgent(false);\n        launchJnlpAndVerify(c, buildJnlpArgs(c).add(\"-arg\",\"-headless\", \"-workDir\", workDir.getAbsolutePath()));\n        assertEquals(1, ComputerListener.all().get(ListenerImpl.class).offlined);\n    }\n","date":"2020-10-26 20:48:53","endLine":136,"groupId":"10332","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testHeadlessLaunchWithCustomWorkDir","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/1d/2cced0550f324689d30fb8dae7c7e11e7e883c.src","preCode":"    public void testHeadlessLaunchWithCustomWorkDir() throws Exception {\n        Assume.assumeFalse(\"Skipping JNLPLauncherTest.testLaunch because we are running headless\", GraphicsEnvironment.isHeadless());\n        File workDir = tmpDir.newFolder(\"workDir\");\n        \n        Computer c = addTestSlave(false);\n        launchJnlpAndVerify(c, buildJnlpArgs(c).add(\"-arg\",\"-headless\", \"-workDir\", workDir.getAbsolutePath()));\n        assertEquals(1, ComputerListener.all().get(ListenerImpl.class).offlined);\n    }\n","realPath":"test/src/test/java/hudson/slaves/JNLPLauncherTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"}],"commitId":"7b952de6c606bb5bafc1d7d4cbf09b84fb016b54","commitMessage":"@@@Merge pull request #5010 from jeffret-b/jenkinsAgentJnlp\n\n[JENKINS-35452] A step towards removing more 'slave' terminology.","date":"2020-10-26 20:48:53","modifiedFileCount":"4","status":"M","submitter":"Oleg Nenashev"}]
