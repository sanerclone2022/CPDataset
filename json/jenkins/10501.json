[{"authorTime":"2020-01-20 21:55:10","codes":[{"authorDate":"2019-09-23 21:33:40","commitOrder":2,"curCode":"    private void assertAllAtomLinksContainRootUrl(NodeList allLinks) throws Exception {\n        for (int i = 0; i < allLinks.getLength(); i++) {\n            Node item = allLinks.item(i);\n            Node hrefAttr = item.getAttributes().getNamedItem(\"href\");\n            String url = hrefAttr.getNodeValue();\n            assertThat(url, containsString(j.getURL().toString()));\n        }\n    }\n","date":"2019-09-23 21:33:40","endLine":104,"groupId":"7319","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertAllAtomLinksContainRootUrl","params":"(NodeListallLinks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3a/87aac8ac9e5bd547dac416c0deaba075c6244a.src","preCode":"    private void assertAllAtomLinksContainRootUrl(NodeList allLinks) throws Exception {\n        for (int i = 0; i < allLinks.getLength(); i++) {\n            Node item = allLinks.item(i);\n            Node hrefAttr = item.getAttributes().getNamedItem(\"href\");\n            String url = hrefAttr.getNodeValue();\n            assertThat(url, containsString(j.getURL().toString()));\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/RSSTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"NB"},{"authorDate":"2020-01-20 21:55:10","commitOrder":2,"curCode":"    private void assertLatestRSSLinks(NodeList allLinks) throws Exception {\n        List<String> urls = new ArrayList<>(allLinks.getLength());\n        for (int i = 0; i < allLinks.getLength(); i++) {\n            Node item = allLinks.item(i);\n            String url = item.getTextContent();\n            urls.add(url);\n        }\n\n        assertThat(urls, containsInAnyOrder(\n                j.getURL().toString(),\n                j.getURL().toString() + \"job/test1/2/\",\n                j.getURL().toString() + \"job/test2/3/\"\n        ));\n    }\n","date":"2020-01-20 21:55:10","endLine":155,"groupId":"6056","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertLatestRSSLinks","params":"(NodeListallLinks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/39/67e94a7d8c5ebb82d4a09890b390a5a408206e.src","preCode":"    private void assertLatestRSSLinks(NodeList allLinks) throws Exception {\n        List<String> urls = new ArrayList<>(allLinks.getLength());\n        for (int i = 0; i < allLinks.getLength(); i++) {\n            Node item = allLinks.item(i);\n            String url = item.getTextContent();\n            urls.add(url);\n        }\n\n        assertThat(urls, containsInAnyOrder(\n                j.getURL().toString(),\n                j.getURL().toString() + \"job/test1/2/\",\n                j.getURL().toString() + \"job/test2/3/\"\n        ));\n    }\n","realPath":"test/src/test/java/hudson/model/RSSTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"}],"commitId":"574ec6e5bdf2e4ac9394e290fefff5ac1c9a5c96","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2020-01-20 21:55:10","modifiedFileCount":"193","status":"M","submitter":"Wadeck Follonier"},{"authorTime":"2020-03-05 02:00:47","codes":[{"authorDate":"2019-09-23 21:33:40","commitOrder":3,"curCode":"    private void assertAllAtomLinksContainRootUrl(NodeList allLinks) throws Exception {\n        for (int i = 0; i < allLinks.getLength(); i++) {\n            Node item = allLinks.item(i);\n            Node hrefAttr = item.getAttributes().getNamedItem(\"href\");\n            String url = hrefAttr.getNodeValue();\n            assertThat(url, containsString(j.getURL().toString()));\n        }\n    }\n","date":"2019-09-23 21:33:40","endLine":104,"groupId":"10501","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertAllAtomLinksContainRootUrl","params":"(NodeListallLinks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3a/87aac8ac9e5bd547dac416c0deaba075c6244a.src","preCode":"    private void assertAllAtomLinksContainRootUrl(NodeList allLinks) throws Exception {\n        for (int i = 0; i < allLinks.getLength(); i++) {\n            Node item = allLinks.item(i);\n            Node hrefAttr = item.getAttributes().getNamedItem(\"href\");\n            String url = hrefAttr.getNodeValue();\n            assertThat(url, containsString(j.getURL().toString()));\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/RSSTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"N"},{"authorDate":"2020-03-05 02:00:47","commitOrder":3,"curCode":"    private void assertLatestRSSLinks(NodeList allLinks, String path) throws Exception {\n        List<String> urls = new ArrayList<>(allLinks.getLength());\n        for (int i = 0; i < allLinks.getLength(); i++) {\n            Node item = allLinks.item(i);\n            String url = item.getTextContent();\n            urls.add(url);\n        }\n\n        assertThat(urls, containsInAnyOrder(\n                j.getURL().toString() + path,\n                j.getURL().toString() + \"job/test1/2/\",\n                j.getURL().toString() + \"job/test2/3/\"\n        ));\n    }\n","date":"2020-03-05 02:00:47","endLine":496,"groupId":"10501","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertLatestRSSLinks","params":"(NodeListallLinks@Stringpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f7/a586c02a6bf35cfc12c6136dec378a93941f34.src","preCode":"    private void assertLatestRSSLinks(NodeList allLinks) throws Exception {\n        List<String> urls = new ArrayList<>(allLinks.getLength());\n        for (int i = 0; i < allLinks.getLength(); i++) {\n            Node item = allLinks.item(i);\n            String url = item.getTextContent();\n            urls.add(url);\n        }\n\n        assertThat(urls, containsInAnyOrder(\n                j.getURL().toString(),\n                j.getURL().toString() + \"job/test1/2/\",\n                j.getURL().toString() + \"job/test2/3/\"\n        ));\n    }\n","realPath":"test/src/test/java/hudson/model/RSSTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":483,"status":"M"}],"commitId":"07bcd1fe597250c30397ee0d1e15f00e8fbf7ffc","commitMessage":"@@@Merge commit '7f8de3ce8a8326c83fe85e14489baacab38241ce' of https://github.com/jenkinsci/jenkins\n","date":"2020-03-05 02:00:47","modifiedFileCount":"119","status":"M","submitter":"Daniel Beck"}]
