[{"authorTime":"2017-12-14 01:53:14","codes":[{"authorDate":"2017-12-14 01:53:14","commitOrder":1,"curCode":"    @Test public void deleteRecursiveOnUnix() throws Exception {\n        assumeFalse(\"Uses Unix-specific features\", Functions.isWindows());\n        Path targetDir = temp.newFolder(\"target\").toPath();\n        Path targetContents = Files.createFile(targetDir.resolve(\"contents.txt\"));\n        Path toDelete = temp.newFolder(\"toDelete\").toPath();\n        Util.createSymlink(toDelete.toFile(), \"../targetDir\", \"link\", TaskListener.NULL);\n        Files.createFile(toDelete.resolve(\"foo\"));\n        Files.createFile(toDelete.resolve(\"bar\"));\n        FilePath f = new FilePath(toDelete.toFile());\n        f.deleteRecursive();\n        assertTrue(\"symlink target should not be deleted\", Files.exists(targetDir));\n        assertTrue(\"symlink target contents should not be deleted\", Files.exists(targetContents));\n        assertFalse(\"could not delete target\", Files.exists(toDelete));\n    }\n","date":"2017-12-14 01:53:14","endLine":807,"groupId":"4340","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteRecursiveOnUnix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/84/6900424e63bc6fe70ff9aa44211c0700fd4495.src","preCode":"    @Test public void deleteRecursiveOnUnix() throws Exception {\n        assumeFalse(\"Uses Unix-specific features\", Functions.isWindows());\n        Path targetDir = temp.newFolder(\"target\").toPath();\n        Path targetContents = Files.createFile(targetDir.resolve(\"contents.txt\"));\n        Path toDelete = temp.newFolder(\"toDelete\").toPath();\n        Util.createSymlink(toDelete.toFile(), \"../targetDir\", \"link\", TaskListener.NULL);\n        Files.createFile(toDelete.resolve(\"foo\"));\n        Files.createFile(toDelete.resolve(\"bar\"));\n        FilePath f = new FilePath(toDelete.toFile());\n        f.deleteRecursive();\n        assertTrue(\"symlink target should not be deleted\", Files.exists(targetDir));\n        assertTrue(\"symlink target contents should not be deleted\", Files.exists(targetContents));\n        assertFalse(\"could not delete target\", Files.exists(toDelete));\n    }\n","realPath":"core/src/test/java/hudson/FilePathTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":794,"status":"B"},{"authorDate":"2017-12-14 01:53:14","commitOrder":1,"curCode":"    @Test public void deleteRecursiveOnWindows() throws Exception {\n        assumeTrue(\"Uses Windows-specific features\", Functions.isWindows());\n        Path targetDir = temp.newFolder(\"targetDir\").toPath();\n        Path targetContents = Files.createFile(targetDir.resolve(\"contents.txt\"));\n        Path toDelete = temp.newFolder(\"toDelete\").toPath();\n        Process p = new ProcessBuilder()\n                .directory(toDelete.toFile())\n                .command(\"cmd.exe\", \"/C\", \"mklink /J junction ..\\\\targetDir\")\n                .start();\n        assumeThat(\"unable to create junction\", p.waitFor(), is(0));\n        Files.createFile(toDelete.resolve(\"foo\"));\n        Files.createFile(toDelete.resolve(\"bar\"));\n        FilePath f = new FilePath(toDelete.toFile());\n        f.deleteRecursive();\n        assertTrue(\"junction target should not be deleted\", Files.exists(targetDir));\n        assertTrue(\"junction target contents should not be deleted\", Files.exists(targetContents));\n        assertFalse(\"could not delete target\", Files.exists(toDelete));\n    }\n","date":"2017-12-14 01:53:14","endLine":826,"groupId":"8754","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteRecursiveOnWindows","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/84/6900424e63bc6fe70ff9aa44211c0700fd4495.src","preCode":"    @Test public void deleteRecursiveOnWindows() throws Exception {\n        assumeTrue(\"Uses Windows-specific features\", Functions.isWindows());\n        Path targetDir = temp.newFolder(\"targetDir\").toPath();\n        Path targetContents = Files.createFile(targetDir.resolve(\"contents.txt\"));\n        Path toDelete = temp.newFolder(\"toDelete\").toPath();\n        Process p = new ProcessBuilder()\n                .directory(toDelete.toFile())\n                .command(\"cmd.exe\", \"/C\", \"mklink /J junction ..\\\\targetDir\")\n                .start();\n        assumeThat(\"unable to create junction\", p.waitFor(), is(0));\n        Files.createFile(toDelete.resolve(\"foo\"));\n        Files.createFile(toDelete.resolve(\"bar\"));\n        FilePath f = new FilePath(toDelete.toFile());\n        f.deleteRecursive();\n        assertTrue(\"junction target should not be deleted\", Files.exists(targetDir));\n        assertTrue(\"junction target contents should not be deleted\", Files.exists(targetContents));\n        assertFalse(\"could not delete target\", Files.exists(toDelete));\n    }\n","realPath":"core/src/test/java/hudson/FilePathTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":809,"status":"B"}],"commitId":"c0ba0527eece7e1fbcb2fc037f8e25542bc8dd45","commitMessage":"@@@Merge commit '78adf02addc47ccb2629c9bb9101a8dd630b22a5'\n","date":"2017-12-14 01:53:14","modifiedFileCount":"66","status":"B","submitter":"Jesse Glick"},{"authorTime":"2019-01-19 00:24:19","codes":[{"authorDate":"2017-12-14 01:53:14","commitOrder":2,"curCode":"    @Test public void deleteRecursiveOnUnix() throws Exception {\n        assumeFalse(\"Uses Unix-specific features\", Functions.isWindows());\n        Path targetDir = temp.newFolder(\"target\").toPath();\n        Path targetContents = Files.createFile(targetDir.resolve(\"contents.txt\"));\n        Path toDelete = temp.newFolder(\"toDelete\").toPath();\n        Util.createSymlink(toDelete.toFile(), \"../targetDir\", \"link\", TaskListener.NULL);\n        Files.createFile(toDelete.resolve(\"foo\"));\n        Files.createFile(toDelete.resolve(\"bar\"));\n        FilePath f = new FilePath(toDelete.toFile());\n        f.deleteRecursive();\n        assertTrue(\"symlink target should not be deleted\", Files.exists(targetDir));\n        assertTrue(\"symlink target contents should not be deleted\", Files.exists(targetContents));\n        assertFalse(\"could not delete target\", Files.exists(toDelete));\n    }\n","date":"2017-12-14 01:53:14","endLine":807,"groupId":"10819","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteRecursiveOnUnix","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/84/6900424e63bc6fe70ff9aa44211c0700fd4495.src","preCode":"    @Test public void deleteRecursiveOnUnix() throws Exception {\n        assumeFalse(\"Uses Unix-specific features\", Functions.isWindows());\n        Path targetDir = temp.newFolder(\"target\").toPath();\n        Path targetContents = Files.createFile(targetDir.resolve(\"contents.txt\"));\n        Path toDelete = temp.newFolder(\"toDelete\").toPath();\n        Util.createSymlink(toDelete.toFile(), \"../targetDir\", \"link\", TaskListener.NULL);\n        Files.createFile(toDelete.resolve(\"foo\"));\n        Files.createFile(toDelete.resolve(\"bar\"));\n        FilePath f = new FilePath(toDelete.toFile());\n        f.deleteRecursive();\n        assertTrue(\"symlink target should not be deleted\", Files.exists(targetDir));\n        assertTrue(\"symlink target contents should not be deleted\", Files.exists(targetContents));\n        assertFalse(\"could not delete target\", Files.exists(toDelete));\n    }\n","realPath":"core/src/test/java/hudson/FilePathTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":794,"status":"N"},{"authorDate":"2019-01-19 00:24:19","commitOrder":2,"curCode":"    @Test public void deleteRecursiveOnWindows() throws Exception {\n        assumeTrue(\"Uses Windows-specific features\", Functions.isWindows());\n        Path targetDir = temp.newFolder(\"targetDir\").toPath();\n        Path targetContents = Files.createFile(targetDir.resolve(\"contents.txt\"));\n        Path toDelete = temp.newFolder(\"toDelete\").toPath();\n        File junction = WindowsUtil.createJunction(toDelete.resolve(\"junction\").toFile(), targetDir.toFile());\n        Files.createFile(toDelete.resolve(\"foo\"));\n        Files.createFile(toDelete.resolve(\"bar\"));\n        FilePath f = new FilePath(toDelete.toFile());\n        f.deleteRecursive();\n        assertTrue(\"junction target should not be deleted\", Files.exists(targetDir));\n        assertTrue(\"junction target contents should not be deleted\", Files.exists(targetContents));\n        assertFalse(\"could not delete junction\", junction.exists());\n        assertFalse(\"could not delete target\", Files.exists(toDelete));\n    }\n","date":"2019-01-19 00:24:19","endLine":849,"groupId":"10819","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteRecursiveOnWindows","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b4/0d0a37d412d273358571c9a41aa6aa7d0a0472.src","preCode":"    @Test public void deleteRecursiveOnWindows() throws Exception {\n        assumeTrue(\"Uses Windows-specific features\", Functions.isWindows());\n        Path targetDir = temp.newFolder(\"targetDir\").toPath();\n        Path targetContents = Files.createFile(targetDir.resolve(\"contents.txt\"));\n        Path toDelete = temp.newFolder(\"toDelete\").toPath();\n        Process p = new ProcessBuilder()\n                .directory(toDelete.toFile())\n                .command(\"cmd.exe\", \"/C\", \"mklink /J junction ..\\\\targetDir\")\n                .start();\n        assumeThat(\"unable to create junction\", p.waitFor(), is(0));\n        Files.createFile(toDelete.resolve(\"foo\"));\n        Files.createFile(toDelete.resolve(\"bar\"));\n        FilePath f = new FilePath(toDelete.toFile());\n        f.deleteRecursive();\n        assertTrue(\"junction target should not be deleted\", Files.exists(targetDir));\n        assertTrue(\"junction target contents should not be deleted\", Files.exists(targetContents));\n        assertFalse(\"could not delete target\", Files.exists(toDelete));\n    }\n","realPath":"core/src/test/java/hudson/FilePathTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":835,"status":"M"}],"commitId":"bf3f0fbf7ece8f6577408c579367c199d02dabcb","commitMessage":"@@@Merge pull request #3841 from jvz/util-delete-regression\n\n[JENKINS-55448] Util delete regression","date":"2019-01-19 00:24:19","modifiedFileCount":"5","status":"M","submitter":"Jeff Thompson"}]
