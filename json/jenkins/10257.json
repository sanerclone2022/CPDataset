[{"authorTime":"2016-03-14 23:52:59","codes":[{"authorDate":"2017-05-19 14:12:31","commitOrder":2,"curCode":"    @Test public void dummyRangeShouldSuccessEvenTheBuildIsStuckInTheQueue() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(new Shell(\"echo 1\\nsleep 10s\"));\n        project.setAssignedLabel(new LabelAtom(\"never_created\"));\n        assertThat(\"Job wasn't scheduled properly\", project.scheduleBuild(0), equalTo(true));\n        Thread.sleep(1000);\n        assertThat(\"Job wasn't scheduled properly - it isn't in the queue\",\n                project.isInQueue(), equalTo(true));\n        assertThat(\"Job wasn't scheduled properly - it is running on non-exist node\",\n                project.isBuilding(), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(\"aProject\", \"1\");\n        assertThat(result, succeeded());\n        assertThat(result.stdout(), containsString(\"Builds: \" + System.lineSeparator()));\n    }\n","date":"2017-05-19 14:12:31","endLine":130,"groupId":"3907","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"dummyRangeShouldSuccessEvenTheBuildIsStuckInTheQueue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/23/3a32cd011aa5386f272a07de7eaeaef132982e.src","preCode":"    @Test public void dummyRangeShouldSuccessEvenTheBuildIsStuckInTheQueue() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(new Shell(\"echo 1\\nsleep 10s\"));\n        project.setAssignedLabel(new LabelAtom(\"never_created\"));\n        assertThat(\"Job wasn't scheduled properly\", project.scheduleBuild(0), equalTo(true));\n        Thread.sleep(1000);\n        assertThat(\"Job wasn't scheduled properly - it isn't in the queue\",\n                project.isInQueue(), equalTo(true));\n        assertThat(\"Job wasn't scheduled properly - it is running on non-exist node\",\n                project.isBuilding(), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(\"aProject\", \"1\");\n        assertThat(result, succeeded());\n        assertThat(result.stdout(), containsString(\"Builds: \" + System.lineSeparator()));\n    }\n","realPath":"test/src/test/java/hudson/cli/RunRangeCommand2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"},{"authorDate":"2016-03-14 23:52:59","commitOrder":2,"curCode":"    @Test public void consoleShouldFailWhenRequestedBuildDoesNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ, Item.BUILD)\n                .invokeWithArgs(\"aProject\", \"1\");\n\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: No such build #1\"));\n    }\n","date":"2016-03-14 23:52:59","endLine":130,"groupId":"3907","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"consoleShouldFailWhenRequestedBuildDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f4/8f0fe1ed9b4b78cec0c7bcc0f23507c3dabd8c.src","preCode":"    @Test public void consoleShouldFailWhenRequestedBuildDoesNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ, Item.BUILD)\n                .invokeWithArgs(\"aProject\", \"1\");\n\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: No such build #1\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/ConsoleCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"NB"}],"commitId":"33afbcc87f783e4b2ea79ef1a77e9bbef6e6b837","commitMessage":"@@@Make all CLI commands compatible with Pipeline where possible (#2874)\n\n* [FIX JENKINS-30785] Generalize some CLI stuff to AbstractItem\n\n* Offering default methods on ParameterizedJob.\n\n* Javadoc typo.\n\n* Cleaner use of default methods in ParameterizedJob.\n\n* Need to pick up https://github.com/infradna/bridge-method-injector/pull/15 to be able to build.\n\n* Sketch of pulling disabled functionality into ParameterizedJob.\n\n* EnableJobCommandTest.groovy ? EnableJobCommandTest.java.  and replacing deprecated Remoting-based CLI calls with CLICommandInvoker.\n\n* All CLI commands could be broken by a missing CLI.*.shortDescription key on just one!\n\n* Forgot to move CLI method short descriptions to new package.\n\n* Needed a @CLIResolver for ParameterizedJob. Adding an OptionHandler while we are here.\n\n* Trying to fix up access-modifier versions; started failing in CI today for unknown reasons.\n\n* Introduced <p:makeDisabled/> by analogy with <p:config-disableBuild/>.\n\n* Using new type bounds.\n\n* access-modifier 1.11 released.\n\n* MatrixProject and MavenModuleSet both expect to have access to makeDisabled.jelly.\n\n* Trying to generalize some more.\n\n* Minor simplification.\n\n* [JENKINS-34716] Generalizing doPolling and schedulePolling.\n\n* isBuildable\n\n* Obsolete comment.\n\n* Updated comments.\n\n* bridge-method-injector 1.17\n\n* Unfortunately AbstractProject.schedulePolling cannot delegate to SCMTriggerItem.\n\n* Making delete-builds and list-changes commands work with Pipeline.\n\n* [FIXED JENKINS-41527] Made console CLI command compatible with Pipeline.\n\n* Fixed set-build-description and set-build-display-name.\n\n* @oleg-nenashev agreed it would be clearer to explicitly mark commands as restricted.  not APIs.\n\n* Updated tests to match slight message changes.\n\n* bridge-method-injector 1.17\n\n* @olivergondza pointed out that RunRangeCommand is a better name than JobRangeCommand.\n","date":"2017-05-19 14:12:31","modifiedFileCount":"10","status":"M","submitter":"Jesse Glick"},{"authorTime":"2021-04-20 04:54:17","codes":[{"authorDate":"2021-04-20 04:54:17","commitOrder":3,"curCode":"    @Test public void dummyRangeShouldSuccessEvenTheBuildIsStuckInTheQueue() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(new Shell(\"echo 1\\nsleep 10s\"));\n        project.setAssignedLabel(new LabelAtom(\"never_created\"));\n        assertThat(\"Job wasn't scheduled properly\", project.scheduleBuild(0), equalTo(true));\n        Thread.sleep(1000);\n        assertThat(\"Job wasn't scheduled properly - it isn't in the queue\",\n                project.isInQueue(), equalTo(true));\n        assertThat(\"Job wasn't scheduled properly - it is running on non-exist node\",\n                project.isBuilding(), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Item.READ)\n                .invokeWithArgs(\"aProject\", \"1\");\n        assertThat(result, succeeded());\n        assertThat(result.stdout(), containsString(\"Builds: \" + System.lineSeparator()));\n    }\n","date":"2021-04-20 04:54:17","endLine":122,"groupId":"10257","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"dummyRangeShouldSuccessEvenTheBuildIsStuckInTheQueue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/dc/61880ab303e29b76cf92bd4bc8542f76a9b2f4.src","preCode":"    @Test public void dummyRangeShouldSuccessEvenTheBuildIsStuckInTheQueue() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(new Shell(\"echo 1\\nsleep 10s\"));\n        project.setAssignedLabel(new LabelAtom(\"never_created\"));\n        assertThat(\"Job wasn't scheduled properly\", project.scheduleBuild(0), equalTo(true));\n        Thread.sleep(1000);\n        assertThat(\"Job wasn't scheduled properly - it isn't in the queue\",\n                project.isInQueue(), equalTo(true));\n        assertThat(\"Job wasn't scheduled properly - it is running on non-exist node\",\n                project.isBuilding(), equalTo(false));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ)\n                .invokeWithArgs(\"aProject\", \"1\");\n        assertThat(result, succeeded());\n        assertThat(result.stdout(), containsString(\"Builds: \" + System.lineSeparator()));\n    }\n","realPath":"test/src/test/java/hudson/cli/RunRangeCommand2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2021-04-20 04:54:17","commitOrder":3,"curCode":"    @Test public void consoleShouldFailWhenRequestedBuildDoesNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Item.READ, Item.BUILD)\n                .invokeWithArgs(\"aProject\", \"1\");\n\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: No such build #1\"));\n    }\n","date":"2021-04-20 04:54:17","endLine":132,"groupId":"10257","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"consoleShouldFailWhenRequestedBuildDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/81/922f42fdde1d3982ae8b212a0c8f63de445592.src","preCode":"    @Test public void consoleShouldFailWhenRequestedBuildDoesNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ, Job.READ, Item.BUILD)\n                .invokeWithArgs(\"aProject\", \"1\");\n\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: No such build #1\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/ConsoleCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"0fd55bd6b50fcdf27368c6b771fb3d8363a24f83","commitMessage":"@@@Merge pull request #5419 from basil/subtypes\n\nUse declaring class as qualifier","date":"2021-04-20 04:54:17","modifiedFileCount":"43","status":"M","submitter":"Oleg Nenashev"}]
