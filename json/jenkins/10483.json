[{"authorTime":"2020-11-07 02:30:25","codes":[{"authorDate":"2020-11-07 02:30:25","commitOrder":2,"curCode":"    public void testEnsureInvalidTimeZoneDefaultsToNull() throws IOException {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n\n        User user = User.get(\"John Smith\", true, java.util.Collections.emptyMap());\n        SecurityContextHolder.getContext().setAuthentication(user.impersonate2());\n\n        TimeZoneProperty tzp = new TimeZoneProperty(\"InvalidTimeZoneName\");\n        user.addProperty(tzp);\n\n        assertEquals(null, TimeZoneProperty.forCurrentUser());\n    }\n","date":"2020-11-07 02:30:25","endLine":38,"groupId":"203","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEnsureInvalidTimeZoneDefaultsToNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3f/2c1929910a00fe74b30ab87f657d2baa03fe82.src","preCode":"    public void testEnsureInvalidTimeZoneDefaultsToNull() throws IOException {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n\n        User user = User.get(\"John Smith\", true, java.util.Collections.emptyMap());\n        SecurityContextHolder.getContext().setAuthentication(user.impersonate2());\n\n        TimeZoneProperty tzp = new TimeZoneProperty(\"InvalidTimeZoneName\");\n        user.addProperty(tzp);\n\n        assertEquals(null, TimeZoneProperty.forCurrentUser());\n    }\n","realPath":"test/src/test/java/hudson/model/TimeZonePropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"MB"},{"authorDate":"2020-11-07 02:30:25","commitOrder":2,"curCode":"    public void testSetUserDefinedTimeZone() throws IOException {\n        String timeZone = TimeZone.getDefault().getID();\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n\n        User user = User.get(\"John Smith\", true, java.util.Collections.emptyMap());\n        SecurityContextHolder.getContext().setAuthentication(user.impersonate2());\n\n        assertEquals(null, TimeZoneProperty.forCurrentUser());\n        TimeZoneProperty tzp = new TimeZoneProperty(timeZone);\n        user.addProperty(tzp);\n        assertEquals(TimeZone.getDefault().getID(), TimeZoneProperty.forCurrentUser());\n    }\n","date":"2020-11-07 02:30:25","endLine":52,"groupId":"204","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetUserDefinedTimeZone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3f/2c1929910a00fe74b30ab87f657d2baa03fe82.src","preCode":"    public void testSetUserDefinedTimeZone() throws IOException {\n        String timeZone = TimeZone.getDefault().getID();\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n\n        User user = User.get(\"John Smith\", true, java.util.Collections.emptyMap());\n        SecurityContextHolder.getContext().setAuthentication(user.impersonate2());\n\n        assertEquals(null, TimeZoneProperty.forCurrentUser());\n        TimeZoneProperty tzp = new TimeZoneProperty(timeZone);\n        user.addProperty(tzp);\n        assertEquals(TimeZone.getDefault().getID(), TimeZoneProperty.forCurrentUser());\n    }\n","realPath":"test/src/test/java/hudson/model/TimeZonePropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"MB"}],"commitId":"a9ca5ef3d4c97937636bf3c585f4232514279b14","commitMessage":"@@@[JEP-227] Replace Acegi Security with Spring Security & upgrade Spring Framework (#4848)\n\nReplacing Acegi Security with Spring Security\n\nCo-authored-by: Tim Jacomb <timjacomb1+github@gmail.com>\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>","date":"2020-11-07 02:30:25","modifiedFileCount":"149","status":"M","submitter":"Jesse Glick"},{"authorTime":"2021-01-03 01:20:57","codes":[{"authorDate":"2021-01-03 01:20:57","commitOrder":3,"curCode":"    public void testEnsureInvalidTimeZoneDefaultsToNull() throws IOException {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n\n        User user = User.get(\"John Smith\", true, java.util.Collections.emptyMap());\n        SecurityContextHolder.getContext().setAuthentication(user.impersonate2());\n\n        TimeZoneProperty tzp = new TimeZoneProperty(\"InvalidTimeZoneName\");\n        user.addProperty(tzp);\n\n        assertNull(TimeZoneProperty.forCurrentUser());\n    }\n","date":"2021-01-03 01:20:57","endLine":38,"groupId":"10483","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testEnsureInvalidTimeZoneDefaultsToNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/88/1827d5b33c2154476fc80d4dd529ed27cbf173.src","preCode":"    public void testEnsureInvalidTimeZoneDefaultsToNull() throws IOException {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n\n        User user = User.get(\"John Smith\", true, java.util.Collections.emptyMap());\n        SecurityContextHolder.getContext().setAuthentication(user.impersonate2());\n\n        TimeZoneProperty tzp = new TimeZoneProperty(\"InvalidTimeZoneName\");\n        user.addProperty(tzp);\n\n        assertEquals(null, TimeZoneProperty.forCurrentUser());\n    }\n","realPath":"test/src/test/java/hudson/model/TimeZonePropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"M"},{"authorDate":"2021-01-03 01:20:57","commitOrder":3,"curCode":"    public void testSetUserDefinedTimeZone() throws IOException {\n        String timeZone = TimeZone.getDefault().getID();\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n\n        User user = User.get(\"John Smith\", true, java.util.Collections.emptyMap());\n        SecurityContextHolder.getContext().setAuthentication(user.impersonate2());\n\n        assertNull(TimeZoneProperty.forCurrentUser());\n        TimeZoneProperty tzp = new TimeZoneProperty(timeZone);\n        user.addProperty(tzp);\n        assertEquals(TimeZone.getDefault().getID(), TimeZoneProperty.forCurrentUser());\n    }\n","date":"2021-01-03 01:20:57","endLine":52,"groupId":"10483","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testSetUserDefinedTimeZone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/88/1827d5b33c2154476fc80d4dd529ed27cbf173.src","preCode":"    public void testSetUserDefinedTimeZone() throws IOException {\n        String timeZone = TimeZone.getDefault().getID();\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n\n        User user = User.get(\"John Smith\", true, java.util.Collections.emptyMap());\n        SecurityContextHolder.getContext().setAuthentication(user.impersonate2());\n\n        assertEquals(null, TimeZoneProperty.forCurrentUser());\n        TimeZoneProperty tzp = new TimeZoneProperty(timeZone);\n        user.addProperty(tzp);\n        assertEquals(TimeZone.getDefault().getID(), TimeZoneProperty.forCurrentUser());\n    }\n","realPath":"test/src/test/java/hudson/model/TimeZonePropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"}],"commitId":"a9ee90e7fc931445956616ffae4ea3c5ababe41d","commitMessage":"@@@Merge pull request #5134 from basil/improvements\n\nCode cleanup","date":"2021-01-03 01:20:57","modifiedFileCount":"88","status":"M","submitter":"Oleg Nenashev"}]
