[{"authorTime":"2016-07-02 00:06:45","codes":[{"authorDate":"2013-06-18 17:54:12","commitOrder":2,"curCode":"    public static List<NodePropertyDescriptor> getGlobalNodePropertyDescriptors() {\n        List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();\n        Collection<NodePropertyDescriptor> list = (Collection) Jenkins.getInstance().getDescriptorList(NodeProperty.class);\n        for (NodePropertyDescriptor npd : list) {\n            if (npd.isApplicableAsGlobal()) {\n                result.add(npd);\n            }\n        }\n        return result;\n    }\n","date":"2013-06-18 17:54:12","endLine":813,"groupId":"2522","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getGlobalNodePropertyDescriptors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/78/1afece9c921789718c3493756756e027bed952.src","preCode":"    public static List<NodePropertyDescriptor> getGlobalNodePropertyDescriptors() {\n        List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();\n        Collection<NodePropertyDescriptor> list = (Collection) Jenkins.getInstance().getDescriptorList(NodeProperty.class);\n        for (NodePropertyDescriptor npd : list) {\n            if (npd.isApplicableAsGlobal()) {\n                result.add(npd);\n            }\n        }\n        return result;\n    }\n","realPath":"core/src/main/java/hudson/Functions.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":804,"status":"NB"},{"authorDate":"2016-07-02 00:06:45","commitOrder":2,"curCode":"        public final List<NodePropertyDescriptor> nodePropertyDescriptors(@CheckForNull Slave it) {\n            List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();\n            Collection<NodePropertyDescriptor> list =\n                    (Collection) Jenkins.getInstance().getDescriptorList(NodeProperty.class);\n            for (NodePropertyDescriptor npd : it == null\n                    ? DescriptorVisibilityFilter.applyType(clazz, list)\n                    : DescriptorVisibilityFilter.apply(it, list)) {\n                if (npd.isApplicable(clazz)) {\n                    result.add(npd);\n                }\n            }\n            return result;\n        }\n","date":"2016-07-02 00:06:45","endLine":544,"groupId":"4409","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"nodePropertyDescriptors","params":"(@CheckForNullSlaveit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/76/fefa1fe12b178d1e9803ed17a45e3d3d3fe968.src","preCode":"        public final List<NodePropertyDescriptor> nodePropertyDescriptors(@CheckForNull Slave it) {\n            List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();\n            Collection<NodePropertyDescriptor> list =\n                    (Collection) Jenkins.getInstance().getDescriptorList(NodeProperty.class);\n            for (NodePropertyDescriptor npd : it == null\n                    ? DescriptorVisibilityFilter.applyType(clazz, list)\n                    : DescriptorVisibilityFilter.apply(it, list)) {\n                if (npd.isApplicable(clazz)) {\n                    result.add(npd);\n                }\n            }\n            return result;\n        }\n","realPath":"core/src/main/java/hudson/model/Slave.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":532,"status":"B"}],"commitId":"5a0d7ece6a32be4e9df37f055a950c51c80ffdf8","commitMessage":"@@@Merge pull request #2427 from stephenc/jenkins-36280\n\n[FIXED JENKINS-36280] Enable DescriptorVisibilityFilter for Slave's C?","date":"2016-07-02 00:06:45","modifiedFileCount":"6","status":"M","submitter":"Stephen Connolly"},{"authorTime":"2019-04-08 23:18:26","codes":[{"authorDate":"2013-06-18 17:54:12","commitOrder":3,"curCode":"    public static List<NodePropertyDescriptor> getGlobalNodePropertyDescriptors() {\n        List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();\n        Collection<NodePropertyDescriptor> list = (Collection) Jenkins.getInstance().getDescriptorList(NodeProperty.class);\n        for (NodePropertyDescriptor npd : list) {\n            if (npd.isApplicableAsGlobal()) {\n                result.add(npd);\n            }\n        }\n        return result;\n    }\n","date":"2013-06-18 17:54:12","endLine":813,"groupId":"2522","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getGlobalNodePropertyDescriptors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/78/1afece9c921789718c3493756756e027bed952.src","preCode":"    public static List<NodePropertyDescriptor> getGlobalNodePropertyDescriptors() {\n        List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();\n        Collection<NodePropertyDescriptor> list = (Collection) Jenkins.getInstance().getDescriptorList(NodeProperty.class);\n        for (NodePropertyDescriptor npd : list) {\n            if (npd.isApplicableAsGlobal()) {\n                result.add(npd);\n            }\n        }\n        return result;\n    }\n","realPath":"core/src/main/java/hudson/Functions.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":804,"status":"N"},{"authorDate":"2019-04-08 23:18:26","commitOrder":3,"curCode":"        public final List<NodePropertyDescriptor> nodePropertyDescriptors(@CheckForNull Slave it) {\n            List<NodePropertyDescriptor> result = new ArrayList<>();\n            Collection<NodePropertyDescriptor> list =\n                    (Collection) Jenkins.getInstance().getDescriptorList(NodeProperty.class);\n            for (NodePropertyDescriptor npd : it == null\n                    ? DescriptorVisibilityFilter.applyType(clazz, list)\n                    : DescriptorVisibilityFilter.apply(it, list)) {\n                if (npd.isApplicable(clazz)) {\n                    result.add(npd);\n                }\n            }\n            return result;\n        }\n","date":"2019-04-08 23:18:26","endLine":650,"groupId":"4409","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"nodePropertyDescriptors","params":"(@CheckForNullSlaveit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c9/514a34d75781ea465029de6527d47caf8bc449.src","preCode":"        public final List<NodePropertyDescriptor> nodePropertyDescriptors(@CheckForNull Slave it) {\n            List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();\n            Collection<NodePropertyDescriptor> list =\n                    (Collection) Jenkins.getInstance().getDescriptorList(NodeProperty.class);\n            for (NodePropertyDescriptor npd : it == null\n                    ? DescriptorVisibilityFilter.applyType(clazz, list)\n                    : DescriptorVisibilityFilter.apply(it, list)) {\n                if (npd.isApplicable(clazz)) {\n                    result.add(npd);\n                }\n            }\n            return result;\n        }\n","realPath":"core/src/main/java/hudson/model/Slave.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":638,"status":"M"}],"commitId":"6b4c6c955d10ade9b78ab02fd2733cc29e0b1ab3","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2019-04-08 23:18:26","modifiedFileCount":"242","status":"M","submitter":"Daniel Beck"},{"authorTime":"2019-07-03 02:02:48","codes":[{"authorDate":"2019-07-03 02:02:48","commitOrder":4,"curCode":"    public static List<NodePropertyDescriptor> getGlobalNodePropertyDescriptors() {\n        List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();\n        Collection<NodePropertyDescriptor> list = (Collection) Jenkins.get().getDescriptorList(NodeProperty.class);\n        for (NodePropertyDescriptor npd : list) {\n            if (npd.isApplicableAsGlobal()) {\n                result.add(npd);\n            }\n        }\n        return result;\n    }\n","date":"2019-07-03 02:02:48","endLine":977,"groupId":"836","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getGlobalNodePropertyDescriptors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/52/4ec8eaab4da57d01ad67204ff8ff4a6a8ad929.src","preCode":"    public static List<NodePropertyDescriptor> getGlobalNodePropertyDescriptors() {\n        List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();\n        Collection<NodePropertyDescriptor> list = (Collection) Jenkins.getInstance().getDescriptorList(NodeProperty.class);\n        for (NodePropertyDescriptor npd : list) {\n            if (npd.isApplicableAsGlobal()) {\n                result.add(npd);\n            }\n        }\n        return result;\n    }\n","realPath":"core/src/main/java/hudson/Functions.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":968,"status":"M"},{"authorDate":"2019-07-03 02:02:48","commitOrder":4,"curCode":"        public final List<NodePropertyDescriptor> nodePropertyDescriptors(@CheckForNull Slave it) {\n            List<NodePropertyDescriptor> result = new ArrayList<>();\n            Collection<NodePropertyDescriptor> list =\n                    (Collection) Jenkins.get().getDescriptorList(NodeProperty.class);\n            for (NodePropertyDescriptor npd : it == null\n                    ? DescriptorVisibilityFilter.applyType(clazz, list)\n                    : DescriptorVisibilityFilter.apply(it, list)) {\n                if (npd.isApplicable(clazz)) {\n                    result.add(npd);\n                }\n            }\n            return result;\n        }\n","date":"2019-07-03 02:02:48","endLine":650,"groupId":"406","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"nodePropertyDescriptors","params":"(@CheckForNullSlaveit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f6/8526047ea84d2c3ad70e77ff40c7d2a166abcc.src","preCode":"        public final List<NodePropertyDescriptor> nodePropertyDescriptors(@CheckForNull Slave it) {\n            List<NodePropertyDescriptor> result = new ArrayList<>();\n            Collection<NodePropertyDescriptor> list =\n                    (Collection) Jenkins.getInstance().getDescriptorList(NodeProperty.class);\n            for (NodePropertyDescriptor npd : it == null\n                    ? DescriptorVisibilityFilter.applyType(clazz, list)\n                    : DescriptorVisibilityFilter.apply(it, list)) {\n                if (npd.isApplicable(clazz)) {\n                    result.add(npd);\n                }\n            }\n            return result;\n        }\n","realPath":"core/src/main/java/hudson/model/Slave.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":638,"status":"M"}],"commitId":"494119294fa2f095b4a28db0dd32c0d2092d9fa1","commitMessage":"@@@Merge commit '4404c6e662befe16e8daa1ea7a412df73b370086' of github.com:jenkinsci/jenkins\n","date":"2019-07-03 02:02:48","modifiedFileCount":"292","status":"M","submitter":"Jeff Thompson"},{"authorTime":"2019-07-03 02:02:48","codes":[{"authorDate":"2019-10-02 15:46:53","commitOrder":5,"curCode":"    public static List<NodePropertyDescriptor> getGlobalNodePropertyDescriptors() {\n        List<NodePropertyDescriptor> result = new ArrayList<>();\n        Collection<NodePropertyDescriptor> list = (Collection) Jenkins.get().getDescriptorList(NodeProperty.class);\n        for (NodePropertyDescriptor npd : list) {\n            if (npd.isApplicableAsGlobal()) {\n                result.add(npd);\n            }\n        }\n        return result;\n    }\n","date":"2019-10-02 15:46:53","endLine":978,"groupId":"10977","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getGlobalNodePropertyDescriptors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/04/38e8135c8730aa0d5d26a702a95a32071fc0b0.src","preCode":"    public static List<NodePropertyDescriptor> getGlobalNodePropertyDescriptors() {\n        List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();\n        Collection<NodePropertyDescriptor> list = (Collection) Jenkins.get().getDescriptorList(NodeProperty.class);\n        for (NodePropertyDescriptor npd : list) {\n            if (npd.isApplicableAsGlobal()) {\n                result.add(npd);\n            }\n        }\n        return result;\n    }\n","realPath":"core/src/main/java/hudson/Functions.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":969,"status":"M"},{"authorDate":"2019-07-03 02:02:48","commitOrder":5,"curCode":"        public final List<NodePropertyDescriptor> nodePropertyDescriptors(@CheckForNull Slave it) {\n            List<NodePropertyDescriptor> result = new ArrayList<>();\n            Collection<NodePropertyDescriptor> list =\n                    (Collection) Jenkins.get().getDescriptorList(NodeProperty.class);\n            for (NodePropertyDescriptor npd : it == null\n                    ? DescriptorVisibilityFilter.applyType(clazz, list)\n                    : DescriptorVisibilityFilter.apply(it, list)) {\n                if (npd.isApplicable(clazz)) {\n                    result.add(npd);\n                }\n            }\n            return result;\n        }\n","date":"2019-07-03 02:02:48","endLine":650,"groupId":"10977","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"nodePropertyDescriptors","params":"(@CheckForNullSlaveit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f6/8526047ea84d2c3ad70e77ff40c7d2a166abcc.src","preCode":"        public final List<NodePropertyDescriptor> nodePropertyDescriptors(@CheckForNull Slave it) {\n            List<NodePropertyDescriptor> result = new ArrayList<>();\n            Collection<NodePropertyDescriptor> list =\n                    (Collection) Jenkins.get().getDescriptorList(NodeProperty.class);\n            for (NodePropertyDescriptor npd : it == null\n                    ? DescriptorVisibilityFilter.applyType(clazz, list)\n                    : DescriptorVisibilityFilter.apply(it, list)) {\n                if (npd.isApplicable(clazz)) {\n                    result.add(npd);\n                }\n            }\n            return result;\n        }\n","realPath":"core/src/main/java/hudson/model/Slave.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":638,"status":"N"}],"commitId":"531972f113e6ff56f393512f0e17a59647fea54f","commitMessage":"@@@Merge pull request #4243 from res0nance/infer-types\n\nUse type inference instead of specifying it","date":"2019-10-02 15:46:53","modifiedFileCount":"44","status":"M","submitter":"Oleg Nenashev"}]
