[{"authorTime":"2016-07-28 23:02:11","codes":[{"authorDate":"2016-07-28 23:02:11","commitOrder":1,"curCode":"    public void whitelistedParameter() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.<ParameterDefinition>asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            System.setProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME, \"whitelisted1,whitelisted2\");\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                    new StringParameterValue(\"foo\", \"baz\"),\n                    new StringParameterValue(\"bar\", \"bar\"),\n                    new StringParameterValue(\"whitelisted1\", \"x\"),\n                    new StringParameterValue(\"whitelisted2\", \"y\")\n            )));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","date":"2016-07-28 23:02:11","endLine":151,"groupId":"8696","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"whitelistedParameter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/32/a9d59b8f6eea827cd3af82167792cef0d36fb1.src","preCode":"    public void whitelistedParameter() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.<ParameterDefinition>asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            System.setProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME, \"whitelisted1,whitelisted2\");\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                    new StringParameterValue(\"foo\", \"baz\"),\n                    new StringParameterValue(\"bar\", \"bar\"),\n                    new StringParameterValue(\"whitelisted1\", \"x\"),\n                    new StringParameterValue(\"whitelisted2\", \"y\")\n            )));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/ParametersAction2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"},{"authorDate":"2016-07-28 23:02:11","commitOrder":1,"curCode":"    public void whitelistedParameterByOverride() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        String name = p.getFullName();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.<ParameterDefinition>asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            ParametersAction action = new ParametersAction(\n                    Arrays.<ParameterValue>asList(\n                        new StringParameterValue(\"foo\", \"baz\"),\n                        new StringParameterValue(\"bar\", \"bar\"),\n                        new StringParameterValue(\"whitelisted1\", \"x\"),\n                        new StringParameterValue(\"whitelisted2\", \"y\"),\n                        new StringParameterValue(\"whitelisted3\", \"y\")\n                                                 ),\n                    Arrays.asList(\"whitelisted1\", \"whitelisted2\"));\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), action));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n            p = null;\n            build = null;\n            j.jenkins.reload();\n            \r\n            p = j.jenkins.getItemByFullName(name, FreeStyleProject.class);\n            build = p.getLastBuild();\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","date":"2016-07-28 23:02:11","endLine":195,"groupId":"8697","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"whitelistedParameterByOverride","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/32/a9d59b8f6eea827cd3af82167792cef0d36fb1.src","preCode":"    public void whitelistedParameterByOverride() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        String name = p.getFullName();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.<ParameterDefinition>asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            ParametersAction action = new ParametersAction(\n                    Arrays.<ParameterValue>asList(\n                        new StringParameterValue(\"foo\", \"baz\"),\n                        new StringParameterValue(\"bar\", \"bar\"),\n                        new StringParameterValue(\"whitelisted1\", \"x\"),\n                        new StringParameterValue(\"whitelisted2\", \"y\"),\n                        new StringParameterValue(\"whitelisted3\", \"y\")\n                                                 ),\n                    Arrays.asList(\"whitelisted1\", \"whitelisted2\"));\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), action));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n            p = null;\n            build = null;\n            j.jenkins.reload();\n            \r\n            p = j.jenkins.getItemByFullName(name, FreeStyleProject.class);\n            build = p.getLastBuild();\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/ParametersAction2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"}],"commitId":"edfffb160a8a96fd4df4eca96d608b883f21b993","commitMessage":"@@@Merge pull request #2478 from jglick/Test2\n\nTests are not run unless the class name ends with \"Test\"","date":"2016-07-28 23:02:11","modifiedFileCount":"0","status":"B","submitter":"Jesse Glick"},{"authorTime":"2020-01-20 21:55:10","codes":[{"authorDate":"2016-07-28 23:02:11","commitOrder":2,"curCode":"    public void whitelistedParameter() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.<ParameterDefinition>asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            System.setProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME, \"whitelisted1,whitelisted2\");\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                    new StringParameterValue(\"foo\", \"baz\"),\n                    new StringParameterValue(\"bar\", \"bar\"),\n                    new StringParameterValue(\"whitelisted1\", \"x\"),\n                    new StringParameterValue(\"whitelisted2\", \"y\")\n            )));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","date":"2016-07-28 23:02:11","endLine":151,"groupId":"8696","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"whitelistedParameter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/32/a9d59b8f6eea827cd3af82167792cef0d36fb1.src","preCode":"    public void whitelistedParameter() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.<ParameterDefinition>asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            System.setProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME, \"whitelisted1,whitelisted2\");\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                    new StringParameterValue(\"foo\", \"baz\"),\n                    new StringParameterValue(\"bar\", \"bar\"),\n                    new StringParameterValue(\"whitelisted1\", \"x\"),\n                    new StringParameterValue(\"whitelisted2\", \"y\")\n            )));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/ParametersAction2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"N"},{"authorDate":"2020-01-20 21:55:10","commitOrder":2,"curCode":"    public void whitelistedParameterByOverride() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        String name = p.getFullName();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            ParametersAction action = new ParametersAction(\n                    Arrays.asList(\n                        new StringParameterValue(\"foo\", \"baz\"),\n                        new StringParameterValue(\"bar\", \"bar\"),\n                        new StringParameterValue(\"whitelisted1\", \"x\"),\n                        new StringParameterValue(\"whitelisted2\", \"y\"),\n                        new StringParameterValue(\"whitelisted3\", \"y\")\n                                                 ),\n                    Arrays.asList(\"whitelisted1\", \"whitelisted2\"));\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), action));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n            j.jenkins.reload();\n            \r\n            p = j.jenkins.getItemByFullName(name, FreeStyleProject.class);\n            build = p.getLastBuild();\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","date":"2020-01-20 21:55:10","endLine":201,"groupId":"8697","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"whitelistedParameterByOverride","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/48/bab888990fb31a800da993f09326423cf77691.src","preCode":"    public void whitelistedParameterByOverride() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        String name = p.getFullName();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.<ParameterDefinition>asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            ParametersAction action = new ParametersAction(\n                    Arrays.<ParameterValue>asList(\n                        new StringParameterValue(\"foo\", \"baz\"),\n                        new StringParameterValue(\"bar\", \"bar\"),\n                        new StringParameterValue(\"whitelisted1\", \"x\"),\n                        new StringParameterValue(\"whitelisted2\", \"y\"),\n                        new StringParameterValue(\"whitelisted3\", \"y\")\n                                                 ),\n                    Arrays.asList(\"whitelisted1\", \"whitelisted2\"));\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), action));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n            p = null;\n            build = null;\n            j.jenkins.reload();\n            \r\n            p = j.jenkins.getItemByFullName(name, FreeStyleProject.class);\n            build = p.getLastBuild();\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/ParametersAction2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"574ec6e5bdf2e4ac9394e290fefff5ac1c9a5c96","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2020-01-20 21:55:10","modifiedFileCount":"193","status":"M","submitter":"Wadeck Follonier"},{"authorTime":"2020-01-20 21:55:10","codes":[{"authorDate":"2020-12-20 03:51:40","commitOrder":3,"curCode":"    public void whitelistedParameter() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            System.setProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME, \"whitelisted1,whitelisted2\");\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                    new StringParameterValue(\"foo\", \"baz\"),\n                    new StringParameterValue(\"bar\", \"bar\"),\n                    new StringParameterValue(\"whitelisted1\", \"x\"),\n                    new StringParameterValue(\"whitelisted2\", \"y\")\n            )));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","date":"2020-12-20 03:51:40","endLine":162,"groupId":"10505","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"whitelistedParameter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c8/eab55337087d76e2fad17517aa376109291776.src","preCode":"    public void whitelistedParameter() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.<ParameterDefinition>asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            System.setProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME, \"whitelisted1,whitelisted2\");\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                    new StringParameterValue(\"foo\", \"baz\"),\n                    new StringParameterValue(\"bar\", \"bar\"),\n                    new StringParameterValue(\"whitelisted1\", \"x\"),\n                    new StringParameterValue(\"whitelisted2\", \"y\")\n            )));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                    hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/ParametersAction2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2020-01-20 21:55:10","commitOrder":3,"curCode":"    public void whitelistedParameterByOverride() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        String name = p.getFullName();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            ParametersAction action = new ParametersAction(\n                    Arrays.asList(\n                        new StringParameterValue(\"foo\", \"baz\"),\n                        new StringParameterValue(\"bar\", \"bar\"),\n                        new StringParameterValue(\"whitelisted1\", \"x\"),\n                        new StringParameterValue(\"whitelisted2\", \"y\"),\n                        new StringParameterValue(\"whitelisted3\", \"y\")\n                                                 ),\n                    Arrays.asList(\"whitelisted1\", \"whitelisted2\"));\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), action));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n            j.jenkins.reload();\n            \r\n            p = j.jenkins.getItemByFullName(name, FreeStyleProject.class);\n            build = p.getLastBuild();\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","date":"2020-01-20 21:55:10","endLine":201,"groupId":"10505","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"whitelistedParameterByOverride","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/48/bab888990fb31a800da993f09326423cf77691.src","preCode":"    public void whitelistedParameterByOverride() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        String name = p.getFullName();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.asList(\n                new StringParameterDefinition(\"foo\", \"foo\"),\n                new StringParameterDefinition(\"bar\", \"bar\"))));\n\n        try {\n            ParametersAction action = new ParametersAction(\n                    Arrays.asList(\n                        new StringParameterValue(\"foo\", \"baz\"),\n                        new StringParameterValue(\"bar\", \"bar\"),\n                        new StringParameterValue(\"whitelisted1\", \"x\"),\n                        new StringParameterValue(\"whitelisted2\", \"y\"),\n                        new StringParameterValue(\"whitelisted3\", \"y\")\n                                                 ),\n                    Arrays.asList(\"whitelisted1\", \"whitelisted2\"));\n            FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), action));\n\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n            j.jenkins.reload();\n            \r\n            p = j.jenkins.getItemByFullName(name, FreeStyleProject.class);\n            build = p.getLastBuild();\n            assertTrue(\"whitelisted1 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted1\"));\n            assertTrue(\"whitelisted2 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted2\"));\n            assertFalse(\"whitelisted3 parameter is listed in getParameters\",\n                       hasParameterWithName(build.getAction(ParametersAction.class), \"whitelisted3\"));\n        } finally {\n            System.clearProperty(ParametersAction.SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/ParametersAction2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"N"}],"commitId":"152682c1574c5b763616158f8e650e78b84023a1","commitMessage":"@@@Merge pull request #5109 from basil/improvements\n\nCode cleanup","date":"2020-12-20 03:51:40","modifiedFileCount":"47","status":"M","submitter":"Oleg Nenashev"}]
