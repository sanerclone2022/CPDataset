[{"authorTime":"2016-07-25 17:42:40","codes":[{"authorDate":"2016-07-25 17:42:40","commitOrder":1,"curCode":"    public void waitNodeOnlineShouldTimeoutOnGoingOfflineNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().setTemporarilyOffline(true);\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(new Callable() {\n            public Object call() {\n                final CLICommandInvoker.Result result = command\n                        .authorizedTo(Jenkins.READ)\n                        .invokeWithArgs(\"aNode\");\n                fail(\"Never should return from previous CLI call!\");\n                return null;\n            }\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","date":"2016-07-25 17:42:40","endLine":109,"groupId":"9124","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"waitNodeOnlineShouldTimeoutOnGoingOfflineNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/09/a5aafb7c2718d56bce6e0320fdd8aeaeb8184c.src","preCode":"    public void waitNodeOnlineShouldTimeoutOnGoingOfflineNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().setTemporarilyOffline(true);\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(new Callable() {\n            public Object call() {\n                final CLICommandInvoker.Result result = command\n                        .authorizedTo(Jenkins.READ)\n                        .invokeWithArgs(\"aNode\");\n                fail(\"Never should return from previous CLI call!\");\n                return null;\n            }\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","realPath":"test/src/test/java/hudson/cli/WaitNodeOnlineCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2016-07-25 17:42:40","commitOrder":1,"curCode":"    public void waitNodeOnlineShouldTimeoutOnDisconnectingNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().disconnect();\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(new Callable() {\n            public Object call() {\n                final CLICommandInvoker.Result result = command\n                        .authorizedTo(Jenkins.READ)\n                        .invokeWithArgs(\"aNode\");\n                fail(\"Never should return from previous CLI call!\");\n                return null;\n            }\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","date":"2016-07-25 17:42:40","endLine":164,"groupId":"9124","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"waitNodeOnlineShouldTimeoutOnDisconnectingNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/09/a5aafb7c2718d56bce6e0320fdd8aeaeb8184c.src","preCode":"    public void waitNodeOnlineShouldTimeoutOnDisconnectingNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().disconnect();\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(new Callable() {\n            public Object call() {\n                final CLICommandInvoker.Result result = command\n                        .authorizedTo(Jenkins.READ)\n                        .invokeWithArgs(\"aNode\");\n                fail(\"Never should return from previous CLI call!\");\n                return null;\n            }\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","realPath":"test/src/test/java/hudson/cli/WaitNodeOnlineCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"B"}],"commitId":"321cd04dc2ae7c859957c2fc06bfd6befb0950c9","commitMessage":"@@@Merge pull request #2396 from pjanouse/JENKINS-34915\n\n[JENKINS-34915] CLI commands wait-node-online/wait-node-offline extracted from core to CLI","date":"2016-07-25 17:42:40","modifiedFileCount":"1","status":"B","submitter":"Daniel Beck"},{"authorTime":"2021-04-28 17:28:25","codes":[{"authorDate":"2021-04-28 17:28:25","commitOrder":2,"curCode":"    public void waitNodeOnlineShouldTimeoutOnGoingOfflineNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().setTemporarilyOffline(true);\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(new Callable() {\n            @Override\n            public Object call() {\n                final CLICommandInvoker.Result result = command\n                        .authorizedTo(Jenkins.READ)\n                        .invokeWithArgs(\"aNode\");\n                fail(\"Never should return from previous CLI call!\");\n                return null;\n            }\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","date":"2021-04-28 17:28:25","endLine":109,"groupId":"9124","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"waitNodeOnlineShouldTimeoutOnGoingOfflineNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/8e/92a30f8264261f6bbc34473559815ddbb171e7.src","preCode":"    public void waitNodeOnlineShouldTimeoutOnGoingOfflineNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().setTemporarilyOffline(true);\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(new Callable() {\n            public Object call() {\n                final CLICommandInvoker.Result result = command\n                        .authorizedTo(Jenkins.READ)\n                        .invokeWithArgs(\"aNode\");\n                fail(\"Never should return from previous CLI call!\");\n                return null;\n            }\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","realPath":"test/src/test/java/hudson/cli/WaitNodeOnlineCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-04-28 17:28:25","commitOrder":2,"curCode":"    public void waitNodeOnlineShouldTimeoutOnDisconnectingNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().disconnect();\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(new Callable() {\n            @Override\n            public Object call() {\n                final CLICommandInvoker.Result result = command\n                        .authorizedTo(Jenkins.READ)\n                        .invokeWithArgs(\"aNode\");\n                fail(\"Never should return from previous CLI call!\");\n                return null;\n            }\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","date":"2021-04-28 17:28:25","endLine":166,"groupId":"9124","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"waitNodeOnlineShouldTimeoutOnDisconnectingNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/8e/92a30f8264261f6bbc34473559815ddbb171e7.src","preCode":"    public void waitNodeOnlineShouldTimeoutOnDisconnectingNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().disconnect();\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(new Callable() {\n            public Object call() {\n                final CLICommandInvoker.Result result = command\n                        .authorizedTo(Jenkins.READ)\n                        .invokeWithArgs(\"aNode\");\n                fail(\"Never should return from previous CLI call!\");\n                return null;\n            }\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","realPath":"test/src/test/java/hudson/cli/WaitNodeOnlineCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"}],"commitId":"f6378676b11288cc2525852b0a1a441d147e31d3","commitMessage":"@@@Add missing @Override annotations (#5430)\n\n","date":"2021-04-28 17:28:25","modifiedFileCount":"405","status":"M","submitter":"Basil Crow"},{"authorTime":"2021-08-19 14:56:57","codes":[{"authorDate":"2021-08-19 14:56:57","commitOrder":3,"curCode":"    public void waitNodeOnlineShouldTimeoutOnGoingOfflineNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().setTemporarilyOffline(true);\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(() -> {\n            final CLICommandInvoker.Result result = command\n                    .authorizedTo(Jenkins.READ)\n                    .invokeWithArgs(\"aNode\");\n            fail(\"Never should return from previous CLI call!\");\n            return null;\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","date":"2021-08-19 14:56:57","endLine":105,"groupId":"10289","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"waitNodeOnlineShouldTimeoutOnGoingOfflineNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/40/3714cd49fca5e15e551684bad76f804eeded3f.src","preCode":"    public void waitNodeOnlineShouldTimeoutOnGoingOfflineNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().setTemporarilyOffline(true);\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(new Callable() {\n            @Override\n            public Object call() {\n                final CLICommandInvoker.Result result = command\n                        .authorizedTo(Jenkins.READ)\n                        .invokeWithArgs(\"aNode\");\n                fail(\"Never should return from previous CLI call!\");\n                return null;\n            }\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","realPath":"test/src/test/java/hudson/cli/WaitNodeOnlineCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2021-08-19 14:56:57","commitOrder":3,"curCode":"    public void waitNodeOnlineShouldTimeoutOnDisconnectingNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().disconnect();\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(() -> {\n            final CLICommandInvoker.Result result = command\n                    .authorizedTo(Jenkins.READ)\n                    .invokeWithArgs(\"aNode\");\n            fail(\"Never should return from previous CLI call!\");\n            return null;\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","date":"2021-08-19 14:56:57","endLine":156,"groupId":"10289","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"waitNodeOnlineShouldTimeoutOnDisconnectingNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/40/3714cd49fca5e15e551684bad76f804eeded3f.src","preCode":"    public void waitNodeOnlineShouldTimeoutOnDisconnectingNode() throws Exception {\n        DumbSlave slave = j.createSlave(\"aNode\", \"\", null);\n        slave.toComputer().disconnect();\n\n        boolean timeoutOccurred = false;\n        FutureTask task = new FutureTask(new Callable() {\n            @Override\n            public Object call() {\n                final CLICommandInvoker.Result result = command\n                        .authorizedTo(Jenkins.READ)\n                        .invokeWithArgs(\"aNode\");\n                fail(\"Never should return from previous CLI call!\");\n                return null;\n            }\n        });\n        try {\n            task.get(30, TimeUnit.SECONDS);\n        } catch (TimeoutException e) {\n            timeoutOccurred = true;\n        } finally {\n            task.cancel(true);\n        }\n\n        if(!timeoutOccurred)\n            fail(\"Missing timeout for CLI call\");\n    }\n","realPath":"test/src/test/java/hudson/cli/WaitNodeOnlineCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"3c8dd1664fcc2818a78a06950d47a7b7c54ad981","commitMessage":"@@@Some test code clean-up (#5669)\n\nCo-authored-by: Tim Jacomb <timjacomb1+github@gmail.com>","date":"2021-08-19 14:56:57","modifiedFileCount":"12","status":"M","submitter":"offa"}]
