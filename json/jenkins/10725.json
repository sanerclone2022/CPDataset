[{"authorTime":"2013-06-16 16:06:28","codes":[{"authorDate":"2013-06-16 16:06:28","commitOrder":1,"curCode":"    public void getAllJobsForEmptyName() throws Exception {\n\n        final Collection<TopLevelItem> jenkinsJobs = Arrays.asList(\n                job(\"some-job\"), job(\"some-other-job\")\n        );\n\n        when(jenkins.getItems()).thenReturn((List<TopLevelItem>) jenkinsJobs);\n\n        assertThat(runWith(null), equalTo(0));\n        assertThat(stderr, is(empty()));\n        assertThat(stdout, listsJobs(\"some-job\", \"some-other-job\"));\n    }\n","date":"2013-06-16 16:06:28","endLine":79,"groupId":"5269","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAllJobsForEmptyName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f2/64777ed53cee5fdd000aeebe76af4dcb6ea0e7.src","preCode":"    public void getAllJobsForEmptyName() throws Exception {\n\n        final Collection<TopLevelItem> jenkinsJobs = Arrays.asList(\n                job(\"some-job\"), job(\"some-other-job\")\n        );\n\n        when(jenkins.getItems()).thenReturn((List<TopLevelItem>) jenkinsJobs);\n\n        assertThat(runWith(null), equalTo(0));\n        assertThat(stderr, is(empty()));\n        assertThat(stdout, listsJobs(\"some-job\", \"some-other-job\"));\n    }\n","realPath":"core/src/test/java/hudson/cli/ListJobsCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"},{"authorDate":"2013-06-16 16:06:28","commitOrder":1,"curCode":"    public void getJobsFromView() throws Exception {\n\n        final Collection<TopLevelItem> viewJobs = Arrays.asList(\n                job(\"some-job\"), job(\"some-other-job\")\n        );\n\n        final View customView = view();\n        when(customView.getItems()).thenReturn(viewJobs);\n\n        when(jenkins.getView(\"CustomView\")).thenReturn(customView);\n\n        assertThat(runWith(\"CustomView\"), equalTo(0));\n        assertThat(stderr, is(empty()));\n        assertThat(stdout, listsJobs(\"some-job\", \"some-other-job\"));\n    }\n","date":"2013-06-16 16:06:28","endLine":96,"groupId":"5269","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getJobsFromView","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f2/64777ed53cee5fdd000aeebe76af4dcb6ea0e7.src","preCode":"    public void getJobsFromView() throws Exception {\n\n        final Collection<TopLevelItem> viewJobs = Arrays.asList(\n                job(\"some-job\"), job(\"some-other-job\")\n        );\n\n        final View customView = view();\n        when(customView.getItems()).thenReturn(viewJobs);\n\n        when(jenkins.getView(\"CustomView\")).thenReturn(customView);\n\n        assertThat(runWith(\"CustomView\"), equalTo(0));\n        assertThat(stderr, is(empty()));\n        assertThat(stdout, listsJobs(\"some-job\", \"some-other-job\"));\n    }\n","realPath":"core/src/test/java/hudson/cli/ListJobsCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"}],"commitId":"6b79233f136593d62abc6253a1cc37e4be1305c3","commitMessage":"@@@Merge pull request #793 from olivergondza/list_jobs_recursively_fix\nList Jobs recursively in hudson.cli.ListJobsCommand\n","date":"2013-06-16 16:06:28","modifiedFileCount":"3","status":"B","submitter":"Christoph Kutzinski"},{"authorTime":"2013-06-16 16:06:28","codes":[{"authorDate":"2020-12-20 03:51:40","commitOrder":2,"curCode":"    public void getAllJobsForEmptyName() throws Exception {\n\n        final List<TopLevelItem> jenkinsJobs = Arrays.asList(\n                job(\"some-job\"), job(\"some-other-job\")\n        );\n\n        when(jenkins.getItems()).thenReturn(jenkinsJobs);\n\n        assertThat(runWith(null), equalTo(0));\n        assertThat(stderr, is(empty()));\n        assertThat(stdout, listsJobs(\"some-job\", \"some-other-job\"));\n    }\n","date":"2020-12-20 03:51:40","endLine":86,"groupId":"10725","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getAllJobsForEmptyName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ff/f904545ee3cd7426f420b1baa157740d04e125.src","preCode":"    public void getAllJobsForEmptyName() throws Exception {\n\n        final Collection<TopLevelItem> jenkinsJobs = Arrays.asList(\n                job(\"some-job\"), job(\"some-other-job\")\n        );\n\n        when(jenkins.getItems()).thenReturn((List<TopLevelItem>) jenkinsJobs);\n\n        assertThat(runWith(null), equalTo(0));\n        assertThat(stderr, is(empty()));\n        assertThat(stdout, listsJobs(\"some-job\", \"some-other-job\"));\n    }\n","realPath":"core/src/test/java/hudson/cli/ListJobsCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2013-06-16 16:06:28","commitOrder":2,"curCode":"    public void getJobsFromView() throws Exception {\n\n        final Collection<TopLevelItem> viewJobs = Arrays.asList(\n                job(\"some-job\"), job(\"some-other-job\")\n        );\n\n        final View customView = view();\n        when(customView.getItems()).thenReturn(viewJobs);\n\n        when(jenkins.getView(\"CustomView\")).thenReturn(customView);\n\n        assertThat(runWith(\"CustomView\"), equalTo(0));\n        assertThat(stderr, is(empty()));\n        assertThat(stdout, listsJobs(\"some-job\", \"some-other-job\"));\n    }\n","date":"2013-06-16 16:06:28","endLine":96,"groupId":"10725","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getJobsFromView","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f2/64777ed53cee5fdd000aeebe76af4dcb6ea0e7.src","preCode":"    public void getJobsFromView() throws Exception {\n\n        final Collection<TopLevelItem> viewJobs = Arrays.asList(\n                job(\"some-job\"), job(\"some-other-job\")\n        );\n\n        final View customView = view();\n        when(customView.getItems()).thenReturn(viewJobs);\n\n        when(jenkins.getView(\"CustomView\")).thenReturn(customView);\n\n        assertThat(runWith(\"CustomView\"), equalTo(0));\n        assertThat(stderr, is(empty()));\n        assertThat(stdout, listsJobs(\"some-job\", \"some-other-job\"));\n    }\n","realPath":"core/src/test/java/hudson/cli/ListJobsCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"}],"commitId":"152682c1574c5b763616158f8e650e78b84023a1","commitMessage":"@@@Merge pull request #5109 from basil/improvements\n\nCode cleanup","date":"2020-12-20 03:51:40","modifiedFileCount":"47","status":"M","submitter":"Oleg Nenashev"}]
