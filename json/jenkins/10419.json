[{"authorTime":"2010-09-20 05:04:44","codes":[{"authorDate":"2010-09-20 05:04:44","commitOrder":1,"curCode":"    public void test1() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n\n        Computer c = createMockComputer(1);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(0));\n\n        MappingWorksheet mw = new MappingWorksheet(t, asList(o));\n\n        \r\n        assertTrue(mw.executors.isEmpty());\n        assertEquals(1,mw.works.size());\n    }\n","date":"2010-09-20 05:04:44","endLine":77,"groupId":"9484","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"test1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/2d/bdb13a89cf98ed33e659fb82e7786a0b4b6cf8.src","preCode":"    public void test1() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n\n        Computer c = createMockComputer(1);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(0));\n\n        MappingWorksheet mw = new MappingWorksheet(t, asList(o));\n\n        \r\n        assertTrue(mw.executors.isEmpty());\n        assertEquals(1,mw.works.size());\n    }\n","realPath":"test/src/test/java/hudson/model/queue/LoadPredictorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2010-09-20 05:04:44","commitOrder":1,"curCode":"    public void test2() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n\n        Computer c = createMockComputer(2);\n        Executor e = c.getExecutors().get(0);\n\n        when(e.isIdle()).thenReturn(false);\n        when(e.getEstimatedRemainingTimeMillis()).thenReturn(300L);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(1));\n\n        MappingWorksheet mw = new MappingWorksheet(t, asList(o));\n\n        \r\n        \r\n        assertEquals(1,mw.executors.size());\n        assertEquals(1,mw.works.size());\n    }\n","date":"2010-09-20 05:04:44","endLine":106,"groupId":"9485","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"test2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/2d/bdb13a89cf98ed33e659fb82e7786a0b4b6cf8.src","preCode":"    public void test2() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n\n        Computer c = createMockComputer(2);\n        Executor e = c.getExecutors().get(0);\n\n        when(e.isIdle()).thenReturn(false);\n        when(e.getEstimatedRemainingTimeMillis()).thenReturn(300L);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(1));\n\n        MappingWorksheet mw = new MappingWorksheet(t, asList(o));\n\n        \r\n        \r\n        assertEquals(1,mw.executors.size());\n        assertEquals(1,mw.works.size());\n    }\n","realPath":"test/src/test/java/hudson/model/queue/LoadPredictorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"0ff811ff021fbe80564253d09f9ce942fe5d6f98","commitMessage":"@@@added a mechanism to take future load of the system into account.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@35013 71c3de6d-444a-0410-be80-ed276b4c234a\n","date":"2010-09-20 05:04:44","modifiedFileCount":"1","status":"B","submitter":"kohsuke"},{"authorTime":"2010-10-06 08:35:43","codes":[{"authorDate":"2010-10-06 08:35:43","commitOrder":2,"curCode":"    public void test1() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n\n        Computer c = createMockComputer(1);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(0));\n\n        MappingWorksheet mw = new MappingWorksheet(wrap(t), asList(o));\n\n        \r\n        assertTrue(mw.executors.isEmpty());\n        assertEquals(1,mw.works.size());\n    }\n","date":"2010-10-06 08:35:43","endLine":80,"groupId":"9484","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"test1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/45/17480877ce5f1a6a4264df9b9abfd8c724bd41.src","preCode":"    public void test1() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n\n        Computer c = createMockComputer(1);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(0));\n\n        MappingWorksheet mw = new MappingWorksheet(t, asList(o));\n\n        \r\n        assertTrue(mw.executors.isEmpty());\n        assertEquals(1,mw.works.size());\n    }\n","realPath":"test/src/test/java/hudson/model/queue/LoadPredictorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2010-10-06 08:35:43","commitOrder":2,"curCode":"    public void test2() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n\n        Computer c = createMockComputer(2);\n        Executor e = c.getExecutors().get(0);\n\n        when(e.isIdle()).thenReturn(false);\n        when(e.getEstimatedRemainingTimeMillis()).thenReturn(300L);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(1));\n\n        MappingWorksheet mw = new MappingWorksheet(wrap(t), asList(o));\n\n        \r\n        \r\n        assertEquals(1,mw.executors.size());\n        assertEquals(1,mw.works.size());\n    }\n","date":"2010-10-06 08:35:43","endLine":113,"groupId":"9485","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"test2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/45/17480877ce5f1a6a4264df9b9abfd8c724bd41.src","preCode":"    public void test2() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n\n        Computer c = createMockComputer(2);\n        Executor e = c.getExecutors().get(0);\n\n        when(e.isIdle()).thenReturn(false);\n        when(e.getEstimatedRemainingTimeMillis()).thenReturn(300L);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(1));\n\n        MappingWorksheet mw = new MappingWorksheet(t, asList(o));\n\n        \r\n        \r\n        assertEquals(1,mw.executors.size());\n        assertEquals(1,mw.works.size());\n    }\n","realPath":"test/src/test/java/hudson/model/queue/LoadPredictorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"31d97920c07bb36f54db192f35b51965016beb12","commitMessage":"@@@exposing more contextual information to MappingWorksheet\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@35545 71c3de6d-444a-0410-be80-ed276b4c234a\n","date":"2010-10-06 08:35:43","modifiedFileCount":"3","status":"M","submitter":"kohsuke"},{"authorTime":"2020-07-17 22:15:15","codes":[{"authorDate":"2020-07-17 22:15:15","commitOrder":3,"curCode":"    public void test1() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n        Computer c = createMockComputer(1);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(0));\n\n        MappingWorksheet mw = new MappingWorksheet(wrap(t), Collections.singletonList(o));\n\n        \r\n        assertTrue(mw.executors.isEmpty());\n        assertEquals(1,mw.works.size());\n    }\n","date":"2020-07-17 22:15:15","endLine":93,"groupId":"9484","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"test1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/9a/cf97aaad1fa64571d48638cdab5e3936ebe8ae.src","preCode":"    public void test1() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n        Computer c = createMockComputer(1);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(0));\n\n        MappingWorksheet mw = new MappingWorksheet(wrap(t), asList(o));\n\n        \r\n        assertTrue(mw.executors.isEmpty());\n        assertEquals(1,mw.works.size());\n    }\n","realPath":"test/src/test/java/hudson/model/queue/LoadPredictorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-07-17 22:15:15","commitOrder":3,"curCode":"    public void test2() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n        Computer c = createMockComputer(2);\n        Executor e = c.getExecutors().get(0);\n\n        when(e.isIdle()).thenReturn(false);\n        when(e.getEstimatedRemainingTimeMillis()).thenReturn(300L);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(1));\n\n        MappingWorksheet mw = new MappingWorksheet(wrap(t), Collections.singletonList(o));\n\n        \r\n        \r\n        assertEquals(1,mw.executors.size());\n        assertEquals(1,mw.works.size());\n    }\n","date":"2020-07-17 22:15:15","endLine":126,"groupId":"9485","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"test2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/9a/cf97aaad1fa64571d48638cdab5e3936ebe8ae.src","preCode":"    public void test2() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n        Computer c = createMockComputer(2);\n        Executor e = c.getExecutors().get(0);\n\n        when(e.isIdle()).thenReturn(false);\n        when(e.getEstimatedRemainingTimeMillis()).thenReturn(300L);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(1));\n\n        MappingWorksheet mw = new MappingWorksheet(wrap(t), asList(o));\n\n        \r\n        \r\n        assertEquals(1,mw.executors.size());\n        assertEquals(1,mw.works.size());\n    }\n","realPath":"test/src/test/java/hudson/model/queue/LoadPredictorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"688647a8540f8db179dc5c9cf62e3208eb444d9f","commitMessage":"@@@tests: minor refactorings either for performance or readability (#4846)\n\ntests: minor refactorings either for performance or readability","date":"2020-07-17 22:15:15","modifiedFileCount":"18","status":"M","submitter":"Tim Jacomb"},{"authorTime":"2020-07-21 11:16:06","codes":[{"authorDate":"2020-07-21 11:16:06","commitOrder":4,"curCode":"    public void test1() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) Collections.singletonList(t));\n\n        Computer c = createMockComputer(1);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(0));\n\n        MappingWorksheet mw = new MappingWorksheet(wrap(t), Collections.singletonList(o));\n\n        \r\n        assertTrue(mw.executors.isEmpty());\n        assertEquals(1,mw.works.size());\n    }\n","date":"2020-07-21 11:16:06","endLine":93,"groupId":"10419","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"test1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/71/da0a662617c1b099fb925e1f3a84cb34d70bdd.src","preCode":"    public void test1() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n        Computer c = createMockComputer(1);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(0));\n\n        MappingWorksheet mw = new MappingWorksheet(wrap(t), Collections.singletonList(o));\n\n        \r\n        assertTrue(mw.executors.isEmpty());\n        assertEquals(1,mw.works.size());\n    }\n","realPath":"test/src/test/java/hudson/model/queue/LoadPredictorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-07-21 11:16:06","commitOrder":4,"curCode":"    public void test2() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) Collections.singletonList(t));\n\n        Computer c = createMockComputer(2);\n        Executor e = c.getExecutors().get(0);\n\n        when(e.isIdle()).thenReturn(false);\n        when(e.getEstimatedRemainingTimeMillis()).thenReturn(300L);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(1));\n\n        MappingWorksheet mw = new MappingWorksheet(wrap(t), Collections.singletonList(o));\n\n        \r\n        \r\n        assertEquals(1,mw.executors.size());\n        assertEquals(1,mw.works.size());\n    }\n","date":"2020-07-21 11:16:06","endLine":126,"groupId":"10419","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"test2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/71/da0a662617c1b099fb925e1f3a84cb34d70bdd.src","preCode":"    public void test2() throws Exception {\n        Task t = mock(Task.class);\n        when(t.getEstimatedDuration()).thenReturn(10000L);\n        when(t.getSubTasks()).thenReturn((Collection) asList(t));\n\n        Computer c = createMockComputer(2);\n        Executor e = c.getExecutors().get(0);\n\n        when(e.isIdle()).thenReturn(false);\n        when(e.getEstimatedRemainingTimeMillis()).thenReturn(300L);\n\n        JobOffer o = createMockOffer(c.getExecutors().get(1));\n\n        MappingWorksheet mw = new MappingWorksheet(wrap(t), Collections.singletonList(o));\n\n        \r\n        \r\n        assertEquals(1,mw.executors.size());\n        assertEquals(1,mw.works.size());\n    }\n","realPath":"test/src/test/java/hudson/model/queue/LoadPredictorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"eb636e252161d8952b9536214dd8a0ec439a3ad7","commitMessage":"@@@Merge pull request #4851 from StefanSpieker/test_refactorings_2\n\nTests: Refactoring of various things","date":"2020-07-21 11:16:06","modifiedFileCount":"19","status":"M","submitter":"Tim Jacomb"}]
