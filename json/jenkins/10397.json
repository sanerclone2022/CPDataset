[{"authorTime":"2013-07-08 18:49:24","codes":[{"authorDate":"2012-05-31 06:17:13","commitOrder":3,"curCode":"    public void testDependencyClassLoader() throws Exception {\n        \r\n        \r\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo3\");\n        String res = p.getIndexPage().toString();\n        assertTrue(res + \"should be foo3\", res.contains(\"/foo3/\"));\n\n        \r\n        \r\n        \r\n        Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            res = en.nextElement().toString();\n            if (i < 2)\n                assertTrue(\"In current impl, \" + res + \"should be foo1 or foo2\",\n                           res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n            else\n                assertTrue(\"In current impl, \" + res + \"should be foo3\", res.contains(\"/foo3/\"));\n        }\n        res = p.classLoader.getResource(\"index.jelly\").toString();\n        assertTrue(\"In current impl, \" + res + \" should be foo1 or foo2\",\n                   res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n    }\n","date":"2012-05-31 06:17:13","endLine":70,"groupId":"814","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDependencyClassLoader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/dc/23a5b8277d6e8490ba7d21afae33d790c5aead.src","preCode":"    public void testDependencyClassLoader() throws Exception {\n        \r\n        \r\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo3\");\n        String res = p.getIndexPage().toString();\n        assertTrue(res + \"should be foo3\", res.contains(\"/foo3/\"));\n\n        \r\n        \r\n        \r\n        Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            res = en.nextElement().toString();\n            if (i < 2)\n                assertTrue(\"In current impl, \" + res + \"should be foo1 or foo2\",\n                           res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n            else\n                assertTrue(\"In current impl, \" + res + \"should be foo3\", res.contains(\"/foo3/\"));\n        }\n        res = p.classLoader.getResource(\"index.jelly\").toString();\n        assertTrue(\"In current impl, \" + res + \" should be foo1 or foo2\",\n                   res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n    }\n","realPath":"test/src/test/java/hudson/ClassicPluginStrategyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"NB"},{"authorDate":"2013-07-08 18:49:24","commitOrder":3,"curCode":"    public void testDisabledDependencyClassLoader() throws Exception {\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo4\");\n\n        Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            String res = en.nextElement().toString();\n            if (i == 0)\n                assertTrue(\"expected foo4, found \"+res , res.contains(\"/foo4/\"));\n            else\n                fail(\"disabled dependency should be included\");\n        }\n    }\n","date":"2013-07-08 18:49:24","endLine":87,"groupId":"5957","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDisabledDependencyClassLoader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/43/827a0d9813c78dae48d79e2f02d8687eaaec22.src","preCode":"    public void testDisabledDependencyClassLoader() throws Exception {\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo4\");\n\n        Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            String res = en.nextElement().toString();\n            if (i == 0)\n                assertTrue(\"expected foo4, found \"+res , res.contains(\"/foo4/\"));\n            else\n                fail(\"disabled dependency should be included\");\n        }\n    }\n","realPath":"test/src/test/java/hudson/ClassicPluginStrategyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"1f761085e20ee2aa106a196d0148e616138e31fe","commitMessage":"@@@[JENKINS-18654] testcase as suggested by kutzi\n","date":"2013-07-08 18:49:24","modifiedFileCount":"1","status":"M","submitter":"Nicolas De Loof"},{"authorTime":"2013-07-08 20:34:53","codes":[{"authorDate":"2012-05-31 06:17:13","commitOrder":4,"curCode":"    public void testDependencyClassLoader() throws Exception {\n        \r\n        \r\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo3\");\n        String res = p.getIndexPage().toString();\n        assertTrue(res + \"should be foo3\", res.contains(\"/foo3/\"));\n\n        \r\n        \r\n        \r\n        Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            res = en.nextElement().toString();\n            if (i < 2)\n                assertTrue(\"In current impl, \" + res + \"should be foo1 or foo2\",\n                           res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n            else\n                assertTrue(\"In current impl, \" + res + \"should be foo3\", res.contains(\"/foo3/\"));\n        }\n        res = p.classLoader.getResource(\"index.jelly\").toString();\n        assertTrue(\"In current impl, \" + res + \" should be foo1 or foo2\",\n                   res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n    }\n","date":"2012-05-31 06:17:13","endLine":70,"groupId":"814","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDependencyClassLoader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/dc/23a5b8277d6e8490ba7d21afae33d790c5aead.src","preCode":"    public void testDependencyClassLoader() throws Exception {\n        \r\n        \r\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo3\");\n        String res = p.getIndexPage().toString();\n        assertTrue(res + \"should be foo3\", res.contains(\"/foo3/\"));\n\n        \r\n        \r\n        \r\n        Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            res = en.nextElement().toString();\n            if (i < 2)\n                assertTrue(\"In current impl, \" + res + \"should be foo1 or foo2\",\n                           res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n            else\n                assertTrue(\"In current impl, \" + res + \"should be foo3\", res.contains(\"/foo3/\"));\n        }\n        res = p.classLoader.getResource(\"index.jelly\").toString();\n        assertTrue(\"In current impl, \" + res + \" should be foo1 or foo2\",\n                   res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n    }\n","realPath":"test/src/test/java/hudson/ClassicPluginStrategyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"N"},{"authorDate":"2013-07-08 20:34:53","commitOrder":4,"curCode":"    public void testDisabledDependencyClassLoader() throws Exception {\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo4\");\n\n        Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            String res = en.nextElement().toString();\n            if (i == 0)\n                assertTrue(\"expected foo4, found \"+res , res.contains(\"/foo4/\"));\n            else\n                fail(\"disabled dependency should not be included\");\n        }\n    }\n","date":"2013-07-08 20:34:53","endLine":90,"groupId":"5957","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDisabledDependencyClassLoader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/37/37744e89eba41907d8ab914dbe82a7cda73bf9.src","preCode":"    public void testDisabledDependencyClassLoader() throws Exception {\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo4\");\n\n        Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            String res = en.nextElement().toString();\n            if (i == 0)\n                assertTrue(\"expected foo4, found \"+res , res.contains(\"/foo4/\"));\n            else\n                fail(\"disabled dependency should be included\");\n        }\n    }\n","realPath":"test/src/test/java/hudson/ClassicPluginStrategyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"bd87d70b3aa6cd8d13dbeae56b3c09fc425e2442","commitMessage":"@@@[JENKINS-18654] document unit test\n","date":"2013-07-08 20:34:53","modifiedFileCount":"1","status":"M","submitter":"Nicolas De Loof"},{"authorTime":"2013-10-08 11:38:34","codes":[{"authorDate":"2013-10-08 11:38:34","commitOrder":5,"curCode":"    public void testDependencyClassLoader() throws Exception {\n        \r\n        \r\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo3\");\n        String res;\n\n        \r\n        \r\n        \r\n        Enumeration<URL> en = p.classLoader.getResources(\"test-resource\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            res = en.nextElement().toString();\n            if (i < 2)\n                assertTrue(\"In current impl, \" + res + \"should be foo1 or foo2\",\n                           res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n            else\n                assertTrue(\"In current impl, \" + res + \"should be foo3\", res.contains(\"/foo3/\"));\n        }\n        res = p.classLoader.getResource(\"test-resource\").toString();\n        assertTrue(\"In current impl, \" + res + \" should be foo1 or foo2\",\n                   res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n    }\n","date":"2013-10-08 11:38:34","endLine":70,"groupId":"3662","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDependencyClassLoader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/26/779a1371b9d4079efa5a8195e69b393cfdce7d.src","preCode":"    public void testDependencyClassLoader() throws Exception {\n        \r\n        \r\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo3\");\n        String res = p.getIndexPage().toString();\n        assertTrue(res + \"should be foo3\", res.contains(\"/foo3/\"));\n\n        \r\n        \r\n        \r\n        Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            res = en.nextElement().toString();\n            if (i < 2)\n                assertTrue(\"In current impl, \" + res + \"should be foo1 or foo2\",\n                           res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n            else\n                assertTrue(\"In current impl, \" + res + \"should be foo3\", res.contains(\"/foo3/\"));\n        }\n        res = p.classLoader.getResource(\"index.jelly\").toString();\n        assertTrue(\"In current impl, \" + res + \" should be foo1 or foo2\",\n                   res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n    }\n","realPath":"test/src/test/java/hudson/ClassicPluginStrategyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2013-10-08 11:38:34","commitOrder":5,"curCode":"    public void testDisabledDependencyClassLoader() throws Exception {\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo4\");\n\n        Enumeration<URL> en = p.classLoader.getResources(\"test-resource\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            String res = en.nextElement().toString();\n            if (i == 0)\n                assertTrue(\"expected foo4, found \"+res , res.contains(\"/foo4/\"));\n            else\n                fail(\"disabled dependency should not be included\");\n        }\n    }\n","date":"2013-10-08 11:38:34","endLine":89,"groupId":"3665","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDisabledDependencyClassLoader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/26/779a1371b9d4079efa5a8195e69b393cfdce7d.src","preCode":"    public void testDisabledDependencyClassLoader() throws Exception {\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo4\");\n\n        Enumeration<URL> en = p.classLoader.getResources(\"index.jelly\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            String res = en.nextElement().toString();\n            if (i == 0)\n                assertTrue(\"expected foo4, found \"+res , res.contains(\"/foo4/\"));\n            else\n                fail(\"disabled dependency should not be included\");\n        }\n    }\n","realPath":"test/src/test/java/hudson/ClassicPluginStrategyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"8c4288ca59568e9c8d94022de7871e472f019a2f","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into executor-ondemand\n","date":"2013-10-08 11:38:34","modifiedFileCount":"67","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2021-05-09 05:26:28","codes":[{"authorDate":"2021-05-09 05:26:28","commitOrder":6,"curCode":"    public void testDependencyClassLoader() throws Exception {\n        \r\n        \r\n        PluginWrapper p = j.jenkins.getPluginManager().getPlugin(\"foo3\");\n        String res;\n\n        \r\n        \r\n        \r\n        Enumeration<URL> en = p.classLoader.getResources(\"test-resource\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            res = en.nextElement().toString();\n            if (i < 2)\n                assertTrue(\"In current impl, \" + res + \"should be foo1 or foo2\",\n                           res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n            else\n                assertTrue(\"In current impl, \" + res + \"should be foo3\", res.contains(\"/foo3/\"));\n        }\n        res = p.classLoader.getResource(\"test-resource\").toString();\n        assertTrue(\"In current impl, \" + res + \" should be foo1 or foo2\",\n                   res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n    }\n","date":"2021-05-09 05:26:28","endLine":104,"groupId":"10397","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testDependencyClassLoader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3d/f0b0db0b18b2185cb63e02625ffa99334a527c.src","preCode":"    public void testDependencyClassLoader() throws Exception {\n        \r\n        \r\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo3\");\n        String res;\n\n        \r\n        \r\n        \r\n        Enumeration<URL> en = p.classLoader.getResources(\"test-resource\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            res = en.nextElement().toString();\n            if (i < 2)\n                assertTrue(\"In current impl, \" + res + \"should be foo1 or foo2\",\n                           res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n            else\n                assertTrue(\"In current impl, \" + res + \"should be foo3\", res.contains(\"/foo3/\"));\n        }\n        res = p.classLoader.getResource(\"test-resource\").toString();\n        assertTrue(\"In current impl, \" + res + \" should be foo1 or foo2\",\n                   res.contains(\"/foo1/\") || res.contains(\"/foo2/\"));\n    }\n","realPath":"test/src/test/java/hudson/ClassicPluginStrategyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2021-05-09 05:26:28","commitOrder":6,"curCode":"    public void testDisabledDependencyClassLoader() throws Exception {\n        PluginWrapper p = j.jenkins.getPluginManager().getPlugin(\"foo4\");\n\n        Enumeration<URL> en = p.classLoader.getResources(\"test-resource\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            String res = en.nextElement().toString();\n            if (i == 0)\n                assertTrue(\"expected foo4, found \"+res , res.contains(\"/foo4/\"));\n            else\n                fail(\"disabled dependency should not be included\");\n        }\n    }\n","date":"2021-05-09 05:26:28","endLine":124,"groupId":"10397","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testDisabledDependencyClassLoader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3d/f0b0db0b18b2185cb63e02625ffa99334a527c.src","preCode":"    public void testDisabledDependencyClassLoader() throws Exception {\n        PluginWrapper p = jenkins.getPluginManager().getPlugin(\"foo4\");\n\n        Enumeration<URL> en = p.classLoader.getResources(\"test-resource\");\n        for (int i = 0; en.hasMoreElements(); i++) {\n            String res = en.nextElement().toString();\n            if (i == 0)\n                assertTrue(\"expected foo4, found \"+res , res.contains(\"/foo4/\"));\n            else\n                fail(\"disabled dependency should not be included\");\n        }\n    }\n","realPath":"test/src/test/java/hudson/ClassicPluginStrategyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"dd16cbba3655a61a09fb42f30167152f98cf6cc1","commitMessage":"@@@Migrate remaining tests from `HudsonTestCase` to `JenkinsRule` (#5463)\n\n* Migrate remaining tests from `HudsonTestCase` to `JenkinsRule`\n\n* Update test/src/test/java/jenkins/security/RekeySecretAdminMonitorTest.java\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\n\nCo-authored-by: Tim Jacomb <21194782+timja@users.noreply.github.com>\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>","date":"2021-05-09 05:26:28","modifiedFileCount":"8","status":"M","submitter":"Basil Crow"}]
