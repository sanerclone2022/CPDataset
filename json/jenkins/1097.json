[{"authorTime":"2015-01-08 05:12:18","codes":[{"authorDate":"2015-01-08 05:12:18","commitOrder":1,"curCode":"    public void successVsFailure() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getBuildersList().replaceBy(Collections.singleton(new FailureBuilder()));\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastSuccessfulBuild()));\n        project.getBuildersList().replaceBy(Collections.<Builder>emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertEquals(4, numberOf(project.getLastSuccessfulBuild()));\n        assertEquals(null, project.getBuildByNumber(1));\n        assertEquals(null, project.getBuildByNumber(2));\n        assertEquals(3, numberOf(project.getLastFailedBuild()));\n    }\n","date":"2015-01-08 05:12:18","endLine":71,"groupId":"8007","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"successVsFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/29/e697301c9eaf78c95d578d7708cfe2f904e20c.src","preCode":"    public void successVsFailure() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getBuildersList().replaceBy(Collections.singleton(new FailureBuilder()));\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastSuccessfulBuild()));\n        project.getBuildersList().replaceBy(Collections.<Builder>emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertEquals(4, numberOf(project.getLastSuccessfulBuild()));\n        assertEquals(null, project.getBuildByNumber(1));\n        assertEquals(null, project.getBuildByNumber(2));\n        assertEquals(3, numberOf(project.getLastFailedBuild()));\n    }\n","realPath":"test/src/test/java/hudson/tasks/LogRotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2015-01-08 05:12:18","commitOrder":1,"curCode":"    public void stableVsUnstable() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getPublishersList().replaceBy(Collections.singleton(new TestsFail()));\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastStableBuild()));\n        project.getPublishersList().replaceBy(Collections.<Publisher>emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertEquals(null, project.getBuildByNumber(1));\n        assertEquals(null, project.getBuildByNumber(2));\n    }\n","date":"2015-01-08 05:12:18","endLine":87,"groupId":"9674","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"stableVsUnstable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/29/e697301c9eaf78c95d578d7708cfe2f904e20c.src","preCode":"    public void stableVsUnstable() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getPublishersList().replaceBy(Collections.singleton(new TestsFail()));\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastStableBuild()));\n        project.getPublishersList().replaceBy(Collections.<Publisher>emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertEquals(null, project.getBuildByNumber(1));\n        assertEquals(null, project.getBuildByNumber(2));\n    }\n","realPath":"test/src/test/java/hudson/tasks/LogRotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"}],"commitId":"cd0752432ed718e30281eb4e2732646550996868","commitMessage":"@@@Merge remote-tracking branch 'upstream/master' into JENKINS-22811\n\nConflicts:\n\ttest/src/test/java/hudson/model/ItemGroupMixInTest.java\n","date":"2015-01-08 05:12:18","modifiedFileCount":"190","status":"B","submitter":"christ66"},{"authorTime":"2020-07-21 11:16:06","codes":[{"authorDate":"2020-07-21 11:16:06","commitOrder":2,"curCode":"    public void successVsFailure() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getBuildersList().replaceBy(Collections.singleton(new FailureBuilder()));\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastSuccessfulBuild()));\n        project.getBuildersList().replaceBy(Collections.<Builder>emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertEquals(4, numberOf(project.getLastSuccessfulBuild()));\n        assertNull(project.getBuildByNumber(1));\n        assertNull(project.getBuildByNumber(2));\n        assertEquals(3, numberOf(project.getLastFailedBuild()));\n    }\n","date":"2020-07-21 11:16:06","endLine":83,"groupId":"8007","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"successVsFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/85/d98776521166b28299f68913eae88c9ea6b46c.src","preCode":"    public void successVsFailure() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getBuildersList().replaceBy(Collections.singleton(new FailureBuilder()));\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastSuccessfulBuild()));\n        project.getBuildersList().replaceBy(Collections.<Builder>emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertEquals(4, numberOf(project.getLastSuccessfulBuild()));\n        assertEquals(null, project.getBuildByNumber(1));\n        assertEquals(null, project.getBuildByNumber(2));\n        assertEquals(3, numberOf(project.getLastFailedBuild()));\n    }\n","realPath":"test/src/test/java/hudson/tasks/LogRotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2020-07-21 11:16:06","commitOrder":2,"curCode":"    public void stableVsUnstable() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getPublishersList().replaceBy(Collections.singleton(new TestsFail()));\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastStableBuild()));\n        project.getPublishersList().replaceBy(Collections.<Publisher>emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertNull(project.getBuildByNumber(1));\n        assertNull(project.getBuildByNumber(2));\n    }\n","date":"2020-07-21 11:16:06","endLine":99,"groupId":"9674","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"stableVsUnstable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/85/d98776521166b28299f68913eae88c9ea6b46c.src","preCode":"    public void stableVsUnstable() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getPublishersList().replaceBy(Collections.singleton(new TestsFail()));\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastStableBuild()));\n        project.getPublishersList().replaceBy(Collections.<Publisher>emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertEquals(null, project.getBuildByNumber(1));\n        assertEquals(null, project.getBuildByNumber(2));\n    }\n","realPath":"test/src/test/java/hudson/tasks/LogRotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"eb636e252161d8952b9536214dd8a0ec439a3ad7","commitMessage":"@@@Merge pull request #4851 from StefanSpieker/test_refactorings_2\n\nTests: Refactoring of various things","date":"2020-07-21 11:16:06","modifiedFileCount":"19","status":"M","submitter":"Tim Jacomb"},{"authorTime":"2020-12-20 03:51:40","codes":[{"authorDate":"2020-12-20 03:51:40","commitOrder":3,"curCode":"    public void successVsFailure() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getBuildersList().replaceBy(Collections.singleton(new FailureBuilder()));\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastSuccessfulBuild()));\n        project.getBuildersList().replaceBy(Collections.emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertEquals(4, numberOf(project.getLastSuccessfulBuild()));\n        assertNull(project.getBuildByNumber(1));\n        assertNull(project.getBuildByNumber(2));\n        assertEquals(3, numberOf(project.getLastFailedBuild()));\n    }\n","date":"2020-12-20 03:51:40","endLine":83,"groupId":"1097","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"successVsFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a0/782239dce7792a8b3a561b606e830a763a1c88.src","preCode":"    public void successVsFailure() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getBuildersList().replaceBy(Collections.singleton(new FailureBuilder()));\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(Result.FAILURE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastSuccessfulBuild()));\n        project.getBuildersList().replaceBy(Collections.<Builder>emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertEquals(4, numberOf(project.getLastSuccessfulBuild()));\n        assertNull(project.getBuildByNumber(1));\n        assertNull(project.getBuildByNumber(2));\n        assertEquals(3, numberOf(project.getLastFailedBuild()));\n    }\n","realPath":"test/src/test/java/hudson/tasks/LogRotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2020-12-20 03:51:40","commitOrder":3,"curCode":"    public void stableVsUnstable() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getPublishersList().replaceBy(Collections.singleton(new TestsFail()));\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastStableBuild()));\n        project.getPublishersList().replaceBy(Collections.emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertNull(project.getBuildByNumber(1));\n        assertNull(project.getBuildByNumber(2));\n    }\n","date":"2020-12-20 03:51:40","endLine":99,"groupId":"1097","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"stableVsUnstable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a0/782239dce7792a8b3a561b606e830a763a1c88.src","preCode":"    public void stableVsUnstable() throws Exception {\n        FreeStyleProject project = j.createFreeStyleProject();\n        project.setLogRotator(new LogRotator(-1, 2, -1, -1));\n        assertEquals(Result.SUCCESS, build(project)); \r\n        project.getPublishersList().replaceBy(Collections.singleton(new TestsFail()));\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(Result.UNSTABLE, build(project)); \r\n        assertEquals(1, numberOf(project.getLastStableBuild()));\n        project.getPublishersList().replaceBy(Collections.<Publisher>emptySet());\n        assertEquals(Result.SUCCESS, build(project)); \r\n        assertNull(project.getBuildByNumber(1));\n        assertNull(project.getBuildByNumber(2));\n    }\n","realPath":"test/src/test/java/hudson/tasks/LogRotatorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"152682c1574c5b763616158f8e650e78b84023a1","commitMessage":"@@@Merge pull request #5109 from basil/improvements\n\nCode cleanup","date":"2020-12-20 03:51:40","modifiedFileCount":"47","status":"M","submitter":"Oleg Nenashev"}]
