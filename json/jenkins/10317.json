[{"authorTime":"2016-02-19 22:53:15","codes":[{"authorDate":"2016-02-19 22:53:15","commitOrder":1,"curCode":"    @Test public void deleteJobManyShouldFailIfMiddleJobDoesNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Job.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\",\"never_created\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No such job 'never_created'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created\"), nullValue());\n    }\n","date":"2016-02-19 22:53:15","endLine":158,"groupId":"7629","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteJobManyShouldFailIfMiddleJobDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/1b/f3622f9929cd98ea65cbaa64204356b207946e.src","preCode":"    @Test public void deleteJobManyShouldFailIfMiddleJobDoesNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Job.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\",\"never_created\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No such job 'never_created'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"B"},{"authorDate":"2016-02-19 22:53:15","commitOrder":1,"curCode":"    @Test public void deleteJobManyShouldFailIfMoreJobsDoNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Job.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\", \"never_created1\", \"never_created2\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No such job 'never_created1'\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No such job 'never_created2'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created2\"), nullValue());\n    }\n","date":"2016-02-19 22:53:15","endLine":198,"groupId":"7632","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteJobManyShouldFailIfMoreJobsDoNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/1b/f3622f9929cd98ea65cbaa64204356b207946e.src","preCode":"    @Test public void deleteJobManyShouldFailIfMoreJobsDoNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Job.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\", \"never_created1\", \"never_created2\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No such job 'never_created1'\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No such job 'never_created2'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created2\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"B"}],"commitId":"fe41dc89ab9801c9d57713f84e650788e172e115","commitMessage":"@@@Merge pull request #1997 from pjanouse/JENKINS-32273\n\n[JENKINS-32273] Unified an issue handling in CLI\n","date":"2016-02-19 22:53:15","modifiedFileCount":"50","status":"B","submitter":"Oliver Gond?a"},{"authorTime":"2016-10-15 23:34:12","codes":[{"authorDate":"2016-10-15 23:34:12","commitOrder":2,"curCode":"    @Test public void deleteJobManyShouldFailIfMiddleJobDoesNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Job.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\",\"never_created\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No such job 'never_created'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created\"), nullValue());\n    }\n","date":"2016-10-15 23:34:12","endLine":158,"groupId":"7629","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteJobManyShouldFailIfMiddleJobDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/81/a5bb96694fcc79a987c805e476268066134dc3.src","preCode":"    @Test public void deleteJobManyShouldFailIfMiddleJobDoesNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Job.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\",\"never_created\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No such job 'never_created'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"},{"authorDate":"2016-10-15 23:34:12","commitOrder":2,"curCode":"    @Test public void deleteJobManyShouldFailIfMoreJobsDoNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Job.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\", \"never_created1\", \"never_created2\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No such job 'never_created1'\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No such job 'never_created2'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created2\"), nullValue());\n    }\n","date":"2016-10-15 23:34:12","endLine":198,"groupId":"7632","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteJobManyShouldFailIfMoreJobsDoNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/81/a5bb96694fcc79a987c805e476268066134dc3.src","preCode":"    @Test public void deleteJobManyShouldFailIfMoreJobsDoNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Job.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\", \"never_created1\", \"never_created2\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No such job 'never_created1'\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No such job 'never_created2'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created2\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"b50034c9bffb704acfce0bc49d99855b689eace6","commitMessage":"@@@[FIXED JENKINS-38650] - Cleanup spelling in CLi commands + Javadoc updates (#2571)\n\n* [FIXED JENKINS-38650] - Cleanup spelling in CLi commands.\n\nAlso adds some javadoc and since definitions.\n\n* [JENKINS-38650] - Move common warning message to the constant\n\n* [JENKINS-38650] - DeleteViewCommand should also use the constant string\n\n* [JENKINS-38650] - Rename the constant in order to make the name more explicit\n","date":"2016-10-15 23:34:12","modifiedFileCount":"23","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2021-04-20 04:54:17","codes":[{"authorDate":"2021-04-20 04:54:17","commitOrder":3,"curCode":"    @Test public void deleteJobManyShouldFailIfMiddleJobDoesNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Item.READ, Item.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\",\"never_created\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No such job 'never_created'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created\"), nullValue());\n    }\n","date":"2021-04-20 04:54:17","endLine":158,"groupId":"10317","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"deleteJobManyShouldFailIfMiddleJobDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/7f/33d7ca2a0b93da5bb392d93e68516306798dc9.src","preCode":"    @Test public void deleteJobManyShouldFailIfMiddleJobDoesNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Job.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\",\"never_created\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No such job 'never_created'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"},{"authorDate":"2021-04-20 04:54:17","commitOrder":3,"curCode":"    @Test public void deleteJobManyShouldFailIfMoreJobsDoNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Item.READ, Item.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\", \"never_created1\", \"never_created2\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No such job 'never_created1'\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No such job 'never_created2'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created2\"), nullValue());\n    }\n","date":"2021-04-20 04:54:17","endLine":198,"groupId":"10317","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"deleteJobManyShouldFailIfMoreJobsDoNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/7f/33d7ca2a0b93da5bb392d93e68516306798dc9.src","preCode":"    @Test public void deleteJobManyShouldFailIfMoreJobsDoNotExist() throws Exception {\n\n        j.createFreeStyleProject(\"aProject1\");\n        j.createFreeStyleProject(\"aProject2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Job.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aProject1\", \"never_created1\", \"never_created2\", \"aProject2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No such job 'never_created1'\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No such job 'never_created2'\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getItem(\"aProject1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"aProject2\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getItem(\"never_created2\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"0fd55bd6b50fcdf27368c6b771fb3d8363a24f83","commitMessage":"@@@Merge pull request #5419 from basil/subtypes\n\nUse declaring class as qualifier","date":"2021-04-20 04:54:17","modifiedFileCount":"43","status":"M","submitter":"Oleg Nenashev"}]
