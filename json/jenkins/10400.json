[{"authorTime":"2012-01-05 04:18:51","codes":[{"authorDate":"2012-01-05 04:18:51","commitOrder":1,"curCode":"    public void testSearchByProjectName() throws Exception {\n        final String projectName = \"testSearchByProjectName\";\n        \n        createFreeStyleProject(projectName);\n        \n        Page result = search(projectName);\n        Assert.assertNotNull(result);\n        assertGoodStatus(result);\n        \n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        Assert.assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", projectName)));\n    }\n","date":"2012-01-05 04:18:51","endLine":89,"groupId":"5412","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchByProjectName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/63/744a9afbcf802a8ad9a6da2994dd41f781fad1.src","preCode":"    public void testSearchByProjectName() throws Exception {\n        final String projectName = \"testSearchByProjectName\";\n        \n        createFreeStyleProject(projectName);\n        \n        Page result = search(projectName);\n        Assert.assertNotNull(result);\n        assertGoodStatus(result);\n        \n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        Assert.assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", projectName)));\n    }\n","realPath":"test/src/test/java/hudson/search/SearchTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2012-01-05 04:18:51","commitOrder":1,"curCode":"    public void testSearch2ProjectsWithSameDisplayName() throws Exception {\n        \r\n        final String projectName1 = \"projectName1\";\n        final String projectName2 = \"projectName2\";\n        final String projectName3 = \"projectName3\";\n        final String displayName = \"displayNameFoo\";\n        final String otherDisplayName = \"otherDisplayName\";\n        \n        FreeStyleProject project1 = createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName);\n        FreeStyleProject project2 = createFreeStyleProject(projectName2);\n        project2.setDisplayName(displayName);\n        FreeStyleProject project3 = createFreeStyleProject(projectName3);\n        project3.setDisplayName(otherDisplayName);\n\n        \r\n        \r\n        \r\n        Page result = search(displayName);\n        Assert.assertNotNull(result);\n        assertGoodStatus(result);\n\n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        Assert.assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", displayName)));\n        Assert.assertFalse(contents.contains(otherDisplayName));\n    }\n","date":"2012-01-05 04:18:51","endLine":132,"groupId":"5412","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearch2ProjectsWithSameDisplayName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/63/744a9afbcf802a8ad9a6da2994dd41f781fad1.src","preCode":"    public void testSearch2ProjectsWithSameDisplayName() throws Exception {\n        \r\n        final String projectName1 = \"projectName1\";\n        final String projectName2 = \"projectName2\";\n        final String projectName3 = \"projectName3\";\n        final String displayName = \"displayNameFoo\";\n        final String otherDisplayName = \"otherDisplayName\";\n        \n        FreeStyleProject project1 = createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName);\n        FreeStyleProject project2 = createFreeStyleProject(projectName2);\n        project2.setDisplayName(displayName);\n        FreeStyleProject project3 = createFreeStyleProject(projectName3);\n        project3.setDisplayName(otherDisplayName);\n\n        \r\n        \r\n        \r\n        Page result = search(displayName);\n        Assert.assertNotNull(result);\n        assertGoodStatus(result);\n\n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        Assert.assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", displayName)));\n        Assert.assertFalse(contents.contains(otherDisplayName));\n    }\n","realPath":"test/src/test/java/hudson/search/SearchTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"b5973a4a1da2285d4a814dd88b1f48f48376fc8d","commitMessage":"@@@Merge branch 'master' of github.com:jenkinsci/jenkins\n","date":"2012-01-05 04:18:51","modifiedFileCount":"57","status":"B","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2013-08-03 03:44:49","codes":[{"authorDate":"2013-08-03 03:44:49","commitOrder":2,"curCode":"    public void testSearchByProjectName() throws Exception {\n        final String projectName = \"testSearchByProjectName\";\n        \n        j.createFreeStyleProject(projectName);\n        \n        Page result = j.search(projectName);\n        Assert.assertNotNull(result);\n        j.assertGoodStatus(result);\n        \n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        Assert.assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", projectName)));\n    }\n","date":"2013-08-03 03:44:49","endLine":105,"groupId":"5412","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchByProjectName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f5/24685b95db28e08ff3ddcf0fcf465aeab1a1c7.src","preCode":"    public void testSearchByProjectName() throws Exception {\n        final String projectName = \"testSearchByProjectName\";\n        \n        createFreeStyleProject(projectName);\n        \n        Page result = search(projectName);\n        Assert.assertNotNull(result);\n        assertGoodStatus(result);\n        \n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        Assert.assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", projectName)));\n    }\n","realPath":"test/src/test/java/hudson/search/SearchTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2013-08-03 03:44:49","commitOrder":2,"curCode":"    public void testSearch2ProjectsWithSameDisplayName() throws Exception {\n        \r\n        final String projectName1 = \"projectName1\";\n        final String projectName2 = \"projectName2\";\n        final String projectName3 = \"projectName3\";\n        final String displayName = \"displayNameFoo\";\n        final String otherDisplayName = \"otherDisplayName\";\n        \n        FreeStyleProject project1 = j.createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName);\n        FreeStyleProject project2 = j.createFreeStyleProject(projectName2);\n        project2.setDisplayName(displayName);\n        FreeStyleProject project3 = j.createFreeStyleProject(projectName3);\n        project3.setDisplayName(otherDisplayName);\n\n        \r\n        \r\n        \r\n        Page result = j.search(displayName);\n        Assert.assertNotNull(result);\n        j.assertGoodStatus(result);\n\n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        Assert.assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", displayName)));\n        Assert.assertFalse(contents.contains(otherDisplayName));\n    }\n","date":"2013-08-03 03:44:49","endLine":150,"groupId":"5412","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearch2ProjectsWithSameDisplayName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f5/24685b95db28e08ff3ddcf0fcf465aeab1a1c7.src","preCode":"    public void testSearch2ProjectsWithSameDisplayName() throws Exception {\n        \r\n        final String projectName1 = \"projectName1\";\n        final String projectName2 = \"projectName2\";\n        final String projectName3 = \"projectName3\";\n        final String displayName = \"displayNameFoo\";\n        final String otherDisplayName = \"otherDisplayName\";\n        \n        FreeStyleProject project1 = createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName);\n        FreeStyleProject project2 = createFreeStyleProject(projectName2);\n        project2.setDisplayName(displayName);\n        FreeStyleProject project3 = createFreeStyleProject(projectName3);\n        project3.setDisplayName(otherDisplayName);\n\n        \r\n        \r\n        \r\n        Page result = search(displayName);\n        Assert.assertNotNull(result);\n        assertGoodStatus(result);\n\n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        Assert.assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", displayName)));\n        Assert.assertFalse(contents.contains(otherDisplayName));\n    }\n","realPath":"test/src/test/java/hudson/search/SearchTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"50cda8ca190315d1f2b9c7da310af0c6cc9224e0","commitMessage":"@@@Merge pull request #848 from Vlatombe/improve-search\n\nImprove search to look for items inside ItemGroup","date":"2013-08-03 03:44:49","modifiedFileCount":"4","status":"M","submitter":"Jesse Glick"},{"authorTime":"2015-01-09 09:11:09","codes":[{"authorDate":"2015-01-09 09:11:09","commitOrder":3,"curCode":"    public void testSearchByProjectName() throws Exception {\n        final String projectName = \"testSearchByProjectName\";\n        \n        j.createFreeStyleProject(projectName);\n        \n        Page result = j.search(projectName);\n        assertNotNull(result);\n        j.assertGoodStatus(result);\n        \n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", projectName)));\n    }\n","date":"2015-01-09 09:11:09","endLine":106,"groupId":"10400","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchByProjectName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c9/0858e388c505deb1980f7d3d606420f5f84b02.src","preCode":"    public void testSearchByProjectName() throws Exception {\n        final String projectName = \"testSearchByProjectName\";\n        \n        j.createFreeStyleProject(projectName);\n        \n        Page result = j.search(projectName);\n        Assert.assertNotNull(result);\n        j.assertGoodStatus(result);\n        \n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        Assert.assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", projectName)));\n    }\n","realPath":"test/src/test/java/hudson/search/SearchTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2015-01-09 09:11:09","commitOrder":3,"curCode":"    public void testSearch2ProjectsWithSameDisplayName() throws Exception {\n        \r\n        final String projectName1 = \"projectName1\";\n        final String projectName2 = \"projectName2\";\n        final String projectName3 = \"projectName3\";\n        final String displayName = \"displayNameFoo\";\n        final String otherDisplayName = \"otherDisplayName\";\n        \n        FreeStyleProject project1 = j.createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName);\n        FreeStyleProject project2 = j.createFreeStyleProject(projectName2);\n        project2.setDisplayName(displayName);\n        FreeStyleProject project3 = j.createFreeStyleProject(projectName3);\n        project3.setDisplayName(otherDisplayName);\n\n        \r\n        \r\n        \r\n        Page result = j.search(displayName);\n        assertNotNull(result);\n        j.assertGoodStatus(result);\n\n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", displayName)));\n        assertFalse(contents.contains(otherDisplayName));\n    }\n","date":"2015-01-09 09:11:09","endLine":151,"groupId":"10400","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearch2ProjectsWithSameDisplayName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c9/0858e388c505deb1980f7d3d606420f5f84b02.src","preCode":"    public void testSearch2ProjectsWithSameDisplayName() throws Exception {\n        \r\n        final String projectName1 = \"projectName1\";\n        final String projectName2 = \"projectName2\";\n        final String projectName3 = \"projectName3\";\n        final String displayName = \"displayNameFoo\";\n        final String otherDisplayName = \"otherDisplayName\";\n        \n        FreeStyleProject project1 = j.createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName);\n        FreeStyleProject project2 = j.createFreeStyleProject(projectName2);\n        project2.setDisplayName(displayName);\n        FreeStyleProject project3 = j.createFreeStyleProject(projectName3);\n        project3.setDisplayName(otherDisplayName);\n\n        \r\n        \r\n        \r\n        Page result = j.search(displayName);\n        Assert.assertNotNull(result);\n        j.assertGoodStatus(result);\n\n        \r\n        String contents = result.getWebResponse().getContentAsString();\n        Assert.assertTrue(contents.contains(String.format(\"<title>%s [Jenkins]</title>\", displayName)));\n        Assert.assertFalse(contents.contains(otherDisplayName));\n    }\n","realPath":"test/src/test/java/hudson/search/SearchTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"28984e5920c606a0ca3c3dbc6bc525b98c2d01d7","commitMessage":"@@@Merge pull request #1521 from darxriggs/consistent-use-of-Assert\n\nstatically import methods used from org.junit.Assert","date":"2015-01-09 09:11:09","modifiedFileCount":"20","status":"M","submitter":"Jesse Glick"}]
