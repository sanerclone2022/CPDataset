[{"authorTime":"2016-12-21 04:24:26","codes":[{"authorDate":"2016-12-21 04:24:26","commitOrder":1,"curCode":"    public void testGetItemsWithoutAnonRead() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(false);\n        Jenkins.getInstance().setAuthorizationStrategy(strategy);\n\n        Jenkins.getInstance().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate(Jenkins.ANONYMOUS, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"no items\", 0, Jenkins.getInstance().getItems().size());\n            }\n        });\n    }\n","date":"2016-12-21 04:24:26","endLine":38,"groupId":"7651","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetItemsWithoutAnonRead","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5d/3475df92a28c372c13ab1eead8c8d4379fb027.src","preCode":"    public void testGetItemsWithoutAnonRead() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(false);\n        Jenkins.getInstance().setAuthorizationStrategy(strategy);\n\n        Jenkins.getInstance().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate(Jenkins.ANONYMOUS, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"no items\", 0, Jenkins.getInstance().getItems().size());\n            }\n        });\n    }\n","realPath":"test/src/test/java/jenkins/security/Security380Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"B"},{"authorDate":"2016-12-21 04:24:26","commitOrder":1,"curCode":"    public void testGetItems() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(true);\n        Jenkins.getInstance().setAuthorizationStrategy(strategy);\n\n        Jenkins.getInstance().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate(Jenkins.ANONYMOUS, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"one item\", 1, Jenkins.getInstance().getItems().size());\n            }\n        });\n    }\n","date":"2016-12-21 04:24:26","endLine":56,"groupId":"7651","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5d/3475df92a28c372c13ab1eead8c8d4379fb027.src","preCode":"    public void testGetItems() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(true);\n        Jenkins.getInstance().setAuthorizationStrategy(strategy);\n\n        Jenkins.getInstance().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate(Jenkins.ANONYMOUS, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"one item\", 1, Jenkins.getInstance().getItems().size());\n            }\n        });\n    }\n","realPath":"test/src/test/java/jenkins/security/Security380Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"}],"commitId":"c05e0523851f9e4dcb83be2f4c9646734674e9e4","commitMessage":"@@@Merge branch 'security-stable-2.32' into security-master\n","date":"2016-12-21 04:24:26","modifiedFileCount":"12","status":"B","submitter":"Jesse Glick"},{"authorTime":"2019-07-03 02:02:48","codes":[{"authorDate":"2019-07-03 02:02:48","commitOrder":2,"curCode":"    public void testGetItemsWithoutAnonRead() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(false);\n        Jenkins.get().setAuthorizationStrategy(strategy);\n\n        Jenkins.get().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate(Jenkins.ANONYMOUS, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"no items\", 0, Jenkins.get().getItems().size());\n            }\n        });\n    }\n","date":"2019-07-03 02:02:48","endLine":38,"groupId":"9535","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetItemsWithoutAnonRead","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/26/e025948e895170fccac6cdf9d2fac4ac6005c7.src","preCode":"    public void testGetItemsWithoutAnonRead() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(false);\n        Jenkins.getInstance().setAuthorizationStrategy(strategy);\n\n        Jenkins.getInstance().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate(Jenkins.ANONYMOUS, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"no items\", 0, Jenkins.getInstance().getItems().size());\n            }\n        });\n    }\n","realPath":"test/src/test/java/jenkins/security/Security380Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"M"},{"authorDate":"2019-07-03 02:02:48","commitOrder":2,"curCode":"    public void testGetItems() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(true);\n        Jenkins.get().setAuthorizationStrategy(strategy);\n\n        Jenkins.get().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate(Jenkins.ANONYMOUS, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"one item\", 1, Jenkins.get().getItems().size());\n            }\n        });\n    }\n","date":"2019-07-03 02:02:48","endLine":56,"groupId":"9535","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/26/e025948e895170fccac6cdf9d2fac4ac6005c7.src","preCode":"    public void testGetItems() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(true);\n        Jenkins.getInstance().setAuthorizationStrategy(strategy);\n\n        Jenkins.getInstance().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate(Jenkins.ANONYMOUS, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"one item\", 1, Jenkins.getInstance().getItems().size());\n            }\n        });\n    }\n","realPath":"test/src/test/java/jenkins/security/Security380Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"}],"commitId":"494119294fa2f095b4a28db0dd32c0d2092d9fa1","commitMessage":"@@@Merge commit '4404c6e662befe16e8daa1ea7a412df73b370086' of github.com:jenkinsci/jenkins\n","date":"2019-07-03 02:02:48","modifiedFileCount":"292","status":"M","submitter":"Jeff Thompson"},{"authorTime":"2020-11-07 02:30:25","codes":[{"authorDate":"2020-11-07 02:30:25","commitOrder":3,"curCode":"    public void testGetItemsWithoutAnonRead() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(false);\n        Jenkins.get().setAuthorizationStrategy(strategy);\n\n        Jenkins.get().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate2(Jenkins.ANONYMOUS2, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"no items\", 0, Jenkins.get().getItems().size());\n            }\n        });\n    }\n","date":"2020-11-07 02:30:25","endLine":38,"groupId":"10618","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testGetItemsWithoutAnonRead","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ff/3edae589adfa948977300b5e64c987e26c88f1.src","preCode":"    public void testGetItemsWithoutAnonRead() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(false);\n        Jenkins.get().setAuthorizationStrategy(strategy);\n\n        Jenkins.get().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate(Jenkins.ANONYMOUS, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"no items\", 0, Jenkins.get().getItems().size());\n            }\n        });\n    }\n","realPath":"test/src/test/java/jenkins/security/Security380Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"M"},{"authorDate":"2020-11-07 02:30:25","commitOrder":3,"curCode":"    public void testGetItems() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(true);\n        Jenkins.get().setAuthorizationStrategy(strategy);\n\n        Jenkins.get().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate2(Jenkins.ANONYMOUS2, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"one item\", 1, Jenkins.get().getItems().size());\n            }\n        });\n    }\n","date":"2020-11-07 02:30:25","endLine":56,"groupId":"10618","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testGetItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ff/3edae589adfa948977300b5e64c987e26c88f1.src","preCode":"    public void testGetItems() throws Exception {\n        FullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy();\n        strategy.setAllowAnonymousRead(true);\n        Jenkins.get().setAuthorizationStrategy(strategy);\n\n        Jenkins.get().setSecurityRealm(j.createDummySecurityRealm());\n\n        j.createFreeStyleProject();\n        ACL.impersonate(Jenkins.ANONYMOUS, new Runnable() {\n            @Override\n            public void run() {\n                Assert.assertEquals(\"one item\", 1, Jenkins.get().getItems().size());\n            }\n        });\n    }\n","realPath":"test/src/test/java/jenkins/security/Security380Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"}],"commitId":"a9ca5ef3d4c97937636bf3c585f4232514279b14","commitMessage":"@@@[JEP-227] Replace Acegi Security with Spring Security & upgrade Spring Framework (#4848)\n\nReplacing Acegi Security with Spring Security\n\nCo-authored-by: Tim Jacomb <timjacomb1+github@gmail.com>\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>","date":"2020-11-07 02:30:25","modifiedFileCount":"149","status":"M","submitter":"Jesse Glick"}]
