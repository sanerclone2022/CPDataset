[{"authorTime":"2020-07-21 12:20:47","codes":[{"authorDate":"2020-07-21 12:20:47","commitOrder":1,"curCode":"    private boolean cleanFingerprint(File fingerprintFile, TaskListener listener) {\n        try {\n            Fingerprint fp = loadFingerprint(fingerprintFile);\n            if (fp == null || (!fp.isAlive() && fp.getFacetBlockingDeletion() == null) ) {\n                listener.getLogger().println(\"deleting obsolete \" + fingerprintFile);\n                fingerprintFile.delete();\n                return true;\n            } else {\n                if (!fp.isAlive()) {\n                    FingerprintFacet deletionBlockerFacet = fp.getFacetBlockingDeletion();\n                    listener.getLogger().println(deletionBlockerFacet.getClass().getName() + \" created on \" + new Date(deletionBlockerFacet.getTimestamp()) + \" blocked deletion of \" + fingerprintFile);\n                }\n                \r\n                \r\n                fp = getFingerprint(fp);\n                return fp.trim();\n            }\n        } catch (IOException e) {\n            Functions.printStackTrace(e, listener.error(\"Failed to process \" + fingerprintFile));\n            return false;\n        }\n    }\n","date":"2020-07-21 12:20:47","endLine":274,"groupId":"3506","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanFingerprint","params":"(FilefingerprintFile@TaskListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/0b/d947acd38fe1c2ddbffca1657abeafc4ff0ee5.src","preCode":"    private boolean cleanFingerprint(File fingerprintFile, TaskListener listener) {\n        try {\n            Fingerprint fp = loadFingerprint(fingerprintFile);\n            if (fp == null || (!fp.isAlive() && fp.getFacetBlockingDeletion() == null) ) {\n                listener.getLogger().println(\"deleting obsolete \" + fingerprintFile);\n                fingerprintFile.delete();\n                return true;\n            } else {\n                if (!fp.isAlive()) {\n                    FingerprintFacet deletionBlockerFacet = fp.getFacetBlockingDeletion();\n                    listener.getLogger().println(deletionBlockerFacet.getClass().getName() + \" created on \" + new Date(deletionBlockerFacet.getTimestamp()) + \" blocked deletion of \" + fingerprintFile);\n                }\n                \r\n                \r\n                fp = getFingerprint(fp);\n                return fp.trim();\n            }\n        } catch (IOException e) {\n            Functions.printStackTrace(e, listener.error(\"Failed to process \" + fingerprintFile));\n            return false;\n        }\n    }\n","realPath":"core/src/main/java/jenkins/fingerprints/FileFingerprintStorage.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"B"},{"authorDate":"2020-07-21 12:20:47","commitOrder":1,"curCode":"    public boolean cleanFingerprint(@NonNull Fingerprint fingerprint, TaskListener taskListener) {\n        try {\n            if (!fingerprint.isAlive() && fingerprint.getFacetBlockingDeletion() == null) {\n                taskListener.getLogger().println(\"deleting obsolete \" + fingerprint.toString());\n                Fingerprint.delete(fingerprint.getHashString());\n                return true;\n            } else {\n                if (!fingerprint.isAlive()) {\n                    FingerprintFacet deletionBlockerFacet = fingerprint.getFacetBlockingDeletion();\n                    taskListener.getLogger().println(deletionBlockerFacet.getClass().getName() + \" created on \" +\n                            new Date(deletionBlockerFacet.getTimestamp()) + \" blocked deletion of \" +\n                            fingerprint.getHashString());\n                }\n                \r\n                \r\n                fingerprint = getFingerprint(fingerprint);\n                return fingerprint.trim();\n            }\n        } catch (IOException e) {\n            Functions.printStackTrace(e, taskListener.error(\"Failed to process \" + fingerprint.getHashString()));\n            return false;\n        }\n    }\n","date":"2020-07-21 12:20:47","endLine":136,"groupId":"474","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanFingerprint","params":"(@NonNullFingerprintfingerprint@TaskListenertaskListener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/53/1817e03ca03390d48f4760db8fe2e43fc451d7.src","preCode":"    public boolean cleanFingerprint(@NonNull Fingerprint fingerprint, TaskListener taskListener) {\n        try {\n            if (!fingerprint.isAlive() && fingerprint.getFacetBlockingDeletion() == null) {\n                taskListener.getLogger().println(\"deleting obsolete \" + fingerprint.toString());\n                Fingerprint.delete(fingerprint.getHashString());\n                return true;\n            } else {\n                if (!fingerprint.isAlive()) {\n                    FingerprintFacet deletionBlockerFacet = fingerprint.getFacetBlockingDeletion();\n                    taskListener.getLogger().println(deletionBlockerFacet.getClass().getName() + \" created on \" +\n                            new Date(deletionBlockerFacet.getTimestamp()) + \" blocked deletion of \" +\n                            fingerprint.getHashString());\n                }\n                \r\n                \r\n                fingerprint = getFingerprint(fingerprint);\n                return fingerprint.trim();\n            }\n        } catch (IOException e) {\n            Functions.printStackTrace(e, taskListener.error(\"Failed to process \" + fingerprint.getHashString()));\n            return false;\n        }\n    }\n","realPath":"core/src/main/java/jenkins/fingerprints/FingerprintStorage.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"}],"commitId":"be28d586b5db3cd3a5b7bbbfa265e73e86b6446b","commitMessage":"@@@[JENKINS-62755] Introduce Fingerprint Cleanup in External Storage API (#4817)\n\n* Create new FingerprintCleanupThread\n\n* Moved test to jenkins\n\n* Add license\n\n* Fix license\n\n* Fix some tests\n\n* Fix all tests\n\n* Remove redundant imports\n\n* Add documentation; add test\n\n* Fix errors in fingerprintertest\n\n* Remove default fingerprint cleanup implementation\n\n* Remove override from execute\n\n* Undo author deletion\n\n* Remove redundant import\n\n* Move fingerprint cleanup to storage\n\n* Fix spacing\n\n* Add new line\n\n* Minor fixes\n\n* Fix tests\n\n* Add documentation\n\n* Introduce fingerprint cleanup toggle\n\n* Link cleanup config to thread\n\n* Add file system cleanup\n\n* Add test\n\n* Introduce external fingerprint storage cleanup tests\n\n* Remove redundant statements\n\n* Fix test\n\n* Improve docstring\n\n* Introduce shouldNotCleanFingerprintsWhenDisabled test\n\n* Fix default cleanup value\n\n* Minor fixes\n\n* Enabled->Disabled\n\n* Fix tests\n\n* get -> is","date":"2020-07-21 12:20:47","modifiedFileCount":"5","status":"B","submitter":"stellargo"},{"authorTime":"2021-07-10 00:38:12","codes":[{"authorDate":"2020-07-21 12:20:47","commitOrder":2,"curCode":"    private boolean cleanFingerprint(File fingerprintFile, TaskListener listener) {\n        try {\n            Fingerprint fp = loadFingerprint(fingerprintFile);\n            if (fp == null || (!fp.isAlive() && fp.getFacetBlockingDeletion() == null) ) {\n                listener.getLogger().println(\"deleting obsolete \" + fingerprintFile);\n                fingerprintFile.delete();\n                return true;\n            } else {\n                if (!fp.isAlive()) {\n                    FingerprintFacet deletionBlockerFacet = fp.getFacetBlockingDeletion();\n                    listener.getLogger().println(deletionBlockerFacet.getClass().getName() + \" created on \" + new Date(deletionBlockerFacet.getTimestamp()) + \" blocked deletion of \" + fingerprintFile);\n                }\n                \r\n                \r\n                fp = getFingerprint(fp);\n                return fp.trim();\n            }\n        } catch (IOException e) {\n            Functions.printStackTrace(e, listener.error(\"Failed to process \" + fingerprintFile));\n            return false;\n        }\n    }\n","date":"2020-07-21 12:20:47","endLine":274,"groupId":"101165","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanFingerprint","params":"(FilefingerprintFile@TaskListenerlistener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/0b/d947acd38fe1c2ddbffca1657abeafc4ff0ee5.src","preCode":"    private boolean cleanFingerprint(File fingerprintFile, TaskListener listener) {\n        try {\n            Fingerprint fp = loadFingerprint(fingerprintFile);\n            if (fp == null || (!fp.isAlive() && fp.getFacetBlockingDeletion() == null) ) {\n                listener.getLogger().println(\"deleting obsolete \" + fingerprintFile);\n                fingerprintFile.delete();\n                return true;\n            } else {\n                if (!fp.isAlive()) {\n                    FingerprintFacet deletionBlockerFacet = fp.getFacetBlockingDeletion();\n                    listener.getLogger().println(deletionBlockerFacet.getClass().getName() + \" created on \" + new Date(deletionBlockerFacet.getTimestamp()) + \" blocked deletion of \" + fingerprintFile);\n                }\n                \r\n                \r\n                fp = getFingerprint(fp);\n                return fp.trim();\n            }\n        } catch (IOException e) {\n            Functions.printStackTrace(e, listener.error(\"Failed to process \" + fingerprintFile));\n            return false;\n        }\n    }\n","realPath":"core/src/main/java/jenkins/fingerprints/FileFingerprintStorage.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2021-07-10 00:38:12","commitOrder":2,"curCode":"    public boolean cleanFingerprint(@NonNull Fingerprint fingerprint, TaskListener taskListener) {\n        try {\n            if (!fingerprint.isAlive() && fingerprint.getFacetBlockingDeletion() == null) {\n                taskListener.getLogger().println(\"deleting obsolete \" + fingerprint);\n                Fingerprint.delete(fingerprint.getHashString());\n                return true;\n            } else {\n                if (!fingerprint.isAlive()) {\n                    FingerprintFacet deletionBlockerFacet = fingerprint.getFacetBlockingDeletion();\n                    taskListener.getLogger().println(deletionBlockerFacet.getClass().getName() + \" created on \" +\n                            new Date(deletionBlockerFacet.getTimestamp()) + \" blocked deletion of \" +\n                            fingerprint.getHashString());\n                }\n                \r\n                \r\n                fingerprint = getFingerprint(fingerprint);\n                return fingerprint.trim();\n            }\n        } catch (IOException e) {\n            Functions.printStackTrace(e, taskListener.error(\"Failed to process \" + fingerprint.getHashString()));\n            return false;\n        }\n    }\n","date":"2021-07-10 00:38:12","endLine":136,"groupId":"101165","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"cleanFingerprint","params":"(@NonNullFingerprintfingerprint@TaskListenertaskListener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f4/47ed378ea9c613de4ab0421765f7b560559fc2.src","preCode":"    public boolean cleanFingerprint(@NonNull Fingerprint fingerprint, TaskListener taskListener) {\n        try {\n            if (!fingerprint.isAlive() && fingerprint.getFacetBlockingDeletion() == null) {\n                taskListener.getLogger().println(\"deleting obsolete \" + fingerprint.toString());\n                Fingerprint.delete(fingerprint.getHashString());\n                return true;\n            } else {\n                if (!fingerprint.isAlive()) {\n                    FingerprintFacet deletionBlockerFacet = fingerprint.getFacetBlockingDeletion();\n                    taskListener.getLogger().println(deletionBlockerFacet.getClass().getName() + \" created on \" +\n                            new Date(deletionBlockerFacet.getTimestamp()) + \" blocked deletion of \" +\n                            fingerprint.getHashString());\n                }\n                \r\n                \r\n                fingerprint = getFingerprint(fingerprint);\n                return fingerprint.trim();\n            }\n        } catch (IOException e) {\n            Functions.printStackTrace(e, taskListener.error(\"Failed to process \" + fingerprint.getHashString()));\n            return false;\n        }\n    }\n","realPath":"core/src/main/java/jenkins/fingerprints/FingerprintStorage.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"bf01f36e75bd4c77aa76c8f180bd4b51470eba56","commitMessage":"@@@Merge pull request #5602 from offa/dev\n\nException test modernization / clean up","date":"2021-07-10 00:38:12","modifiedFileCount":"40","status":"M","submitter":"Raihaan Shouhell"}]
