[{"authorTime":"2016-05-15 23:05:12","codes":[{"authorDate":"2016-05-15 23:05:12","commitOrder":1,"curCode":"    public void shouldReturnPluginListsByDefault() throws Exception {\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n        \n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin is suggestions \", response, containsString(\"active-directory\"));\n        assertThat(\"Missing category is suggestions \", response, containsString(\"Pipelines and Continuous Delivery\"));\n    }\n","date":"2016-05-15 23:05:12","endLine":97,"groupId":"6796","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReturnPluginListsByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/25/eacea87073d7505273909548a3feb992952293.src","preCode":"    public void shouldReturnPluginListsByDefault() throws Exception {\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n        \n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin is suggestions \", response, containsString(\"active-directory\"));\n        assertThat(\"Missing category is suggestions \", response, containsString(\"Pipelines and Continuous Delivery\"));\n    }\n","realPath":"test/src/test/java/jenkins/install/SetupWizardTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"},{"authorDate":"2016-05-15 23:05:12","commitOrder":1,"curCode":"    public void shouldReturnUpdateSiteJSONIfSpecified() throws Exception {\n        \r\n        CustomUpdateSite us = new CustomUpdateSite(tmpdir);\n        us.init();\n        j.jenkins.getUpdateCenter().getSites().add(us);\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n        \n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin is suggestions \", response, containsString(\"antisamy-markup-formatter\"));\n        assertThat(\"Missing category is suggestions \", response, containsString(\"Organization and Administration\"));\n        assertThat(\"Missing plugin is suggestions \", response, not(containsString(\"active-directory\")));\n        assertThat(\"Missing category is suggestions \", response, not(containsString(\"Pipelines and Continuous Delivery\")));\n    }\n","date":"2016-05-15 23:05:12","endLine":120,"groupId":"6796","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReturnUpdateSiteJSONIfSpecified","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/25/eacea87073d7505273909548a3feb992952293.src","preCode":"    public void shouldReturnUpdateSiteJSONIfSpecified() throws Exception {\n        \r\n        CustomUpdateSite us = new CustomUpdateSite(tmpdir);\n        us.init();\n        j.jenkins.getUpdateCenter().getSites().add(us);\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n        \n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin is suggestions \", response, containsString(\"antisamy-markup-formatter\"));\n        assertThat(\"Missing category is suggestions \", response, containsString(\"Organization and Administration\"));\n        assertThat(\"Missing plugin is suggestions \", response, not(containsString(\"active-directory\")));\n        assertThat(\"Missing category is suggestions \", response, not(containsString(\"Pipelines and Continuous Delivery\")));\n    }\n","realPath":"test/src/test/java/jenkins/install/SetupWizardTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"}],"commitId":"bb1f620d0abfee671f65abbeffef5e3d2fd8cfed","commitMessage":"@@@[JENKINS-34833] - Installation Wizard: Allow altering the list of suggested plugins from update sites (#2348)\n\n* [JENKINS-34833] - Installation Wizard: Allow altering the list of succested plugins from update sites\n\nIn our company we provide a custom package of Jenkins.  which provides a customized set of plugins (open-source and closed-source ones). These plugins come from the custom update site.\n\nWe would like to provide custom suggestions to users of our Jenkins packages when they install Jenkins. For such purpose we would like to make the plugin suggestions list overridable by UpdateSite extensions in Jenkins.\n\n* [JENKINS-34833] - Fix the JS Unit test (code from @kzantow)\n\n* [JENKINS-34833] - Unit tests for SetupWizard\n\n* [JENKINS-34833] - Address comment regarding the error propagation for the unknown version\n\n* [JENKINS-34833] - SetupWizard::getPlatformPluginList() is not a part of the public API\n\n* [JENKINS-34833] - Address comments from @orrc\n","date":"2016-05-15 23:05:12","modifiedFileCount":"1","status":"B","submitter":"Oleg Nenashev"},{"authorTime":"2018-01-13 06:39:05","codes":[{"authorDate":"2016-05-15 23:05:12","commitOrder":2,"curCode":"    public void shouldReturnPluginListsByDefault() throws Exception {\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n        \n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin is suggestions \", response, containsString(\"active-directory\"));\n        assertThat(\"Missing category is suggestions \", response, containsString(\"Pipelines and Continuous Delivery\"));\n    }\n","date":"2016-05-15 23:05:12","endLine":97,"groupId":"6796","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReturnPluginListsByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/25/eacea87073d7505273909548a3feb992952293.src","preCode":"    public void shouldReturnPluginListsByDefault() throws Exception {\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n        \n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin is suggestions \", response, containsString(\"active-directory\"));\n        assertThat(\"Missing category is suggestions \", response, containsString(\"Pipelines and Continuous Delivery\"));\n    }\n","realPath":"test/src/test/java/jenkins/install/SetupWizardTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"N"},{"authorDate":"2018-01-13 06:39:05","commitOrder":2,"curCode":"    public void shouldReturnUpdateSiteJSONIfSpecified() throws Exception {\n        \r\n        CustomUpdateSite us = new CustomUpdateSite(tmpdir.getRoot());\n        us.init();\n        j.jenkins.getUpdateCenter().getSites().add(us);\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n        \n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin is suggestions \", response, containsString(\"antisamy-markup-formatter\"));\n        assertThat(\"Missing category is suggestions \", response, containsString(\"Organization and Administration\"));\n        assertThat(\"Missing plugin is suggestions \", response, not(containsString(\"active-directory\")));\n        assertThat(\"Missing category is suggestions \", response, not(containsString(\"Pipelines and Continuous Delivery\")));\n    }\n","date":"2018-01-13 06:39:05","endLine":111,"groupId":"6796","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReturnUpdateSiteJSONIfSpecified","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a6/c71dd1a1111c0be322615faaa81a38632d9bdc.src","preCode":"    public void shouldReturnUpdateSiteJSONIfSpecified() throws Exception {\n        \r\n        CustomUpdateSite us = new CustomUpdateSite(tmpdir);\n        us.init();\n        j.jenkins.getUpdateCenter().getSites().add(us);\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n        \n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin is suggestions \", response, containsString(\"antisamy-markup-formatter\"));\n        assertThat(\"Missing category is suggestions \", response, containsString(\"Organization and Administration\"));\n        assertThat(\"Missing plugin is suggestions \", response, not(containsString(\"active-directory\")));\n        assertThat(\"Missing category is suggestions \", response, not(containsString(\"Pipelines and Continuous Delivery\")));\n    }\n","realPath":"test/src/test/java/jenkins/install/SetupWizardTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"cb4903c20e788f015f6210a965a2759009ff24f2","commitMessage":"@@@[JEP-200] [JENKINS-47736] Merged #3120: ClassFilterImpl\n","date":"2018-01-13 06:39:05","modifiedFileCount":"12","status":"M","submitter":"Jesse Glick"},{"authorTime":"2021-03-30 16:07:00","codes":[{"authorDate":"2016-05-15 23:05:12","commitOrder":3,"curCode":"    public void shouldReturnPluginListsByDefault() throws Exception {\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n        \n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin is suggestions \", response, containsString(\"active-directory\"));\n        assertThat(\"Missing category is suggestions \", response, containsString(\"Pipelines and Continuous Delivery\"));\n    }\n","date":"2016-05-15 23:05:12","endLine":97,"groupId":"10602","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldReturnPluginListsByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/25/eacea87073d7505273909548a3feb992952293.src","preCode":"    public void shouldReturnPluginListsByDefault() throws Exception {\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n        \n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin is suggestions \", response, containsString(\"active-directory\"));\n        assertThat(\"Missing category is suggestions \", response, containsString(\"Pipelines and Continuous Delivery\"));\n    }\n","realPath":"test/src/test/java/jenkins/install/SetupWizardTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"N"},{"authorDate":"2021-03-30 16:07:00","commitOrder":3,"curCode":"    public void shouldReturnUpdateSiteJSONIfSpecified() throws Exception {\n        \r\n        CustomLocalUpdateSite us = new CustomLocalUpdateSite(tmpdir.getRoot());\n        us.init();\n        j.jenkins.getUpdateCenter().getSites().add(us);\n\n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n\n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin in suggestions \", response, containsString(\"antisamy-markup-formatter\"));\n        assertThat(\"Missing category in suggestions \", response, containsString(\"Organization and Administration\"));\n        assertThat(\"Unexpected plugin in suggestions \", response, not(containsString(\"active-directory\")));\n        assertThat(\"Unexpected category in suggestions \", response, not(containsString(\"Pipelines and Continuous Delivery\")));\n    }\n","date":"2021-03-30 16:07:00","endLine":130,"groupId":"10602","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldReturnUpdateSiteJSONIfSpecified","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/da/42bb07815f6044ce752b48fa4c505c2151f280.src","preCode":"    public void shouldReturnUpdateSiteJSONIfSpecified() throws Exception {\n        \r\n        CustomUpdateSite us = new CustomUpdateSite(tmpdir.getRoot());\n        us.init();\n        j.jenkins.getUpdateCenter().getSites().add(us);\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        \r\n        j.jenkins.setSecurityRealm(SecurityRealm.NO_AUTHENTICATION);\n        j.jenkins.setAuthorizationStrategy(AuthorizationStrategy.UNSECURED);\n        \r\n        \r\n        \n        String response = jsonRequest(wc, \"setupWizard/platformPluginList\");\n        assertThat(\"Missing plugin is suggestions \", response, containsString(\"antisamy-markup-formatter\"));\n        assertThat(\"Missing category is suggestions \", response, containsString(\"Organization and Administration\"));\n        assertThat(\"Missing plugin is suggestions \", response, not(containsString(\"active-directory\")));\n        assertThat(\"Missing category is suggestions \", response, not(containsString(\"Pipelines and Continuous Delivery\")));\n    }\n","realPath":"test/src/test/java/jenkins/install/SetupWizardTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"e4faa17ef7f45c0be2a1a2ab0d9928e77df08124","commitMessage":"@@@Merge pull request #5365 from daniel-beck/JENKINS-65172\n\n[JENKINS-65172] Better support for remote platform-plugins.json","date":"2021-03-30 16:07:00","modifiedFileCount":"3","status":"M","submitter":"Oleg Nenashev"}]
