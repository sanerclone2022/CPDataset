[{"authorTime":"2016-07-12 04:28:56","codes":[{"authorDate":"2016-07-12 04:28:56","commitOrder":2,"curCode":"    public void shouldBeUnableToSeeFingerprintsInUnreadableFolder() throws Exception {\n        final SecuredMockFolder folder = rule.jenkins.createProject(SecuredMockFolder.class, \"folder\");\n        final FreeStyleProject project = createAndRunProjectWithPublisher(folder, \"project\", \"test.txt\");\n        final FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fingerprint = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.get(\"user1\"); \r\n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.DISCOVER);\n        \n        \r\n        try (ACLContext _ = ACL.as(user1)) {\n            assertFalse(\"Test framework issue: User1 should be unable to read the folder\", folder.hasPermission(Item.READ));\n            assertThat(\"user1 should be unable to see the origin\", fingerprint.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fingerprint._getUsages().size());\n        }\n    }\n","date":"2016-07-12 04:28:56","endLine":231,"groupId":"6015","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldBeUnableToSeeFingerprintsInUnreadableFolder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5c/b25a258a303e275f24bfc939de901cc96acce0.src","preCode":"    public void shouldBeUnableToSeeFingerprintsInUnreadableFolder() throws Exception {\n        final SecuredMockFolder folder = rule.jenkins.createProject(SecuredMockFolder.class, \"folder\");\n        final FreeStyleProject project = createAndRunProjectWithPublisher(folder, \"project\", \"test.txt\");\n        final FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fingerprint = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.get(\"user1\"); \r\n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.DISCOVER);\n        \n        \r\n        try (ACLContext _ = ACL.as(user1)) {\n            assertFalse(\"Test framework issue: User1 should be unable to read the folder\", folder.hasPermission(Item.READ));\n            assertThat(\"user1 should be unable to see the origin\", fingerprint.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fingerprint._getUsages().size());\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/FingerprintTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"MB"},{"authorDate":"2016-07-12 04:28:56","commitOrder":2,"curCode":"    public void commonUserShouldBeUnableToSeeReferencesOfDeletedJobs() throws Exception {\n        \r\n        FreeStyleProject project = createAndRunProjectWithPublisher(\"project\", \"test.txt\");\n        FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fp = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.get(\"user1\");  \n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.READ, Item.DISCOVER);\n        project.delete();\n\n        try (ACLContext _ = ACL.as(user1)) {\n            assertThat(\"user1 should be unable to see the origin\", fp.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fp._getUsages().size());\n        }\n    }\n","date":"2016-07-12 04:28:56","endLine":255,"groupId":"3513","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"commonUserShouldBeUnableToSeeReferencesOfDeletedJobs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5c/b25a258a303e275f24bfc939de901cc96acce0.src","preCode":"    public void commonUserShouldBeUnableToSeeReferencesOfDeletedJobs() throws Exception {\n        \r\n        FreeStyleProject project = createAndRunProjectWithPublisher(\"project\", \"test.txt\");\n        FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fp = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.get(\"user1\");  \n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.READ, Item.DISCOVER);\n        project.delete();\n\n        try (ACLContext _ = ACL.as(user1)) {\n            assertThat(\"user1 should be unable to see the origin\", fp.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fp._getUsages().size());\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/FingerprintTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"MB"}],"commitId":"bb4eb45fb3d90cd1d6f8dd90781c94a50aaf4702","commitMessage":"@@@Merge pull request #2437 from stephenc/jenkins-36494\n\n[FIXED JENKINS-36494] Switch to a try with resources form of impersonation","date":"2016-07-12 04:28:56","modifiedFileCount":"11","status":"M","submitter":"Stephen Connolly"},{"authorTime":"2018-10-08 14:16:41","codes":[{"authorDate":"2018-10-08 14:16:41","commitOrder":3,"curCode":"    public void shouldBeUnableToSeeFingerprintsInUnreadableFolder() throws Exception {\n        final SecuredMockFolder folder = rule.jenkins.createProject(SecuredMockFolder.class, \"folder\");\n        final FreeStyleProject project = createAndRunProjectWithPublisher(folder, \"project\", \"test.txt\");\n        final FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fingerprint = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.get(\"user1\"); \r\n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.DISCOVER);\n        \n        \r\n        try (ACLContext acl = ACL.as(user1)) {\n            assertFalse(\"Test framework issue: User1 should be unable to read the folder\", folder.hasPermission(Item.READ));\n            assertThat(\"user1 should be unable to see the origin\", fingerprint.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fingerprint._getUsages().size());\n        }\n    }\n","date":"2018-10-08 14:16:41","endLine":249,"groupId":"6015","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldBeUnableToSeeFingerprintsInUnreadableFolder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a8/a9befece4975ac2ca14d92435e5cc4a5704812.src","preCode":"    public void shouldBeUnableToSeeFingerprintsInUnreadableFolder() throws Exception {\n        final SecuredMockFolder folder = rule.jenkins.createProject(SecuredMockFolder.class, \"folder\");\n        final FreeStyleProject project = createAndRunProjectWithPublisher(folder, \"project\", \"test.txt\");\n        final FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fingerprint = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.get(\"user1\"); \r\n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.DISCOVER);\n        \n        \r\n        try (ACLContext _ = ACL.as(user1)) {\n            assertFalse(\"Test framework issue: User1 should be unable to read the folder\", folder.hasPermission(Item.READ));\n            assertThat(\"user1 should be unable to see the origin\", fingerprint.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fingerprint._getUsages().size());\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/FingerprintTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"},{"authorDate":"2018-10-08 14:16:41","commitOrder":3,"curCode":"    public void commonUserShouldBeUnableToSeeReferencesOfDeletedJobs() throws Exception {\n        \r\n        FreeStyleProject project = createAndRunProjectWithPublisher(\"project\", \"test.txt\");\n        FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fp = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.get(\"user1\");  \n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.READ, Item.DISCOVER);\n        project.delete();\n\n        try (ACLContext acl = ACL.as(user1)) {\n            assertThat(\"user1 should be unable to see the origin\", fp.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fp._getUsages().size());\n        }\n    }\n","date":"2018-10-08 14:16:41","endLine":273,"groupId":"3513","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"commonUserShouldBeUnableToSeeReferencesOfDeletedJobs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a8/a9befece4975ac2ca14d92435e5cc4a5704812.src","preCode":"    public void commonUserShouldBeUnableToSeeReferencesOfDeletedJobs() throws Exception {\n        \r\n        FreeStyleProject project = createAndRunProjectWithPublisher(\"project\", \"test.txt\");\n        FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fp = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.get(\"user1\");  \n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.READ, Item.DISCOVER);\n        project.delete();\n\n        try (ACLContext _ = ACL.as(user1)) {\n            assertThat(\"user1 should be unable to see the origin\", fp.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fp._getUsages().size());\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/FingerprintTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"M"}],"commitId":"ef5e4a01455f69a02ab589ecdd1c494fe5a3e3b7","commitMessage":"@@@Merge commit 'edd303e91747380043723c1b4c7dc843b91afa51' into security-master\n","date":"2018-10-08 14:16:41","modifiedFileCount":"63","status":"M","submitter":"Daniel Beck"},{"authorTime":"2021-04-12 01:49:34","codes":[{"authorDate":"2021-04-12 01:49:34","commitOrder":4,"curCode":"    public void shouldBeUnableToSeeFingerprintsInUnreadableFolder() throws Exception {\n        final SecuredMockFolder folder = rule.jenkins.createProject(SecuredMockFolder.class, \"folder\");\n        final FreeStyleProject project = createAndRunProjectWithPublisher(folder, \"project\", \"test.txt\");\n        final FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fingerprint = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.getOrCreateByIdOrFullName(\"user1\"); \r\n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.DISCOVER);\n        \n        \r\n        try (ACLContext acl = ACL.as(user1)) {\n            assertFalse(\"Test framework issue: User1 should be unable to read the folder\", folder.hasPermission(Item.READ));\n            assertThat(\"user1 should be unable to see the origin\", fingerprint.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fingerprint._getUsages().size());\n        }\n    }\n","date":"2021-04-12 01:49:34","endLine":316,"groupId":"10448","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldBeUnableToSeeFingerprintsInUnreadableFolder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5d/1299fb2426f42551fe7afbac975ef4f9d7e853.src","preCode":"    public void shouldBeUnableToSeeFingerprintsInUnreadableFolder() throws Exception {\n        final SecuredMockFolder folder = rule.jenkins.createProject(SecuredMockFolder.class, \"folder\");\n        final FreeStyleProject project = createAndRunProjectWithPublisher(folder, \"project\", \"test.txt\");\n        final FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fingerprint = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.get(\"user1\"); \r\n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.DISCOVER);\n        \n        \r\n        try (ACLContext acl = ACL.as(user1)) {\n            assertFalse(\"Test framework issue: User1 should be unable to read the folder\", folder.hasPermission(Item.READ));\n            assertThat(\"user1 should be unable to see the origin\", fingerprint.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fingerprint._getUsages().size());\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/FingerprintTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"M"},{"authorDate":"2021-04-12 01:49:34","commitOrder":4,"curCode":"    public void commonUserShouldBeUnableToSeeReferencesOfDeletedJobs() throws Exception {\n        \r\n        FreeStyleProject project = createAndRunProjectWithPublisher(\"project\", \"test.txt\");\n        FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fp = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.getOrCreateByIdOrFullName(\"user1\");\n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.READ, Item.DISCOVER);\n        project.delete();\n\n        try (ACLContext acl = ACL.as(user1)) {\n            assertThat(\"user1 should be unable to see the origin\", fp.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fp._getUsages().size());\n        }\n    }\n","date":"2021-04-12 01:49:34","endLine":340,"groupId":"10448","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"commonUserShouldBeUnableToSeeReferencesOfDeletedJobs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5d/1299fb2426f42551fe7afbac975ef4f9d7e853.src","preCode":"    public void commonUserShouldBeUnableToSeeReferencesOfDeletedJobs() throws Exception {\n        \r\n        FreeStyleProject project = createAndRunProjectWithPublisher(\"project\", \"test.txt\");\n        FreeStyleBuild build = project.getLastBuild();\n        final Fingerprint fp = getFingerprint(build, \"test.txt\");\n        \n        \r\n        User user1 = User.get(\"user1\");  \n        setupProjectMatrixAuthStrategy(Jenkins.READ, Item.READ, Item.DISCOVER);\n        project.delete();\n\n        try (ACLContext acl = ACL.as(user1)) {\n            assertThat(\"user1 should be unable to see the origin\", fp.getOriginal(), nullValue());\n            assertEquals(\"No jobs should be visible to user1\", 0, fp._getUsages().size());\n        }\n    }\n","realPath":"test/src/test/java/hudson/model/FingerprintTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"M"}],"commitId":"096a1ca6fb92a98a80ca7f1e3589e237285d3aa7","commitMessage":"@@@Merge pull request #5389 from StefanSpieker/minor_deprecation_fixes\n\nfixed some deprecation warnings","date":"2021-04-12 01:49:34","modifiedFileCount":"23","status":"M","submitter":"Mark Waite"}]
