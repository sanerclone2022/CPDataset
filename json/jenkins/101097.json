[{"authorTime":"2012-11-19 09:59:10","codes":[{"authorDate":"2007-10-26 00:39:08","commitOrder":2,"curCode":"    public static <T> Iterable<T> reverse(final List<T> lst) {\n        return new Iterable<T>() {\n            public Iterator<T> iterator() {\n                final ListIterator<T> itr = lst.listIterator(lst.size());\n                return new Iterator<T>() {\n                    public boolean hasNext() {\n                        return itr.hasPrevious();\n                    }\n\n                    public T next() {\n                        return itr.previous();\n                    }\n\n                    public void remove() {\n                        itr.remove();\n                    }\n                };\n            }\n        };\n    }\n","date":"2007-10-26 00:39:08","endLine":77,"groupId":"459","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"reverse","params":"(finalList<T>lst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/dc/796e184bc6931e73d655b6b076a4b40e0b25a9.src","preCode":"    public static <T> Iterable<T> reverse(final List<T> lst) {\n        return new Iterable<T>() {\n            public Iterator<T> iterator() {\n                final ListIterator<T> itr = lst.listIterator(lst.size());\n                return new Iterator<T>() {\n                    public boolean hasNext() {\n                        return itr.hasPrevious();\n                    }\n\n                    public T next() {\n                        return itr.previous();\n                    }\n\n                    public void remove() {\n                        itr.remove();\n                    }\n                };\n            }\n        };\n    }\n","realPath":"core/src/main/java/hudson/util/Iterators.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"NB"},{"authorDate":"2012-11-19 09:59:10","commitOrder":2,"curCode":"    public static <T> Iterable<T> wrap(final Iterable<T> base) {\n        return new Iterable<T>() {\n            public Iterator<T> iterator() {\n                final Iterator<T> itr = base.iterator();\n                return new Iterator<T>() {\n                    public boolean hasNext() {\n                        return itr.hasNext();\n                    }\n\n                    public T next() {\n                        return itr.next();\n                    }\n\n                    public void remove() {\n                        itr.remove();\n                    }\n                };\n            }\n        };\n    }\n","date":"2012-11-19 09:59:10","endLine":213,"groupId":"2189","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"wrap","params":"(finalIterable<T>base)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/2b/5d88f74bdbad1378d9ee83581dbe2bfc7b046a.src","preCode":"    public static <T> Iterable<T> wrap(final Iterable<T> base) {\n        return new Iterable<T>() {\n            public Iterator<T> iterator() {\n                final Iterator<T> itr = base.iterator();\n                return new Iterator<T>() {\n                    public boolean hasNext() {\n                        return itr.hasNext();\n                    }\n\n                    public T next() {\n                        return itr.next();\n                    }\n\n                    public void remove() {\n                        itr.remove();\n                    }\n                };\n            }\n        };\n    }\n","realPath":"core/src/main/java/hudson/util/Iterators.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"B"}],"commitId":"d32f9e51137128d2d88636276e4cdb624537dc27","commitMessage":"@@@merged back the RC branch\n","date":"2012-11-19 09:59:10","modifiedFileCount":"8","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2020-10-08 17:43:51","codes":[{"authorDate":"2020-10-08 17:43:51","commitOrder":3,"curCode":"    public static <T> Iterable<T> reverse(final List<T> lst) {\n        return () -> {\n            final ListIterator<T> itr = lst.listIterator(lst.size());\n            return new Iterator<T>() {\n                public boolean hasNext() {\n                    return itr.hasPrevious();\n                }\n\n                public T next() {\n                    return itr.previous();\n                }\n\n                public void remove() {\n                    itr.remove();\n                }\n            };\n        };\n    }\n","date":"2020-10-08 17:43:51","endLine":188,"groupId":"459","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"reverse","params":"(finalList<T>lst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/31/a3210618c5cf04bda9e1209f0f16cdf3e711a8.src","preCode":"    public static <T> Iterable<T> reverse(final List<T> lst) {\n        return new Iterable<T>() {\n            public Iterator<T> iterator() {\n                final ListIterator<T> itr = lst.listIterator(lst.size());\n                return new Iterator<T>() {\n                    public boolean hasNext() {\n                        return itr.hasPrevious();\n                    }\n\n                    public T next() {\n                        return itr.previous();\n                    }\n\n                    public void remove() {\n                        itr.remove();\n                    }\n                };\n            }\n        };\n    }\n","realPath":"core/src/main/java/hudson/util/Iterators.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2020-10-08 17:43:51","commitOrder":3,"curCode":"    public static <T> Iterable<T> wrap(final Iterable<T> base) {\n        return () -> {\n            final Iterator<T> itr = base.iterator();\n            return new Iterator<T>() {\n                public boolean hasNext() {\n                    return itr.hasNext();\n                }\n\n                public T next() {\n                    return itr.next();\n                }\n\n                public void remove() {\n                    itr.remove();\n                }\n            };\n        };\n    }\n","date":"2020-10-08 17:43:51","endLine":213,"groupId":"2189","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"wrap","params":"(finalIterable<T>base)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/31/a3210618c5cf04bda9e1209f0f16cdf3e711a8.src","preCode":"    public static <T> Iterable<T> wrap(final Iterable<T> base) {\n        return new Iterable<T>() {\n            public Iterator<T> iterator() {\n                final Iterator<T> itr = base.iterator();\n                return new Iterator<T>() {\n                    public boolean hasNext() {\n                        return itr.hasNext();\n                    }\n\n                    public T next() {\n                        return itr.next();\n                    }\n\n                    public void remove() {\n                        itr.remove();\n                    }\n                };\n            }\n        };\n    }\n","realPath":"core/src/main/java/hudson/util/Iterators.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"715cdb15b3e855f8b6115aa02200860ed6caf49d","commitMessage":"@@@Merge pull request #4967 from Sangaibisi/master\n\nHacktoberfest: Java 8 migration. Replace statements with lambda","date":"2020-10-08 17:43:51","modifiedFileCount":"1","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2021-03-04 20:33:20","codes":[{"authorDate":"2021-03-04 20:33:20","commitOrder":4,"curCode":"    public static <T> Iterable<T> reverse(final List<T> lst) {\n        return () -> {\n            final ListIterator<T> itr = lst.listIterator(lst.size());\n            return new Iterator<T>() {\n                public boolean hasNext() {\n                    return itr.hasPrevious();\n                }\n\n                public T next() {\n                    return itr.previous();\n                }\n\n                @Override\n                public void remove() {\n                    itr.remove();\n                }\n            };\n        };\n    }\n","date":"2021-03-04 20:33:20","endLine":191,"groupId":"459","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"reverse","params":"(finalList<T>lst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3b/43bc4894f1423af69397d45736a7ac813f5070.src","preCode":"    public static <T> Iterable<T> reverse(final List<T> lst) {\n        return () -> {\n            final ListIterator<T> itr = lst.listIterator(lst.size());\n            return new Iterator<T>() {\n                public boolean hasNext() {\n                    return itr.hasPrevious();\n                }\n\n                public T next() {\n                    return itr.previous();\n                }\n\n                public void remove() {\n                    itr.remove();\n                }\n            };\n        };\n    }\n","realPath":"core/src/main/java/hudson/util/Iterators.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"},{"authorDate":"2021-03-04 20:33:20","commitOrder":4,"curCode":"    public static <T> Iterable<T> wrap(final Iterable<T> base) {\n        return () -> {\n            final Iterator<T> itr = base.iterator();\n            return new Iterator<T>() {\n                public boolean hasNext() {\n                    return itr.hasNext();\n                }\n\n                public T next() {\n                    return itr.next();\n                }\n\n                @Override\n                public void remove() {\n                    itr.remove();\n                }\n            };\n        };\n    }\n","date":"2021-03-04 20:33:20","endLine":217,"groupId":"2189","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"wrap","params":"(finalIterable<T>base)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3b/43bc4894f1423af69397d45736a7ac813f5070.src","preCode":"    public static <T> Iterable<T> wrap(final Iterable<T> base) {\n        return () -> {\n            final Iterator<T> itr = base.iterator();\n            return new Iterator<T>() {\n                public boolean hasNext() {\n                    return itr.hasNext();\n                }\n\n                public T next() {\n                    return itr.next();\n                }\n\n                public void remove() {\n                    itr.remove();\n                }\n            };\n        };\n    }\n","realPath":"core/src/main/java/hudson/util/Iterators.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"}],"commitId":"62fdb42c1e78968c8c885c490d09e577575ac043","commitMessage":"@@@Merge pull request #5323 from basil/override\n\nAdd missing @Override annotations","date":"2021-03-04 20:33:20","modifiedFileCount":"89","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2021-04-28 17:28:25","codes":[{"authorDate":"2021-04-28 17:28:25","commitOrder":5,"curCode":"    public static <T> Iterable<T> reverse(final List<T> lst) {\n        return () -> {\n            final ListIterator<T> itr = lst.listIterator(lst.size());\n            return new Iterator<T>() {\n                @Override\n                public boolean hasNext() {\n                    return itr.hasPrevious();\n                }\n\n                @Override\n                public T next() {\n                    return itr.previous();\n                }\n\n                @Override\n                public void remove() {\n                    itr.remove();\n                }\n            };\n        };\n    }\n","date":"2021-04-28 17:28:25","endLine":198,"groupId":"101097","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"reverse","params":"(finalList<T>lst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/88/9ba59254758e32cc4e9e8ac8a123c1e95300ef.src","preCode":"    public static <T> Iterable<T> reverse(final List<T> lst) {\n        return () -> {\n            final ListIterator<T> itr = lst.listIterator(lst.size());\n            return new Iterator<T>() {\n                public boolean hasNext() {\n                    return itr.hasPrevious();\n                }\n\n                public T next() {\n                    return itr.previous();\n                }\n\n                @Override\n                public void remove() {\n                    itr.remove();\n                }\n            };\n        };\n    }\n","realPath":"core/src/main/java/hudson/util/Iterators.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"},{"authorDate":"2021-04-28 17:28:25","commitOrder":5,"curCode":"    public static <T> Iterable<T> wrap(final Iterable<T> base) {\n        return () -> {\n            final Iterator<T> itr = base.iterator();\n            return new Iterator<T>() {\n                @Override\n                public boolean hasNext() {\n                    return itr.hasNext();\n                }\n\n                @Override\n                public T next() {\n                    return itr.next();\n                }\n\n                @Override\n                public void remove() {\n                    itr.remove();\n                }\n            };\n        };\n    }\n","date":"2021-04-28 17:28:25","endLine":226,"groupId":"101097","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"wrap","params":"(finalIterable<T>base)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/88/9ba59254758e32cc4e9e8ac8a123c1e95300ef.src","preCode":"    public static <T> Iterable<T> wrap(final Iterable<T> base) {\n        return () -> {\n            final Iterator<T> itr = base.iterator();\n            return new Iterator<T>() {\n                public boolean hasNext() {\n                    return itr.hasNext();\n                }\n\n                public T next() {\n                    return itr.next();\n                }\n\n                @Override\n                public void remove() {\n                    itr.remove();\n                }\n            };\n        };\n    }\n","realPath":"core/src/main/java/hudson/util/Iterators.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"}],"commitId":"f6378676b11288cc2525852b0a1a441d147e31d3","commitMessage":"@@@Add missing @Override annotations (#5430)\n\n","date":"2021-04-28 17:28:25","modifiedFileCount":"405","status":"M","submitter":"Basil Crow"}]
