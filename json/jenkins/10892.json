[{"authorTime":"2021-01-13 22:41:47","codes":[{"authorDate":"2021-01-13 22:41:47","commitOrder":1,"curCode":"    public void testOpenNoFollowLinks_NoFollowsLink_FileVF() throws Exception {\n        File ws = tmp.newFolder(\"ws\");\n        String childString = \"child\";\n        FileUtils.write(new File(ws, childString), childString);\n        String linkString = \"link\";\n        Util.createSymlink(ws, childString, linkString, TaskListener.NULL);\n\n        VirtualFile link = VirtualFile.forFile(ws).child(linkString);\n        try {\n            link.open(true);\n            fail(\"Should have not followed links.\");\n        } catch (IOException ioe) {\n            \r\n        }\n    }\n","date":"2021-01-13 22:41:47","endLine":1068,"groupId":"8993","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testOpenNoFollowLinks_NoFollowsLink_FileVF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d6/51a438db756ff8093f9c9feda8c330c4908d1c.src","preCode":"    public void testOpenNoFollowLinks_NoFollowsLink_FileVF() throws Exception {\n        File ws = tmp.newFolder(\"ws\");\n        String childString = \"child\";\n        FileUtils.write(new File(ws, childString), childString);\n        String linkString = \"link\";\n        Util.createSymlink(ws, childString, linkString, TaskListener.NULL);\n\n        VirtualFile link = VirtualFile.forFile(ws).child(linkString);\n        try {\n            link.open(true);\n            fail(\"Should have not followed links.\");\n        } catch (IOException ioe) {\n            \r\n        }\n    }\n","realPath":"core/src/test/java/jenkins/util/VirtualFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1054,"status":"B"},{"authorDate":"2021-01-13 22:41:47","commitOrder":1,"curCode":"    public void testOpenNoFollowLinks_NoFollowsLink_FilePathVF() throws Exception {\n        File ws = tmp.newFolder(\"ws\");\n        String childString = \"child\";\n        FileUtils.write(new File(ws, childString), childString);\n        String linkString = \"link\";\n        Util.createSymlink(ws, childString, linkString, TaskListener.NULL);\n\n        VirtualFile link = VirtualFile.forFilePath(new FilePath(ws)).child(linkString);\n        try {\n            link.open(true);\n            fail(\"Should have not followed links.\");\n        } catch (IOException ioe) {\n            \r\n        }\n    }\n","date":"2021-01-13 22:41:47","endLine":1123,"groupId":"1952","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOpenNoFollowLinks_NoFollowsLink_FilePathVF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d6/51a438db756ff8093f9c9feda8c330c4908d1c.src","preCode":"    public void testOpenNoFollowLinks_NoFollowsLink_FilePathVF() throws Exception {\n        File ws = tmp.newFolder(\"ws\");\n        String childString = \"child\";\n        FileUtils.write(new File(ws, childString), childString);\n        String linkString = \"link\";\n        Util.createSymlink(ws, childString, linkString, TaskListener.NULL);\n\n        VirtualFile link = VirtualFile.forFilePath(new FilePath(ws)).child(linkString);\n        try {\n            link.open(true);\n            fail(\"Should have not followed links.\");\n        } catch (IOException ioe) {\n            \r\n        }\n    }\n","realPath":"core/src/test/java/jenkins/util/VirtualFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1109,"status":"B"}],"commitId":"82688811faeb81a6286e72bf6edd569e40826c7f","commitMessage":"@@@Merge branch 'security-master' into master\n","date":"2021-01-13 22:41:47","modifiedFileCount":"21","status":"B","submitter":"Daniel Beck"},{"authorTime":"2021-05-26 03:51:14","codes":[{"authorDate":"2021-05-26 03:51:14","commitOrder":2,"curCode":"    public void testOpenNoFollowLinks_NoFollowsLink_FileVF() throws Exception {\n        File ws = tmp.newFolder(\"ws\");\n        String childString = \"child\";\n        FileUtils.write(new File(ws, childString), childString);\n        String linkString = \"link\";\n        Util.createSymlink(ws, childString, linkString, TaskListener.NULL);\n\n        VirtualFile link = VirtualFile.forFile(ws).child(linkString);\n        assertThrows(\"Should have not followed links\", IOException.class, () -> link.open(true));\n    }\n","date":"2021-05-26 03:51:14","endLine":1129,"groupId":"10892","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testOpenNoFollowLinks_NoFollowsLink_FileVF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e2/f4d81a450dfd2217cbbc79abdb990441f48437.src","preCode":"    public void testOpenNoFollowLinks_NoFollowsLink_FileVF() throws Exception {\n        File ws = tmp.newFolder(\"ws\");\n        String childString = \"child\";\n        FileUtils.write(new File(ws, childString), childString);\n        String linkString = \"link\";\n        Util.createSymlink(ws, childString, linkString, TaskListener.NULL);\n\n        VirtualFile link = VirtualFile.forFile(ws).child(linkString);\n        try {\n            link.open(true);\n            fail(\"Should have not followed links.\");\n        } catch (IOException ioe) {\n            \r\n        }\n    }\n","realPath":"core/src/test/java/jenkins/util/VirtualFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1120,"status":"M"},{"authorDate":"2021-05-26 03:51:14","commitOrder":2,"curCode":"    public void testOpenNoFollowLinks_NoFollowsLink_FilePathVF() throws Exception {\n        File ws = tmp.newFolder(\"ws\");\n        String childString = \"child\";\n        FileUtils.write(new File(ws, childString), childString);\n        String linkString = \"link\";\n        Util.createSymlink(ws, childString, linkString, TaskListener.NULL);\n\n        VirtualFile link = VirtualFile.forFilePath(new FilePath(ws)).child(linkString);\n        assertThrows(\"Should have not followed links\", IOException.class, () -> link.open(true));\n    }\n","date":"2021-05-26 03:51:14","endLine":1169,"groupId":"10892","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOpenNoFollowLinks_NoFollowsLink_FilePathVF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e2/f4d81a450dfd2217cbbc79abdb990441f48437.src","preCode":"    public void testOpenNoFollowLinks_NoFollowsLink_FilePathVF() throws Exception {\n        File ws = tmp.newFolder(\"ws\");\n        String childString = \"child\";\n        FileUtils.write(new File(ws, childString), childString);\n        String linkString = \"link\";\n        Util.createSymlink(ws, childString, linkString, TaskListener.NULL);\n\n        VirtualFile link = VirtualFile.forFilePath(new FilePath(ws)).child(linkString);\n        try {\n            link.open(true);\n            fail(\"Should have not followed links.\");\n        } catch (IOException ioe) {\n            \r\n        }\n    }\n","realPath":"core/src/test/java/jenkins/util/VirtualFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1160,"status":"M"}],"commitId":"7f382b576e05c58c2e25d9030bbf0aa2b8c08bba","commitMessage":"@@@Fix `CatchAndPrintStackTrace`.  `CatchFail`.  and `EmptyCatch` Error Prone violations in tests (#5522)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>","date":"2021-05-26 03:51:14","modifiedFileCount":"10","status":"M","submitter":"Basil Crow"}]
