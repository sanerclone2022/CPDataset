[{"authorTime":"2016-02-19 22:53:15","codes":[{"authorDate":"2016-02-19 22:53:15","commitOrder":1,"curCode":"    @Test public void deleteViewManyShouldFailIfMiddleViewDoesNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView1\", \"never_created\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No view named never_created inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created\"), nullValue());\n    }\n","date":"2016-02-19 22:53:15","endLine":202,"groupId":"9136","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteViewManyShouldFailIfMiddleViewDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/73/2270fcccc7c98b7fedd169341d4d406c2b66fe.src","preCode":"    @Test public void deleteViewManyShouldFailIfMiddleViewDoesNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView1\", \"never_created\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No view named never_created inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"B"},{"authorDate":"2016-02-19 22:53:15","commitOrder":1,"curCode":"    @Test public void deleteViewManyShouldFailIfMoreViewsDoNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView1\", \"never_created1\", \"never_created2\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No view named never_created1 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No view named never_created2 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created2\"), nullValue());\n    }\n","date":"2016-02-19 22:53:15","endLine":242,"groupId":"9138","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteViewManyShouldFailIfMoreViewsDoNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/73/2270fcccc7c98b7fedd169341d4d406c2b66fe.src","preCode":"    @Test public void deleteViewManyShouldFailIfMoreViewsDoNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView1\", \"never_created1\", \"never_created2\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No view named never_created1 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No view named never_created2 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created2\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"B"}],"commitId":"fe41dc89ab9801c9d57713f84e650788e172e115","commitMessage":"@@@Merge pull request #1997 from pjanouse/JENKINS-32273\n\n[JENKINS-32273] Unified an issue handling in CLI\n","date":"2016-02-19 22:53:15","modifiedFileCount":"50","status":"B","submitter":"Oliver Gond?a"},{"authorTime":"2016-10-15 23:34:12","codes":[{"authorDate":"2016-10-15 23:34:12","commitOrder":2,"curCode":"    @Test public void deleteViewManyShouldFailIfMiddleViewDoesNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView1\", \"never_created\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No view named never_created inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created\"), nullValue());\n    }\n","date":"2016-10-15 23:34:12","endLine":202,"groupId":"9136","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteViewManyShouldFailIfMiddleViewDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d9/ff9f708ac665b5f163863d2553a1eb81d4e806.src","preCode":"    @Test public void deleteViewManyShouldFailIfMiddleViewDoesNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView1\", \"never_created\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No view named never_created inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"},{"authorDate":"2016-10-15 23:34:12","commitOrder":2,"curCode":"    @Test public void deleteViewManyShouldFailIfMoreViewsDoNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView1\", \"never_created1\", \"never_created2\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No view named never_created1 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No view named never_created2 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created2\"), nullValue());\n    }\n","date":"2016-10-15 23:34:12","endLine":242,"groupId":"9138","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteViewManyShouldFailIfMoreViewsDoNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d9/ff9f708ac665b5f163863d2553a1eb81d4e806.src","preCode":"    @Test public void deleteViewManyShouldFailIfMoreViewsDoNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView1\", \"never_created1\", \"never_created2\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No view named never_created1 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No view named never_created2 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created2\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"}],"commitId":"b50034c9bffb704acfce0bc49d99855b689eace6","commitMessage":"@@@[FIXED JENKINS-38650] - Cleanup spelling in CLi commands + Javadoc updates (#2571)\n\n* [FIXED JENKINS-38650] - Cleanup spelling in CLi commands.\n\nAlso adds some javadoc and since definitions.\n\n* [JENKINS-38650] - Move common warning message to the constant\n\n* [JENKINS-38650] - DeleteViewCommand should also use the constant string\n\n* [JENKINS-38650] - Rename the constant in order to make the name more explicit\n","date":"2016-10-15 23:34:12","modifiedFileCount":"23","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2021-09-05 22:13:34","codes":[{"authorDate":"2021-09-05 22:13:34","commitOrder":3,"curCode":"    @Test public void deleteViewManyShouldFailIfMiddleViewDoesNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(View.READ, View.DELETE, Jenkins.READ).everywhere().toAuthenticated());\n        final CLICommandInvoker.Result result = command\n                .invokeWithArgs(\"aView1\", \"never_created\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No view named never_created inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created\"), nullValue());\n    }\n","date":"2021-09-05 22:13:34","endLine":202,"groupId":"10322","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"deleteViewManyShouldFailIfMiddleViewDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/7a/59525f5564dcad78e5f050fd8cc14547a7c1ff.src","preCode":"    @Test public void deleteViewManyShouldFailIfMiddleViewDoesNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView1\", \"never_created\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created: No view named never_created inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"},{"authorDate":"2021-09-05 22:13:34","commitOrder":3,"curCode":"    @Test public void deleteViewManyShouldFailIfMoreViewsDoNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(View.READ, View.DELETE, Jenkins.READ).everywhere().toAuthenticated());\n        final CLICommandInvoker.Result result = command\n                .invokeWithArgs(\"aView1\", \"never_created1\", \"never_created2\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No view named never_created1 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No view named never_created2 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created2\"), nullValue());\n    }\n","date":"2021-09-05 22:13:34","endLine":242,"groupId":"10322","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"deleteViewManyShouldFailIfMoreViewsDoNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/7a/59525f5564dcad78e5f050fd8cc14547a7c1ff.src","preCode":"    @Test public void deleteViewManyShouldFailIfMoreViewsDoNotExist() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView1\"));\n        j.jenkins.addView(new ListView(\"aView2\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView1\", \"never_created1\", \"never_created2\", \"aView2\");\n\n        assertThat(result, failedWith(5));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"never_created1: No view named never_created1 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"never_created2: No view named never_created2 inside view Jenkins\"));\n        assertThat(result.stderr(), containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT));\n\n        assertThat(j.jenkins.getView(\"aView1\"), nullValue());\n        assertThat(j.jenkins.getView(\"aView2\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created1\"), nullValue());\n        assertThat(j.jenkins.getView(\"never_created2\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"}],"commitId":"d7604cfb08cd82449e0d79f25432a196fa04bc2a","commitMessage":"@@@Merge pull request #5701 from jglick/anonymous-to-lambda\n\nReplace some anonymous classes with lambdas","date":"2021-09-05 22:13:34","modifiedFileCount":"32","status":"M","submitter":"Raihaan Shouhell"}]
