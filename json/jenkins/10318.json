[{"authorTime":"2014-01-30 06:21:11","codes":[{"authorDate":"2015-06-09 18:55:52","commitOrder":3,"curCode":"    @Test public void deleteViewShouldFailWithoutViewReadPermission() throws IOException {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView\")\n                ;\n\n        assertThat(result, failedWith(-1));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the View/Read permission\"));\n    }\n","date":"2015-06-09 18:55:52","endLine":87,"groupId":"7788","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteViewShouldFailWithoutViewReadPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c3/938b51be6e0df0273b52d9836d83f5cb97496f.src","preCode":"    @Test public void deleteViewShouldFailWithoutViewReadPermission() throws IOException {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView\")\n                ;\n\n        assertThat(result, failedWith(-1));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the View/Read permission\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"},{"authorDate":"2014-01-30 06:21:11","commitOrder":3,"curCode":"    @Test public void deleteViewShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\"), nullValue());\n    }\n","date":"2014-01-30 06:31:49","endLine":84,"groupId":"7795","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteViewShouldSucceed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/dc/b812713046ddaec5c15bc78f3be6f036a5c65b.src","preCode":"    @Test public void deleteViewShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"NB"}],"commitId":"0e846fca9fb850ffc242bb016c6e9e16aa3a1626","commitMessage":"@@@Merge pull request #1704 from pjanouse/JENKINS-28041\n\n[FIXED JENKINS-28041] - Allow delete-* CLI commands to operate on multiple arguments\n","date":"2015-06-09 18:55:52","modifiedFileCount":"5","status":"M","submitter":"Oliver Gond?a"},{"authorTime":"2014-01-30 06:21:11","codes":[{"authorDate":"2016-02-19 22:53:15","commitOrder":4,"curCode":"    @Test public void deleteViewShouldFailWithoutViewReadPermission() throws IOException {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView\")\n                ;\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the View/Read permission\"));\n    }\n","date":"2016-02-19 22:53:15","endLine":87,"groupId":"7788","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteViewShouldFailWithoutViewReadPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/73/2270fcccc7c98b7fedd169341d4d406c2b66fe.src","preCode":"    @Test public void deleteViewShouldFailWithoutViewReadPermission() throws IOException {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView\")\n                ;\n\n        assertThat(result, failedWith(-1));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the View/Read permission\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2014-01-30 06:21:11","commitOrder":4,"curCode":"    @Test public void deleteViewShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\"), nullValue());\n    }\n","date":"2014-01-30 06:31:49","endLine":84,"groupId":"7795","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteViewShouldSucceed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/dc/b812713046ddaec5c15bc78f3be6f036a5c65b.src","preCode":"    @Test public void deleteViewShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"}],"commitId":"fe41dc89ab9801c9d57713f84e650788e172e115","commitMessage":"@@@Merge pull request #1997 from pjanouse/JENKINS-32273\n\n[JENKINS-32273] Unified an issue handling in CLI\n","date":"2016-02-19 22:53:15","modifiedFileCount":"50","status":"M","submitter":"Oliver Gond?a"},{"authorTime":"2021-09-05 22:13:34","codes":[{"authorDate":"2021-09-05 22:13:34","commitOrder":5,"curCode":"    @Test public void deleteViewShouldFailWithoutViewReadPermission() throws IOException {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(View.DELETE, Jenkins.READ).everywhere().toAuthenticated());\n        final CLICommandInvoker.Result result = command\n                .invokeWithArgs(\"aView\")\n                ;\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the View/Read permission\"));\n    }\n","date":"2021-09-05 22:13:34","endLine":89,"groupId":"10318","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"deleteViewShouldFailWithoutViewReadPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/7a/59525f5564dcad78e5f050fd8cc14547a7c1ff.src","preCode":"    @Test public void deleteViewShouldFailWithoutViewReadPermission() throws IOException {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView\")\n                ;\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the View/Read permission\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2021-09-05 22:13:34","commitOrder":5,"curCode":"    @Test public void deleteViewShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(View.READ, View.DELETE, Jenkins.READ).everywhere().toAuthenticated());\n        final CLICommandInvoker.Result result = command\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\"), nullValue());\n    }\n","date":"2021-09-05 22:13:34","endLine":102,"groupId":"10318","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"deleteViewShouldSucceed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/7a/59525f5564dcad78e5f050fd8cc14547a7c1ff.src","preCode":"    @Test public void deleteViewShouldSucceed() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.DELETE, Jenkins.READ)\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n        assertThat(j.jenkins.getView(\"aView\"), nullValue());\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"d7604cfb08cd82449e0d79f25432a196fa04bc2a","commitMessage":"@@@Merge pull request #5701 from jglick/anonymous-to-lambda\n\nReplace some anonymous classes with lambdas","date":"2021-09-05 22:13:34","modifiedFileCount":"32","status":"M","submitter":"Raihaan Shouhell"}]
