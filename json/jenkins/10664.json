[{"authorTime":"2019-01-04 01:08:42","codes":[{"authorDate":"2019-01-04 01:08:42","commitOrder":1,"curCode":"    public void initialSeedIsSaved() throws Exception {\n        AtomicReference<String> initialSeedRef = new AtomicReference<>();\n\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                rr.j.jenkins.setCrumbIssuer(null);\n                rr.j.jenkins.save();\n\n                User alice = User.getById(\"alice\", true);\n                alice.save();\n                initialSeedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n            }\n        });\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                User alice = User.getById(\"alice\", false);\n                String initialSeed = alice.getProperty(UserSeedProperty.class).getSeed();\n                assertEquals(initialSeed, initialSeedRef.get());\n            }\n        });\n    }\n","date":"2019-01-04 01:08:42","endLine":74,"groupId":"5836","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"initialSeedIsSaved","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/55/34257dabbcd62dc15f4674c15e40ba858e5f33.src","preCode":"    public void initialSeedIsSaved() throws Exception {\n        AtomicReference<String> initialSeedRef = new AtomicReference<>();\n\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                rr.j.jenkins.setCrumbIssuer(null);\n                rr.j.jenkins.save();\n\n                User alice = User.getById(\"alice\", true);\n                alice.save();\n                initialSeedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n            }\n        });\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                User alice = User.getById(\"alice\", false);\n                String initialSeed = alice.getProperty(UserSeedProperty.class).getSeed();\n                assertEquals(initialSeed, initialSeedRef.get());\n            }\n        });\n    }\n","realPath":"test/src/test/java/jenkins/security/seed/UserSeedPropertyRestartTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2019-01-04 01:08:42","commitOrder":1,"curCode":"    public void renewSeedSavesTheChange() throws Exception {\n        AtomicReference<String> initialSeedRef = new AtomicReference<>();\n        AtomicReference<String> seedRef = new AtomicReference<>();\n\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                rr.j.jenkins.setCrumbIssuer(null);\n                rr.j.jenkins.save();\n\n                User alice = User.getById(\"alice\", true);\n                alice.save();\n                initialSeedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n\n                requestRenewSeedForUser(alice);\n\n                seedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n                assertNotEquals(initialSeedRef.get(), seedRef.get());\n            }\n        });\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                User alice = User.getById(\"alice\", false);\n                assertNotNull(alice);\n                String currentSeed = alice.getProperty(UserSeedProperty.class).getSeed();\n                assertEquals(currentSeed, seedRef.get());\n            }\n        });\n    }\n","date":"2019-01-04 01:08:42","endLine":107,"groupId":"5836","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"renewSeedSavesTheChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/55/34257dabbcd62dc15f4674c15e40ba858e5f33.src","preCode":"    public void renewSeedSavesTheChange() throws Exception {\n        AtomicReference<String> initialSeedRef = new AtomicReference<>();\n        AtomicReference<String> seedRef = new AtomicReference<>();\n\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                rr.j.jenkins.setCrumbIssuer(null);\n                rr.j.jenkins.save();\n\n                User alice = User.getById(\"alice\", true);\n                alice.save();\n                initialSeedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n\n                requestRenewSeedForUser(alice);\n\n                seedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n                assertNotEquals(initialSeedRef.get(), seedRef.get());\n            }\n        });\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                User alice = User.getById(\"alice\", false);\n                assertNotNull(alice);\n                String currentSeed = alice.getProperty(UserSeedProperty.class).getSeed();\n                assertEquals(currentSeed, seedRef.get());\n            }\n        });\n    }\n","realPath":"test/src/test/java/jenkins/security/seed/UserSeedPropertyRestartTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"}],"commitId":"e07228ec75065852632b0c3d3094a5721973fe8a","commitMessage":"@@@Merge branch 'security-stable-2.150' into security-master\n","date":"2019-01-04 01:08:42","modifiedFileCount":"8","status":"B","submitter":"Jeff Thompson"},{"authorTime":"2021-06-03 15:27:51","codes":[{"authorDate":"2021-06-03 15:27:51","commitOrder":2,"curCode":"    public void initialSeedIsSaved() throws Throwable {\n        AtomicReference<String> initialSeedRef = new AtomicReference<>();\n\n        sessions.then(j -> {\n                j.jenkins.setCrumbIssuer(null);\n                j.jenkins.save();\n\n                User alice = User.getById(\"alice\", true);\n                alice.save();\n                initialSeedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n        });\n        sessions.then(j -> {\n                User alice = User.getById(\"alice\", false);\n                String initialSeed = alice.getProperty(UserSeedProperty.class).getSeed();\n                assertEquals(initialSeed, initialSeedRef.get());\n        });\n    }\n","date":"2021-06-03 15:27:51","endLine":67,"groupId":"10664","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"initialSeedIsSaved","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b4/287ac4c40c5e7fee559a19da2cdc82478f61d8.src","preCode":"    public void initialSeedIsSaved() throws Exception {\n        AtomicReference<String> initialSeedRef = new AtomicReference<>();\n\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                rr.j.jenkins.setCrumbIssuer(null);\n                rr.j.jenkins.save();\n\n                User alice = User.getById(\"alice\", true);\n                alice.save();\n                initialSeedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n            }\n        });\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                User alice = User.getById(\"alice\", false);\n                String initialSeed = alice.getProperty(UserSeedProperty.class).getSeed();\n                assertEquals(initialSeed, initialSeedRef.get());\n            }\n        });\n    }\n","realPath":"test/src/test/java/jenkins/security/seed/UserSeedPropertyRestartTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2021-06-03 15:27:51","commitOrder":2,"curCode":"    public void renewSeedSavesTheChange() throws Throwable {\n        AtomicReference<String> initialSeedRef = new AtomicReference<>();\n        AtomicReference<String> seedRef = new AtomicReference<>();\n\n        sessions.then(j -> {\n                j.jenkins.setCrumbIssuer(null);\n                j.jenkins.save();\n\n                User alice = User.getById(\"alice\", true);\n                alice.save();\n                initialSeedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n\n                requestRenewSeedForUser(alice, j);\n\n                seedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n                assertNotEquals(initialSeedRef.get(), seedRef.get());\n        });\n        sessions.then(j -> {\n                User alice = User.getById(\"alice\", false);\n                assertNotNull(alice);\n                String currentSeed = alice.getProperty(UserSeedProperty.class).getSeed();\n                assertEquals(currentSeed, seedRef.get());\n        });\n    }\n","date":"2021-06-03 15:27:51","endLine":94,"groupId":"10664","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"renewSeedSavesTheChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b4/287ac4c40c5e7fee559a19da2cdc82478f61d8.src","preCode":"    public void renewSeedSavesTheChange() throws Exception {\n        AtomicReference<String> initialSeedRef = new AtomicReference<>();\n        AtomicReference<String> seedRef = new AtomicReference<>();\n\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                rr.j.jenkins.setCrumbIssuer(null);\n                rr.j.jenkins.save();\n\n                User alice = User.getById(\"alice\", true);\n                alice.save();\n                initialSeedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n\n                requestRenewSeedForUser(alice);\n\n                seedRef.set(alice.getProperty(UserSeedProperty.class).getSeed());\n                assertNotEquals(initialSeedRef.get(), seedRef.get());\n            }\n        });\n        rr.addStep(new Statement() {\n            @Override\n            public void evaluate() throws Throwable {\n                User alice = User.getById(\"alice\", false);\n                assertNotNull(alice);\n                String currentSeed = alice.getProperty(UserSeedProperty.class).getSeed();\n                assertEquals(currentSeed, seedRef.get());\n            }\n        });\n    }\n","realPath":"test/src/test/java/jenkins/security/seed/UserSeedPropertyRestartTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"5e9b451a11926e5b42d4a94612ca566de058f494","commitMessage":"@@@Merge pull request #5544 from basil/JenkinsSessionRule\n\nMigrate from `RestartableJenkinsRule` to `JenkinsSessionRule`","date":"2021-06-03 15:27:51","modifiedFileCount":"8","status":"M","submitter":"Oleg Nenashev"}]
