[{"authorTime":"2015-10-13 05:13:09","codes":[{"authorDate":"2015-10-13 05:13:09","commitOrder":3,"curCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        ACL.impersonate(u.impersonate(), new Runnable() {\n            @Override\n            public void run() {\n                assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n            }\n        });\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(new Callable<User>() {\n            public User call() throws Exception {\n                return User.current();\n            }\n        }));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","date":"2015-10-13 05:13:09","endLine":94,"groupId":"3376","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"basics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b9/f6111c3e9cc4848b12ed7693216bc93f37ff83.src","preCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        ACL.impersonate(u.impersonate(), new Runnable() {\n            @Override\n            public void run() {\n                assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n            }\n        });\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(new Callable<User>() {\n            public User call() throws Exception {\n                return User.current();\n            }\n        }));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"MB"},{"authorDate":"2015-10-13 05:13:09","commitOrder":3,"curCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","date":"2015-10-13 05:13:09","endLine":199,"groupId":"8503","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"adminsShouldBeUnableToSeeTokensByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b9/f6111c3e9cc4848b12ed7693216bc93f37ff83.src","preCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"B"}],"commitId":"4c37ee59e7a251c5617d4952f5b09edab8e8c98c","commitMessage":"@@@Merge branch 'security-stable-1.625' into security-master\n\nConflicts:\n\ttest/src/test/java/jenkins/security/ApiTokenPropertyTest.java\n","date":"2015-10-13 05:13:09","modifiedFileCount":"2","status":"M","submitter":"Jesse Glick"},{"authorTime":"2015-10-13 05:13:09","codes":[{"authorDate":"2016-07-12 04:28:56","commitOrder":4,"curCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        try (ACLContext _ = ACL.as(u)) {\n            assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n        }\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(new Callable<User>() {\n            public User call() throws Exception {\n                return User.current();\n            }\n        }));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","date":"2016-07-12 04:28:56","endLine":92,"groupId":"2433","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"basics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/24/b104e7a8b04c18c6c397105d165876f3d5b268.src","preCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        ACL.impersonate(u.impersonate(), new Runnable() {\n            @Override\n            public void run() {\n                assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n            }\n        });\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(new Callable<User>() {\n            public User call() throws Exception {\n                return User.current();\n            }\n        }));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2015-10-13 05:13:09","commitOrder":4,"curCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","date":"2015-10-13 05:13:09","endLine":199,"groupId":"8503","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"adminsShouldBeUnableToSeeTokensByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b9/f6111c3e9cc4848b12ed7693216bc93f37ff83.src","preCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"N"}],"commitId":"bb4eb45fb3d90cd1d6f8dd90781c94a50aaf4702","commitMessage":"@@@Merge pull request #2437 from stephenc/jenkins-36494\n\n[FIXED JENKINS-36494] Switch to a try with resources form of impersonation","date":"2016-07-12 04:28:56","modifiedFileCount":"11","status":"M","submitter":"Stephen Connolly"},{"authorTime":"2015-10-13 05:13:09","codes":[{"authorDate":"2018-06-24 05:20:44","commitOrder":5,"curCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.getById(\"foo\", true);\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        try (ACLContext _ = ACL.as(u)) {\n            assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n        }\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(new Callable<User>() {\n            public User call() throws Exception {\n                return User.current();\n            }\n        }));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","date":"2018-06-24 05:20:44","endLine":92,"groupId":"2433","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"basics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/47/e750f62c4892a6b1c0c5a50cdcf2c3a663c789.src","preCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        try (ACLContext _ = ACL.as(u)) {\n            assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n        }\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(new Callable<User>() {\n            public User call() throws Exception {\n                return User.current();\n            }\n        }));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2015-10-13 05:13:09","commitOrder":5,"curCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","date":"2015-10-13 05:13:09","endLine":199,"groupId":"8503","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"adminsShouldBeUnableToSeeTokensByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b9/f6111c3e9cc4848b12ed7693216bc93f37ff83.src","preCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"N"}],"commitId":"fd1ec1d125b28f0c069e050ac1abd1a20e09feef","commitMessage":"@@@Merge pull request #3271 from Wadeck/JENKINS-32442-32776_HASHED_TOKEN\n\n[JENKINS-32442][JENKINS-32776] New API Token system","date":"2018-06-24 05:20:44","modifiedFileCount":"19","status":"M","submitter":"Daniel Beck"},{"authorTime":"2015-10-13 05:13:09","codes":[{"authorDate":"2018-10-08 14:16:41","commitOrder":6,"curCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.getById(\"foo\", true);\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        try (ACLContext acl = ACL.as(u)) {\n            assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n        }\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(new Callable<User>() {\n            public User call() throws Exception {\n                return User.current();\n            }\n        }));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","date":"2018-10-08 14:16:41","endLine":92,"groupId":"2433","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"basics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e9/a4f16b24796141f5ea4e0224588ea0b15dfac8.src","preCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.getById(\"foo\", true);\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        try (ACLContext _ = ACL.as(u)) {\n            assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n        }\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(new Callable<User>() {\n            public User call() throws Exception {\n                return User.current();\n            }\n        }));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2015-10-13 05:13:09","commitOrder":6,"curCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","date":"2015-10-13 05:13:09","endLine":199,"groupId":"8503","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"adminsShouldBeUnableToSeeTokensByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b9/f6111c3e9cc4848b12ed7693216bc93f37ff83.src","preCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"N"}],"commitId":"ef5e4a01455f69a02ab589ecdd1c494fe5a3e3b7","commitMessage":"@@@Merge commit 'edd303e91747380043723c1b4c7dc843b91afa51' into security-master\n","date":"2018-10-08 14:16:41","modifiedFileCount":"63","status":"M","submitter":"Daniel Beck"},{"authorTime":"2015-10-13 05:13:09","codes":[{"authorDate":"2021-01-03 01:20:57","commitOrder":7,"curCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.getById(\"foo\", true);\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        try (ACLContext acl = ACL.as(u)) {\n            assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n        }\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(User::current));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","date":"2021-01-03 01:20:57","endLine":96,"groupId":"6113","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"basics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ee/e20517fe6de510537577f21ea29ed68f7c013e.src","preCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.getById(\"foo\", true);\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        try (ACLContext acl = ACL.as(u)) {\n            assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n        }\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(new Callable<User>() {\n            public User call() throws Exception {\n                return User.current();\n            }\n        }));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2015-10-13 05:13:09","commitOrder":7,"curCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","date":"2015-10-13 05:13:09","endLine":199,"groupId":"8503","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"adminsShouldBeUnableToSeeTokensByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b9/f6111c3e9cc4848b12ed7693216bc93f37ff83.src","preCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"N"}],"commitId":"a9ee90e7fc931445956616ffae4ea3c5ababe41d","commitMessage":"@@@Merge pull request #5134 from basil/improvements\n\nCode cleanup","date":"2021-01-03 01:20:57","modifiedFileCount":"88","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2021-04-12 01:49:34","codes":[{"authorDate":"2021-01-03 01:20:57","commitOrder":8,"curCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.getById(\"foo\", true);\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        try (ACLContext acl = ACL.as(u)) {\n            assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n        }\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(User::current));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","date":"2021-01-03 01:20:57","endLine":96,"groupId":"10681","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"basics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ee/e20517fe6de510537577f21ea29ed68f7c013e.src","preCode":"    public void basics() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.getById(\"foo\", true);\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n\n        \r\n        try (ACLContext acl = ACL.as(u)) {\n            assertEquals(\"User is unable to get its own token\", token, t.getApiToken());\n        }\n\n        \r\n        WebClient wc = createClientForUser(\"foo\");\n        assertEquals(u, wc.executeOnServer(User::current));\n        \n        \r\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(token, form.getInputByName(\"_.apiToken\").getValueAttribute());\n\n        \r\n        j.submit(form);\n        assertSame(t, u.getProperty(ApiTokenProperty.class));\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"},{"authorDate":"2021-04-12 01:49:34","commitOrder":8,"curCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.getOrCreateByIdOrFullName(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","date":"2021-04-12 01:49:34","endLine":134,"groupId":"10681","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"adminsShouldBeUnableToSeeTokensByDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/50/f758c7cdf18a9837b689a86a982cb2535fb599.src","preCode":"    public void adminsShouldBeUnableToSeeTokensByDefault() throws Exception {\n        j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n        User u = User.get(\"foo\");\n        final ApiTokenProperty t = u.getProperty(ApiTokenProperty.class);\n        final String token = t.getApiToken();\n        \n        \r\n        WebClient wc = createClientForUser(\"bar\");\n        HtmlPage config = wc.goTo(u.getUrl() + \"/configure\");\n        HtmlForm form = config.getFormByName(\"config\");\n        assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(), form.getInputByName(\"_.apiToken\").getValueAttribute());\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiTokenPropertyTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"096a1ca6fb92a98a80ca7f1e3589e237285d3aa7","commitMessage":"@@@Merge pull request #5389 from StefanSpieker/minor_deprecation_fixes\n\nfixed some deprecation warnings","date":"2021-04-12 01:49:34","modifiedFileCount":"23","status":"M","submitter":"Mark Waite"}]
