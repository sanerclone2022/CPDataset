[{"authorTime":"2013-07-17 12:56:01","codes":[{"authorDate":"2013-07-17 12:56:01","commitOrder":1,"curCode":"    @Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.ADMINISTER)\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(\"No output expected\", result.stdout(), isEmptyString());\n        assertThat(\"Command is expected to fail\", result.returnCode(), equalTo(-1));\n    }\n","date":"2013-07-17 12:56:01","endLine":90,"groupId":"6960","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getNodeShouldFailIfNodeDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e6/d0952013163ceeea7485309bc411db1d9e9d18.src","preCode":"    @Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.ADMINISTER)\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(\"No output expected\", result.stdout(), isEmptyString());\n        assertThat(\"Command is expected to fail\", result.returnCode(), equalTo(-1));\n    }\n","realPath":"test/src/test/java/hudson/cli/GetNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2013-07-17 12:56:01","commitOrder":1,"curCode":"    @Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.ADMINISTER)\n                .withStdin(getClass().getResourceAsStream(\"node.xml\"))\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(\"No output expected\", result.stdout(), isEmptyString());\n        assertThat(\"Command is expected to fail\", result.returnCode(), equalTo(-1));\n    }\n","date":"2013-07-17 12:56:01","endLine":97,"groupId":"6960","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"updateNodeShouldFailIfNodeDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/9d/ff1fc335d9702c5f7288bfcca7075687e0bc84.src","preCode":"    @Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.ADMINISTER)\n                .withStdin(getClass().getResourceAsStream(\"node.xml\"))\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(\"No output expected\", result.stdout(), isEmptyString());\n        assertThat(\"Command is expected to fail\", result.returnCode(), equalTo(-1));\n    }\n","realPath":"test/src/test/java/hudson/cli/UpdateNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"681769a9df146038b3b44ae739e9baf7f8c2728c","commitMessage":"@@@Merge pull request #803 from olivergondza/node-cli\n\n[FIXED JENKINS-18282] - Manipulate nodes via CLI","date":"2013-07-17 12:56:01","modifiedFileCount":"1","status":"B","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2013-10-08 11:38:34","codes":[{"authorDate":"2013-10-08 11:38:34","commitOrder":2,"curCode":"    @Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.EXTENDED_READ, Jenkins.READ)\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(\"No output expected\", result.stdout(), isEmptyString());\n        assertThat(\"Command is expected to fail\", result.returnCode(), equalTo(-1));\n    }\n","date":"2013-10-08 11:38:34","endLine":90,"groupId":"6960","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getNodeShouldFailIfNodeDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c2/40977f65a1f3dd8d6a986068e4826f0330fcc8.src","preCode":"    @Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.ADMINISTER)\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(\"No output expected\", result.stdout(), isEmptyString());\n        assertThat(\"Command is expected to fail\", result.returnCode(), equalTo(-1));\n    }\n","realPath":"test/src/test/java/hudson/cli/GetNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2013-10-08 11:38:34","commitOrder":2,"curCode":"    @Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.CONFIGURE, Jenkins.READ)\n                .withStdin(Computer.class.getResourceAsStream(\"node.xml\"))\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(\"No output expected\", result.stdout(), isEmptyString());\n        assertThat(\"Command is expected to fail\", result.returnCode(), equalTo(-1));\n    }\n","date":"2013-10-08 11:38:34","endLine":97,"groupId":"6960","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"updateNodeShouldFailIfNodeDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/53/bad693450f47541079b920948b1efdc0f565d9.src","preCode":"    @Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.ADMINISTER)\n                .withStdin(getClass().getResourceAsStream(\"node.xml\"))\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(\"No output expected\", result.stdout(), isEmptyString());\n        assertThat(\"Command is expected to fail\", result.returnCode(), equalTo(-1));\n    }\n","realPath":"test/src/test/java/hudson/cli/UpdateNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"8c4288ca59568e9c8d94022de7871e472f019a2f","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into executor-ondemand\n","date":"2013-10-08 11:38:34","modifiedFileCount":"67","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2014-01-30 06:21:11","codes":[{"authorDate":"2014-01-30 06:21:11","commitOrder":3,"curCode":"    @Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.EXTENDED_READ, Jenkins.READ)\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(result, failedWith(-1));\n        assertThat(result, hasNoStandardOutput());\n    }\n","date":"2014-01-30 06:31:49","endLine":94,"groupId":"6960","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getNodeShouldFailIfNodeDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b8/0b4fb1f35bfafe4c6d7721f02be29d0c990ec1.src","preCode":"    @Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.EXTENDED_READ, Jenkins.READ)\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(\"No output expected\", result.stdout(), isEmptyString());\n        assertThat(\"Command is expected to fail\", result.returnCode(), equalTo(-1));\n    }\n","realPath":"test/src/test/java/hudson/cli/GetNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2014-01-30 06:21:11","commitOrder":3,"curCode":"    @Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.CONFIGURE, Jenkins.READ)\n                .withStdin(Computer.class.getResourceAsStream(\"node.xml\"))\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(result, failedWith(-1));\n        assertThat(result, hasNoStandardOutput());\n    }\n","date":"2014-01-30 06:31:49","endLine":98,"groupId":"6960","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"updateNodeShouldFailIfNodeDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b4/a977dbe958ceec179e134b10a6d9724d18ae15.src","preCode":"    @Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.CONFIGURE, Jenkins.READ)\n                .withStdin(Computer.class.getResourceAsStream(\"node.xml\"))\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(\"No output expected\", result.stdout(), isEmptyString());\n        assertThat(\"Command is expected to fail\", result.returnCode(), equalTo(-1));\n    }\n","realPath":"test/src/test/java/hudson/cli/UpdateNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"3aa812fe1fc0c2b4b9be3c75c17670837266a358","commitMessage":"@@@Refactor CLI tests\n","date":"2014-01-30 06:31:49","modifiedFileCount":"9","status":"M","submitter":"Oliver Gond?a"},{"authorTime":"2016-02-19 22:53:15","codes":[{"authorDate":"2016-02-19 22:53:15","commitOrder":4,"curCode":"    @Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.EXTENDED_READ, Jenkins.READ)\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"ERROR: No such node 'MySlave'\"));\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n    }\n","date":"2016-02-19 22:53:15","endLine":92,"groupId":"6960","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getNodeShouldFailIfNodeDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/eb/20a1162cd7f028ee04799fb9df81fe190d7e4a.src","preCode":"    @Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.EXTENDED_READ, Jenkins.READ)\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(result, failedWith(-1));\n        assertThat(result, hasNoStandardOutput());\n    }\n","realPath":"test/src/test/java/hudson/cli/GetNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2016-02-19 22:53:15","commitOrder":4,"curCode":"    @Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.CONFIGURE, Jenkins.READ)\n                .withStdin(Computer.class.getResourceAsStream(\"node.xml\"))\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"ERROR: No such node 'MySlave'\"));\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n    }\n","date":"2016-02-19 22:53:15","endLine":98,"groupId":"6960","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"updateNodeShouldFailIfNodeDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ca/c9dda8abc332a5c18c9890b06426065ddf7fa4.src","preCode":"    @Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.CONFIGURE, Jenkins.READ)\n                .withStdin(Computer.class.getResourceAsStream(\"node.xml\"))\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"No such node 'MySlave'\"));\n        assertThat(result, failedWith(-1));\n        assertThat(result, hasNoStandardOutput());\n    }\n","realPath":"test/src/test/java/hudson/cli/UpdateNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"fe41dc89ab9801c9d57713f84e650788e172e115","commitMessage":"@@@Merge pull request #1997 from pjanouse/JENKINS-32273\n\n[JENKINS-32273] Unified an issue handling in CLI\n","date":"2016-02-19 22:53:15","modifiedFileCount":"50","status":"M","submitter":"Oliver Gond?a"},{"authorTime":"2021-06-22 13:30:16","codes":[{"authorDate":"2021-06-22 13:30:16","commitOrder":5,"curCode":"    @Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.EXTENDED_READ, Jenkins.READ)\n                .invokeWithArgs(\"MyAgent\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"ERROR: No such node 'MyAgent'\"));\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n    }\n","date":"2021-06-22 13:30:16","endLine":96,"groupId":"10134","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getNodeShouldFailIfNodeDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/45/adbac47a391bd563b1e89a13c061e1a22c9914.src","preCode":"    @Test public void getNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.EXTENDED_READ, Jenkins.READ)\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"ERROR: No such node 'MySlave'\"));\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n    }\n","realPath":"test/src/test/java/hudson/cli/GetNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2021-06-22 13:30:16","commitOrder":5,"curCode":"    @Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.CONFIGURE, Jenkins.READ)\n                .withStdin(Computer.class.getResourceAsStream(\"node.xml\"))\n                .invokeWithArgs(\"MyAgent\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"ERROR: No such node 'MyAgent'\"));\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n    }\n","date":"2021-06-22 13:30:16","endLine":103,"groupId":"10134","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"updateNodeShouldFailIfNodeDoesNotExist","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/bf/d956a5009f95de9538f25680dca823d4f76311.src","preCode":"    @Test public void updateNodeShouldFailIfNodeDoesNotExist() throws Exception {\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Computer.CONFIGURE, Jenkins.READ)\n                .withStdin(Computer.class.getResourceAsStream(\"node.xml\"))\n                .invokeWithArgs(\"MySlave\")\n        ;\n\n        assertThat(result.stderr(), containsString(\"ERROR: No such node 'MySlave'\"));\n        assertThat(result, failedWith(3));\n        assertThat(result, hasNoStandardOutput());\n    }\n","realPath":"test/src/test/java/hudson/cli/UpdateNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"f48c5f552f72485658c1c98482b42ae42ed1ee8c","commitMessage":"@@@Merge pull request #5582 from daniel-beck/terminology-internal\n\nTerminology cleanup: Internal and Javadoc changes","date":"2021-06-22 13:30:16","modifiedFileCount":"48","status":"M","submitter":"Daniel Beck"}]
