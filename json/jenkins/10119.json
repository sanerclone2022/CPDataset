[{"authorTime":"2016-03-16 20:04:18","codes":[{"authorDate":"2016-02-19 22:53:15","commitOrder":3,"curCode":"    @Test public void createViewShouldFailIfViewAlreadyExists() throws IOException {\n\n        j.jenkins.addView(new ListView(\"ViewFromXML\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.CREATE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\"))\n                .invoke()\n        ;\n\n        assertThat(result, failedWith(4));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: View 'ViewFromXML' already exists\"));\n    }\n","date":"2016-02-19 22:53:15","endLine":117,"groupId":"6572","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createViewShouldFailIfViewAlreadyExists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5b/564ea0117abcf111f11afbca67e80799e43c8b.src","preCode":"    @Test public void createViewShouldFailIfViewAlreadyExists() throws IOException {\n\n        j.jenkins.addView(new ListView(\"ViewFromXML\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.CREATE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\"))\n                .invoke()\n        ;\n\n        assertThat(result, failedWith(4));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: View 'ViewFromXML' already exists\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/CreateViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"NB"},{"authorDate":"2016-03-16 20:04:18","commitOrder":3,"curCode":"    @Test public void clearQueueShouldFailWithoutAdministerPermission() throws Exception {\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ).invoke();\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the Overall/Administer permission\"));\n    }\n","date":"2016-03-16 20:04:18","endLine":65,"groupId":"6572","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"clearQueueShouldFailWithoutAdministerPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/20/eb1b2a4ef518c17523be8b60063844520dfa08.src","preCode":"    @Test public void clearQueueShouldFailWithoutAdministerPermission() throws Exception {\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ).invoke();\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the Overall/Administer permission\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/ClearQueueCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"}],"commitId":"04c18430ad51c4a27db7f326b80df044b2b7e85a","commitMessage":"@@@Merge pull request #1942 from pjanouse/JENKINS-31847\n\n[JENKINS-31847] CLI command clear-queue extracted from core to CLI","date":"2016-03-16 20:04:18","modifiedFileCount":"1","status":"M","submitter":"Oliver Gond?a"},{"authorTime":"2016-03-16 20:04:18","codes":[{"authorDate":"2021-09-05 22:13:34","commitOrder":4,"curCode":"    @Test public void createViewShouldFailIfViewAlreadyExists() throws IOException {\n\n        j.jenkins.addView(new ListView(\"ViewFromXML\"));\n\n        j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(View.CREATE, Jenkins.READ).everywhere().toAuthenticated());\n        final CLICommandInvoker.Result result = command\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\"))\n                .invoke()\n        ;\n\n        assertThat(result, failedWith(4));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: View 'ViewFromXML' already exists\"));\n    }\n","date":"2021-09-05 22:13:34","endLine":115,"groupId":"10119","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createViewShouldFailIfViewAlreadyExists","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/09/135f9d7d4d03f1ebd334215c9cacb804888a10.src","preCode":"    @Test public void createViewShouldFailIfViewAlreadyExists() throws IOException {\n\n        j.jenkins.addView(new ListView(\"ViewFromXML\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.CREATE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\"))\n                .invoke()\n        ;\n\n        assertThat(result, failedWith(4));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: View 'ViewFromXML' already exists\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/CreateViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2016-03-16 20:04:18","commitOrder":4,"curCode":"    @Test public void clearQueueShouldFailWithoutAdministerPermission() throws Exception {\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ).invoke();\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the Overall/Administer permission\"));\n    }\n","date":"2016-03-16 20:04:18","endLine":65,"groupId":"10119","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"clearQueueShouldFailWithoutAdministerPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/20/eb1b2a4ef518c17523be8b60063844520dfa08.src","preCode":"    @Test public void clearQueueShouldFailWithoutAdministerPermission() throws Exception {\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ).invoke();\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the Overall/Administer permission\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/ClearQueueCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"}],"commitId":"d7604cfb08cd82449e0d79f25432a196fa04bc2a","commitMessage":"@@@Merge pull request #5701 from jglick/anonymous-to-lambda\n\nReplace some anonymous classes with lambdas","date":"2021-09-05 22:13:34","modifiedFileCount":"32","status":"M","submitter":"Raihaan Shouhell"}]
