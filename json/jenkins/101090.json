[{"authorTime":"2014-03-18 00:33:48","codes":[{"authorDate":"2014-03-25 14:49:30","commitOrder":10,"curCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                \r\n                \r\n                \r\n                Transformer t = TransformerFactory.newInstance()\n                        .newTransformer();\n                t.transform(source,\n                        new StreamResult(out));\n                out.close();\n            } catch (TransformerException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);\n            Items.whileUpdatingByXml(new Callable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n        } finally {\n            out.abort(); \r\n        }\n    }\n","date":"2014-03-25 14:49:30","endLine":622,"groupId":"6924","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"updateByXml","params":"(Sourcesource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3e/6135b0318dd1217969db8af60db4761df23744.src","preCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                \r\n                \r\n                \r\n                Transformer t = TransformerFactory.newInstance()\n                        .newTransformer();\n                t.transform(source,\n                        new StreamResult(out));\n                out.close();\n            } catch (TransformerException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);\n            Items.whileUpdatingByXml(new Callable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n        } finally {\n            out.abort(); \r\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":588,"status":"MB"},{"authorDate":"2014-03-18 00:33:48","commitOrder":10,"curCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new Callable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","date":"2014-03-18 00:33:48","endLine":651,"groupId":"6924","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/92/f369b7f90f03ef72cbfef73d0ffd2f1567792e.src","preCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new Callable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":636,"status":"NB"}],"commitId":"86b72241a70db879c80cd10da68211da47da442c","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n\nConflicts:\n\tchangelog.html\n","date":"2014-03-25 14:49:30","modifiedFileCount":"22","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2014-03-18 00:33:48","codes":[{"authorDate":"2014-10-02 03:54:13","commitOrder":11,"curCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                \r\n                \r\n                \r\n                Transformer t = TransformerFactory.newInstance()\n                        .newTransformer();\n                t.transform(source,\n                        new StreamResult(out));\n                out.close();\n            } catch (TransformerException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);\n            if (o!=this) {\n                \r\n                \r\n                throw new IOException(\"Expecting \"+this.getClass()+\" but got \"+o.getClass()+\" instead\");\n            }\n\n            Items.whileUpdatingByXml(new Callable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n        } finally {\n            out.abort(); \r\n        }\n    }\n","date":"2014-10-02 03:54:13","endLine":673,"groupId":"178","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"updateByXml","params":"(Sourcesource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e3/5ccf01c4c431d46a2acad8206660bcb909dc3d.src","preCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                \r\n                \r\n                \r\n                Transformer t = TransformerFactory.newInstance()\n                        .newTransformer();\n                t.transform(source,\n                        new StreamResult(out));\n                out.close();\n            } catch (TransformerException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);\n            Items.whileUpdatingByXml(new Callable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n        } finally {\n            out.abort(); \r\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":633,"status":"M"},{"authorDate":"2014-03-18 00:33:48","commitOrder":11,"curCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new Callable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","date":"2014-03-18 00:33:48","endLine":651,"groupId":"6924","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/92/f369b7f90f03ef72cbfef73d0ffd2f1567792e.src","preCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new Callable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":636,"status":"N"}],"commitId":"926e5f10bce6006b70e0eeffb9ca5dc77c6704fe","commitMessage":"@@@merged back the RC branch\n","date":"2014-10-02 03:54:13","modifiedFileCount":"8","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2014-10-30 09:46:04","codes":[{"authorDate":"2014-10-30 09:46:04","commitOrder":12,"curCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                \r\n                \r\n                \r\n                Transformer t = TransformerFactory.newInstance()\n                        .newTransformer();\n                t.transform(source,\n                        new StreamResult(out));\n                out.close();\n            } catch (TransformerException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);\n            if (o!=this) {\n                \r\n                \r\n                throw new IOException(\"Expecting \"+this.getClass()+\" but got \"+o.getClass()+\" instead\");\n            }\n\n            Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n        } finally {\n            out.abort(); \r\n        }\n    }\n","date":"2014-10-30 09:46:04","endLine":673,"groupId":"178","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"updateByXml","params":"(Sourcesource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/35/24444feaf3fe4c837502244dd049509a48f14f.src","preCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                \r\n                \r\n                \r\n                Transformer t = TransformerFactory.newInstance()\n                        .newTransformer();\n                t.transform(source,\n                        new StreamResult(out));\n                out.close();\n            } catch (TransformerException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);\n            if (o!=this) {\n                \r\n                \r\n                throw new IOException(\"Expecting \"+this.getClass()+\" but got \"+o.getClass()+\" instead\");\n            }\n\n            Items.whileUpdatingByXml(new Callable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n        } finally {\n            out.abort(); \r\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":633,"status":"M"},{"authorDate":"2014-10-30 09:46:04","commitOrder":12,"curCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","date":"2014-10-30 09:46:04","endLine":701,"groupId":"6924","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/35/24444feaf3fe4c837502244dd049509a48f14f.src","preCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new Callable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":686,"status":"M"}],"commitId":"47b8d961ae64e2589fdcad509a4d1b843ac20e62","commitMessage":"@@@merged back the RC branch\n","date":"2014-10-30 09:46:04","modifiedFileCount":"53","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2014-10-30 09:46:04","codes":[{"authorDate":"2015-03-01 04:53:13","commitOrder":13,"curCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        final AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                XMLUtils.safeTransform(source, new StreamResult(out));\n                out.close();\n            } catch (TransformerException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            } catch (SAXException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);\n            if (o!=this) {\n                \r\n                \r\n                throw new IOException(\"Expecting \"+this.getClass()+\" but got \"+o.getClass()+\" instead\");\n            }\n\n            Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n\n        } finally {\n            out.abort(); \r\n        }\n    }\n","date":"2015-03-01 04:53:13","endLine":674,"groupId":"178","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"updateByXml","params":"(Sourcesource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5f/298eb3d572ff023aeb4b043c354f561313ca68.src","preCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                \r\n                \r\n                \r\n                Transformer t = TransformerFactory.newInstance()\n                        .newTransformer();\n                t.transform(source,\n                        new StreamResult(out));\n                out.close();\n            } catch (TransformerException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);\n            if (o!=this) {\n                \r\n                \r\n                throw new IOException(\"Expecting \"+this.getClass()+\" but got \"+o.getClass()+\" instead\");\n            }\n\n            Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n        } finally {\n            out.abort(); \r\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":637,"status":"M"},{"authorDate":"2014-10-30 09:46:04","commitOrder":13,"curCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","date":"2014-10-30 09:46:04","endLine":701,"groupId":"6924","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/35/24444feaf3fe4c837502244dd049509a48f14f.src","preCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":686,"status":"N"}],"commitId":"03647c7ce468612d10d741c852f2a8d768b92004","commitMessage":"@@@merged back the RC branch\n","date":"2015-03-01 04:53:13","modifiedFileCount":"18","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2014-10-30 09:46:04","codes":[{"authorDate":"2016-09-30 19:51:49","commitOrder":14,"curCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        final AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                XMLUtils.safeTransform(source, new StreamResult(out));\n                out.close();\n            } catch (TransformerException | SAXException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);\n            if (o!=this) {\n                \r\n                \r\n                throw new IOException(\"Expecting \"+this.getClass()+\" but got \"+o.getClass()+\" instead\");\n            }\n\n            Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n\n        } finally {\n            out.abort(); \r\n        }\n    }\n","date":"2016-10-03 21:12:48","endLine":703,"groupId":"178","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"updateByXml","params":"(Sourcesource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/9b/cfb7018493a81f3115937e143be77889850d19.src","preCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        final AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                XMLUtils.safeTransform(source, new StreamResult(out));\n                out.close();\n            } catch (TransformerException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            } catch (SAXException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);\n            if (o!=this) {\n                \r\n                \r\n                throw new IOException(\"Expecting \"+this.getClass()+\" but got \"+o.getClass()+\" instead\");\n            }\n\n            Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n\n        } finally {\n            out.abort(); \r\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":668,"status":"M"},{"authorDate":"2014-10-30 09:46:04","commitOrder":14,"curCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","date":"2014-10-30 09:46:04","endLine":701,"groupId":"6924","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/35/24444feaf3fe4c837502244dd049509a48f14f.src","preCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":686,"status":"N"}],"commitId":"7b3942449516b564ede642b85b99ccc83063c8ff","commitMessage":"@@@rely on  try-with-resources","date":"2016-10-03 21:12:48","modifiedFileCount":"40","status":"M","submitter":"Nicolas De Loof"},{"authorTime":"2014-10-30 09:46:04","codes":[{"authorDate":"2017-12-29 18:56:08","commitOrder":15,"curCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        final AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                XMLUtils.safeTransform(source, new StreamResult(out));\n                out.close();\n            } catch (TransformerException | SAXException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshalNullingOut(this);\n            if (o!=this) {\n                \r\n                \r\n                throw new IOException(\"Expecting \"+this.getClass()+\" but got \"+o.getClass()+\" instead\");\n            }\n\n            Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n\n        } finally {\n            out.abort(); \r\n        }\n    }\n","date":"2017-12-29 18:56:08","endLine":777,"groupId":"1989","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"updateByXml","params":"(Sourcesource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e0/6a3f1988c0b0de87d857c545c7662438641ae5.src","preCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        final AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                XMLUtils.safeTransform(source, new StreamResult(out));\n                out.close();\n            } catch (TransformerException | SAXException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshal(this);\n            if (o!=this) {\n                \r\n                \r\n                throw new IOException(\"Expecting \"+this.getClass()+\" but got \"+o.getClass()+\" instead\");\n            }\n\n            Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n\n        } finally {\n            out.abort(); \r\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":742,"status":"M"},{"authorDate":"2014-10-30 09:46:04","commitOrder":15,"curCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","date":"2014-10-30 09:46:04","endLine":701,"groupId":"6924","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/35/24444feaf3fe4c837502244dd049509a48f14f.src","preCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":686,"status":"N"}],"commitId":"16042bd57bc3e7bc0544b3a4da5e0f79dfa5087b","commitMessage":"@@@Merge pull request #3196 from jglick/unmarshal-JENKINS-21017\n\n[JENKINS-21017] When unmarshalling into an existing object.  reset missing fields","date":"2017-12-29 18:56:08","modifiedFileCount":"8","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2019-07-03 02:02:48","codes":[{"authorDate":"2019-07-03 02:02:48","commitOrder":16,"curCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        final AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                XMLUtils.safeTransform(source, new StreamResult(out));\n                out.close();\n            } catch (TransformerException | SAXException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshalNullingOut(this);\n            if (o!=this) {\n                \r\n                \r\n                throw new IOException(\"Expecting \"+this.getClass()+\" but got \"+o.getClass()+\" instead\");\n            }\n\n            Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.get().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n\n        } finally {\n            out.abort(); \r\n        }\n    }\n","date":"2019-07-03 02:02:48","endLine":894,"groupId":"101090","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"updateByXml","params":"(Sourcesource)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/4a/7524d1be3f80b445a91f84042636710481ed8d.src","preCode":"    public void updateByXml(Source source) throws IOException {\n        checkPermission(CONFIGURE);\n        XmlFile configXmlFile = getConfigFile();\n        final AtomicFileWriter out = new AtomicFileWriter(configXmlFile.getFile());\n        try {\n            try {\n                XMLUtils.safeTransform(source, new StreamResult(out));\n                out.close();\n            } catch (TransformerException | SAXException e) {\n                throw new IOException(\"Failed to persist config.xml\", e);\n            }\n\n            \r\n            Object o = new XmlFile(Items.XSTREAM, out.getTemporaryFile()).unmarshalNullingOut(this);\n            if (o!=this) {\n                \r\n                \r\n                throw new IOException(\"Expecting \"+this.getClass()+\" but got \"+o.getClass()+\" instead\");\n            }\n\n            Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                @Override public Void call() throws IOException {\n                    onLoad(getParent(), getRootDir().getName());\n                    return null;\n                }\n            });\n            Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n            \r\n            out.commit();\n            SaveableListener.fireOnChange(this, getConfigFile());\n\n        } finally {\n            out.abort(); \r\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":859,"status":"M"},{"authorDate":"2019-07-03 02:02:48","commitOrder":16,"curCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.get().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","date":"2019-07-03 02:02:48","endLine":921,"groupId":"101090","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"doReload","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/4a/7524d1be3f80b445a91f84042636710481ed8d.src","preCode":"    public void doReload() throws IOException {\n        checkPermission(CONFIGURE);\n\n        \r\n        getConfigFile().unmarshal(this);\n        Items.whileUpdatingByXml(new NotReallyRoleSensitiveCallable<Void, IOException>() {\n            @Override\n            public Void call() throws IOException {\n                onLoad(getParent(), getRootDir().getName());\n                return null;\n            }\n        });\n        Jenkins.getInstance().rebuildDependencyGraphAsync();\n\n        SaveableListener.fireOnChange(this, getConfigFile());\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":906,"status":"M"}],"commitId":"494119294fa2f095b4a28db0dd32c0d2092d9fa1","commitMessage":"@@@Merge commit '4404c6e662befe16e8daa1ea7a412df73b370086' of github.com:jenkinsci/jenkins\n","date":"2019-07-03 02:02:48","modifiedFileCount":"292","status":"M","submitter":"Jeff Thompson"}]
