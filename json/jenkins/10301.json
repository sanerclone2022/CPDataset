[{"authorTime":"2016-07-20 20:30:09","codes":[{"authorDate":"2016-04-07 17:52:44","commitOrder":4,"curCode":"    @Test public void deleteNodeShouldFailWithoutNodeDeletePermission() throws Exception {\n\n        j.createSlave(\"aNode\", \"\", null);\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ)\n                .invokeWithArgs(\"aNode\")\n        ;\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Agent/Delete permission\"));\n    }\n","date":"2016-04-07 17:52:44","endLine":66,"groupId":"7292","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteNodeShouldFailWithoutNodeDeletePermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/07/ddcdca2a2483c11b40008d7a119c254abd24c4.src","preCode":"    @Test public void deleteNodeShouldFailWithoutNodeDeletePermission() throws Exception {\n\n        j.createSlave(\"aNode\", \"\", null);\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ)\n                .invokeWithArgs(\"aNode\")\n        ;\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Agent/Delete permission\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"NB"},{"authorDate":"2016-07-20 20:30:09","commitOrder":4,"curCode":"    public void offlineNodeShouldFailWithoutComputerDisconnectPermission() throws Exception {\n        j.createSlave(\"aNode\", \"\", null);\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ)\n                .invokeWithArgs(\"aNode\");\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Agent/Disconnect permission\"));\n        assertThat(result.stderr(), not(containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\")));\n    }\n","date":"2016-07-20 20:30:09","endLine":78,"groupId":"7292","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"offlineNodeShouldFailWithoutComputerDisconnectPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a1/623f853b5190d376ae61aa2a07f6d5cfcd2c9d.src","preCode":"    public void offlineNodeShouldFailWithoutComputerDisconnectPermission() throws Exception {\n        j.createSlave(\"aNode\", \"\", null);\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ)\n                .invokeWithArgs(\"aNode\");\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Agent/Disconnect permission\"));\n        assertThat(result.stderr(), not(containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\")));\n    }\n","realPath":"test/src/test/java/hudson/cli/OfflineNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"fb7458f2e6acbe955fbb4b8f0afd9d352d839181","commitMessage":"@@@[JENKINS-34468] CLI command offline-node extracted from core to CLI (#2392)\n\n* [JENKINS-34468] CLI command offline-node extracted from core to CLI\n\noffline-node extended to accept multiple node names\noffline-node covered by test-cases\n\n* Fixed translation properties\n\n* Fixes based on Oleg's comments\n\n* Fixed HelpCommandTest test-case\n\n* Minor fixes\n\n* Uses Matchers.instanceOf everywhere instead of Java operator instanceof\n","date":"2016-07-20 20:30:09","modifiedFileCount":"2","status":"M","submitter":"Pavel Janousek"},{"authorTime":"2016-10-15 23:34:12","codes":[{"authorDate":"2016-04-07 17:52:44","commitOrder":5,"curCode":"    @Test public void deleteNodeShouldFailWithoutNodeDeletePermission() throws Exception {\n\n        j.createSlave(\"aNode\", \"\", null);\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ)\n                .invokeWithArgs(\"aNode\")\n        ;\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Agent/Delete permission\"));\n    }\n","date":"2016-04-07 17:52:44","endLine":66,"groupId":"10301","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteNodeShouldFailWithoutNodeDeletePermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/07/ddcdca2a2483c11b40008d7a119c254abd24c4.src","preCode":"    @Test public void deleteNodeShouldFailWithoutNodeDeletePermission() throws Exception {\n\n        j.createSlave(\"aNode\", \"\", null);\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ)\n                .invokeWithArgs(\"aNode\")\n        ;\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Agent/Delete permission\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"N"},{"authorDate":"2016-10-15 23:34:12","commitOrder":5,"curCode":"    public void offlineNodeShouldFailWithoutComputerDisconnectPermission() throws Exception {\n        j.createSlave(\"aNode\", \"\", null);\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ)\n                .invokeWithArgs(\"aNode\");\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Agent/Disconnect permission\"));\n        assertThat(result.stderr(), not(containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT)));\n    }\n","date":"2016-10-15 23:34:12","endLine":78,"groupId":"10301","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"offlineNodeShouldFailWithoutComputerDisconnectPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/0d/ae4a56576469fb2172b56d38d5560e267e40cc.src","preCode":"    public void offlineNodeShouldFailWithoutComputerDisconnectPermission() throws Exception {\n        j.createSlave(\"aNode\", \"\", null);\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Jenkins.READ)\n                .invokeWithArgs(\"aNode\");\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Agent/Disconnect permission\"));\n        assertThat(result.stderr(), not(containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\")));\n    }\n","realPath":"test/src/test/java/hudson/cli/OfflineNodeCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"b50034c9bffb704acfce0bc49d99855b689eace6","commitMessage":"@@@[FIXED JENKINS-38650] - Cleanup spelling in CLi commands + Javadoc updates (#2571)\n\n* [FIXED JENKINS-38650] - Cleanup spelling in CLi commands.\n\nAlso adds some javadoc and since definitions.\n\n* [JENKINS-38650] - Move common warning message to the constant\n\n* [JENKINS-38650] - DeleteViewCommand should also use the constant string\n\n* [JENKINS-38650] - Rename the constant in order to make the name more explicit\n","date":"2016-10-15 23:34:12","modifiedFileCount":"23","status":"M","submitter":"Oleg Nenashev"}]
