[{"authorTime":"2009-09-02 00:39:26","codes":[{"authorDate":"2011-01-13 01:13:58","commitOrder":2,"curCode":"    protected AbstractProject getBuildingDownstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveDownstream(this);\n        tups.add(this);\n        for (AbstractProject tup : tups) {\n            if(tup!=this && (tup.isBuilding() || tup.isInQueue()))\n                return tup;\n        }\n        return null;\n    }\n","date":"2011-01-13 01:15:23","endLine":1080,"groupId":"3777","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getBuildingDownstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d1/2d1d3859e9eb1d730f4028499df86fc295a5a7.src","preCode":"    protected AbstractProject getBuildingDownstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveDownstream(this);\n        tups.add(this);\n        for (AbstractProject tup : tups) {\n            if(tup!=this && (tup.isBuilding() || tup.isInQueue()))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1071,"status":"B"},{"authorDate":"2009-09-02 00:39:26","commitOrder":2,"curCode":"    protected AbstractProject getBuildingUpstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveUpstream(this);\n        tups.add(this);\n        for (AbstractProject tup : tups) {\n            if(tup!=this && (tup.isBuilding() || tup.isInQueue()))\n                return tup;\n        }\n        return null;\n    }\n","date":"2009-09-02 00:39:26","endLine":883,"groupId":"3777","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getBuildingUpstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/80/b3ea0f3c3c412912e1d423827246a9f947c149.src","preCode":"    protected AbstractProject getBuildingUpstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveUpstream(this);\n        tups.add(this);\n        for (AbstractProject tup : tups) {\n            if(tup!=this && (tup.isBuilding() || tup.isInQueue()))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":874,"status":"NB"}],"commitId":"0dff1ddeb7bd3c175b2de7932330d252ecdd37ba","commitMessage":"@@@Merge branch 'mleinart/HUDSON-7046'\n\n* HUDSON-7046:\n  Fix verbiage in comments and help to refer to downstream children rather than upstream parents\n  [FIXED HUDSON-7046] - Add \"Block build when downstream project is building\" option\n","date":"2011-01-13 01:15:23","modifiedFileCount":"1","status":"M","submitter":"mleinart"},{"authorTime":"2009-09-02 00:39:26","codes":[{"authorDate":"2011-03-04 07:40:04","commitOrder":3,"curCode":"    protected AbstractProject getBuildingDownstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveDownstream(this);\n        Queue queue = Hudson.getInstance().getQueue();\n\n        for (AbstractProject tup : tups) {\n\t\t\tif(tup.isBuilding() || queue.getUnblockedItems().containsKey(tup))\n                return tup;\n        }\n        return null;\n    }\n","date":"2011-03-10 03:11:15","endLine":1093,"groupId":"7988","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getBuildingDownstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5d/8e237ca3f305e7a3c06f20916c73356a9726bb.src","preCode":"    protected AbstractProject getBuildingDownstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveDownstream(this);\n        tups.add(this);\n        for (AbstractProject tup : tups) {\n            if(tup!=this && (tup.isBuilding() || tup.isInQueue()))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1083,"status":"M"},{"authorDate":"2009-09-02 00:39:26","commitOrder":3,"curCode":"    protected AbstractProject getBuildingUpstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveUpstream(this);\n        tups.add(this);\n        for (AbstractProject tup : tups) {\n            if(tup!=this && (tup.isBuilding() || tup.isInQueue()))\n                return tup;\n        }\n        return null;\n    }\n","date":"2009-09-02 00:39:26","endLine":883,"groupId":"3777","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getBuildingUpstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/80/b3ea0f3c3c412912e1d423827246a9f947c149.src","preCode":"    protected AbstractProject getBuildingUpstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveUpstream(this);\n        tups.add(this);\n        for (AbstractProject tup : tups) {\n            if(tup!=this && (tup.isBuilding() || tup.isInQueue()))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":874,"status":"N"}],"commitId":"b40e7b4228a6a5979fa484b2d2b15259bfab0ff5","commitMessage":"@@@[FIXED JENKINS-8929] Changed the definition of a building downstream project to one that is Building.  Waiting.  Pending or Buildable\nbut NOT blocked.  This prevents the deadlock condition where upstream project A is blocked on downstream project B.  which is\nblocked on upstream project A - now in this scenario B will remain blocked but A will build.  eventually freeing up B.\n","date":"2011-03-10 03:11:15","modifiedFileCount":"2","status":"M","submitter":"Robert Elliot"},{"authorTime":"2011-03-04 15:54:01","codes":[{"authorDate":"2011-03-04 15:54:01","commitOrder":4,"curCode":"    protected AbstractProject getBuildingDownstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveDownstream(this);\n        Queue queue = Hudson.getInstance().getQueue();\n        ItemList<Queue.Item> unblockedItems = queue.getUnblockedItems();\n        for (AbstractProject tup : tups) {\n\t\t\tif(tup.isBuilding() || unblockedItems.containsKey(tup))\n                return tup;\n        }\n        return null;\n    }\n","date":"2011-03-10 03:11:15","endLine":1094,"groupId":"7988","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getBuildingDownstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f0/9655c6001d8e8252e652c90a9f55cc6cf51536.src","preCode":"    protected AbstractProject getBuildingDownstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveDownstream(this);\n        Queue queue = Hudson.getInstance().getQueue();\n\n        for (AbstractProject tup : tups) {\n\t\t\tif(tup.isBuilding() || queue.getUnblockedItems().containsKey(tup))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1084,"status":"M"},{"authorDate":"2011-03-04 15:54:01","commitOrder":4,"curCode":"    protected AbstractProject getBuildingUpstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveUpstream(this);\n        for (AbstractProject tup : tups) {\n            if(tup.isBuilding() || tup.isInQueue())\n                return tup;\n        }\n        return null;\n    }\n","date":"2011-03-10 03:11:15","endLine":1111,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getBuildingUpstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f0/9655c6001d8e8252e652c90a9f55cc6cf51536.src","preCode":"    protected AbstractProject getBuildingUpstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveUpstream(this);\n        tups.add(this);\n        for (AbstractProject tup : tups) {\n            if(tup!=this && (tup.isBuilding() || tup.isInQueue()))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1103,"status":"M"}],"commitId":"6de6353aebdb7406b4a4a76f09d15256f66fee7f","commitMessage":"@@@Changed logic to build list of unblocked items in the queue safely so it will not break if a new category of queue items is added\n","date":"2011-03-10 03:11:15","modifiedFileCount":"2","status":"M","submitter":"Robert Elliot"},{"authorTime":"2011-03-10 05:03:28","codes":[{"authorDate":"2011-03-10 05:03:28","commitOrder":5,"curCode":"    protected AbstractProject getBuildingDownstream() {\n        Set<Task> unblockedTasks = Hudson.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : Hudson.getInstance().getDependencyGraph().getTransitiveDownstream(this)) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","date":"2011-03-10 05:03:28","endLine":1091,"groupId":"9168","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getBuildingDownstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ad/494bff6e04e620deff8a0bde245df95f9cf1ef.src","preCode":"    protected AbstractProject getBuildingDownstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveDownstream(this);\n        Queue queue = Hudson.getInstance().getQueue();\n        ItemList<Queue.Item> unblockedItems = queue.getUnblockedItems();\n        for (AbstractProject tup : tups) {\n\t\t\tif(tup.isBuilding() || unblockedItems.containsKey(tup))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1083,"status":"M"},{"authorDate":"2011-03-10 05:03:28","commitOrder":5,"curCode":"    protected AbstractProject getBuildingUpstream() {\n        Set<Task> unblockedTasks = Hudson.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : Hudson.getInstance().getDependencyGraph().getTransitiveUpstream(this)) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","date":"2011-03-10 05:03:28","endLine":1108,"groupId":"9168","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getBuildingUpstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ad/494bff6e04e620deff8a0bde245df95f9cf1ef.src","preCode":"    protected AbstractProject getBuildingUpstream() {\n    \tDependencyGraph graph = Hudson.getInstance().getDependencyGraph();\n        Set<AbstractProject> tups = graph.getTransitiveUpstream(this);\n        for (AbstractProject tup : tups) {\n            if(tup.isBuilding() || tup.isInQueue())\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1100,"status":"M"}],"commitId":"86d88e5e7b341c884b156185051945678ce81ae8","commitMessage":"@@@[JENKINS-8929] follow up changes\n\n- AbstractProject.getBuildingUpstream/getBuildingDownstream()\n  should be symmetric.\n- It's unlikely for us to add another category of items. \n  so reverted getUnblockedItems() implementation to the older one\n  that was more efficient.\n- ItemList was meant to be internal.  so keep it as such. \n  at least for now.\n","date":"2011-03-10 05:03:28","modifiedFileCount":"2","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2011-06-08 01:44:49","codes":[{"authorDate":"2011-06-08 01:44:49","commitOrder":6,"curCode":"    protected AbstractProject getBuildingDownstream() {\n        Set<Task> unblockedTasks = Jenkins.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : Jenkins.getInstance().getDependencyGraph().getTransitiveDownstream(this)) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","date":"2011-06-08 01:44:49","endLine":1092,"groupId":"2811","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getBuildingDownstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/61/f34cfbe5694c7c7defa9ab8bcb90025b1e0a26.src","preCode":"    protected AbstractProject getBuildingDownstream() {\n        Set<Task> unblockedTasks = Hudson.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : Hudson.getInstance().getDependencyGraph().getTransitiveDownstream(this)) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1084,"status":"M"},{"authorDate":"2011-06-08 01:44:49","commitOrder":6,"curCode":"    protected AbstractProject getBuildingUpstream() {\n        Set<Task> unblockedTasks = Jenkins.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : Jenkins.getInstance().getDependencyGraph().getTransitiveUpstream(this)) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","date":"2011-06-08 01:44:49","endLine":1109,"groupId":"2811","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getBuildingUpstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/61/f34cfbe5694c7c7defa9ab8bcb90025b1e0a26.src","preCode":"    protected AbstractProject getBuildingUpstream() {\n        Set<Task> unblockedTasks = Hudson.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : Hudson.getInstance().getDependencyGraph().getTransitiveUpstream(this)) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1101,"status":"M"}],"commitId":"d5c24703706b5afc6f62664251d1bfb1b0e0668f","commitMessage":"@@@Merge branch 'pull-152'\n\nConflicts:\n\tcore/src/main/java/hudson/model/DependencyGraph.java\n","date":"2011-06-08 01:44:49","modifiedFileCount":"310","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2011-11-01 22:03:18","codes":[{"authorDate":"2011-11-01 22:03:18","commitOrder":7,"curCode":"    public AbstractProject getBuildingDownstream() {\n        Set<Task> unblockedTasks = Jenkins.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : getTransitiveDownstreamProjects()) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","date":"2011-11-01 22:03:18","endLine":1105,"groupId":"1629","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getBuildingDownstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/76/f13a80e644def958af9999520245e81c8ebc5d.src","preCode":"    protected AbstractProject getBuildingDownstream() {\n        Set<Task> unblockedTasks = Jenkins.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : Jenkins.getInstance().getDependencyGraph().getTransitiveDownstream(this)) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1097,"status":"M"},{"authorDate":"2011-11-01 22:03:18","commitOrder":7,"curCode":"    public AbstractProject getBuildingUpstream() {\n        Set<Task> unblockedTasks = Jenkins.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : getTransitiveUpstreamProjects()) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","date":"2011-11-01 22:03:18","endLine":1122,"groupId":"1629","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getBuildingUpstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/76/f13a80e644def958af9999520245e81c8ebc5d.src","preCode":"    protected AbstractProject getBuildingUpstream() {\n        Set<Task> unblockedTasks = Jenkins.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : Jenkins.getInstance().getDependencyGraph().getTransitiveUpstream(this)) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1114,"status":"M"}],"commitId":"b20ef418b8b53ff895dc2d0f9ed176bf32ab72ab","commitMessage":"@@@Changed access modifiers of getBuildingDownstream() and\ngetBuildingUpstream() to public so they can be accessed from plugins. \nsmall refactoring (reuse getTransitiveDownstreamProjects() and\ngetTransitiveUpstreamProjects() respectively)","date":"2011-11-01 22:03:18","modifiedFileCount":"1","status":"M","submitter":"Fred G"},{"authorTime":"2019-07-03 02:02:48","codes":[{"authorDate":"2019-07-03 02:02:48","commitOrder":8,"curCode":"    public AbstractProject getBuildingDownstream() {\n        Set<Task> unblockedTasks = Jenkins.get().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : getTransitiveDownstreamProjects()) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","date":"2019-07-03 02:02:48","endLine":1111,"groupId":"101005","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getBuildingDownstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d9/870c2134bbfc4e1f3758801258f5a723b0b888.src","preCode":"    public AbstractProject getBuildingDownstream() {\n        Set<Task> unblockedTasks = Jenkins.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : getTransitiveDownstreamProjects()) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1103,"status":"M"},{"authorDate":"2019-07-03 02:02:48","commitOrder":8,"curCode":"    public AbstractProject getBuildingUpstream() {\n        Set<Task> unblockedTasks = Jenkins.get().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : getTransitiveUpstreamProjects()) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","date":"2019-07-03 02:02:48","endLine":1128,"groupId":"101005","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getBuildingUpstream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d9/870c2134bbfc4e1f3758801258f5a723b0b888.src","preCode":"    public AbstractProject getBuildingUpstream() {\n        Set<Task> unblockedTasks = Jenkins.getInstance().getQueue().getUnblockedTasks();\n\n        for (AbstractProject tup : getTransitiveUpstreamProjects()) {\n\t\t\tif (tup!=this && (tup.isBuilding() || unblockedTasks.contains(tup)))\n                return tup;\n        }\n        return null;\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractProject.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1120,"status":"M"}],"commitId":"494119294fa2f095b4a28db0dd32c0d2092d9fa1","commitMessage":"@@@Merge commit '4404c6e662befe16e8daa1ea7a412df73b370086' of github.com:jenkinsci/jenkins\n","date":"2019-07-03 02:02:48","modifiedFileCount":"292","status":"M","submitter":"Jeff Thompson"}]
