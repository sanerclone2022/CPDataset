[{"authorTime":"2019-07-03 02:54:16","codes":[{"authorDate":"2018-09-27 21:26:44","commitOrder":2,"curCode":"    public void fileParameter_canStillUse_internalHierarchy() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.asList(\n                new FileParameterDefinition(\"direct-child1.txt\", null),\n                new FileParameterDefinition(\"parent/child2.txt\", null)\n        )));\n        \n        File uploadedFile1 = tmp.newFile();\n        FileUtils.write(uploadedFile1, \"test1\");\n        File uploadedFile2 = tmp.newFile();\n        FileUtils.write(uploadedFile2, \"test2\");\n        \n        FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"direct-child1.txt\", uploadedFile1, \"uploaded-file-1.txt\"),\n                new FileParameterValue(\"parent/child2.txt\", uploadedFile2, \"uploaded-file-2.txt\")\n        )));\n        \n        \r\n        File directChild = new File(build.getRootDir(), \"fileParameters/\" + \"direct-child1.txt\");\n        assertTrue(directChild.exists());\n        \n        File parentChild = new File(build.getRootDir(), \"fileParameters/\" + \"parent/child2.txt\");\n        assertTrue(parentChild.exists());\n        \n        \r\n        assertTrue(build.getWorkspace().child(\"direct-child1.txt\").exists());\n        assertTrue(build.getWorkspace().child(\"parent\").child(\"child2.txt\").exists());\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        HtmlPage workspacePage = wc.goTo(p.getUrl() + \"ws\");\n        String workspaceContent = workspacePage.getWebResponse().getContentAsString();\n        assertThat(workspaceContent, allOf(\n                containsString(\"direct-child1.txt\"),\n                containsString(\"parent\")\n        ));\n        HtmlPage workspaceParentPage = wc.goTo(p.getUrl() + \"ws\" + \"/parent\");\n        String workspaceParentContent = workspaceParentPage.getWebResponse().getContentAsString();\n        assertThat(workspaceParentContent, containsString(\"child2.txt\"));\n    }\n","date":"2018-09-27 21:26:44","endLine":269,"groupId":"2736","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fileParameter_canStillUse_internalHierarchy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/91/1f88431b2b6d394ba57b365354db9b0a236da7.src","preCode":"    public void fileParameter_canStillUse_internalHierarchy() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.asList(\n                new FileParameterDefinition(\"direct-child1.txt\", null),\n                new FileParameterDefinition(\"parent/child2.txt\", null)\n        )));\n        \n        File uploadedFile1 = tmp.newFile();\n        FileUtils.write(uploadedFile1, \"test1\");\n        File uploadedFile2 = tmp.newFile();\n        FileUtils.write(uploadedFile2, \"test2\");\n        \n        FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"direct-child1.txt\", uploadedFile1, \"uploaded-file-1.txt\"),\n                new FileParameterValue(\"parent/child2.txt\", uploadedFile2, \"uploaded-file-2.txt\")\n        )));\n        \n        \r\n        File directChild = new File(build.getRootDir(), \"fileParameters/\" + \"direct-child1.txt\");\n        assertTrue(directChild.exists());\n        \n        File parentChild = new File(build.getRootDir(), \"fileParameters/\" + \"parent/child2.txt\");\n        assertTrue(parentChild.exists());\n        \n        \r\n        assertTrue(build.getWorkspace().child(\"direct-child1.txt\").exists());\n        assertTrue(build.getWorkspace().child(\"parent\").child(\"child2.txt\").exists());\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        HtmlPage workspacePage = wc.goTo(p.getUrl() + \"ws\");\n        String workspaceContent = workspacePage.getWebResponse().getContentAsString();\n        assertThat(workspaceContent, allOf(\n                containsString(\"direct-child1.txt\"),\n                containsString(\"parent\")\n        ));\n        HtmlPage workspaceParentPage = wc.goTo(p.getUrl() + \"ws\" + \"/parent\");\n        String workspaceParentContent = workspaceParentPage.getWebResponse().getContentAsString();\n        assertThat(workspaceParentContent, containsString(\"child2.txt\"));\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"NB"},{"authorDate":"2019-07-03 02:54:16","commitOrder":2,"curCode":"    public void fileParameter_canStillUse_doubleDotsInFileName() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.asList(\n                new FileParameterDefinition(\"weird..name.txt\", null)\n        )));\n\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, \"test1\");\n\n        FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"weird..name.txt\", uploadedFile, \"uploaded-file.txt\")\n        )));\n\n        \r\n        File directChild = new File(build.getRootDir(), \"fileParameters/weird..name.txt\");\n        assertTrue(directChild.exists());\n\n        \r\n        assertTrue(build.getWorkspace().child(\"weird..name.txt\").exists());\n\n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        HtmlPage workspacePage = wc.goTo(p.getUrl() + \"ws\");\n        String workspaceContent = workspacePage.getWebResponse().getContentAsString();\n        assertThat(workspaceContent, containsString(\"weird..name.txt\"));\n    }\n","date":"2019-07-03 02:54:16","endLine":354,"groupId":"118","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fileParameter_canStillUse_doubleDotsInFileName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/0e/8c7f65ec30a019fe1efe4f7059856dfa25de7b.src","preCode":"    public void fileParameter_canStillUse_doubleDotsInFileName() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.asList(\n                new FileParameterDefinition(\"weird..name.txt\", null)\n        )));\n\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, \"test1\");\n\n        FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"weird..name.txt\", uploadedFile, \"uploaded-file.txt\")\n        )));\n\n        \r\n        File directChild = new File(build.getRootDir(), \"fileParameters/weird..name.txt\");\n        assertTrue(directChild.exists());\n\n        \r\n        assertTrue(build.getWorkspace().child(\"weird..name.txt\").exists());\n\n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        HtmlPage workspacePage = wc.goTo(p.getUrl() + \"ws\");\n        String workspaceContent = workspacePage.getWebResponse().getContentAsString();\n        assertThat(workspaceContent, containsString(\"weird..name.txt\"));\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"B"}],"commitId":"2ac9009e061e4603d6ddfc28d10c95e8125ad7d1","commitMessage":"@@@Merge branch 'security-stable-2.176' into security-master\n","date":"2019-07-03 02:54:16","modifiedFileCount":"2","status":"M","submitter":"Jeff Thompson"},{"authorTime":"2020-07-17 22:15:15","codes":[{"authorDate":"2020-07-17 22:15:15","commitOrder":3,"curCode":"    public void fileParameter_canStillUse_internalHierarchy() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.asList(\n                new FileParameterDefinition(\"direct-child1.txt\", null),\n                new FileParameterDefinition(\"parent/child2.txt\", null)\n        )));\n        \n        File uploadedFile1 = tmp.newFile();\n        FileUtils.write(uploadedFile1, \"test1\", StandardCharsets.UTF_8);\n        File uploadedFile2 = tmp.newFile();\n        FileUtils.write(uploadedFile2, \"test2\", StandardCharsets.UTF_8);\n        \n        FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"direct-child1.txt\", uploadedFile1, \"uploaded-file-1.txt\"),\n                new FileParameterValue(\"parent/child2.txt\", uploadedFile2, \"uploaded-file-2.txt\")\n        )));\n        \n        \r\n        File directChild = new File(build.getRootDir(), \"fileParameters/\" + \"direct-child1.txt\");\n        assertTrue(directChild.exists());\n        \n        File parentChild = new File(build.getRootDir(), \"fileParameters/\" + \"parent/child2.txt\");\n        assertTrue(parentChild.exists());\n        \n        \r\n        assertTrue(build.getWorkspace().child(\"direct-child1.txt\").exists());\n        assertTrue(build.getWorkspace().child(\"parent\").child(\"child2.txt\").exists());\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        HtmlPage workspacePage = wc.goTo(p.getUrl() + \"ws\");\n        String workspaceContent = workspacePage.getWebResponse().getContentAsString();\n        assertThat(workspaceContent, allOf(\n                containsString(\"direct-child1.txt\"),\n                containsString(\"parent\")\n        ));\n        HtmlPage workspaceParentPage = wc.goTo(p.getUrl() + \"ws\" + \"/parent\");\n        String workspaceParentContent = workspaceParentPage.getWebResponse().getContentAsString();\n        assertThat(workspaceParentContent, containsString(\"child2.txt\"));\n    }\n","date":"2020-07-17 22:15:15","endLine":325,"groupId":"10515","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fileParameter_canStillUse_internalHierarchy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/2c/1cbd9eef604205314c1f0fc78b735b6ebf80dc.src","preCode":"    public void fileParameter_canStillUse_internalHierarchy() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.asList(\n                new FileParameterDefinition(\"direct-child1.txt\", null),\n                new FileParameterDefinition(\"parent/child2.txt\", null)\n        )));\n        \n        File uploadedFile1 = tmp.newFile();\n        FileUtils.write(uploadedFile1, \"test1\");\n        File uploadedFile2 = tmp.newFile();\n        FileUtils.write(uploadedFile2, \"test2\");\n        \n        FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"direct-child1.txt\", uploadedFile1, \"uploaded-file-1.txt\"),\n                new FileParameterValue(\"parent/child2.txt\", uploadedFile2, \"uploaded-file-2.txt\")\n        )));\n        \n        \r\n        File directChild = new File(build.getRootDir(), \"fileParameters/\" + \"direct-child1.txt\");\n        assertTrue(directChild.exists());\n        \n        File parentChild = new File(build.getRootDir(), \"fileParameters/\" + \"parent/child2.txt\");\n        assertTrue(parentChild.exists());\n        \n        \r\n        assertTrue(build.getWorkspace().child(\"direct-child1.txt\").exists());\n        assertTrue(build.getWorkspace().child(\"parent\").child(\"child2.txt\").exists());\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        HtmlPage workspacePage = wc.goTo(p.getUrl() + \"ws\");\n        String workspaceContent = workspacePage.getWebResponse().getContentAsString();\n        assertThat(workspaceContent, allOf(\n                containsString(\"direct-child1.txt\"),\n                containsString(\"parent\")\n        ));\n        HtmlPage workspaceParentPage = wc.goTo(p.getUrl() + \"ws\" + \"/parent\");\n        String workspaceParentContent = workspaceParentPage.getWebResponse().getContentAsString();\n        assertThat(workspaceParentContent, containsString(\"child2.txt\"));\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"M"},{"authorDate":"2020-07-17 22:15:15","commitOrder":3,"curCode":"    public void fileParameter_canStillUse_doubleDotsInFileName() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"weird..name.txt\", null)\n        )));\n\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, \"test1\", StandardCharsets.UTF_8);\n\n        FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"weird..name.txt\", uploadedFile, \"uploaded-file.txt\")\n        )));\n\n        \r\n        File directChild = new File(build.getRootDir(), \"fileParameters/weird..name.txt\");\n        assertTrue(directChild.exists());\n\n        \r\n        assertTrue(build.getWorkspace().child(\"weird..name.txt\").exists());\n\n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        HtmlPage workspacePage = wc.goTo(p.getUrl() + \"ws\");\n        String workspaceContent = workspacePage.getWebResponse().getContentAsString();\n        assertThat(workspaceContent, containsString(\"weird..name.txt\"));\n    }\n","date":"2020-07-17 22:15:15","endLine":353,"groupId":"10515","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fileParameter_canStillUse_doubleDotsInFileName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/2c/1cbd9eef604205314c1f0fc78b735b6ebf80dc.src","preCode":"    public void fileParameter_canStillUse_doubleDotsInFileName() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Arrays.asList(\n                new FileParameterDefinition(\"weird..name.txt\", null)\n        )));\n\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, \"test1\");\n\n        FreeStyleBuild build = j.assertBuildStatusSuccess(p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"weird..name.txt\", uploadedFile, \"uploaded-file.txt\")\n        )));\n\n        \r\n        File directChild = new File(build.getRootDir(), \"fileParameters/weird..name.txt\");\n        assertTrue(directChild.exists());\n\n        \r\n        assertTrue(build.getWorkspace().child(\"weird..name.txt\").exists());\n\n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        HtmlPage workspacePage = wc.goTo(p.getUrl() + \"ws\");\n        String workspaceContent = workspacePage.getWebResponse().getContentAsString();\n        assertThat(workspaceContent, containsString(\"weird..name.txt\"));\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":328,"status":"M"}],"commitId":"688647a8540f8db179dc5c9cf62e3208eb444d9f","commitMessage":"@@@tests: minor refactorings either for performance or readability (#4846)\n\ntests: minor refactorings either for performance or readability","date":"2020-07-17 22:15:15","modifiedFileCount":"18","status":"M","submitter":"Tim Jacomb"}]
