[{"authorTime":"2018-08-13 18:55:27","codes":[{"authorDate":"2018-06-24 05:20:44","commitOrder":2,"curCode":"    public void isActive() throws Exception {\n        ApiTokenPropertyConfiguration config = ApiTokenPropertyConfiguration.get();\n        config.setCreationOfLegacyTokenEnabled(true);\n        config.setTokenGenerationOnCreationEnabled(false);\n        \n        \r\n        User user = User.getById(\"user\", true);\n        ApiTokenProperty apiTokenProperty = user.getProperty(ApiTokenProperty.class);\n        assertFalse(apiTokenProperty.hasLegacyToken());\n        \n        LegacyApiTokenAdministrativeMonitor monitor = j.jenkins.getExtensionList(AdministrativeMonitor.class).get(LegacyApiTokenAdministrativeMonitor.class);\n        assertFalse(monitor.isActivated());\n        \n        ApiTokenStore.TokenUuidAndPlainValue tokenInfo = apiTokenProperty.getTokenStore().generateNewToken(\"Not Legacy\");\n        \r\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.getTokenStore().revokeToken(tokenInfo.tokenUuid);\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.changeApiToken();\n        assertTrue(monitor.isActivated());\n    }\n","date":"2018-06-24 05:20:44","endLine":77,"groupId":"4971","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"isActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/80/172d9ab788c2c8e93cccf49be108e1a58c56a5.src","preCode":"    public void isActive() throws Exception {\n        ApiTokenPropertyConfiguration config = ApiTokenPropertyConfiguration.get();\n        config.setCreationOfLegacyTokenEnabled(true);\n        config.setTokenGenerationOnCreationEnabled(false);\n        \n        \r\n        User user = User.getById(\"user\", true);\n        ApiTokenProperty apiTokenProperty = user.getProperty(ApiTokenProperty.class);\n        assertFalse(apiTokenProperty.hasLegacyToken());\n        \n        LegacyApiTokenAdministrativeMonitor monitor = j.jenkins.getExtensionList(AdministrativeMonitor.class).get(LegacyApiTokenAdministrativeMonitor.class);\n        assertFalse(monitor.isActivated());\n        \n        ApiTokenStore.TokenUuidAndPlainValue tokenInfo = apiTokenProperty.getTokenStore().generateNewToken(\"Not Legacy\");\n        \r\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.getTokenStore().revokeToken(tokenInfo.tokenUuid);\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.changeApiToken();\n        assertTrue(monitor.isActivated());\n    }\n","realPath":"test/src/test/java/jenkins/security/apitoken/LegacyApiTokenAdministrativeMonitorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"NB"},{"authorDate":"2018-08-13 18:55:27","commitOrder":2,"curCode":"    public void takeCareOfUserWithIdNull() throws Exception {\n        ApiTokenPropertyConfiguration config = ApiTokenPropertyConfiguration.get();\n        config.setCreationOfLegacyTokenEnabled(true);\n        config.setTokenGenerationOnCreationEnabled(false);\n        \n        \r\n        User user = User.getById(\"null\", true);\n        ApiTokenProperty apiTokenProperty = user.getProperty(ApiTokenProperty.class);\n        assertFalse(apiTokenProperty.hasLegacyToken());\n        \n        LegacyApiTokenAdministrativeMonitor monitor = j.jenkins.getExtensionList(AdministrativeMonitor.class).get(LegacyApiTokenAdministrativeMonitor.class);\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.changeApiToken();\n        assertTrue(monitor.isActivated());\n        \n        {\r\n            JenkinsRule.WebClient wc = j.createWebClient();\n            \n            HtmlPage page = wc.goTo(monitor.getUrl() + \"/manage\");\n            {\r\n                HtmlAnchor filterAll = getFilterByIndex(page, SelectFilter.ALL);\n                HtmlElementUtil.click(filterAll);\n            }\n            \r\n            HtmlButton revokeSelected = getRevokeSelected(page);\n            HtmlElementUtil.click(revokeSelected);\n        }\n        \n        assertFalse(monitor.isActivated());\n    }\n","date":"2018-08-13 18:55:27","endLine":124,"groupId":"4971","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"takeCareOfUserWithIdNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/7f/bea41d0bfe334fa9c5fae542c685d7d86c37e2.src","preCode":"    public void takeCareOfUserWithIdNull() throws Exception {\n        ApiTokenPropertyConfiguration config = ApiTokenPropertyConfiguration.get();\n        config.setCreationOfLegacyTokenEnabled(true);\n        config.setTokenGenerationOnCreationEnabled(false);\n        \n        \r\n        User user = User.getById(\"null\", true);\n        ApiTokenProperty apiTokenProperty = user.getProperty(ApiTokenProperty.class);\n        assertFalse(apiTokenProperty.hasLegacyToken());\n        \n        LegacyApiTokenAdministrativeMonitor monitor = j.jenkins.getExtensionList(AdministrativeMonitor.class).get(LegacyApiTokenAdministrativeMonitor.class);\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.changeApiToken();\n        assertTrue(monitor.isActivated());\n        \n        {\r\n            JenkinsRule.WebClient wc = j.createWebClient();\n            \n            HtmlPage page = wc.goTo(monitor.getUrl() + \"/manage\");\n            {\r\n                HtmlAnchor filterAll = getFilterByIndex(page, SelectFilter.ALL);\n                HtmlElementUtil.click(filterAll);\n            }\n            \r\n            HtmlButton revokeSelected = getRevokeSelected(page);\n            HtmlElementUtil.click(revokeSelected);\n        }\n        \n        assertFalse(monitor.isActivated());\n    }\n","realPath":"test/src/test/java/jenkins/security/apitoken/LegacyApiTokenAdministrativeMonitorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"}],"commitId":"0053851f6821d1f414d140acb87aae7600132427","commitMessage":"@@@Merge commit '817f1149781eeb3ceea7839ab3213d2d2fdc9b3d' into security-master\n","date":"2018-08-13 18:55:27","modifiedFileCount":"12","status":"M","submitter":"Daniel Beck"},{"authorTime":"2018-08-13 18:55:27","codes":[{"authorDate":"2020-10-06 06:07:30","commitOrder":3,"curCode":"    public void isActive() throws Exception {\n        ApiTokenPropertyConfiguration config = ApiTokenPropertyConfiguration.get();\n        config.setCreationOfLegacyTokenEnabled(true);\n        config.setTokenGenerationOnCreationEnabled(false);\n        \n        \r\n        User user = User.getById(\"user\", true);\n        ApiTokenProperty apiTokenProperty = user.getProperty(ApiTokenProperty.class);\n        assertFalse(apiTokenProperty.hasLegacyToken());\n        \n        LegacyApiTokenAdministrativeMonitor monitor = j.jenkins.getExtensionList(AdministrativeMonitor.class).get(LegacyApiTokenAdministrativeMonitor.class);\n        assertFalse(monitor.isActivated());\n        \n        TokenUuidAndPlainValue tokenInfo = apiTokenProperty.getTokenStore().generateNewToken(\"Not Legacy\");\n        \r\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.getTokenStore().revokeToken(tokenInfo.tokenUuid);\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.changeApiToken();\n        assertTrue(monitor.isActivated());\n    }\n","date":"2020-10-06 06:07:30","endLine":90,"groupId":"10668","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"isActive","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/8e/2e712c6d6433126aa10cb5f9898d095c2817da.src","preCode":"    public void isActive() throws Exception {\n        ApiTokenPropertyConfiguration config = ApiTokenPropertyConfiguration.get();\n        config.setCreationOfLegacyTokenEnabled(true);\n        config.setTokenGenerationOnCreationEnabled(false);\n        \n        \r\n        User user = User.getById(\"user\", true);\n        ApiTokenProperty apiTokenProperty = user.getProperty(ApiTokenProperty.class);\n        assertFalse(apiTokenProperty.hasLegacyToken());\n        \n        LegacyApiTokenAdministrativeMonitor monitor = j.jenkins.getExtensionList(AdministrativeMonitor.class).get(LegacyApiTokenAdministrativeMonitor.class);\n        assertFalse(monitor.isActivated());\n        \n        ApiTokenStore.TokenUuidAndPlainValue tokenInfo = apiTokenProperty.getTokenStore().generateNewToken(\"Not Legacy\");\n        \r\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.getTokenStore().revokeToken(tokenInfo.tokenUuid);\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.changeApiToken();\n        assertTrue(monitor.isActivated());\n    }\n","realPath":"test/src/test/java/jenkins/security/apitoken/LegacyApiTokenAdministrativeMonitorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2018-08-13 18:55:27","commitOrder":3,"curCode":"    public void takeCareOfUserWithIdNull() throws Exception {\n        ApiTokenPropertyConfiguration config = ApiTokenPropertyConfiguration.get();\n        config.setCreationOfLegacyTokenEnabled(true);\n        config.setTokenGenerationOnCreationEnabled(false);\n        \n        \r\n        User user = User.getById(\"null\", true);\n        ApiTokenProperty apiTokenProperty = user.getProperty(ApiTokenProperty.class);\n        assertFalse(apiTokenProperty.hasLegacyToken());\n        \n        LegacyApiTokenAdministrativeMonitor monitor = j.jenkins.getExtensionList(AdministrativeMonitor.class).get(LegacyApiTokenAdministrativeMonitor.class);\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.changeApiToken();\n        assertTrue(monitor.isActivated());\n        \n        {\r\n            JenkinsRule.WebClient wc = j.createWebClient();\n            \n            HtmlPage page = wc.goTo(monitor.getUrl() + \"/manage\");\n            {\r\n                HtmlAnchor filterAll = getFilterByIndex(page, SelectFilter.ALL);\n                HtmlElementUtil.click(filterAll);\n            }\n            \r\n            HtmlButton revokeSelected = getRevokeSelected(page);\n            HtmlElementUtil.click(revokeSelected);\n        }\n        \n        assertFalse(monitor.isActivated());\n    }\n","date":"2018-08-13 18:55:27","endLine":124,"groupId":"10668","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"takeCareOfUserWithIdNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/7f/bea41d0bfe334fa9c5fae542c685d7d86c37e2.src","preCode":"    public void takeCareOfUserWithIdNull() throws Exception {\n        ApiTokenPropertyConfiguration config = ApiTokenPropertyConfiguration.get();\n        config.setCreationOfLegacyTokenEnabled(true);\n        config.setTokenGenerationOnCreationEnabled(false);\n        \n        \r\n        User user = User.getById(\"null\", true);\n        ApiTokenProperty apiTokenProperty = user.getProperty(ApiTokenProperty.class);\n        assertFalse(apiTokenProperty.hasLegacyToken());\n        \n        LegacyApiTokenAdministrativeMonitor monitor = j.jenkins.getExtensionList(AdministrativeMonitor.class).get(LegacyApiTokenAdministrativeMonitor.class);\n        assertFalse(monitor.isActivated());\n        \n        apiTokenProperty.changeApiToken();\n        assertTrue(monitor.isActivated());\n        \n        {\r\n            JenkinsRule.WebClient wc = j.createWebClient();\n            \n            HtmlPage page = wc.goTo(monitor.getUrl() + \"/manage\");\n            {\r\n                HtmlAnchor filterAll = getFilterByIndex(page, SelectFilter.ALL);\n                HtmlElementUtil.click(filterAll);\n            }\n            \r\n            HtmlButton revokeSelected = getRevokeSelected(page);\n            HtmlElementUtil.click(revokeSelected);\n        }\n        \n        assertFalse(monitor.isActivated());\n    }\n","realPath":"test/src/test/java/jenkins/security/apitoken/LegacyApiTokenAdministrativeMonitorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"N"}],"commitId":"eb0876cdb981a83c9f4c6f07d1eede585614612a","commitMessage":"@@@[JENKINS-57484] Improving the scripting capacity for the API Tokens (#4027)\n\n* [JENKINS-57484] Improving the scripting capacity for the API Tokens\n\n* Modification after review\n\n* Add `@Restricted` as proposed by Daniel\n\n- Also remove some whitespace modifications that were not required\n\n* Method already present.  revert the annotation addition\n\n* Adjustment after merge conflict + cleanup\n\n- Nonnull to NonNull\n- Immutable is illegal :(\n- Mistake in WhoAmITest\n\n* Adding revokeToken + unit test for scripting\n\n* Adding comment for system property not set + recommendation about revocation\n\n* Update core/src/main/java/jenkins/install/SetupWizard.java\n\nCo-authored-by: Jeff Thompson <37345299+jeffret-b@users.noreply.github.com>\n\nCo-authored-by: Jeff Thompson <37345299+jeffret-b@users.noreply.github.com>","date":"2020-10-06 06:07:30","modifiedFileCount":"7","status":"M","submitter":"Wadeck Follonier"}]
