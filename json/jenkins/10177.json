[{"authorTime":"2014-01-30 05:49:32","codes":[{"authorDate":"2014-01-30 05:49:32","commitOrder":1,"curCode":"    public void online() throws Exception {\n        CLICommandInvoker command = new CLICommandInvoker(j, \"online-node\");\n\n        Slave slave = j.createSlave();\n        assertTrue(slave.toComputer().isOffline());\n\n        Result result = command.authorizedTo(Jenkins.READ, Computer.CONNECT)\n                .invokeWithArgs(slave.getNodeName())\n        ;\n\n        assertThat(result, succeededSilently());\n        slave.toComputer().waitUntilOnline();\n        assertTrue(slave.toComputer().isOnline());\n    }\n","date":"2014-01-30 05:49:32","endLine":79,"groupId":"893","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"online","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f7/26454b6cf629db5c23fa87f0571f869340a531.src","preCode":"    public void online() throws Exception {\n        CLICommandInvoker command = new CLICommandInvoker(j, \"online-node\");\n\n        Slave slave = j.createSlave();\n        assertTrue(slave.toComputer().isOffline());\n\n        Result result = command.authorizedTo(Jenkins.READ, Computer.CONNECT)\n                .invokeWithArgs(slave.getNodeName())\n        ;\n\n        assertThat(result, succeededSilently());\n        slave.toComputer().waitUntilOnline();\n        assertTrue(slave.toComputer().isOnline());\n    }\n","realPath":"test/src/test/java/hudson/cli/ComputerStateTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"},{"authorDate":"2014-01-30 05:49:32","commitOrder":1,"curCode":"    public void disconnect() throws Exception {\n        CLICommandInvoker command = new CLICommandInvoker(j, \"disconnect-node\");\n\n        Slave slave = j.createOnlineSlave();\n        assertTrue(slave.toComputer().isOnline());\n\n        Result result = command.authorizedTo(Jenkins.READ, Computer.DISCONNECT)\n                .invokeWithArgs(slave.getNodeName(), \"-m\", \"Custom cause message\")\n        ;\n\n        assertThat(result, succeededSilently());\n        assertTrue(slave.toComputer().isOffline());\n\n        UserCause cause = (UserCause) slave.toComputer().getOfflineCause();\n        assertThat(cause.toString(), endsWith(\"Custom cause message\"));\n        assertThat(cause.getUser(), equalTo(command.user()));\n    }\n","date":"2014-01-30 05:49:32","endLine":98,"groupId":"621","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"disconnect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f7/26454b6cf629db5c23fa87f0571f869340a531.src","preCode":"    public void disconnect() throws Exception {\n        CLICommandInvoker command = new CLICommandInvoker(j, \"disconnect-node\");\n\n        Slave slave = j.createOnlineSlave();\n        assertTrue(slave.toComputer().isOnline());\n\n        Result result = command.authorizedTo(Jenkins.READ, Computer.DISCONNECT)\n                .invokeWithArgs(slave.getNodeName(), \"-m\", \"Custom cause message\")\n        ;\n\n        assertThat(result, succeededSilently());\n        assertTrue(slave.toComputer().isOffline());\n\n        UserCause cause = (UserCause) slave.toComputer().getOfflineCause();\n        assertThat(cause.toString(), endsWith(\"Custom cause message\"));\n        assertThat(cause.getUser(), equalTo(command.user()));\n    }\n","realPath":"test/src/test/java/hudson/cli/ComputerStateTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"}],"commitId":"150b8de997e058d2ba996c7a553555c01876188b","commitMessage":"@@@Merge pull request #1103 from olivergondza/refactor-offline-cause\n\nIntroduce `OfflineCause.UserCause`\n","date":"2014-01-30 05:49:32","modifiedFileCount":"5","status":"B","submitter":"Oliver Gond?a"},{"authorTime":"2021-06-01 13:02:48","codes":[{"authorDate":"2014-01-30 05:49:32","commitOrder":2,"curCode":"    public void online() throws Exception {\n        CLICommandInvoker command = new CLICommandInvoker(j, \"online-node\");\n\n        Slave slave = j.createSlave();\n        assertTrue(slave.toComputer().isOffline());\n\n        Result result = command.authorizedTo(Jenkins.READ, Computer.CONNECT)\n                .invokeWithArgs(slave.getNodeName())\n        ;\n\n        assertThat(result, succeededSilently());\n        slave.toComputer().waitUntilOnline();\n        assertTrue(slave.toComputer().isOnline());\n    }\n","date":"2014-01-30 05:49:32","endLine":79,"groupId":"10177","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"online","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f7/26454b6cf629db5c23fa87f0571f869340a531.src","preCode":"    public void online() throws Exception {\n        CLICommandInvoker command = new CLICommandInvoker(j, \"online-node\");\n\n        Slave slave = j.createSlave();\n        assertTrue(slave.toComputer().isOffline());\n\n        Result result = command.authorizedTo(Jenkins.READ, Computer.CONNECT)\n                .invokeWithArgs(slave.getNodeName())\n        ;\n\n        assertThat(result, succeededSilently());\n        slave.toComputer().waitUntilOnline();\n        assertTrue(slave.toComputer().isOnline());\n    }\n","realPath":"test/src/test/java/hudson/cli/ComputerStateTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"},{"authorDate":"2021-06-01 13:02:48","commitOrder":2,"curCode":"    public void disconnect() throws Exception {\n        CLICommandInvoker command = new CLICommandInvoker(j, \"disconnect-node\");\n\n        Slave slave = j.createOnlineSlave();\n        assertTrue(slave.toComputer().isOnline());\n\n        Result result = command.authorizedTo(Jenkins.READ, Computer.DISCONNECT)\n                .invokeWithArgs(slave.getNodeName(), \"-m\", \"Custom cause message\")\n        ;\n\n        assertThat(result, succeededSilently());\n        assertTrue(slave.toComputer().isOffline());\n\n        OfflineCause.UserCause cause = (OfflineCause.UserCause) slave.toComputer().getOfflineCause();\n        assertThat(cause.toString(), endsWith(\"Custom cause message\"));\n        assertThat(cause.getUser(), equalTo(command.user()));\n    }\n","date":"2021-06-01 13:02:48","endLine":107,"groupId":"10177","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"disconnect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ec/140bdf7d93a405cc38e65998e9a361ea89dc69.src","preCode":"    public void disconnect() throws Exception {\n        CLICommandInvoker command = new CLICommandInvoker(j, \"disconnect-node\");\n\n        Slave slave = j.createOnlineSlave();\n        assertTrue(slave.toComputer().isOnline());\n\n        Result result = command.authorizedTo(Jenkins.READ, Computer.DISCONNECT)\n                .invokeWithArgs(slave.getNodeName(), \"-m\", \"Custom cause message\")\n        ;\n\n        assertThat(result, succeededSilently());\n        assertTrue(slave.toComputer().isOffline());\n\n        UserCause cause = (UserCause) slave.toComputer().getOfflineCause();\n        assertThat(cause.toString(), endsWith(\"Custom cause message\"));\n        assertThat(cause.getUser(), equalTo(command.user()));\n    }\n","realPath":"test/src/test/java/hudson/cli/ComputerStateTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"9f9ed7b60db1bc67210f1f4368f8ace218a5b9c0","commitMessage":"@@@Fix `BadImport` Error Prone violations (#5510)\n\n* Fix `BadImport` Error Prone violations\n\n* Fix Javadoc","date":"2021-06-01 13:02:48","modifiedFileCount":"39","status":"M","submitter":"Basil Crow"}]
