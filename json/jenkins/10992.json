[{"authorTime":"2009-03-23 11:26:55","codes":[{"authorDate":"2009-03-23 11:26:55","commitOrder":1,"curCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2009-03-23 11:26:55","endLine":1392,"groupId":"6364","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFileMask","params":"(Stringvalue@booleanerrorIfNotExist)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/24/2c0d3ec87b92ef0164f11a9afaa6090bd5177a.src","preCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1377,"status":"B"},{"authorDate":"2009-03-23 11:26:55","commitOrder":1,"curCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null || (AbstractProject<?,?>)subject ==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(\"Wildcard is not allowed here\");\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(value+\" is not a file\");\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(value+\" is not a directory\");\n                }\n            }\n\n            String msg = \"No such \"+(expectingFile?\"file\":\"directory\")+\": \" + value;\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2009-03-23 11:26:55","endLine":1442,"groupId":"9470","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"validateRelativePath","params":"(Stringvalue@booleanerrorIfNotExist@booleanexpectingFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/24/2c0d3ec87b92ef0164f11a9afaa6090bd5177a.src","preCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null || (AbstractProject<?,?>)subject ==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(\"Wildcard is not allowed here\");\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(value+\" is not a file\");\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(value+\" is not a directory\");\n                }\n            }\n\n            String msg = \"No such \"+(expectingFile?\"file\":\"directory\")+\": \" + value;\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1405,"status":"B"}],"commitId":"f27e2b5c8a5182b9bf03680d473d109bcf268bda","commitMessage":"@@@Using new form validation code\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16462 71c3de6d-444a-0410-be80-ed276b4c234a\n","date":"2009-03-23 11:26:55","modifiedFileCount":"28","status":"B","submitter":"kohsuke"},{"authorTime":"2009-07-11 06:17:23","codes":[{"authorDate":"2009-03-23 11:26:55","commitOrder":2,"curCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2009-03-23 11:26:55","endLine":1392,"groupId":"6364","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFileMask","params":"(Stringvalue@booleanerrorIfNotExist)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/24/2c0d3ec87b92ef0164f11a9afaa6090bd5177a.src","preCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1377,"status":"N"},{"authorDate":"2009-07-11 06:17:23","commitOrder":2,"curCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null || (AbstractProject<?,?>)subject ==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2009-07-11 06:17:23","endLine":1914,"groupId":"8154","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"validateRelativePath","params":"(Stringvalue@booleanerrorIfNotExist@booleanexpectingFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/8b/13318491bad457c5c7f0141b8f67a38ede41d2.src","preCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null || (AbstractProject<?,?>)subject ==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(\"Wildcard is not allowed here\");\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(value+\" is not a file\");\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(value+\" is not a directory\");\n                }\n            }\n\n            String msg = \"No such \"+(expectingFile?\"file\":\"directory\")+\": \" + value;\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1876,"status":"M"}],"commitId":"1943d19031e59268fb5a7e4239abdbba5025817b","commitMessage":"@@@I18N & Japanese localization\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@19594 71c3de6d-444a-0410-be80-ed276b4c234a\n","date":"2009-07-11 06:17:23","modifiedFileCount":"1","status":"M","submitter":"sogabe"},{"authorTime":"2009-07-11 06:17:23","codes":[{"authorDate":"2009-09-23 07:18:27","commitOrder":3,"curCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2009-09-23 07:18:27","endLine":1925,"groupId":"6364","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFileMask","params":"(Stringvalue@booleanerrorIfNotExist)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/89/b008ba4d3dc19b16192e5555d0bf22874ec947.src","preCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1907,"status":"M"},{"authorDate":"2009-07-11 06:17:23","commitOrder":3,"curCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null || (AbstractProject<?,?>)subject ==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2009-07-11 06:17:23","endLine":1914,"groupId":"8154","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"validateRelativePath","params":"(Stringvalue@booleanerrorIfNotExist@booleanexpectingFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/8b/13318491bad457c5c7f0141b8f67a38ede41d2.src","preCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null || (AbstractProject<?,?>)subject ==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1876,"status":"N"}],"commitId":"f9a028402526c4b94fb0654398891cab8353c915","commitMessage":"@@@Add permission check in FilePath.validateFileMask. \nand add note in javadoc for check already done in validateRelativePath.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@22026 71c3de6d-444a-0410-be80-ed276b4c234a\n","date":"2009-09-23 07:18:27","modifiedFileCount":"1","status":"M","submitter":"mindless"},{"authorTime":"2011-02-10 23:30:33","codes":[{"authorDate":"2009-09-23 07:18:27","commitOrder":4,"curCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2009-09-23 07:18:27","endLine":1925,"groupId":"6364","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFileMask","params":"(Stringvalue@booleanerrorIfNotExist)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/89/b008ba4d3dc19b16192e5555d0bf22874ec947.src","preCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1907,"status":"N"},{"authorDate":"2011-02-10 23:30:33","commitOrder":4,"curCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2011-02-10 23:30:33","endLine":1853,"groupId":"8154","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"validateRelativePath","params":"(Stringvalue@booleanerrorIfNotExist@booleanexpectingFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/98/32b377d07e4ff7ab3e3276b81a006b434ba581.src","preCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null || (AbstractProject<?,?>)subject ==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1815,"status":"M"}],"commitId":"24eb579d0c7710d0360c13d032386475938135ec","commitMessage":"@@@Merge branch 'master' of https://github.com/mpeltonen/jenkins\n\nAnd fix my previous bad push.\nI apologize folks !! my bad :-(\n\nConflicts:\n\tchangelog.html\n\ttest/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java\n","date":"2011-02-10 23:30:33","modifiedFileCount":"33","status":"M","submitter":"Olivier Lamy"},{"authorTime":"2011-02-16 08:38:50","codes":[{"authorDate":"2011-02-16 08:38:50","commitOrder":5,"curCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2011-02-16 08:38:50","endLine":1802,"groupId":"6364","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFileMask","params":"(Stringvalue@booleanerrorIfNotExist)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/84/184eaeff1259d681198fc76b464e79d08842c5.src","preCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1785,"status":"M"},{"authorDate":"2011-02-16 08:38:50","commitOrder":5,"curCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2011-02-16 08:38:50","endLine":1854,"groupId":"8154","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"validateRelativePath","params":"(Stringvalue@booleanerrorIfNotExist@booleanexpectingFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/84/184eaeff1259d681198fc76b464e79d08842c5.src","preCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        AbstractProject subject = Stapler.getCurrentRequest().findAncestorObject(AbstractProject.class);\n        subject.checkPermission(Item.CONFIGURE);\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1817,"status":"M"}],"commitId":"ebf4146584d8ae729c66323546ea21bc3c2ecbcb","commitMessage":"@@@[FIXED JENKINS-8802] Allow use of FilePath.validateFileMask and validateFilePath\nfrom global level (not in a job config page).  Require admin permission for this.\nBased on patch from bap.\n","date":"2011-02-16 08:38:50","modifiedFileCount":"1","status":"M","submitter":"alanharder"},{"authorTime":"2011-02-16 08:38:50","codes":[{"authorDate":"2012-09-20 04:43:20","commitOrder":6,"curCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value, 10000);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok(Messages.FilePath_did_not_manage_to_validate_may_be_too_sl(value));\n        }\n    }\n","date":"2012-09-20 04:43:20","endLine":2170,"groupId":"5673","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFileMask","params":"(Stringvalue@booleanerrorIfNotExist)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/8c/771dcdd1a45c4590967b741a745a96bf3bdbe4.src","preCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":2153,"status":"M"},{"authorDate":"2011-02-16 08:38:50","commitOrder":6,"curCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2011-02-16 08:38:50","endLine":1854,"groupId":"8154","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"validateRelativePath","params":"(Stringvalue@booleanerrorIfNotExist@booleanexpectingFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/84/184eaeff1259d681198fc76b464e79d08842c5.src","preCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1817,"status":"N"}],"commitId":"a885cc2179ea76bced186c3ed223ce50fec58a75","commitMessage":"@@@[FIXED JENKINS-7214] FilePath.validateAntFileMask too slow for /configure.","date":"2012-09-20 04:43:20","modifiedFileCount":"3","status":"M","submitter":"Jesse Glick"},{"authorTime":"2011-02-16 08:38:50","codes":[{"authorDate":"2014-11-24 23:37:58","commitOrder":7,"curCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value, VALIDATE_ANT_FILE_MASK_BOUND);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok(Messages.FilePath_did_not_manage_to_validate_may_be_too_sl(value));\n        }\n    }\n","date":"2014-11-24 23:37:58","endLine":2533,"groupId":"5174","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFileMask","params":"(Stringvalue@booleanerrorIfNotExist)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/74/760a428837196561c45e208655dbba31d6448b.src","preCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value, 10000);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok(Messages.FilePath_did_not_manage_to_validate_may_be_too_sl(value));\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":2516,"status":"M"},{"authorDate":"2011-02-16 08:38:50","commitOrder":7,"curCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2011-02-16 08:38:50","endLine":1854,"groupId":"8154","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"validateRelativePath","params":"(Stringvalue@booleanerrorIfNotExist@booleanexpectingFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/84/184eaeff1259d681198fc76b464e79d08842c5.src","preCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1817,"status":"N"}],"commitId":"534328b264f9338e48418d2bcc0d28daaf48b3a0","commitMessage":"@@@[FIXED JENKINS-25759] Avoid consuming too much memory while running validateAntFileMask.\nNot fully solved.  since the scannedDirs field can still grow to be large.  but at least clearing files/dirsNotIncluded.\nAlso imposing a 5s timeout on the scan regardless of file count.  and defining a user-customizable bound.","date":"2014-11-24 23:37:58","modifiedFileCount":"4","status":"M","submitter":"Jesse Glick"},{"authorTime":"2011-02-16 08:38:50","codes":[{"authorDate":"2015-11-05 07:23:56","commitOrder":8,"curCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist, boolean caseSensitive) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value, VALIDATE_ANT_FILE_MASK_BOUND, caseSensitive);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok(Messages.FilePath_did_not_manage_to_validate_may_be_too_sl(value));\n        }\n    }\n","date":"2015-11-05 07:23:56","endLine":2576,"groupId":"10992","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"validateFileMask","params":"(Stringvalue@booleanerrorIfNotExist@booleancaseSensitive)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3c/6303733dd89fc45f35ef38b08d7f45662bccd4.src","preCode":"    public FormValidation validateFileMask(String value, boolean errorIfNotExist) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n        if(value==null)\n            return FormValidation.ok();\n\n        try {\n            if(!exists()) \r\n                return FormValidation.ok();\n\n            String msg = validateAntFileMask(value, VALIDATE_ANT_FILE_MASK_BOUND);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok(Messages.FilePath_did_not_manage_to_validate_may_be_too_sl(value));\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":2559,"status":"M"},{"authorDate":"2011-02-16 08:38:50","commitOrder":8,"curCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","date":"2011-02-16 08:38:50","endLine":1854,"groupId":"10992","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"validateRelativePath","params":"(Stringvalue@booleanerrorIfNotExist@booleanexpectingFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/84/184eaeff1259d681198fc76b464e79d08842c5.src","preCode":"    public FormValidation validateRelativePath(String value, boolean errorIfNotExist, boolean expectingFile) throws IOException {\n        checkPermissionForValidate();\n\n        value = fixEmpty(value);\n\n        \r\n        if(value==null) return FormValidation.ok();\n\n        \r\n        if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());\n\n        try {\n            if(!exists())    \r\n                return FormValidation.ok();\n\n            FilePath path = child(value);\n            if(path.exists()) {\n                if (expectingFile) {\n                    if(!path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notFile(value));\n                } else {\n                    if(path.isDirectory())\n                        return FormValidation.ok();\n                    else\n                        return FormValidation.error(Messages.FilePath_validateRelativePath_notDirectory(value));\n                }\n            }\n\n            String msg = expectingFile ? Messages.FilePath_validateRelativePath_noSuchFile(value) : \n                Messages.FilePath_validateRelativePath_noSuchDirectory(value);\n            if(errorIfNotExist)     return FormValidation.error(msg);\n            else                    return FormValidation.warning(msg);\n        } catch (InterruptedException e) {\n            return FormValidation.ok();\n        }\n    }\n","realPath":"core/src/main/java/hudson/FilePath.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1817,"status":"N"}],"commitId":"b2139cc8d3e3f8de61e67407a5f0e3686151272b","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2015-11-05 07:23:56","modifiedFileCount":"97","status":"M","submitter":"Jesse Glick"}]
