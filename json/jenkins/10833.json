[{"authorTime":"2018-11-23 07:19:45","codes":[{"authorDate":"2018-11-23 07:19:45","commitOrder":1,"curCode":"    public void failedActionWithAllowedExceptionByInheritanceTest() throws Exception {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new ArrayIndexOutOfBoundsException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .withDuringActionExceptionListener((attempt, exception) -> true)\n                \r\n                .build();\n\n        \r\n        Boolean finalResult = r.start();\n        Assert.assertTrue(finalResult == null ? false : finalResult);\n\n        \r\n        String textSuccess = Messages.Retrier_Success(ACTION, ATTEMPTS);\n        assertTrue(String.format(\"The log should contain '%s'\", textSuccess), handler.getView().stream().anyMatch(m -> m.getMessage().contains(textSuccess)));\n\n        \r\n        String testException = Messages.Retrier_ExceptionFailed(ATTEMPTS, ACTION);\n        assertTrue(String.format(\"The log should contain '%s'\", testException), handler.getView().stream().anyMatch(m -> m.getMessage().startsWith(testException)));\n    }\n","date":"2018-11-23 07:19:45","endLine":277,"groupId":"7125","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"failedActionWithAllowedExceptionByInheritanceTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c1/66a54e0b0e8dfb4cb827c8f1d67553976b57be.src","preCode":"    public void failedActionWithAllowedExceptionByInheritanceTest() throws Exception {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new ArrayIndexOutOfBoundsException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .withDuringActionExceptionListener((attempt, exception) -> true)\n                \r\n                .build();\n\n        \r\n        Boolean finalResult = r.start();\n        Assert.assertTrue(finalResult == null ? false : finalResult);\n\n        \r\n        String textSuccess = Messages.Retrier_Success(ACTION, ATTEMPTS);\n        assertTrue(String.format(\"The log should contain '%s'\", textSuccess), handler.getView().stream().anyMatch(m -> m.getMessage().contains(textSuccess)));\n\n        \r\n        String testException = Messages.Retrier_ExceptionFailed(ATTEMPTS, ACTION);\n        assertTrue(String.format(\"The log should contain '%s'\", testException), handler.getView().stream().anyMatch(m -> m.getMessage().startsWith(testException)));\n    }\n","realPath":"core/src/test/java/hudson/util/RetrierTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"},{"authorDate":"2018-11-23 07:19:45","commitOrder":1,"curCode":"    public void failedActionWithUnAllowedExceptionTest() {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new IOException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .build();\n\n        \r\n        try {\n            r.start();\n            fail(\"The process should be exited with an unexpected exception\");\n        } catch (IOException e) {\n            String testFailure = Messages.Retrier_ExceptionThrown(ATTEMPTS, ACTION);\n            assertTrue(String.format(\"The log should contain '%s'\", testFailure), handler.getView().stream().anyMatch(m -> m.getMessage().contains(testFailure)));\n        } catch (Exception e) {\n            fail(String.format(\"Unexpected exception: %s\", e));\n        }\n    }\n","date":"2018-11-23 07:19:45","endLine":318,"groupId":"7125","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"failedActionWithUnAllowedExceptionTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c1/66a54e0b0e8dfb4cb827c8f1d67553976b57be.src","preCode":"    public void failedActionWithUnAllowedExceptionTest() {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new IOException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .build();\n\n        \r\n        try {\n            r.start();\n            fail(\"The process should be exited with an unexpected exception\");\n        } catch (IOException e) {\n            String testFailure = Messages.Retrier_ExceptionThrown(ATTEMPTS, ACTION);\n            assertTrue(String.format(\"The log should contain '%s'\", testFailure), handler.getView().stream().anyMatch(m -> m.getMessage().contains(testFailure)));\n        } catch (Exception e) {\n            fail(String.format(\"Unexpected exception: %s\", e));\n        }\n    }\n","realPath":"core/src/test/java/hudson/util/RetrierTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"B"}],"commitId":"896356a03893c300361dd8a3acc3b83f926301b7","commitMessage":"@@@Merge commit '8d429ff13b2013ff0b390d59f9c8a7674e6d24a1' into security-master\n","date":"2018-11-23 07:19:45","modifiedFileCount":"5","status":"B","submitter":"Daniel Beck"},{"authorTime":"2018-11-23 07:19:45","codes":[{"authorDate":"2021-05-07 16:35:52","commitOrder":2,"curCode":"    public void failedActionWithAllowedExceptionByInheritanceTest() throws Exception {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new ArrayIndexOutOfBoundsException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .withDuringActionExceptionListener((attempt, exception) -> true)\n                \r\n                .build();\n\n        \r\n        Boolean finalResult = r.start();\n        Assert.assertTrue(finalResult != null && finalResult);\n\n        \r\n        String textSuccess = Messages.Retrier_Success(ACTION, ATTEMPTS);\n        assertTrue(String.format(\"The log should contain '%s'\", textSuccess), handler.getView().stream().anyMatch(m -> m.getMessage().contains(textSuccess)));\n\n        \r\n        String testException = Messages.Retrier_ExceptionFailed(ATTEMPTS, ACTION);\n        assertTrue(String.format(\"The log should contain '%s'\", testException), handler.getView().stream().anyMatch(m -> m.getMessage().startsWith(testException)));\n    }\n","date":"2021-05-07 16:35:52","endLine":277,"groupId":"7125","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"failedActionWithAllowedExceptionByInheritanceTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a1/3519e1e710b51cc1cd5cae6a4beb07bdc693ee.src","preCode":"    public void failedActionWithAllowedExceptionByInheritanceTest() throws Exception {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new ArrayIndexOutOfBoundsException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .withDuringActionExceptionListener((attempt, exception) -> true)\n                \r\n                .build();\n\n        \r\n        Boolean finalResult = r.start();\n        Assert.assertTrue(finalResult == null ? false : finalResult);\n\n        \r\n        String textSuccess = Messages.Retrier_Success(ACTION, ATTEMPTS);\n        assertTrue(String.format(\"The log should contain '%s'\", textSuccess), handler.getView().stream().anyMatch(m -> m.getMessage().contains(textSuccess)));\n\n        \r\n        String testException = Messages.Retrier_ExceptionFailed(ATTEMPTS, ACTION);\n        assertTrue(String.format(\"The log should contain '%s'\", testException), handler.getView().stream().anyMatch(m -> m.getMessage().startsWith(testException)));\n    }\n","realPath":"core/src/test/java/hudson/util/RetrierTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"},{"authorDate":"2018-11-23 07:19:45","commitOrder":2,"curCode":"    public void failedActionWithUnAllowedExceptionTest() {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new IOException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .build();\n\n        \r\n        try {\n            r.start();\n            fail(\"The process should be exited with an unexpected exception\");\n        } catch (IOException e) {\n            String testFailure = Messages.Retrier_ExceptionThrown(ATTEMPTS, ACTION);\n            assertTrue(String.format(\"The log should contain '%s'\", testFailure), handler.getView().stream().anyMatch(m -> m.getMessage().contains(testFailure)));\n        } catch (Exception e) {\n            fail(String.format(\"Unexpected exception: %s\", e));\n        }\n    }\n","date":"2018-11-23 07:19:45","endLine":318,"groupId":"7125","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"failedActionWithUnAllowedExceptionTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c1/66a54e0b0e8dfb4cb827c8f1d67553976b57be.src","preCode":"    public void failedActionWithUnAllowedExceptionTest() {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new IOException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .build();\n\n        \r\n        try {\n            r.start();\n            fail(\"The process should be exited with an unexpected exception\");\n        } catch (IOException e) {\n            String testFailure = Messages.Retrier_ExceptionThrown(ATTEMPTS, ACTION);\n            assertTrue(String.format(\"The log should contain '%s'\", testFailure), handler.getView().stream().anyMatch(m -> m.getMessage().contains(testFailure)));\n        } catch (Exception e) {\n            fail(String.format(\"Unexpected exception: %s\", e));\n        }\n    }\n","realPath":"core/src/test/java/hudson/util/RetrierTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"N"}],"commitId":"deb3a82d01d8440934a563c492483bbd155fe4ba","commitMessage":"@@@Merge pull request #5458 from StefanSpieker/unneeded_throws\n\n","date":"2021-05-07 16:35:52","modifiedFileCount":"23","status":"M","submitter":"Tim Jacomb"},{"authorTime":"2021-07-17 04:59:36","codes":[{"authorDate":"2021-05-07 16:35:52","commitOrder":3,"curCode":"    public void failedActionWithAllowedExceptionByInheritanceTest() throws Exception {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new ArrayIndexOutOfBoundsException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .withDuringActionExceptionListener((attempt, exception) -> true)\n                \r\n                .build();\n\n        \r\n        Boolean finalResult = r.start();\n        Assert.assertTrue(finalResult != null && finalResult);\n\n        \r\n        String textSuccess = Messages.Retrier_Success(ACTION, ATTEMPTS);\n        assertTrue(String.format(\"The log should contain '%s'\", textSuccess), handler.getView().stream().anyMatch(m -> m.getMessage().contains(textSuccess)));\n\n        \r\n        String testException = Messages.Retrier_ExceptionFailed(ATTEMPTS, ACTION);\n        assertTrue(String.format(\"The log should contain '%s'\", testException), handler.getView().stream().anyMatch(m -> m.getMessage().startsWith(testException)));\n    }\n","date":"2021-05-07 16:35:52","endLine":277,"groupId":"10833","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"failedActionWithAllowedExceptionByInheritanceTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a1/3519e1e710b51cc1cd5cae6a4beb07bdc693ee.src","preCode":"    public void failedActionWithAllowedExceptionByInheritanceTest() throws Exception {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new ArrayIndexOutOfBoundsException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .withDuringActionExceptionListener((attempt, exception) -> true)\n                \r\n                .build();\n\n        \r\n        Boolean finalResult = r.start();\n        Assert.assertTrue(finalResult != null && finalResult);\n\n        \r\n        String textSuccess = Messages.Retrier_Success(ACTION, ATTEMPTS);\n        assertTrue(String.format(\"The log should contain '%s'\", textSuccess), handler.getView().stream().anyMatch(m -> m.getMessage().contains(textSuccess)));\n\n        \r\n        String testException = Messages.Retrier_ExceptionFailed(ATTEMPTS, ACTION);\n        assertTrue(String.format(\"The log should contain '%s'\", testException), handler.getView().stream().anyMatch(m -> m.getMessage().startsWith(testException)));\n    }\n","realPath":"core/src/test/java/hudson/util/RetrierTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"N"},{"authorDate":"2021-07-17 04:59:36","commitOrder":3,"curCode":"    public void failedActionWithUnAllowedExceptionTest() {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new IOException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .build();\n\n        \r\n        assertThrows(\"The process should be exited with an unexpected exception\", IOException.class, r::start);\n        String testFailure = Messages.Retrier_ExceptionThrown(ATTEMPTS, ACTION);\n        assertTrue(String.format(\"The log should contain '%s'\", testFailure), handler.getView().stream().anyMatch(m -> m.getMessage().contains(testFailure)));\n    }\n","date":"2021-07-17 04:59:36","endLine":312,"groupId":"10833","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"failedActionWithUnAllowedExceptionTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/15/8c8111b3684bde858d547975ec453d77b903d8.src","preCode":"    public void failedActionWithUnAllowedExceptionTest() {\n        final int ATTEMPTS = 1;\n        final String ACTION = \"print\";\n\n        RingBufferLogHandler handler = new RingBufferLogHandler(20);\n        Logger.getLogger(Retrier.class.getName()).addHandler(handler);\n\n        Retrier<Boolean> r = new Retrier.Builder<>\n                \r\n                (\n                        \r\n                        (Callable<Boolean>) () -> {\n                            \r\n                            throw new IOException(\"Unallowed exception breaks the process\");\n                        },\n                        \r\n                        (currentAttempt, result) -> result,\n                        \r\n                        ACTION\n                )\n\n                \r\n                .withAttempts(ATTEMPTS)\n                \r\n                .withDuringActionExceptions(new Class[]{IndexOutOfBoundsException.class})\n                \r\n                .build();\n\n        \r\n        try {\n            r.start();\n            fail(\"The process should be exited with an unexpected exception\");\n        } catch (IOException e) {\n            String testFailure = Messages.Retrier_ExceptionThrown(ATTEMPTS, ACTION);\n            assertTrue(String.format(\"The log should contain '%s'\", testFailure), handler.getView().stream().anyMatch(m -> m.getMessage().contains(testFailure)));\n        } catch (Exception e) {\n            fail(String.format(\"Unexpected exception: %s\", e));\n        }\n    }\n","realPath":"core/src/test/java/hudson/util/RetrierTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":280,"status":"M"}],"commitId":"1d3ebab94ffbafd4532456be750035b2cfe276b9","commitMessage":"@@@Merge pull request #5619 from offa/exception_tests\n\nException tests modernized","date":"2021-07-17 04:59:36","modifiedFileCount":"16","status":"M","submitter":"Mark Waite"}]
