[{"authorTime":"2019-05-09 18:56:19","codes":[{"authorDate":"2019-05-09 18:56:19","commitOrder":1,"curCode":"    public void shouldStopLastBuild() throws Exception {\n        final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME);\n        project.scheduleBuild2(0).waitForStart();\n        final String stdout = runWith(Collections.singletonList(TEST_JOB_NAME)).stdout();\n\n        assertThat(stdout, equalTo(\"Build '#1' stopped for job 'jobName'\" + LN));\n\n        waitForLastBuildToStop(project);\n    }\n","date":"2019-05-09 18:56:19","endLine":68,"groupId":"3684","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldStopLastBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a0/9fa1a33769e5b917957d70cf5f85d128ef65fb.src","preCode":"    public void shouldStopLastBuild() throws Exception {\n        final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME);\n        project.scheduleBuild2(0).waitForStart();\n        final String stdout = runWith(Collections.singletonList(TEST_JOB_NAME)).stdout();\n\n        assertThat(stdout, equalTo(\"Build '#1' stopped for job 'jobName'\" + LN));\n\n        waitForLastBuildToStop(project);\n    }\n","realPath":"test/src/test/java/jenkins/cli/StopBuildsCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2019-05-09 18:56:19","commitOrder":1,"curCode":"    private void setupAndAssertTwoBuildsStop(final List<String> inputNames) throws Exception {\n        setupSlaveWithTwoExecutors();\n\n        final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME);\n        final FreeStyleProject project2 = createLongRunningProject(TEST_JOB_NAME_2);\n\n        project.scheduleBuild2(0).waitForStart();\n        project2.scheduleBuild2(0).waitForStart();\n\n        final String stdout = runWith(inputNames).stdout();\n\n        assertThat(stdout, equalTo(\"Build '#1' stopped for job 'jobName'\" + LN +\n                \"Build '#1' stopped for job 'jobName2'\" + LN));\n\n        waitForLastBuildToStop(project);\n        waitForLastBuildToStop(project2);\n    }\n","date":"2019-05-09 18:56:19","endLine":193,"groupId":"3688","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setupAndAssertTwoBuildsStop","params":"(finalList<String>inputNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a0/9fa1a33769e5b917957d70cf5f85d128ef65fb.src","preCode":"    private void setupAndAssertTwoBuildsStop(final List<String> inputNames) throws Exception {\n        setupSlaveWithTwoExecutors();\n\n        final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME);\n        final FreeStyleProject project2 = createLongRunningProject(TEST_JOB_NAME_2);\n\n        project.scheduleBuild2(0).waitForStart();\n        project2.scheduleBuild2(0).waitForStart();\n\n        final String stdout = runWith(inputNames).stdout();\n\n        assertThat(stdout, equalTo(\"Build '#1' stopped for job 'jobName'\" + LN +\n                \"Build '#1' stopped for job 'jobName2'\" + LN));\n\n        waitForLastBuildToStop(project);\n        waitForLastBuildToStop(project2);\n    }\n","realPath":"test/src/test/java/jenkins/cli/StopBuildsCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"B"}],"commitId":"86ea7b0028c232f298172bf1a7f2e1f03e6ab7a7","commitMessage":"@@@Merge commit '79171d0cb173717f2a03bf7aec4cd7f658c7d685' of git://github.com/jenkinsci/jenkins\n","date":"2019-05-09 18:56:19","modifiedFileCount":"30","status":"B","submitter":"Daniel Beck"},{"authorTime":"2019-07-03 01:06:17","codes":[{"authorDate":"2019-05-09 18:56:19","commitOrder":2,"curCode":"    public void shouldStopLastBuild() throws Exception {\n        final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME);\n        project.scheduleBuild2(0).waitForStart();\n        final String stdout = runWith(Collections.singletonList(TEST_JOB_NAME)).stdout();\n\n        assertThat(stdout, equalTo(\"Build '#1' stopped for job 'jobName'\" + LN));\n\n        waitForLastBuildToStop(project);\n    }\n","date":"2019-05-09 18:56:19","endLine":68,"groupId":"10584","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldStopLastBuild","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a0/9fa1a33769e5b917957d70cf5f85d128ef65fb.src","preCode":"    public void shouldStopLastBuild() throws Exception {\n        final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME);\n        project.scheduleBuild2(0).waitForStart();\n        final String stdout = runWith(Collections.singletonList(TEST_JOB_NAME)).stdout();\n\n        assertThat(stdout, equalTo(\"Build '#1' stopped for job 'jobName'\" + LN));\n\n        waitForLastBuildToStop(project);\n    }\n","realPath":"test/src/test/java/jenkins/cli/StopBuildsCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"},{"authorDate":"2019-07-03 01:06:17","commitOrder":2,"curCode":"    private void setupAndAssertTwoBuildsStop(final List<String> inputNames) throws Exception {\n        final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME);\n        final FreeStyleProject project2 = createLongRunningProject(TEST_JOB_NAME_2);\n\n        project.scheduleBuild2(0).waitForStart();\n        project2.scheduleBuild2(0).waitForStart();\n\n        final String stdout = runWith(inputNames).stdout();\n\n        assertThat(stdout, equalTo(\"Build '#1' stopped for job 'jobName'\" + LN +\n                \"Build '#1' stopped for job 'jobName2'\" + LN));\n\n        waitForLastBuildToStop(project);\n        waitForLastBuildToStop(project2);\n    }\n","date":"2019-07-03 01:06:17","endLine":187,"groupId":"10584","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setupAndAssertTwoBuildsStop","params":"(finalList<String>inputNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ac/4a6bb385c88262423df790b073956e844b2e86.src","preCode":"    private void setupAndAssertTwoBuildsStop(final List<String> inputNames) throws Exception {\n        setupSlaveWithTwoExecutors();\n\n        final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME);\n        final FreeStyleProject project2 = createLongRunningProject(TEST_JOB_NAME_2);\n\n        project.scheduleBuild2(0).waitForStart();\n        project2.scheduleBuild2(0).waitForStart();\n\n        final String stdout = runWith(inputNames).stdout();\n\n        assertThat(stdout, equalTo(\"Build '#1' stopped for job 'jobName'\" + LN +\n                \"Build '#1' stopped for job 'jobName2'\" + LN));\n\n        waitForLastBuildToStop(project);\n        waitForLastBuildToStop(project2);\n    }\n","realPath":"test/src/test/java/jenkins/cli/StopBuildsCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"d72041041acc3f887237e9d0da639a1587142320","commitMessage":"@@@Merge commit '36fa47add280b81c0e54c61dd7b7d015da5307c9' of github.com:jenkinsci/jenkins\n","date":"2019-07-03 01:06:17","modifiedFileCount":"39","status":"M","submitter":"Jeff Thompson"}]
