[{"authorTime":"2020-04-06 17:32:41","codes":[{"authorDate":"2020-04-06 17:32:41","commitOrder":1,"curCode":"    public final void checkCreatePermission(@NonNull ItemGroup c,\n                                            @NonNull TopLevelItemDescriptor d) {\n        Authentication a = Jenkins.getAuthentication();\n        if (a == SYSTEM) {\n            return;\n        }\n        if (!hasCreatePermission(a, c, d)) {\n            throw new AccessDeniedException(Messages.AccessDeniedException2_MissingPermission(a.getName(),\n                    Item.CREATE.group.title+\"/\"+Item.CREATE.name + Item.CREATE + \"/\" + d.getDisplayName()));\n        }\n    }\n","date":"2020-04-06 17:32:41","endLine":214,"groupId":"6080","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkCreatePermission","params":"(@NonNullItemGroupc@@NonNullTopLevelItemDescriptord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/4a/e5a3b3e0fcd805b43caa0c0d0b1ffaca03697e.src","preCode":"    public final void checkCreatePermission(@NonNull ItemGroup c,\n                                            @NonNull TopLevelItemDescriptor d) {\n        Authentication a = Jenkins.getAuthentication();\n        if (a == SYSTEM) {\n            return;\n        }\n        if (!hasCreatePermission(a, c, d)) {\n            throw new AccessDeniedException(Messages.AccessDeniedException2_MissingPermission(a.getName(),\n                    Item.CREATE.group.title+\"/\"+Item.CREATE.name + Item.CREATE + \"/\" + d.getDisplayName()));\n        }\n    }\n","realPath":"core/src/main/java/hudson/security/ACL.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"B"},{"authorDate":"2020-04-06 17:32:41","commitOrder":1,"curCode":"    public final void checkCreatePermission(@NonNull ViewGroup c,\n                                            @NonNull ViewDescriptor d) {\n        Authentication a = Jenkins.getAuthentication();\n        if (a == SYSTEM) {\n            return;\n        }\n        if (!hasCreatePermission(a, c, d)) {\n            throw new AccessDeniedException(Messages.AccessDeniedException2_MissingPermission(a.getName(),\n                    View.CREATE.group.title + \"/\" + View.CREATE.name + View.CREATE + \"/\" + d.getDisplayName()));\n        }\n    }\n","date":"2020-04-06 17:32:41","endLine":252,"groupId":"6758","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkCreatePermission","params":"(@NonNullViewGroupc@@NonNullViewDescriptord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/4a/e5a3b3e0fcd805b43caa0c0d0b1ffaca03697e.src","preCode":"    public final void checkCreatePermission(@NonNull ViewGroup c,\n                                            @NonNull ViewDescriptor d) {\n        Authentication a = Jenkins.getAuthentication();\n        if (a == SYSTEM) {\n            return;\n        }\n        if (!hasCreatePermission(a, c, d)) {\n            throw new AccessDeniedException(Messages.AccessDeniedException2_MissingPermission(a.getName(),\n                    View.CREATE.group.title + \"/\" + View.CREATE.name + View.CREATE + \"/\" + d.getDisplayName()));\n        }\n    }\n","realPath":"core/src/main/java/hudson/security/ACL.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"B"}],"commitId":"449c5aced523a6e66fe3d6a804e5dbfd5c5c67c6","commitMessage":"@@@Merge pull request #4604 from jtnord/kill-jsr-305\n\nKill jsr-305","date":"2020-04-06 17:32:41","modifiedFileCount":"352","status":"B","submitter":"Tim Jacomb"},{"authorTime":"2020-11-07 02:30:25","codes":[{"authorDate":"2020-11-07 02:30:25","commitOrder":2,"curCode":"    public final void checkCreatePermission(@NonNull ItemGroup c,\n                                            @NonNull TopLevelItemDescriptor d) {\n        Authentication a = Jenkins.getAuthentication2();\n        if (a.equals(SYSTEM2)) {\n            return;\n        }\n        if (!hasCreatePermission2(a, c, d)) {\n            throw new AccessDeniedException(Messages.AccessDeniedException2_MissingPermission(a.getName(),\n                    Item.CREATE.group.title+\"/\"+Item.CREATE.name + Item.CREATE + \"/\" + d.getDisplayName()));\n        }\n    }\n","date":"2020-11-07 02:30:25","endLine":241,"groupId":"11980","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkCreatePermission","params":"(@NonNullItemGroupc@@NonNullTopLevelItemDescriptord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e1/412e5809f64659da5e45aa548e11eab7e04c38.src","preCode":"    public final void checkCreatePermission(@NonNull ItemGroup c,\n                                            @NonNull TopLevelItemDescriptor d) {\n        Authentication a = Jenkins.getAuthentication();\n        if (a == SYSTEM) {\n            return;\n        }\n        if (!hasCreatePermission(a, c, d)) {\n            throw new AccessDeniedException(Messages.AccessDeniedException2_MissingPermission(a.getName(),\n                    Item.CREATE.group.title+\"/\"+Item.CREATE.name + Item.CREATE + \"/\" + d.getDisplayName()));\n        }\n    }\n","realPath":"core/src/main/java/hudson/security/ACL.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"},{"authorDate":"2020-11-07 02:30:25","commitOrder":2,"curCode":"    public final void checkCreatePermission(@NonNull ViewGroup c,\n                                            @NonNull ViewDescriptor d) {\n        Authentication a = Jenkins.getAuthentication2();\n        if (a.equals(SYSTEM2)) {\n            return;\n        }\n        if (!hasCreatePermission2(a, c, d)) {\n            throw new AccessDeniedException(Messages.AccessDeniedException2_MissingPermission(a.getName(),\n                    View.CREATE.group.title + \"/\" + View.CREATE.name + View.CREATE + \"/\" + d.getDisplayName()));\n        }\n    }\n","date":"2020-11-07 02:30:25","endLine":293,"groupId":"11980","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkCreatePermission","params":"(@NonNullViewGroupc@@NonNullViewDescriptord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e1/412e5809f64659da5e45aa548e11eab7e04c38.src","preCode":"    public final void checkCreatePermission(@NonNull ViewGroup c,\n                                            @NonNull ViewDescriptor d) {\n        Authentication a = Jenkins.getAuthentication();\n        if (a == SYSTEM) {\n            return;\n        }\n        if (!hasCreatePermission(a, c, d)) {\n            throw new AccessDeniedException(Messages.AccessDeniedException2_MissingPermission(a.getName(),\n                    View.CREATE.group.title + \"/\" + View.CREATE.name + View.CREATE + \"/\" + d.getDisplayName()));\n        }\n    }\n","realPath":"core/src/main/java/hudson/security/ACL.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"M"}],"commitId":"a9ca5ef3d4c97937636bf3c585f4232514279b14","commitMessage":"@@@[JEP-227] Replace Acegi Security with Spring Security & upgrade Spring Framework (#4848)\n\nReplacing Acegi Security with Spring Security\n\nCo-authored-by: Tim Jacomb <timjacomb1+github@gmail.com>\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>","date":"2020-11-07 02:30:25","modifiedFileCount":"149","status":"M","submitter":"Jesse Glick"}]
