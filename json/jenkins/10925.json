[{"authorTime":"2017-03-08 19:02:51","codes":[{"authorDate":"2017-03-08 19:02:51","commitOrder":1,"curCode":"    public void test_search_runs_by_build_number() throws IOException {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> runs = newRuns(23, 24);\n        List<Queue.Item> queueItems = newQueueItems(25, 26);\n        \r\n        historyPageFilter.setSearchString(\"23\");\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(23), historyPageFilter.runs.get(0).getEntryId());\n    }\n","date":"2017-03-08 19:02:51","endLine":326,"groupId":"5723","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"test_search_runs_by_build_number","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/96/49264d0a0fe36574c2fb05542d3c9d291968ce.src","preCode":"    public void test_search_runs_by_build_number() throws IOException {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> runs = newRuns(23, 24);\n        List<Queue.Item> queueItems = newQueueItems(25, 26);\n        \r\n        historyPageFilter.setSearchString(\"23\");\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(23), historyPageFilter.runs.get(0).getEntryId());\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":312,"status":"B"},{"authorDate":"2017-03-08 19:02:51","commitOrder":1,"curCode":"    private void assertOneMatchingBuildForGivenSearchStringAndRunItems(String searchString, List<ModelObject> runs) {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        \r\n        historyPageFilter.setSearchString(searchString);\n        \r\n        List<Queue.Item> queueItems = newQueueItems(3, 4);\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n    }\n","date":"2017-03-08 19:02:51","endLine":383,"groupId":"5721","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertOneMatchingBuildForGivenSearchStringAndRunItems","params":"(StringsearchString@List<ModelObject>runs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/96/49264d0a0fe36574c2fb05542d3c9d291968ce.src","preCode":"    private void assertOneMatchingBuildForGivenSearchStringAndRunItems(String searchString, List<ModelObject> runs) {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        \r\n        historyPageFilter.setSearchString(searchString);\n        \r\n        List<Queue.Item> queueItems = newQueueItems(3, 4);\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":369,"status":"B"}],"commitId":"62adfa8817615de85c9ad4b8ddf8f345002893bf","commitMessage":"@@@Merge pull request #2683 from szpak/feature/JENKINS-40718-searchByBuildParams\n\n[JENKINS-40718] Search by build params in build history widget","date":"2017-03-08 19:02:51","modifiedFileCount":"2","status":"B","submitter":"Daniel Beck"},{"authorTime":"2017-03-08 19:02:51","codes":[{"authorDate":"2021-03-01 20:24:23","commitOrder":2,"curCode":"    public void test_search_runs_by_build_number() throws IOException {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        Iterable<ModelObject> runs = newRuns(23, 24);\n        List<Queue.Item> queueItems = newQueueItems(25, 26);\n        \r\n        historyPageFilter.setSearchString(\"23\");\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(23), historyPageFilter.runs.get(0).getEntryId());\n    }\n","date":"2021-03-01 20:24:23","endLine":329,"groupId":"5723","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"test_search_runs_by_build_number","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/de/23275cb3a621bda01206b58f3daa98c1c84a62.src","preCode":"    public void test_search_runs_by_build_number() throws IOException {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> runs = newRuns(23, 24);\n        List<Queue.Item> queueItems = newQueueItems(25, 26);\n        \r\n        historyPageFilter.setSearchString(\"23\");\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(23), historyPageFilter.runs.get(0).getEntryId());\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"M"},{"authorDate":"2017-03-08 19:02:51","commitOrder":2,"curCode":"    private void assertOneMatchingBuildForGivenSearchStringAndRunItems(String searchString, List<ModelObject> runs) {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        \r\n        historyPageFilter.setSearchString(searchString);\n        \r\n        List<Queue.Item> queueItems = newQueueItems(3, 4);\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n    }\n","date":"2017-03-08 19:02:51","endLine":383,"groupId":"5721","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertOneMatchingBuildForGivenSearchStringAndRunItems","params":"(StringsearchString@List<ModelObject>runs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/96/49264d0a0fe36574c2fb05542d3c9d291968ce.src","preCode":"    private void assertOneMatchingBuildForGivenSearchStringAndRunItems(String searchString, List<ModelObject> runs) {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        \r\n        historyPageFilter.setSearchString(searchString);\n        \r\n        List<Queue.Item> queueItems = newQueueItems(3, 4);\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":369,"status":"N"}],"commitId":"1904cbb8b99c1712b777a09f2cd9f3f2d5de8a09","commitMessage":"@@@Merge pull request #5312 from basil/historyPageFilterTest\n\nReplace usages of deprecated jenkins.widgets.HistoryPageFilter.add(java.util.List) with non-deprecated jenkins.widgets.HistoryPageFilter.add(Iterable)","date":"2021-03-01 20:24:23","modifiedFileCount":"1","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2021-04-16 17:40:20","codes":[{"authorDate":"2021-03-01 20:24:23","commitOrder":3,"curCode":"    public void test_search_runs_by_build_number() throws IOException {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        Iterable<ModelObject> runs = newRuns(23, 24);\n        List<Queue.Item> queueItems = newQueueItems(25, 26);\n        \r\n        historyPageFilter.setSearchString(\"23\");\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(23), historyPageFilter.runs.get(0).getEntryId());\n    }\n","date":"2021-03-01 20:24:23","endLine":329,"groupId":"10925","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"test_search_runs_by_build_number","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/de/23275cb3a621bda01206b58f3daa98c1c84a62.src","preCode":"    public void test_search_runs_by_build_number() throws IOException {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        Iterable<ModelObject> runs = newRuns(23, 24);\n        List<Queue.Item> queueItems = newQueueItems(25, 26);\n        \r\n        historyPageFilter.setSearchString(\"23\");\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(23), historyPageFilter.runs.get(0).getEntryId());\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"N"},{"authorDate":"2021-04-16 17:40:20","commitOrder":3,"curCode":"    private void assertOneMatchingBuildForGivenSearchStringAndRunItems(String searchString, Iterable<ModelObject> runs) {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        \r\n        historyPageFilter.setSearchString(searchString);\n        \r\n        List<Queue.Item> queueItems = newQueueItems(3, 4);\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n    }\n","date":"2021-04-16 17:40:20","endLine":382,"groupId":"10925","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertOneMatchingBuildForGivenSearchStringAndRunItems","params":"(StringsearchString@Iterable<ModelObject>runs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5f/d6e93984843741f8d49efbe1943406e439b39e.src","preCode":"    private void assertOneMatchingBuildForGivenSearchStringAndRunItems(String searchString, List<ModelObject> runs) {\n        \r\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        \r\n        historyPageFilter.setSearchString(searchString);\n        \r\n        List<Queue.Item> queueItems = newQueueItems(3, 4);\n\n        \r\n        historyPageFilter.add(runs, queueItems);\n\n        \r\n        Assert.assertEquals(1, historyPageFilter.runs.size());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":368,"status":"M"}],"commitId":"d0a9dc6db065081917b7adac63e8a7058c053de1","commitMessage":"@@@Merge pull request #5418 from basil/guava-collect-tests\n\nReduce usages of com.google.common.collect in tests","date":"2021-04-16 17:40:20","modifiedFileCount":"12","status":"M","submitter":"Oleg Nenashev"}]
