[{"authorTime":"2016-08-03 02:38:58","codes":[{"authorDate":"2016-08-03 02:38:58","commitOrder":3,"curCode":"    public void test_newerThan_near_newest() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, 8L, null);\n        List<ModelObject> itemList = newRuns(1, 10);\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","date":"2016-08-03 02:38:58","endLine":251,"groupId":"5255","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"test_newerThan_near_newest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f0/0969b769df4ae8b3629985529a7962d4a766b5.src","preCode":"    public void test_newerThan_near_newest() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, 8L, null);\n        List<ModelObject> itemList = newRuns(1, 10);\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"MB"},{"authorDate":"2016-08-03 02:38:58","commitOrder":3,"curCode":"    public void test_laterItemsNotEvaluated() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = newRuns(6, 10);\n        for (int queueId = 5; queueId >= 1; queueId--) {\n            itemList.add(new ExplodingMockRun(queueId));\n        }\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","date":"2016-08-03 02:38:58","endLine":294,"groupId":"5255","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"test_laterItemsNotEvaluated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f0/0969b769df4ae8b3629985529a7962d4a766b5.src","preCode":"    public void test_laterItemsNotEvaluated() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = newRuns(6, 10);\n        for (int queueId = 5; queueId >= 1; queueId--) {\n            itemList.add(new ExplodingMockRun(queueId));\n        }\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"B"}],"commitId":"55203ebeed1b7e182878d3e3c1184ac042f20473","commitMessage":"@@@[FIXED JENKINS-31791] Optimize BuildHistoryWidget (#2456)\n\n* [FIXED JENKINS-31791] Optimize BuildHistoryWidget\n\nRefactor HistoryPageFilter to lazily evaluate an iterable of previous\nruns.  instead of instantiating a super long list of builds.\nInstantiating the whole list can be problematic with lots of\nhistorical builds especially if disk IO is slow.\n","date":"2016-08-03 02:38:58","modifiedFileCount":"4","status":"M","submitter":"DJ Lee"},{"authorTime":"2019-10-17 17:48:03","codes":[{"authorDate":"2019-10-17 17:48:03","commitOrder":4,"curCode":"    public void test_newerThan_near_newest() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, 8L, null);\n        List<ModelObject> itemList = newRuns(1, 10);\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertTrue(historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","date":"2019-10-17 17:48:03","endLine":266,"groupId":"1256","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"test_newerThan_near_newest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/63/9067dc7b1dd495d1a2d3d38e7f987be1c19abd.src","preCode":"    public void test_newerThan_near_newest() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, 8L, null);\n        List<ModelObject> itemList = newRuns(1, 10);\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"M"},{"authorDate":"2019-10-17 17:48:03","commitOrder":4,"curCode":"    public void test_laterItemsNotEvaluated() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = newRuns(6, 10);\n        for (int queueId = 5; queueId >= 1; queueId--) {\n            itemList.add(new ExplodingMockRun(queueId));\n        }\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertTrue(historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","date":"2019-10-17 17:48:03","endLine":309,"groupId":"1256","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"test_laterItemsNotEvaluated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/63/9067dc7b1dd495d1a2d3d38e7f987be1c19abd.src","preCode":"    public void test_laterItemsNotEvaluated() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = newRuns(6, 10);\n        for (int queueId = 5; queueId >= 1; queueId--) {\n            itemList.add(new ExplodingMockRun(queueId));\n        }\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"M"}],"commitId":"20986fa481397a2605d4c3758977b9f28373187d","commitMessage":"@@@Merge pull request #4293 from StefanSpieker/simplified\n\nsimplified assertions and removed unthrown exceptions","date":"2019-10-17 17:48:03","modifiedFileCount":"7","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2021-03-01 20:24:23","codes":[{"authorDate":"2021-03-01 20:24:23","commitOrder":5,"curCode":"    public void test_newerThan_near_newest() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, 8L, null);\n        Iterable<ModelObject> itemList = newRuns(1, 10);\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertTrue(historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","date":"2021-03-01 20:24:23","endLine":266,"groupId":"10946","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"test_newerThan_near_newest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/de/23275cb3a621bda01206b58f3daa98c1c84a62.src","preCode":"    public void test_newerThan_near_newest() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, 8L, null);\n        List<ModelObject> itemList = newRuns(1, 10);\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertTrue(historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"M"},{"authorDate":"2021-03-01 20:24:23","commitOrder":5,"curCode":"    public void test_laterItemsNotEvaluated() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = new ArrayList<>();\n        for (ModelObject run : newRuns(6, 10)) {\n            itemList.add(run);\n        }\n        for (int queueId = 5; queueId >= 1; queueId--) {\n            itemList.add(new ExplodingMockRun(queueId));\n        }\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertTrue(historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","date":"2021-03-01 20:24:23","endLine":312,"groupId":"10946","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"test_laterItemsNotEvaluated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/de/23275cb3a621bda01206b58f3daa98c1c84a62.src","preCode":"    public void test_laterItemsNotEvaluated() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = newRuns(6, 10);\n        for (int queueId = 5; queueId >= 1; queueId--) {\n            itemList.add(new ExplodingMockRun(queueId));\n        }\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertTrue(historyPageFilter.hasDownPage);\n        Assert.assertEquals(5, historyPageFilter.runs.size());\n\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(6), historyPageFilter.oldestOnPage);\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"M"}],"commitId":"1904cbb8b99c1712b777a09f2cd9f3f2d5de8a09","commitMessage":"@@@Merge pull request #5312 from basil/historyPageFilterTest\n\nReplace usages of deprecated jenkins.widgets.HistoryPageFilter.add(java.util.List) with non-deprecated jenkins.widgets.HistoryPageFilter.add(Iterable)","date":"2021-03-01 20:24:23","modifiedFileCount":"1","status":"M","submitter":"Oleg Nenashev"}]
