[{"authorTime":"2019-11-12 22:18:42","codes":[{"authorDate":"2019-11-12 22:18:42","commitOrder":1,"curCode":"    public void flyweightsRunOnMasterIfPossible() throws Exception {\n        r.createOnlineSlave();\n        r.jenkins.setNumExecutors(0);\n        List<TestFlyweightTask> tasks = new ArrayList<>();\n        Queue q = r.jenkins.getQueue();\n\n        for (int i = 0; i < 100; i++) {\n            TestFlyweightTask task = new TestFlyweightTask(new AtomicInteger(i), null);\n            tasks.add(task);\n            q.schedule2(task, 0);\n        }\n\n        q.maintain();\n        r.waitUntilNoActivityUpTo(10000);\n        Assert.assertThat(tasks, everyItem(hasProperty(\"owner\", equalTo(Jenkins.get().toComputer()))));\n    }\n","date":"2019-11-12 22:18:42","endLine":1162,"groupId":"9320","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"flyweightsRunOnMasterIfPossible","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c0/d43defa037324fc8b0307bfd5c9227c525935d.src","preCode":"    public void flyweightsRunOnMasterIfPossible() throws Exception {\n        r.createOnlineSlave();\n        r.jenkins.setNumExecutors(0);\n        List<TestFlyweightTask> tasks = new ArrayList<>();\n        Queue q = r.jenkins.getQueue();\n\n        for (int i = 0; i < 100; i++) {\n            TestFlyweightTask task = new TestFlyweightTask(new AtomicInteger(i), null);\n            tasks.add(task);\n            q.schedule2(task, 0);\n        }\n\n        q.maintain();\n        r.waitUntilNoActivityUpTo(10000);\n        Assert.assertThat(tasks, everyItem(hasProperty(\"owner\", equalTo(Jenkins.get().toComputer()))));\n    }\n","realPath":"test/src/test/java/hudson/model/QueueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1147,"status":"B"},{"authorDate":"2019-11-12 22:18:42","commitOrder":1,"curCode":"    public void flyweightsRunOnAgentIfNecessary() throws Exception {\n        r.createOnlineSlave();\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.toComputer().setTemporarilyOffline(true, new OfflineCause.UserCause(null, null));\n        List<TestFlyweightTask> tasks = new ArrayList<>();\n        Queue q = r.jenkins.getQueue();\n\n        for (int i = 0; i < 10; i++) {\n            TestFlyweightTask task = new TestFlyweightTask(new AtomicInteger(i), null);\n            tasks.add(task);\n            q.schedule2(task, 0);\n        }\n\n        q.maintain();\n        r.waitUntilNoActivityUpTo(10000);\n        Assert.assertThat(tasks, everyItem(hasProperty(\"owner\", not(equalTo(Jenkins.get().toComputer())))));\n    }\n","date":"2019-11-12 22:18:42","endLine":1181,"groupId":"9320","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"flyweightsRunOnAgentIfNecessary","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c0/d43defa037324fc8b0307bfd5c9227c525935d.src","preCode":"    public void flyweightsRunOnAgentIfNecessary() throws Exception {\n        r.createOnlineSlave();\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.toComputer().setTemporarilyOffline(true, new OfflineCause.UserCause(null, null));\n        List<TestFlyweightTask> tasks = new ArrayList<>();\n        Queue q = r.jenkins.getQueue();\n\n        for (int i = 0; i < 10; i++) {\n            TestFlyweightTask task = new TestFlyweightTask(new AtomicInteger(i), null);\n            tasks.add(task);\n            q.schedule2(task, 0);\n        }\n\n        q.maintain();\n        r.waitUntilNoActivityUpTo(10000);\n        Assert.assertThat(tasks, everyItem(hasProperty(\"owner\", not(equalTo(Jenkins.get().toComputer())))));\n    }\n","realPath":"test/src/test/java/hudson/model/QueueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1165,"status":"B"}],"commitId":"7e4ebd562ac913b52fc6c3506c6c910e76870963","commitMessage":"@@@Try to execute flyweight tasks on the master (#3983)\n\n* Try to execute flyweight tasks on the master\n\n* Fix offline behavior.  add tests\n\n* Remove obsolete TODOs.  also check #isAcceptingTasks\n","date":"2019-11-12 22:18:42","modifiedFileCount":"3","status":"B","submitter":"Daniel Beck"},{"authorTime":"2020-06-30 21:54:47","codes":[{"authorDate":"2020-06-30 21:54:47","commitOrder":2,"curCode":"    public void flyweightsRunOnMasterIfPossible() throws Exception {\n        r.createOnlineSlave();\n        r.jenkins.setNumExecutors(0);\n        List<TestFlyweightTask> tasks = new ArrayList<>();\n        Queue q = r.jenkins.getQueue();\n\n        for (int i = 0; i < 100; i++) {\n            TestFlyweightTask task = new TestFlyweightTask(new AtomicInteger(i), null);\n            tasks.add(task);\n            q.schedule2(task, 0);\n        }\n\n        q.maintain();\n        r.waitUntilNoActivityUpTo(10000);\n        assertThat(tasks, everyItem(hasProperty(\"owner\", equalTo(Jenkins.get().toComputer()))));\n    }\n","date":"2020-06-30 21:54:47","endLine":1178,"groupId":"10481","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"flyweightsRunOnMasterIfPossible","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/63/106dace6c220a117421a55aafb31c3e8d6c849.src","preCode":"    public void flyweightsRunOnMasterIfPossible() throws Exception {\n        r.createOnlineSlave();\n        r.jenkins.setNumExecutors(0);\n        List<TestFlyweightTask> tasks = new ArrayList<>();\n        Queue q = r.jenkins.getQueue();\n\n        for (int i = 0; i < 100; i++) {\n            TestFlyweightTask task = new TestFlyweightTask(new AtomicInteger(i), null);\n            tasks.add(task);\n            q.schedule2(task, 0);\n        }\n\n        q.maintain();\n        r.waitUntilNoActivityUpTo(10000);\n        Assert.assertThat(tasks, everyItem(hasProperty(\"owner\", equalTo(Jenkins.get().toComputer()))));\n    }\n","realPath":"test/src/test/java/hudson/model/QueueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1163,"status":"M"},{"authorDate":"2020-06-30 21:54:47","commitOrder":2,"curCode":"    public void flyweightsRunOnAgentIfNecessary() throws Exception {\n        r.createOnlineSlave();\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.toComputer().setTemporarilyOffline(true, new OfflineCause.UserCause(null, null));\n        List<TestFlyweightTask> tasks = new ArrayList<>();\n        Queue q = r.jenkins.getQueue();\n\n        for (int i = 0; i < 10; i++) {\n            TestFlyweightTask task = new TestFlyweightTask(new AtomicInteger(i), null);\n            tasks.add(task);\n            q.schedule2(task, 0);\n        }\n\n        q.maintain();\n        r.waitUntilNoActivityUpTo(10000);\n        assertThat(tasks, everyItem(hasProperty(\"owner\", not(equalTo(Jenkins.get().toComputer())))));\n    }\n","date":"2020-06-30 21:54:47","endLine":1197,"groupId":"10481","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"flyweightsRunOnAgentIfNecessary","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/63/106dace6c220a117421a55aafb31c3e8d6c849.src","preCode":"    public void flyweightsRunOnAgentIfNecessary() throws Exception {\n        r.createOnlineSlave();\n        r.jenkins.setNumExecutors(0);\n        r.jenkins.toComputer().setTemporarilyOffline(true, new OfflineCause.UserCause(null, null));\n        List<TestFlyweightTask> tasks = new ArrayList<>();\n        Queue q = r.jenkins.getQueue();\n\n        for (int i = 0; i < 10; i++) {\n            TestFlyweightTask task = new TestFlyweightTask(new AtomicInteger(i), null);\n            tasks.add(task);\n            q.schedule2(task, 0);\n        }\n\n        q.maintain();\n        r.waitUntilNoActivityUpTo(10000);\n        Assert.assertThat(tasks, everyItem(hasProperty(\"owner\", not(equalTo(Jenkins.get().toComputer())))));\n    }\n","realPath":"test/src/test/java/hudson/model/QueueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1181,"status":"M"}],"commitId":"75391b3ad789c8bb8a488b5e677a2dd3d1741d16","commitMessage":"@@@Merge commit 'a1097dfec620bb309d6df4122f96aa22a5288563' of https://github.com/jenkinsci/jenkins\n","date":"2020-06-30 21:54:47","modifiedFileCount":"290","status":"M","submitter":"Wadeck Follonier"}]
