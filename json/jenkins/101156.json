[{"authorTime":"2016-03-10 05:07:34","codes":[{"authorDate":"2016-03-10 05:07:34","commitOrder":1,"curCode":"    private void _cleanUpShutdownTimer(List<Throwable> errors) {\n        LOGGER.log(Level.FINE, \"Shutting down timer\");\n        try {\n            Timer.shutdown();\n        } catch (SecurityException e) {\n            LOGGER.log(WARNING, \"Not permitted to shut down Timer\", e);\n            errors.add(e);\n        } catch (OutOfMemoryError e) {\n            \r\n            throw e;\n        } catch (LinkageError e) {\n            LOGGER.log(SEVERE, \"Failed to shut down Timer\", e);\n            \r\n        } catch (Throwable e) {\n            LOGGER.log(SEVERE, \"Failed to shut down Timer\", e);\n            \r\n            errors.add(e);\n        }\n    }\n","date":"2016-03-10 05:07:34","endLine":3107,"groupId":"389","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"_cleanUpShutdownTimer","params":"(List<Throwable>errors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/31/d76281642bf96ee411a16c4d46b76b0733f8c2.src","preCode":"    private void _cleanUpShutdownTimer(List<Throwable> errors) {\n        LOGGER.log(Level.FINE, \"Shutting down timer\");\n        try {\n            Timer.shutdown();\n        } catch (SecurityException e) {\n            LOGGER.log(WARNING, \"Not permitted to shut down Timer\", e);\n            errors.add(e);\n        } catch (OutOfMemoryError e) {\n            \r\n            throw e;\n        } catch (LinkageError e) {\n            LOGGER.log(SEVERE, \"Failed to shut down Timer\", e);\n            \r\n        } catch (Throwable e) {\n            LOGGER.log(SEVERE, \"Failed to shut down Timer\", e);\n            \r\n            errors.add(e);\n        }\n    }\n","realPath":"core/src/main/java/jenkins/model/Jenkins.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":3089,"status":"B"},{"authorDate":"2016-03-10 05:07:34","commitOrder":1,"curCode":"    private void _cleanUpShutdownPluginManager(List<Throwable> errors) {\n        if(pluginManager!=null) {\r\n            LOGGER.log(Level.INFO, \"Stopping plugin manager\");\n            try {\n                pluginManager.stop();\n            } catch (OutOfMemoryError e) {\n                \r\n                throw e;\n            } catch (LinkageError e) {\n                LOGGER.log(SEVERE, \"Failed to stop plugin manager\", e);\n                \r\n            } catch (Throwable e) {\n                LOGGER.log(SEVERE, \"Failed to stop plugin manager\", e);\n                \r\n                errors.add(e);\n            }\n        }\n    }\n","date":"2016-03-10 05:07:34","endLine":3145,"groupId":"389","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"_cleanUpShutdownPluginManager","params":"(List<Throwable>errors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/31/d76281642bf96ee411a16c4d46b76b0733f8c2.src","preCode":"    private void _cleanUpShutdownPluginManager(List<Throwable> errors) {\n        if(pluginManager!=null) {\r\n            LOGGER.log(Level.INFO, \"Stopping plugin manager\");\n            try {\n                pluginManager.stop();\n            } catch (OutOfMemoryError e) {\n                \r\n                throw e;\n            } catch (LinkageError e) {\n                LOGGER.log(SEVERE, \"Failed to stop plugin manager\", e);\n                \r\n            } catch (Throwable e) {\n                LOGGER.log(SEVERE, \"Failed to stop plugin manager\", e);\n                \r\n                errors.add(e);\n            }\n        }\n    }\n","realPath":"core/src/main/java/jenkins/model/Jenkins.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":3128,"status":"B"}],"commitId":"f56ace54d173020724d4f3199359df8a191fa311","commitMessage":"@@@Merge pull request #2103 from stephenc/jenkins-33425\n\n[FIXED JENKINS-33425] Refactored the cleanUp() method to log progress and push for completion","date":"2016-03-10 05:07:34","modifiedFileCount":"1","status":"B","submitter":"Stephen Connolly"},{"authorTime":"2017-06-01 18:08:19","codes":[{"authorDate":"2016-03-10 05:07:34","commitOrder":2,"curCode":"    private void _cleanUpShutdownTimer(List<Throwable> errors) {\n        LOGGER.log(Level.FINE, \"Shutting down timer\");\n        try {\n            Timer.shutdown();\n        } catch (SecurityException e) {\n            LOGGER.log(WARNING, \"Not permitted to shut down Timer\", e);\n            errors.add(e);\n        } catch (OutOfMemoryError e) {\n            \r\n            throw e;\n        } catch (LinkageError e) {\n            LOGGER.log(SEVERE, \"Failed to shut down Timer\", e);\n            \r\n        } catch (Throwable e) {\n            LOGGER.log(SEVERE, \"Failed to shut down Timer\", e);\n            \r\n            errors.add(e);\n        }\n    }\n","date":"2016-03-10 05:07:34","endLine":3107,"groupId":"101156","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"_cleanUpShutdownTimer","params":"(List<Throwable>errors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/31/d76281642bf96ee411a16c4d46b76b0733f8c2.src","preCode":"    private void _cleanUpShutdownTimer(List<Throwable> errors) {\n        LOGGER.log(Level.FINE, \"Shutting down timer\");\n        try {\n            Timer.shutdown();\n        } catch (SecurityException e) {\n            LOGGER.log(WARNING, \"Not permitted to shut down Timer\", e);\n            errors.add(e);\n        } catch (OutOfMemoryError e) {\n            \r\n            throw e;\n        } catch (LinkageError e) {\n            LOGGER.log(SEVERE, \"Failed to shut down Timer\", e);\n            \r\n        } catch (Throwable e) {\n            LOGGER.log(SEVERE, \"Failed to shut down Timer\", e);\n            \r\n            errors.add(e);\n        }\n    }\n","realPath":"core/src/main/java/jenkins/model/Jenkins.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":3089,"status":"N"},{"authorDate":"2017-06-01 18:08:19","commitOrder":2,"curCode":"    private void _cleanUpShutdownPluginManager(List<Throwable> errors) {\n        if(pluginManager!=null) {\r\n            LOGGER.log(Main.isUnitTest ? Level.FINE : Level.INFO, \"Stopping plugin manager\");\n            try {\n                pluginManager.stop();\n            } catch (OutOfMemoryError e) {\n                \r\n                throw e;\n            } catch (LinkageError e) {\n                LOGGER.log(SEVERE, \"Failed to stop plugin manager\", e);\n                \r\n            } catch (Throwable e) {\n                LOGGER.log(SEVERE, \"Failed to stop plugin manager\", e);\n                \r\n                errors.add(e);\n            }\n        }\n    }\n","date":"2017-06-01 18:08:19","endLine":3516,"groupId":"101156","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"_cleanUpShutdownPluginManager","params":"(List<Throwable>errors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f1/871370183f75dfb8d6982e90853262dd682372.src","preCode":"    private void _cleanUpShutdownPluginManager(List<Throwable> errors) {\n        if(pluginManager!=null) {\r\n            LOGGER.log(Level.INFO, \"Stopping plugin manager\");\n            try {\n                pluginManager.stop();\n            } catch (OutOfMemoryError e) {\n                \r\n                throw e;\n            } catch (LinkageError e) {\n                LOGGER.log(SEVERE, \"Failed to stop plugin manager\", e);\n                \r\n            } catch (Throwable e) {\n                LOGGER.log(SEVERE, \"Failed to stop plugin manager\", e);\n                \r\n                errors.add(e);\n            }\n        }\n    }\n","realPath":"core/src/main/java/jenkins/model/Jenkins.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":3499,"status":"M"}],"commitId":"383b91b1f756b6cb984c135ac3daaa9d408532ad","commitMessage":"@@@Merge pull request #2906 from jglick/quieter-tests\n\nMake functional tests a little quieter so we can focus on test output rather than boilerplate logging","date":"2017-06-01 18:08:19","modifiedFileCount":"2","status":"M","submitter":"Daniel Beck"}]
