[{"authorTime":"2016-11-08 07:07:40","codes":[{"authorDate":"2016-11-08 07:07:40","commitOrder":1,"curCode":"    public void agentProtocols_singleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        Assume.assumeThat(\"We assume that JNLP3-connect is disabled\", \n                defaultProtocols, not(hasItem(\"JNLP3-connect\")));\n        \n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(\"JNLP3-connect\");\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertThat(\"JNLP3-connect must be enabled before the roundtrip\", \n                j.jenkins.getAgentProtocols(), hasItem(\"JNLP3-connect\"));\n        \n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertFalse(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload == reloadedProtocols);\n        assertThat(\"We should have additional enabled protocol\", \n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 1));\n        assertThat(\"JNLP3-connect must be enabled after the roundtrip\", \n                reloadedProtocols, hasItem(\"JNLP3-connect\"));\n    }\n","date":"2016-11-08 07:07:40","endLine":507,"groupId":"1611","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"agentProtocols_singleEnable_roundtrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/8e/88f7f0e3d8b97c4bf36ba741ab4aeee73dae2f.src","preCode":"    public void agentProtocols_singleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        Assume.assumeThat(\"We assume that JNLP3-connect is disabled\", \n                defaultProtocols, not(hasItem(\"JNLP3-connect\")));\n        \n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(\"JNLP3-connect\");\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertThat(\"JNLP3-connect must be enabled before the roundtrip\", \n                j.jenkins.getAgentProtocols(), hasItem(\"JNLP3-connect\"));\n        \n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertFalse(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload == reloadedProtocols);\n        assertThat(\"We should have additional enabled protocol\", \n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 1));\n        assertThat(\"JNLP3-connect must be enabled after the roundtrip\", \n                reloadedProtocols, hasItem(\"JNLP3-connect\"));\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"B"},{"authorDate":"2016-11-08 07:07:40","commitOrder":1,"curCode":"    public void agentProtocols_multipleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        Assume.assumeThat(\"We assume that JNLP3-connect is disabled\", \n                defaultProtocols, not(hasItem(\"JNLP3-connect\")));\n        Assume.assumeThat(\"We assume that JNLP4-connect is disabled\", \n                defaultProtocols, not(hasItem(\"JNLP4-connect\")));\n        \n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(\"JNLP3-connect\");\n        newProtocols.add(\"JNLP4-connect\");\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertThat(\"JNLP3-connect must be enabled before the roundtrip\", \n                j.jenkins.getAgentProtocols(), hasItem(\"JNLP3-connect\"));\n        assertThat(\"JNLP4-connect must be enabled before the roundtrip\", \n                j.jenkins.getAgentProtocols(), hasItem(\"JNLP4-connect\"));\n        \n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertFalse(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload == reloadedProtocols);\n        assertThat(\"We should have two additional enabled protocols\", \n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 2));\n        assertThat(\"JNLP3-connect must be enabled after the roundtrip\", \n                reloadedProtocols, hasItem(\"JNLP3-connect\"));\n        assertThat(\"JNLP3-connect must be enabled after the roundtrip\", \n                reloadedProtocols, hasItem(\"JNLP4-connect\"));\n    }\n","date":"2016-11-08 07:07:40","endLine":563,"groupId":"1611","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"agentProtocols_multipleEnable_roundtrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/8e/88f7f0e3d8b97c4bf36ba741ab4aeee73dae2f.src","preCode":"    public void agentProtocols_multipleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        Assume.assumeThat(\"We assume that JNLP3-connect is disabled\", \n                defaultProtocols, not(hasItem(\"JNLP3-connect\")));\n        Assume.assumeThat(\"We assume that JNLP4-connect is disabled\", \n                defaultProtocols, not(hasItem(\"JNLP4-connect\")));\n        \n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(\"JNLP3-connect\");\n        newProtocols.add(\"JNLP4-connect\");\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertThat(\"JNLP3-connect must be enabled before the roundtrip\", \n                j.jenkins.getAgentProtocols(), hasItem(\"JNLP3-connect\"));\n        assertThat(\"JNLP4-connect must be enabled before the roundtrip\", \n                j.jenkins.getAgentProtocols(), hasItem(\"JNLP4-connect\"));\n        \n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertFalse(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload == reloadedProtocols);\n        assertThat(\"We should have two additional enabled protocols\", \n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 2));\n        assertThat(\"JNLP3-connect must be enabled after the roundtrip\", \n                reloadedProtocols, hasItem(\"JNLP3-connect\"));\n        assertThat(\"JNLP3-connect must be enabled after the roundtrip\", \n                reloadedProtocols, hasItem(\"JNLP4-connect\"));\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":535,"status":"B"}],"commitId":"3e2e01717976a1f1221874bfd576429c5c48b8a6","commitMessage":"@@@[JENKINS-39465] - Fix the AgentProtocol settings persistency handling (#2621)\n\n* [JENKINS-39465] - Tweak processing of enabled and disabled protocols in Jenkins instance\n\nDue to whatever reason.  without a definition of an array recipient field the data goes to the disk in the following way:\n\n```\n<enabledAgentProtocol>JNLP3-connect</enabledAgentProtocol>\n<enabledAgentProtocol>JNLP4-connect</enabledAgentProtocol>\n```\n\nIt is supposed to processed by Implicit array correctly.  but it does not actually happen.\nWith a fix the data is being stored in another format:\n\n```\n  <enabledAgentProtocols>\n    <string>JNLP3-connect</string>\n    <string>JNLP4-connect</string>\n  </enabledAgentProtocols>\n```\n\nThis data now works correctly and gets deserialized correctly. readResolve() just adds a fallback for the case when Implicit array handling starts behaving correctly (?).\n\n* [JENKINS-39465] - Add configuration roundtrip tests\n\n* [JENKINS-39465] - Jenkins#agentProtocols cache must be invalidated when we reload the configuration\n\n* [JENKINS-39465] - Remove obsolete comment from Tests\n","date":"2016-11-08 07:07:40","modifiedFileCount":"2","status":"B","submitter":"Oleg Nenashev"},{"authorTime":"2017-11-06 20:06:55","codes":[{"authorDate":"2017-11-06 20:06:55","commitOrder":2,"curCode":"    public void agentProtocols_singleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        \n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(MockOptInProtocol1.NAME);\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"before the roundtrip\");\n        \n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertFalse(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload == reloadedProtocols);\n        assertThat(\"We should have additional enabled protocol\", \n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 1));\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"after the roundtrip\");\n    }\n","date":"2017-11-06 20:06:55","endLine":516,"groupId":"212","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"agentProtocols_singleEnable_roundtrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5c/65ceffda90e015254b17fb8fbf96e5fe742cde.src","preCode":"    public void agentProtocols_singleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        Assume.assumeThat(\"We assume that JNLP3-connect is disabled\", \n                defaultProtocols, not(hasItem(\"JNLP3-connect\")));\n        \n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(\"JNLP3-connect\");\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertThat(\"JNLP3-connect must be enabled before the roundtrip\", \n                j.jenkins.getAgentProtocols(), hasItem(\"JNLP3-connect\"));\n        \n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertFalse(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload == reloadedProtocols);\n        assertThat(\"We should have additional enabled protocol\", \n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 1));\n        assertThat(\"JNLP3-connect must be enabled after the roundtrip\", \n                reloadedProtocols, hasItem(\"JNLP3-connect\"));\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":499,"status":"M"},{"authorDate":"2017-11-06 20:06:55","commitOrder":2,"curCode":"    public void agentProtocols_multipleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(MockOptInProtocol1.NAME);\n        newProtocols.add(MockOptInProtocol2.NAME);\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"before the roundtrip\");\n        assertProtocolEnabled(MockOptInProtocol2.NAME, \"before the roundtrip\");\n\n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertFalse(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload == reloadedProtocols);\n        assertThat(\"There should be two additional enabled protocols\",\n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 2));\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"after the roundtrip\");\n        assertProtocolEnabled(MockOptInProtocol2.NAME, \"after the roundtrip\");\n    }\n","date":"2017-11-06 20:06:55","endLine":561,"groupId":"212","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"agentProtocols_multipleEnable_roundtrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5c/65ceffda90e015254b17fb8fbf96e5fe742cde.src","preCode":"    public void agentProtocols_multipleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        Assume.assumeThat(\"We assume that JNLP3-connect is disabled\", \n                defaultProtocols, not(hasItem(\"JNLP3-connect\")));\n        Assume.assumeThat(\"We assume that JNLP4-connect is disabled\", \n                defaultProtocols, not(hasItem(\"JNLP4-connect\")));\n        \n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(\"JNLP3-connect\");\n        newProtocols.add(\"JNLP4-connect\");\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertThat(\"JNLP3-connect must be enabled before the roundtrip\", \n                j.jenkins.getAgentProtocols(), hasItem(\"JNLP3-connect\"));\n        assertThat(\"JNLP4-connect must be enabled before the roundtrip\", \n                j.jenkins.getAgentProtocols(), hasItem(\"JNLP4-connect\"));\n        \n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertFalse(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload == reloadedProtocols);\n        assertThat(\"We should have two additional enabled protocols\", \n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 2));\n        assertThat(\"JNLP3-connect must be enabled after the roundtrip\", \n                reloadedProtocols, hasItem(\"JNLP3-connect\"));\n        assertThat(\"JNLP3-connect must be enabled after the roundtrip\", \n                reloadedProtocols, hasItem(\"JNLP4-connect\"));\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":541,"status":"M"}],"commitId":"048858daec03431edeb8cecf101bac8cc84a6685","commitMessage":"@@@Merge commit '048e313aa95844e2366a0611192415abbcf4b5ee' of git://github.com/jenkinsci/jenkins\n","date":"2017-11-06 20:06:55","modifiedFileCount":"5","status":"M","submitter":"Jesse Glick"},{"authorTime":"2021-01-03 01:20:57","codes":[{"authorDate":"2021-01-03 01:20:57","commitOrder":3,"curCode":"    public void agentProtocols_singleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        \n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(MockOptInProtocol1.NAME);\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"before the roundtrip\");\n        \n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertNotSame(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload, reloadedProtocols);\n        assertThat(\"We should have additional enabled protocol\", \n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 1));\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"after the roundtrip\");\n    }\n","date":"2021-01-03 01:20:57","endLine":538,"groupId":"10713","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"agentProtocols_singleEnable_roundtrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/59/cbb7fa8cd421b3af28b49ed46104851e1a907a.src","preCode":"    public void agentProtocols_singleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        \n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(MockOptInProtocol1.NAME);\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"before the roundtrip\");\n        \n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertFalse(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload == reloadedProtocols);\n        assertThat(\"We should have additional enabled protocol\", \n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 1));\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"after the roundtrip\");\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":521,"status":"M"},{"authorDate":"2021-01-03 01:20:57","commitOrder":3,"curCode":"    public void agentProtocols_multipleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(MockOptInProtocol1.NAME);\n        newProtocols.add(MockOptInProtocol2.NAME);\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"before the roundtrip\");\n        assertProtocolEnabled(MockOptInProtocol2.NAME, \"before the roundtrip\");\n\n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertNotSame(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload, reloadedProtocols);\n        assertThat(\"There should be two additional enabled protocols\",\n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 2));\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"after the roundtrip\");\n        assertProtocolEnabled(MockOptInProtocol2.NAME, \"after the roundtrip\");\n    }\n","date":"2021-01-03 01:20:57","endLine":583,"groupId":"10713","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"agentProtocols_multipleEnable_roundtrip","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/59/cbb7fa8cd421b3af28b49ed46104851e1a907a.src","preCode":"    public void agentProtocols_multipleEnable_roundtrip() throws Exception {\n        final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols());\n        final Set<String> newProtocols = new HashSet<>(defaultProtocols);\n        newProtocols.add(MockOptInProtocol1.NAME);\n        newProtocols.add(MockOptInProtocol2.NAME);\n        j.jenkins.setAgentProtocols(newProtocols);\n        j.jenkins.save();\n\n        final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols();\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"before the roundtrip\");\n        assertProtocolEnabled(MockOptInProtocol2.NAME, \"before the roundtrip\");\n\n        j.jenkins.reload();\n        \n        final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols();\n        assertFalse(\"The protocol list must have been really reloaded\", agentProtocolsBeforeReload == reloadedProtocols);\n        assertThat(\"There should be two additional enabled protocols\",\n                reloadedProtocols.size(), equalTo(defaultProtocols.size() + 2));\n        assertProtocolEnabled(MockOptInProtocol1.NAME, \"after the roundtrip\");\n        assertProtocolEnabled(MockOptInProtocol2.NAME, \"after the roundtrip\");\n    }\n","realPath":"test/src/test/java/jenkins/model/JenkinsTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":563,"status":"M"}],"commitId":"a9ee90e7fc931445956616ffae4ea3c5ababe41d","commitMessage":"@@@Merge pull request #5134 from basil/improvements\n\nCode cleanup","date":"2021-01-03 01:20:57","modifiedFileCount":"88","status":"M","submitter":"Oleg Nenashev"}]
