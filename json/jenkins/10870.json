[{"authorTime":"2021-01-13 22:41:47","codes":[{"authorDate":"2021-01-13 22:41:47","commitOrder":1,"curCode":"    public void zip_NoFollowLinks_FilePathVF() throws Exception {\n        File zipFile = new File(tmp.getRoot(), \"output.zip\");\n        File root = tmp.getRoot();\n        File source = new File(root, \"source\");\n        prepareFileStructureForIsDescendant(source);\n\n        VirtualFile sourcePath = VirtualFile.forFilePath(new FilePath(source));\n        try (FileOutputStream outputStream = new FileOutputStream(zipFile)) {\n            sourcePath.zip( outputStream,\"**\", null, true, true);\n        }\n        FilePath zipPath = new FilePath(zipFile);\n        assertTrue(zipPath.exists());\n        assertFalse(zipPath.isDirectory());\n        FilePath unzipPath = new FilePath(new File(tmp.getRoot(), \"unzip\"));\n        zipPath.unzip(unzipPath);\n        assertTrue(unzipPath.exists());\n        assertTrue(unzipPath.isDirectory());\n        assertTrue(unzipPath.child(\"a\").child(\"aa\").child(\"aa.txt\").exists());\n        assertTrue(unzipPath.child(\"a\").child(\"ab\").child(\"ab.txt\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"aa\").child(\"aaa\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"_b\").exists());\n        assertTrue(unzipPath.child(\"b\").child(\"ba\").child(\"ba.txt\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_a\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_aatxt\").exists());\n    }\n","date":"2021-01-13 22:41:47","endLine":267,"groupId":"1902","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"zip_NoFollowLinks_FilePathVF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d6/51a438db756ff8093f9c9feda8c330c4908d1c.src","preCode":"    public void zip_NoFollowLinks_FilePathVF() throws Exception {\n        File zipFile = new File(tmp.getRoot(), \"output.zip\");\n        File root = tmp.getRoot();\n        File source = new File(root, \"source\");\n        prepareFileStructureForIsDescendant(source);\n\n        VirtualFile sourcePath = VirtualFile.forFilePath(new FilePath(source));\n        try (FileOutputStream outputStream = new FileOutputStream(zipFile)) {\n            sourcePath.zip( outputStream,\"**\", null, true, true);\n        }\n        FilePath zipPath = new FilePath(zipFile);\n        assertTrue(zipPath.exists());\n        assertFalse(zipPath.isDirectory());\n        FilePath unzipPath = new FilePath(new File(tmp.getRoot(), \"unzip\"));\n        zipPath.unzip(unzipPath);\n        assertTrue(unzipPath.exists());\n        assertTrue(unzipPath.isDirectory());\n        assertTrue(unzipPath.child(\"a\").child(\"aa\").child(\"aa.txt\").exists());\n        assertTrue(unzipPath.child(\"a\").child(\"ab\").child(\"ab.txt\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"aa\").child(\"aaa\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"_b\").exists());\n        assertTrue(unzipPath.child(\"b\").child(\"ba\").child(\"ba.txt\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_a\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_aatxt\").exists());\n    }\n","realPath":"core/src/test/java/jenkins/util/VirtualFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"B"},{"authorDate":"2021-01-13 22:41:47","commitOrder":1,"curCode":"    public void zip_NoFollowLinks_FileVF() throws Exception {\n        File zipFile = new File(tmp.getRoot(), \"output.zip\");\n        File root = tmp.getRoot();\n        File source = new File(root, \"source\");\n        prepareFileStructureForIsDescendant(source);\n\n        VirtualFile sourcePath = VirtualFile.forFile(source);\n        try (FileOutputStream outputStream = new FileOutputStream(zipFile)) {\n            sourcePath.zip( outputStream,\"**\", null, true, true);\n        }\n        FilePath zipPath = new FilePath(zipFile);\n        assertTrue(zipPath.exists());\n        assertFalse(zipPath.isDirectory());\n        FilePath unzipPath = new FilePath(new File(tmp.getRoot(), \"unzip\"));\n        zipPath.unzip(unzipPath);\n        assertTrue(unzipPath.exists());\n        assertTrue(unzipPath.isDirectory());\n        assertTrue(unzipPath.child(\"a\").child(\"aa\").child(\"aa.txt\").exists());\n        assertTrue(unzipPath.child(\"a\").child(\"ab\").child(\"ab.txt\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"aa\").child(\"aaa\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"_b\").exists());\n        assertTrue(unzipPath.child(\"b\").child(\"ba\").child(\"ba.txt\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_a\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_aatxt\").exists());\n    }\n","date":"2021-01-13 22:41:47","endLine":295,"groupId":"1902","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"zip_NoFollowLinks_FileVF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d6/51a438db756ff8093f9c9feda8c330c4908d1c.src","preCode":"    public void zip_NoFollowLinks_FileVF() throws Exception {\n        File zipFile = new File(tmp.getRoot(), \"output.zip\");\n        File root = tmp.getRoot();\n        File source = new File(root, \"source\");\n        prepareFileStructureForIsDescendant(source);\n\n        VirtualFile sourcePath = VirtualFile.forFile(source);\n        try (FileOutputStream outputStream = new FileOutputStream(zipFile)) {\n            sourcePath.zip( outputStream,\"**\", null, true, true);\n        }\n        FilePath zipPath = new FilePath(zipFile);\n        assertTrue(zipPath.exists());\n        assertFalse(zipPath.isDirectory());\n        FilePath unzipPath = new FilePath(new File(tmp.getRoot(), \"unzip\"));\n        zipPath.unzip(unzipPath);\n        assertTrue(unzipPath.exists());\n        assertTrue(unzipPath.isDirectory());\n        assertTrue(unzipPath.child(\"a\").child(\"aa\").child(\"aa.txt\").exists());\n        assertTrue(unzipPath.child(\"a\").child(\"ab\").child(\"ab.txt\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"aa\").child(\"aaa\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"_b\").exists());\n        assertTrue(unzipPath.child(\"b\").child(\"ba\").child(\"ba.txt\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_a\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_aatxt\").exists());\n    }\n","realPath":"core/src/test/java/jenkins/util/VirtualFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"B"}],"commitId":"82688811faeb81a6286e72bf6edd569e40826c7f","commitMessage":"@@@Merge branch 'security-master' into master\n","date":"2021-01-13 22:41:47","modifiedFileCount":"21","status":"B","submitter":"Daniel Beck"},{"authorTime":"2021-01-19 17:11:30","codes":[{"authorDate":"2021-01-19 17:11:30","commitOrder":2,"curCode":"    public void zip_NoFollowLinks_FilePathVF() throws Exception {\n        File zipFile = new File(tmp.getRoot(), \"output.zip\");\n        File root = tmp.getRoot();\n        File source = new File(root, \"source\");\n        prepareFileStructureForIsDescendant(source);\n\n        VirtualFile sourcePath = VirtualFile.forFilePath(new FilePath(source));\n        try (FileOutputStream outputStream = new FileOutputStream(zipFile)) {\n            sourcePath.zip( outputStream,\"**\", null, true, true, \"\");\n        }\n        FilePath zipPath = new FilePath(zipFile);\n        assertTrue(zipPath.exists());\n        assertFalse(zipPath.isDirectory());\n        FilePath unzipPath = new FilePath(new File(tmp.getRoot(), \"unzip\"));\n        zipPath.unzip(unzipPath);\n        assertTrue(unzipPath.exists());\n        assertTrue(unzipPath.isDirectory());\n        assertTrue(unzipPath.child(\"a\").child(\"aa\").child(\"aa.txt\").exists());\n        assertTrue(unzipPath.child(\"a\").child(\"ab\").child(\"ab.txt\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"aa\").child(\"aaa\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"_b\").exists());\n        assertTrue(unzipPath.child(\"b\").child(\"ba\").child(\"ba.txt\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_a\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_aatxt\").exists());\n    }\n","date":"2021-01-19 17:11:30","endLine":268,"groupId":"10870","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"zip_NoFollowLinks_FilePathVF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/62/af1ebb0362c05ff9f93bd93251cf3006d1d6a8.src","preCode":"    public void zip_NoFollowLinks_FilePathVF() throws Exception {\n        File zipFile = new File(tmp.getRoot(), \"output.zip\");\n        File root = tmp.getRoot();\n        File source = new File(root, \"source\");\n        prepareFileStructureForIsDescendant(source);\n\n        VirtualFile sourcePath = VirtualFile.forFilePath(new FilePath(source));\n        try (FileOutputStream outputStream = new FileOutputStream(zipFile)) {\n            sourcePath.zip( outputStream,\"**\", null, true, true);\n        }\n        FilePath zipPath = new FilePath(zipFile);\n        assertTrue(zipPath.exists());\n        assertFalse(zipPath.isDirectory());\n        FilePath unzipPath = new FilePath(new File(tmp.getRoot(), \"unzip\"));\n        zipPath.unzip(unzipPath);\n        assertTrue(unzipPath.exists());\n        assertTrue(unzipPath.isDirectory());\n        assertTrue(unzipPath.child(\"a\").child(\"aa\").child(\"aa.txt\").exists());\n        assertTrue(unzipPath.child(\"a\").child(\"ab\").child(\"ab.txt\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"aa\").child(\"aaa\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"_b\").exists());\n        assertTrue(unzipPath.child(\"b\").child(\"ba\").child(\"ba.txt\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_a\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_aatxt\").exists());\n    }\n","realPath":"core/src/test/java/jenkins/util/VirtualFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"},{"authorDate":"2021-01-19 17:11:30","commitOrder":2,"curCode":"    public void zip_NoFollowLinks_FileVF() throws Exception {\n        File zipFile = new File(tmp.getRoot(), \"output.zip\");\n        File root = tmp.getRoot();\n        File source = new File(root, \"source\");\n        prepareFileStructureForIsDescendant(source);\n\n        VirtualFile sourcePath = VirtualFile.forFile(source);\n        try (FileOutputStream outputStream = new FileOutputStream(zipFile)) {\n            sourcePath.zip( outputStream,\"**\", null, true, true, \"\");\n        }\n        FilePath zipPath = new FilePath(zipFile);\n        assertTrue(zipPath.exists());\n        assertFalse(zipPath.isDirectory());\n        FilePath unzipPath = new FilePath(new File(tmp.getRoot(), \"unzip\"));\n        zipPath.unzip(unzipPath);\n        assertTrue(unzipPath.exists());\n        assertTrue(unzipPath.isDirectory());\n        assertTrue(unzipPath.child(\"a\").child(\"aa\").child(\"aa.txt\").exists());\n        assertTrue(unzipPath.child(\"a\").child(\"ab\").child(\"ab.txt\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"aa\").child(\"aaa\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"_b\").exists());\n        assertTrue(unzipPath.child(\"b\").child(\"ba\").child(\"ba.txt\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_a\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_aatxt\").exists());\n    }\n","date":"2021-01-19 17:11:30","endLine":326,"groupId":"10870","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"zip_NoFollowLinks_FileVF","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/62/af1ebb0362c05ff9f93bd93251cf3006d1d6a8.src","preCode":"    public void zip_NoFollowLinks_FileVF() throws Exception {\n        File zipFile = new File(tmp.getRoot(), \"output.zip\");\n        File root = tmp.getRoot();\n        File source = new File(root, \"source\");\n        prepareFileStructureForIsDescendant(source);\n\n        VirtualFile sourcePath = VirtualFile.forFile(source);\n        try (FileOutputStream outputStream = new FileOutputStream(zipFile)) {\n            sourcePath.zip( outputStream,\"**\", null, true, true);\n        }\n        FilePath zipPath = new FilePath(zipFile);\n        assertTrue(zipPath.exists());\n        assertFalse(zipPath.isDirectory());\n        FilePath unzipPath = new FilePath(new File(tmp.getRoot(), \"unzip\"));\n        zipPath.unzip(unzipPath);\n        assertTrue(unzipPath.exists());\n        assertTrue(unzipPath.isDirectory());\n        assertTrue(unzipPath.child(\"a\").child(\"aa\").child(\"aa.txt\").exists());\n        assertTrue(unzipPath.child(\"a\").child(\"ab\").child(\"ab.txt\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"aa\").child(\"aaa\").exists());\n        assertFalse(unzipPath.child(\"a\").child(\"_b\").exists());\n        assertTrue(unzipPath.child(\"b\").child(\"ba\").child(\"ba.txt\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_a\").exists());\n        assertFalse(unzipPath.child(\"b\").child(\"_aatxt\").exists());\n    }\n","realPath":"core/src/test/java/jenkins/util/VirtualFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"M"}],"commitId":"ecf309536208cdf847732f3f0a0a7a2a0e1fa2c1","commitMessage":"@@@[JENKINS-64621] Fix zip regression (#5187)\n\n","date":"2021-01-19 17:11:30","modifiedFileCount":"7","status":"M","submitter":"Wadeck Follonier"}]
