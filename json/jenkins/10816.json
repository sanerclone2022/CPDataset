[{"authorTime":"2015-01-08 05:12:18","codes":[{"authorDate":"2015-01-08 05:12:18","commitOrder":1,"curCode":"    @Test public void list() throws Exception {\n        File baseDir = temp.getRoot();\n            final Set<FilePath> expected = new HashSet<FilePath>();\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"app.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"trace.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"db.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"trace.log\"));\n            final FilePath[] result = new FilePath(baseDir).list(\"**\");\n            assertEquals(expected, new HashSet<FilePath>(Arrays.asList(result)));\n    }\n","date":"2015-01-08 05:12:18","endLine":338,"groupId":"4301","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"list","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/99/9b3e792cf3d0ffeaced08ecb1dfe413f9307fb.src","preCode":"    @Test public void list() throws Exception {\n        File baseDir = temp.getRoot();\n            final Set<FilePath> expected = new HashSet<FilePath>();\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"app.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"trace.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"db.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"trace.log\"));\n            final FilePath[] result = new FilePath(baseDir).list(\"**\");\n            assertEquals(expected, new HashSet<FilePath>(Arrays.asList(result)));\n    }\n","realPath":"core/src/test/java/hudson/FilePathTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"B"},{"authorDate":"2015-01-08 05:12:18","commitOrder":1,"curCode":"    @Test public void listWithExcludes() throws Exception {\n        File baseDir = temp.getRoot();\n            final Set<FilePath> expected = new HashSet<FilePath>();\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"app.log\"));\n            createFilePath(baseDir, \"top\", \"sub\", \"trace.log\");\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"db.log\"));\n            createFilePath(baseDir, \"top\", \"db\", \"trace.log\");\n            final FilePath[] result = new FilePath(baseDir).list(\"**\", \"**/trace.log\");\n            assertEquals(expected, new HashSet<FilePath>(Arrays.asList(result)));\n    }\n","date":"2015-01-08 05:12:18","endLine":349,"groupId":"946","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"listWithExcludes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/99/9b3e792cf3d0ffeaced08ecb1dfe413f9307fb.src","preCode":"    @Test public void listWithExcludes() throws Exception {\n        File baseDir = temp.getRoot();\n            final Set<FilePath> expected = new HashSet<FilePath>();\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"app.log\"));\n            createFilePath(baseDir, \"top\", \"sub\", \"trace.log\");\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"db.log\"));\n            createFilePath(baseDir, \"top\", \"db\", \"trace.log\");\n            final FilePath[] result = new FilePath(baseDir).list(\"**\", \"**/trace.log\");\n            assertEquals(expected, new HashSet<FilePath>(Arrays.asList(result)));\n    }\n","realPath":"core/src/test/java/hudson/FilePathTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":340,"status":"B"}],"commitId":"cd0752432ed718e30281eb4e2732646550996868","commitMessage":"@@@Merge remote-tracking branch 'upstream/master' into JENKINS-22811\n\nConflicts:\n\ttest/src/test/java/hudson/model/ItemGroupMixInTest.java\n","date":"2015-01-08 05:12:18","modifiedFileCount":"190","status":"B","submitter":"christ66"},{"authorTime":"2019-10-02 15:46:53","codes":[{"authorDate":"2019-10-02 15:46:53","commitOrder":2,"curCode":"    @Test public void list() throws Exception {\n        File baseDir = temp.getRoot();\n            final Set<FilePath> expected = new HashSet<>();\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"app.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"trace.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"db.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"trace.log\"));\n            final FilePath[] result = new FilePath(baseDir).list(\"**\");\n            assertEquals(expected, new HashSet<>(Arrays.asList(result)));\n    }\n","date":"2019-10-02 15:46:53","endLine":381,"groupId":"10816","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"list","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/49/7df3ac2c7ebb6b879feb23ef537382bc5ea626.src","preCode":"    @Test public void list() throws Exception {\n        File baseDir = temp.getRoot();\n            final Set<FilePath> expected = new HashSet<FilePath>();\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"app.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"trace.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"db.log\"));\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"trace.log\"));\n            final FilePath[] result = new FilePath(baseDir).list(\"**\");\n            assertEquals(expected, new HashSet<FilePath>(Arrays.asList(result)));\n    }\n","realPath":"core/src/test/java/hudson/FilePathTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"M"},{"authorDate":"2019-10-02 15:46:53","commitOrder":2,"curCode":"    @Test public void listWithExcludes() throws Exception {\n        File baseDir = temp.getRoot();\n            final Set<FilePath> expected = new HashSet<>();\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"app.log\"));\n            createFilePath(baseDir, \"top\", \"sub\", \"trace.log\");\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"db.log\"));\n            createFilePath(baseDir, \"top\", \"db\", \"trace.log\");\n            final FilePath[] result = new FilePath(baseDir).list(\"**\", \"**/trace.log\");\n            assertEquals(expected, new HashSet<>(Arrays.asList(result)));\n    }\n","date":"2019-10-02 15:46:53","endLine":392,"groupId":"10816","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"listWithExcludes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/49/7df3ac2c7ebb6b879feb23ef537382bc5ea626.src","preCode":"    @Test public void listWithExcludes() throws Exception {\n        File baseDir = temp.getRoot();\n            final Set<FilePath> expected = new HashSet<FilePath>();\n            expected.add(createFilePath(baseDir, \"top\", \"sub\", \"app.log\"));\n            createFilePath(baseDir, \"top\", \"sub\", \"trace.log\");\n            expected.add(createFilePath(baseDir, \"top\", \"db\", \"db.log\"));\n            createFilePath(baseDir, \"top\", \"db\", \"trace.log\");\n            final FilePath[] result = new FilePath(baseDir).list(\"**\", \"**/trace.log\");\n            assertEquals(expected, new HashSet<FilePath>(Arrays.asList(result)));\n    }\n","realPath":"core/src/test/java/hudson/FilePathTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":383,"status":"M"}],"commitId":"531972f113e6ff56f393512f0e17a59647fea54f","commitMessage":"@@@Merge pull request #4243 from res0nance/infer-types\n\nUse type inference instead of specifying it","date":"2019-10-02 15:46:53","modifiedFileCount":"44","status":"M","submitter":"Oleg Nenashev"}]
