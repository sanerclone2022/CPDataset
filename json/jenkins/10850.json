[{"authorTime":"2017-11-06 20:06:55","codes":[{"authorDate":"2017-11-06 20:06:55","commitOrder":1,"curCode":"    public void getActionsHasPermission() throws Exception {\n        when(view.hasPermission(any())).thenReturn(true);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertEquals(Messages.NewViewLink_NewView(), action.getDisplayName());\n        assertEquals(NewViewLink.ICON_FILE_NAME, action.getIconFileName());\n        assertEquals(NewViewLink.URL_NAME, action.getUrlName());\n    }\n","date":"2017-11-06 20:06:55","endLine":31,"groupId":"9398","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getActionsHasPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/07/dbbb6f5d93497fed1889f08a2f0ecdb4860a57.src","preCode":"    public void getActionsHasPermission() throws Exception {\n        when(view.hasPermission(any())).thenReturn(true);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertEquals(Messages.NewViewLink_NewView(), action.getDisplayName());\n        assertEquals(NewViewLink.ICON_FILE_NAME, action.getIconFileName());\n        assertEquals(NewViewLink.URL_NAME, action.getUrlName());\n    }\n","realPath":"core/src/test/java/jenkins/model/NewViewLinkTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":21,"status":"B"},{"authorDate":"2017-11-06 20:06:55","commitOrder":1,"curCode":"    public void getActionsNoPermission() throws Exception {\n        when(view.hasPermission(any())).thenReturn(false);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertNull(action.getDisplayName());\n        assertNull(action.getIconFileName());\n        assertEquals(NewViewLink.URL_NAME, action.getUrlName());\n    }\n","date":"2017-11-06 20:06:55","endLine":44,"groupId":"7995","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getActionsNoPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/07/dbbb6f5d93497fed1889f08a2f0ecdb4860a57.src","preCode":"    public void getActionsNoPermission() throws Exception {\n        when(view.hasPermission(any())).thenReturn(false);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertNull(action.getDisplayName());\n        assertNull(action.getIconFileName());\n        assertEquals(NewViewLink.URL_NAME, action.getUrlName());\n    }\n","realPath":"core/src/test/java/jenkins/model/NewViewLinkTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"}],"commitId":"048858daec03431edeb8cecf101bac8cc84a6685","commitMessage":"@@@Merge commit '048e313aa95844e2366a0611192415abbcf4b5ee' of git://github.com/jenkinsci/jenkins\n","date":"2017-11-06 20:06:55","modifiedFileCount":"5","status":"B","submitter":"Jesse Glick"},{"authorTime":"2018-01-07 21:43:49","codes":[{"authorDate":"2018-01-07 21:43:49","commitOrder":2,"curCode":"    public void getActionsHasPermission() throws Exception {\n        when(view.hasPermission(any())).thenReturn(true);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertEquals(Messages.NewViewLink_NewView(), action.getDisplayName());\n        assertEquals(NewViewLink.ICON_FILE_NAME, action.getIconFileName());\n        assertEquals(rootUrl + NewViewLink.URL_NAME, action.getUrlName());\n    }\n","date":"2018-01-07 21:43:49","endLine":54,"groupId":"9398","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getActionsHasPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/fe/bd23a6182a6de46acf5dcba29b66e6ce21b1c3.src","preCode":"    public void getActionsHasPermission() throws Exception {\n        when(view.hasPermission(any())).thenReturn(true);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertEquals(Messages.NewViewLink_NewView(), action.getDisplayName());\n        assertEquals(NewViewLink.ICON_FILE_NAME, action.getIconFileName());\n        assertEquals(NewViewLink.URL_NAME, action.getUrlName());\n    }\n","realPath":"core/src/test/java/jenkins/model/NewViewLinkTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2018-01-07 21:43:49","commitOrder":2,"curCode":"    public void getActionsNoPermission() throws Exception {\n        when(view.hasPermission(any())).thenReturn(false);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertNull(action.getDisplayName());\n        assertNull(action.getIconFileName());\n        assertEquals(rootUrl + NewViewLink.URL_NAME, action.getUrlName());\n    }\n","date":"2018-01-07 21:43:49","endLine":67,"groupId":"7995","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getActionsNoPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/fe/bd23a6182a6de46acf5dcba29b66e6ce21b1c3.src","preCode":"    public void getActionsNoPermission() throws Exception {\n        when(view.hasPermission(any())).thenReturn(false);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertNull(action.getDisplayName());\n        assertNull(action.getIconFileName());\n        assertEquals(NewViewLink.URL_NAME, action.getUrlName());\n    }\n","realPath":"core/src/test/java/jenkins/model/NewViewLinkTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"6df06fc19a4b7ed015ab5213e2dc8d25beb2f607","commitMessage":"@@@[JENKINS-48447] Fixed HTTP 404 error when clicking on newView sidebar link from an other view. (#3178)\n\n* [JENKINS-48447] Fixed HTTP 404 error when clicking on newView sidebar link from an other view.\n\n* [JENKINS-48447] Fixed unit tests for NewViewLink\n\n* [JENKINS-48447] Load url name each time object gets initialized and adapted tests.\n\n* [JENKINS-48447] Rewrite tests for url name; fixed indenting.\n\n* [JENKINS-48447] Fixed more identing.\n\n* [JENKINS-48447] Added @Restricted to NewViewLink; undo URL_NAME renaming.\n","date":"2018-01-07 21:43:49","modifiedFileCount":"2","status":"M","submitter":"Jochen A. F?rbacher"},{"authorTime":"2021-04-07 15:52:51","codes":[{"authorDate":"2021-04-07 15:52:51","commitOrder":3,"curCode":"    public void getActionsHasPermission() throws Exception {\n        when(group.hasPermission(any())).thenReturn(true);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertEquals(Messages.NewViewLink_NewView(), action.getDisplayName());\n        assertEquals(NewViewLink.ICON_FILE_NAME, action.getIconFileName());\n        assertEquals(\"/\" + viewGroupURL + NewViewLink.URL_NAME, action.getUrlName());\n    }\n","date":"2021-04-07 15:52:51","endLine":45,"groupId":"10850","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getActionsHasPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/dc/f4e8d6054e84d9878833f2342d281d748501cf.src","preCode":"    public void getActionsHasPermission() throws Exception {\n        when(view.hasPermission(any())).thenReturn(true);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertEquals(Messages.NewViewLink_NewView(), action.getDisplayName());\n        assertEquals(NewViewLink.ICON_FILE_NAME, action.getIconFileName());\n        assertEquals(rootUrl + NewViewLink.URL_NAME, action.getUrlName());\n    }\n","realPath":"core/src/test/java/jenkins/model/NewViewLinkTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2021-04-07 15:52:51","commitOrder":3,"curCode":"    public void getActionsNoPermission() throws Exception {\n        when(group.hasPermission(any())).thenReturn(false);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertNull(action.getIconFileName());\n        assertEquals(\"/\" + viewGroupURL + NewViewLink.URL_NAME, action.getUrlName());\n    }\n","date":"2021-04-07 15:52:51","endLine":57,"groupId":"10850","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getActionsNoPermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/dc/f4e8d6054e84d9878833f2342d281d748501cf.src","preCode":"    public void getActionsNoPermission() throws Exception {\n        when(view.hasPermission(any())).thenReturn(false);\n\n        final List<Action> actions = newViewLink.createFor(view);\n\n        assertEquals(1, actions.size());\n        final Action action = actions.get(0);\n        assertNull(action.getDisplayName());\n        assertNull(action.getIconFileName());\n        assertEquals(rootUrl + NewViewLink.URL_NAME, action.getUrlName());\n    }\n","realPath":"core/src/test/java/jenkins/model/NewViewLinkTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"677fbb2a81fa8e9a0bc37ad5eca56565612e1f2e","commitMessage":"@@@Merge remote-tracking branch 'jenkinsci/master' into master\n","date":"2021-04-07 15:52:51","modifiedFileCount":"2","status":"M","submitter":"Daniel Beck"}]
