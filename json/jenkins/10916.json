[{"authorTime":"2015-10-13 04:22:10","codes":[{"authorDate":"2015-10-13 04:22:10","commitOrder":1,"curCode":"    public void test_latest_partial_page() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = new ArrayList<ModelObject>();\n\n        itemList.addAll(newRuns(1, 2));\n        itemList.addAll(newQueueItems(3, 4));\n\n        \r\n        Assert.assertEquals(1, HistoryPageEntry.getEntryId(itemList.get(0)));\n        historyPageFilter.add(itemList);\n        Assert.assertEquals(4, HistoryPageEntry.getEntryId(itemList.get(0)));\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(false, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(2, historyPageFilter.runs.size());\n\n        Assert.assertEquals(4, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(4, historyPageFilter.newestOnPage);\n        Assert.assertEquals(3, historyPageFilter.queueItems.get(1).getEntryId());\n        Assert.assertEquals(2, historyPageFilter.runs.get(0).getEntryId());\n        Assert.assertEquals(1, historyPageFilter.runs.get(1).getEntryId());\n        Assert.assertEquals(1, historyPageFilter.oldestOnPage);\n    }\n","date":"2015-10-13 04:22:10","endLine":88,"groupId":"4672","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"test_latest_partial_page","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/61/d89f9da311ac9848fbb115288f5d66ee855901.src","preCode":"    public void test_latest_partial_page() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = new ArrayList<ModelObject>();\n\n        itemList.addAll(newRuns(1, 2));\n        itemList.addAll(newQueueItems(3, 4));\n\n        \r\n        Assert.assertEquals(1, HistoryPageEntry.getEntryId(itemList.get(0)));\n        historyPageFilter.add(itemList);\n        Assert.assertEquals(4, HistoryPageEntry.getEntryId(itemList.get(0)));\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(false, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(2, historyPageFilter.runs.size());\n\n        Assert.assertEquals(4, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(4, historyPageFilter.newestOnPage);\n        Assert.assertEquals(3, historyPageFilter.queueItems.get(1).getEntryId());\n        Assert.assertEquals(2, historyPageFilter.runs.get(0).getEntryId());\n        Assert.assertEquals(1, historyPageFilter.runs.get(1).getEntryId());\n        Assert.assertEquals(1, historyPageFilter.oldestOnPage);\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2015-10-13 04:22:10","commitOrder":1,"curCode":"    public void test_latest_longer_list() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = new ArrayList<ModelObject>();\n\n        itemList.addAll(newRuns(1, 10));\n        itemList.addAll(newQueueItems(11, 12));\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(3, historyPageFilter.runs.size());\n\n        Assert.assertEquals(12, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(12, historyPageFilter.newestOnPage);\n        Assert.assertEquals(10, historyPageFilter.runs.get(0).getEntryId());\n    }\n","date":"2015-10-13 04:22:10","endLine":111,"groupId":"5253","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"test_latest_longer_list","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/61/d89f9da311ac9848fbb115288f5d66ee855901.src","preCode":"    public void test_latest_longer_list() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = new ArrayList<ModelObject>();\n\n        itemList.addAll(newRuns(1, 10));\n        itemList.addAll(newQueueItems(11, 12));\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(3, historyPageFilter.runs.size());\n\n        Assert.assertEquals(12, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(12, historyPageFilter.newestOnPage);\n        Assert.assertEquals(10, historyPageFilter.runs.get(0).getEntryId());\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"}],"commitId":"1b0ba9e1d034fe809d58f14f835f8e5347cc3bc5","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2015-10-13 04:22:10","modifiedFileCount":"32","status":"B","submitter":"Jesse Glick"},{"authorTime":"2015-11-05 07:23:56","codes":[{"authorDate":"2015-11-05 07:23:56","commitOrder":2,"curCode":"    public void test_latest_partial_page() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = new ArrayList<ModelObject>();\n\n        itemList.addAll(newRuns(1, 2));\n        itemList.addAll(newQueueItems(3, 4));\n\n        \r\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), HistoryPageEntry.getEntryId(itemList.get(0)));\n        historyPageFilter.add(itemList);\n        Assert.assertEquals(4, HistoryPageEntry.getEntryId(itemList.get(0)));\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(false, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(2, historyPageFilter.runs.size());\n\n        Assert.assertEquals(4, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(4, historyPageFilter.newestOnPage);\n        Assert.assertEquals(3, historyPageFilter.queueItems.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.runs.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.oldestOnPage);\n    }\n","date":"2015-11-05 07:23:56","endLine":88,"groupId":"4672","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"test_latest_partial_page","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/23/9a606bd5e9107c861788b8309cdbb85784ba79.src","preCode":"    public void test_latest_partial_page() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = new ArrayList<ModelObject>();\n\n        itemList.addAll(newRuns(1, 2));\n        itemList.addAll(newQueueItems(3, 4));\n\n        \r\n        Assert.assertEquals(1, HistoryPageEntry.getEntryId(itemList.get(0)));\n        historyPageFilter.add(itemList);\n        Assert.assertEquals(4, HistoryPageEntry.getEntryId(itemList.get(0)));\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(false, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(2, historyPageFilter.runs.size());\n\n        Assert.assertEquals(4, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(4, historyPageFilter.newestOnPage);\n        Assert.assertEquals(3, historyPageFilter.queueItems.get(1).getEntryId());\n        Assert.assertEquals(2, historyPageFilter.runs.get(0).getEntryId());\n        Assert.assertEquals(1, historyPageFilter.runs.get(1).getEntryId());\n        Assert.assertEquals(1, historyPageFilter.oldestOnPage);\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2015-11-05 07:23:56","commitOrder":2,"curCode":"    public void test_latest_longer_list() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = new ArrayList<ModelObject>();\n\n        itemList.addAll(newRuns(1, 10));\n        itemList.addAll(newQueueItems(11, 12));\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(3, historyPageFilter.runs.size());\n\n        Assert.assertEquals(12, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(12, historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.runs.get(0).getEntryId());\n    }\n","date":"2015-11-05 07:23:56","endLine":111,"groupId":"5253","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"test_latest_longer_list","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/23/9a606bd5e9107c861788b8309cdbb85784ba79.src","preCode":"    public void test_latest_longer_list() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = new ArrayList<ModelObject>();\n\n        itemList.addAll(newRuns(1, 10));\n        itemList.addAll(newQueueItems(11, 12));\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(3, historyPageFilter.runs.size());\n\n        Assert.assertEquals(12, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(12, historyPageFilter.newestOnPage);\n        Assert.assertEquals(10, historyPageFilter.runs.get(0).getEntryId());\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"b2139cc8d3e3f8de61e67407a5f0e3686151272b","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2015-11-05 07:23:56","modifiedFileCount":"97","status":"M","submitter":"Jesse Glick"},{"authorTime":"2016-08-03 02:38:58","codes":[{"authorDate":"2016-08-03 02:38:58","commitOrder":3,"curCode":"    public void test_latest_partial_page() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> runs = newRuns(1, 2);\n        List<Queue.Item> queueItems = newQueueItems(3, 4);\n\n        historyPageFilter.add(runs, queueItems);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(false, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(2, historyPageFilter.runs.size());\n\n        Assert.assertEquals(4, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(4, historyPageFilter.newestOnPage);\n        Assert.assertEquals(3, historyPageFilter.queueItems.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.runs.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.oldestOnPage);\n    }\n","date":"2016-08-03 02:38:58","endLine":84,"groupId":"4672","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"test_latest_partial_page","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f0/0969b769df4ae8b3629985529a7962d4a766b5.src","preCode":"    public void test_latest_partial_page() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = new ArrayList<ModelObject>();\n\n        itemList.addAll(newRuns(1, 2));\n        itemList.addAll(newQueueItems(3, 4));\n\n        \r\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), HistoryPageEntry.getEntryId(itemList.get(0)));\n        historyPageFilter.add(itemList);\n        Assert.assertEquals(4, HistoryPageEntry.getEntryId(itemList.get(0)));\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(false, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(2, historyPageFilter.runs.size());\n\n        Assert.assertEquals(4, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(4, historyPageFilter.newestOnPage);\n        Assert.assertEquals(3, historyPageFilter.queueItems.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.runs.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.oldestOnPage);\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2016-08-03 02:38:58","commitOrder":3,"curCode":"    public void test_latest_longer_list() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> runs = newRuns(1, 10);\n        List<Queue.Item> queueItems = newQueueItems(11, 12);\n\n        historyPageFilter.add(runs, queueItems);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(3, historyPageFilter.runs.size());\n\n        Assert.assertEquals(12, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(12, historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.runs.get(0).getEntryId());\n    }\n","date":"2016-08-03 02:38:58","endLine":105,"groupId":"4670","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"test_latest_longer_list","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f0/0969b769df4ae8b3629985529a7962d4a766b5.src","preCode":"    public void test_latest_longer_list() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> itemList = new ArrayList<ModelObject>();\n\n        itemList.addAll(newRuns(1, 10));\n        itemList.addAll(newQueueItems(11, 12));\n\n        historyPageFilter.add(itemList);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(3, historyPageFilter.runs.size());\n\n        Assert.assertEquals(12, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(12, historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.runs.get(0).getEntryId());\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"55203ebeed1b7e182878d3e3c1184ac042f20473","commitMessage":"@@@[FIXED JENKINS-31791] Optimize BuildHistoryWidget (#2456)\n\n* [FIXED JENKINS-31791] Optimize BuildHistoryWidget\n\nRefactor HistoryPageFilter to lazily evaluate an iterable of previous\nruns.  instead of instantiating a super long list of builds.\nInstantiating the whole list can be problematic with lots of\nhistorical builds especially if disk IO is slow.\n","date":"2016-08-03 02:38:58","modifiedFileCount":"4","status":"M","submitter":"DJ Lee"},{"authorTime":"2019-10-17 17:48:03","codes":[{"authorDate":"2019-10-17 17:48:03","commitOrder":4,"curCode":"    public void test_latest_partial_page() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> runs = newRuns(1, 2);\n        List<Queue.Item> queueItems = newQueueItems(3, 4);\n\n        historyPageFilter.add(runs, queueItems);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertFalse(historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(2, historyPageFilter.runs.size());\n\n        Assert.assertEquals(4, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(4, historyPageFilter.newestOnPage);\n        Assert.assertEquals(3, historyPageFilter.queueItems.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.runs.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.oldestOnPage);\n    }\n","date":"2019-10-17 17:48:03","endLine":99,"groupId":"5717","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"test_latest_partial_page","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/63/9067dc7b1dd495d1a2d3d38e7f987be1c19abd.src","preCode":"    public void test_latest_partial_page() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> runs = newRuns(1, 2);\n        List<Queue.Item> queueItems = newQueueItems(3, 4);\n\n        historyPageFilter.add(runs, queueItems);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(false, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(2, historyPageFilter.runs.size());\n\n        Assert.assertEquals(4, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(4, historyPageFilter.newestOnPage);\n        Assert.assertEquals(3, historyPageFilter.queueItems.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.runs.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.oldestOnPage);\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2019-10-17 17:48:03","commitOrder":4,"curCode":"    public void test_latest_longer_list() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> runs = newRuns(1, 10);\n        List<Queue.Item> queueItems = newQueueItems(11, 12);\n\n        historyPageFilter.add(runs, queueItems);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertTrue(historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(3, historyPageFilter.runs.size());\n\n        Assert.assertEquals(12, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(12, historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.runs.get(0).getEntryId());\n    }\n","date":"2019-10-17 17:48:03","endLine":120,"groupId":"5716","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"test_latest_longer_list","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/63/9067dc7b1dd495d1a2d3d38e7f987be1c19abd.src","preCode":"    public void test_latest_longer_list() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> runs = newRuns(1, 10);\n        List<Queue.Item> queueItems = newQueueItems(11, 12);\n\n        historyPageFilter.add(runs, queueItems);\n\n        Assert.assertEquals(false, historyPageFilter.hasUpPage);\n        Assert.assertEquals(true, historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(3, historyPageFilter.runs.size());\n\n        Assert.assertEquals(12, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(12, historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.runs.get(0).getEntryId());\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"20986fa481397a2605d4c3758977b9f28373187d","commitMessage":"@@@Merge pull request #4293 from StefanSpieker/simplified\n\nsimplified assertions and removed unthrown exceptions","date":"2019-10-17 17:48:03","modifiedFileCount":"7","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2021-03-01 20:24:23","codes":[{"authorDate":"2021-03-01 20:24:23","commitOrder":5,"curCode":"    public void test_latest_partial_page() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        Iterable<ModelObject> runs = newRuns(1, 2);\n        List<Queue.Item> queueItems = newQueueItems(3, 4);\n\n        historyPageFilter.add(runs, queueItems);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertFalse(historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(2, historyPageFilter.runs.size());\n\n        Assert.assertEquals(4, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(4, historyPageFilter.newestOnPage);\n        Assert.assertEquals(3, historyPageFilter.queueItems.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.runs.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.oldestOnPage);\n    }\n","date":"2021-03-01 20:24:23","endLine":99,"groupId":"10916","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"test_latest_partial_page","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/de/23275cb3a621bda01206b58f3daa98c1c84a62.src","preCode":"    public void test_latest_partial_page() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> runs = newRuns(1, 2);\n        List<Queue.Item> queueItems = newQueueItems(3, 4);\n\n        historyPageFilter.add(runs, queueItems);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertFalse(historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(2, historyPageFilter.runs.size());\n\n        Assert.assertEquals(4, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(4, historyPageFilter.newestOnPage);\n        Assert.assertEquals(3, historyPageFilter.queueItems.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(2), historyPageFilter.runs.get(0).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.runs.get(1).getEntryId());\n        Assert.assertEquals(HistoryPageEntry.getEntryId(1), historyPageFilter.oldestOnPage);\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2021-03-01 20:24:23","commitOrder":5,"curCode":"    public void test_latest_longer_list() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        Iterable<ModelObject> runs = newRuns(1, 10);\n        List<Queue.Item> queueItems = newQueueItems(11, 12);\n\n        historyPageFilter.add(runs, queueItems);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertTrue(historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(3, historyPageFilter.runs.size());\n\n        Assert.assertEquals(12, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(12, historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.runs.get(0).getEntryId());\n    }\n","date":"2021-03-01 20:24:23","endLine":120,"groupId":"10916","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"test_latest_longer_list","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/de/23275cb3a621bda01206b58f3daa98c1c84a62.src","preCode":"    public void test_latest_longer_list() throws IOException {\n        HistoryPageFilter<ModelObject> historyPageFilter = newPage(5, null, null);\n        List<ModelObject> runs = newRuns(1, 10);\n        List<Queue.Item> queueItems = newQueueItems(11, 12);\n\n        historyPageFilter.add(runs, queueItems);\n\n        Assert.assertFalse(historyPageFilter.hasUpPage);\n        Assert.assertTrue(historyPageFilter.hasDownPage);\n        Assert.assertEquals(2, historyPageFilter.queueItems.size());\n        Assert.assertEquals(3, historyPageFilter.runs.size());\n\n        Assert.assertEquals(12, historyPageFilter.queueItems.get(0).getEntryId());\n        Assert.assertEquals(12, historyPageFilter.newestOnPage);\n        Assert.assertEquals(HistoryPageEntry.getEntryId(10), historyPageFilter.runs.get(0).getEntryId());\n    }\n","realPath":"core/src/test/java/jenkins/widgets/HistoryPageFilterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"1904cbb8b99c1712b777a09f2cd9f3f2d5de8a09","commitMessage":"@@@Merge pull request #5312 from basil/historyPageFilterTest\n\nReplace usages of deprecated jenkins.widgets.HistoryPageFilter.add(java.util.List) with non-deprecated jenkins.widgets.HistoryPageFilter.add(Iterable)","date":"2021-03-01 20:24:23","modifiedFileCount":"1","status":"M","submitter":"Oleg Nenashev"}]
