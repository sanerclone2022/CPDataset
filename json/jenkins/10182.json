[{"authorTime":"2017-12-14 01:53:14","codes":[{"authorDate":"2017-12-14 01:53:14","commitOrder":1,"curCode":"    public void parameters() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(new StringParameterDefinition(\"key\", null)));\n\n        try (CLI cli = new CLI(j.getURL())) {\n            cli.execute(\"build\", \"-s\", \"-p\", \"key=foobar\", p.getName());\n            FreeStyleBuild b = j.assertBuildStatusSuccess(p.getBuildByNumber(1));\n            assertEquals(\"foobar\", b.getAction(ParametersAction.class).getParameter(\"key\").getValue());\n        }\n    }\n","date":"2017-12-14 01:53:14","endLine":145,"groupId":"2960","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a5/5d7c1fe9bdf9647b37f21710e08c19566f61ee.src","preCode":"    public void parameters() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(new StringParameterDefinition(\"key\", null)));\n\n        try (CLI cli = new CLI(j.getURL())) {\n            cli.execute(\"build\", \"-s\", \"-p\", \"key=foobar\", p.getName());\n            FreeStyleBuild b = j.assertBuildStatusSuccess(p.getBuildByNumber(1));\n            assertEquals(\"foobar\", b.getAction(ParametersAction.class).getParameter(\"key\").getValue());\n        }\n    }\n","realPath":"test/src/test/java/hudson/cli/BuildCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"B"},{"authorDate":"2017-12-14 01:53:14","commitOrder":1,"curCode":"    public void defaultParameters() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(new StringParameterDefinition(\"key\", \"default\"), new StringParameterDefinition(\"key2\", \"default2\")));\n\n        try (CLI cli = new CLI(j.getURL())) {\n            cli.execute(\"build\", \"-s\", \"-p\", \"key=foobar\", p.getName());\n            FreeStyleBuild b = j.assertBuildStatusSuccess(p.getBuildByNumber(1));\n            assertEquals(\"foobar\", b.getAction(ParametersAction.class).getParameter(\"key\").getValue());\n            assertEquals(\"default2\", b.getAction(ParametersAction.class).getParameter(\"key2\").getValue());\n        }\n    }\n","date":"2017-12-14 01:53:14","endLine":158,"groupId":"2960","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultParameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a5/5d7c1fe9bdf9647b37f21710e08c19566f61ee.src","preCode":"    public void defaultParameters() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(new StringParameterDefinition(\"key\", \"default\"), new StringParameterDefinition(\"key2\", \"default2\")));\n\n        try (CLI cli = new CLI(j.getURL())) {\n            cli.execute(\"build\", \"-s\", \"-p\", \"key=foobar\", p.getName());\n            FreeStyleBuild b = j.assertBuildStatusSuccess(p.getBuildByNumber(1));\n            assertEquals(\"foobar\", b.getAction(ParametersAction.class).getParameter(\"key\").getValue());\n            assertEquals(\"default2\", b.getAction(ParametersAction.class).getParameter(\"key2\").getValue());\n        }\n    }\n","realPath":"test/src/test/java/hudson/cli/BuildCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"}],"commitId":"c0ba0527eece7e1fbcb2fc037f8e25542bc8dd45","commitMessage":"@@@Merge commit '78adf02addc47ccb2629c9bb9101a8dd630b22a5'\n","date":"2017-12-14 01:53:14","modifiedFileCount":"66","status":"B","submitter":"Jesse Glick"},{"authorTime":"2019-02-15 11:42:31","codes":[{"authorDate":"2019-02-15 11:42:31","commitOrder":2,"curCode":"    public void parameters() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(new StringParameterDefinition(\"key\", null)));\n\n        assertThat(new CLICommandInvoker(j, new BuildCommand()).invokeWithArgs(\"-s\", \"-p\", \"key=foobar\", p.getName()), CLICommandInvoker.Matcher.succeeded());\n        FreeStyleBuild b = j.assertBuildStatusSuccess(p.getBuildByNumber(1));\n        assertEquals(\"foobar\", b.getAction(ParametersAction.class).getParameter(\"key\").getValue());\n    }\n","date":"2019-02-15 11:42:31","endLine":139,"groupId":"10182","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f3/e1f36783ab03d283482e6fb3b275ef3fa489ff.src","preCode":"    public void parameters() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(new StringParameterDefinition(\"key\", null)));\n\n        try (CLI cli = new CLI(j.getURL())) {\n            cli.execute(\"build\", \"-s\", \"-p\", \"key=foobar\", p.getName());\n            FreeStyleBuild b = j.assertBuildStatusSuccess(p.getBuildByNumber(1));\n            assertEquals(\"foobar\", b.getAction(ParametersAction.class).getParameter(\"key\").getValue());\n        }\n    }\n","realPath":"test/src/test/java/hudson/cli/BuildCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2019-02-15 11:42:31","commitOrder":2,"curCode":"    public void defaultParameters() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(new StringParameterDefinition(\"key\", \"default\"), new StringParameterDefinition(\"key2\", \"default2\")));\n\n        assertThat(new CLICommandInvoker(j, new BuildCommand()).invokeWithArgs(\"-s\", \"-p\", \"key=foobar\", p.getName()), CLICommandInvoker.Matcher.succeeded());\n        FreeStyleBuild b = j.assertBuildStatusSuccess(p.getBuildByNumber(1));\n        assertEquals(\"foobar\", b.getAction(ParametersAction.class).getParameter(\"key\").getValue());\n        assertEquals(\"default2\", b.getAction(ParametersAction.class).getParameter(\"key2\").getValue());\n    }\n","date":"2019-02-15 11:42:31","endLine":150,"groupId":"10182","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"defaultParameters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f3/e1f36783ab03d283482e6fb3b275ef3fa489ff.src","preCode":"    public void defaultParameters() throws Exception {\n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(new StringParameterDefinition(\"key\", \"default\"), new StringParameterDefinition(\"key2\", \"default2\")));\n\n        try (CLI cli = new CLI(j.getURL())) {\n            cli.execute(\"build\", \"-s\", \"-p\", \"key=foobar\", p.getName());\n            FreeStyleBuild b = j.assertBuildStatusSuccess(p.getBuildByNumber(1));\n            assertEquals(\"foobar\", b.getAction(ParametersAction.class).getParameter(\"key\").getValue());\n            assertEquals(\"default2\", b.getAction(ParametersAction.class).getParameter(\"key2\").getValue());\n        }\n    }\n","realPath":"test/src/test/java/hudson/cli/BuildCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"cc964ef664250b6737e471ef546a46a37421cb4f","commitMessage":"@@@Merge pull request #3838 from jglick/remotingCLI\n\nRemoving code to support the Remoting-based CLI","date":"2019-02-15 11:42:31","modifiedFileCount":"24","status":"M","submitter":"Jesse Glick"}]
