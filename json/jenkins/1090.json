[{"authorTime":"2013-06-06 02:42:55","codes":[{"authorDate":"2013-06-06 02:42:55","commitOrder":1,"curCode":"    @Test public void fingerprintDependencies() throws Exception {\n        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n\n        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());\n\n        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();\n        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();\n\n        assertEquals(1, downstreamProjects.size());\n        assertEquals(1, upstreamProjects.size());\n        assertTrue(upstreamProjects.contains(upstream));\n        assertTrue(downstreamProjects.contains(downstream));\n    }\n","date":"2013-06-06 02:42:55","endLine":99,"groupId":"5773","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fingerprintDependencies","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ce/5177afb31f2c5578b188fc0d503df049e97fa3.src","preCode":"    @Test public void fingerprintDependencies() throws Exception {\n        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n\n        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());\n\n        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();\n        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();\n\n        assertEquals(1, downstreamProjects.size());\n        assertEquals(1, upstreamProjects.size());\n        assertTrue(upstreamProjects.contains(upstream));\n        assertTrue(downstreamProjects.contains(downstream));\n    }\n","realPath":"test/src/test/java/hudson/tasks/FingerprinterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2013-06-06 02:42:55","commitOrder":1,"curCode":"    @Test public void multipleDownstreamDependencies() throws Exception {\n        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(doubleContents, doubleFiles);\n        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n        FreeStyleProject downstream2 = createFreeStyleProjectWithFingerprints(singleContents2, singleFiles2);\n\n        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream2.scheduleBuild2(0).get());\n\n        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();\n        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();\n        List<AbstractProject> upstreamProjects2 = downstream2.getUpstreamProjects();\n\n        assertEquals(2, downstreamProjects.size());\n        assertEquals(1, upstreamProjects.size());\n        assertEquals(1, upstreamProjects2.size());\n        assertTrue(upstreamProjects.contains(upstream));\n        assertTrue(upstreamProjects2.contains(upstream));\n        assertTrue(downstreamProjects.contains(downstream));\n        assertTrue(downstreamProjects.contains(downstream2));\n    }\n","date":"2013-06-06 02:42:55","endLine":142,"groupId":"3238","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"multipleDownstreamDependencies","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ce/5177afb31f2c5578b188fc0d503df049e97fa3.src","preCode":"    @Test public void multipleDownstreamDependencies() throws Exception {\n        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(doubleContents, doubleFiles);\n        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n        FreeStyleProject downstream2 = createFreeStyleProjectWithFingerprints(singleContents2, singleFiles2);\n\n        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream2.scheduleBuild2(0).get());\n\n        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();\n        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();\n        List<AbstractProject> upstreamProjects2 = downstream2.getUpstreamProjects();\n\n        assertEquals(2, downstreamProjects.size());\n        assertEquals(1, upstreamProjects.size());\n        assertEquals(1, upstreamProjects2.size());\n        assertTrue(upstreamProjects.contains(upstream));\n        assertTrue(upstreamProjects2.contains(upstream));\n        assertTrue(downstreamProjects.contains(downstream));\n        assertTrue(downstreamProjects.contains(downstream2));\n    }\n","realPath":"test/src/test/java/hudson/tasks/FingerprinterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"}],"commitId":"291c39ad42dbd5e2676bc8229051f68f7b33ced5","commitMessage":"@@@JUnit 4.","date":"2013-06-06 02:42:55","modifiedFileCount":"1","status":"B","submitter":"Jesse Glick"},{"authorTime":"2014-01-03 01:51:42","codes":[{"authorDate":"2014-01-03 01:51:42","commitOrder":2,"curCode":"    @Test public void fingerprintDependencies() throws Exception {\n        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n\n        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());\n\n        j.jenkins.rebuildDependencyGraph();\n\n        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();\n        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();\n\n        assertEquals(1, downstreamProjects.size());\n        assertEquals(1, upstreamProjects.size());\n        assertTrue(upstreamProjects.contains(upstream));\n        assertTrue(downstreamProjects.contains(downstream));\n    }\n","date":"2014-01-03 01:51:42","endLine":112,"groupId":"1090","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fingerprintDependencies","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/18/04a3649fbaf7f167eee77d2c9a9fbc7861cb85.src","preCode":"    @Test public void fingerprintDependencies() throws Exception {\n        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n\n        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());\n\n        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();\n        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();\n\n        assertEquals(1, downstreamProjects.size());\n        assertEquals(1, upstreamProjects.size());\n        assertTrue(upstreamProjects.contains(upstream));\n        assertTrue(downstreamProjects.contains(downstream));\n    }\n","realPath":"test/src/test/java/hudson/tasks/FingerprinterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2014-01-03 01:51:42","commitOrder":2,"curCode":"    @Test public void multipleDownstreamDependencies() throws Exception {\n        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(doubleContents, doubleFiles);\n        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n        FreeStyleProject downstream2 = createFreeStyleProjectWithFingerprints(singleContents2, singleFiles2);\n\n        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream2.scheduleBuild2(0).get());\n\n        j.jenkins.rebuildDependencyGraph();\n\n        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();\n        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();\n        List<AbstractProject> upstreamProjects2 = downstream2.getUpstreamProjects();\n\n        assertEquals(2, downstreamProjects.size());\n        assertEquals(1, upstreamProjects.size());\n        assertEquals(1, upstreamProjects2.size());\n        assertTrue(upstreamProjects.contains(upstream));\n        assertTrue(upstreamProjects2.contains(upstream));\n        assertTrue(downstreamProjects.contains(downstream));\n        assertTrue(downstreamProjects.contains(downstream2));\n    }\n","date":"2014-01-03 01:51:42","endLine":159,"groupId":"1090","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"multipleDownstreamDependencies","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/18/04a3649fbaf7f167eee77d2c9a9fbc7861cb85.src","preCode":"    @Test public void multipleDownstreamDependencies() throws Exception {\n        FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(doubleContents, doubleFiles);\n        FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents, singleFiles);\n        FreeStyleProject downstream2 = createFreeStyleProjectWithFingerprints(singleContents2, singleFiles2);\n\n        j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get());\n        j.assertBuildStatusSuccess(downstream2.scheduleBuild2(0).get());\n\n        List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects();\n        List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects();\n        List<AbstractProject> upstreamProjects2 = downstream2.getUpstreamProjects();\n\n        assertEquals(2, downstreamProjects.size());\n        assertEquals(1, upstreamProjects.size());\n        assertEquals(1, upstreamProjects2.size());\n        assertTrue(upstreamProjects.contains(upstream));\n        assertTrue(upstreamProjects2.contains(upstream));\n        assertTrue(downstreamProjects.contains(downstream));\n        assertTrue(downstreamProjects.contains(downstream2));\n    }\n","realPath":"test/src/test/java/hudson/tasks/FingerprinterTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"}],"commitId":"2756f08c13157023887de2f4e18dd5899a1cc1ae","commitMessage":"@@@Merge branch 'master' into folder-moving\n\nConflicts:\n\tcore/src/main/java/hudson/model/Items.java\n","date":"2014-01-03 01:51:42","modifiedFileCount":"12","status":"M","submitter":"Jesse Glick"}]
