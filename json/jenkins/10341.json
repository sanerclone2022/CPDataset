[{"authorTime":"2015-02-03 07:49:24","codes":[{"authorDate":"2014-03-25 14:49:30","commitOrder":2,"curCode":"    @Test public void robustness() throws Exception {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = r.jenkins.getItemByFullName(\"busted\", FreeStyleProject.class);\n        assertNotNull(p);\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        assertEquals(Collections.singleton(p), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n        \r\n    }\n","date":"2014-03-25 14:49:30","endLine":69,"groupId":"4915","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"robustness","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/12/74950ae86aefb4c31390bbc3f73d51ecd91015.src","preCode":"    @Test public void robustness() throws Exception {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = r.jenkins.getItemByFullName(\"busted\", FreeStyleProject.class);\n        assertNotNull(p);\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        assertEquals(Collections.singleton(p), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n        \r\n    }\n","realPath":"test/src/test/java/hudson/diagnosis/OldDataMonitorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"NB"},{"authorDate":"2015-02-03 07:49:24","commitOrder":2,"curCode":"    @Test public void unlocatableRun() throws Exception {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = mock(FreeStyleProject.class);\n        when(p.getParent()).thenReturn(Jenkins.getInstance());\n        when(p.getFullName()).thenReturn(\"notfound\");\n        FreeStyleBuild build = new FreeStyleBuild(p);\n        odm.report(build, (String) null);\n\n        assertEquals(Collections.singleton(build), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n\n    }\n","date":"2015-02-03 07:49:24","endLine":172,"groupId":"1304","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"unlocatableRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/30/f279f090553af9e0b625538216e6466fb38a91.src","preCode":"    @Test public void unlocatableRun() throws Exception {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = mock(FreeStyleProject.class);\n        when(p.getParent()).thenReturn(Jenkins.getInstance());\n        when(p.getFullName()).thenReturn(\"notfound\");\n        FreeStyleBuild build = new FreeStyleBuild(p);\n        odm.report(build, (String) null);\n\n        assertEquals(Collections.singleton(build), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n\n    }\n","realPath":"test/src/test/java/hudson/diagnosis/OldDataMonitorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"}],"commitId":"d6d96e14c11f0ea38ad18c3357012357eb07588d","commitMessage":"@@@Merge pull request #1557 from recampbell/JENKINS-26718\n\n[JENKINS-26718] OldDataMonitor: Handle poorly written project types","date":"2015-02-03 07:49:24","modifiedFileCount":"2","status":"M","submitter":"Ryan Campbell"},{"authorTime":"2017-05-03 00:50:24","codes":[{"authorDate":"2014-03-25 14:49:30","commitOrder":3,"curCode":"    @Test public void robustness() throws Exception {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = r.jenkins.getItemByFullName(\"busted\", FreeStyleProject.class);\n        assertNotNull(p);\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        assertEquals(Collections.singleton(p), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n        \r\n    }\n","date":"2014-03-25 14:49:30","endLine":69,"groupId":"4915","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"robustness","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/12/74950ae86aefb4c31390bbc3f73d51ecd91015.src","preCode":"    @Test public void robustness() throws Exception {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = r.jenkins.getItemByFullName(\"busted\", FreeStyleProject.class);\n        assertNotNull(p);\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        assertEquals(Collections.singleton(p), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n        \r\n    }\n","realPath":"test/src/test/java/hudson/diagnosis/OldDataMonitorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"},{"authorDate":"2017-05-03 00:50:24","commitOrder":3,"curCode":"    @Test public void unlocatableRun() throws Exception {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = r.createFreeStyleProject();\n        FreeStyleBuild build = r.buildAndAssertSuccess(p);\n        p.delete();\n        OldDataMonitor.report(build, (String) null);\n\n        assertEquals(Collections.singleton(build), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n\n    }\n","date":"2017-05-03 00:50:24","endLine":158,"groupId":"665","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"unlocatableRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3d/f1d38590110ce67481f295c251c1be252acf3b.src","preCode":"    @Test public void unlocatableRun() throws Exception {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = mock(FreeStyleProject.class);\n        when(p.getParent()).thenReturn(Jenkins.getInstance());\n        when(p.getFullName()).thenReturn(\"notfound\");\n        FreeStyleBuild build = new FreeStyleBuild(p);\n        odm.report(build, (String) null);\n\n        assertEquals(Collections.singleton(build), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n\n    }\n","realPath":"test/src/test/java/hudson/diagnosis/OldDataMonitorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"}],"commitId":"b5ee2a0750a242e6160641670330768a9c20cd4f","commitMessage":"@@@Merge pull request #2860 from jglick/OldDataMonitorTest.unlocatableRun-JENKINS-26718\n\nImproved OldDataMonitorTest.unlocatableRun","date":"2017-05-03 00:50:24","modifiedFileCount":"2","status":"M","submitter":"Jesse Glick"},{"authorTime":"2017-05-03 00:50:24","codes":[{"authorDate":"2020-07-21 11:16:06","commitOrder":4,"curCode":"    @Test public void robustness() {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = r.jenkins.getItemByFullName(\"busted\", FreeStyleProject.class);\n        assertNotNull(p);\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        assertEquals(Collections.singleton(p), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n        \r\n    }\n","date":"2020-07-21 11:16:06","endLine":82,"groupId":"10341","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"robustness","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e5/c22bc009893a320db5721ec2655afa7faba9b7.src","preCode":"    @Test public void robustness() throws Exception {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = r.jenkins.getItemByFullName(\"busted\", FreeStyleProject.class);\n        assertNotNull(p);\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        assertEquals(Collections.singleton(p), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n        \r\n    }\n","realPath":"test/src/test/java/hudson/diagnosis/OldDataMonitorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2017-05-03 00:50:24","commitOrder":4,"curCode":"    @Test public void unlocatableRun() throws Exception {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = r.createFreeStyleProject();\n        FreeStyleBuild build = r.buildAndAssertSuccess(p);\n        p.delete();\n        OldDataMonitor.report(build, (String) null);\n\n        assertEquals(Collections.singleton(build), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n\n    }\n","date":"2017-05-03 00:50:24","endLine":158,"groupId":"10341","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"unlocatableRun","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3d/f1d38590110ce67481f295c251c1be252acf3b.src","preCode":"    @Test public void unlocatableRun() throws Exception {\n        OldDataMonitor odm = OldDataMonitor.get(r.jenkins);\n        FreeStyleProject p = r.createFreeStyleProject();\n        FreeStyleBuild build = r.buildAndAssertSuccess(p);\n        p.delete();\n        OldDataMonitor.report(build, (String) null);\n\n        assertEquals(Collections.singleton(build), odm.getData().keySet());\n        odm.doDiscard(null, null);\n        assertEquals(Collections.emptySet(), odm.getData().keySet());\n\n    }\n","realPath":"test/src/test/java/hudson/diagnosis/OldDataMonitorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"N"}],"commitId":"eb636e252161d8952b9536214dd8a0ec439a3ad7","commitMessage":"@@@Merge pull request #4851 from StefanSpieker/test_refactorings_2\n\nTests: Refactoring of various things","date":"2020-07-21 11:16:06","modifiedFileCount":"19","status":"M","submitter":"Tim Jacomb"}]
