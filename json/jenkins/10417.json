[{"authorTime":"2014-05-23 02:29:46","codes":[{"authorDate":"2014-05-23 02:29:46","commitOrder":1,"curCode":"    public void caseSensitivity() {\n        j.jenkins.setSecurityRealm(new HudsonPrivateSecurityRealm(true, false, null){\n            @Override\n            public IdStrategy getUserIdStrategy() {\n                return new IdStrategy.CaseSensitive();\n            }\n        });\n        User user = User.get(\"john smith\");\n        User user2 = User.get(\"John Smith\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john smith\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john smith\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John Smith\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john ~smith\", User.idStrategy().filenameOf(user2.getId()));\n    }\n","date":"2014-05-23 02:29:46","endLine":194,"groupId":"4134","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"caseSensitivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/bc/78b0817f7d8558ab198ee39c0053640126c846.src","preCode":"    public void caseSensitivity() {\n        j.jenkins.setSecurityRealm(new HudsonPrivateSecurityRealm(true, false, null){\n            @Override\n            public IdStrategy getUserIdStrategy() {\n                return new IdStrategy.CaseSensitive();\n            }\n        });\n        User user = User.get(\"john smith\");\n        User user2 = User.get(\"John Smith\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john smith\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john smith\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John Smith\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john ~smith\", User.idStrategy().filenameOf(user2.getId()));\n    }\n","realPath":"test/src/test/java/hudson/model/UserTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"B"},{"authorDate":"2014-05-23 02:29:46","commitOrder":1,"curCode":"    public void caseSensitivityEmail() {\n        j.jenkins.setSecurityRealm(new HudsonPrivateSecurityRealm(true, false, null){\n            @Override\n            public IdStrategy getUserIdStrategy() {\n                return new IdStrategy.CaseSensitiveEmailAddress();\n            }\n        });\n        User user = User.get(\"john.smith@acme.org\");\n        User user2 = User.get(\"John.Smith@acme.org\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John.Smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john.~smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n        user2 = User.get(\"john.smith@ACME.ORG\");\n        assertEquals(\"Users should have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n    }\n","date":"2014-05-23 02:29:46","endLine":215,"groupId":"1497","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"caseSensitivityEmail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/bc/78b0817f7d8558ab198ee39c0053640126c846.src","preCode":"    public void caseSensitivityEmail() {\n        j.jenkins.setSecurityRealm(new HudsonPrivateSecurityRealm(true, false, null){\n            @Override\n            public IdStrategy getUserIdStrategy() {\n                return new IdStrategy.CaseSensitiveEmailAddress();\n            }\n        });\n        User user = User.get(\"john.smith@acme.org\");\n        User user2 = User.get(\"John.Smith@acme.org\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John.Smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john.~smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n        user2 = User.get(\"john.smith@ACME.ORG\");\n        assertEquals(\"Users should have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n    }\n","realPath":"test/src/test/java/hudson/model/UserTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"B"}],"commitId":"ef949ee1d31b8f4e13fe0a4531daca8907c05474","commitMessage":"@@@Merge branch 'config-userid-case-sensitivity' of github.com:stephenc/jenkins\n","date":"2014-05-23 02:29:46","modifiedFileCount":"4","status":"B","submitter":"Jesse Glick"},{"authorTime":"2014-08-12 23:15:27","codes":[{"authorDate":"2014-08-12 23:15:27","commitOrder":2,"curCode":"    public void caseSensitivity() {\n        j.jenkins.setSecurityRealm(new HudsonPrivateSecurityRealm(true, false, null){\n            @Override\n            public IdStrategy getUserIdStrategy() {\n                return new IdStrategy.CaseSensitive();\n            }\n        });\n        User user = User.get(\"john smith\");\n        User user2 = User.get(\"John Smith\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john smith\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john smith\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John Smith\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john ~smith\", User.idStrategy().filenameOf(user2.getId()));\n        assertEquals(user.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user.getId())));\n        assertEquals(user2.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user2.getId())));\n    }\n","date":"2014-08-12 23:15:27","endLine":198,"groupId":"4134","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"caseSensitivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f8/4bc421fd45dde25711a82c3dd2511927d8a4b8.src","preCode":"    public void caseSensitivity() {\n        j.jenkins.setSecurityRealm(new HudsonPrivateSecurityRealm(true, false, null){\n            @Override\n            public IdStrategy getUserIdStrategy() {\n                return new IdStrategy.CaseSensitive();\n            }\n        });\n        User user = User.get(\"john smith\");\n        User user2 = User.get(\"John Smith\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john smith\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john smith\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John Smith\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john ~smith\", User.idStrategy().filenameOf(user2.getId()));\n    }\n","realPath":"test/src/test/java/hudson/model/UserTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"},{"authorDate":"2014-08-12 23:15:27","commitOrder":2,"curCode":"    public void caseSensitivityEmail() {\n        j.jenkins.setSecurityRealm(new HudsonPrivateSecurityRealm(true, false, null){\n            @Override\n            public IdStrategy getUserIdStrategy() {\n                return new IdStrategy.CaseSensitiveEmailAddress();\n            }\n        });\n        User user = User.get(\"john.smith@acme.org\");\n        User user2 = User.get(\"John.Smith@acme.org\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John.Smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john.~smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n        user2 = User.get(\"john.smith@ACME.ORG\");\n        assertEquals(\"Users should have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n        assertEquals(user.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user.getId())));\n        assertEquals(user2.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user2.getId())));\n    }\n","date":"2014-08-12 23:15:27","endLine":221,"groupId":"1497","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"caseSensitivityEmail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f8/4bc421fd45dde25711a82c3dd2511927d8a4b8.src","preCode":"    public void caseSensitivityEmail() {\n        j.jenkins.setSecurityRealm(new HudsonPrivateSecurityRealm(true, false, null){\n            @Override\n            public IdStrategy getUserIdStrategy() {\n                return new IdStrategy.CaseSensitiveEmailAddress();\n            }\n        });\n        User user = User.get(\"john.smith@acme.org\");\n        User user2 = User.get(\"John.Smith@acme.org\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John.Smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john.~smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n        user2 = User.get(\"john.smith@ACME.ORG\");\n        assertEquals(\"Users should have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n    }\n","realPath":"test/src/test/java/hudson/model/UserTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"}],"commitId":"e23599a03a2bb5dda5056bf18f720ef787270128","commitMessage":"@@@Merge REMERGE_HEAD into HEAD","date":"2014-08-12 23:15:27","modifiedFileCount":"3","status":"M","submitter":"CloudBees DEV@Cloud"},{"authorTime":"2017-03-17 22:41:54","codes":[{"authorDate":"2017-03-17 22:41:54","commitOrder":3,"curCode":"    public void caseSensitivity() {\n        j.jenkins.setSecurityRealm(new IdStrategySpecifyingSecurityRealm(new IdStrategy.CaseSensitive()));\n        User user = User.get(\"john smith\");\n        User user2 = User.get(\"John Smith\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john smith\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john smith\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John Smith\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john ~smith\", User.idStrategy().filenameOf(user2.getId()));\n        assertEquals(user.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user.getId())));\n        assertEquals(user2.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user2.getId())));\n    }\n","date":"2017-03-17 22:41:54","endLine":202,"groupId":"4134","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"caseSensitivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f8/7238de073cb258243f410fe4664612216a88ff.src","preCode":"    public void caseSensitivity() {\n        j.jenkins.setSecurityRealm(new HudsonPrivateSecurityRealm(true, false, null){\n            @Override\n            public IdStrategy getUserIdStrategy() {\n                return new IdStrategy.CaseSensitive();\n            }\n        });\n        User user = User.get(\"john smith\");\n        User user2 = User.get(\"John Smith\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john smith\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john smith\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John Smith\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john ~smith\", User.idStrategy().filenameOf(user2.getId()));\n        assertEquals(user.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user.getId())));\n        assertEquals(user2.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user2.getId())));\n    }\n","realPath":"test/src/test/java/hudson/model/UserTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"},{"authorDate":"2017-03-17 22:41:54","commitOrder":3,"curCode":"    public void caseSensitivityEmail() {\n        j.jenkins.setSecurityRealm(new IdStrategySpecifyingSecurityRealm(new IdStrategy.CaseSensitiveEmailAddress()));\n        User user = User.get(\"john.smith@acme.org\");\n        User user2 = User.get(\"John.Smith@acme.org\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John.Smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john.~smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n        user2 = User.get(\"john.smith@ACME.ORG\");\n        assertEquals(\"Users should have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n        assertEquals(user.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user.getId())));\n        assertEquals(user2.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user2.getId())));\n    }\n","date":"2017-03-17 22:41:54","endLine":220,"groupId":"1497","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"caseSensitivityEmail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/f8/7238de073cb258243f410fe4664612216a88ff.src","preCode":"    public void caseSensitivityEmail() {\n        j.jenkins.setSecurityRealm(new HudsonPrivateSecurityRealm(true, false, null){\n            @Override\n            public IdStrategy getUserIdStrategy() {\n                return new IdStrategy.CaseSensitiveEmailAddress();\n            }\n        });\n        User user = User.get(\"john.smith@acme.org\");\n        User user2 = User.get(\"John.Smith@acme.org\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John.Smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john.~smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n        user2 = User.get(\"john.smith@ACME.ORG\");\n        assertEquals(\"Users should have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n        assertEquals(user.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user.getId())));\n        assertEquals(user2.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user2.getId())));\n    }\n","realPath":"test/src/test/java/hudson/model/UserTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"M"}],"commitId":"4fd4bd3a28cf80913baa3632bb3f7f5d0a00c3ed","commitMessage":"@@@Merge pull request #2790 from jglick/security-settings-save\n\nSave after calling setSecurityRealm or setAuthorizationStrategy","date":"2017-03-17 22:41:54","modifiedFileCount":"10","status":"M","submitter":"Jesse Glick"},{"authorTime":"2018-11-21 21:28:24","codes":[{"authorDate":"2018-11-21 21:28:24","commitOrder":4,"curCode":"    public void caseSensitivity() {\n        j.jenkins.setSecurityRealm(new IdStrategySpecifyingSecurityRealm(new IdStrategy.CaseSensitive()));\n        User user = User.get(\"john smith\");\n        User user2 = User.get(\"John Smith\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john smith\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"John Smith\", User.idStrategy().keyFor(user2.getId()));\n    }\n","date":"2018-11-21 21:28:24","endLine":208,"groupId":"10417","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"caseSensitivity","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3d/7c77a6156e1ddd33ecbd6327bac5579b91a35d.src","preCode":"    public void caseSensitivity() {\n        j.jenkins.setSecurityRealm(new IdStrategySpecifyingSecurityRealm(new IdStrategy.CaseSensitive()));\n        User user = User.get(\"john smith\");\n        User user2 = User.get(\"John Smith\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john smith\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john smith\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John Smith\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john ~smith\", User.idStrategy().filenameOf(user2.getId()));\n        assertEquals(user.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user.getId())));\n        assertEquals(user2.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user2.getId())));\n    }\n","realPath":"test/src/test/java/hudson/model/UserTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"},{"authorDate":"2018-11-21 21:28:24","commitOrder":4,"curCode":"    public void caseSensitivityEmail() {\n        j.jenkins.setSecurityRealm(new IdStrategySpecifyingSecurityRealm(new IdStrategy.CaseSensitiveEmailAddress()));\n        User user = User.get(\"john.smith@acme.org\");\n        User user2 = User.get(\"John.Smith@acme.org\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"John.Smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        user2 = User.get(\"john.smith@ACME.ORG\");\n        assertEquals(\"Users should have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n    }\n","date":"2018-11-21 21:28:24","endLine":221,"groupId":"10417","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"caseSensitivityEmail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3d/7c77a6156e1ddd33ecbd6327bac5579b91a35d.src","preCode":"    public void caseSensitivityEmail() {\n        j.jenkins.setSecurityRealm(new IdStrategySpecifyingSecurityRealm(new IdStrategy.CaseSensitiveEmailAddress()));\n        User user = User.get(\"john.smith@acme.org\");\n        User user2 = User.get(\"John.Smith@acme.org\");\n        assertNotSame(\"Users should not have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user.getId()));\n        assertEquals(\"John.Smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"~john.~smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n        user2 = User.get(\"john.smith@ACME.ORG\");\n        assertEquals(\"Users should have the same id.\", user.getId(), user2.getId());\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n        assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n        assertEquals(user.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user.getId())));\n        assertEquals(user2.getId(), User.idStrategy().idFromFilename(User.idStrategy().filenameOf(user2.getId())));\n    }\n","realPath":"test/src/test/java/hudson/model/UserTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"M"}],"commitId":"9c7c4d930f59b2c207cac19df7cef4e34b648a60","commitMessage":"@@@Merge branch 'security-stable-2.150' into security-master\n","date":"2018-11-21 21:28:24","modifiedFileCount":"15","status":"M","submitter":"Daniel Beck"}]
