[{"authorTime":"2015-06-09 18:55:52","codes":[{"authorDate":"2015-10-13 04:22:10","commitOrder":2,"curCode":"    @Test public void reloadJobShouldFailWithoutJobConfigurePermission() throws Exception {\n\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(new Shell(\"echo 1\"));\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n\n        changeProjectOnTheDisc(project, \"echo 1\", \"echo 2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(1));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the Job/Configure permission\"));\n\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n    }\n","date":"2015-10-13 04:22:10","endLine":76,"groupId":"3982","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"reloadJobShouldFailWithoutJobConfigurePermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/25/7a0c2b8033cfe73e87e1667b4e5df256eba0d1.src","preCode":"    @Test public void reloadJobShouldFailWithoutJobConfigurePermission() throws Exception {\n\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(new Shell(\"echo 1\"));\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n\n        changeProjectOnTheDisc(project, \"echo 1\", \"echo 2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(1));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the Job/Configure permission\"));\n\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/ReloadJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"},{"authorDate":"2015-06-09 18:55:52","commitOrder":2,"curCode":"    @Test public void deleteJobShouldFailWithoutJobDeletePermission() throws IOException {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(-1));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the Job/Delete permission\"));\n    }\n","date":"2015-06-09 18:55:52","endLine":66,"groupId":"3982","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteJobShouldFailWithoutJobDeletePermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e8/621a5f8e528f8208fb6a7b5b9390bec682a102.src","preCode":"    @Test public void deleteJobShouldFailWithoutJobDeletePermission() throws IOException {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(-1));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the Job/Delete permission\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"NB"}],"commitId":"1b0ba9e1d034fe809d58f14f835f8e5347cc3bc5","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2015-10-13 04:22:10","modifiedFileCount":"32","status":"M","submitter":"Jesse Glick"},{"authorTime":"2016-02-19 22:53:15","codes":[{"authorDate":"2016-02-19 22:53:15","commitOrder":3,"curCode":"    @Test public void reloadJobShouldFailWithoutJobConfigurePermission() throws Exception {\n\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(new Shell(\"echo 1\"));\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n\n        changeProjectOnTheDisc(project, \"echo 1\", \"echo 2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Job/Configure permission\"));\n\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n    }\n","date":"2016-02-19 22:53:15","endLine":75,"groupId":"3982","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"reloadJobShouldFailWithoutJobConfigurePermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/40/869bab3fd5f9ab711cc0eb64003477227f03b9.src","preCode":"    @Test public void reloadJobShouldFailWithoutJobConfigurePermission() throws Exception {\n\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(new Shell(\"echo 1\"));\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n\n        changeProjectOnTheDisc(project, \"echo 1\", \"echo 2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(1));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the Job/Configure permission\"));\n\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/ReloadJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2016-02-19 22:53:15","commitOrder":3,"curCode":"    @Test public void deleteJobShouldFailWithoutJobDeletePermission() throws IOException {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Job/Delete permission\"));\n    }\n","date":"2016-02-19 22:53:15","endLine":68,"groupId":"3982","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteJobShouldFailWithoutJobDeletePermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/1b/f3622f9929cd98ea65cbaa64204356b207946e.src","preCode":"    @Test public void deleteJobShouldFailWithoutJobDeletePermission() throws IOException {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(-1));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"user is missing the Job/Delete permission\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"fe41dc89ab9801c9d57713f84e650788e172e115","commitMessage":"@@@Merge pull request #1997 from pjanouse/JENKINS-32273\n\n[JENKINS-32273] Unified an issue handling in CLI\n","date":"2016-02-19 22:53:15","modifiedFileCount":"50","status":"M","submitter":"Oliver Gond?a"},{"authorTime":"2016-02-19 22:53:15","codes":[{"authorDate":"2017-02-27 05:17:05","commitOrder":4,"curCode":"    @Test public void reloadJobShouldFailWithoutJobConfigurePermission() throws Exception {\n\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(createScriptBuilder(\"echo 1\"));\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n\n        changeProjectOnTheDisc(project, \"echo 1\", \"echo 2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Job/Configure permission\"));\n\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n    }\n","date":"2017-02-27 05:17:05","endLine":78,"groupId":"3982","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"reloadJobShouldFailWithoutJobConfigurePermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a0/12090070ed5b3ce47ba85325fae4697d9467f9.src","preCode":"    @Test public void reloadJobShouldFailWithoutJobConfigurePermission() throws Exception {\n\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(new Shell(\"echo 1\"));\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n\n        changeProjectOnTheDisc(project, \"echo 1\", \"echo 2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Job/Configure permission\"));\n\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/ReloadJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2016-02-19 22:53:15","commitOrder":4,"curCode":"    @Test public void deleteJobShouldFailWithoutJobDeletePermission() throws IOException {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Job/Delete permission\"));\n    }\n","date":"2016-02-19 22:53:15","endLine":68,"groupId":"3982","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteJobShouldFailWithoutJobDeletePermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/1b/f3622f9929cd98ea65cbaa64204356b207946e.src","preCode":"    @Test public void deleteJobShouldFailWithoutJobDeletePermission() throws IOException {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Job/Delete permission\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"N"}],"commitId":"c63abe3e8cfcb71d27458bebe7752d54edaa2d49","commitMessage":"@@@Merge branch 'master' of github.com:jenkinsci/jenkins\n","date":"2017-02-27 05:17:05","modifiedFileCount":"23","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2021-04-20 04:54:17","codes":[{"authorDate":"2021-04-20 04:54:17","commitOrder":5,"curCode":"    @Test public void reloadJobShouldFailWithoutJobConfigurePermission() throws Exception {\n\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(createScriptBuilder(\"echo 1\"));\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n\n        changeProjectOnTheDisc(project, \"echo 1\", \"echo 2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Item.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Job/Configure permission\"));\n\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n    }\n","date":"2021-04-20 04:54:17","endLine":78,"groupId":"10244","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"reloadJobShouldFailWithoutJobConfigurePermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/5b/f90005c1bb72f746db4f8a52585881c455eca8.src","preCode":"    @Test public void reloadJobShouldFailWithoutJobConfigurePermission() throws Exception {\n\n        FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n        project.getBuildersList().add(createScriptBuilder(\"echo 1\"));\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n\n        changeProjectOnTheDisc(project, \"echo 1\", \"echo 2\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Job/Configure permission\"));\n\n        assertThat(project.scheduleBuild2(0).get().getLog(), containsString(\"echo 1\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/ReloadJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2021-04-20 04:54:17","commitOrder":5,"curCode":"    @Test public void deleteJobShouldFailWithoutJobDeletePermission() throws IOException {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Item.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Job/Delete permission\"));\n    }\n","date":"2021-04-20 04:54:17","endLine":68,"groupId":"10244","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"deleteJobShouldFailWithoutJobDeletePermission","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/7f/33d7ca2a0b93da5bb392d93e68516306798dc9.src","preCode":"    @Test public void deleteJobShouldFailWithoutJobDeletePermission() throws IOException {\n\n        j.createFreeStyleProject(\"aProject\");\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(Job.READ, Jenkins.READ)\n                .invokeWithArgs(\"aProject\");\n\n        assertThat(result, failedWith(6));\n        assertThat(result, hasNoStandardOutput());\n        assertThat(result.stderr(), containsString(\"ERROR: user is missing the Job/Delete permission\"));\n    }\n","realPath":"test/src/test/java/hudson/cli/DeleteJobCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"0fd55bd6b50fcdf27368c6b771fb3d8363a24f83","commitMessage":"@@@Merge pull request #5419 from basil/subtypes\n\nUse declaring class as qualifier","date":"2021-04-20 04:54:17","modifiedFileCount":"43","status":"M","submitter":"Oleg Nenashev"}]
