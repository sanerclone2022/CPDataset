[{"authorTime":"2014-01-30 06:21:11","codes":[{"authorDate":"2017-05-04 23:21:56","commitOrder":3,"curCode":"    @Test public void updateViewWithRenamedClass() throws Exception {\n        ListView tv  = new ListView(\"tView\");\n        j.jenkins.addView(tv);\n        j.jenkins.XSTREAM2.addCompatibilityAlias(\"org.acme.old.Foo\", ListView.class);\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.CONFIGURE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/testview-foo.xml\"))\n                .invokeWithArgs(\"tView\");\n\n        assertThat(result, succeededSilently());\n    }\n","date":"2017-05-04 23:21:56","endLine":87,"groupId":"491","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"updateViewWithRenamedClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/1f/9f95ba88b0966744b805ba78368dd073d0c808.src","preCode":"    @Test public void updateViewWithRenamedClass() throws Exception {\n        ListView tv  = new ListView(\"tView\");\n        j.jenkins.addView(tv);\n        j.jenkins.XSTREAM2.addCompatibilityAlias(\"org.acme.old.Foo\", ListView.class);\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.CONFIGURE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/testview-foo.xml\"))\n                .invokeWithArgs(\"tView\");\n\n        assertThat(result, succeededSilently());\n    }\n","realPath":"test/src/test/java/hudson/cli/UpdateViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2014-01-30 06:21:11","commitOrder":3,"curCode":"    @Test public void updateViewShouldModifyViewConfiguration() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.CONFIGURE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\"))\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n\n        assertThat(\"Update should not modify view name\", j.jenkins.getView(\"ViewFromXML\"), nullValue());\n\n        final View updatedView = j.jenkins.getView(\"aView\");\n        assertThat(updatedView.getViewName(), equalTo(\"aView\"));\n        assertThat(updatedView.isFilterExecutors(), equalTo(true));\n        assertThat(updatedView.isFilterQueue(), equalTo(false));\n    }\n","date":"2014-01-30 06:31:49","endLine":89,"groupId":"8920","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"updateViewShouldModifyViewConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/29/9367f31ba5404d89c057b2562c2a5ba57bd805.src","preCode":"    @Test public void updateViewShouldModifyViewConfiguration() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.CONFIGURE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\"))\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n\n        assertThat(\"Update should not modify view name\", j.jenkins.getView(\"ViewFromXML\"), nullValue());\n\n        final View updatedView = j.jenkins.getView(\"aView\");\n        assertThat(updatedView.getViewName(), equalTo(\"aView\"));\n        assertThat(updatedView.isFilterExecutors(), equalTo(true));\n        assertThat(updatedView.isFilterQueue(), equalTo(false));\n    }\n","realPath":"test/src/test/java/hudson/cli/UpdateViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"NB"}],"commitId":"07683617d3f9277fe274e7a35f745b14b6a35e44","commitMessage":"@@@[JENKINS-42728] Updating view with CLI using input of a different view type should fail (#2804)\n\n* [JENKINS-42728] Updating view with CLI using different view type should fail\n\n- Additionally.  updating a view using an XML that will be converted by XStream via an alias\n  will succeed.\n\n[FIXES JENKINS-42728]\n\n* Remove TestView\n\n* update test\n","date":"2017-05-04 23:21:56","modifiedFileCount":"2","status":"M","submitter":"Scott Hebert"},{"authorTime":"2014-01-30 06:21:11","codes":[{"authorDate":"2020-12-20 03:51:40","commitOrder":4,"curCode":"    @Test public void updateViewWithRenamedClass() throws Exception {\n        ListView tv  = new ListView(\"tView\");\n        j.jenkins.addView(tv);\n        Jenkins.XSTREAM2.addCompatibilityAlias(\"org.acme.old.Foo\", ListView.class);\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.CONFIGURE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/testview-foo.xml\"))\n                .invokeWithArgs(\"tView\");\n\n        assertThat(result, succeededSilently());\n    }\n","date":"2020-12-20 03:51:40","endLine":87,"groupId":"491","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"updateViewWithRenamedClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/57/a0a35040576b84be88d614149bcc2844ad5946.src","preCode":"    @Test public void updateViewWithRenamedClass() throws Exception {\n        ListView tv  = new ListView(\"tView\");\n        j.jenkins.addView(tv);\n        j.jenkins.XSTREAM2.addCompatibilityAlias(\"org.acme.old.Foo\", ListView.class);\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.CONFIGURE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/testview-foo.xml\"))\n                .invokeWithArgs(\"tView\");\n\n        assertThat(result, succeededSilently());\n    }\n","realPath":"test/src/test/java/hudson/cli/UpdateViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2014-01-30 06:21:11","commitOrder":4,"curCode":"    @Test public void updateViewShouldModifyViewConfiguration() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.CONFIGURE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\"))\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n\n        assertThat(\"Update should not modify view name\", j.jenkins.getView(\"ViewFromXML\"), nullValue());\n\n        final View updatedView = j.jenkins.getView(\"aView\");\n        assertThat(updatedView.getViewName(), equalTo(\"aView\"));\n        assertThat(updatedView.isFilterExecutors(), equalTo(true));\n        assertThat(updatedView.isFilterQueue(), equalTo(false));\n    }\n","date":"2014-01-30 06:31:49","endLine":89,"groupId":"8920","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"updateViewShouldModifyViewConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/29/9367f31ba5404d89c057b2562c2a5ba57bd805.src","preCode":"    @Test public void updateViewShouldModifyViewConfiguration() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.CONFIGURE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\"))\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n\n        assertThat(\"Update should not modify view name\", j.jenkins.getView(\"ViewFromXML\"), nullValue());\n\n        final View updatedView = j.jenkins.getView(\"aView\");\n        assertThat(updatedView.getViewName(), equalTo(\"aView\"));\n        assertThat(updatedView.isFilterExecutors(), equalTo(true));\n        assertThat(updatedView.isFilterQueue(), equalTo(false));\n    }\n","realPath":"test/src/test/java/hudson/cli/UpdateViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"N"}],"commitId":"152682c1574c5b763616158f8e650e78b84023a1","commitMessage":"@@@Merge pull request #5109 from basil/improvements\n\nCode cleanup","date":"2020-12-20 03:51:40","modifiedFileCount":"47","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2021-09-05 22:13:34","codes":[{"authorDate":"2021-09-05 22:13:34","commitOrder":5,"curCode":"    @Test public void updateViewWithRenamedClass() throws Exception {\n        ListView tv  = new ListView(\"tView\");\n        j.jenkins.addView(tv);\n        Jenkins.XSTREAM2.addCompatibilityAlias(\"org.acme.old.Foo\", ListView.class);\n        j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(View.READ, View.CONFIGURE, Jenkins.READ).everywhere().toAuthenticated());\n        final CLICommandInvoker.Result result = command\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/testview-foo.xml\"))\n                .invokeWithArgs(\"tView\");\n\n        assertThat(result, succeededSilently());\n    }\n","date":"2021-09-05 22:13:34","endLine":86,"groupId":"10172","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"updateViewWithRenamedClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/bf/48c793a66927d232def59df483ee0bd13e4642.src","preCode":"    @Test public void updateViewWithRenamedClass() throws Exception {\n        ListView tv  = new ListView(\"tView\");\n        j.jenkins.addView(tv);\n        Jenkins.XSTREAM2.addCompatibilityAlias(\"org.acme.old.Foo\", ListView.class);\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.CONFIGURE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/testview-foo.xml\"))\n                .invokeWithArgs(\"tView\");\n\n        assertThat(result, succeededSilently());\n    }\n","realPath":"test/src/test/java/hudson/cli/UpdateViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2021-09-05 22:13:34","commitOrder":5,"curCode":"    @Test public void updateViewShouldModifyViewConfiguration() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(View.READ, View.CONFIGURE, Jenkins.READ).everywhere().toAuthenticated());\n        final CLICommandInvoker.Result result = command\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\"))\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n\n        assertThat(\"Update should not modify view name\", j.jenkins.getView(\"ViewFromXML\"), nullValue());\n\n        final View updatedView = j.jenkins.getView(\"aView\");\n        assertThat(updatedView.getViewName(), equalTo(\"aView\"));\n        assertThat(updatedView.isFilterExecutors(), equalTo(true));\n        assertThat(updatedView.isFilterQueue(), equalTo(false));\n    }\n","date":"2021-09-05 22:13:34","endLine":120,"groupId":"10172","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"updateViewShouldModifyViewConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/bf/48c793a66927d232def59df483ee0bd13e4642.src","preCode":"    @Test public void updateViewShouldModifyViewConfiguration() throws Exception {\n\n        j.jenkins.addView(new ListView(\"aView\"));\n\n        final CLICommandInvoker.Result result = command\n                .authorizedTo(View.READ, View.CONFIGURE, Jenkins.READ)\n                .withStdin(this.getClass().getResourceAsStream(\"/hudson/cli/view.xml\"))\n                .invokeWithArgs(\"aView\")\n        ;\n\n        assertThat(result, succeededSilently());\n\n        assertThat(\"Update should not modify view name\", j.jenkins.getView(\"ViewFromXML\"), nullValue());\n\n        final View updatedView = j.jenkins.getView(\"aView\");\n        assertThat(updatedView.getViewName(), equalTo(\"aView\"));\n        assertThat(updatedView.isFilterExecutors(), equalTo(true));\n        assertThat(updatedView.isFilterQueue(), equalTo(false));\n    }\n","realPath":"test/src/test/java/hudson/cli/UpdateViewCommandTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"d7604cfb08cd82449e0d79f25432a196fa04bc2a","commitMessage":"@@@Merge pull request #5701 from jglick/anonymous-to-lambda\n\nReplace some anonymous classes with lambdas","date":"2021-09-05 22:13:34","modifiedFileCount":"32","status":"M","submitter":"Raihaan Shouhell"}]
