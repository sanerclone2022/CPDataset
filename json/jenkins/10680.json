[{"authorTime":"2014-10-30 09:46:04","codes":[{"authorDate":"2014-10-30 09:46:04","commitOrder":1,"curCode":"    @Test public void untar() throws Exception {\n        FilePath dir = root.child(\"dir\");\n        dir.mkdirs();\n        dir.child(\"stuff\").write(\"hello\", null);\n        FilePath tar = root.child(\"dir.tar\");\n        OutputStream os = tar.write();\n        try {\n            dir.tar(os, new DirScanner.Full());\n        } finally {\n            os.close();\n        }\n        tar.untar(remote, FilePath.TarCompression.NONE);\n        assertEquals(\"hello\", remote.child(\"dir/stuff\").readToString());\n    }\n","date":"2014-10-30 09:46:04","endLine":74,"groupId":"3609","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"untar","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/23/996343a11cd3d655963b624858686204ba263a.src","preCode":"    @Test public void untar() throws Exception {\n        FilePath dir = root.child(\"dir\");\n        dir.mkdirs();\n        dir.child(\"stuff\").write(\"hello\", null);\n        FilePath tar = root.child(\"dir.tar\");\n        OutputStream os = tar.write();\n        try {\n            dir.tar(os, new DirScanner.Full());\n        } finally {\n            os.close();\n        }\n        tar.untar(remote, FilePath.TarCompression.NONE);\n        assertEquals(\"hello\", remote.child(\"dir/stuff\").readToString());\n    }\n","realPath":"test/src/test/java/jenkins/security/FilePathSecureTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2014-10-30 09:46:04","commitOrder":1,"curCode":"    @Test public void tar() throws Exception {\n        FilePath dir = remote.child(\"dir\");\n        dir.mkdirs();\n        dir.child(\"stuff\").write(\"hello\", null);\n        FilePath tar = root.child(\"dir.tar\");\n        OutputStream os = tar.write();\n        try {\n            dir.tar(os, new DirScanner.Full());\n        } finally {\n            os.close();\n        }\n        tar.untar(root, FilePath.TarCompression.NONE);\n        assertEquals(\"hello\", remote.child(\"dir/stuff\").readToString());\n    }\n","date":"2014-10-30 09:46:04","endLine":99,"groupId":"3609","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"tar","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/23/996343a11cd3d655963b624858686204ba263a.src","preCode":"    @Test public void tar() throws Exception {\n        FilePath dir = remote.child(\"dir\");\n        dir.mkdirs();\n        dir.child(\"stuff\").write(\"hello\", null);\n        FilePath tar = root.child(\"dir.tar\");\n        OutputStream os = tar.write();\n        try {\n            dir.tar(os, new DirScanner.Full());\n        } finally {\n            os.close();\n        }\n        tar.untar(root, FilePath.TarCompression.NONE);\n        assertEquals(\"hello\", remote.child(\"dir/stuff\").readToString());\n    }\n","realPath":"test/src/test/java/jenkins/security/FilePathSecureTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"47b8d961ae64e2589fdcad509a4d1b843ac20e62","commitMessage":"@@@merged back the RC branch\n","date":"2014-10-30 09:46:04","modifiedFileCount":"53","status":"B","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2020-01-20 21:55:10","codes":[{"authorDate":"2020-01-20 21:55:10","commitOrder":2,"curCode":"    @Test public void untar() throws Exception {\n        FilePath dir = root.child(\"dir\");\n        dir.mkdirs();\n        dir.child(\"stuff\").write(\"hello\", null);\n        FilePath tar = root.child(\"dir.tar\");\n        try (OutputStream os = tar.write()) {\n            dir.tar(os, new DirScanner.Full());\n        }\n        tar.untar(remote, FilePath.TarCompression.NONE);\n        assertEquals(\"hello\", remote.child(\"dir/stuff\").readToString());\n    }\n","date":"2020-01-20 21:55:10","endLine":71,"groupId":"10680","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"untar","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/7e/32c232ebac42ced81e2bf403a6822ef468b3e7.src","preCode":"    @Test public void untar() throws Exception {\n        FilePath dir = root.child(\"dir\");\n        dir.mkdirs();\n        dir.child(\"stuff\").write(\"hello\", null);\n        FilePath tar = root.child(\"dir.tar\");\n        OutputStream os = tar.write();\n        try {\n            dir.tar(os, new DirScanner.Full());\n        } finally {\n            os.close();\n        }\n        tar.untar(remote, FilePath.TarCompression.NONE);\n        assertEquals(\"hello\", remote.child(\"dir/stuff\").readToString());\n    }\n","realPath":"test/src/test/java/jenkins/security/FilePathSecureTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2020-01-20 21:55:10","commitOrder":2,"curCode":"    @Test public void tar() throws Exception {\n        FilePath dir = remote.child(\"dir\");\n        dir.mkdirs();\n        dir.child(\"stuff\").write(\"hello\", null);\n        FilePath tar = root.child(\"dir.tar\");\n        try (OutputStream os = tar.write()) {\n            dir.tar(os, new DirScanner.Full());\n        }\n        tar.untar(root, FilePath.TarCompression.NONE);\n        assertEquals(\"hello\", remote.child(\"dir/stuff\").readToString());\n    }\n","date":"2020-01-20 21:55:10","endLine":93,"groupId":"10680","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"tar","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/7e/32c232ebac42ced81e2bf403a6822ef468b3e7.src","preCode":"    @Test public void tar() throws Exception {\n        FilePath dir = remote.child(\"dir\");\n        dir.mkdirs();\n        dir.child(\"stuff\").write(\"hello\", null);\n        FilePath tar = root.child(\"dir.tar\");\n        OutputStream os = tar.write();\n        try {\n            dir.tar(os, new DirScanner.Full());\n        } finally {\n            os.close();\n        }\n        tar.untar(root, FilePath.TarCompression.NONE);\n        assertEquals(\"hello\", remote.child(\"dir/stuff\").readToString());\n    }\n","realPath":"test/src/test/java/jenkins/security/FilePathSecureTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"574ec6e5bdf2e4ac9394e290fefff5ac1c9a5c96","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2020-01-20 21:55:10","modifiedFileCount":"193","status":"M","submitter":"Wadeck Follonier"}]
