[{"authorTime":"2010-10-17 15:51:08","codes":[{"authorDate":"2006-11-19 01:52:04","commitOrder":2,"curCode":"    public static void copyFile(File src, File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2006-11-19 01:52:04","endLine":316,"groupId":"8218","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(Filesrc@Filedst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e5/7d2c20329a76856a88887e7f36eeaffab097b0.src","preCode":"    public static void copyFile(File src, File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"NB"},{"authorDate":"2010-10-17 15:51:08","commitOrder":2,"curCode":"    protected void renameTo(String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                Item existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    \r\n                    \r\n                    \r\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                String oldName = this.name;\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(getRootDir());\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                callOnRenamed(newName, parent, oldName);\n\n                for (ItemListener l : ItemListener.all())\n                    l.onRenamed(this, oldName, newName);\n            }\n        }\n    }\n","date":"2010-10-17 15:51:08","endLine":230,"groupId":"5909","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(StringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/88/77e40c455795fbc07465a2649ae4bf69962f3e.src","preCode":"    protected void renameTo(String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                Item existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    \r\n                    \r\n                    \r\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                String oldName = this.name;\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(getRootDir());\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                callOnRenamed(newName, parent, oldName);\n\n                for (ItemListener l : ItemListener.all())\n                    l.onRenamed(this, oldName, newName);\n            }\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"}],"commitId":"e86b3a3498602a0772befa168b1d9ff7879cbce3","commitMessage":"@@@pulled up rename to Item and onRenamed to ItemGroup\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@36009 71c3de6d-444a-0410-be80-ed276b4c234a\n","date":"2010-10-17 15:51:08","modifiedFileCount":"5","status":"M","submitter":"kohsuke"},{"authorTime":"2013-10-28 02:05:04","codes":[{"authorDate":"2006-11-19 01:52:04","commitOrder":3,"curCode":"    public static void copyFile(File src, File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2006-11-19 01:52:04","endLine":316,"groupId":"8218","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(Filesrc@Filedst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e5/7d2c20329a76856a88887e7f36eeaffab097b0.src","preCode":"    public static void copyFile(File src, File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"N"},{"authorDate":"2013-10-28 02:05:04","commitOrder":3,"curCode":"    protected void renameTo(String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                Item existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    \r\n                    \r\n                    \r\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                String oldName = this.name;\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                callOnRenamed(newName, parent, oldName);\n\n                for (ItemListener l : ItemListener.all())\n                    l.onRenamed(this, oldName, newName);\n            }\n        }\n    }\n","date":"2013-10-28 02:05:04","endLine":298,"groupId":"4150","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(StringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/0d/4b8662d185810553a7a52a33247173bba35017.src","preCode":"    protected void renameTo(String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                Item existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    \r\n                    \r\n                    \r\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                String oldName = this.name;\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(getRootDir());\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                callOnRenamed(newName, parent, oldName);\n\n                for (ItemListener l : ItemListener.all())\n                    l.onRenamed(this, oldName, newName);\n            }\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"}],"commitId":"7ef6d9a08b8ccfc410f310e4487bf17464ed7335","commitMessage":"@@@Wrong source root\n\n... as pointed out by https://github.com/jenkinsci/jenkins/pull/961\n","date":"2013-10-28 02:05:04","modifiedFileCount":"1","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2013-12-20 01:22:01","codes":[{"authorDate":"2006-11-19 01:52:04","commitOrder":4,"curCode":"    public static void copyFile(File src, File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2006-11-19 01:52:04","endLine":316,"groupId":"8218","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(Filesrc@Filedst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e5/7d2c20329a76856a88887e7f36eeaffab097b0.src","preCode":"    public static void copyFile(File src, File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"N"},{"authorDate":"2013-12-20 01:22:01","commitOrder":4,"curCode":"    protected void renameTo(String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                Item existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    \r\n                    \r\n                    \r\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                String oldName = this.name;\n                String oldFullName = getFullName();\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                callOnRenamed(newName, parent, oldName);\n\n                ItemListener.fireLocationChange(this, oldFullName);\n            }\n        }\n    }\n","date":"2013-12-20 01:22:01","endLine":301,"groupId":"4150","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(StringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/30/f9f8d4d74660c731e101a4c6a5785667990945.src","preCode":"    protected void renameTo(String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                Item existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    \r\n                    \r\n                    \r\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                String oldName = this.name;\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                callOnRenamed(newName, parent, oldName);\n\n                for (ItemListener l : ItemListener.all())\n                    l.onRenamed(this, oldName, newName);\n            }\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"M"}],"commitId":"9fc87f4a22ef4e32445451f5114fb800b6b73e9e","commitMessage":"@@@[FIXED JENKINS-18028] Providing a supported way to move an item between folders.  firing changes as we go.","date":"2013-12-20 01:22:01","modifiedFileCount":"8","status":"M","submitter":"Jesse Glick"},{"authorTime":"2013-12-20 01:22:01","codes":[{"authorDate":"2014-06-04 02:51:35","commitOrder":5,"curCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2014-06-04 02:51:35","endLine":958,"groupId":"8218","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(@NonnullFilesrc@@NonnullFiledst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b7/725aa68fcba854bb08034d77412e07cee83bd1.src","preCode":"    public static void copyFile(File src, File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":951,"status":"M"},{"authorDate":"2013-12-20 01:22:01","commitOrder":5,"curCode":"    protected void renameTo(String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                Item existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    \r\n                    \r\n                    \r\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                String oldName = this.name;\n                String oldFullName = getFullName();\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                callOnRenamed(newName, parent, oldName);\n\n                ItemListener.fireLocationChange(this, oldFullName);\n            }\n        }\n    }\n","date":"2013-12-20 01:22:01","endLine":301,"groupId":"4150","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(StringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/30/f9f8d4d74660c731e101a4c6a5785667990945.src","preCode":"    protected void renameTo(String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                Item existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    \r\n                    \r\n                    \r\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                String oldName = this.name;\n                String oldFullName = getFullName();\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                callOnRenamed(newName, parent, oldName);\n\n                ItemListener.fireLocationChange(this, oldFullName);\n            }\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"N"}],"commitId":"ebccc6a34a7791eadaf08121e8d79f3341434043","commitMessage":"@@@Merge pull request #1223 from synopsys-arc-oss/hudson_util_annotations\n\nAnnotate hudson.Util methods by @CheckForNull and @Nonnull","date":"2014-06-04 02:51:35","modifiedFileCount":"1","status":"M","submitter":"Jesse Glick"},{"authorTime":"2014-09-24 21:32:50","codes":[{"authorDate":"2014-06-04 02:51:35","commitOrder":6,"curCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2014-06-04 02:51:35","endLine":958,"groupId":"8218","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(@NonnullFilesrc@@NonnullFiledst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b7/725aa68fcba854bb08034d77412e07cee83bd1.src","preCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":951,"status":"N"},{"authorDate":"2014-09-24 21:32:50","commitOrder":6,"curCode":"    protected void renameTo(String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                Item existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    \r\n                    \r\n                    \r\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                String oldName = this.name;\n                String oldFullName = getFullName();\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                try {\n                    parent.onRenamed(this, oldName, newName);\n                } catch (AbstractMethodError _) {\n                    \r\n                }\n\n                ItemListener.fireLocationChange(this, oldFullName);\n            }\n        }\n    }\n","date":"2014-09-24 21:32:50","endLine":313,"groupId":"4150","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(StringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/6c/670da4c0f428916d085162362542664bd7218e.src","preCode":"    protected void renameTo(String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                Item existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    \r\n                    \r\n                    \r\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                String oldName = this.name;\n                String oldFullName = getFullName();\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                callOnRenamed(newName, parent, oldName);\n\n                ItemListener.fireLocationChange(this, oldFullName);\n            }\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"M"}],"commitId":"253943e13ef16a9e14b71ef07a30e51e6a66e38f","commitMessage":"@@@[JENKINS-5756] Removing workarounds for HotSpot bug.\nhttps://bugs.openjdk.java.net/browse/JDK-6933067 claims to be fixed as of Java 6.  our baseline.","date":"2014-09-24 21:32:50","modifiedFileCount":"9","status":"M","submitter":"Jesse Glick"},{"authorTime":"2014-10-02 03:54:13","codes":[{"authorDate":"2014-06-04 02:51:35","commitOrder":7,"curCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2014-06-04 02:51:35","endLine":958,"groupId":"8218","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(@NonnullFilesrc@@NonnullFiledst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b7/725aa68fcba854bb08034d77412e07cee83bd1.src","preCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":951,"status":"N"},{"authorDate":"2014-10-02 03:54:13","commitOrder":7,"curCode":"    protected void renameTo(final String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                ACL.impersonate(ACL.SYSTEM,new Callable<Void,IOException>() {\n                    final Authentication user = Jenkins.getAuthentication();\n                    @Override\n                    public Void call() throws IOException {\n                        Item existing = parent.getItem(newName);\n                        if (existing != null && existing!=AbstractItem.this) {\n                            if (existing.getACL().hasPermission(user,Item.DISCOVER))\n                                \r\n                                \r\n                                \r\n                                throw new IllegalArgumentException(\"Job \" + newName + \" already exists\");\n                            else {\n                                \r\n                                throw new IOException(\"Unable to rename to \" + newName);\n                            }\n                        }\n                        return null;\n                    }\n                });\n\n\n                String oldName = this.name;\n                String oldFullName = getFullName();\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                try {\n                    parent.onRenamed(this, oldName, newName);\n                } catch (AbstractMethodError _) {\n                    \r\n                }\n\n                ItemListener.fireLocationChange(this, oldFullName);\n            }\n        }\n    }\n","date":"2014-10-02 03:54:13","endLine":330,"groupId":"4150","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(finalStringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e3/5ccf01c4c431d46a2acad8206660bcb909dc3d.src","preCode":"    protected void renameTo(String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                Item existing = parent.getItem(newName);\n                if (existing != null && existing!=this)\n                    \r\n                    \r\n                    \r\n                    throw new IllegalArgumentException(\"Job \" + newName\n                            + \" already exists\");\n\n                String oldName = this.name;\n                String oldFullName = getFullName();\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                try {\n                    parent.onRenamed(this, oldName, newName);\n                } catch (AbstractMethodError _) {\n                    \r\n                }\n\n                ItemListener.fireLocationChange(this, oldFullName);\n            }\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"}],"commitId":"926e5f10bce6006b70e0eeffb9ca5dc77c6704fe","commitMessage":"@@@merged back the RC branch\n","date":"2014-10-02 03:54:13","modifiedFileCount":"8","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2014-10-30 09:46:04","codes":[{"authorDate":"2014-06-04 02:51:35","commitOrder":8,"curCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2014-06-04 02:51:35","endLine":958,"groupId":"8218","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(@NonnullFilesrc@@NonnullFiledst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b7/725aa68fcba854bb08034d77412e07cee83bd1.src","preCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":951,"status":"N"},{"authorDate":"2014-10-30 09:46:04","commitOrder":8,"curCode":"    protected void renameTo(final String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                ACL.impersonate(ACL.SYSTEM,new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                    final Authentication user = Jenkins.getAuthentication();\n                    @Override\n                    public Void call() throws IOException {\n                        Item existing = parent.getItem(newName);\n                        if (existing != null && existing!=AbstractItem.this) {\n                            if (existing.getACL().hasPermission(user,Item.DISCOVER))\n                                \r\n                                \r\n                                \r\n                                throw new IllegalArgumentException(\"Job \" + newName + \" already exists\");\n                            else {\n                                \r\n                                throw new IOException(\"Unable to rename to \" + newName);\n                            }\n                        }\n                        return null;\n                    }\n                });\n\n\n                String oldName = this.name;\n                String oldFullName = getFullName();\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                try {\n                    parent.onRenamed(this, oldName, newName);\n                } catch (AbstractMethodError _) {\n                    \r\n                }\n\n                ItemListener.fireLocationChange(this, oldFullName);\n            }\n        }\n    }\n","date":"2014-10-30 09:46:04","endLine":330,"groupId":"4150","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(finalStringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/35/24444feaf3fe4c837502244dd049509a48f14f.src","preCode":"    protected void renameTo(final String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                ACL.impersonate(ACL.SYSTEM,new Callable<Void,IOException>() {\n                    final Authentication user = Jenkins.getAuthentication();\n                    @Override\n                    public Void call() throws IOException {\n                        Item existing = parent.getItem(newName);\n                        if (existing != null && existing!=AbstractItem.this) {\n                            if (existing.getACL().hasPermission(user,Item.DISCOVER))\n                                \r\n                                \r\n                                \r\n                                throw new IllegalArgumentException(\"Job \" + newName + \" already exists\");\n                            else {\n                                \r\n                                throw new IOException(\"Unable to rename to \" + newName);\n                            }\n                        }\n                        return null;\n                    }\n                });\n\n\n                String oldName = this.name;\n                String oldFullName = getFullName();\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                try {\n                    parent.onRenamed(this, oldName, newName);\n                } catch (AbstractMethodError _) {\n                    \r\n                }\n\n                ItemListener.fireLocationChange(this, oldFullName);\n            }\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"}],"commitId":"47b8d961ae64e2589fdcad509a4d1b843ac20e62","commitMessage":"@@@merged back the RC branch\n","date":"2014-10-30 09:46:04","modifiedFileCount":"53","status":"M","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2015-03-13 19:13:03","codes":[{"authorDate":"2014-06-04 02:51:35","commitOrder":9,"curCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2014-06-04 02:51:35","endLine":958,"groupId":"8218","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(@NonnullFilesrc@@NonnullFiledst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b7/725aa68fcba854bb08034d77412e07cee83bd1.src","preCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":951,"status":"N"},{"authorDate":"2015-03-13 19:13:03","commitOrder":9,"curCode":"    protected void renameTo(final String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        String oldName = this.name;\n        String oldFullName = getFullName();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                ACL.impersonate(ACL.SYSTEM,new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                    final Authentication user = Jenkins.getAuthentication();\n                    @Override\n                    public Void call() throws IOException {\n                        Item existing = parent.getItem(newName);\n                        if (existing != null && existing!=AbstractItem.this) {\n                            if (existing.getACL().hasPermission(user,Item.DISCOVER))\n                                \r\n                                \r\n                                \r\n                                throw new IllegalArgumentException(\"Job \" + newName + \" already exists\");\n                            else {\n                                \r\n                                throw new IOException(\"Unable to rename to \" + newName);\n                            }\n                        }\n                        return null;\n                    }\n                });\n\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                try {\n                    parent.onRenamed(this, oldName, newName);\n                } catch (AbstractMethodError _) {\n                    \r\n                }\n            }\n        }\n        ItemListener.fireLocationChange(this, oldFullName);\n    }\n","date":"2015-03-13 19:13:03","endLine":329,"groupId":"4150","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(finalStringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/98/0da8ed44d4bc6c52cde64b7d71a44851bdb7a5.src","preCode":"    protected void renameTo(final String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                ACL.impersonate(ACL.SYSTEM,new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                    final Authentication user = Jenkins.getAuthentication();\n                    @Override\n                    public Void call() throws IOException {\n                        Item existing = parent.getItem(newName);\n                        if (existing != null && existing!=AbstractItem.this) {\n                            if (existing.getACL().hasPermission(user,Item.DISCOVER))\n                                \r\n                                \r\n                                \r\n                                throw new IllegalArgumentException(\"Job \" + newName + \" already exists\");\n                            else {\n                                \r\n                                throw new IOException(\"Unable to rename to \" + newName);\n                            }\n                        }\n                        return null;\n                    }\n                });\n\n\n                String oldName = this.name;\n                String oldFullName = getFullName();\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                try {\n                    parent.onRenamed(this, oldName, newName);\n                } catch (AbstractMethodError _) {\n                    \r\n                }\n\n                ItemListener.fireLocationChange(this, oldFullName);\n            }\n        }\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"M"}],"commitId":"4edbb2565b72d3ac64f520c128a7afcfeba92c33","commitMessage":"@@@Merge pull request #1597 from fbelzunc/JENKINS-27183\n\n[FIXED JENKINS-27183] Avoid deadlock when using build-monitor-plugin\n","date":"2015-03-13 19:13:03","modifiedFileCount":"1","status":"M","submitter":"Oliver Gond?a"},{"authorTime":"2017-01-04 23:12:42","codes":[{"authorDate":"2014-06-04 02:51:35","commitOrder":10,"curCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2014-06-04 02:51:35","endLine":958,"groupId":"8218","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(@NonnullFilesrc@@NonnullFiledst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b7/725aa68fcba854bb08034d77412e07cee83bd1.src","preCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":951,"status":"N"},{"authorDate":"2017-01-04 23:12:42","commitOrder":10,"curCode":"    protected void renameTo(final String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        String oldName = this.name;\n        String oldFullName = getFullName();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                \r\n                Items.verifyItemDoesNotAlreadyExist(parent, newName, this);\n\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                try {\n                    parent.onRenamed(this, oldName, newName);\n                } catch (AbstractMethodError _) {\n                    \r\n                }\n            }\n        }\n        ItemListener.fireLocationChange(this, oldFullName);\n    }\n","date":"2017-01-04 23:12:42","endLine":317,"groupId":"4150","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(finalStringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/8f/1fc9325bfb7d7ecb0aa212be8c519d6947267f.src","preCode":"    protected void renameTo(final String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        String oldName = this.name;\n        String oldFullName = getFullName();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                ACL.impersonate(ACL.SYSTEM,new NotReallyRoleSensitiveCallable<Void,IOException>() {\n                    final Authentication user = Jenkins.getAuthentication();\n                    @Override\n                    public Void call() throws IOException {\n                        Item existing = parent.getItem(newName);\n                        if (existing != null && existing!=AbstractItem.this) {\n                            if (existing.getACL().hasPermission(user,Item.DISCOVER))\n                                \r\n                                \r\n                                \r\n                                throw new IllegalArgumentException(\"Job \" + newName + \" already exists\");\n                            else {\n                                \r\n                                throw new IOException(\"Unable to rename to \" + newName);\n                            }\n                        }\n                        return null;\n                    }\n                });\n\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                try {\n                    parent.onRenamed(this, oldName, newName);\n                } catch (AbstractMethodError _) {\n                    \r\n                }\n            }\n        }\n        ItemListener.fireLocationChange(this, oldFullName);\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"M"}],"commitId":"921f1a81ed10c464a6e243d1dc1f5710805ea217","commitMessage":"@@@Merge branch 'security-stable-2.32' into security-master\n","date":"2017-01-04 23:12:42","modifiedFileCount":"4","status":"M","submitter":"Jesse Glick"},{"authorTime":"2017-05-20 18:32:52","codes":[{"authorDate":"2014-06-04 02:51:35","commitOrder":11,"curCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2014-06-04 02:51:35","endLine":958,"groupId":"8218","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(@NonnullFilesrc@@NonnullFiledst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b7/725aa68fcba854bb08034d77412e07cee83bd1.src","preCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":951,"status":"N"},{"authorDate":"2017-05-20 18:32:52","commitOrder":11,"curCode":"    protected void renameTo(final String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        String oldName = this.name;\n        String oldFullName = getFullName();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                \r\n                Items.verifyItemDoesNotAlreadyExist(parent, newName, this);\n\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                parent.onRenamed(this, oldName, newName);\n            }\n        }\n        ItemListener.fireLocationChange(this, oldFullName);\n    }\n","date":"2017-05-20 18:32:52","endLine":328,"groupId":"4150","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(finalStringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/8c/d5a1625e3640bfbc21674f2ad16df1eafd1634.src","preCode":"    protected void renameTo(final String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        String oldName = this.name;\n        String oldFullName = getFullName();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                \r\n                Items.verifyItemDoesNotAlreadyExist(parent, newName, this);\n\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                try {\n                    parent.onRenamed(this, oldName, newName);\n                } catch (AbstractMethodError _) {\n                    \r\n                }\n            }\n        }\n        ItemListener.fireLocationChange(this, oldFullName);\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"}],"commitId":"d13b1361e1650494528a7b46f82fe25d7fb5e3c3","commitMessage":"@@@Adding some interface default method implementations (#2879)\n\n* Adding some interface default method implementations rather than catching AbstractMethodError or providing partial implementation classes.\n\n* Show Javadoc warnings and errors.  but not ?Generating ?/core/target/site/apidocs/jenkins/model/lazy/class-use/AbstractLazyLoadRunMap.html...? and the like.\n\n* Javadoc fixes.\n\n* Review comments from @oleg-nenashev.\n\n* Test fixes.\n\n* Remove the unused import\n","date":"2017-05-20 18:32:52","modifiedFileCount":"37","status":"M","submitter":"Jesse Glick"},{"authorTime":"2019-08-26 21:18:54","codes":[{"authorDate":"2014-06-04 02:51:35","commitOrder":12,"curCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2014-06-04 02:51:35","endLine":958,"groupId":"8218","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(@NonnullFilesrc@@NonnullFiledst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/b7/725aa68fcba854bb08034d77412e07cee83bd1.src","preCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":951,"status":"N"},{"authorDate":"2019-08-26 21:18:54","commitOrder":12,"curCode":"    protected void renameTo(final String newName) throws IOException {\n\n        if (!isNameEditable()) {\n            throw new IOException(\"Trying to rename an item that does not support this operation.\");\n        }\n\n        \r\n        final ItemGroup parent = getParent();\n        String oldName = this.name;\n        String oldFullName = getFullName();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                \r\n                Items.verifyItemDoesNotAlreadyExist(parent, newName, this);\n\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                parent.onRenamed(this, oldName, newName);\n            }\n        }\n        ItemListener.fireLocationChange(this, oldFullName);\n    }\n","date":"2019-08-26 21:18:54","endLine":455,"groupId":"4150","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(finalStringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ea/e1e64e4014a60906e50ade8b52bd67b931de7d.src","preCode":"    protected void renameTo(final String newName) throws IOException {\n        \r\n        final ItemGroup parent = getParent();\n        String oldName = this.name;\n        String oldFullName = getFullName();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                \r\n                Items.verifyItemDoesNotAlreadyExist(parent, newName, this);\n\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                parent.onRenamed(this, oldName, newName);\n            }\n        }\n        ItemListener.fireLocationChange(this, oldFullName);\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"}],"commitId":"a84ab891e70d43b792eded4db6355e66124326ae","commitMessage":"@@@Merge branch 'master' into security-master\n","date":"2019-08-26 21:18:54","modifiedFileCount":"28","status":"M","submitter":"Daniel Beck"},{"authorTime":"2019-08-26 21:18:54","codes":[{"authorDate":"2020-04-06 17:32:41","commitOrder":13,"curCode":"    public static void copyFile(@NonNull File src, @NonNull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","date":"2020-04-06 17:32:41","endLine":1025,"groupId":"10989","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"copyFile","params":"(@NonNullFilesrc@@NonNullFiledst)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a1/0a8864e1b73a32b27c953be2bac043b9c6bf78.src","preCode":"    public static void copyFile(@Nonnull File src, @Nonnull File dst) throws BuildException {\n        Copy cp = new Copy();\n        cp.setProject(new org.apache.tools.ant.Project());\n        cp.setTofile(dst);\n        cp.setFile(src);\n        cp.setOverwrite(true);\n        cp.execute();\n    }\n","realPath":"core/src/main/java/hudson/Util.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":1018,"status":"M"},{"authorDate":"2019-08-26 21:18:54","commitOrder":13,"curCode":"    protected void renameTo(final String newName) throws IOException {\n\n        if (!isNameEditable()) {\n            throw new IOException(\"Trying to rename an item that does not support this operation.\");\n        }\n\n        \r\n        final ItemGroup parent = getParent();\n        String oldName = this.name;\n        String oldFullName = getFullName();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                \r\n                Items.verifyItemDoesNotAlreadyExist(parent, newName, this);\n\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                parent.onRenamed(this, oldName, newName);\n            }\n        }\n        ItemListener.fireLocationChange(this, oldFullName);\n    }\n","date":"2019-08-26 21:18:54","endLine":455,"groupId":"10989","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"renameTo","params":"(finalStringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ea/e1e64e4014a60906e50ade8b52bd67b931de7d.src","preCode":"    protected void renameTo(final String newName) throws IOException {\n\n        if (!isNameEditable()) {\n            throw new IOException(\"Trying to rename an item that does not support this operation.\");\n        }\n\n        \r\n        final ItemGroup parent = getParent();\n        String oldName = this.name;\n        String oldFullName = getFullName();\n        synchronized (parent) {\n            synchronized (this) {\n                \r\n                if (newName == null)\n                    throw new IllegalArgumentException(\"New name is not given\");\n\n                \r\n                if (this.name.equals(newName))\n                    return;\n\n                \r\n                \r\n                \r\n                Items.verifyItemDoesNotAlreadyExist(parent, newName, this);\n\n                File oldRoot = this.getRootDir();\n\n                doSetName(newName);\n                File newRoot = this.getRootDir();\n\n                boolean success = false;\n\n                try {\r\n                    boolean interrupted = false;\n                    boolean renamed = false;\n\n                    \r\n                    \r\n                    \r\n                    \r\n                    for (int retry = 0; retry < 5; retry++) {\n                        if (oldRoot.renameTo(newRoot)) {\n                            renamed = true;\n                            break; \r\n                        }\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            \r\n                            interrupted = true;\n                        }\n                    }\n\n                    if (interrupted)\n                        Thread.currentThread().interrupt();\n\n                    if (!renamed) {\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        Copy cp = new Copy();\n                        cp.setProject(new org.apache.tools.ant.Project());\n                        cp.setTodir(newRoot);\n                        FileSet src = new FileSet();\n                        src.setDir(oldRoot);\n                        cp.addFileset(src);\n                        cp.setOverwrite(true);\n                        cp.setPreserveLastModified(true);\n                        cp.setFailOnError(false); \r\n                                                    \r\n                        cp.execute();\n\n                        \r\n                        try {\n                            Util.deleteRecursive(oldRoot);\n                        } catch (IOException e) {\n                            \r\n                            e.printStackTrace();\n                        }\n                    }\n\n                    success = true;\n                } finally {\n                    \r\n                    if (!success)\n                        doSetName(oldName);\n                }\n\n                parent.onRenamed(this, oldName, newName);\n            }\n        }\n        ItemListener.fireLocationChange(this, oldFullName);\n    }\n","realPath":"core/src/main/java/hudson/model/AbstractItem.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"N"}],"commitId":"449c5aced523a6e66fe3d6a804e5dbfd5c5c67c6","commitMessage":"@@@Merge pull request #4604 from jtnord/kill-jsr-305\n\nKill jsr-305","date":"2020-04-06 17:32:41","modifiedFileCount":"352","status":"M","submitter":"Tim Jacomb"}]
