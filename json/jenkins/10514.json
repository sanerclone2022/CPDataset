[{"authorTime":"2018-09-27 21:26:44","codes":[{"authorDate":"2018-09-27 21:26:44","commitOrder":1,"curCode":"    public void fileParameter_withSingleDot() throws Exception {\n        \r\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\".\", null)\n        )));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\".\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/./uploaded-file.txt\", uploadedContent);\n    }\n","date":"2018-09-27 21:26:44","endLine":165,"groupId":"2735","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fileParameter_withSingleDot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/91/1f88431b2b6d394ba57b365354db9b0a236da7.src","preCode":"    public void fileParameter_withSingleDot() throws Exception {\n        \r\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\".\", null)\n        )));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\".\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/./uploaded-file.txt\", uploadedContent);\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"B"},{"authorDate":"2018-09-27 21:26:44","commitOrder":1,"curCode":"    public void fileParameter_withDoubleDot() throws Exception {\n        \r\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"..\", null)\n        )));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"..\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/../uploaded-file.txt\", uploadedContent);\n    }\n","date":"2018-09-27 21:26:44","endLine":193,"groupId":"2735","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fileParameter_withDoubleDot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/91/1f88431b2b6d394ba57b365354db9b0a236da7.src","preCode":"    public void fileParameter_withDoubleDot() throws Exception {\n        \r\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"..\", null)\n        )));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"..\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/../uploaded-file.txt\", uploadedContent);\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"B"}],"commitId":"5ddb847d2a55dadc30a84f4f62e2d254780ab30e","commitMessage":"@@@Merge branch 'security-stable-2.138' into security-master\n","date":"2018-09-27 21:26:44","modifiedFileCount":"10","status":"B","submitter":"Daniel Beck"},{"authorTime":"2020-07-17 22:15:15","codes":[{"authorDate":"2020-07-17 22:15:15","commitOrder":2,"curCode":"    public void fileParameter_withSingleDot() throws Exception {\n        \r\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\".\", null)\n        )));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent, StandardCharsets.UTF_8);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\".\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/./uploaded-file.txt\", uploadedContent);\n    }\n","date":"2020-07-17 22:15:15","endLine":221,"groupId":"10514","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fileParameter_withSingleDot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/2c/1cbd9eef604205314c1f0fc78b735b6ebf80dc.src","preCode":"    public void fileParameter_withSingleDot() throws Exception {\n        \r\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\".\", null)\n        )));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\".\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/./uploaded-file.txt\", uploadedContent);\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"},{"authorDate":"2020-07-17 22:15:15","commitOrder":2,"curCode":"    public void fileParameter_withDoubleDot() throws Exception {\n        \r\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"..\", null)\n        )));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent, StandardCharsets.UTF_8);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"..\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/../uploaded-file.txt\", uploadedContent);\n    }\n","date":"2020-07-17 22:15:15","endLine":249,"groupId":"10514","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fileParameter_withDoubleDot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/2c/1cbd9eef604205314c1f0fc78b735b6ebf80dc.src","preCode":"    public void fileParameter_withDoubleDot() throws Exception {\n        \r\n        \n        FreeStyleProject p = j.createFreeStyleProject();\n        p.addProperty(new ParametersDefinitionProperty(Collections.singletonList(\n                new FileParameterDefinition(\"..\", null)\n        )));\n        \n        String uploadedContent = \"test-content\";\n        File uploadedFile = tmp.newFile();\n        FileUtils.write(uploadedFile, uploadedContent);\n        \n        FreeStyleBuild build = p.scheduleBuild2(0, new Cause.UserIdCause(), new ParametersAction(\n                new FileParameterValue(\"..\", uploadedFile, \"uploaded-file.txt\")\n        )).get();\n        \n        assertThat(build.getResult(), equalTo(Result.FAILURE));\n        \n        \r\n        JenkinsRule.WebClient wc = j.createWebClient();\n        wc.getOptions().setThrowExceptionOnFailingStatusCode(false);\n        \n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/uploaded-file.txt\", uploadedContent);\n        checkUrlNot200AndNotContains(wc, build.getUrl() + \"parameters/parameter/../uploaded-file.txt\", uploadedContent);\n    }\n","realPath":"test/src/test/java/hudson/model/FileParameterValueTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"M"}],"commitId":"688647a8540f8db179dc5c9cf62e3208eb444d9f","commitMessage":"@@@tests: minor refactorings either for performance or readability (#4846)\n\ntests: minor refactorings either for performance or readability","date":"2020-07-17 22:15:15","modifiedFileCount":"18","status":"M","submitter":"Tim Jacomb"}]
