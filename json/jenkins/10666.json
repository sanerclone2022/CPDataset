[{"authorTime":"2017-12-16 16:25:30","codes":[{"authorDate":"2017-12-16 16:25:30","commitOrder":2,"curCode":"    private void makeRequestAndVerify(String expected) throws IOException, SAXException {\n        WebRequest req = new WebRequest(new URL(j.getURL(), \"test-post\"));\n        req.setHttpMethod(HttpMethod.POST);\n        req.setEncodingType(null);\n        Page p = wc.getPage(req);\n        assertEquals(expected, p.getWebResponse().getContentAsString());\n    }\n","date":"2017-12-16 16:25:30","endLine":104,"groupId":"4901","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"makeRequestAndVerify","params":"(Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ee/f3b21dfd581ee79716c249978cbacae369c3f1.src","preCode":"    private void makeRequestAndVerify(String expected) throws IOException, SAXException {\n        WebRequest req = new WebRequest(new URL(j.getURL(), \"test-post\"));\n        req.setHttpMethod(HttpMethod.POST);\n        req.setEncodingType(null);\n        Page p = wc.getPage(req);\n        assertEquals(expected, p.getWebResponse().getContentAsString());\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiCrumbExclusionTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"},{"authorDate":"2017-12-16 16:25:30","commitOrder":2,"curCode":"    private void makeRequestWithAuthCodeAndVerify(String authCode, String expectedLogin) throws IOException, SAXException {\n        WebRequest req = new WebRequest(new URL(j.getURL(),\"test\"));\n        req.setEncodingType(null);\n        if (authCode!=null)\n            req.setAdditionalHeader(\"Authorization\", authCode);\n        Page p = wc.getPage(req);\n        assertEquals(expectedLogin, p.getWebResponse().getContentAsString());\n    }\n","date":"2017-12-16 16:25:30","endLine":160,"groupId":"5960","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"makeRequestWithAuthCodeAndVerify","params":"(StringauthCode@StringexpectedLogin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/0b/471dd2b344346cbd1c15748aacc67245fee208.src","preCode":"    private void makeRequestWithAuthCodeAndVerify(String authCode, String expectedLogin) throws IOException, SAXException {\n        WebRequest req = new WebRequest(new URL(j.getURL(),\"test\"));\n        req.setEncodingType(null);\n        if (authCode!=null)\n            req.setAdditionalHeader(\"Authorization\", authCode);\n        Page p = wc.getPage(req);\n        assertEquals(expectedLogin, p.getWebResponse().getContentAsString());\n    }\n","realPath":"test/src/test/java/jenkins/security/BasicHeaderProcessorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"MB"}],"commitId":"814d202716a6c61c7d371c6a62755d296fe199a5","commitMessage":"@@@[JENKINS-22474] API Token does not require CSRF token (#3129)\n\n* [JENKINS-22474] API Token does not require CSRF token\n- in order to ease the use of the api.  we are not requiring the request to have a crumb\n- in terms of security it's not a problem normally since the CSRF attacks use the cookies and in case of API Token.  it's session-less / cookie-less\n\n* - adjust the license header\n\n* - add test for basic authentication\n- add test for login process\n\n* - add test for form submission using ui (htmlunit).  not just login form\n\n* - modification requested by Jesse\n\n* - pom.xml update to use the last version of jenkins-test-harness (with the token helper methods)\n- beginning of the simplification of tests\n\n* - using the try-with-resource approach to ease readability\n\n* - using closure method now\n\n* - add missing login transformation\n\n* - add unit test\n\n* - use withToken\n- remove useless crumb for GET method\n- add fail (otherwise the assert in catch is not as useful as it could be)\n\n* another bunch of test cases\n\n* - for HudsonTestCase.  some additional modifications are required: changing the view / different type of management for the variable inside the views\n\n* - small other tests\n\n* - last batch for the login method\n\n* - crumb is not more required since we are using API Token\n\n* - converting auth to ApiToken to avoid crumb method\n\n* - converting auth to ApiToken to avoid crumb method (second)\n\n* - remove usage of closure aware methods\n\n* - update the pom using the snapshot as adviced by Jesse\n- modifications on other class to adapt to the last modifications in JTH\n\n* - modifications requested during code review\n\n* - also put back my changes to the conflicted file\n\n* - correction of the merge :)\n","date":"2017-12-16 16:25:30","modifiedFileCount":"21","status":"M","submitter":"Wadeck Follonier"},{"authorTime":"2020-08-11 14:52:06","codes":[{"authorDate":"2017-12-16 16:25:30","commitOrder":3,"curCode":"    private void makeRequestAndVerify(String expected) throws IOException, SAXException {\n        WebRequest req = new WebRequest(new URL(j.getURL(), \"test-post\"));\n        req.setHttpMethod(HttpMethod.POST);\n        req.setEncodingType(null);\n        Page p = wc.getPage(req);\n        assertEquals(expected, p.getWebResponse().getContentAsString());\n    }\n","date":"2017-12-16 16:25:30","endLine":104,"groupId":"4901","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"makeRequestAndVerify","params":"(Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/ee/f3b21dfd581ee79716c249978cbacae369c3f1.src","preCode":"    private void makeRequestAndVerify(String expected) throws IOException, SAXException {\n        WebRequest req = new WebRequest(new URL(j.getURL(), \"test-post\"));\n        req.setHttpMethod(HttpMethod.POST);\n        req.setEncodingType(null);\n        Page p = wc.getPage(req);\n        assertEquals(expected, p.getWebResponse().getContentAsString());\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiCrumbExclusionTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"N"},{"authorDate":"2020-08-11 14:52:06","commitOrder":3,"curCode":"    private void makeRequestWithAuthCodeAndVerify(String authCode, String expectedLogin) throws IOException {\n        WebRequest req = new WebRequest(new URL(j.getURL(),\"test\"));\n        req.setEncodingType(null);\n        if (authCode!=null)\n            req.setAdditionalHeader(\"Authorization\", authCode);\n        Page p = wc.getPage(req);\n        assertEquals(expectedLogin, p.getWebResponse().getContentAsString());\n    }\n","date":"2020-08-11 14:52:06","endLine":166,"groupId":"5960","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"makeRequestWithAuthCodeAndVerify","params":"(StringauthCode@StringexpectedLogin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d0/910ea13d7df01d62527916681ea3bc667a4bb7.src","preCode":"    private void makeRequestWithAuthCodeAndVerify(String authCode, String expectedLogin) throws IOException, SAXException {\n        WebRequest req = new WebRequest(new URL(j.getURL(),\"test\"));\n        req.setEncodingType(null);\n        if (authCode!=null)\n            req.setAdditionalHeader(\"Authorization\", authCode);\n        Page p = wc.getPage(req);\n        assertEquals(expectedLogin, p.getWebResponse().getContentAsString());\n    }\n","realPath":"test/src/test/java/jenkins/security/BasicHeaderProcessorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"f91b1f76629611185cb0c9624bfd40e0a2872f4f","commitMessage":"@@@minor test refactoring around StandardCharsets.  simplified JUnit assertions.  removed obsolete throws.  fixed deprecation warnings (#4872)\n\n","date":"2020-08-11 14:52:06","modifiedFileCount":"14","status":"M","submitter":"StefanSpieker"},{"authorTime":"2020-08-11 14:52:06","codes":[{"authorDate":"2021-04-12 01:49:34","commitOrder":4,"curCode":"    private void makeRequestAndVerify(String expected) throws IOException {\n        WebRequest req = new WebRequest(new URL(j.getURL(), \"test-post\"));\n        req.setHttpMethod(HttpMethod.POST);\n        req.setEncodingType(null);\n        Page p = wc.getPage(req);\n        assertEquals(expected, p.getWebResponse().getContentAsString());\n    }\n","date":"2021-04-12 01:49:34","endLine":106,"groupId":"10666","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"makeRequestAndVerify","params":"(Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/37/a5c26591781572c8829875bba55f774bade0d6.src","preCode":"    private void makeRequestAndVerify(String expected) throws IOException, SAXException {\n        WebRequest req = new WebRequest(new URL(j.getURL(), \"test-post\"));\n        req.setHttpMethod(HttpMethod.POST);\n        req.setEncodingType(null);\n        Page p = wc.getPage(req);\n        assertEquals(expected, p.getWebResponse().getContentAsString());\n    }\n","realPath":"test/src/test/java/jenkins/security/ApiCrumbExclusionTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2020-08-11 14:52:06","commitOrder":4,"curCode":"    private void makeRequestWithAuthCodeAndVerify(String authCode, String expectedLogin) throws IOException {\n        WebRequest req = new WebRequest(new URL(j.getURL(),\"test\"));\n        req.setEncodingType(null);\n        if (authCode!=null)\n            req.setAdditionalHeader(\"Authorization\", authCode);\n        Page p = wc.getPage(req);\n        assertEquals(expectedLogin, p.getWebResponse().getContentAsString());\n    }\n","date":"2020-08-11 14:52:06","endLine":166,"groupId":"10666","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"makeRequestWithAuthCodeAndVerify","params":"(StringauthCode@StringexpectedLogin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d0/910ea13d7df01d62527916681ea3bc667a4bb7.src","preCode":"    private void makeRequestWithAuthCodeAndVerify(String authCode, String expectedLogin) throws IOException {\n        WebRequest req = new WebRequest(new URL(j.getURL(),\"test\"));\n        req.setEncodingType(null);\n        if (authCode!=null)\n            req.setAdditionalHeader(\"Authorization\", authCode);\n        Page p = wc.getPage(req);\n        assertEquals(expectedLogin, p.getWebResponse().getContentAsString());\n    }\n","realPath":"test/src/test/java/jenkins/security/BasicHeaderProcessorTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"N"}],"commitId":"096a1ca6fb92a98a80ca7f1e3589e237285d3aa7","commitMessage":"@@@Merge pull request #5389 from StefanSpieker/minor_deprecation_fixes\n\nfixed some deprecation warnings","date":"2021-04-12 01:49:34","modifiedFileCount":"23","status":"M","submitter":"Mark Waite"}]
