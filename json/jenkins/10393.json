[{"authorTime":"2019-04-10 22:48:55","codes":[{"authorDate":"2019-04-10 22:48:55","commitOrder":1,"curCode":"    public void rememberMeToken_shouldNotAccept_expirationDurationLargerThanConfigured() throws Exception {\n        j.jenkins.setDisableRememberMe(false);\n\n        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false, false, null);\n        TokenBasedRememberMeServices2 tokenService = (TokenBasedRememberMeServices2) realm.getSecurityComponents().rememberMe;\n        j.jenkins.setSecurityRealm(realm);\n\n        String username = \"alice\";\n        hudson.model.User alice = realm.createAccount(username, username);\n\n        { \r\n            JenkinsRule.WebClient wc = j.createWebClient();\n\n            \r\n            \r\n            long oneDay = TimeUnit.DAYS.toMillis(1);\n            Cookie cookie = createRememberMeCookie(tokenService, oneDay, alice);\n            wc.getCookieManager().addCookie(cookie);\n\n            \r\n            assertUserNotConnected(wc, username);\n        }\n\n        { \r\n            JenkinsRule.WebClient wc = j.createWebClient();\n\n            \r\n            \r\n            long minusFiveMinutes = TimeUnit.MINUTES.toMillis(-5);\n            Cookie cookie = createRememberMeCookie(tokenService, minusFiveMinutes, alice);\n            wc.getCookieManager().addCookie(cookie);\n\n            \r\n            assertUserConnected(wc, username);\n        }\n    }\n","date":"2019-04-10 22:48:55","endLine":244,"groupId":"732","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"rememberMeToken_shouldNotAccept_expirationDurationLargerThanConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e9/8eb4354a0811063db689930f9dcc1a01a8a11e.src","preCode":"    public void rememberMeToken_shouldNotAccept_expirationDurationLargerThanConfigured() throws Exception {\n        j.jenkins.setDisableRememberMe(false);\n\n        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false, false, null);\n        TokenBasedRememberMeServices2 tokenService = (TokenBasedRememberMeServices2) realm.getSecurityComponents().rememberMe;\n        j.jenkins.setSecurityRealm(realm);\n\n        String username = \"alice\";\n        hudson.model.User alice = realm.createAccount(username, username);\n\n        { \r\n            JenkinsRule.WebClient wc = j.createWebClient();\n\n            \r\n            \r\n            long oneDay = TimeUnit.DAYS.toMillis(1);\n            Cookie cookie = createRememberMeCookie(tokenService, oneDay, alice);\n            wc.getCookieManager().addCookie(cookie);\n\n            \r\n            assertUserNotConnected(wc, username);\n        }\n\n        { \r\n            JenkinsRule.WebClient wc = j.createWebClient();\n\n            \r\n            \r\n            long minusFiveMinutes = TimeUnit.MINUTES.toMillis(-5);\n            Cookie cookie = createRememberMeCookie(tokenService, minusFiveMinutes, alice);\n            wc.getCookieManager().addCookie(cookie);\n\n            \r\n            assertUserConnected(wc, username);\n        }\n    }\n","realPath":"test/src/test/java/hudson/security/TokenBasedRememberMeServices2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"B"},{"authorDate":"2019-04-10 22:48:55","commitOrder":1,"curCode":"    public void rememberMeToken_skipExpirationCheck() throws Exception {\n        boolean previousConfig = TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK;\n        try {\n            TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK = true;\n\n            j.jenkins.setDisableRememberMe(false);\n\n            HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false, false, null);\n            TokenBasedRememberMeServices2 tokenService = (TokenBasedRememberMeServices2) realm.getSecurityComponents().rememberMe;\n            j.jenkins.setSecurityRealm(realm);\n\n            String username = \"alice\";\n            hudson.model.User alice = realm.createAccount(username, username);\n\n            { \r\n                JenkinsRule.WebClient wc = j.createWebClient();\n\n                \r\n                \r\n                long oneDay = TimeUnit.DAYS.toMillis(1);\n                Cookie cookie = createRememberMeCookie(tokenService, oneDay, alice);\n                wc.getCookieManager().addCookie(cookie);\n\n                \r\n                assertUserConnected(wc, username);\n            }\n\n            { \r\n                JenkinsRule.WebClient wc = j.createWebClient();\n\n                \r\n                \r\n                long minusFiveMinutes = TimeUnit.MINUTES.toMillis(-5);\n                Cookie cookie = createRememberMeCookie(tokenService, minusFiveMinutes, alice);\n                wc.getCookieManager().addCookie(cookie);\n\n                \r\n                assertUserConnected(wc, username);\n            }\n        } finally {\n            TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK = previousConfig;\n        }\n    }\n","date":"2019-04-10 22:48:55","endLine":290,"groupId":"732","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"rememberMeToken_skipExpirationCheck","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e9/8eb4354a0811063db689930f9dcc1a01a8a11e.src","preCode":"    public void rememberMeToken_skipExpirationCheck() throws Exception {\n        boolean previousConfig = TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK;\n        try {\n            TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK = true;\n\n            j.jenkins.setDisableRememberMe(false);\n\n            HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false, false, null);\n            TokenBasedRememberMeServices2 tokenService = (TokenBasedRememberMeServices2) realm.getSecurityComponents().rememberMe;\n            j.jenkins.setSecurityRealm(realm);\n\n            String username = \"alice\";\n            hudson.model.User alice = realm.createAccount(username, username);\n\n            { \r\n                JenkinsRule.WebClient wc = j.createWebClient();\n\n                \r\n                \r\n                long oneDay = TimeUnit.DAYS.toMillis(1);\n                Cookie cookie = createRememberMeCookie(tokenService, oneDay, alice);\n                wc.getCookieManager().addCookie(cookie);\n\n                \r\n                assertUserConnected(wc, username);\n            }\n\n            { \r\n                JenkinsRule.WebClient wc = j.createWebClient();\n\n                \r\n                \r\n                long minusFiveMinutes = TimeUnit.MINUTES.toMillis(-5);\n                Cookie cookie = createRememberMeCookie(tokenService, minusFiveMinutes, alice);\n                wc.getCookieManager().addCookie(cookie);\n\n                \r\n                assertUserConnected(wc, username);\n            }\n        } finally {\n            TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK = previousConfig;\n        }\n    }\n","realPath":"test/src/test/java/hudson/security/TokenBasedRememberMeServices2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"B"}],"commitId":"86e17f90f6d9d8c5495c55278648d2f89d45ce04","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n","date":"2019-04-10 22:48:55","modifiedFileCount":"22","status":"B","submitter":"Kohsuke Kawaguchi"},{"authorTime":"2020-11-07 02:30:25","codes":[{"authorDate":"2020-11-07 02:30:25","commitOrder":2,"curCode":"    public void rememberMeToken_shouldNotAccept_expirationDurationLargerThanConfigured() throws Exception {\n        j.jenkins.setDisableRememberMe(false);\n\n        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false, false, null);\n        TokenBasedRememberMeServices2 tokenService = (TokenBasedRememberMeServices2) realm.getSecurityComponents().rememberMe2;\n        j.jenkins.setSecurityRealm(realm);\n\n        String username = \"alice\";\n        hudson.model.User alice = realm.createAccount(username, username);\n\n        { \r\n            JenkinsRule.WebClient wc = j.createWebClient();\n\n            \r\n            \r\n            long oneDay = TimeUnit.DAYS.toMillis(1);\n            Cookie cookie = createRememberMeCookie(tokenService, oneDay, alice);\n            wc.getCookieManager().addCookie(cookie);\n\n            \r\n            assertUserNotConnected(wc, username);\n        }\n\n        { \r\n            JenkinsRule.WebClient wc = j.createWebClient();\n\n            \r\n            \r\n            long minusFiveMinutes = TimeUnit.MINUTES.toMillis(-5);\n            Cookie cookie = createRememberMeCookie(tokenService, minusFiveMinutes, alice);\n            wc.getCookieManager().addCookie(cookie);\n\n            \r\n            assertUserConnected(wc, username);\n        }\n    }\n","date":"2020-11-07 02:30:25","endLine":241,"groupId":"10393","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"rememberMeToken_shouldNotAccept_expirationDurationLargerThanConfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/fd/7f4294a21bae52a13abc265df9ed8ab85968c4.src","preCode":"    public void rememberMeToken_shouldNotAccept_expirationDurationLargerThanConfigured() throws Exception {\n        j.jenkins.setDisableRememberMe(false);\n\n        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false, false, null);\n        TokenBasedRememberMeServices2 tokenService = (TokenBasedRememberMeServices2) realm.getSecurityComponents().rememberMe;\n        j.jenkins.setSecurityRealm(realm);\n\n        String username = \"alice\";\n        hudson.model.User alice = realm.createAccount(username, username);\n\n        { \r\n            JenkinsRule.WebClient wc = j.createWebClient();\n\n            \r\n            \r\n            long oneDay = TimeUnit.DAYS.toMillis(1);\n            Cookie cookie = createRememberMeCookie(tokenService, oneDay, alice);\n            wc.getCookieManager().addCookie(cookie);\n\n            \r\n            assertUserNotConnected(wc, username);\n        }\n\n        { \r\n            JenkinsRule.WebClient wc = j.createWebClient();\n\n            \r\n            \r\n            long minusFiveMinutes = TimeUnit.MINUTES.toMillis(-5);\n            Cookie cookie = createRememberMeCookie(tokenService, minusFiveMinutes, alice);\n            wc.getCookieManager().addCookie(cookie);\n\n            \r\n            assertUserConnected(wc, username);\n        }\n    }\n","realPath":"test/src/test/java/hudson/security/TokenBasedRememberMeServices2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"},{"authorDate":"2020-11-07 02:30:25","commitOrder":2,"curCode":"    public void rememberMeToken_skipExpirationCheck() throws Exception {\n        boolean previousConfig = TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK;\n        try {\n            TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK = true;\n\n            j.jenkins.setDisableRememberMe(false);\n\n            HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false, false, null);\n            TokenBasedRememberMeServices2 tokenService = (TokenBasedRememberMeServices2) realm.getSecurityComponents().rememberMe2;\n            j.jenkins.setSecurityRealm(realm);\n\n            String username = \"alice\";\n            hudson.model.User alice = realm.createAccount(username, username);\n\n            { \r\n                JenkinsRule.WebClient wc = j.createWebClient();\n\n                \r\n                \r\n                long oneDay = TimeUnit.DAYS.toMillis(1);\n                Cookie cookie = createRememberMeCookie(tokenService, oneDay, alice);\n                wc.getCookieManager().addCookie(cookie);\n\n                \r\n                assertUserConnected(wc, username);\n            }\n\n            { \r\n                JenkinsRule.WebClient wc = j.createWebClient();\n\n                \r\n                \r\n                long minusFiveMinutes = TimeUnit.MINUTES.toMillis(-5);\n                Cookie cookie = createRememberMeCookie(tokenService, minusFiveMinutes, alice);\n                wc.getCookieManager().addCookie(cookie);\n\n                \r\n                assertUserConnected(wc, username);\n            }\n        } finally {\n            TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK = previousConfig;\n        }\n    }\n","date":"2020-11-07 02:30:25","endLine":287,"groupId":"10393","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"rememberMeToken_skipExpirationCheck","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/fd/7f4294a21bae52a13abc265df9ed8ab85968c4.src","preCode":"    public void rememberMeToken_skipExpirationCheck() throws Exception {\n        boolean previousConfig = TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK;\n        try {\n            TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK = true;\n\n            j.jenkins.setDisableRememberMe(false);\n\n            HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false, false, null);\n            TokenBasedRememberMeServices2 tokenService = (TokenBasedRememberMeServices2) realm.getSecurityComponents().rememberMe;\n            j.jenkins.setSecurityRealm(realm);\n\n            String username = \"alice\";\n            hudson.model.User alice = realm.createAccount(username, username);\n\n            { \r\n                JenkinsRule.WebClient wc = j.createWebClient();\n\n                \r\n                \r\n                long oneDay = TimeUnit.DAYS.toMillis(1);\n                Cookie cookie = createRememberMeCookie(tokenService, oneDay, alice);\n                wc.getCookieManager().addCookie(cookie);\n\n                \r\n                assertUserConnected(wc, username);\n            }\n\n            { \r\n                JenkinsRule.WebClient wc = j.createWebClient();\n\n                \r\n                \r\n                long minusFiveMinutes = TimeUnit.MINUTES.toMillis(-5);\n                Cookie cookie = createRememberMeCookie(tokenService, minusFiveMinutes, alice);\n                wc.getCookieManager().addCookie(cookie);\n\n                \r\n                assertUserConnected(wc, username);\n            }\n        } finally {\n            TokenBasedRememberMeServices2.SKIP_TOO_FAR_EXPIRATION_DATE_CHECK = previousConfig;\n        }\n    }\n","realPath":"test/src/test/java/hudson/security/TokenBasedRememberMeServices2Test.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"}],"commitId":"a9ca5ef3d4c97937636bf3c585f4232514279b14","commitMessage":"@@@[JEP-227] Replace Acegi Security with Spring Security & upgrade Spring Framework (#4848)\n\nReplacing Acegi Security with Spring Security\n\nCo-authored-by: Tim Jacomb <timjacomb1+github@gmail.com>\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>","date":"2020-11-07 02:30:25","modifiedFileCount":"149","status":"M","submitter":"Jesse Glick"}]
