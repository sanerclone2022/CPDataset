[{"authorTime":"2016-05-21 13:36:18","codes":[{"authorDate":"2016-05-14 18:24:21","commitOrder":2,"curCode":"    public static Integer getInteger(String name, Integer def) {\n        String v = getString(name);\n       \n        if (v != null) {\n            try {\n                return Integer.decode(v);\n            } catch (NumberFormatException e) {\n                \r\n                if (LOGGER.isLoggable(Level.CONFIG)) {\n                    LOGGER.log(Level.CONFIG, \"Property. Value is not integer: {0} => {1}\", new Object[] {name, v});\n                }\n            }\n        }\n        return def;\n    }\n","date":"2016-05-14 18:24:21","endLine":238,"groupId":"5383","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getInteger","params":"(Stringname@Integerdef)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d7/5404687efd916a81a54d810c65f076e7971f9e.src","preCode":"    public static Integer getInteger(String name, Integer def) {\n        String v = getString(name);\n       \n        if (v != null) {\n            try {\n                return Integer.decode(v);\n            } catch (NumberFormatException e) {\n                \r\n                if (LOGGER.isLoggable(Level.CONFIG)) {\n                    LOGGER.log(Level.CONFIG, \"Property. Value is not integer: {0} => {1}\", new Object[] {name, v});\n                }\n            }\n        }\n        return def;\n    }\n","realPath":"core/src/main/java/jenkins/util/SystemProperties.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"NB"},{"authorDate":"2016-05-21 13:36:18","commitOrder":2,"curCode":"    public static Long getLong(String name, Long def) {\n        String v = getString(name);\n       \n        if (v != null) {\n            try {\n                return Long.decode(v);\n            } catch (NumberFormatException e) {\n                \r\n                if (LOGGER.isLoggable(Level.CONFIG)) {\n                    LOGGER.log(Level.CONFIG, \"Property. Value is not long: {0} => {1}\", new Object[] {name, v});\n                }\n            }\n        }\n        return def;\n    }\n","date":"2016-05-21 13:36:18","endLine":296,"groupId":"5383","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getLong","params":"(Stringname@Longdef)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/12/643ff5a50880ce1e571161a3f856ca22dcb234.src","preCode":"    public static Long getLong(String name, Long def) {\n        String v = getString(name);\n       \n        if (v != null) {\n            try {\n                return Long.decode(v);\n            } catch (NumberFormatException e) {\n                \r\n                if (LOGGER.isLoggable(Level.CONFIG)) {\n                    LOGGER.log(Level.CONFIG, \"Property. Value is not long: {0} => {1}\", new Object[] {name, v});\n                }\n            }\n        }\n        return def;\n    }\n","realPath":"core/src/main/java/jenkins/util/SystemProperties.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"B"}],"commitId":"1d2b15173c48c3a78d6b96d99f6e045f43ff07bc","commitMessage":"@@@[JENKINS-34854] - Migrate missing settings to SystemProperties (#2362)\n\n* [JENKINS-34854] - Migrate missing Integer and Boolean properties to SystemProperties\n\n* [JENKINS-34854] - API methods for Long variables\n\n* [JENKINS-34854] - Migrate Long settings to SystemProperties\n\n* [JENKINS-34854] - Leftover change (I should use Save All)\n\n* [JENKINS-34854] - Some fixes in Long methods Javadoc and log messages\n","date":"2016-05-21 13:36:18","modifiedFileCount":"15","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2016-11-28 19:40:30","codes":[{"authorDate":"2016-11-28 19:40:30","commitOrder":3,"curCode":"    public static Integer getInteger(String name, Integer def, Level logLevel) {\n        String v = getString(name);\n       \n        if (v != null) {\n            try {\n                return Integer.decode(v);\n            } catch (NumberFormatException e) {\n                \r\n                if (LOGGER.isLoggable(logLevel)) {\n                    LOGGER.log(logLevel, \"Property. Value is not integer: {0} => {1}\", new Object[] {name, v});\n                }\n            }\n        }\n        return def;\n    }\n","date":"2016-11-28 19:40:30","endLine":308,"groupId":"101168","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getInteger","params":"(Stringname@Integerdef@LevellogLevel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/46/4f347d4c22f9ce4e26b55d306d73ee8fa26b4e.src","preCode":"    public static Integer getInteger(String name, Integer def) {\n        String v = getString(name);\n       \n        if (v != null) {\n            try {\n                return Integer.decode(v);\n            } catch (NumberFormatException e) {\n                \r\n                if (LOGGER.isLoggable(Level.CONFIG)) {\n                    LOGGER.log(Level.CONFIG, \"Property. Value is not integer: {0} => {1}\", new Object[] {name, v});\n                }\n            }\n        }\n        return def;\n    }\n","realPath":"core/src/main/java/jenkins/util/SystemProperties.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"M"},{"authorDate":"2016-11-28 19:40:30","commitOrder":3,"curCode":"    public static Long getLong(String name, Long def, Level logLevel) {\n        String v = getString(name);\n       \n        if (v != null) {\n            try {\n                return Long.decode(v);\n            } catch (NumberFormatException e) {\n                \r\n                if (LOGGER.isLoggable(logLevel)) {\n                    LOGGER.log(logLevel, \"Property. Value is not long: {0} => {1}\", new Object[] {name, v});\n                }\n            }\n        }\n        return def;\n    }\n","date":"2016-11-28 19:40:30","endLine":372,"groupId":"101168","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getLong","params":"(Stringname@Longdef@LevellogLevel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/46/4f347d4c22f9ce4e26b55d306d73ee8fa26b4e.src","preCode":"    public static Long getLong(String name, Long def) {\n        String v = getString(name);\n       \n        if (v != null) {\n            try {\n                return Long.decode(v);\n            } catch (NumberFormatException e) {\n                \r\n                if (LOGGER.isLoggable(Level.CONFIG)) {\n                    LOGGER.log(Level.CONFIG, \"Property. Value is not long: {0} => {1}\", new Object[] {name, v});\n                }\n            }\n        }\n        return def;\n    }\n","realPath":"core/src/main/java/jenkins/util/SystemProperties.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"}],"commitId":"a05d9422efc4a98d740c5aa343eabfce602cd294","commitMessage":"@@@Merge pull request #2646 from batmat/add-level-to-SystemProperties\n\nBe able to specify the log Level when system property is not found","date":"2016-11-28 19:40:30","modifiedFileCount":"1","status":"M","submitter":"Baptiste Mathus"}]
