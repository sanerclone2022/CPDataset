[{"authorTime":"2018-06-24 05:20:44","codes":[{"authorDate":"2018-06-24 05:20:44","commitOrder":1,"curCode":"        public HttpResponse doRename(@AncestorInPath User u,\n                                     @QueryParameter String tokenUuid, @QueryParameter String newName) throws IOException {\n            \r\n            u.checkPermission(Jenkins.ADMINISTER);\n    \n            if (StringUtils.isBlank(newName)) {\n                return HttpResponses.errorJSON(\"The name cannot be empty\");\n            }\n            if(StringUtils.isBlank(tokenUuid)){\n                \r\n                return HttpResponses.errorWithoutStack(400, \"The tokenUuid cannot be empty\");\n            }\n            \n            ApiTokenProperty p = u.getProperty(ApiTokenProperty.class);\n            if (p == null) {\n                return HttpResponses.errorWithoutStack(400, \"The user does not have any ApiToken yet, try generating one before.\");\n            }\n            \n            boolean renameOk = p.tokenStore.renameToken(tokenUuid, newName);\n            if(!renameOk){\n                \r\n                \r\n                return HttpResponses.errorJSON(\"No token found, try refreshing the page\");\n            }\n            \n            u.save();\n            \n            return HttpResponses.ok();\n        }\n","date":"2018-06-24 05:20:44","endLine":528,"groupId":"517","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doRename","params":"(@AncestorInPathUseru@@QueryParameterStringtokenUuid@@QueryParameterStringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3d/828cc5e1374d8e67d06f9dfe83ac979dfaaf77.src","preCode":"        public HttpResponse doRename(@AncestorInPath User u,\n                                     @QueryParameter String tokenUuid, @QueryParameter String newName) throws IOException {\n            \r\n            u.checkPermission(Jenkins.ADMINISTER);\n    \n            if (StringUtils.isBlank(newName)) {\n                return HttpResponses.errorJSON(\"The name cannot be empty\");\n            }\n            if(StringUtils.isBlank(tokenUuid)){\n                \r\n                return HttpResponses.errorWithoutStack(400, \"The tokenUuid cannot be empty\");\n            }\n            \n            ApiTokenProperty p = u.getProperty(ApiTokenProperty.class);\n            if (p == null) {\n                return HttpResponses.errorWithoutStack(400, \"The user does not have any ApiToken yet, try generating one before.\");\n            }\n            \n            boolean renameOk = p.tokenStore.renameToken(tokenUuid, newName);\n            if(!renameOk){\n                \r\n                \r\n                return HttpResponses.errorJSON(\"No token found, try refreshing the page\");\n            }\n            \n            u.save();\n            \n            return HttpResponses.ok();\n        }\n","realPath":"core/src/main/java/jenkins/security/ApiTokenProperty.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":500,"status":"B"},{"authorDate":"2018-06-24 05:20:44","commitOrder":1,"curCode":"        public HttpResponse doRevoke(@AncestorInPath User u,\n                                     @QueryParameter String tokenUuid) throws IOException {\n            \r\n            u.checkPermission(Jenkins.ADMINISTER);\n            \n            if(StringUtils.isBlank(tokenUuid)){\n                \r\n                return HttpResponses.errorWithoutStack(400, \"The tokenUuid cannot be empty\");\n            }\n            \n            ApiTokenProperty p = u.getProperty(ApiTokenProperty.class);\n            if (p == null) {\n                return HttpResponses.errorWithoutStack(400, \"The user does not have any ApiToken yet, try generating one before.\");\n            }\n            \n            ApiTokenStore.HashedToken revoked = p.tokenStore.revokeToken(tokenUuid);\n            if(revoked != null){\n                if(revoked.isLegacy()){\n                    \r\n                    p.apiToken = null;\n                }\n                p.tokenStats.removeId(revoked.getUuid());\n            }\n            u.save();\n            \n            return HttpResponses.ok();\n        }\n","date":"2018-06-24 05:20:44","endLine":557,"groupId":"3233","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doRevoke","params":"(@AncestorInPathUseru@@QueryParameterStringtokenUuid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3d/828cc5e1374d8e67d06f9dfe83ac979dfaaf77.src","preCode":"        public HttpResponse doRevoke(@AncestorInPath User u,\n                                     @QueryParameter String tokenUuid) throws IOException {\n            \r\n            u.checkPermission(Jenkins.ADMINISTER);\n            \n            if(StringUtils.isBlank(tokenUuid)){\n                \r\n                return HttpResponses.errorWithoutStack(400, \"The tokenUuid cannot be empty\");\n            }\n            \n            ApiTokenProperty p = u.getProperty(ApiTokenProperty.class);\n            if (p == null) {\n                return HttpResponses.errorWithoutStack(400, \"The user does not have any ApiToken yet, try generating one before.\");\n            }\n            \n            ApiTokenStore.HashedToken revoked = p.tokenStore.revokeToken(tokenUuid);\n            if(revoked != null){\n                if(revoked.isLegacy()){\n                    \r\n                    p.apiToken = null;\n                }\n                p.tokenStats.removeId(revoked.getUuid());\n            }\n            u.save();\n            \n            return HttpResponses.ok();\n        }\n","realPath":"core/src/main/java/jenkins/security/ApiTokenProperty.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":531,"status":"B"}],"commitId":"fd1ec1d125b28f0c069e050ac1abd1a20e09feef","commitMessage":"@@@Merge pull request #3271 from Wadeck/JENKINS-32442-32776_HASHED_TOKEN\n\n[JENKINS-32442][JENKINS-32776] New API Token system","date":"2018-06-24 05:20:44","modifiedFileCount":"19","status":"B","submitter":"Daniel Beck"},{"authorTime":"2020-10-06 06:07:30","codes":[{"authorDate":"2018-06-24 05:20:44","commitOrder":2,"curCode":"        public HttpResponse doRename(@AncestorInPath User u,\n                                     @QueryParameter String tokenUuid, @QueryParameter String newName) throws IOException {\n            \r\n            u.checkPermission(Jenkins.ADMINISTER);\n    \n            if (StringUtils.isBlank(newName)) {\n                return HttpResponses.errorJSON(\"The name cannot be empty\");\n            }\n            if(StringUtils.isBlank(tokenUuid)){\n                \r\n                return HttpResponses.errorWithoutStack(400, \"The tokenUuid cannot be empty\");\n            }\n            \n            ApiTokenProperty p = u.getProperty(ApiTokenProperty.class);\n            if (p == null) {\n                return HttpResponses.errorWithoutStack(400, \"The user does not have any ApiToken yet, try generating one before.\");\n            }\n            \n            boolean renameOk = p.tokenStore.renameToken(tokenUuid, newName);\n            if(!renameOk){\n                \r\n                \r\n                return HttpResponses.errorJSON(\"No token found, try refreshing the page\");\n            }\n            \n            u.save();\n            \n            return HttpResponses.ok();\n        }\n","date":"2018-06-24 05:20:44","endLine":528,"groupId":"101135","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doRename","params":"(@AncestorInPathUseru@@QueryParameterStringtokenUuid@@QueryParameterStringnewName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/3d/828cc5e1374d8e67d06f9dfe83ac979dfaaf77.src","preCode":"        public HttpResponse doRename(@AncestorInPath User u,\n                                     @QueryParameter String tokenUuid, @QueryParameter String newName) throws IOException {\n            \r\n            u.checkPermission(Jenkins.ADMINISTER);\n    \n            if (StringUtils.isBlank(newName)) {\n                return HttpResponses.errorJSON(\"The name cannot be empty\");\n            }\n            if(StringUtils.isBlank(tokenUuid)){\n                \r\n                return HttpResponses.errorWithoutStack(400, \"The tokenUuid cannot be empty\");\n            }\n            \n            ApiTokenProperty p = u.getProperty(ApiTokenProperty.class);\n            if (p == null) {\n                return HttpResponses.errorWithoutStack(400, \"The user does not have any ApiToken yet, try generating one before.\");\n            }\n            \n            boolean renameOk = p.tokenStore.renameToken(tokenUuid, newName);\n            if(!renameOk){\n                \r\n                \r\n                return HttpResponses.errorJSON(\"No token found, try refreshing the page\");\n            }\n            \n            u.save();\n            \n            return HttpResponses.ok();\n        }\n","realPath":"core/src/main/java/jenkins/security/ApiTokenProperty.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":500,"status":"N"},{"authorDate":"2020-10-06 06:07:30","commitOrder":2,"curCode":"        public HttpResponse doRevoke(@AncestorInPath User u,\n                                     @QueryParameter String tokenUuid) throws IOException {\n            \r\n            u.checkPermission(Jenkins.ADMINISTER);\n            \n            if(StringUtils.isBlank(tokenUuid)){\n                \r\n                return HttpResponses.errorWithoutStack(400, \"The tokenUuid cannot be empty\");\n            }\n            \n            ApiTokenProperty p = u.getProperty(ApiTokenProperty.class);\n            if (p == null) {\n                return HttpResponses.errorWithoutStack(400, \"The user does not have any ApiToken yet, try generating one before.\");\n            }\n            \n            p.revokeToken(tokenUuid);\n            \n            return HttpResponses.ok();\n        }\n","date":"2020-10-06 06:07:30","endLine":619,"groupId":"101135","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doRevoke","params":"(@AncestorInPathUseru@@QueryParameterStringtokenUuid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/d9/a5d4f1a8c2a391199d94c8a0285fe4dca0243b.src","preCode":"        public HttpResponse doRevoke(@AncestorInPath User u,\n                                     @QueryParameter String tokenUuid) throws IOException {\n            \r\n            u.checkPermission(Jenkins.ADMINISTER);\n            \n            if(StringUtils.isBlank(tokenUuid)){\n                \r\n                return HttpResponses.errorWithoutStack(400, \"The tokenUuid cannot be empty\");\n            }\n            \n            ApiTokenProperty p = u.getProperty(ApiTokenProperty.class);\n            if (p == null) {\n                return HttpResponses.errorWithoutStack(400, \"The user does not have any ApiToken yet, try generating one before.\");\n            }\n            \n            ApiTokenStore.HashedToken revoked = p.tokenStore.revokeToken(tokenUuid);\n            if(revoked != null){\n                if(revoked.isLegacy()){\n                    \r\n                    p.apiToken = null;\n                }\n                p.tokenStats.removeId(revoked.getUuid());\n            }\n            u.save();\n            \n            return HttpResponses.ok();\n        }\n","realPath":"core/src/main/java/jenkins/security/ApiTokenProperty.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":601,"status":"M"}],"commitId":"eb0876cdb981a83c9f4c6f07d1eede585614612a","commitMessage":"@@@[JENKINS-57484] Improving the scripting capacity for the API Tokens (#4027)\n\n* [JENKINS-57484] Improving the scripting capacity for the API Tokens\n\n* Modification after review\n\n* Add `@Restricted` as proposed by Daniel\n\n- Also remove some whitespace modifications that were not required\n\n* Method already present.  revert the annotation addition\n\n* Adjustment after merge conflict + cleanup\n\n- Nonnull to NonNull\n- Immutable is illegal :(\n- Mistake in WhoAmITest\n\n* Adding revokeToken + unit test for scripting\n\n* Adding comment for system property not set + recommendation about revocation\n\n* Update core/src/main/java/jenkins/install/SetupWizard.java\n\nCo-authored-by: Jeff Thompson <37345299+jeffret-b@users.noreply.github.com>\n\nCo-authored-by: Jeff Thompson <37345299+jeffret-b@users.noreply.github.com>","date":"2020-10-06 06:07:30","modifiedFileCount":"7","status":"M","submitter":"Wadeck Follonier"}]
