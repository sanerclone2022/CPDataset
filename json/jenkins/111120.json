[{"authorTime":"2008-05-22 03:40:12","codes":[{"authorDate":"2008-05-22 03:40:12","commitOrder":2,"curCode":"        int excessNanos(long d, long m) { return (int)(d - (m*C2)); }\n    },\n    MICROSECONDS {\n        public long toNanos(long d)   { return x(d, C1/C0, MAX/(C1/C0)); }\n        public long toMicros(long d)  { return d; }\n        public long toMillis(long d)  { return d/(C2/C1); }\n        public long toSeconds(long d) { return d/(C3/C1); }\n        public long toMinutes(long d) { return d/(C4/C1); }\n        public long toHours(long d)   { return d/(C5/C1); }\n        public long toDays(long d)    { return d/(C6/C1); }\n        public long convert(long d, TimeUnit2 u) { return u.toMicros(d); }\n        public long convert(long d, TimeUnit u) { return u.toMicros(d); }\n        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n","date":"2008-05-22 03:40:12","endLine":68,"groupId":"4272","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"return","params":"(int(d-(m*C2))","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/fd/bb37d5125753a8c62a177e7e76026b1a091589.src","preCode":"        int excessNanos(long d, long m) { return (int)(d - (m*C2)); }\n    },\n    MICROSECONDS {\n        public long toNanos(long d)   { return x(d, C1/C0, MAX/(C1/C0)); }\n        public long toMicros(long d)  { return d; }\n        public long toMillis(long d)  { return d/(C2/C1); }\n        public long toSeconds(long d) { return d/(C3/C1); }\n        public long toMinutes(long d) { return d/(C4/C1); }\n        public long toHours(long d)   { return d/(C5/C1); }\n        public long toDays(long d)    { return d/(C6/C1); }\n        public long convert(long d, TimeUnit2 u) { return u.toMicros(d); }\n        public long convert(long d, TimeUnit u) { return u.toMicros(d); }\n        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n","realPath":"core/src/main/java/hudson/util/TimeUnit2.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"MB"},{"authorDate":"2008-05-22 03:40:12","commitOrder":2,"curCode":"        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n    MILLISECONDS {\n        public long toNanos(long d)   { return x(d, C2/C0, MAX/(C2/C0)); }\n        public long toMicros(long d)  { return x(d, C2/C1, MAX/(C2/C1)); }\n        public long toMillis(long d)  { return d; }\n        public long toSeconds(long d) { return d/(C3/C2); }\n        public long toMinutes(long d) { return d/(C4/C2); }\n        public long toHours(long d)   { return d/(C5/C2); }\n        public long toDays(long d)    { return d/(C6/C2); }\n        public long convert(long d, TimeUnit2 u) { return u.toMillis(d); }\n        public long convert(long d, TimeUnit u) { return u.toMillis(d); }\n        int excessNanos(long d, long m) { return 0; }\n    },\n","date":"2008-05-22 03:40:12","endLine":80,"groupId":"4273","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"return","params":"(int((d*C1)-(m*C2))","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/fd/bb37d5125753a8c62a177e7e76026b1a091589.src","preCode":"        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n    MILLISECONDS {\n        public long toNanos(long d)   { return x(d, C2/C0, MAX/(C2/C0)); }\n        public long toMicros(long d)  { return x(d, C2/C1, MAX/(C2/C1)); }\n        public long toMillis(long d)  { return d; }\n        public long toSeconds(long d) { return d/(C3/C2); }\n        public long toMinutes(long d) { return d/(C4/C2); }\n        public long toHours(long d)   { return d/(C5/C2); }\n        public long toDays(long d)    { return d/(C6/C2); }\n        public long convert(long d, TimeUnit2 u) { return u.toMillis(d); }\n        public long convert(long d, TimeUnit u) { return u.toMillis(d); }\n        int excessNanos(long d, long m) { return 0; }\n    },\n","realPath":"core/src/main/java/hudson/util/TimeUnit2.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"MB"}],"commitId":"d6a3e23e2c186a45a6ee5b6105e740d05d5b9fc8","commitMessage":"@@@public domain version from http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/src/main/java/util/concurrent/TimeUnit.java?view=markup\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9510 71c3de6d-444a-0410-be80-ed276b4c234a\n","date":"2008-05-22 03:40:12","modifiedFileCount":"0","status":"M","submitter":"stephenconnolly"},{"authorTime":"2009-09-15 02:08:34","codes":[{"authorDate":"2009-09-15 02:08:34","commitOrder":3,"curCode":"        int excessNanos(long d, long m) { return (int)(d - (m*C2)); }\n    },\n    MICROSECONDS {\n        @Override public long toNanos(long d)   { return x(d, C1/C0, MAX/(C1/C0)); }\n        @Override public long toMicros(long d)  { return d; }\n        @Override public long toMillis(long d)  { return d/(C2/C1); }\n        @Override public long toSeconds(long d) { return d/(C3/C1); }\n        @Override public long toMinutes(long d) { return d/(C4/C1); }\n        @Override public long toHours(long d)   { return d/(C5/C1); }\n        @Override public long toDays(long d)    { return d/(C6/C1); }\n        @Override public long convert(long d, TimeUnit2 u) { return u.toMicros(d); }\n        @Override public long convert(long d, TimeUnit u) { return u.toMicros(d); }\n        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n","date":"2009-09-15 02:08:34","endLine":91,"groupId":"6627","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"return","params":"(int(d-(m*C2))","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/30/b9455fde312779a356f38e8900fb72cbd4cb30.src","preCode":"        int excessNanos(long d, long m) { return (int)(d - (m*C2)); }\n    },\n    MICROSECONDS {\n        public long toNanos(long d)   { return x(d, C1/C0, MAX/(C1/C0)); }\n        public long toMicros(long d)  { return d; }\n        public long toMillis(long d)  { return d/(C2/C1); }\n        public long toSeconds(long d) { return d/(C3/C1); }\n        public long toMinutes(long d) { return d/(C4/C1); }\n        public long toHours(long d)   { return d/(C5/C1); }\n        public long toDays(long d)    { return d/(C6/C1); }\n        public long convert(long d, TimeUnit2 u) { return u.toMicros(d); }\n        public long convert(long d, TimeUnit u) { return u.toMicros(d); }\n        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n","realPath":"core/src/main/java/hudson/util/TimeUnit2.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2009-09-15 02:08:34","commitOrder":3,"curCode":"        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n    MILLISECONDS {\n        @Override public long toNanos(long d)   { return x(d, C2/C0, MAX/(C2/C0)); }\n        @Override public long toMicros(long d)  { return x(d, C2/C1, MAX/(C2/C1)); }\n        @Override public long toMillis(long d)  { return d; }\n        @Override public long toSeconds(long d) { return d/(C3/C2); }\n        @Override public long toMinutes(long d) { return d/(C4/C2); }\n        @Override public long toHours(long d)   { return d/(C5/C2); }\n        @Override public long toDays(long d)    { return d/(C6/C2); }\n        @Override public long convert(long d, TimeUnit2 u) { return u.toMillis(d); }\n        @Override public long convert(long d, TimeUnit u) { return u.toMillis(d); }\n        int excessNanos(long d, long m) { return 0; }\n    },\n","date":"2009-09-15 02:08:34","endLine":103,"groupId":"5110","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"return","params":"(int((d*C1)-(m*C2))","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/30/b9455fde312779a356f38e8900fb72cbd4cb30.src","preCode":"        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n    MILLISECONDS {\n        public long toNanos(long d)   { return x(d, C2/C0, MAX/(C2/C0)); }\n        public long toMicros(long d)  { return x(d, C2/C1, MAX/(C2/C1)); }\n        public long toMillis(long d)  { return d; }\n        public long toSeconds(long d) { return d/(C3/C2); }\n        public long toMinutes(long d) { return d/(C4/C2); }\n        public long toHours(long d)   { return d/(C5/C2); }\n        public long toDays(long d)    { return d/(C6/C2); }\n        public long convert(long d, TimeUnit2 u) { return u.toMillis(d); }\n        public long convert(long d, TimeUnit u) { return u.toMillis(d); }\n        int excessNanos(long d, long m) { return 0; }\n    },\n","realPath":"core/src/main/java/hudson/util/TimeUnit2.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"9fed9823f58465f37dafb9a971a64eabbbde5301","commitMessage":"@@@Add @Override annotations.  remove unused imports. \nadd some copyright headers.  some tab->ws\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@21654 71c3de6d-444a-0410-be80-ed276b4c234a\n","date":"2009-09-15 02:08:34","modifiedFileCount":"142","status":"M","submitter":"mindless"},{"authorTime":"2021-04-28 17:28:25","codes":[{"authorDate":"2021-04-28 17:28:25","commitOrder":4,"curCode":"        int excessNanos(long d, long m) { return (int)(d - (m*C2)); }\n    },\n    MICROSECONDS {\n        @Override public long toNanos(long d)   { return x(d, C1/C0, MAX/(C1/C0)); }\n        @Override public long toMicros(long d)  { return d; }\n        @Override public long toMillis(long d)  { return d/(C2/C1); }\n        @Override public long toSeconds(long d) { return d/(C3/C1); }\n        @Override public long toMinutes(long d) { return d/(C4/C1); }\n        @Override public long toHours(long d)   { return d/(C5/C1); }\n        @Override public long toDays(long d)    { return d/(C6/C1); }\n        @Override public long convert(long d, TimeUnit2 u) { return u.toMicros(d); }\n        @Override public long convert(long d, TimeUnit u) { return u.toMicros(d); }\n        @Override\n        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n","date":"2021-04-28 17:28:25","endLine":101,"groupId":"111120","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"return","params":"(int(d-(m*C2))","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/11/9c078aa4137b3323ced16d5e67dd3bc098d515.src","preCode":"        int excessNanos(long d, long m) { return (int)(d - (m*C2)); }\n    },\n    MICROSECONDS {\n        @Override public long toNanos(long d)   { return x(d, C1/C0, MAX/(C1/C0)); }\n        @Override public long toMicros(long d)  { return d; }\n        @Override public long toMillis(long d)  { return d/(C2/C1); }\n        @Override public long toSeconds(long d) { return d/(C3/C1); }\n        @Override public long toMinutes(long d) { return d/(C4/C1); }\n        @Override public long toHours(long d)   { return d/(C5/C1); }\n        @Override public long toDays(long d)    { return d/(C6/C1); }\n        @Override public long convert(long d, TimeUnit2 u) { return u.toMicros(d); }\n        @Override public long convert(long d, TimeUnit u) { return u.toMicros(d); }\n        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n","realPath":"core/src/main/java/hudson/util/TimeUnit2.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2021-04-28 17:28:25","commitOrder":4,"curCode":"        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n    MILLISECONDS {\n        @Override public long toNanos(long d)   { return x(d, C2/C0, MAX/(C2/C0)); }\n        @Override public long toMicros(long d)  { return x(d, C2/C1, MAX/(C2/C1)); }\n        @Override public long toMillis(long d)  { return d; }\n        @Override public long toSeconds(long d) { return d/(C3/C2); }\n        @Override public long toMinutes(long d) { return d/(C4/C2); }\n        @Override public long toHours(long d)   { return d/(C5/C2); }\n        @Override public long toDays(long d)    { return d/(C6/C2); }\n        @Override public long convert(long d, TimeUnit2 u) { return u.toMillis(d); }\n        @Override public long convert(long d, TimeUnit u) { return u.toMillis(d); }\n        @Override\n        int excessNanos(long d, long m) { return 0; }\n    },\n","date":"2021-04-28 17:28:25","endLine":114,"groupId":"111120","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"return","params":"(int((d*C1)-(m*C2))","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/11/9c078aa4137b3323ced16d5e67dd3bc098d515.src","preCode":"        int excessNanos(long d, long m) { return (int)((d*C1) - (m*C2)); }\n    },\n    MILLISECONDS {\n        @Override public long toNanos(long d)   { return x(d, C2/C0, MAX/(C2/C0)); }\n        @Override public long toMicros(long d)  { return x(d, C2/C1, MAX/(C2/C1)); }\n        @Override public long toMillis(long d)  { return d; }\n        @Override public long toSeconds(long d) { return d/(C3/C2); }\n        @Override public long toMinutes(long d) { return d/(C4/C2); }\n        @Override public long toHours(long d)   { return d/(C5/C2); }\n        @Override public long toDays(long d)    { return d/(C6/C2); }\n        @Override public long convert(long d, TimeUnit2 u) { return u.toMillis(d); }\n        @Override public long convert(long d, TimeUnit u) { return u.toMillis(d); }\n        int excessNanos(long d, long m) { return 0; }\n    },\n","realPath":"core/src/main/java/hudson/util/TimeUnit2.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"f6378676b11288cc2525852b0a1a441d147e31d3","commitMessage":"@@@Add missing @Override annotations (#5430)\n\n","date":"2021-04-28 17:28:25","modifiedFileCount":"405","status":"M","submitter":"Basil Crow"}]
