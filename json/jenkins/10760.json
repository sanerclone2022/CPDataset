[{"authorTime":"2018-02-04 18:31:53","codes":[{"authorDate":"2018-02-04 18:31:53","commitOrder":1,"curCode":"    public void xml1_0_withSpecialCharsShouldFail() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_0_with_special_chars.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            Node n = (Node) xmlFile.read();\n            assertThat(n.getNumExecutors(), is(2));\n            assertThat(n.getMode().toString(), is(\"NORMAL\"));\n        }\n    }\n","date":"2018-02-04 18:31:53","endLine":49,"groupId":"9105","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"xml1_0_withSpecialCharsShouldFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/69/c85a93f7aed95534b9a4ee0edbd2a13cdd2a35.src","preCode":"    public void xml1_0_withSpecialCharsShouldFail() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_0_with_special_chars.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            Node n = (Node) xmlFile.read();\n            assertThat(n.getNumExecutors(), is(2));\n            assertThat(n.getMode().toString(), is(\"NORMAL\"));\n        }\n    }\n","realPath":"core/src/test/java/hudson/XmlFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2018-02-04 18:31:53","commitOrder":1,"curCode":"    public void canReadXml1_1Test() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_1.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            Node n = (Node) xmlFile.read();\n            assertThat(n.getNumExecutors(), is(2));\n            assertThat(n.getMode().toString(), is(\"NORMAL\"));\n        }\n    }\n","date":"2018-02-04 18:31:53","endLine":63,"groupId":"9105","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"canReadXml1_1Test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/69/c85a93f7aed95534b9a4ee0edbd2a13cdd2a35.src","preCode":"    public void canReadXml1_1Test() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_1.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            Node n = (Node) xmlFile.read();\n            assertThat(n.getNumExecutors(), is(2));\n            assertThat(n.getMode().toString(), is(\"NORMAL\"));\n        }\n    }\n","realPath":"core/src/test/java/hudson/XmlFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"}],"commitId":"0c17e82e825dee9c91ee8c484aefc37e2fb2be21","commitMessage":"@@@Merge pull request #3185 from mikecirioli/OSS-2590\n\n[JENKINS-48463] Update jenkins core to use  XML v1.1 ","date":"2018-02-04 18:31:53","modifiedFileCount":"11","status":"B","submitter":"Baptiste Mathus"},{"authorTime":"2018-02-04 18:31:53","codes":[{"authorDate":"2021-03-16 16:14:11","commitOrder":2,"curCode":"    public void xml1_0_withSpecialCharsShouldFail() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_0_with_special_chars.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            assertThrows(SAXParseException.class, () -> xmlFile.read());\n        }\n    }\n","date":"2021-03-16 16:14:11","endLine":47,"groupId":"9105","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"xml1_0_withSpecialCharsShouldFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/c8/d8b9f3c1db4be09985f79373ed98ed1e7b4765.src","preCode":"    public void xml1_0_withSpecialCharsShouldFail() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_0_with_special_chars.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            Node n = (Node) xmlFile.read();\n            assertThat(n.getNumExecutors(), is(2));\n            assertThat(n.getMode().toString(), is(\"NORMAL\"));\n        }\n    }\n","realPath":"core/src/test/java/hudson/XmlFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2018-02-04 18:31:53","commitOrder":2,"curCode":"    public void canReadXml1_1Test() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_1.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            Node n = (Node) xmlFile.read();\n            assertThat(n.getNumExecutors(), is(2));\n            assertThat(n.getMode().toString(), is(\"NORMAL\"));\n        }\n    }\n","date":"2018-02-04 18:31:53","endLine":63,"groupId":"9105","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"canReadXml1_1Test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/69/c85a93f7aed95534b9a4ee0edbd2a13cdd2a35.src","preCode":"    public void canReadXml1_1Test() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_1.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            Node n = (Node) xmlFile.read();\n            assertThat(n.getNumExecutors(), is(2));\n            assertThat(n.getMode().toString(), is(\"NORMAL\"));\n        }\n    }\n","realPath":"core/src/test/java/hudson/XmlFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"}],"commitId":"3f53051b0b990b11638a51d70a2e3619ffd8174d","commitMessage":"@@@Test cleanup (#5357)\n\n","date":"2021-03-16 16:14:11","modifiedFileCount":"26","status":"M","submitter":"Basil Crow"},{"authorTime":"2018-02-04 18:31:53","codes":[{"authorDate":"2021-07-10 00:38:12","commitOrder":3,"curCode":"    public void xml1_0_withSpecialCharsShouldFail() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_0_with_special_chars.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            assertThrows(SAXParseException.class, xmlFile::read);\n        }\n    }\n","date":"2021-07-10 00:38:12","endLine":47,"groupId":"10760","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"xml1_0_withSpecialCharsShouldFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/e2/08c484400f4ac57374f9720dee980d247d70f2.src","preCode":"    public void xml1_0_withSpecialCharsShouldFail() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_0_with_special_chars.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            assertThrows(SAXParseException.class, () -> xmlFile.read());\n        }\n    }\n","realPath":"core/src/test/java/hudson/XmlFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2018-02-04 18:31:53","commitOrder":3,"curCode":"    public void canReadXml1_1Test() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_1.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            Node n = (Node) xmlFile.read();\n            assertThat(n.getNumExecutors(), is(2));\n            assertThat(n.getMode().toString(), is(\"NORMAL\"));\n        }\n    }\n","date":"2018-02-04 18:31:53","endLine":63,"groupId":"10760","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"canReadXml1_1Test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/69/c85a93f7aed95534b9a4ee0edbd2a13cdd2a35.src","preCode":"    public void canReadXml1_1Test() throws IOException {\n        URL configUrl = getClass().getResource(\"/hudson/config_1_1.xml\");\n        XStream2  xs = new XStream2();\n        xs.alias(\"hudson\", Jenkins.class);\n\n        XmlFile xmlFile =  new XmlFile(xs, new File(configUrl.getFile()));\n        if (xmlFile.exists()) {\n            Node n = (Node) xmlFile.read();\n            assertThat(n.getNumExecutors(), is(2));\n            assertThat(n.getMode().toString(), is(\"NORMAL\"));\n        }\n    }\n","realPath":"core/src/test/java/hudson/XmlFileTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"}],"commitId":"bf01f36e75bd4c77aa76c8f180bd4b51470eba56","commitMessage":"@@@Merge pull request #5602 from offa/dev\n\nException test modernization / clean up","date":"2021-07-10 00:38:12","modifiedFileCount":"40","status":"M","submitter":"Raihaan Shouhell"}]
