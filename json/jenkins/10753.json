[{"authorTime":"2015-05-21 13:48:08","codes":[{"authorDate":"2013-04-03 23:51:21","commitOrder":2,"curCode":"    @Test public void repeatedHash() throws Exception {\n        CronTabList tabs = CronTabList.create(\"H * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<Integer>();\n        for (int i = 0; i < 60; i++) {\n            if (tabs.check(new GregorianCalendar(2013, 3, 3, 11, i, 0))) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","date":"2013-04-03 23:51:21","endLine":278,"groupId":"6756","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"repeatedHash","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a2/82c39a7ed470825d35c53d8538e85c23142776.src","preCode":"    @Test public void repeatedHash() throws Exception {\n        CronTabList tabs = CronTabList.create(\"H * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<Integer>();\n        for (int i = 0; i < 60; i++) {\n            if (tabs.check(new GregorianCalendar(2013, 3, 3, 11, i, 0))) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","realPath":"core/src/test/java/hudson/scheduler/CronTabTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"NB"},{"authorDate":"2015-05-21 13:48:08","commitOrder":2,"curCode":"    @Test public void testTimezone() throws Exception {\n        CronTabList tabs = CronTabList.create(\"TZ=Australia/Sydney\\nH * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<Integer>();\n        for (int i = 0; i < 60; i++) {\n            if (tabs.check(new GregorianCalendar(2013, 3, 3, 11, i, 0))) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","date":"2015-05-21 13:48:08","endLine":316,"groupId":"6756","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTimezone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/6d/df85912853977ecb0d715fe5c1bbf7daa7a790.src","preCode":"    @Test public void testTimezone() throws Exception {\n        CronTabList tabs = CronTabList.create(\"TZ=Australia/Sydney\\nH * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<Integer>();\n        for (int i = 0; i < 60; i++) {\n            if (tabs.check(new GregorianCalendar(2013, 3, 3, 11, i, 0))) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","realPath":"core/src/test/java/hudson/scheduler/CronTabTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"B"}],"commitId":"73e151f3d1582b90a68e2f8c0e8bec0fbc042ee3","commitMessage":"@@@Merge pull request #1672 from productsupcom/JENKINS-9283\n\n[JENKINS-9283] Timezone Support for Scheduling","date":"2015-05-21 13:48:08","modifiedFileCount":"3","status":"M","submitter":"Oleg Nenashev"},{"authorTime":"2019-01-14 21:08:51","codes":[{"authorDate":"2013-04-03 23:51:21","commitOrder":3,"curCode":"    @Test public void repeatedHash() throws Exception {\n        CronTabList tabs = CronTabList.create(\"H * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<Integer>();\n        for (int i = 0; i < 60; i++) {\n            if (tabs.check(new GregorianCalendar(2013, 3, 3, 11, i, 0))) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","date":"2013-04-03 23:51:21","endLine":278,"groupId":"6756","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"repeatedHash","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/a2/82c39a7ed470825d35c53d8538e85c23142776.src","preCode":"    @Test public void repeatedHash() throws Exception {\n        CronTabList tabs = CronTabList.create(\"H * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<Integer>();\n        for (int i = 0; i < 60; i++) {\n            if (tabs.check(new GregorianCalendar(2013, 3, 3, 11, i, 0))) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","realPath":"core/src/test/java/hudson/scheduler/CronTabTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"N"},{"authorDate":"2019-01-14 21:08:51","commitOrder":3,"curCode":"    @Test public void testTimezone() throws Exception {\n        CronTabList tabs = CronTabList.create(\"TZ=Australia/Sydney\\nH * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<Integer>();\n        for (int i = 0; i < 60; i++) {\n            GregorianCalendar calendar = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"));\n            calendar.set(2013, Calendar.APRIL, 3, 11, i, 0);\n            if (tabs.check(calendar)) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","date":"2019-01-14 21:08:51","endLine":318,"groupId":"3140","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTimezone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/65/115091a716cb760a099ff09c31e9cb8141914c.src","preCode":"    @Test public void testTimezone() throws Exception {\n        CronTabList tabs = CronTabList.create(\"TZ=Australia/Sydney\\nH * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<Integer>();\n        for (int i = 0; i < 60; i++) {\n            if (tabs.check(new GregorianCalendar(2013, 3, 3, 11, i, 0))) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","realPath":"core/src/test/java/hudson/scheduler/CronTabTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"M"}],"commitId":"3210ff57748ebd8f9d10a01db145f9ab3efacaab","commitMessage":"@@@Merge commit '6d2eb679a6fccc53d32708cc23c5927201953248' into security-master\n","date":"2019-01-14 21:08:51","modifiedFileCount":"16","status":"M","submitter":"Wadeck Follonier"},{"authorTime":"2019-10-02 15:46:53","codes":[{"authorDate":"2019-10-02 15:46:53","commitOrder":4,"curCode":"    @Test public void repeatedHash() throws Exception {\n        CronTabList tabs = CronTabList.create(\"H * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<>();\n        for (int i = 0; i < 60; i++) {\n            if (tabs.check(new GregorianCalendar(2013, 3, 3, 11, i, 0))) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","date":"2019-10-02 15:46:53","endLine":282,"groupId":"10753","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"repeatedHash","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/14/bb9bdb36266ea2b4a505f2b69191f37091aad6.src","preCode":"    @Test public void repeatedHash() throws Exception {\n        CronTabList tabs = CronTabList.create(\"H * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<Integer>();\n        for (int i = 0; i < 60; i++) {\n            if (tabs.check(new GregorianCalendar(2013, 3, 3, 11, i, 0))) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","realPath":"core/src/test/java/hudson/scheduler/CronTabTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"},{"authorDate":"2019-10-02 15:46:53","commitOrder":4,"curCode":"    @Test public void testTimezone() throws Exception {\n        CronTabList tabs = CronTabList.create(\"TZ=Australia/Sydney\\nH * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<>();\n        for (int i = 0; i < 60; i++) {\n            GregorianCalendar calendar = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"));\n            calendar.set(2013, Calendar.APRIL, 3, 11, i, 0);\n            if (tabs.check(calendar)) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","date":"2019-10-02 15:46:53","endLine":318,"groupId":"10753","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testTimezone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jenkins-10-0.7/blobInfo/CC_OUT/blobs/14/bb9bdb36266ea2b4a505f2b69191f37091aad6.src","preCode":"    @Test public void testTimezone() throws Exception {\n        CronTabList tabs = CronTabList.create(\"TZ=Australia/Sydney\\nH * * * *\\nH * * * *\", Hash.from(\"seed\"));\n        List<Integer> times = new ArrayList<Integer>();\n        for (int i = 0; i < 60; i++) {\n            GregorianCalendar calendar = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"));\n            calendar.set(2013, Calendar.APRIL, 3, 11, i, 0);\n            if (tabs.check(calendar)) {\n                times.add(i);\n            }\n        }\n        assertEquals(\"[35, 56]\", times.toString());\n    }\n","realPath":"core/src/test/java/hudson/scheduler/CronTabTest.java","repoName":"jenkins","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"M"}],"commitId":"531972f113e6ff56f393512f0e17a59647fea54f","commitMessage":"@@@Merge pull request #4243 from res0nance/infer-types\n\nUse type inference instead of specifying it","date":"2019-10-02 15:46:53","modifiedFileCount":"44","status":"M","submitter":"Oleg Nenashev"}]
