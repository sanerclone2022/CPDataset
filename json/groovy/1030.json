[{"authorTime":"2014-03-05 04:32:47","codes":[{"authorDate":"2014-03-05 04:32:47","commitOrder":1,"curCode":"        private void groovyExpression(Reader reader, StringWriter sw) throws IOException {\n            sw.write(\"${\");\n            int c;\n            while ((c = reader.read()) != -1) {\n                if (c == '%') {\n                    c = reader.read();\n                    if (c != '>') {\n                        sw.write('%');\n                    } else {\n                        break;\n                    }\n                }\n                if (c != '\\n' && c != '\\r') {\n                    sw.write(c);\n                }\n            }\n            sw.write(\"}\");\n        }\n","date":"2014-03-05 04:32:47","endLine":298,"groupId":"11232","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"groovyExpression","params":"(Readerreader@StringWritersw)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/3b/292976c9d18d548692470dca74d20d0772526e.src","preCode":"        private void groovyExpression(Reader reader, StringWriter sw) throws IOException {\n            sw.write(\"${\");\n            int c;\n            while ((c = reader.read()) != -1) {\n                if (c == '%') {\n                    c = reader.read();\n                    if (c != '>') {\n                        sw.write('%');\n                    } else {\n                        break;\n                    }\n                }\n                if (c != '\\n' && c != '\\r') {\n                    sw.write(c);\n                }\n            }\n            sw.write(\"}\");\n        }\n","realPath":"subprojects/groovy-templates/src/main/groovy/groovy/text/SimpleTemplateEngine.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"B"},{"authorDate":"2014-03-05 04:32:47","commitOrder":1,"curCode":"        private void groovySection(Reader reader, StringWriter sw) throws IOException {\n            sw.write(\"\\\"\\\"\\\");\");\n            int c;\n            while ((c = reader.read()) != -1) {\n                if (c == '%') {\n                    c = reader.read();\n                    if (c != '>') {\n                        sw.write('%');\n                    } else {\n                        break;\n                    }\n                }\n                \r\n\r\n\n                \r\n                sw.write(c);\n                \r\n            }\n            sw.write(\";\\nout.print(\\\"\\\"\\\"\");\n        }\n","date":"2014-03-05 04:32:47","endLine":327,"groupId":"11232","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"groovySection","params":"(Readerreader@StringWritersw)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/3b/292976c9d18d548692470dca74d20d0772526e.src","preCode":"        private void groovySection(Reader reader, StringWriter sw) throws IOException {\n            sw.write(\"\\\"\\\"\\\");\");\n            int c;\n            while ((c = reader.read()) != -1) {\n                if (c == '%') {\n                    c = reader.read();\n                    if (c != '>') {\n                        sw.write('%');\n                    } else {\n                        break;\n                    }\n                }\n                \r\n\r\n\n                \r\n                sw.write(c);\n                \r\n            }\n            sw.write(\";\\nout.print(\\\"\\\"\\\"\");\n        }\n","realPath":"subprojects/groovy-templates/src/main/groovy/groovy/text/SimpleTemplateEngine.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"B"}],"commitId":"be3ba6dc2f44dd475480694f5b6d4cdaabfd745a","commitMessage":"@@@Merge pull request #339 from melix/markup-template-engine-pr\n\nGROOVY-6596: MarkupTemplateEngine implementation","date":"2014-03-05 04:32:47","modifiedFileCount":"1","status":"B","submitter":"C?dric Champeau"},{"authorTime":"2018-01-05 12:29:21","codes":[{"authorDate":"2018-01-05 12:29:21","commitOrder":2,"curCode":"        private void groovyExpression(Reader reader, StringBuilderWriter sw) throws IOException {\n            sw.write(\"${\");\n            int c;\n            while ((c = reader.read()) != -1) {\n                if (c == '%') {\n                    c = reader.read();\n                    if (c != '>') {\n                        sw.write('%');\n                    } else {\n                        break;\n                    }\n                }\n                if (c != '\\n' && c != '\\r') {\n                    sw.write(c);\n                }\n            }\n            sw.write(\"}\");\n        }\n","date":"2018-01-05 12:29:21","endLine":304,"groupId":"1030","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"groovyExpression","params":"(Readerreader@StringBuilderWritersw)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/e4/776aba5c6ea4d99ff00929d7ee9ffe9fbc488b.src","preCode":"        private void groovyExpression(Reader reader, StringWriter sw) throws IOException {\n            sw.write(\"${\");\n            int c;\n            while ((c = reader.read()) != -1) {\n                if (c == '%') {\n                    c = reader.read();\n                    if (c != '>') {\n                        sw.write('%');\n                    } else {\n                        break;\n                    }\n                }\n                if (c != '\\n' && c != '\\r') {\n                    sw.write(c);\n                }\n            }\n            sw.write(\"}\");\n        }\n","realPath":"subprojects/groovy-templates/src/main/groovy/groovy/text/SimpleTemplateEngine.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"M"},{"authorDate":"2018-01-05 12:29:21","commitOrder":2,"curCode":"        private void groovySection(Reader reader, StringBuilderWriter sw) throws IOException {\n            sw.write(\"\\\"\\\"\\\");\");\n            int c;\n            while ((c = reader.read()) != -1) {\n                if (c == '%') {\n                    c = reader.read();\n                    if (c != '>') {\n                        sw.write('%');\n                    } else {\n                        break;\n                    }\n                }\n                \r\n\r\n\n                \r\n                sw.write(c);\n                \r\n            }\n            sw.write(\";\\nout.print(\\\"\\\"\\\"\");\n        }\n","date":"2018-01-05 12:29:21","endLine":333,"groupId":"1030","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"groovySection","params":"(Readerreader@StringBuilderWritersw)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/e4/776aba5c6ea4d99ff00929d7ee9ffe9fbc488b.src","preCode":"        private void groovySection(Reader reader, StringWriter sw) throws IOException {\n            sw.write(\"\\\"\\\"\\\");\");\n            int c;\n            while ((c = reader.read()) != -1) {\n                if (c == '%') {\n                    c = reader.read();\n                    if (c != '>') {\n                        sw.write('%');\n                    } else {\n                        break;\n                    }\n                }\n                \r\n\r\n\n                \r\n                sw.write(c);\n                \r\n            }\n            sw.write(\";\\nout.print(\\\"\\\"\\\"\");\n        }\n","realPath":"subprojects/groovy-templates/src/main/groovy/groovy/text/SimpleTemplateEngine.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"M"}],"commitId":"3d4ab7122f9c2c0ee7066c2d9811838202df3280","commitMessage":"@@@Use `StringBuilderWriter` instead\n","date":"2018-01-05 12:29:21","modifiedFileCount":"22","status":"M","submitter":"sunlan"}]
