[{"authorTime":"2017-12-12 09:35:07","codes":[{"authorDate":"2017-12-12 09:35:07","commitOrder":1,"curCode":"    public void testFifoCache() {\n        ConcurrentCommonCache<String, String> sc = new ConcurrentCommonCache<String, String>(3, 3, EvictableCache.EvictionStrategy.FIFO);\n        sc.put(\"a\", \"1\");\n        sc.put(\"b\", \"2\");\n        sc.put(\"c\", \"3\");\n        sc.put(\"a\", \"4\");\n        sc.put(\"d\", \"5\");\n        Assert.assertArrayEquals(new String[] {\"b\", \"c\", \"d\"}, sc.keys().toArray(new String[0]));\n        Assert.assertEquals(\"2\", sc.get(\"b\"));\n        Assert.assertEquals(\"3\", sc.get(\"c\"));\n        Assert.assertEquals(\"5\", sc.get(\"d\"));\n    }\n","date":"2017-12-12 09:35:21","endLine":202,"groupId":"9242","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFifoCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/34/0c286497682953614d9d9e916334494c6c5cf2.src","preCode":"    public void testFifoCache() {\n        ConcurrentCommonCache<String, String> sc = new ConcurrentCommonCache<String, String>(3, 3, EvictableCache.EvictionStrategy.FIFO);\n        sc.put(\"a\", \"1\");\n        sc.put(\"b\", \"2\");\n        sc.put(\"c\", \"3\");\n        sc.put(\"a\", \"4\");\n        sc.put(\"d\", \"5\");\n        Assert.assertArrayEquals(new String[] {\"b\", \"c\", \"d\"}, sc.keys().toArray(new String[0]));\n        Assert.assertEquals(\"2\", sc.get(\"b\"));\n        Assert.assertEquals(\"3\", sc.get(\"c\"));\n        Assert.assertEquals(\"5\", sc.get(\"d\"));\n    }\n","realPath":"src/test/org/codehaus/groovy/runtime/memoize/ConcurrentCommonCacheTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"B"},{"authorDate":"2017-12-12 09:35:07","commitOrder":1,"curCode":"    public void testLruCache() {\n        CommonCache<String, String> sc = new CommonCache<String, String>(3);\n        sc.put(\"a\", \"1\");\n        sc.put(\"b\", \"2\");\n        sc.put(\"c\", \"3\");\n        sc.put(\"a\", \"4\");\n        sc.put(\"d\", \"5\");\n        Assert.assertArrayEquals(new String[] {\"c\", \"a\", \"d\"}, sc.keys().toArray(new String[0]));\n        Assert.assertEquals(\"3\", sc.get(\"c\"));\n        Assert.assertEquals(\"4\", sc.get(\"a\"));\n        Assert.assertEquals(\"5\", sc.get(\"d\"));\n    }\n","date":"2017-12-12 09:35:21","endLine":189,"groupId":"9242","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLruCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/2b/32c4a0f9db0136f3dbf8351ebf3696dd7bb9f3.src","preCode":"    public void testLruCache() {\n        CommonCache<String, String> sc = new CommonCache<String, String>(3);\n        sc.put(\"a\", \"1\");\n        sc.put(\"b\", \"2\");\n        sc.put(\"c\", \"3\");\n        sc.put(\"a\", \"4\");\n        sc.put(\"d\", \"5\");\n        Assert.assertArrayEquals(new String[] {\"c\", \"a\", \"d\"}, sc.keys().toArray(new String[0]));\n        Assert.assertEquals(\"3\", sc.get(\"c\"));\n        Assert.assertEquals(\"4\", sc.get(\"a\"));\n        Assert.assertEquals(\"5\", sc.get(\"d\"));\n    }\n","realPath":"src/test/org/codehaus/groovy/runtime/memoize/CommonCacheTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"B"}],"commitId":"9f7783de7803c0b856a37c2a0510e15be3c87f67","commitMessage":"@@@Minor refactoring and add test for CommonCache\n","date":"2017-12-12 09:35:21","modifiedFileCount":"5","status":"B","submitter":"sunlan"},{"authorTime":"2019-11-06 17:04:59","codes":[{"authorDate":"2019-11-06 17:04:59","commitOrder":2,"curCode":"    public void testFifoCache() {\n        ConcurrentCommonCache<String, String> sc = new ConcurrentCommonCache<>(3, 3, EvictableCache.EvictionStrategy.FIFO);\n        sc.put(\"a\", \"1\");\n        sc.put(\"b\", \"2\");\n        sc.put(\"c\", \"3\");\n        sc.put(\"a\", \"4\");\n        sc.put(\"d\", \"5\");\n        Assert.assertArrayEquals(new String[] {\"b\", \"c\", \"d\"}, sc.keys().toArray(new String[0]));\n        Assert.assertEquals(\"2\", sc.get(\"b\"));\n        Assert.assertEquals(\"3\", sc.get(\"c\"));\n        Assert.assertEquals(\"5\", sc.get(\"d\"));\n    }\n","date":"2019-11-06 18:07:30","endLine":199,"groupId":"10323","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testFifoCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/ef/bb054a4b621c55a59ff11d45965dd72837ff66.src","preCode":"    public void testFifoCache() {\n        ConcurrentCommonCache<String, String> sc = new ConcurrentCommonCache<String, String>(3, 3, EvictableCache.EvictionStrategy.FIFO);\n        sc.put(\"a\", \"1\");\n        sc.put(\"b\", \"2\");\n        sc.put(\"c\", \"3\");\n        sc.put(\"a\", \"4\");\n        sc.put(\"d\", \"5\");\n        Assert.assertArrayEquals(new String[] {\"b\", \"c\", \"d\"}, sc.keys().toArray(new String[0]));\n        Assert.assertEquals(\"2\", sc.get(\"b\"));\n        Assert.assertEquals(\"3\", sc.get(\"c\"));\n        Assert.assertEquals(\"5\", sc.get(\"d\"));\n    }\n","realPath":"src/test/org/codehaus/groovy/runtime/memoize/ConcurrentCommonCacheTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"},{"authorDate":"2019-11-06 17:04:59","commitOrder":2,"curCode":"    public void testLruCache() {\n        CommonCache<String, String> sc = new CommonCache<>(3);\n        sc.put(\"a\", \"1\");\n        sc.put(\"b\", \"2\");\n        sc.put(\"c\", \"3\");\n        sc.put(\"a\", \"4\");\n        sc.put(\"d\", \"5\");\n        Assert.assertArrayEquals(new String[] {\"c\", \"a\", \"d\"}, sc.keys().toArray(new String[0]));\n        Assert.assertEquals(\"3\", sc.get(\"c\"));\n        Assert.assertEquals(\"4\", sc.get(\"a\"));\n        Assert.assertEquals(\"5\", sc.get(\"d\"));\n    }\n","date":"2019-11-06 18:07:30","endLine":184,"groupId":"10323","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testLruCache","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/22/23e5457e55120de45dd832a58ae698e7233347.src","preCode":"    public void testLruCache() {\n        CommonCache<String, String> sc = new CommonCache<String, String>(3);\n        sc.put(\"a\", \"1\");\n        sc.put(\"b\", \"2\");\n        sc.put(\"c\", \"3\");\n        sc.put(\"a\", \"4\");\n        sc.put(\"d\", \"5\");\n        Assert.assertArrayEquals(new String[] {\"c\", \"a\", \"d\"}, sc.keys().toArray(new String[0]));\n        Assert.assertEquals(\"3\", sc.get(\"c\"));\n        Assert.assertEquals(\"4\", sc.get(\"a\"));\n        Assert.assertEquals(\"5\", sc.get(\"d\"));\n    }\n","realPath":"src/test/org/codehaus/groovy/runtime/memoize/CommonCacheTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"f1a0d190dd3bc84d5760cd44d5bd051ddca3a31b","commitMessage":"@@@refactor code\n\nI refactor some code about new java version and some unnecessary\nobjects that I leant from effective java item6.\n\n--Make progress every day!\n","date":"2019-11-06 18:07:30","modifiedFileCount":"17","status":"M","submitter":"mattisonchao"}]
