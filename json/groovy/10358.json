[{"authorTime":"2019-05-19 17:04:42","codes":[{"authorDate":"2019-05-19 17:04:42","commitOrder":1,"curCode":"    public Object getAttribute(Class sender, Object object, String attribute, boolean useSuper, boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            return mc.getAttribute(sender, object, attribute, useSuper);\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            try {\n                \r\n                if (mp != null) return mp.getProperty(object);\n            } catch (Exception e) {\n                throw new GroovyRuntimeException(\"Cannot read field: \" + attribute, e);\n            }\n        }\n\n        throw new MissingFieldException(attribute, theClass);\n    }\n","date":"2019-05-19 17:04:42","endLine":2939,"groupId":"11266","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAttribute","params":"(Classsender@Objectobject@Stringattribute@booleanuseSuper@booleanfromInsideClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/17/1bf7c183671ceac7384a2d175f6958a25c1088.src","preCode":"    public Object getAttribute(Class sender, Object object, String attribute, boolean useSuper, boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            return mc.getAttribute(sender, object, attribute, useSuper);\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            try {\n                \r\n                if (mp != null) return mp.getProperty(object);\n            } catch (Exception e) {\n                throw new GroovyRuntimeException(\"Cannot read field: \" + attribute, e);\n            }\n        }\n\n        throw new MissingFieldException(attribute, theClass);\n    }\n","realPath":"src/main/java/groovy/lang/MetaClassImpl.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":2914,"status":"B"},{"authorDate":"2019-05-19 17:04:42","commitOrder":1,"curCode":"    public void setAttribute(Class sender, Object object, String attribute, Object newValue, boolean useSuper, boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            mc.setAttribute(sender, object, attribute, newValue, useSuper, fromInsideClass);\n            return;\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            if (mp != null) {\n                mp.setProperty(object, newValue);\n                return;\n            }\n        }\n\n        throw new MissingFieldException(attribute, theClass);\n    }\n","date":"2019-05-19 17:04:42","endLine":2979,"groupId":"10553","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setAttribute","params":"(Classsender@Objectobject@Stringattribute@ObjectnewValue@booleanuseSuper@booleanfromInsideClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/17/1bf7c183671ceac7384a2d175f6958a25c1088.src","preCode":"    public void setAttribute(Class sender, Object object, String attribute, Object newValue, boolean useSuper, boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            mc.setAttribute(sender, object, attribute, newValue, useSuper, fromInsideClass);\n            return;\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            if (mp != null) {\n                mp.setProperty(object, newValue);\n                return;\n            }\n        }\n\n        throw new MissingFieldException(attribute, theClass);\n    }\n","realPath":"src/main/java/groovy/lang/MetaClassImpl.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":2955,"status":"B"}],"commitId":"86f5c8216b5d0f042408bdc4ae5d6a7baa247c95","commitMessage":"@@@move some java files from src/main/groovy to src/main/java and fix up some Javadoc assertion tests that weren't running\n","date":"2019-05-19 17:04:42","modifiedFileCount":"0","status":"B","submitter":"Paul King"},{"authorTime":"2020-06-26 00:35:00","codes":[{"authorDate":"2020-06-26 00:35:00","commitOrder":2,"curCode":"    public Object getAttribute(final Class sender, final Object object, final String attribute, final boolean useSuper, final boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            return mc.getAttribute(sender, object, attribute, useSuper);\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            try {\n                \r\n                if (mp != null) return mp.getProperty(object);\n            } catch (Exception e) {\n                throw new GroovyRuntimeException(\"Cannot read field: \" + attribute, e);\n            }\n        }\n\n        throw new MissingFieldException(attribute, theClass);\n    }\n","date":"2020-06-26 00:35:00","endLine":2940,"groupId":"11266","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getAttribute","params":"(finalClasssender@finalObjectobject@finalStringattribute@finalbooleanuseSuper@finalbooleanfromInsideClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/5d/da2f5747eff56fad9c07b680cc6162343fcd5e.src","preCode":"    public Object getAttribute(Class sender, Object object, String attribute, boolean useSuper, boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            return mc.getAttribute(sender, object, attribute, useSuper);\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            try {\n                \r\n                if (mp != null) return mp.getProperty(object);\n            } catch (Exception e) {\n                throw new GroovyRuntimeException(\"Cannot read field: \" + attribute, e);\n            }\n        }\n\n        throw new MissingFieldException(attribute, theClass);\n    }\n","realPath":"src/main/java/groovy/lang/MetaClassImpl.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":2915,"status":"M"},{"authorDate":"2020-06-26 00:35:00","commitOrder":2,"curCode":"    public void setAttribute(final Class sender, final Object object, final String attribute, final Object newValue, final boolean useSuper, final boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            mc.setAttribute(sender, object, attribute, newValue, useSuper, fromInsideClass);\n            return;\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            if (mp != null) {\n                mp.setProperty(object, newValue);\n                return;\n            }\n        }\n\n        throw new MissingFieldException(attribute, theClass);\n    }\n","date":"2020-06-26 00:35:00","endLine":2980,"groupId":"10553","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setAttribute","params":"(finalClasssender@finalObjectobject@finalStringattribute@finalObjectnewValue@finalbooleanuseSuper@finalbooleanfromInsideClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/5d/da2f5747eff56fad9c07b680cc6162343fcd5e.src","preCode":"    public void setAttribute(Class sender, Object object, String attribute, Object newValue, boolean useSuper, boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            mc.setAttribute(sender, object, attribute, newValue, useSuper, fromInsideClass);\n            return;\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            if (mp != null) {\n                mp.setProperty(object, newValue);\n                return;\n            }\n        }\n\n        throw new MissingFieldException(attribute, theClass);\n    }\n","realPath":"src/main/java/groovy/lang/MetaClassImpl.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":2956,"status":"M"}],"commitId":"ce825a7d23f590a73248c0aee1ccec5e78582fe6","commitMessage":"@@@minor fix-ups","date":"2020-06-26 00:35:00","modifiedFileCount":"2","status":"M","submitter":"Eric Milles"},{"authorTime":"2020-07-03 07:35:40","codes":[{"authorDate":"2020-07-03 07:35:40","commitOrder":3,"curCode":"    public Object getAttribute(final Class sender, final Object object, final String attribute, final boolean useSuper, final boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            return mc.getAttribute(sender, object, attribute, useSuper);\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            try {\n                \r\n                if (mp != null) return mp.getProperty(object);\n            } catch (Exception e) {\n                throw new GroovyRuntimeException(\"Cannot read field: \" + attribute, e);\n            }\n        }\n\n        throw new MissingFieldException(attribute, !useSuper ? theClass : theClass.getSuperclass());\n    }\n","date":"2020-07-03 07:35:40","endLine":2940,"groupId":"10358","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getAttribute","params":"(finalClasssender@finalObjectobject@finalStringattribute@finalbooleanuseSuper@finalbooleanfromInsideClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/85/a321a2c0613f8365ba821422eb83c78a593301.src","preCode":"    public Object getAttribute(final Class sender, final Object object, final String attribute, final boolean useSuper, final boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            return mc.getAttribute(sender, object, attribute, useSuper);\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            try {\n                \r\n                if (mp != null) return mp.getProperty(object);\n            } catch (Exception e) {\n                throw new GroovyRuntimeException(\"Cannot read field: \" + attribute, e);\n            }\n        }\n\n        throw new MissingFieldException(attribute, theClass);\n    }\n","realPath":"src/main/java/groovy/lang/MetaClassImpl.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":2915,"status":"M"},{"authorDate":"2020-07-03 07:35:40","commitOrder":3,"curCode":"    public void setAttribute(final Class sender, final Object object, final String attribute, final Object newValue, final boolean useSuper, final boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            mc.setAttribute(sender, object, attribute, newValue, useSuper, fromInsideClass);\n            return;\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            if (mp != null) {\n                mp.setProperty(object, newValue);\n                return;\n            }\n        }\n\n        throw new MissingFieldException(attribute, !useSuper ? theClass : theClass.getSuperclass());\n    }\n","date":"2020-07-03 07:35:40","endLine":2980,"groupId":"10358","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setAttribute","params":"(finalClasssender@finalObjectobject@finalStringattribute@finalObjectnewValue@finalbooleanuseSuper@finalbooleanfromInsideClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/85/a321a2c0613f8365ba821422eb83c78a593301.src","preCode":"    public void setAttribute(final Class sender, final Object object, final String attribute, final Object newValue, final boolean useSuper, final boolean fromInsideClass) {\n        checkInitalised();\n\n        boolean isStatic = theClass != Class.class && object instanceof Class;\n        if (isStatic && object != theClass) {\n            MetaClass mc = registry.getMetaClass((Class) object);\n            mc.setAttribute(sender, object, attribute, newValue, useSuper, fromInsideClass);\n            return;\n        }\n\n        MetaProperty mp = getMetaProperty(sender, attribute, useSuper, isStatic);\n\n        if (mp != null) {\n            if (mp instanceof MetaBeanProperty) {\n                MetaBeanProperty mbp = (MetaBeanProperty) mp;\n                mp = mbp.getField();\n            }\n            if (mp != null) {\n                mp.setProperty(object, newValue);\n                return;\n            }\n        }\n\n        throw new MissingFieldException(attribute, theClass);\n    }\n","realPath":"src/main/java/groovy/lang/MetaClassImpl.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":2956,"status":"M"}],"commitId":"c7c35b0fc0b54816d52742d90893491efb307c89","commitMessage":"@@@GROOVY-8999: super.@x should fail for private fields -- no getX() or setX() workaround(closes #1291)\n","date":"2020-07-03 07:35:40","modifiedFileCount":"4","status":"M","submitter":"Eric Milles"}]
