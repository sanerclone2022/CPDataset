[{"authorTime":"2019-05-16 16:27:18","codes":[{"authorDate":"2019-05-16 16:27:18","commitOrder":1,"curCode":"    public Iterator nodeIterator() {\n        return new NodeIterator(this.parent.nodeIterator()) {\n            protected Object getNextNode(final Iterator iter) {\n                while (iter.hasNext()) {\n                    final Object node = iter.next();\n                    if (closureYieldsTrueForNode(new NodeChild((Node) node, FilteredNodeChildren.this.parent, FilteredNodeChildren.this.namespaceTagHints))) {\n                        return node;\n                    }\n                }\n                return null;\n            }\n        };\n    }\n","date":"2019-05-16 16:27:18","endLine":59,"groupId":"8116","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"nodeIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/0b/c1d2e5471ec42ed9b68f790c2a36f0d01f8686.src","preCode":"    public Iterator nodeIterator() {\n        return new NodeIterator(this.parent.nodeIterator()) {\n            protected Object getNextNode(final Iterator iter) {\n                while (iter.hasNext()) {\n                    final Object node = iter.next();\n                    if (closureYieldsTrueForNode(new NodeChild((Node) node, FilteredNodeChildren.this.parent, FilteredNodeChildren.this.namespaceTagHints))) {\n                        return node;\n                    }\n                }\n                return null;\n            }\n        };\n    }\n","realPath":"subprojects/groovy-xml/src/main/java/groovy/xml/slurpersupport/FilteredNodeChildren.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2019-05-16 16:27:18","commitOrder":1,"curCode":"    public Iterator nodeIterator() {\n        return new NodeIterator(this.parent.iterator())\n        {\n            protected Object getNextNode(final Iterator iter) {\n                while (iter.hasNext()) {\n                    final Object node = iter.next();\n                    if (DefaultTypeTransformation.castToBoolean(FilteredAttributes.this.closure.call(new Object[]{node}))) {\n                        return node;\n                    }\n                }\n                return null;\n            }\n        };\n    }\n","date":"2019-05-16 16:27:18","endLine":57,"groupId":"12153","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"nodeIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/35/3b100df8a0208f39a4fc17d3496a3369dcb852.src","preCode":"    public Iterator nodeIterator() {\n        return new NodeIterator(this.parent.iterator())\n        {\n            protected Object getNextNode(final Iterator iter) {\n                while (iter.hasNext()) {\n                    final Object node = iter.next();\n                    if (DefaultTypeTransformation.castToBoolean(FilteredAttributes.this.closure.call(new Object[]{node}))) {\n                        return node;\n                    }\n                }\n                return null;\n            }\n        };\n    }\n","realPath":"subprojects/groovy-xml/src/main/java/groovy/xml/slurpersupport/FilteredAttributes.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"}],"commitId":"ff5a54bd8a63e2838a14c7dab4040a183ba90731","commitMessage":"@@@Split history main/java/groovy/util/slurpersupport to main/java/groovy/xml - resolve conflict and keep both files\n","date":"2019-05-16 16:27:18","modifiedFileCount":"0","status":"B","submitter":"Paul King"},{"authorTime":"2020-10-01 03:22:05","codes":[{"authorDate":"2020-10-01 03:22:05","commitOrder":2,"curCode":"    public Iterator nodeIterator() {\n        return new NodeIterator(this.parent.nodeIterator()) {\n            @Override\n            protected Object getNextNode(final Iterator iter) {\n                while (iter.hasNext()) {\n                    final Object node = iter.next();\n                    if (closureYieldsTrueForNode(new NodeChild((Node) node, FilteredNodeChildren.this.parent, FilteredNodeChildren.this.namespaceTagHints))) {\n                        return node;\n                    }\n                }\n                return null;\n            }\n        };\n    }\n","date":"2020-10-01 03:22:05","endLine":62,"groupId":"1057","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"nodeIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/16/966f111010caae50649ba7f63656ba6fd42954.src","preCode":"    public Iterator nodeIterator() {\n        return new NodeIterator(this.parent.nodeIterator()) {\n            protected Object getNextNode(final Iterator iter) {\n                while (iter.hasNext()) {\n                    final Object node = iter.next();\n                    if (closureYieldsTrueForNode(new NodeChild((Node) node, FilteredNodeChildren.this.parent, FilteredNodeChildren.this.namespaceTagHints))) {\n                        return node;\n                    }\n                }\n                return null;\n            }\n        };\n    }\n","realPath":"subprojects/groovy-xml/src/main/java/groovy/xml/slurpersupport/FilteredNodeChildren.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2020-10-01 03:22:05","commitOrder":2,"curCode":"    public Iterator nodeIterator() {\n        return new NodeIterator(this.parent.iterator())\n        {\n            @Override\n            protected Object getNextNode(final Iterator iter) {\n                while (iter.hasNext()) {\n                    final Object node = iter.next();\n                    if (DefaultTypeTransformation.castToBoolean(FilteredAttributes.this.closure.call(new Object[]{node}))) {\n                        return node;\n                    }\n                }\n                return null;\n            }\n        };\n    }\n","date":"2020-10-01 03:22:05","endLine":59,"groupId":"1057","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"nodeIterator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/3f/8c53860a9703829b763d20e1cc4db02b589326.src","preCode":"    public Iterator nodeIterator() {\n        return new NodeIterator(this.parent.iterator())\n        {\n            protected Object getNextNode(final Iterator iter) {\n                while (iter.hasNext()) {\n                    final Object node = iter.next();\n                    if (DefaultTypeTransformation.castToBoolean(FilteredAttributes.this.closure.call(new Object[]{node}))) {\n                        return node;\n                    }\n                }\n                return null;\n            }\n        };\n    }\n","realPath":"subprojects/groovy-xml/src/main/java/groovy/xml/slurpersupport/FilteredAttributes.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"5744d6ed8de9a44024ad6881dcf4e2bbd7dff9ba","commitMessage":"@@@add missing @Override annotations\n","date":"2020-10-01 03:22:05","modifiedFileCount":"512","status":"M","submitter":"Paul King"}]
