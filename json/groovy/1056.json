[{"authorTime":"2019-05-16 16:27:18","codes":[{"authorDate":"2019-05-16 16:27:18","commitOrder":1,"curCode":"    public Iterator depthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private final Stack stack = new Stack();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByDepth();\n\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByDepth();\n                }\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByDepth() {\n                while (this.iter.hasNext()) {\n                    final GPathResult node = (GPathResult) this.iter.next();\n                    this.list.add(node);\n                    this.stack.push(this.iter);\n                    this.iter = node.children().iterator();\n                }\n\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.stack.pop();\n                    return result;\n                }\n            }\n        };\n    }\n","date":"2019-05-16 16:27:18","endLine":532,"groupId":"7230","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"depthFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/ab/d1c6651e1b1626f99426cec7287af2345c0067.src","preCode":"    public Iterator depthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private final Stack stack = new Stack();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByDepth();\n\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByDepth();\n                }\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByDepth() {\n                while (this.iter.hasNext()) {\n                    final GPathResult node = (GPathResult) this.iter.next();\n                    this.list.add(node);\n                    this.stack.push(this.iter);\n                    this.iter = node.children().iterator();\n                }\n\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.stack.pop();\n                    return result;\n                }\n            }\n        };\n    }\n","realPath":"subprojects/groovy-xml/src/main/java/groovy/xml/slurpersupport/GPathResult.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":491,"status":"B"},{"authorDate":"2019-05-16 16:27:18","commitOrder":1,"curCode":"    public Iterator breadthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByBreadth();\n\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByBreadth();\n                }\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByBreadth() {\n                List children = new ArrayList();\n                while (this.iter.hasNext() || !children.isEmpty()) {\n                    if (this.iter.hasNext()) {\n                        final GPathResult node = (GPathResult) this.iter.next();\n                        this.list.add(node);\n                        this.list.add(this.iter);\n                        children.add(node.children());\n                    } else {\n                        List nextLevel = new ArrayList();\n                        for (Object child : children) {\n                            GPathResult next = (GPathResult) child;\n                            Iterator iterator = next.iterator();\n                            while (iterator.hasNext()) {\n                                nextLevel.add(iterator.next());\n                            }\n                        }\n                        this.iter = nextLevel.iterator();\n                        children = new ArrayList();\n                    }\n                }\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.list.get(0);\n                    this.list.remove(0);\n                    return result;\n                }\n            }\n        };\n    }\n","date":"2019-05-16 16:27:18","endLine":593,"groupId":"3161","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"breadthFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/ab/d1c6651e1b1626f99426cec7287af2345c0067.src","preCode":"    public Iterator breadthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByBreadth();\n\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByBreadth();\n                }\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByBreadth() {\n                List children = new ArrayList();\n                while (this.iter.hasNext() || !children.isEmpty()) {\n                    if (this.iter.hasNext()) {\n                        final GPathResult node = (GPathResult) this.iter.next();\n                        this.list.add(node);\n                        this.list.add(this.iter);\n                        children.add(node.children());\n                    } else {\n                        List nextLevel = new ArrayList();\n                        for (Object child : children) {\n                            GPathResult next = (GPathResult) child;\n                            Iterator iterator = next.iterator();\n                            while (iterator.hasNext()) {\n                                nextLevel.add(iterator.next());\n                            }\n                        }\n                        this.iter = nextLevel.iterator();\n                        children = new ArrayList();\n                    }\n                }\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.list.get(0);\n                    this.list.remove(0);\n                    return result;\n                }\n            }\n        };\n    }\n","realPath":"subprojects/groovy-xml/src/main/java/groovy/xml/slurpersupport/GPathResult.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":539,"status":"B"}],"commitId":"ff5a54bd8a63e2838a14c7dab4040a183ba90731","commitMessage":"@@@Split history main/java/groovy/util/slurpersupport to main/java/groovy/xml - resolve conflict and keep both files\n","date":"2019-05-16 16:27:18","modifiedFileCount":"0","status":"B","submitter":"Paul King"},{"authorTime":"2020-04-11 21:24:19","codes":[{"authorDate":"2019-05-16 16:27:18","commitOrder":2,"curCode":"    public Iterator depthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private final Stack stack = new Stack();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByDepth();\n\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByDepth();\n                }\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByDepth() {\n                while (this.iter.hasNext()) {\n                    final GPathResult node = (GPathResult) this.iter.next();\n                    this.list.add(node);\n                    this.stack.push(this.iter);\n                    this.iter = node.children().iterator();\n                }\n\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.stack.pop();\n                    return result;\n                }\n            }\n        };\n    }\n","date":"2019-05-16 16:27:18","endLine":532,"groupId":"7230","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"depthFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/ab/d1c6651e1b1626f99426cec7287af2345c0067.src","preCode":"    public Iterator depthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private final Stack stack = new Stack();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByDepth();\n\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByDepth();\n                }\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByDepth() {\n                while (this.iter.hasNext()) {\n                    final GPathResult node = (GPathResult) this.iter.next();\n                    this.list.add(node);\n                    this.stack.push(this.iter);\n                    this.iter = node.children().iterator();\n                }\n\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.stack.pop();\n                    return result;\n                }\n            }\n        };\n    }\n","realPath":"subprojects/groovy-xml/src/main/java/groovy/xml/slurpersupport/GPathResult.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":491,"status":"N"},{"authorDate":"2020-04-11 21:24:19","commitOrder":2,"curCode":"    public Iterator breadthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByBreadth();\n\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByBreadth();\n                }\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByBreadth() {\n                List children = new ArrayList();\n                while (this.iter.hasNext() || !children.isEmpty()) {\n                    if (this.iter.hasNext()) {\n                        final GPathResult node = (GPathResult) this.iter.next();\n                        this.list.add(node);\n                        this.list.add(this.iter);\n                        children.add(node.children());\n                    } else {\n                        List nextLevel = new ArrayList();\n                        for (Object child : children) {\n                            GPathResult next = (GPathResult) child;\n                            for (Object o : next) {\n                                nextLevel.add(o);\n                            }\n                        }\n                        this.iter = nextLevel.iterator();\n                        children = new ArrayList();\n                    }\n                }\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.list.get(0);\n                    this.list.remove(0);\n                    return result;\n                }\n            }\n        };\n    }\n","date":"2020-04-11 21:24:19","endLine":593,"groupId":"3027","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"breadthFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/da/1b3d69a0279274c1e55bcde7f3d06a3e67a8f6.src","preCode":"    public Iterator breadthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByBreadth();\n\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByBreadth();\n                }\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByBreadth() {\n                List children = new ArrayList();\n                while (this.iter.hasNext() || !children.isEmpty()) {\n                    if (this.iter.hasNext()) {\n                        final GPathResult node = (GPathResult) this.iter.next();\n                        this.list.add(node);\n                        this.list.add(this.iter);\n                        children.add(node.children());\n                    } else {\n                        List nextLevel = new ArrayList();\n                        for (Object child : children) {\n                            GPathResult next = (GPathResult) child;\n                            Iterator iterator = next.iterator();\n                            while (iterator.hasNext()) {\n                                nextLevel.add(iterator.next());\n                            }\n                        }\n                        this.iter = nextLevel.iterator();\n                        children = new ArrayList();\n                    }\n                }\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.list.get(0);\n                    this.list.remove(0);\n                    return result;\n                }\n            }\n        };\n    }\n","realPath":"subprojects/groovy-xml/src/main/java/groovy/xml/slurpersupport/GPathResult.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"M"}],"commitId":"af164227c8f7f006445beb049c3d314179318601","commitMessage":"@@@Trivial refactoring: Replace with enhanced 'for' loop\n","date":"2020-04-11 21:24:19","modifiedFileCount":"4","status":"M","submitter":"Daniel Sun"},{"authorTime":"2020-10-01 03:22:05","codes":[{"authorDate":"2020-10-01 03:22:05","commitOrder":3,"curCode":"    public Iterator depthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private final Stack stack = new Stack();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByDepth();\n\n            @Override\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            @Override\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByDepth();\n                }\n            }\n\n            @Override\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByDepth() {\n                while (this.iter.hasNext()) {\n                    final GPathResult node = (GPathResult) this.iter.next();\n                    this.list.add(node);\n                    this.stack.push(this.iter);\n                    this.iter = node.children().iterator();\n                }\n\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.stack.pop();\n                    return result;\n                }\n            }\n        };\n    }\n","date":"2020-10-01 03:22:05","endLine":538,"groupId":"1056","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"depthFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/94/47eb48fb885fbce69b75ffb404e98e5e5f21af.src","preCode":"    public Iterator depthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private final Stack stack = new Stack();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByDepth();\n\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByDepth();\n                }\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByDepth() {\n                while (this.iter.hasNext()) {\n                    final GPathResult node = (GPathResult) this.iter.next();\n                    this.list.add(node);\n                    this.stack.push(this.iter);\n                    this.iter = node.children().iterator();\n                }\n\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.stack.pop();\n                    return result;\n                }\n            }\n        };\n    }\n","realPath":"subprojects/groovy-xml/src/main/java/groovy/xml/slurpersupport/GPathResult.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":494,"status":"M"},{"authorDate":"2020-10-01 03:22:05","commitOrder":3,"curCode":"    public Iterator breadthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByBreadth();\n\n            @Override\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            @Override\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByBreadth();\n                }\n            }\n\n            @Override\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByBreadth() {\n                List children = new ArrayList();\n                while (this.iter.hasNext() || !children.isEmpty()) {\n                    if (this.iter.hasNext()) {\n                        final GPathResult node = (GPathResult) this.iter.next();\n                        this.list.add(node);\n                        this.list.add(this.iter);\n                        children.add(node.children());\n                    } else {\n                        List nextLevel = new ArrayList();\n                        for (Object child : children) {\n                            GPathResult next = (GPathResult) child;\n                            for (Object o : next) {\n                                nextLevel.add(o);\n                            }\n                        }\n                        this.iter = nextLevel.iterator();\n                        children = new ArrayList();\n                    }\n                }\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.list.get(0);\n                    this.list.remove(0);\n                    return result;\n                }\n            }\n        };\n    }\n","date":"2020-10-01 03:22:05","endLine":601,"groupId":"1056","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"breadthFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/94/47eb48fb885fbce69b75ffb404e98e5e5f21af.src","preCode":"    public Iterator breadthFirst() {\n        return new Iterator() {\n            private final List list = new LinkedList();\n            private Iterator iter = iterator();\n            private GPathResult next = getNextByBreadth();\n\n            public boolean hasNext() {\n                return this.next != null;\n            }\n\n            public Object next() {\n                try {\n                    return this.next;\n                } finally {\n                    this.next = getNextByBreadth();\n                }\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n\n            private GPathResult getNextByBreadth() {\n                List children = new ArrayList();\n                while (this.iter.hasNext() || !children.isEmpty()) {\n                    if (this.iter.hasNext()) {\n                        final GPathResult node = (GPathResult) this.iter.next();\n                        this.list.add(node);\n                        this.list.add(this.iter);\n                        children.add(node.children());\n                    } else {\n                        List nextLevel = new ArrayList();\n                        for (Object child : children) {\n                            GPathResult next = (GPathResult) child;\n                            for (Object o : next) {\n                                nextLevel.add(o);\n                            }\n                        }\n                        this.iter = nextLevel.iterator();\n                        children = new ArrayList();\n                    }\n                }\n                if (this.list.isEmpty()) {\n                    return null;\n                } else {\n                    GPathResult result = (GPathResult) this.list.get(0);\n                    this.list.remove(0);\n                    this.iter = (Iterator) this.list.get(0);\n                    this.list.remove(0);\n                    return result;\n                }\n            }\n        };\n    }\n","realPath":"subprojects/groovy-xml/src/main/java/groovy/xml/slurpersupport/GPathResult.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":545,"status":"M"}],"commitId":"5744d6ed8de9a44024ad6881dcf4e2bbd7dff9ba","commitMessage":"@@@add missing @Override annotations\n","date":"2020-10-01 03:22:05","modifiedFileCount":"512","status":"M","submitter":"Paul King"}]
