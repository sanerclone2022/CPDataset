[{"authorTime":"2012-01-07 15:06:07","codes":[{"authorDate":"2012-01-07 15:06:07","commitOrder":1,"curCode":"    public void testPackageName() throws Exception {\n        List<String> srcList = new ArrayList<String>();\n        srcList.add(\"groovy/xml/DOMBuilder.java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n\n        String domBuilderDoc = output.getText(MOCK_DIR + \"/groovy/xml/DOMBuilder.html\");\n        assertTrue(domBuilderDoc.indexOf(\"<containingPackage name=\\\"groovy/xml\\\">groovy.xml</containingPackage>\") > 0);\n    }\n","date":"2012-01-07 15:06:07","endLine":169,"groupId":"7853","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPackageName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/05/f391136959d9d6cf56fe08c0bd0038a76b4b4d.src","preCode":"    public void testPackageName() throws Exception {\n        List<String> srcList = new ArrayList<String>();\n        srcList.add(\"groovy/xml/DOMBuilder.java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n\n        String domBuilderDoc = output.getText(MOCK_DIR + \"/groovy/xml/DOMBuilder.html\");\n        assertTrue(domBuilderDoc.indexOf(\"<containingPackage name=\\\"groovy/xml\\\">groovy.xml</containingPackage>\") > 0);\n    }\n","realPath":"subprojects/groovy-groovydoc/src/test/groovy/org/codehaus/groovy/tools/groovydoc/GroovyDocToolTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"},{"authorDate":"2012-01-07 15:06:07","commitOrder":1,"curCode":"    public void testAnonymousInnerClassMethodsNotIncluded() throws Exception {\n        if (HeadlessTestSupport.isHeadless()) {\n            return;\n        }\n        List<String> srcList = new ArrayList<String>();\n        srcList.add(\"groovy/swing/binding/AbstractButtonProperties.java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String abstractButtonPropertiesDoc = output.getText(MOCK_DIR + \"/groovy/swing/binding/AbstractButtonProperties.html\");\n        assertTrue(abstractButtonPropertiesDoc.indexOf(\"createBinding\") < 0);\n    }\n","date":"2012-01-07 15:06:07","endLine":288,"groupId":"7853","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnonymousInnerClassMethodsNotIncluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/05/f391136959d9d6cf56fe08c0bd0038a76b4b4d.src","preCode":"    public void testAnonymousInnerClassMethodsNotIncluded() throws Exception {\n        if (HeadlessTestSupport.isHeadless()) {\n            return;\n        }\n        List<String> srcList = new ArrayList<String>();\n        srcList.add(\"groovy/swing/binding/AbstractButtonProperties.java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String abstractButtonPropertiesDoc = output.getText(MOCK_DIR + \"/groovy/swing/binding/AbstractButtonProperties.html\");\n        assertTrue(abstractButtonPropertiesDoc.indexOf(\"createBinding\") < 0);\n    }\n","realPath":"subprojects/groovy-groovydoc/src/test/groovy/org/codehaus/groovy/tools/groovydoc/GroovyDocToolTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"B"}],"commitId":"dc83a64b196fc77c1e8b276e3037aca6af65924e","commitMessage":"@@@add groovy-xml module\n","date":"2012-01-07 15:06:07","modifiedFileCount":"3","status":"B","submitter":"Paul King"},{"authorTime":"2012-03-07 19:46:17","codes":[{"authorDate":"2012-03-07 19:46:17","commitOrder":2,"curCode":"    public void testPackageName() throws Exception {\n        List<String> srcList = new ArrayList<String>();\n        String base = \"groovy/xml/DOMBuilder\";\n        srcList.add(base + \".java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String domBuilderDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\");\n        assertNotNull(\"No GroovyDoc found for \" + base, domBuilderDoc);\n        assertTrue(domBuilderDoc.contains(\"<containingPackage name=\\\"groovy/xml\\\">groovy.xml</containingPackage>\"));\n    }\n","date":"2012-03-07 19:46:17","endLine":177,"groupId":"7417","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPackageName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/66/5236f9e5aa1e3177c29fc11518eb0bf86037bd.src","preCode":"    public void testPackageName() throws Exception {\n        List<String> srcList = new ArrayList<String>();\n        srcList.add(\"groovy/xml/DOMBuilder.java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n\n        String domBuilderDoc = output.getText(MOCK_DIR + \"/groovy/xml/DOMBuilder.html\");\n        assertTrue(domBuilderDoc.indexOf(\"<containingPackage name=\\\"groovy/xml\\\">groovy.xml</containingPackage>\") > 0);\n    }\n","realPath":"subprojects/groovy-groovydoc/src/test/groovy/org/codehaus/groovy/tools/groovydoc/GroovyDocToolTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2012-03-07 19:46:17","commitOrder":2,"curCode":"    public void testAnonymousInnerClassMethodsNotIncluded() throws Exception {\n        if (HeadlessTestSupport.isHeadless()) {\n            return;\n        }\n        List<String> srcList = new ArrayList<String>();\n        String base = \"groovy/swing/binding/AbstractButtonProperties\";\n        srcList.add(base + \".java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String abstractButtonPropertiesDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\");\n        assertNotNull(\"No GroovyDoc found for \" + base, abstractButtonPropertiesDoc);\n        assertTrue(\"createBinding found in: \\\"\" + abstractButtonPropertiesDoc + \"\\\"\", !abstractButtonPropertiesDoc.contains(\"createBinding\"));\n    }\n","date":"2012-03-07 19:46:17","endLine":303,"groupId":"7417","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnonymousInnerClassMethodsNotIncluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/66/5236f9e5aa1e3177c29fc11518eb0bf86037bd.src","preCode":"    public void testAnonymousInnerClassMethodsNotIncluded() throws Exception {\n        if (HeadlessTestSupport.isHeadless()) {\n            return;\n        }\n        List<String> srcList = new ArrayList<String>();\n        srcList.add(\"groovy/swing/binding/AbstractButtonProperties.java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String abstractButtonPropertiesDoc = output.getText(MOCK_DIR + \"/groovy/swing/binding/AbstractButtonProperties.html\");\n        assertTrue(abstractButtonPropertiesDoc.indexOf(\"createBinding\") < 0);\n    }\n","realPath":"subprojects/groovy-groovydoc/src/test/groovy/org/codehaus/groovy/tools/groovydoc/GroovyDocToolTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"}],"commitId":"d683a86c4bf34a65420a04751cc810211f311710","commitMessage":"@@@fix groovydoc tests (1 still broken)\n","date":"2012-03-07 19:46:17","modifiedFileCount":"5","status":"M","submitter":"Paul King"},{"authorTime":"2012-03-07 19:46:17","codes":[{"authorDate":"2013-08-26 04:44:40","commitOrder":3,"curCode":"    public void testPackageName() throws Exception {\n        List<String> srcList = new ArrayList<String>();\n        String base = \"org/codehaus/groovy/tools/groovydoc/testfiles/Builder\";\n        srcList.add(base + \".java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String builderDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\");\n        assertNotNull(\"No GroovyDoc found for \" + base, builderDoc);\n        assertTrue(builderDoc.contains(\"<containingPackage name=\\\"org/codehaus/groovy/tools/groovydoc/testfiles\\\">org.codehaus.groovy.tools.groovydoc.testfiles</containingPackage>\"));\n    }\n","date":"2013-08-26 04:44:40","endLine":199,"groupId":"7417","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPackageName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/9d/37183f9a861388abf15e35b3d9d9170e0f8c65.src","preCode":"    public void testPackageName() throws Exception {\n        List<String> srcList = new ArrayList<String>();\n        String base = \"groovy/xml/DOMBuilder\";\n        srcList.add(base + \".java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String domBuilderDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\");\n        assertNotNull(\"No GroovyDoc found for \" + base, domBuilderDoc);\n        assertTrue(domBuilderDoc.contains(\"<containingPackage name=\\\"groovy/xml\\\">groovy.xml</containingPackage>\"));\n    }\n","realPath":"subprojects/groovy-groovydoc/src/test/groovy/org/codehaus/groovy/tools/groovydoc/GroovyDocToolTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"},{"authorDate":"2012-03-07 19:46:17","commitOrder":3,"curCode":"    public void testAnonymousInnerClassMethodsNotIncluded() throws Exception {\n        if (HeadlessTestSupport.isHeadless()) {\n            return;\n        }\n        List<String> srcList = new ArrayList<String>();\n        String base = \"groovy/swing/binding/AbstractButtonProperties\";\n        srcList.add(base + \".java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String abstractButtonPropertiesDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\");\n        assertNotNull(\"No GroovyDoc found for \" + base, abstractButtonPropertiesDoc);\n        assertTrue(\"createBinding found in: \\\"\" + abstractButtonPropertiesDoc + \"\\\"\", !abstractButtonPropertiesDoc.contains(\"createBinding\"));\n    }\n","date":"2012-03-07 19:46:17","endLine":303,"groupId":"7417","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnonymousInnerClassMethodsNotIncluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/66/5236f9e5aa1e3177c29fc11518eb0bf86037bd.src","preCode":"    public void testAnonymousInnerClassMethodsNotIncluded() throws Exception {\n        if (HeadlessTestSupport.isHeadless()) {\n            return;\n        }\n        List<String> srcList = new ArrayList<String>();\n        String base = \"groovy/swing/binding/AbstractButtonProperties\";\n        srcList.add(base + \".java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String abstractButtonPropertiesDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\");\n        assertNotNull(\"No GroovyDoc found for \" + base, abstractButtonPropertiesDoc);\n        assertTrue(\"createBinding found in: \\\"\" + abstractButtonPropertiesDoc + \"\\\"\", !abstractButtonPropertiesDoc.contains(\"createBinding\"));\n    }\n","realPath":"subprojects/groovy-groovydoc/src/test/groovy/org/codehaus/groovy/tools/groovydoc/GroovyDocToolTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"N"}],"commitId":"e3763389f63bafb0693c0d037890fba2920096c9","commitMessage":"@@@Removed dependency on groovy-xml subproject.\n","date":"2013-08-26 04:44:40","modifiedFileCount":"1","status":"M","submitter":"PascalSchumacher"},{"authorTime":"2013-09-23 01:04:26","codes":[{"authorDate":"2013-08-26 04:44:40","commitOrder":4,"curCode":"    public void testPackageName() throws Exception {\n        List<String> srcList = new ArrayList<String>();\n        String base = \"org/codehaus/groovy/tools/groovydoc/testfiles/Builder\";\n        srcList.add(base + \".java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String builderDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\");\n        assertNotNull(\"No GroovyDoc found for \" + base, builderDoc);\n        assertTrue(builderDoc.contains(\"<containingPackage name=\\\"org/codehaus/groovy/tools/groovydoc/testfiles\\\">org.codehaus.groovy.tools.groovydoc.testfiles</containingPackage>\"));\n    }\n","date":"2013-08-26 04:44:40","endLine":199,"groupId":"1069","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testPackageName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/9d/37183f9a861388abf15e35b3d9d9170e0f8c65.src","preCode":"    public void testPackageName() throws Exception {\n        List<String> srcList = new ArrayList<String>();\n        String base = \"org/codehaus/groovy/tools/groovydoc/testfiles/Builder\";\n        srcList.add(base + \".java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String builderDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\");\n        assertNotNull(\"No GroovyDoc found for \" + base, builderDoc);\n        assertTrue(builderDoc.contains(\"<containingPackage name=\\\"org/codehaus/groovy/tools/groovydoc/testfiles\\\">org.codehaus.groovy.tools.groovydoc.testfiles</containingPackage>\"));\n    }\n","realPath":"subprojects/groovy-groovydoc/src/test/groovy/org/codehaus/groovy/tools/groovydoc/GroovyDocToolTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"N"},{"authorDate":"2013-09-23 01:04:26","commitOrder":4,"curCode":"    public void testAnonymousInnerClassMethodsNotIncluded() throws Exception {\n        List<String> srcList = new ArrayList<String>();\n        String base = \"org/codehaus/groovy/tools/groovydoc/testfiles/ClassWithAnonymousInnerClass\";\n        srcList.add(base + \".java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String classWithAnonymousInnerClassDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\");\n        assertNotNull(\"No GroovyDoc found for \" + base, classWithAnonymousInnerClassDoc);\n        assertTrue(\"innerClassMethod found in: \\\"\" + classWithAnonymousInnerClassDoc + \"\\\"\", !classWithAnonymousInnerClassDoc.contains(\"innerClassMethod\"));\n    }\n","date":"2013-09-23 01:04:26","endLine":309,"groupId":"1069","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnonymousInnerClassMethodsNotIncluded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/40/6cfd3b2c90b84d219c48d210de995cbf856200.src","preCode":"    public void testAnonymousInnerClassMethodsNotIncluded() throws Exception {\n        if (HeadlessTestSupport.isHeadless()) {\n            return;\n        }\n        List<String> srcList = new ArrayList<String>();\n        String base = \"groovy/swing/binding/AbstractButtonProperties\";\n        srcList.add(base + \".java\");\n        xmlTool.add(srcList);\n        MockOutputTool output = new MockOutputTool();\n        xmlTool.renderToOutput(output, MOCK_DIR);\n        String abstractButtonPropertiesDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\");\n        assertNotNull(\"No GroovyDoc found for \" + base, abstractButtonPropertiesDoc);\n        assertTrue(\"createBinding found in: \\\"\" + abstractButtonPropertiesDoc + \"\\\"\", !abstractButtonPropertiesDoc.contains(\"createBinding\"));\n    }\n","realPath":"subprojects/groovy-groovydoc/src/test/groovy/org/codehaus/groovy/tools/groovydoc/GroovyDocToolTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":299,"status":"M"}],"commitId":"8ee6e5efa8887ce460ff4aa60a5691361a38bd19","commitMessage":"@@@remove dependency on other subprojects\n","date":"2013-09-23 01:04:26","modifiedFileCount":"1","status":"M","submitter":"PascalSchumacher"}]
