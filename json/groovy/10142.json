[{"authorTime":"2020-10-29 07:29:34","codes":[{"authorDate":"2020-10-29 07:29:34","commitOrder":1,"curCode":"    public <U> Queryable<Tuple2<T, U>> innerJoin(Queryable<? extends U> queryable, BiPredicate<? super T, ? super U> joiner) {\n        if (queryable instanceof QueryableCollection) {\n            ((QueryableCollection) queryable).setReusable();\n        }\n\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p ->\n                                queryable.stream()\n                                        .filter(c -> joiner.test(p, c))\n                                        .map(c -> Tuple.tuple(p, c)));\n\n        return from(stream);\n    }\n","date":"2020-11-06 05:40:29","endLine":83,"groupId":"7373","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"innerJoin","params":"(Queryable<?extendsU>queryable@BiPredicate<?superT@?superU>joiner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/51/10ff89549a1b1e64ef07bf6a67ab129f5900d2.src","preCode":"    public <U> Queryable<Tuple2<T, U>> innerJoin(Queryable<? extends U> queryable, BiPredicate<? super T, ? super U> joiner) {\n        if (queryable instanceof QueryableCollection) {\n            ((QueryableCollection) queryable).setReusable();\n        }\n\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p ->\n                                queryable.stream()\n                                        .filter(c -> joiner.test(p, c))\n                                        .map(c -> Tuple.tuple(p, c)));\n\n        return from(stream);\n    }\n","realPath":"subprojects/groovy-ginq/src/main/groovy/org/apache/groovy/ginq/provider/collection/runtime/QueryableCollection.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2020-10-29 07:29:34","commitOrder":1,"curCode":"    public <U> Queryable<Tuple2<T, U>> crossJoin(Queryable<? extends U> queryable) {\n        if (queryable instanceof QueryableCollection) {\n            ((QueryableCollection) queryable).setReusable();\n        }\n\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p ->\n                                queryable.stream()\n                                        .map(c -> Tuple.tuple(p, c)));\n\n        return from(stream);\n    }\n","date":"2020-11-06 05:40:29","endLine":116,"groupId":"7373","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"crossJoin","params":"(Queryable<?extendsU>queryable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/51/10ff89549a1b1e64ef07bf6a67ab129f5900d2.src","preCode":"    public <U> Queryable<Tuple2<T, U>> crossJoin(Queryable<? extends U> queryable) {\n        if (queryable instanceof QueryableCollection) {\n            ((QueryableCollection) queryable).setReusable();\n        }\n\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p ->\n                                queryable.stream()\n                                        .map(c -> Tuple.tuple(p, c)));\n\n        return from(stream);\n    }\n","realPath":"subprojects/groovy-ginq/src/main/groovy/org/apache/groovy/ginq/provider/collection/runtime/QueryableCollection.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"}],"commitId":"3f3ec50faa6813c2cae9441c819788810bb17a7f","commitMessage":"@@@GROOVY-8258: [GEP] Create a LINQ-like DSL\n","date":"2020-11-06 05:40:29","modifiedFileCount":"1","status":"B","submitter":"Daniel Sun"},{"authorTime":"2020-11-21 21:34:30","codes":[{"authorDate":"2020-11-21 21:34:30","commitOrder":2,"curCode":"    public <U> Queryable<Tuple2<T, U>> innerJoin(Queryable<? extends U> queryable, BiPredicate<? super T, ? super U> joiner) {\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p -> {\n                            if (queryable instanceof QueryableCollection) {\n                                ((QueryableCollection) queryable).makeReusable();\n                            }\n\n                            return queryable.stream()\n                                    .filter(c -> joiner.test(p, c))\n                                    .map(c -> Tuple.tuple(p, c));\n                        });\n\n        return from(stream);\n    }\n","date":"2020-11-21 21:34:30","endLine":85,"groupId":"2918","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"innerJoin","params":"(Queryable<?extendsU>queryable@BiPredicate<?superT@?superU>joiner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/ad/098930d547a3f2226e1d3d9adc5518b88ab853.src","preCode":"    public <U> Queryable<Tuple2<T, U>> innerJoin(Queryable<? extends U> queryable, BiPredicate<? super T, ? super U> joiner) {\n        if (queryable instanceof QueryableCollection) {\n            ((QueryableCollection) queryable).setReusable();\n        }\n\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p ->\n                                queryable.stream()\n                                        .filter(c -> joiner.test(p, c))\n                                        .map(c -> Tuple.tuple(p, c)));\n\n        return from(stream);\n    }\n","realPath":"subprojects/groovy-ginq/src/main/groovy/org/apache/groovy/ginq/provider/collection/runtime/QueryableCollection.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2020-11-21 21:34:30","commitOrder":2,"curCode":"    public <U> Queryable<Tuple2<T, U>> crossJoin(Queryable<? extends U> queryable) {\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p -> {\n                            if (queryable instanceof QueryableCollection) {\n                                ((QueryableCollection) queryable).makeReusable();\n                            }\n\n                            return queryable.stream()\n                                    .map(c -> Tuple.tuple(p, c));\n                        });\n\n        return from(stream);\n    }\n","date":"2020-11-21 21:34:30","endLine":111,"groupId":"2918","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"crossJoin","params":"(Queryable<?extendsU>queryable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/ad/098930d547a3f2226e1d3d9adc5518b88ab853.src","preCode":"    public <U> Queryable<Tuple2<T, U>> crossJoin(Queryable<? extends U> queryable) {\n        if (queryable instanceof QueryableCollection) {\n            ((QueryableCollection) queryable).setReusable();\n        }\n\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p ->\n                                queryable.stream()\n                                        .map(c -> Tuple.tuple(p, c)));\n\n        return from(stream);\n    }\n","realPath":"subprojects/groovy-ginq/src/main/groovy/org/apache/groovy/ginq/provider/collection/runtime/QueryableCollection.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"ef2e930d7c598eaf1921dfe23cfb7c919da90984","commitMessage":"@@@Minor tweak: make GINQ as lazy as possible\n","date":"2020-11-21 21:34:30","modifiedFileCount":"1","status":"M","submitter":"Daniel Sun"},{"authorTime":"2020-11-21 21:44:41","codes":[{"authorDate":"2020-11-21 21:44:41","commitOrder":3,"curCode":"    public <U> Queryable<Tuple2<T, U>> innerJoin(Queryable<? extends U> queryable, BiPredicate<? super T, ? super U> joiner) {\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p -> {\n                            if (queryable instanceof QueryableCollection) {\n                                ((QueryableCollection) queryable).makeReusable();\n                            }\n\n                            return queryable.stream()\n                                    .filter(c -> joiner.test(p, c))\n                                    .map(c -> tuple(p, c));\n                        });\n\n        return from(stream);\n    }\n","date":"2020-11-21 21:44:41","endLine":85,"groupId":"10142","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"innerJoin","params":"(Queryable<?extendsU>queryable@BiPredicate<?superT@?superU>joiner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/5b/356e33fc07416698654e6f89a1e705354894aa.src","preCode":"    public <U> Queryable<Tuple2<T, U>> innerJoin(Queryable<? extends U> queryable, BiPredicate<? super T, ? super U> joiner) {\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p -> {\n                            if (queryable instanceof QueryableCollection) {\n                                ((QueryableCollection) queryable).makeReusable();\n                            }\n\n                            return queryable.stream()\n                                    .filter(c -> joiner.test(p, c))\n                                    .map(c -> Tuple.tuple(p, c));\n                        });\n\n        return from(stream);\n    }\n","realPath":"subprojects/groovy-ginq/src/main/groovy/org/apache/groovy/ginq/provider/collection/runtime/QueryableCollection.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2020-11-21 21:44:41","commitOrder":3,"curCode":"    public <U> Queryable<Tuple2<T, U>> crossJoin(Queryable<? extends U> queryable) {\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p -> {\n                            if (queryable instanceof QueryableCollection) {\n                                ((QueryableCollection) queryable).makeReusable();\n                            }\n\n                            return queryable.stream()\n                                    .map(c -> tuple(p, c));\n                        });\n\n        return from(stream);\n    }\n","date":"2020-11-21 21:44:41","endLine":111,"groupId":"10142","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"crossJoin","params":"(Queryable<?extendsU>queryable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/5b/356e33fc07416698654e6f89a1e705354894aa.src","preCode":"    public <U> Queryable<Tuple2<T, U>> crossJoin(Queryable<? extends U> queryable) {\n        Stream<Tuple2<T, U>> stream =\n                this.stream()\n                        .flatMap(p -> {\n                            if (queryable instanceof QueryableCollection) {\n                                ((QueryableCollection) queryable).makeReusable();\n                            }\n\n                            return queryable.stream()\n                                    .map(c -> Tuple.tuple(p, c));\n                        });\n\n        return from(stream);\n    }\n","realPath":"subprojects/groovy-ginq/src/main/groovy/org/apache/groovy/ginq/provider/collection/runtime/QueryableCollection.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"3f44b8950e4f6c99b0fa64ea037c10026644d74f","commitMessage":"@@@Trivial refactoring: inline redundant method\n","date":"2020-11-21 21:44:41","modifiedFileCount":"1","status":"M","submitter":"Daniel Sun"}]
