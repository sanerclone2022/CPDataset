[{"authorTime":"2019-05-15 21:33:52","codes":[{"authorDate":"2019-05-15 21:33:52","commitOrder":1,"curCode":"    public static Iterator iterator(final TableModel self) {\n        return new Iterator() {\n            private int row = 0;\n\n            public boolean hasNext() {\n                return row < self.getRowCount();\n            }\n\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException(\"TableModel is immutable.\");\n            }\n        };\n    }\n","date":"2019-05-15 21:33:52","endLine":449,"groupId":"6028","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"iterator","params":"(finalTableModelself)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/2a/4da3d639309e082d877f9fcca69f3a2900f834.src","preCode":"    public static Iterator iterator(final TableModel self) {\n        return new Iterator() {\n            private int row = 0;\n\n            public boolean hasNext() {\n                return row < self.getRowCount();\n            }\n\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException(\"TableModel is immutable.\");\n            }\n        };\n    }\n","realPath":"subprojects/groovy-swing/src/main/java/org/apache/groovy/swing/extensions/SwingExtensions.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":427,"status":"B"},{"authorDate":"2019-05-15 21:33:52","commitOrder":1,"curCode":"    public static Iterator iterator(final DefaultTableModel self) {\n        return new Iterator() {\n            private int row = 0;\n\n            public boolean hasNext() {\n                return row > -1 && row < self.getRowCount();\n            }\n\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            public void remove() {\n                if (hasNext()) self.removeRow(row--);\n            }\n        };\n    }\n","date":"2019-05-15 21:33:52","endLine":535,"groupId":"6028","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"iterator","params":"(finalDefaultTableModelself)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/2a/4da3d639309e082d877f9fcca69f3a2900f834.src","preCode":"    public static Iterator iterator(final DefaultTableModel self) {\n        return new Iterator() {\n            private int row = 0;\n\n            public boolean hasNext() {\n                return row > -1 && row < self.getRowCount();\n            }\n\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            public void remove() {\n                if (hasNext()) self.removeRow(row--);\n            }\n        };\n    }\n","realPath":"subprojects/groovy-swing/src/main/java/org/apache/groovy/swing/extensions/SwingExtensions.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":513,"status":"B"}],"commitId":"6f2a368ae02ee65005e4dd25e94242919007e66e","commitMessage":"@@@GROOVY-8647: Split package renaming (groovy-swing)\n","date":"2019-05-15 21:33:52","modifiedFileCount":"1","status":"B","submitter":"Paul King"},{"authorTime":"2020-02-08 12:55:27","codes":[{"authorDate":"2020-02-08 12:55:27","commitOrder":2,"curCode":"    public static Iterator<?> iterator(final TableModel self) {\n        return new Iterator<Object>() {\n            private int row = 0;\n\n            public boolean hasNext() {\n                return row < self.getRowCount();\n            }\n\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException(\"TableModel is immutable.\");\n            }\n        };\n    }\n","date":"2020-02-08 12:55:27","endLine":449,"groupId":"6028","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"iterator","params":"(finalTableModelself)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/18/a1a4c2e6eccb529d4846dea386b7eb120402cf.src","preCode":"    public static Iterator iterator(final TableModel self) {\n        return new Iterator() {\n            private int row = 0;\n\n            public boolean hasNext() {\n                return row < self.getRowCount();\n            }\n\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException(\"TableModel is immutable.\");\n            }\n        };\n    }\n","realPath":"subprojects/groovy-swing/src/main/java/org/apache/groovy/swing/extensions/SwingExtensions.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":427,"status":"M"},{"authorDate":"2020-02-08 12:55:27","commitOrder":2,"curCode":"    public static Iterator<?> iterator(final DefaultTableModel self) {\n        return new Iterator<Object>() {\n            private int row = 0;\n\n            public boolean hasNext() {\n                return row > -1 && row < self.getRowCount();\n            }\n\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            public void remove() {\n                if (hasNext()) self.removeRow(row--);\n            }\n        };\n    }\n","date":"2020-02-08 12:55:27","endLine":535,"groupId":"6028","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"iterator","params":"(finalDefaultTableModelself)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/18/a1a4c2e6eccb529d4846dea386b7eb120402cf.src","preCode":"    public static Iterator iterator(final DefaultTableModel self) {\n        return new Iterator() {\n            private int row = 0;\n\n            public boolean hasNext() {\n                return row > -1 && row < self.getRowCount();\n            }\n\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            public void remove() {\n                if (hasNext()) self.removeRow(row--);\n            }\n        };\n    }\n","realPath":"subprojects/groovy-swing/src/main/java/org/apache/groovy/swing/extensions/SwingExtensions.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":513,"status":"M"}],"commitId":"724cc0da8aa177189b9c63826e9612f78adc353d","commitMessage":"@@@remove Xlint warnings\n","date":"2020-02-08 12:55:27","modifiedFileCount":"5","status":"M","submitter":"Paul King"},{"authorTime":"2020-10-01 03:22:05","codes":[{"authorDate":"2020-10-01 03:22:05","commitOrder":3,"curCode":"    public static Iterator<?> iterator(final TableModel self) {\n        return new Iterator<Object>() {\n            private int row = 0;\n\n            @Override\n            public boolean hasNext() {\n                return row < self.getRowCount();\n            }\n\n            @Override\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            @Override\n            public void remove() {\n                throw new UnsupportedOperationException(\"TableModel is immutable.\");\n            }\n        };\n    }\n","date":"2020-10-01 03:22:05","endLine":461,"groupId":"11132","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"iterator","params":"(finalTableModelself)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/66/a7cea5ea9380d5c9c92b1dc1f01658479ea12f.src","preCode":"    public static Iterator<?> iterator(final TableModel self) {\n        return new Iterator<Object>() {\n            private int row = 0;\n\n            public boolean hasNext() {\n                return row < self.getRowCount();\n            }\n\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            public void remove() {\n                throw new UnsupportedOperationException(\"TableModel is immutable.\");\n            }\n        };\n    }\n","realPath":"subprojects/groovy-swing/src/main/java/org/apache/groovy/swing/extensions/SwingExtensions.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":436,"status":"M"},{"authorDate":"2020-10-01 03:22:05","commitOrder":3,"curCode":"    public static Iterator<?> iterator(final DefaultTableModel self) {\n        return new Iterator<Object>() {\n            private int row = 0;\n\n            @Override\n            public boolean hasNext() {\n                return row > -1 && row < self.getRowCount();\n            }\n\n            @Override\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            @Override\n            public void remove() {\n                if (hasNext()) self.removeRow(row--);\n            }\n        };\n    }\n","date":"2020-10-01 03:22:05","endLine":550,"groupId":"11132","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"iterator","params":"(finalDefaultTableModelself)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/66/a7cea5ea9380d5c9c92b1dc1f01658479ea12f.src","preCode":"    public static Iterator<?> iterator(final DefaultTableModel self) {\n        return new Iterator<Object>() {\n            private int row = 0;\n\n            public boolean hasNext() {\n                return row > -1 && row < self.getRowCount();\n            }\n\n            public Object next() {\n                int cols = self.getColumnCount();\n                Object[] rowData = new Object[cols];\n                for (int col = 0; col < cols; col++) {\n                    rowData[col] = self.getValueAt(row, col);\n                }\n                row++;\n                return rowData;\n            }\n\n            public void remove() {\n                if (hasNext()) self.removeRow(row--);\n            }\n        };\n    }\n","realPath":"subprojects/groovy-swing/src/main/java/org/apache/groovy/swing/extensions/SwingExtensions.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":525,"status":"M"}],"commitId":"5744d6ed8de9a44024ad6881dcf4e2bbd7dff9ba","commitMessage":"@@@add missing @Override annotations\n","date":"2020-10-01 03:22:05","modifiedFileCount":"512","status":"M","submitter":"Paul King"}]
