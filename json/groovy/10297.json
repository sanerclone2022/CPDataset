[{"authorTime":"2018-03-01 23:20:54","codes":[{"authorDate":"2017-12-10 01:57:33","commitOrder":2,"curCode":"    public void getAndPut() {\n        CommonCache<String, String> sc = new CommonCache<>();\n\n        EvictableCache.ValueProvider vp =\n                new EvictableCache.ValueProvider<String, String>() {\n            @Override\n            public String provide(String key) {\n                return \"Chinese\";\n            }\n        };\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp,false));\n        Assert.assertNull(sc.get(\"language\"));\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp));\n        Assert.assertEquals(\"Chinese\", sc.get(\"language\"));\n    }\n","date":"2017-12-10 01:57:33","endLine":74,"groupId":"7166","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAndPut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/9b/bb08b6caf32451b0b8cec7408881494034cb4f.src","preCode":"    public void getAndPut() {\n        CommonCache<String, String> sc = new CommonCache<>();\n\n        EvictableCache.ValueProvider vp =\n                new EvictableCache.ValueProvider<String, String>() {\n            @Override\n            public String provide(String key) {\n                return \"Chinese\";\n            }\n        };\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp,false));\n        Assert.assertNull(sc.get(\"language\"));\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp));\n        Assert.assertEquals(\"Chinese\", sc.get(\"language\"));\n    }\n","realPath":"src/test/org/codehaus/groovy/runtime/memoize/CommonCacheTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"NB"},{"authorDate":"2018-03-01 23:20:54","commitOrder":2,"curCode":"    public void getAndPut() {\n        UnlimitedConcurrentCache<String, String> sc = new UnlimitedConcurrentCache<>();\n\n        EvictableCache.ValueProvider vp =\n                new EvictableCache.ValueProvider<String, String>() {\n            @Override\n            public String provide(String key) {\n                return \"Chinese\";\n            }\n        };\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp));\n        Assert.assertEquals(\"Chinese\", sc.get(\"language\"));\n    }\n","date":"2018-03-01 23:20:54","endLine":74,"groupId":"7166","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getAndPut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/1e/407e8060e985143a9aee86de4bbd2fd68c560f.src","preCode":"    public void getAndPut() {\n        UnlimitedConcurrentCache<String, String> sc = new UnlimitedConcurrentCache<>();\n\n        EvictableCache.ValueProvider vp =\n                new EvictableCache.ValueProvider<String, String>() {\n            @Override\n            public String provide(String key) {\n                return \"Chinese\";\n            }\n        };\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp));\n        Assert.assertEquals(\"Chinese\", sc.get(\"language\"));\n    }\n","realPath":"src/test/org/codehaus/groovy/runtime/memoize/UnlimitedConcurrentCacheTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"94bba38456f71c77c95284b8b9aa6d295cc695b4","commitMessage":"@@@Make `UnlimitedConcurrentCache` implement `EvictableCache`\n","date":"2018-03-01 23:20:54","modifiedFileCount":"1","status":"M","submitter":"danielsun1106"},{"authorTime":"2019-11-04 14:43:05","codes":[{"authorDate":"2019-11-04 14:43:05","commitOrder":3,"curCode":"    public void getAndPut() {\n        CommonCache<String, String> sc = new CommonCache<>();\n\n        EvictableCache.ValueProvider vp =\n                (EvictableCache.ValueProvider<String, String>) key -> \"Chinese\";\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp,false));\n        Assert.assertNull(sc.get(\"language\"));\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp));\n        Assert.assertEquals(\"Chinese\", sc.get(\"language\"));\n    }\n","date":"2019-11-04 15:32:36","endLine":70,"groupId":"10297","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getAndPut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/b7/ed91a555efcda51f95cf661b9fc14981d16f30.src","preCode":"    public void getAndPut() {\n        CommonCache<String, String> sc = new CommonCache<>();\n\n        EvictableCache.ValueProvider vp =\n                new EvictableCache.ValueProvider<String, String>() {\n                    @Override\n                    public String provide(String key) {\n                        return \"Chinese\";\n                    }\n                };\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp,false));\n        Assert.assertNull(sc.get(\"language\"));\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp));\n        Assert.assertEquals(\"Chinese\", sc.get(\"language\"));\n    }\n","realPath":"src/test/org/codehaus/groovy/runtime/memoize/CommonCacheTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2019-11-04 14:43:05","commitOrder":3,"curCode":"    public void getAndPut() {\n        UnlimitedConcurrentCache<String, String> sc = new UnlimitedConcurrentCache<>();\n\n        EvictableCache.ValueProvider vp =\n                (EvictableCache.ValueProvider<String, String>) key -> \"Chinese\";\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp));\n        Assert.assertEquals(\"Chinese\", sc.get(\"language\"));\n    }\n","date":"2019-11-04 15:32:36","endLine":69,"groupId":"10297","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getAndPut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/ab/5d4ad9a6a696e3f1b55281390be051e6025128.src","preCode":"    public void getAndPut() {\n        UnlimitedConcurrentCache<String, String> sc = new UnlimitedConcurrentCache<>();\n\n        EvictableCache.ValueProvider vp =\n                new EvictableCache.ValueProvider<String, String>() {\n            @Override\n            public String provide(String key) {\n                return \"Chinese\";\n            }\n        };\n\n        Assert.assertEquals(\"Chinese\", sc.getAndPut(\"language\", vp));\n        Assert.assertEquals(\"Chinese\", sc.get(\"language\"));\n    }\n","realPath":"src/test/org/codehaus/groovy/runtime/memoize/UnlimitedConcurrentCacheTest.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"d070a91a635b4f0d8ed88211b954f1df984eaa5d","commitMessage":"@@@Refactor code\n\nRefactored some code about new java version and some performance issue.\nbut i'm not sure. Is the file I am modifying correct?\n\n--Make a contribution to groovy every day.\n","date":"2019-11-04 15:32:36","modifiedFileCount":"10","status":"M","submitter":"mattisonchao"}]
