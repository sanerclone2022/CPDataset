[{"authorTime":"2019-05-19 17:04:42","codes":[{"authorDate":"2019-05-19 17:04:42","commitOrder":1,"curCode":"    public From getFrom() {\n        return new From() {\n            public Date getNow() {\n                final Calendar cal = Calendar.getInstance();\n\n                cal.add(Calendar.DAY_OF_YEAR, TimeDuration.this.getDays());\n                cal.add(Calendar.HOUR_OF_DAY, TimeDuration.this.getHours());\n                cal.add(Calendar.MINUTE, TimeDuration.this.getMinutes());\n                cal.add(Calendar.SECOND, TimeDuration.this.getSeconds());\n                cal.add(Calendar.MILLISECOND, TimeDuration.this.getMillis());\n                \n                return cal.getTime();\n            }\n        };\n    }\n","date":"2019-05-19 17:04:42","endLine":99,"groupId":"9717","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getFrom","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/46/e15b7ac8cfba2ccec9af60b32791ca2917d8c6.src","preCode":"    public From getFrom() {\n        return new From() {\n            public Date getNow() {\n                final Calendar cal = Calendar.getInstance();\n\n                cal.add(Calendar.DAY_OF_YEAR, TimeDuration.this.getDays());\n                cal.add(Calendar.HOUR_OF_DAY, TimeDuration.this.getHours());\n                cal.add(Calendar.MINUTE, TimeDuration.this.getMinutes());\n                cal.add(Calendar.SECOND, TimeDuration.this.getSeconds());\n                cal.add(Calendar.MILLISECOND, TimeDuration.this.getMillis());\n                \n                return cal.getTime();\n            }\n        };\n    }\n","realPath":"src/main/java/groovy/time/TimeDuration.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2019-05-19 17:04:42","commitOrder":1,"curCode":"    public From getFrom() {\n        return new From() {\n            public Date getNow() {\n                final Calendar cal = Calendar.getInstance();\n\n                cal.add(Calendar.YEAR, DatumDependentDuration.this.getYears());\n                cal.add(Calendar.MONTH, DatumDependentDuration.this.getMonths());\n                cal.add(Calendar.DAY_OF_YEAR, DatumDependentDuration.this.getDays());\n                cal.add(Calendar.HOUR_OF_DAY, DatumDependentDuration.this.getHours());\n                cal.add(Calendar.MINUTE, DatumDependentDuration.this.getMinutes());\n                cal.add(Calendar.SECOND, DatumDependentDuration.this.getSeconds());\n                cal.add(Calendar.MILLISECOND, DatumDependentDuration.this.getMillis());\n\n                cal.set(Calendar.HOUR_OF_DAY, 0);\n                cal.set(Calendar.MINUTE, 0);\n                cal.set(Calendar.SECOND, 0);\n                cal.set(Calendar.MILLISECOND, 0);\n\n                return new Date(cal.getTimeInMillis());\n            }\n        };\n    }\n","date":"2019-05-19 17:04:42","endLine":138,"groupId":"9717","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getFrom","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/a8/7cb6cd54a7b56a511409609588fd402ff2065b.src","preCode":"    public From getFrom() {\n        return new From() {\n            public Date getNow() {\n                final Calendar cal = Calendar.getInstance();\n\n                cal.add(Calendar.YEAR, DatumDependentDuration.this.getYears());\n                cal.add(Calendar.MONTH, DatumDependentDuration.this.getMonths());\n                cal.add(Calendar.DAY_OF_YEAR, DatumDependentDuration.this.getDays());\n                cal.add(Calendar.HOUR_OF_DAY, DatumDependentDuration.this.getHours());\n                cal.add(Calendar.MINUTE, DatumDependentDuration.this.getMinutes());\n                cal.add(Calendar.SECOND, DatumDependentDuration.this.getSeconds());\n                cal.add(Calendar.MILLISECOND, DatumDependentDuration.this.getMillis());\n\n                cal.set(Calendar.HOUR_OF_DAY, 0);\n                cal.set(Calendar.MINUTE, 0);\n                cal.set(Calendar.SECOND, 0);\n                cal.set(Calendar.MILLISECOND, 0);\n\n                return new Date(cal.getTimeInMillis());\n            }\n        };\n    }\n","realPath":"src/main/java/groovy/time/DatumDependentDuration.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"}],"commitId":"86f5c8216b5d0f042408bdc4ae5d6a7baa247c95","commitMessage":"@@@move some java files from src/main/groovy to src/main/java and fix up some Javadoc assertion tests that weren't running\n","date":"2019-05-19 17:04:42","modifiedFileCount":"0","status":"B","submitter":"Paul King"},{"authorTime":"2020-10-01 03:22:05","codes":[{"authorDate":"2020-10-01 03:22:05","commitOrder":2,"curCode":"    public From getFrom() {\n        return new From() {\n            @Override\n            public Date getNow() {\n                final Calendar cal = Calendar.getInstance();\n\n                cal.add(Calendar.DAY_OF_YEAR, TimeDuration.this.getDays());\n                cal.add(Calendar.HOUR_OF_DAY, TimeDuration.this.getHours());\n                cal.add(Calendar.MINUTE, TimeDuration.this.getMinutes());\n                cal.add(Calendar.SECOND, TimeDuration.this.getSeconds());\n                cal.add(Calendar.MILLISECOND, TimeDuration.this.getMillis());\n                \n                return cal.getTime();\n            }\n        };\n    }\n","date":"2020-10-01 03:22:05","endLine":106,"groupId":"10421","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getFrom","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/71/e741b23181a38ad789d03d7f5831811b536bb5.src","preCode":"    public From getFrom() {\n        return new From() {\n            public Date getNow() {\n                final Calendar cal = Calendar.getInstance();\n\n                cal.add(Calendar.DAY_OF_YEAR, TimeDuration.this.getDays());\n                cal.add(Calendar.HOUR_OF_DAY, TimeDuration.this.getHours());\n                cal.add(Calendar.MINUTE, TimeDuration.this.getMinutes());\n                cal.add(Calendar.SECOND, TimeDuration.this.getSeconds());\n                cal.add(Calendar.MILLISECOND, TimeDuration.this.getMillis());\n                \n                return cal.getTime();\n            }\n        };\n    }\n","realPath":"src/main/java/groovy/time/TimeDuration.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2020-10-01 03:22:05","commitOrder":2,"curCode":"    public From getFrom() {\n        return new From() {\n            @Override\n            public Date getNow() {\n                final Calendar cal = Calendar.getInstance();\n\n                cal.add(Calendar.YEAR, DatumDependentDuration.this.getYears());\n                cal.add(Calendar.MONTH, DatumDependentDuration.this.getMonths());\n                cal.add(Calendar.DAY_OF_YEAR, DatumDependentDuration.this.getDays());\n                cal.add(Calendar.HOUR_OF_DAY, DatumDependentDuration.this.getHours());\n                cal.add(Calendar.MINUTE, DatumDependentDuration.this.getMinutes());\n                cal.add(Calendar.SECOND, DatumDependentDuration.this.getSeconds());\n                cal.add(Calendar.MILLISECOND, DatumDependentDuration.this.getMillis());\n\n                cal.set(Calendar.HOUR_OF_DAY, 0);\n                cal.set(Calendar.MINUTE, 0);\n                cal.set(Calendar.SECOND, 0);\n                cal.set(Calendar.MILLISECOND, 0);\n\n                return new Date(cal.getTimeInMillis());\n            }\n        };\n    }\n","date":"2020-10-01 03:22:05","endLine":144,"groupId":"10421","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getFrom","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-groovy-10-0.7/blobInfo/CC_OUT/blobs/17/d3fc0c5fb0a848477727d076b8b08a2c239da2.src","preCode":"    public From getFrom() {\n        return new From() {\n            public Date getNow() {\n                final Calendar cal = Calendar.getInstance();\n\n                cal.add(Calendar.YEAR, DatumDependentDuration.this.getYears());\n                cal.add(Calendar.MONTH, DatumDependentDuration.this.getMonths());\n                cal.add(Calendar.DAY_OF_YEAR, DatumDependentDuration.this.getDays());\n                cal.add(Calendar.HOUR_OF_DAY, DatumDependentDuration.this.getHours());\n                cal.add(Calendar.MINUTE, DatumDependentDuration.this.getMinutes());\n                cal.add(Calendar.SECOND, DatumDependentDuration.this.getSeconds());\n                cal.add(Calendar.MILLISECOND, DatumDependentDuration.this.getMillis());\n\n                cal.set(Calendar.HOUR_OF_DAY, 0);\n                cal.set(Calendar.MINUTE, 0);\n                cal.set(Calendar.SECOND, 0);\n                cal.set(Calendar.MILLISECOND, 0);\n\n                return new Date(cal.getTimeInMillis());\n            }\n        };\n    }\n","realPath":"src/main/java/groovy/time/DatumDependentDuration.java","repoName":"groovy","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"5744d6ed8de9a44024ad6881dcf4e2bbd7dff9ba","commitMessage":"@@@add missing @Override annotations\n","date":"2020-10-01 03:22:05","modifiedFileCount":"512","status":"M","submitter":"Paul King"}]
