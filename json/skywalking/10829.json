[{"authorTime":"2021-02-07 10:37:14","codes":[{"authorDate":"2021-02-20 20:59:51","commitOrder":5,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n\n        postgresqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                StorageDAO.class,\n                new H2StorageDAO(\n                        getManager(), postgresqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n                INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(postgresqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new PostgreSQLMetricsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ITraceQueryDAO.class,\n                new PostgreSQLTraceQueryDAO(\n                        getManager(),\n                        postgresqlClient,\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new PostgreSQLBrowserLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IMetadataQueryDAO.class, new H2MetadataQueryDAO(postgresqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new PostgreSQLAggregationQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new PostgreSQLAlarmQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(postgresqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ILogQueryDAO.class,\n                new PostgreSQLLogQueryDAO(\n                        postgresqlClient,\n                        getManager(),\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(postgresqlClient));\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(postgresqlClient));\n    }\n","date":"2021-02-20 20:59:51","endLine":150,"groupId":"143","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/75/c69bc1d82e2f5e0dc737187f65bd1b490a920e.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n\n        postgresqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                StorageDAO.class,\n                new H2StorageDAO(\n                        getManager(), postgresqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n                INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(postgresqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new PostgreSQLMetricsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ITraceQueryDAO.class,\n                new PostgreSQLTraceQueryDAO(\n                        getManager(),\n                        postgresqlClient,\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new PostgreSQLBrowserLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IMetadataQueryDAO.class, new H2MetadataQueryDAO(postgresqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new PostgreSQLAggregationQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new PostgreSQLAlarmQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(postgresqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ILogQueryDAO.class,\n                new PostgreSQLLogQueryDAO(\n                        postgresqlClient,\n                        getManager(),\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(postgresqlClient));\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(postgresqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/postgresql/PostgreSQLStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"},{"authorDate":"2021-02-07 10:37:14","commitOrder":5,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n        \n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","date":"2021-02-07 10:37:14","endLine":156,"groupId":"143","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/0b/fc9d884ae20cff362e1e97be94df08f578063f.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n        \n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-tidb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/tidb/TiDBStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"NB"}],"commitId":"c45bb361ee150c4295dce7ef174c7d1eaa834a78","commitMessage":"@@@Storage plugin supports PostgreSQL (#6345)\n\n","date":"2021-02-20 20:59:51","modifiedFileCount":"3","status":"M","submitter":"haoyann"},{"authorTime":"2021-04-25 17:22:43","codes":[{"authorDate":"2021-04-25 17:22:43","commitOrder":6,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n\n        postgresqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                StorageDAO.class,\n                new H2StorageDAO(\n                        getManager(), postgresqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n                INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(postgresqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new PostgreSQLMetricsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ITraceQueryDAO.class,\n                new PostgreSQLTraceQueryDAO(\n                        getManager(),\n                        postgresqlClient,\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new PostgreSQLBrowserLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IMetadataQueryDAO.class, new H2MetadataQueryDAO(postgresqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new PostgreSQLAggregationQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new PostgreSQLAlarmQueryDAO(\n                postgresqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n        ));\n        this.registerServiceImplementation(\n                IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(postgresqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ILogQueryDAO.class,\n                new PostgreSQLLogQueryDAO(\n                        postgresqlClient,\n                        getManager(),\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(postgresqlClient));\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(postgresqlClient));\n    }\n","date":"2021-04-25 17:22:43","endLine":155,"groupId":"5208","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/52/800b332a81075ae9833de6c397e3ac8910bb62.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n\n        postgresqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                StorageDAO.class,\n                new H2StorageDAO(\n                        getManager(), postgresqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n                INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(postgresqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new PostgreSQLMetricsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ITraceQueryDAO.class,\n                new PostgreSQLTraceQueryDAO(\n                        getManager(),\n                        postgresqlClient,\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new PostgreSQLBrowserLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IMetadataQueryDAO.class, new H2MetadataQueryDAO(postgresqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new PostgreSQLAggregationQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new PostgreSQLAlarmQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(postgresqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ILogQueryDAO.class,\n                new PostgreSQLLogQueryDAO(\n                        postgresqlClient,\n                        getManager(),\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(postgresqlClient));\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(postgresqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/postgresql/PostgreSQLStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2021-04-25 17:22:43","commitOrder":6,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n        \n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","date":"2021-04-25 17:22:43","endLine":160,"groupId":"5208","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/05/d057cab79db1a0444b8f6ac035c7c485a9e675.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n        \n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-tidb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/tidb/TiDBStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"7a533313676579da1321c0177c10fc237a052cbe","commitMessage":"@@@Support alarm tags (#6820)\n\n","date":"2021-04-25 17:22:43","modifiedFileCount":"42","status":"M","submitter":"liqiangz"},{"authorTime":"2021-09-17 00:05:18","codes":[{"authorDate":"2021-09-17 00:05:18","commitOrder":7,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n\n        postgresqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(postgresqlClient, config.getMaxSizeOfBatchSql(), config.getAsyncBatchPersistentPoolSize()));\n        this.registerServiceImplementation(\n                StorageDAO.class,\n                new H2StorageDAO(\n                        getManager(), postgresqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n                INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(postgresqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new PostgreSQLMetricsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ITraceQueryDAO.class,\n                new PostgreSQLTraceQueryDAO(\n                        getManager(),\n                        postgresqlClient,\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new PostgreSQLBrowserLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IMetadataQueryDAO.class, new H2MetadataQueryDAO(postgresqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new PostgreSQLAggregationQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new PostgreSQLAlarmQueryDAO(\n                postgresqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n        ));\n        this.registerServiceImplementation(\n                IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(postgresqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ILogQueryDAO.class,\n                new PostgreSQLLogQueryDAO(\n                        postgresqlClient,\n                        getManager(),\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(postgresqlClient));\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(postgresqlClient));\n    }\n","date":"2021-09-17 00:05:18","endLine":155,"groupId":"10829","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/03/1f5105019f8d4e126d3ca7bf67adb7965a7e8b.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n\n        postgresqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                StorageDAO.class,\n                new H2StorageDAO(\n                        getManager(), postgresqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n                INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(postgresqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new PostgreSQLMetricsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ITraceQueryDAO.class,\n                new PostgreSQLTraceQueryDAO(\n                        getManager(),\n                        postgresqlClient,\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new PostgreSQLBrowserLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IMetadataQueryDAO.class, new H2MetadataQueryDAO(postgresqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new PostgreSQLAggregationQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new PostgreSQLAlarmQueryDAO(\n                postgresqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n        ));\n        this.registerServiceImplementation(\n                IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(postgresqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                ILogQueryDAO.class,\n                new PostgreSQLLogQueryDAO(\n                        postgresqlClient,\n                        getManager(),\n                        config.getMaxSizeOfArrayColumn(),\n                        config.getNumOfSearchableValuesPerTag()\n                )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(\n                IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(postgresqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(postgresqlClient));\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(postgresqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/postgresql/PostgreSQLStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2021-09-17 00:05:18","commitOrder":7,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n        \n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient, config.getMaxSizeOfBatchSql(), config.getAsyncBatchPersistentPoolSize()));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","date":"2021-09-17 00:05:18","endLine":160,"groupId":"10829","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/93/5ec7afd94eeeeb8a551555774a1dd2ed5ea404.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n        \n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-tidb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/tidb/TiDBStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"224b6c6b3a7f72ef02d4dca5f73b32c76767d08e","commitMessage":"@@@Improve the speed of writing TiDB by batching the SQL execution (#7691)\n\n","date":"2021-09-17 00:05:18","modifiedFileCount":"10","status":"M","submitter":"nicolchen"}]
