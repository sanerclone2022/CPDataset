[{"authorTime":"2021-02-06 21:22:58","codes":[{"authorDate":"2021-02-06 21:22:58","commitOrder":1,"curCode":"        public Map<String, Object> entity2Storage(ServiceInstanceRelationServerSideMetrics storageData) {\n            Map<String, Object> map = new HashMap<>();\n            map.put(ENTITY_ID, storageData.getEntityId());\n            map.put(SOURCE_SERVICE_ID, storageData.getSourceServiceId());\n            map.put(SOURCE_SERVICE_INSTANCE_ID, storageData.getSourceServiceInstanceId());\n            map.put(DEST_SERVICE_ID, storageData.getDestServiceId());\n            map.put(DEST_SERVICE_INSTANCE_ID, storageData.getDestServiceInstanceId());\n            map.put(COMPONENT_ID, storageData.getComponentId());\n            map.put(TIME_BUCKET, storageData.getTimeBucket());\n            return map;\n        }\n","date":"2021-02-06 21:22:58","endLine":175,"groupId":"4309","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"entity2Storage","params":"(ServiceInstanceRelationServerSideMetricsstorageData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/41/dcc5f9510895eca5fe10914e0a4b2f28927789.src","preCode":"        public Map<String, Object> entity2Storage(ServiceInstanceRelationServerSideMetrics storageData) {\n            Map<String, Object> map = new HashMap<>();\n            map.put(ENTITY_ID, storageData.getEntityId());\n            map.put(SOURCE_SERVICE_ID, storageData.getSourceServiceId());\n            map.put(SOURCE_SERVICE_INSTANCE_ID, storageData.getSourceServiceInstanceId());\n            map.put(DEST_SERVICE_ID, storageData.getDestServiceId());\n            map.put(DEST_SERVICE_INSTANCE_ID, storageData.getDestServiceInstanceId());\n            map.put(COMPONENT_ID, storageData.getComponentId());\n            map.put(TIME_BUCKET, storageData.getTimeBucket());\n            return map;\n        }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/manual/relation/instance/ServiceInstanceRelationServerSideMetrics.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"},{"authorDate":"2021-02-06 21:22:58","commitOrder":1,"curCode":"    public Map<String, Object> entity2Storage(final Record record) {\n        LogRecord storageData = (LogRecord) record;\n        Map<String, Object> map = new HashMap<>();\n        map.put(UNIQUE_ID, storageData.getUniqueId());\n        map.put(SERVICE_ID, storageData.getServiceId());\n        map.put(SERVICE_INSTANCE_ID, storageData.getServiceInstanceId());\n        map.put(ENDPOINT_ID, storageData.getEndpointId());\n        map.put(ENDPOINT_NAME, storageData.getEndpointName());\n        map.put(TRACE_ID, storageData.getTraceId());\n        map.put(TRACE_SEGMENT_ID, storageData.getTraceSegmentId());\n        map.put(SPAN_ID, storageData.getSpanId());\n        map.put(TIME_BUCKET, storageData.getTimeBucket());\n        map.put(CONTENT_TYPE, storageData.getContentType());\n        map.put(CONTENT, storageData.getContent());\n        map.put(TIMESTAMP, storageData.getTimestamp());\n        if (CollectionUtils.isEmpty(storageData.getTagsRawData())) {\n            map.put(TAGS_RAW_DATA, Const.EMPTY_STRING);\n        } else {\n            map.put(TAGS_RAW_DATA, new String(Base64.getEncoder().encode(storageData.getTagsRawData())));\n        }\n        analysisSearchTag(storageData.getTags(), map);\n        return map;\n    }\n","date":"2021-02-06 21:22:58","endLine":99,"groupId":"1760","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"entity2Storage","params":"(finalRecordrecord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/72/1dd9544d003ce3deb9ac281bf25b5e235e0263.src","preCode":"    public Map<String, Object> entity2Storage(final Record record) {\n        LogRecord storageData = (LogRecord) record;\n        Map<String, Object> map = new HashMap<>();\n        map.put(UNIQUE_ID, storageData.getUniqueId());\n        map.put(SERVICE_ID, storageData.getServiceId());\n        map.put(SERVICE_INSTANCE_ID, storageData.getServiceInstanceId());\n        map.put(ENDPOINT_ID, storageData.getEndpointId());\n        map.put(ENDPOINT_NAME, storageData.getEndpointName());\n        map.put(TRACE_ID, storageData.getTraceId());\n        map.put(TRACE_SEGMENT_ID, storageData.getTraceSegmentId());\n        map.put(SPAN_ID, storageData.getSpanId());\n        map.put(TIME_BUCKET, storageData.getTimeBucket());\n        map.put(CONTENT_TYPE, storageData.getContentType());\n        map.put(CONTENT, storageData.getContent());\n        map.put(TIMESTAMP, storageData.getTimestamp());\n        if (CollectionUtils.isEmpty(storageData.getTagsRawData())) {\n            map.put(TAGS_RAW_DATA, Const.EMPTY_STRING);\n        } else {\n            map.put(TAGS_RAW_DATA, new String(Base64.getEncoder().encode(storageData.getTagsRawData())));\n        }\n        analysisSearchTag(storageData.getTags(), map);\n        return map;\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/dao/H2LogRecordBuilder.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"fc23dabf37a85cfc27482dbaf25b0109114f6ef7","commitMessage":"@@@Support multiple implementations of StorageBuilder in different storage implementations - stage 1. (#6334)\n\n","date":"2021-02-06 21:22:58","modifiedFileCount":"74","status":"B","submitter":"?? Wu Sheng"},{"authorTime":"2021-08-12 09:44:19","codes":[{"authorDate":"2021-02-06 21:22:58","commitOrder":2,"curCode":"        public Map<String, Object> entity2Storage(ServiceInstanceRelationServerSideMetrics storageData) {\n            Map<String, Object> map = new HashMap<>();\n            map.put(ENTITY_ID, storageData.getEntityId());\n            map.put(SOURCE_SERVICE_ID, storageData.getSourceServiceId());\n            map.put(SOURCE_SERVICE_INSTANCE_ID, storageData.getSourceServiceInstanceId());\n            map.put(DEST_SERVICE_ID, storageData.getDestServiceId());\n            map.put(DEST_SERVICE_INSTANCE_ID, storageData.getDestServiceInstanceId());\n            map.put(COMPONENT_ID, storageData.getComponentId());\n            map.put(TIME_BUCKET, storageData.getTimeBucket());\n            return map;\n        }\n","date":"2021-02-06 21:22:58","endLine":175,"groupId":"10334","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"entity2Storage","params":"(ServiceInstanceRelationServerSideMetricsstorageData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/41/dcc5f9510895eca5fe10914e0a4b2f28927789.src","preCode":"        public Map<String, Object> entity2Storage(ServiceInstanceRelationServerSideMetrics storageData) {\n            Map<String, Object> map = new HashMap<>();\n            map.put(ENTITY_ID, storageData.getEntityId());\n            map.put(SOURCE_SERVICE_ID, storageData.getSourceServiceId());\n            map.put(SOURCE_SERVICE_INSTANCE_ID, storageData.getSourceServiceInstanceId());\n            map.put(DEST_SERVICE_ID, storageData.getDestServiceId());\n            map.put(DEST_SERVICE_INSTANCE_ID, storageData.getDestServiceInstanceId());\n            map.put(COMPONENT_ID, storageData.getComponentId());\n            map.put(TIME_BUCKET, storageData.getTimeBucket());\n            return map;\n        }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/manual/relation/instance/ServiceInstanceRelationServerSideMetrics.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"N"},{"authorDate":"2021-08-12 09:44:19","commitOrder":2,"curCode":"    public Map<String, Object> entity2Storage(final Record record) {\n        LogRecord storageData = (LogRecord) record;\n        Map<String, Object> map = new HashMap<>();\n        map.put(UNIQUE_ID, storageData.getUniqueId());\n        map.put(SERVICE_ID, storageData.getServiceId());\n        map.put(SERVICE_INSTANCE_ID, storageData.getServiceInstanceId());\n        map.put(ENDPOINT_ID, storageData.getEndpointId());\n        map.put(TRACE_ID, storageData.getTraceId());\n        map.put(TRACE_SEGMENT_ID, storageData.getTraceSegmentId());\n        map.put(SPAN_ID, storageData.getSpanId());\n        map.put(TIME_BUCKET, storageData.getTimeBucket());\n        map.put(CONTENT_TYPE, storageData.getContentType());\n        map.put(CONTENT, storageData.getContent());\n        map.put(TIMESTAMP, storageData.getTimestamp());\n        if (CollectionUtils.isEmpty(storageData.getTagsRawData())) {\n            map.put(TAGS_RAW_DATA, Const.EMPTY_STRING);\n        } else {\n            map.put(TAGS_RAW_DATA, new String(Base64.getEncoder().encode(storageData.getTagsRawData())));\n        }\n        analysisSearchTag(storageData.getTags(), map);\n        return map;\n    }\n","date":"2021-08-12 09:44:19","endLine":96,"groupId":"10334","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"entity2Storage","params":"(finalRecordrecord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a8/3b420f86d7b3d4802a7a6ddd6a147d090c4029.src","preCode":"    public Map<String, Object> entity2Storage(final Record record) {\n        LogRecord storageData = (LogRecord) record;\n        Map<String, Object> map = new HashMap<>();\n        map.put(UNIQUE_ID, storageData.getUniqueId());\n        map.put(SERVICE_ID, storageData.getServiceId());\n        map.put(SERVICE_INSTANCE_ID, storageData.getServiceInstanceId());\n        map.put(ENDPOINT_ID, storageData.getEndpointId());\n        map.put(ENDPOINT_NAME, storageData.getEndpointName());\n        map.put(TRACE_ID, storageData.getTraceId());\n        map.put(TRACE_SEGMENT_ID, storageData.getTraceSegmentId());\n        map.put(SPAN_ID, storageData.getSpanId());\n        map.put(TIME_BUCKET, storageData.getTimeBucket());\n        map.put(CONTENT_TYPE, storageData.getContentType());\n        map.put(CONTENT, storageData.getContent());\n        map.put(TIMESTAMP, storageData.getTimestamp());\n        if (CollectionUtils.isEmpty(storageData.getTagsRawData())) {\n            map.put(TAGS_RAW_DATA, Const.EMPTY_STRING);\n        } else {\n            map.put(TAGS_RAW_DATA, new String(Base64.getEncoder().encode(storageData.getTagsRawData())));\n        }\n        analysisSearchTag(storageData.getTags(), map);\n        return map;\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/dao/H2LogRecordBuilder.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"6a241aed758e65b54dc6225b42fc852aa878f8c7","commitMessage":"@@@[Break Change] Remove endpoint name in backend log and browser log query (#7444)\n\n* Remove page path in the browser log query condition.\n\n* Remove endpoint name in the backend log query condition.\n","date":"2021-08-12 09:44:19","modifiedFileCount":"28","status":"M","submitter":"?? Wu Sheng"}]
