[{"authorTime":"2020-11-22 23:28:54","codes":[{"authorDate":"2020-08-31 15:46:37","commitOrder":18,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(ILogQueryDAO.class, new MySQLLogQueryDAO(mysqlClient));\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n    }\n","date":"2020-08-31 15:46:37","endLine":136,"groupId":"143","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/6c/3f502ead349812997f907f33be7b21a311e352.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(ILogQueryDAO.class, new MySQLLogQueryDAO(mysqlClient));\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/mysql/MySQLStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"NB"},{"authorDate":"2020-11-22 23:28:54","commitOrder":18,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(ILogQueryDAO.class, new MySQLLogQueryDAO(mysqlClient));\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n    }\n","date":"2020-11-22 23:28:54","endLine":141,"groupId":"143","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/30/d4fa8571875c9a13f148bee9db7e98e2707fb8.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(ILogQueryDAO.class, new MySQLLogQueryDAO(mysqlClient));\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-tidb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/tidb/TiDBStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"}],"commitId":"8d164d3dd8c35cdafe683abc7fd9f4e4b530808f","commitMessage":"@@@Add Tidb provider module. (#5844)\n\n* fix transaction too large error when use TiDB as storage\n\n* add CHANGES.md\n\n* fix typo\n\n* add tidb storage provider module.\n\n* add e2e.\n\n* revert ui submodule.\n\n* fix license.\n\n* Fix wrong health check test\n\n* add tidb ttl e2e.\n\nCo-authored-by: moonsphere <moonsphere@m.com>\nCo-authored-by: kezhenxu94 <kezhenxu94@apache.org>\nCo-authored-by: kezhenxu94 <kezhenxu94@163.com>","date":"2020-11-22 23:28:54","modifiedFileCount":"3","status":"M","submitter":"Jared Tan"},{"authorTime":"2021-01-14 09:49:11","codes":[{"authorDate":"2021-01-14 09:49:11","commitOrder":19,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n    }\n","date":"2021-01-14 09:49:11","endLine":144,"groupId":"143","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/22/5a0da4c5ca3eae40bf6007fc1bfca03723073f.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(ILogQueryDAO.class, new MySQLLogQueryDAO(mysqlClient));\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/mysql/MySQLStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2021-01-14 09:49:11","commitOrder":19,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n    }\n","date":"2021-01-14 09:49:11","endLine":149,"groupId":"143","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/5d/9557fd3572cf42178fd47b395536cd7c789021.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(ILogQueryDAO.class, new MySQLLogQueryDAO(mysqlClient));\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-tidb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/tidb/TiDBStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"15452025c65dd6934bd9d6c8a930961b0f960594","commitMessage":"@@@Log collecting and query implementation (#6120)\n\n","date":"2021-01-14 09:49:11","modifiedFileCount":"51","status":"M","submitter":"zhang-wei"},{"authorTime":"2021-02-05 18:37:18","codes":[{"authorDate":"2021-02-05 18:37:18","commitOrder":20,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","date":"2021-02-05 18:37:18","endLine":148,"groupId":"143","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c1/a9315b99b6129f3d5c13b6ce60b9168b21f547.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/mysql/MySQLStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2021-02-05 18:37:18","commitOrder":20,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","date":"2021-02-05 18:37:18","endLine":153,"groupId":"143","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/aa/da597d68515d6326bcef9ff474bbcae2c68b00.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-tidb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/tidb/TiDBStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"b92eac2cd6bf8774860b921ea04bafd59550a607","commitMessage":"@@@Add a new concept \"Event\" and its implementations to collect events (#6183)\n\n","date":"2021-02-05 18:37:18","modifiedFileCount":"15","status":"M","submitter":"Zhenxu Ke"},{"authorTime":"2021-02-07 10:37:14","codes":[{"authorDate":"2021-02-07 10:37:14","commitOrder":21,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","date":"2021-02-07 10:37:14","endLine":151,"groupId":"143","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/26/e1758bf7251885e184c74d325d180304ec27ef.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/mysql/MySQLStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2021-02-07 10:37:14","commitOrder":21,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n        \n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","date":"2021-02-07 10:37:14","endLine":156,"groupId":"143","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/0b/fc9d884ae20cff362e1e97be94df08f578063f.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-tidb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/tidb/TiDBStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"5e8f1eb5528911f924ffca451af20dcdf6151971","commitMessage":"@@@Support multiple implementations of StorageBuilder in different storage implementations - stage 2 (#6336)\n\n","date":"2021-02-07 10:37:14","modifiedFileCount":"16","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2021-04-25 17:22:43","codes":[{"authorDate":"2021-04-25 17:22:43","commitOrder":22,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","date":"2021-04-25 17:22:43","endLine":155,"groupId":"5208","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/23/3431ad240f33303ea7e88a622e0774e0547369.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/mysql/MySQLStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2021-04-25 17:22:43","commitOrder":22,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n        \n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","date":"2021-04-25 17:22:43","endLine":160,"groupId":"5208","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/05/d057cab79db1a0444b8f6ac035c7c485a9e675.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n        \n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-tidb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/tidb/TiDBStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"7a533313676579da1321c0177c10fc237a052cbe","commitMessage":"@@@Support alarm tags (#6820)\n\n","date":"2021-04-25 17:22:43","modifiedFileCount":"42","status":"M","submitter":"liqiangz"},{"authorTime":"2021-09-17 00:05:18","codes":[{"authorDate":"2021-09-17 00:05:18","commitOrder":23,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient, config.getMaxSizeOfBatchSql(), config.getAsyncBatchPersistentPoolSize()));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","date":"2021-09-17 00:05:18","endLine":155,"groupId":"10834","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c9/745b8ec409189ad1e2de43ebc5b0f0abe4ea52.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n\n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/mysql/MySQLStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2021-09-17 00:05:18","commitOrder":23,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n        \n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient, config.getMaxSizeOfBatchSql(), config.getAsyncBatchPersistentPoolSize()));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","date":"2021-09-17 00:05:18","endLine":160,"groupId":"10834","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/93/5ec7afd94eeeeb8a551555774a1dd2ed5ea404.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        this.registerServiceImplementation(StorageBuilderFactory.class, new StorageBuilderFactory.Default());\n        \n        mysqlClient = new JDBCHikariCPClient(config.getProperties());\n\n        this.registerServiceImplementation(IBatchDAO.class, new H2BatchDAO(mysqlClient));\n        this.registerServiceImplementation(\n            StorageDAO.class,\n            new H2StorageDAO(\n                getManager(), mysqlClient, config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag())\n        );\n        this.registerServiceImplementation(\n            INetworkAddressAliasDAO.class, new H2NetworkAddressAliasDAO(mysqlClient));\n\n        this.registerServiceImplementation(ITopologyQueryDAO.class, new H2TopologyQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IMetricsQueryDAO.class, new H2MetricsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ITraceQueryDAO.class,\n            new MySQLTraceQueryDAO(\n                getManager(),\n                mysqlClient,\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n        this.registerServiceImplementation(IBrowserLogQueryDAO.class, new MysqlBrowserLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IMetadataQueryDAO.class, new H2MetadataQueryDAO(mysqlClient, config.getMetadataQueryMaxSize()));\n        this.registerServiceImplementation(IAggregationQueryDAO.class, new MySQLAggregationQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IAlarmQueryDAO.class, new MySQLAlarmQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()));\n        this.registerServiceImplementation(\n            IHistoryDeleteDAO.class, new H2HistoryDeleteDAO(mysqlClient));\n        this.registerServiceImplementation(ITopNRecordsQueryDAO.class, new H2TopNRecordsQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            ILogQueryDAO.class,\n            new MySQLLogQueryDAO(\n                mysqlClient,\n                getManager(),\n                config.getMaxSizeOfArrayColumn(),\n                config.getNumOfSearchableValuesPerTag()\n            )\n        );\n\n        this.registerServiceImplementation(IProfileTaskQueryDAO.class, new H2ProfileTaskQueryDAO(mysqlClient));\n        this.registerServiceImplementation(IProfileTaskLogQueryDAO.class, new H2ProfileTaskLogQueryDAO(mysqlClient));\n        this.registerServiceImplementation(\n            IProfileThreadSnapshotQueryDAO.class, new H2ProfileThreadSnapshotQueryDAO(mysqlClient));\n        this.registerServiceImplementation(UITemplateManagementDAO.class, new H2UITemplateManagementDAO(mysqlClient));\n\n        this.registerServiceImplementation(IHistoryDeleteDAO.class, new TiDBHistoryDeleteDAO(mysqlClient));\n\n        this.registerServiceImplementation(IEventQueryDAO.class, new H2EventQueryDAO(mysqlClient));\n    }\n","realPath":"oap-server/server-storage-plugin/storage-tidb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/tidb/TiDBStorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"224b6c6b3a7f72ef02d4dca5f73b32c76767d08e","commitMessage":"@@@Improve the speed of writing TiDB by batching the SQL execution (#7691)\n\n","date":"2021-09-17 00:05:18","modifiedFileCount":"10","status":"M","submitter":"nicolchen"}]
