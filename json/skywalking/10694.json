[{"authorTime":"2020-09-03 17:12:07","codes":[{"authorDate":"2020-11-04 10:04:24","commitOrder":2,"curCode":"    public void init() {\n        Mockito.when(telemetryProvider.getService(MetricsCreator.class))\n                .thenReturn(new MetricsCreatorNoop());\n        TelemetryModule telemetryModule = Mockito.spy(TelemetryModule.class);\n        Whitebox.setInternalState(telemetryModule, \"loadedProvider\", telemetryProvider);\n        Mockito.when(moduleManager.find(TelemetryModule.NAME)).thenReturn(telemetryModule);\n        zkAddress = System.getProperty(\"zk.address\");\n        assertFalse(StringUtil.isEmpty(zkAddress));\n    }\n","date":"2020-11-04 10:04:24","endLine":69,"groupId":"2057","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/ad/1e22e4e41e189591e4f7c7d9c9998582bb2f63.src","preCode":"    public void init() {\n        Mockito.when(telemetryProvider.getService(MetricsCreator.class))\n                .thenReturn(new MetricsCreatorNoop());\n        TelemetryModule telemetryModule = Mockito.spy(TelemetryModule.class);\n        Whitebox.setInternalState(telemetryModule, \"loadedProvider\", telemetryProvider);\n        Mockito.when(moduleManager.find(TelemetryModule.NAME)).thenReturn(telemetryModule);\n        zkAddress = System.getProperty(\"zk.address\");\n        assertFalse(StringUtil.isEmpty(zkAddress));\n    }\n","realPath":"oap-server/server-cluster-plugin/cluster-zookeeper-plugin/src/test/java/org/apache/skywalking/oap/server/cluster/plugin/zookeeper/ITClusterModuleZookeeperProviderFunctionalTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2020-09-03 17:12:07","commitOrder":2,"curCode":"    public void init() {\n        Mockito.when(telemetryProvider.getService(MetricsCreator.class))\n               .thenReturn(new MetricsCreatorNoop());\n\n        TelemetryModule telemetryModule = Mockito.spy(TelemetryModule.class);\n        Whitebox.setInternalState(telemetryModule, \"loadedProvider\", telemetryProvider);\n        Mockito.when(moduleManager.find(TelemetryModule.NAME)).thenReturn(telemetryModule);\n    }\n","date":"2020-09-03 17:12:07","endLine":63,"groupId":"2057","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/b3/dd3330c1326a65e67de3ed00f0b0ba9242a6f5.src","preCode":"    public void init() {\n        Mockito.when(telemetryProvider.getService(MetricsCreator.class))\n               .thenReturn(new MetricsCreatorNoop());\n\n        TelemetryModule telemetryModule = Mockito.spy(TelemetryModule.class);\n        Whitebox.setInternalState(telemetryModule, \"loadedProvider\", telemetryProvider);\n        Mockito.when(moduleManager.find(TelemetryModule.NAME)).thenReturn(telemetryModule);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-browser-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/browser/provider/handler/rest/BrowserReportServletHandlerTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"NB"}],"commitId":"56fe8a4b41236dd826f4ede97cd25b435d062803","commitMessage":"@@@Cluster manager health v2 (#5784)\n\n","date":"2020-11-04 10:04:24","modifiedFileCount":"25","status":"M","submitter":"xbkaishui"},{"authorTime":"2020-09-03 17:12:07","codes":[{"authorDate":"2021-09-06 21:04:14","commitOrder":3,"curCode":"    public void init() {\n        Mockito.when(telemetryProvider.getService(MetricsCreator.class))\n                .thenReturn(new MetricsCreatorNoop());\n        TelemetryModule telemetryModule = Mockito.spy(TelemetryModule.class);\n        Whitebox.setInternalState(telemetryModule, \"loadedProvider\", telemetryProvider);\n        Mockito.when(moduleManager.find(TelemetryModule.NAME)).thenReturn(telemetryModule);\n        zkAddress = container.getHost() + \":\" + container.getMappedPort(2181);\n    }\n","date":"2021-09-06 21:04:14","endLine":76,"groupId":"10694","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/1d/38a25a6748323ed289dca5f7243534ba45c5ec.src","preCode":"    public void init() {\n        Mockito.when(telemetryProvider.getService(MetricsCreator.class))\n                .thenReturn(new MetricsCreatorNoop());\n        TelemetryModule telemetryModule = Mockito.spy(TelemetryModule.class);\n        Whitebox.setInternalState(telemetryModule, \"loadedProvider\", telemetryProvider);\n        Mockito.when(moduleManager.find(TelemetryModule.NAME)).thenReturn(telemetryModule);\n        zkAddress = System.getProperty(\"zk.address\");\n        assertFalse(StringUtil.isEmpty(zkAddress));\n    }\n","realPath":"oap-server/server-cluster-plugin/cluster-zookeeper-plugin/src/test/java/org/apache/skywalking/oap/server/cluster/plugin/zookeeper/ITClusterModuleZookeeperProviderFunctionalTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2020-09-03 17:12:07","commitOrder":3,"curCode":"    public void init() {\n        Mockito.when(telemetryProvider.getService(MetricsCreator.class))\n               .thenReturn(new MetricsCreatorNoop());\n\n        TelemetryModule telemetryModule = Mockito.spy(TelemetryModule.class);\n        Whitebox.setInternalState(telemetryModule, \"loadedProvider\", telemetryProvider);\n        Mockito.when(moduleManager.find(TelemetryModule.NAME)).thenReturn(telemetryModule);\n    }\n","date":"2020-09-03 17:12:07","endLine":63,"groupId":"10694","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/b3/dd3330c1326a65e67de3ed00f0b0ba9242a6f5.src","preCode":"    public void init() {\n        Mockito.when(telemetryProvider.getService(MetricsCreator.class))\n               .thenReturn(new MetricsCreatorNoop());\n\n        TelemetryModule telemetryModule = Mockito.spy(TelemetryModule.class);\n        Whitebox.setInternalState(telemetryModule, \"loadedProvider\", telemetryProvider);\n        Mockito.when(moduleManager.find(TelemetryModule.NAME)).thenReturn(telemetryModule);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-browser-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/browser/provider/handler/rest/BrowserReportServletHandlerTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"327d9469787ccc080fb8284dc7a5609a4a19c8bc","commitMessage":"@@@Remove docker-maven-plugin in favor of testcontainers (#7664)\n\n","date":"2021-09-06 21:04:14","modifiedFileCount":"6","status":"M","submitter":"kezhenxu94"}]
