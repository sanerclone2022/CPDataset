[{"authorTime":"2020-07-30 11:55:49","codes":[{"authorDate":"2021-03-11 09:13:49","commitOrder":2,"curCode":"    public MeterServiceHandler(ModuleManager manager, KafkaFetcherConfig config) {\n        this.config = config;\n        this.processService = manager.find(AnalyzerModule.NAME).provider().getService(IMeterProcessService.class);\n        MetricsCreator metricsCreator = manager.find(TelemetryModule.NAME)\n                .provider()\n                .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n                \"meter_in_latency\", \"The process latency of meter\",\n                new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"kafka-fetcher\")\n        );\n        errorCounter = metricsCreator.createCounter(\"meter_analysis_error_count\", \"The error number of meter analysis\",\n                new MetricsTag.Keys(\"protocol\"),\n                new MetricsTag.Values(\"kafka-fetcher\")\n        );\n    }\n","date":"2021-03-11 09:13:49","endLine":60,"groupId":"3914","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"MeterServiceHandler","params":"(ModuleManagermanager@KafkaFetcherConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/1b/2acc655a920d007826bf61df39dba83a6fcfc2.src","preCode":"    public MeterServiceHandler(ModuleManager manager, KafkaFetcherConfig config) {\n        this.config = config;\n        this.processService = manager.find(AnalyzerModule.NAME).provider().getService(IMeterProcessService.class);\n        MetricsCreator metricsCreator = manager.find(TelemetryModule.NAME)\n                .provider()\n                .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n                \"meter_in_latency\", \"The process latency of meter\",\n                new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"kafka-fetcher\")\n        );\n        errorCounter = metricsCreator.createCounter(\"meter_analysis_error_count\", \"The error number of meter analysis\",\n                new MetricsTag.Keys(\"protocol\"),\n                new MetricsTag.Values(\"kafka-fetcher\")\n        );\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/MeterServiceHandler.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2020-07-30 11:55:49","commitOrder":2,"curCode":"    public TraceSegmentHandler(ModuleManager moduleManager,\n                               KafkaFetcherConfig config) {\n        this.config = config;\n        this.segmentParserService = moduleManager.find(AnalyzerModule.NAME)\n                                                 .provider()\n                                                 .getService(ISegmentParserService.class);\n\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider().getService(MetricsCreator.class);\n\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\",\n            \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka-fetcher\")\n        );\n        errorCounter = metricsCreator.createCounter(\n            \"trace_analysis_error_count\",\n            \"The error number of trace analysis\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka-fetcher\")\n        );\n    }\n","date":"2020-07-30 11:55:49","endLine":70,"groupId":"1891","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"TraceSegmentHandler","params":"(ModuleManagermoduleManager@KafkaFetcherConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/d8/bb0ac4be14b5e180ab626b5e563d36050f6fe2.src","preCode":"    public TraceSegmentHandler(ModuleManager moduleManager,\n                               KafkaFetcherConfig config) {\n        this.config = config;\n        this.segmentParserService = moduleManager.find(AnalyzerModule.NAME)\n                                                 .provider()\n                                                 .getService(ISegmentParserService.class);\n\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider().getService(MetricsCreator.class);\n\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\",\n            \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka-fetcher\")\n        );\n        errorCounter = metricsCreator.createCounter(\n            \"trace_analysis_error_count\",\n            \"The error number of trace analysis\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka-fetcher\")\n        );\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/TraceSegmentHandler.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"NB"}],"commitId":"d9617cbe7b417774d9f0d1f14461ff5d0d5a01e5","commitMessage":"@@@Add telemetry data about metrics in.  metrics scraping and trace in metrics to zipkin receiver. (#6516)\n\n","date":"2021-03-11 09:13:49","modifiedFileCount":"8","status":"M","submitter":"Ax1an"},{"authorTime":"2021-04-23 11:29:35","codes":[{"authorDate":"2021-04-23 11:29:35","commitOrder":3,"curCode":"    public MeterServiceHandler(ModuleManager manager, KafkaFetcherConfig config) {\n        super(manager, config);\n        this.processService = manager.find(AnalyzerModule.NAME).provider().getService(IMeterProcessService.class);\n        MetricsCreator metricsCreator = manager.find(TelemetryModule.NAME)\n                .provider()\n                .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n                \"meter_in_latency\", \"The process latency of meter\",\n                new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"kafka-fetcher\")\n        );\n        errorCounter = metricsCreator.createCounter(\"meter_analysis_error_count\", \"The error number of meter analysis\",\n                new MetricsTag.Keys(\"protocol\"),\n                new MetricsTag.Values(\"kafka-fetcher\")\n        );\n    }\n","date":"2021-04-23 11:29:35","endLine":59,"groupId":"3914","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"MeterServiceHandler","params":"(ModuleManagermanager@KafkaFetcherConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/29/cc518ac84e10e1b2298360e680a74e282121d6.src","preCode":"    public MeterServiceHandler(ModuleManager manager, KafkaFetcherConfig config) {\n        this.config = config;\n        this.processService = manager.find(AnalyzerModule.NAME).provider().getService(IMeterProcessService.class);\n        MetricsCreator metricsCreator = manager.find(TelemetryModule.NAME)\n                .provider()\n                .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n                \"meter_in_latency\", \"The process latency of meter\",\n                new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"kafka-fetcher\")\n        );\n        errorCounter = metricsCreator.createCounter(\"meter_analysis_error_count\", \"The error number of meter analysis\",\n                new MetricsTag.Keys(\"protocol\"),\n                new MetricsTag.Values(\"kafka-fetcher\")\n        );\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/MeterServiceHandler.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2021-04-23 11:29:35","commitOrder":3,"curCode":"    public TraceSegmentHandler(ModuleManager moduleManager, KafkaFetcherConfig config) {\n        super(moduleManager, config);\n        this.segmentParserService = moduleManager.find(AnalyzerModule.NAME)\n                                                 .provider()\n                                                 .getService(ISegmentParserService.class);\n\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider().getService(MetricsCreator.class);\n\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\",\n            \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka-fetcher\")\n        );\n        errorCounter = metricsCreator.createCounter(\n            \"trace_analysis_error_count\",\n            \"The error number of trace analysis\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka-fetcher\")\n        );\n    }\n","date":"2021-04-23 11:29:35","endLine":68,"groupId":"1891","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"TraceSegmentHandler","params":"(ModuleManagermoduleManager@KafkaFetcherConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/82/77a227bdbc4262a17ffd73ddd13b6b3b963c68.src","preCode":"    public TraceSegmentHandler(ModuleManager moduleManager,\n                               KafkaFetcherConfig config) {\n        this.config = config;\n        this.segmentParserService = moduleManager.find(AnalyzerModule.NAME)\n                                                 .provider()\n                                                 .getService(ISegmentParserService.class);\n\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider().getService(MetricsCreator.class);\n\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\",\n            \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka-fetcher\")\n        );\n        errorCounter = metricsCreator.createCounter(\n            \"trace_analysis_error_count\",\n            \"The error number of trace analysis\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka-fetcher\")\n        );\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/TraceSegmentHandler.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"b4114ac043e7d906806818a51702c290dabc7068","commitMessage":"@@@enhancement agent kafka reporter plugin.  add namespace concept (#6781)\n\n","date":"2021-04-23 11:29:35","modifiedFileCount":"14","status":"M","submitter":"Darcy"},{"authorTime":"2021-06-02 12:56:00","codes":[{"authorDate":"2021-06-02 12:56:00","commitOrder":4,"curCode":"    public MeterServiceHandler(ModuleManager manager, KafkaFetcherConfig config) {\n        super(manager, config);\n        this.processService = manager.find(AnalyzerModule.NAME).provider().getService(IMeterProcessService.class);\n        MetricsCreator metricsCreator = manager.find(TelemetryModule.NAME)\n                                               .provider()\n                                               .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n            \"meter_in_latency\",\n            \"The process latency of meter\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka\")\n        );\n        histogramBatch = metricsCreator.createHistogramMetric(\n            \"meter_batch_in_latency\",\n            \"The process latency of meter\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka\")\n        );\n        errorCounter = metricsCreator.createCounter(\n            \"meter_analysis_error_count\",\n            \"The error number of meter analysis\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka\")\n        );\n    }\n","date":"2021-06-02 12:56:00","endLine":70,"groupId":"10585","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"MeterServiceHandler","params":"(ModuleManagermanager@KafkaFetcherConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/aa/36144b1acfbe7d14cb72a5d0089043452080be.src","preCode":"    public MeterServiceHandler(ModuleManager manager, KafkaFetcherConfig config) {\n        super(manager, config);\n        this.processService = manager.find(AnalyzerModule.NAME).provider().getService(IMeterProcessService.class);\n        MetricsCreator metricsCreator = manager.find(TelemetryModule.NAME)\n                .provider()\n                .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n                \"meter_in_latency\", \"The process latency of meter\",\n                new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"kafka-fetcher\")\n        );\n        errorCounter = metricsCreator.createCounter(\"meter_analysis_error_count\", \"The error number of meter analysis\",\n                new MetricsTag.Keys(\"protocol\"),\n                new MetricsTag.Values(\"kafka-fetcher\")\n        );\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/MeterServiceHandler.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2021-06-02 12:56:00","commitOrder":4,"curCode":"    public TraceSegmentHandler(ModuleManager moduleManager, KafkaFetcherConfig config) {\n        super(moduleManager, config);\n        this.segmentParserService = moduleManager.find(AnalyzerModule.NAME)\n                                                 .provider()\n                                                 .getService(ISegmentParserService.class);\n\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider().getService(MetricsCreator.class);\n\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\",\n            \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka\")\n        );\n        errorCounter = metricsCreator.createCounter(\n            \"trace_analysis_error_count\",\n            \"The error number of trace analysis\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka\")\n        );\n    }\n","date":"2021-06-02 12:56:00","endLine":68,"groupId":"10585","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"TraceSegmentHandler","params":"(ModuleManagermoduleManager@KafkaFetcherConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/4b/7189a3edbe7f902e620627efa61c3f2d9b173d.src","preCode":"    public TraceSegmentHandler(ModuleManager moduleManager, KafkaFetcherConfig config) {\n        super(moduleManager, config);\n        this.segmentParserService = moduleManager.find(AnalyzerModule.NAME)\n                                                 .provider()\n                                                 .getService(ISegmentParserService.class);\n\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider().getService(MetricsCreator.class);\n\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\",\n            \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka-fetcher\")\n        );\n        errorCounter = metricsCreator.createCounter(\n            \"trace_analysis_error_count\",\n            \"The error number of trace analysis\",\n            new MetricsTag.Keys(\"protocol\"),\n            new MetricsTag.Values(\"kafka-fetcher\")\n        );\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/TraceSegmentHandler.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"38c182e4c00902e5a6cda49c557f8fdbccab011c","commitMessage":"@@@Kafka transporter code polish (#7032)\n\n","date":"2021-06-02 12:56:00","modifiedFileCount":"10","status":"M","submitter":"Daming"}]
