[{"authorTime":"2020-06-01 23:06:14","codes":[{"authorDate":"2020-06-01 23:06:14","commitOrder":1,"curCode":"    public TemplateChangeStatus addTemplate(final DashboardSetting setting) {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        Point point = Point.measurement(UITemplate.INDEX_NAME)\n                           .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                           .fields(builder.data2Map(uiTemplate))\n                           .time(0L, TimeUnit.MILLISECONDS)\n                           .build();\n        client.write(point);\n        return TemplateChangeStatus.builder().status(true).build();\n    }\n","date":"2020-06-01 23:06:14","endLine":92,"groupId":"375","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addTemplate","params":"(finalDashboardSettingsetting)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/dd/c3359e67421feba1d7c50b4480b6517bea9ce1.src","preCode":"    public TemplateChangeStatus addTemplate(final DashboardSetting setting) {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        Point point = Point.measurement(UITemplate.INDEX_NAME)\n                           .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                           .fields(builder.data2Map(uiTemplate))\n                           .time(0L, TimeUnit.MILLISECONDS)\n                           .build();\n        client.write(point);\n        return TemplateChangeStatus.builder().status(true).build();\n    }\n","realPath":"oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/UITemplateManagementDAOImpl.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"},{"authorDate":"2020-06-01 23:06:14","commitOrder":1,"curCode":"    public TemplateChangeStatus changeTemplate(final DashboardSetting setting) throws IOException {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        WhereQueryImpl<SelectQueryImpl> query = select().all()\n                                                        .from(client.getDatabase(), UITemplate.INDEX_NAME)\n                                                        .where(eq(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id()));\n\n        QueryResult.Series series = client.queryForSingleSeries(query);\n        if (Objects.nonNull(series)) {\n            Point point = Point.measurement(UITemplate.INDEX_NAME)\n                               .fields(builder.data2Map(uiTemplate))\n                               .tag(series.getTags())\n                               .time(0L, TimeUnit.MILLISECONDS)\n                               .build();\n            client.write(point);\n            return TemplateChangeStatus.builder().status(true).build();\n        } else {\n            return TemplateChangeStatus.builder().status(false).message(\"Can't find the template\").build();\n        }\n    }\n","date":"2020-06-01 23:06:14","endLine":115,"groupId":"376","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"changeTemplate","params":"(finalDashboardSettingsetting)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/dd/c3359e67421feba1d7c50b4480b6517bea9ce1.src","preCode":"    public TemplateChangeStatus changeTemplate(final DashboardSetting setting) throws IOException {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        WhereQueryImpl<SelectQueryImpl> query = select().all()\n                                                        .from(client.getDatabase(), UITemplate.INDEX_NAME)\n                                                        .where(eq(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id()));\n\n        QueryResult.Series series = client.queryForSingleSeries(query);\n        if (Objects.nonNull(series)) {\n            Point point = Point.measurement(UITemplate.INDEX_NAME)\n                               .fields(builder.data2Map(uiTemplate))\n                               .tag(series.getTags())\n                               .time(0L, TimeUnit.MILLISECONDS)\n                               .build();\n            client.write(point);\n            return TemplateChangeStatus.builder().status(true).build();\n        } else {\n            return TemplateChangeStatus.builder().status(false).message(\"Can't find the template\").build();\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/UITemplateManagementDAOImpl.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"}],"commitId":"d094a0f7c0b4a2cf0de38735128b5c07181e30d2","commitMessage":"@@@Support UI template management. (#4843)\n\n","date":"2020-06-01 23:06:14","modifiedFileCount":"32","status":"B","submitter":"?? Wu Sheng"},{"authorTime":"2020-06-02 16:05:21","codes":[{"authorDate":"2020-06-02 16:05:21","commitOrder":2,"curCode":"    public TemplateChangeStatus addTemplate(final DashboardSetting setting) {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        Point point = Point.measurement(UITemplate.INDEX_NAME)\n                           .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                           .fields(builder.data2Map(uiTemplate))\n                           .time(1L, TimeUnit.NANOSECONDS)\n                           .build();\n        client.write(point);\n        return TemplateChangeStatus.builder().status(true).build();\n    }\n","date":"2020-06-02 16:05:21","endLine":92,"groupId":"375","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addTemplate","params":"(finalDashboardSettingsetting)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/ba/2e815922f04aa298d5fab78edfbbb41cbabb11.src","preCode":"    public TemplateChangeStatus addTemplate(final DashboardSetting setting) {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        Point point = Point.measurement(UITemplate.INDEX_NAME)\n                           .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                           .fields(builder.data2Map(uiTemplate))\n                           .time(0L, TimeUnit.MILLISECONDS)\n                           .build();\n        client.write(point);\n        return TemplateChangeStatus.builder().status(true).build();\n    }\n","realPath":"oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/UITemplateManagementDAOImpl.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2020-06-02 16:05:21","commitOrder":2,"curCode":"    public TemplateChangeStatus changeTemplate(final DashboardSetting setting) throws IOException {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        WhereQueryImpl<SelectQueryImpl> query = select().all()\n                                                        .from(client.getDatabase(), UITemplate.INDEX_NAME)\n                                                        .where(eq(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id()));\n\n        QueryResult.Series series = client.queryForSingleSeries(query);\n        if (Objects.nonNull(series)) {\n            Point point = Point.measurement(UITemplate.INDEX_NAME)\n                               .fields(builder.data2Map(uiTemplate))\n                               .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                               .time(1L, TimeUnit.NANOSECONDS)\n                               .build();\n            client.write(point);\n            return TemplateChangeStatus.builder().status(true).build();\n        } else {\n            return TemplateChangeStatus.builder().status(false).message(\"Can't find the template\").build();\n        }\n    }\n","date":"2020-06-02 16:05:21","endLine":115,"groupId":"376","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"changeTemplate","params":"(finalDashboardSettingsetting)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/ba/2e815922f04aa298d5fab78edfbbb41cbabb11.src","preCode":"    public TemplateChangeStatus changeTemplate(final DashboardSetting setting) throws IOException {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        WhereQueryImpl<SelectQueryImpl> query = select().all()\n                                                        .from(client.getDatabase(), UITemplate.INDEX_NAME)\n                                                        .where(eq(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id()));\n\n        QueryResult.Series series = client.queryForSingleSeries(query);\n        if (Objects.nonNull(series)) {\n            Point point = Point.measurement(UITemplate.INDEX_NAME)\n                               .fields(builder.data2Map(uiTemplate))\n                               .tag(series.getTags())\n                               .time(0L, TimeUnit.MILLISECONDS)\n                               .build();\n            client.write(point);\n            return TemplateChangeStatus.builder().status(true).build();\n        } else {\n            return TemplateChangeStatus.builder().status(false).message(\"Can't find the template\").build();\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/UITemplateManagementDAOImpl.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"3f176bf50f66d3d9156eafcecf063c92122d3756","commitMessage":"@@@[hotfix]Fix UITemplate storage Influxdb implamented (#4849)\n\n","date":"2020-06-02 16:05:21","modifiedFileCount":"2","status":"M","submitter":"Daming"},{"authorTime":"2020-12-17 22:54:36","codes":[{"authorDate":"2020-12-17 22:54:36","commitOrder":3,"curCode":"    public TemplateChangeStatus addTemplate(final DashboardSetting setting) {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        final Point point = Point.measurement(UITemplate.INDEX_NAME)\n                                 .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                                 .fields(builder.data2Map(uiTemplate))\n                                 .time(1L, TimeUnit.NANOSECONDS)\n                                 .build();\n        client.write(point);\n        return TemplateChangeStatus.builder().status(true).build();\n    }\n","date":"2020-12-17 22:54:36","endLine":92,"groupId":"375","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addTemplate","params":"(finalDashboardSettingsetting)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/99/a0e2366ee68c93e1fa051b3694cecc0cf28f92.src","preCode":"    public TemplateChangeStatus addTemplate(final DashboardSetting setting) {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        Point point = Point.measurement(UITemplate.INDEX_NAME)\n                           .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                           .fields(builder.data2Map(uiTemplate))\n                           .time(1L, TimeUnit.NANOSECONDS)\n                           .build();\n        client.write(point);\n        return TemplateChangeStatus.builder().status(true).build();\n    }\n","realPath":"oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/UITemplateManagementDAOImpl.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2020-12-17 22:54:36","commitOrder":3,"curCode":"    public TemplateChangeStatus changeTemplate(final DashboardSetting setting) throws IOException {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        WhereQueryImpl<SelectQueryImpl> query = select().all()\n                                                        .from(client.getDatabase(), UITemplate.INDEX_NAME)\n                                                        .where(eq(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id()));\n\n        QueryResult.Series series = client.queryForSingleSeries(query);\n        if (Objects.nonNull(series)) {\n            final Point point = Point.measurement(UITemplate.INDEX_NAME)\n                                     .fields(builder.data2Map(uiTemplate))\n                                     .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                                     .time(1L, TimeUnit.NANOSECONDS)\n                                     .build();\n            client.write(point);\n            return TemplateChangeStatus.builder().status(true).build();\n        } else {\n            return TemplateChangeStatus.builder().status(false).message(\"Can't find the template\").build();\n        }\n    }\n","date":"2020-12-17 22:54:36","endLine":115,"groupId":"376","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"changeTemplate","params":"(finalDashboardSettingsetting)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/99/a0e2366ee68c93e1fa051b3694cecc0cf28f92.src","preCode":"    public TemplateChangeStatus changeTemplate(final DashboardSetting setting) throws IOException {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        WhereQueryImpl<SelectQueryImpl> query = select().all()\n                                                        .from(client.getDatabase(), UITemplate.INDEX_NAME)\n                                                        .where(eq(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id()));\n\n        QueryResult.Series series = client.queryForSingleSeries(query);\n        if (Objects.nonNull(series)) {\n            Point point = Point.measurement(UITemplate.INDEX_NAME)\n                               .fields(builder.data2Map(uiTemplate))\n                               .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                               .time(1L, TimeUnit.NANOSECONDS)\n                               .build();\n            client.write(point);\n            return TemplateChangeStatus.builder().status(true).build();\n        } else {\n            return TemplateChangeStatus.builder().status(false).message(\"Can't find the template\").build();\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/UITemplateManagementDAOImpl.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"8d33f0275ed958ddb4d45a1846a2ae1bb0900ddb","commitMessage":"@@@chore: code polish (#6025)\n\n","date":"2020-12-17 22:54:36","modifiedFileCount":"22","status":"M","submitter":"Daming"},{"authorTime":"2021-02-06 21:22:58","codes":[{"authorDate":"2021-02-06 21:22:58","commitOrder":4,"curCode":"    public TemplateChangeStatus addTemplate(final DashboardSetting setting) {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        final Point point = Point.measurement(UITemplate.INDEX_NAME)\n                                 .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                                 .fields(builder.entity2Storage(uiTemplate))\n                                 .time(1L, TimeUnit.NANOSECONDS)\n                                 .build();\n        client.write(point);\n        return TemplateChangeStatus.builder().status(true).build();\n    }\n","date":"2021-02-06 21:22:58","endLine":92,"groupId":"10860","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"addTemplate","params":"(finalDashboardSettingsetting)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c2/3f07fc59b4356f4c35a4a0762d5c3591fdf6af.src","preCode":"    public TemplateChangeStatus addTemplate(final DashboardSetting setting) {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        final Point point = Point.measurement(UITemplate.INDEX_NAME)\n                                 .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                                 .fields(builder.data2Map(uiTemplate))\n                                 .time(1L, TimeUnit.NANOSECONDS)\n                                 .build();\n        client.write(point);\n        return TemplateChangeStatus.builder().status(true).build();\n    }\n","realPath":"oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/UITemplateManagementDAOImpl.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2021-02-06 21:22:58","commitOrder":4,"curCode":"    public TemplateChangeStatus changeTemplate(final DashboardSetting setting) throws IOException {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        WhereQueryImpl<SelectQueryImpl> query = select().all()\n                                                        .from(client.getDatabase(), UITemplate.INDEX_NAME)\n                                                        .where(eq(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id()));\n\n        QueryResult.Series series = client.queryForSingleSeries(query);\n        if (Objects.nonNull(series)) {\n            final Point point = Point.measurement(UITemplate.INDEX_NAME)\n                                     .fields(builder.entity2Storage(uiTemplate))\n                                     .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                                     .time(1L, TimeUnit.NANOSECONDS)\n                                     .build();\n            client.write(point);\n            return TemplateChangeStatus.builder().status(true).build();\n        } else {\n            return TemplateChangeStatus.builder().status(false).message(\"Can't find the template\").build();\n        }\n    }\n","date":"2021-02-06 21:22:58","endLine":115,"groupId":"10860","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"changeTemplate","params":"(finalDashboardSettingsetting)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c2/3f07fc59b4356f4c35a4a0762d5c3591fdf6af.src","preCode":"    public TemplateChangeStatus changeTemplate(final DashboardSetting setting) throws IOException {\n        final UITemplate.Builder builder = new UITemplate.Builder();\n        final UITemplate uiTemplate = setting.toEntity();\n\n        WhereQueryImpl<SelectQueryImpl> query = select().all()\n                                                        .from(client.getDatabase(), UITemplate.INDEX_NAME)\n                                                        .where(eq(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id()));\n\n        QueryResult.Series series = client.queryForSingleSeries(query);\n        if (Objects.nonNull(series)) {\n            final Point point = Point.measurement(UITemplate.INDEX_NAME)\n                                     .fields(builder.data2Map(uiTemplate))\n                                     .tag(InfluxConstants.TagName.ID_COLUMN, uiTemplate.id())\n                                     .time(1L, TimeUnit.NANOSECONDS)\n                                     .build();\n            client.write(point);\n            return TemplateChangeStatus.builder().status(true).build();\n        } else {\n            return TemplateChangeStatus.builder().status(false).message(\"Can't find the template\").build();\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/query/UITemplateManagementDAOImpl.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"fc23dabf37a85cfc27482dbaf25b0109114f6ef7","commitMessage":"@@@Support multiple implementations of StorageBuilder in different storage implementations - stage 1. (#6334)\n\n","date":"2021-02-06 21:22:58","modifiedFileCount":"74","status":"M","submitter":"?? Wu Sheng"}]
