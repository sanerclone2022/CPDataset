[{"authorTime":"2020-11-09 00:01:12","codes":[{"authorDate":"2020-11-09 00:01:12","commitOrder":1,"curCode":"    public void testIngress2SidecarMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-ingress2sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            List<ServiceMeshMetric.Builder> result = this.analysis.analysis(requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.size());\n\n            ServiceMeshMetric.Builder incoming = result.get(0);\n            Assert.assertEquals(\"\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"productpage\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","date":"2020-11-09 00:01:12","endLine":111,"groupId":"3268","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIngress2SidecarMetric","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/71/8996c2b7a5d84dd91bc66fe0f872b17a5dfc09.src","preCode":"    public void testIngress2SidecarMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-ingress2sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            List<ServiceMeshMetric.Builder> result = this.analysis.analysis(requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.size());\n\n            ServiceMeshMetric.Builder incoming = result.get(0);\n            Assert.assertEquals(\"\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"productpage\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","realPath":"oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/envoy/als/k8s/K8SALSServiceMeshHTTPAnalysisTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"},{"authorDate":"2020-11-09 00:01:12","commitOrder":1,"curCode":"    public void testSidecar2SidecarServerMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-mesh-server-sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            List<ServiceMeshMetric.Builder> result = this.analysis.analysis(requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.size());\n\n            ServiceMeshMetric.Builder incoming = result.get(0);\n            Assert.assertEquals(\"productpage\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"review\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","date":"2020-11-09 00:01:12","endLine":128,"groupId":"3268","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSidecar2SidecarServerMetric","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/71/8996c2b7a5d84dd91bc66fe0f872b17a5dfc09.src","preCode":"    public void testSidecar2SidecarServerMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-mesh-server-sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            List<ServiceMeshMetric.Builder> result = this.analysis.analysis(requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.size());\n\n            ServiceMeshMetric.Builder incoming = result.get(0);\n            Assert.assertEquals(\"productpage\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"review\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","realPath":"oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/envoy/als/k8s/K8SALSServiceMeshHTTPAnalysisTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"}],"commitId":"8da9bf94abb23e34a3c76168abacc8b59a7e5d70","commitMessage":"@@@ALS analyzer based on Envoy metadata exchange (#5800)\n\n","date":"2020-11-09 00:01:12","modifiedFileCount":"5","status":"B","submitter":"kezhenxu94"},{"authorTime":"2021-03-02 22:40:30","codes":[{"authorDate":"2021-03-02 22:40:30","commitOrder":2,"curCode":"    public void testIngress2SidecarMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-ingress2sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            List<ServiceMeshMetric.Builder> result = this.analysis.analysis(new ArrayList<>(), requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.size());\n\n            ServiceMeshMetric.Builder incoming = result.get(0);\n            Assert.assertEquals(\"\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"productpage\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","date":"2021-03-02 22:40:30","endLine":112,"groupId":"2929","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIngress2SidecarMetric","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/2e/bf58126fe2bffefcdc4383f7d731dead0b920b.src","preCode":"    public void testIngress2SidecarMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-ingress2sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            List<ServiceMeshMetric.Builder> result = this.analysis.analysis(requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.size());\n\n            ServiceMeshMetric.Builder incoming = result.get(0);\n            Assert.assertEquals(\"\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"productpage\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","realPath":"oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/envoy/als/k8s/K8SALSServiceMeshHTTPAnalysisTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2021-03-02 22:40:30","commitOrder":2,"curCode":"    public void testSidecar2SidecarServerMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-mesh-server-sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            List<ServiceMeshMetric.Builder> result = this.analysis.analysis(new ArrayList<>(), requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.size());\n\n            ServiceMeshMetric.Builder incoming = result.get(0);\n            Assert.assertEquals(\"productpage\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"review\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","date":"2021-03-02 22:40:30","endLine":129,"groupId":"2929","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSidecar2SidecarServerMetric","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/2e/bf58126fe2bffefcdc4383f7d731dead0b920b.src","preCode":"    public void testSidecar2SidecarServerMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-mesh-server-sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            List<ServiceMeshMetric.Builder> result = this.analysis.analysis(requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.size());\n\n            ServiceMeshMetric.Builder incoming = result.get(0);\n            Assert.assertEquals(\"productpage\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"review\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","realPath":"oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/envoy/als/k8s/K8SALSServiceMeshHTTPAnalysisTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"}],"commitId":"de6a731d72fb87dd574da1d9b42495fdd29b4311","commitMessage":"@@@Save Envoy http access logs when error occurs (#6322)\n\n","date":"2021-03-02 22:40:30","modifiedFileCount":"16","status":"M","submitter":"Zhenxu Ke"},{"authorTime":"2021-05-07 23:25:20","codes":[{"authorDate":"2021-05-07 23:25:20","commitOrder":3,"curCode":"    public void testIngress2SidecarMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-ingress2sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            AccessLogAnalyzer.Result result = this.analysis.analysis(AccessLogAnalyzer.Result.builder().build(), requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.getMetrics().size());\n\n            ServiceMeshMetric.Builder incoming = result.getMetrics().get(0);\n            Assert.assertEquals(\"\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"productpage\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","date":"2021-05-07 23:25:20","endLine":111,"groupId":"10930","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIngress2SidecarMetric","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/ab/e70731ee301afca746f4b20a696bd901ac4985.src","preCode":"    public void testIngress2SidecarMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-ingress2sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            List<ServiceMeshMetric.Builder> result = this.analysis.analysis(new ArrayList<>(), requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.size());\n\n            ServiceMeshMetric.Builder incoming = result.get(0);\n            Assert.assertEquals(\"\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"productpage\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","realPath":"oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/envoy/als/k8s/K8SALSServiceMeshHTTPAnalysisTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2021-05-07 23:25:20","commitOrder":3,"curCode":"    public void testSidecar2SidecarServerMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-mesh-server-sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            AccessLogAnalyzer.Result result = this.analysis.analysis(AccessLogAnalyzer.Result.builder().build(), requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.getMetrics().size());\n\n            ServiceMeshMetric.Builder incoming = result.getMetrics().get(0);\n            Assert.assertEquals(\"productpage\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"review\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","date":"2021-05-07 23:25:20","endLine":128,"groupId":"10930","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSidecar2SidecarServerMetric","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/ab/e70731ee301afca746f4b20a696bd901ac4985.src","preCode":"    public void testSidecar2SidecarServerMetric() throws IOException {\n        try (InputStreamReader isr = new InputStreamReader(getResourceAsStream(\"envoy-mesh-server-sidecar.msg\"))) {\n            StreamAccessLogsMessage.Builder requestBuilder = StreamAccessLogsMessage.newBuilder();\n            JsonFormat.parser().merge(isr, requestBuilder);\n\n            List<ServiceMeshMetric.Builder> result = this.analysis.analysis(new ArrayList<>(), requestBuilder.getIdentifier(), requestBuilder.getHttpLogs().getLogEntry(0), Role.SIDECAR);\n\n            Assert.assertEquals(1, result.size());\n\n            ServiceMeshMetric.Builder incoming = result.get(0);\n            Assert.assertEquals(\"productpage\", incoming.getSourceServiceName());\n            Assert.assertEquals(\"review\", incoming.getDestServiceName());\n            Assert.assertEquals(DetectPoint.server, incoming.getDetectPoint());\n        }\n    }\n","realPath":"oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/test/java/org/apache/skywalking/oap/server/receiver/envoy/als/k8s/K8SALSServiceMeshHTTPAnalysisTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"4103551092b51f733693daa1e7f3e9aba95141e5","commitMessage":"@@@bugfix: Envoy error logs are not persisted when no metrics are generated (#6911)\n\n","date":"2021-05-07 23:25:20","modifiedFileCount":"10","status":"M","submitter":"Zhenxu Ke"}]
