[{"authorTime":"2020-06-01 23:06:14","codes":[{"authorDate":"2020-05-08 21:21:03","commitOrder":11,"curCode":"    public void create(ModuleDefineHolder moduleDefineHolder, Stream stream, Class<? extends TopN> topNClass) throws StorageException {\n        if (DisableRegister.INSTANCE.include(stream.name())) {\n            return;\n        }\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IRecordDAO recordDAO;\n        try {\n            recordDAO = storageDAO.newRecordDao(stream.builder().newInstance());\n        } catch (InstantiationException | IllegalAccessException e) {\n            throw new UnexpectedException(\"Create \" + stream.builder()\n                                                            .getSimpleName() + \" top n record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        Model model = modelSetter.add(\n            topNClass, stream.scopeId(), new Storage(stream.name(), DownSampling.Second), true);\n\n        TopNWorker persistentWorker = new TopNWorker(\n            moduleDefineHolder, model, topSize, topNWorkerReportCycle * 60 * 1000L, recordDAO);\n        persistentWorkers.add(persistentWorker);\n        workers.put(topNClass, persistentWorker);\n    }\n","date":"2020-05-08 21:21:03","endLine":89,"groupId":"2790","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(ModuleDefineHoldermoduleDefineHolder@Streamstream@Class<?extendsTopN>topNClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/8c/fc99fa9946bf8f96383b9db608f699909efc02.src","preCode":"    public void create(ModuleDefineHolder moduleDefineHolder, Stream stream, Class<? extends TopN> topNClass) throws StorageException {\n        if (DisableRegister.INSTANCE.include(stream.name())) {\n            return;\n        }\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IRecordDAO recordDAO;\n        try {\n            recordDAO = storageDAO.newRecordDao(stream.builder().newInstance());\n        } catch (InstantiationException | IllegalAccessException e) {\n            throw new UnexpectedException(\"Create \" + stream.builder()\n                                                            .getSimpleName() + \" top n record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        Model model = modelSetter.add(\n            topNClass, stream.scopeId(), new Storage(stream.name(), DownSampling.Second), true);\n\n        TopNWorker persistentWorker = new TopNWorker(\n            moduleDefineHolder, model, topSize, topNWorkerReportCycle * 60 * 1000L, recordDAO);\n        persistentWorkers.add(persistentWorker);\n        workers.put(topNClass, persistentWorker);\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/TopNStreamProcessor.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"NB"},{"authorDate":"2020-06-01 23:06:14","commitOrder":11,"curCode":"    public void create(final ModuleDefineHolder moduleDefineHolder, final Stream stream, final Class<? extends ManagementData> streamClass) throws StorageException {\n        if (DisableRegister.INSTANCE.include(stream.name())) {\n            return;\n        }\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IManagementDAO managementDAO;\n        try {\n            managementDAO = storageDAO.newManagementDao(stream.builder().newInstance());\n        } catch (InstantiationException | IllegalAccessException e) {\n            throw new UnexpectedException(\"Create \" + stream.builder()\n                    .getSimpleName() + \" none stream record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        Model model = modelSetter.add(streamClass, stream.scopeId(), new Storage(stream.name(), DownSampling.None), false);\n\n        final ManagementPersistentWorker persistentWorker = new ManagementPersistentWorker(moduleDefineHolder, model, managementDAO);\n        workers.put(streamClass, persistentWorker);\n    }\n","date":"2020-06-01 23:06:14","endLine":81,"groupId":"2790","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(finalModuleDefineHoldermoduleDefineHolder@finalStreamstream@finalClass<?extendsManagementData>streamClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/8a/44a4da0caa7f2370d71f9901f45d604e1fbb3d.src","preCode":"    public void create(final ModuleDefineHolder moduleDefineHolder, final Stream stream, final Class<? extends ManagementData> streamClass) throws StorageException {\n        if (DisableRegister.INSTANCE.include(stream.name())) {\n            return;\n        }\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IManagementDAO managementDAO;\n        try {\n            managementDAO = storageDAO.newManagementDao(stream.builder().newInstance());\n        } catch (InstantiationException | IllegalAccessException e) {\n            throw new UnexpectedException(\"Create \" + stream.builder()\n                    .getSimpleName() + \" none stream record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        Model model = modelSetter.add(streamClass, stream.scopeId(), new Storage(stream.name(), DownSampling.None), false);\n\n        final ManagementPersistentWorker persistentWorker = new ManagementPersistentWorker(moduleDefineHolder, model, managementDAO);\n        workers.put(streamClass, persistentWorker);\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/ManagementStreamProcessor.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"}],"commitId":"d094a0f7c0b4a2cf0de38735128b5c07181e30d2","commitMessage":"@@@Support UI template management. (#4843)\n\n","date":"2020-06-01 23:06:14","modifiedFileCount":"32","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2021-02-07 10:37:14","codes":[{"authorDate":"2021-02-07 10:37:14","commitOrder":12,"curCode":"    public void create(ModuleDefineHolder moduleDefineHolder, Stream stream, Class<? extends TopN> topNClass) throws StorageException {\n        final StorageBuilderFactory storageBuilderFactory = moduleDefineHolder.find(StorageModule.NAME)\n                                                                              .provider()\n                                                                              .getService(StorageBuilderFactory.class);\n        final Class<? extends StorageBuilder> builder = storageBuilderFactory.builderOf(topNClass, stream.builder());\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IRecordDAO recordDAO;\n        try {\n            recordDAO = storageDAO.newRecordDao(builder.getDeclaredConstructor().newInstance());\n        } catch (InstantiationException | IllegalAccessException | NoSuchMethodException | InvocationTargetException e) {\n            throw new UnexpectedException(\n                \"Create \" + stream.builder().getSimpleName() + \" top n record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        Model model = modelSetter.add(\n            topNClass, stream.scopeId(), new Storage(stream.name(), DownSampling.Second), true);\n\n        TopNWorker persistentWorker = new TopNWorker(\n            moduleDefineHolder, model, topSize, topNWorkerReportCycle * 60 * 1000L, recordDAO);\n        persistentWorkers.add(persistentWorker);\n        workers.put(topNClass, persistentWorker);\n    }\n","date":"2021-02-07 10:37:14","endLine":93,"groupId":"1762","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(ModuleDefineHoldermoduleDefineHolder@Streamstream@Class<?extendsTopN>topNClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/5a/0c6a4793d28fa777e93d0c66fd5460b8a766c2.src","preCode":"    public void create(ModuleDefineHolder moduleDefineHolder, Stream stream, Class<? extends TopN> topNClass) throws StorageException {\n        if (DisableRegister.INSTANCE.include(stream.name())) {\n            return;\n        }\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IRecordDAO recordDAO;\n        try {\n            recordDAO = storageDAO.newRecordDao(stream.builder().newInstance());\n        } catch (InstantiationException | IllegalAccessException e) {\n            throw new UnexpectedException(\"Create \" + stream.builder()\n                                                            .getSimpleName() + \" top n record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        Model model = modelSetter.add(\n            topNClass, stream.scopeId(), new Storage(stream.name(), DownSampling.Second), true);\n\n        TopNWorker persistentWorker = new TopNWorker(\n            moduleDefineHolder, model, topSize, topNWorkerReportCycle * 60 * 1000L, recordDAO);\n        persistentWorkers.add(persistentWorker);\n        workers.put(topNClass, persistentWorker);\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/TopNStreamProcessor.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2021-02-07 10:37:14","commitOrder":12,"curCode":"    public void create(final ModuleDefineHolder moduleDefineHolder, final Stream stream, final Class<? extends ManagementData> streamClass) throws StorageException {\n        final StorageBuilderFactory storageBuilderFactory = moduleDefineHolder.find(StorageModule.NAME)\n                                                                              .provider()\n                                                                              .getService(StorageBuilderFactory.class);\n        final Class<? extends StorageBuilder> builder = storageBuilderFactory.builderOf(streamClass, stream.builder());\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IManagementDAO managementDAO;\n        try {\n            managementDAO = storageDAO.newManagementDao(builder.getDeclaredConstructor().newInstance());\n        } catch (InstantiationException | IllegalAccessException | NoSuchMethodException | InvocationTargetException e) {\n            throw new UnexpectedException(\"Create \" + stream.builder()\n                    .getSimpleName() + \" none stream record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        Model model = modelSetter.add(streamClass, stream.scopeId(), new Storage(stream.name(), DownSampling.None), false);\n\n        final ManagementPersistentWorker persistentWorker = new ManagementPersistentWorker(moduleDefineHolder, model, managementDAO);\n        workers.put(streamClass, persistentWorker);\n    }\n","date":"2021-02-07 10:37:14","endLine":84,"groupId":"1762","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(finalModuleDefineHoldermoduleDefineHolder@finalStreamstream@finalClass<?extendsManagementData>streamClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/e5/16128b18be3e89b234dc59412faeeffe948813.src","preCode":"    public void create(final ModuleDefineHolder moduleDefineHolder, final Stream stream, final Class<? extends ManagementData> streamClass) throws StorageException {\n        if (DisableRegister.INSTANCE.include(stream.name())) {\n            return;\n        }\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IManagementDAO managementDAO;\n        try {\n            managementDAO = storageDAO.newManagementDao(stream.builder().newInstance());\n        } catch (InstantiationException | IllegalAccessException e) {\n            throw new UnexpectedException(\"Create \" + stream.builder()\n                    .getSimpleName() + \" none stream record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        Model model = modelSetter.add(streamClass, stream.scopeId(), new Storage(stream.name(), DownSampling.None), false);\n\n        final ManagementPersistentWorker persistentWorker = new ManagementPersistentWorker(moduleDefineHolder, model, managementDAO);\n        workers.put(streamClass, persistentWorker);\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/ManagementStreamProcessor.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"5e8f1eb5528911f924ffca451af20dcdf6151971","commitMessage":"@@@Support multiple implementations of StorageBuilder in different storage implementations - stage 2 (#6336)\n\n","date":"2021-02-07 10:37:14","modifiedFileCount":"16","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2021-07-15 18:06:11","codes":[{"authorDate":"2021-07-15 18:06:11","commitOrder":13,"curCode":"    public void create(ModuleDefineHolder moduleDefineHolder,\n                       Stream stream,\n                       Class<? extends TopN> topNClass) throws StorageException {\n        final StorageBuilderFactory storageBuilderFactory = moduleDefineHolder.find(StorageModule.NAME)\n                                                                              .provider()\n                                                                              .getService(StorageBuilderFactory.class);\n        final Class<? extends StorageBuilder> builder = storageBuilderFactory.builderOf(topNClass, stream.builder());\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IRecordDAO recordDAO;\n        try {\n            recordDAO = storageDAO.newRecordDao(builder.getDeclaredConstructor().newInstance());\n        } catch (InstantiationException | IllegalAccessException | NoSuchMethodException | InvocationTargetException e) {\n            throw new UnexpectedException(\n                \"Create \" + stream.builder().getSimpleName() + \" top n record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        \r\n        Model model = modelSetter.add(\n            topNClass, stream.scopeId(), new Storage(stream.name(), false, DownSampling.Second), true);\n\n        TopNWorker persistentWorker = new TopNWorker(\n            moduleDefineHolder, model, topSize, topNWorkerReportCycle * 60 * 1000L, recordDAO);\n        persistentWorkers.add(persistentWorker);\n        workers.put(topNClass, persistentWorker);\n    }\n","date":"2021-07-15 18:06:11","endLine":96,"groupId":"10477","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"create","params":"(ModuleDefineHoldermoduleDefineHolder@Streamstream@Class<?extendsTopN>topNClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/26/a8b373b9121f07656ca0893709cfef695d0130.src","preCode":"    public void create(ModuleDefineHolder moduleDefineHolder, Stream stream, Class<? extends TopN> topNClass) throws StorageException {\n        final StorageBuilderFactory storageBuilderFactory = moduleDefineHolder.find(StorageModule.NAME)\n                                                                              .provider()\n                                                                              .getService(StorageBuilderFactory.class);\n        final Class<? extends StorageBuilder> builder = storageBuilderFactory.builderOf(topNClass, stream.builder());\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IRecordDAO recordDAO;\n        try {\n            recordDAO = storageDAO.newRecordDao(builder.getDeclaredConstructor().newInstance());\n        } catch (InstantiationException | IllegalAccessException | NoSuchMethodException | InvocationTargetException e) {\n            throw new UnexpectedException(\n                \"Create \" + stream.builder().getSimpleName() + \" top n record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        Model model = modelSetter.add(\n            topNClass, stream.scopeId(), new Storage(stream.name(), DownSampling.Second), true);\n\n        TopNWorker persistentWorker = new TopNWorker(\n            moduleDefineHolder, model, topSize, topNWorkerReportCycle * 60 * 1000L, recordDAO);\n        persistentWorkers.add(persistentWorker);\n        workers.put(topNClass, persistentWorker);\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/TopNStreamProcessor.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2021-07-15 18:06:11","commitOrder":13,"curCode":"    public void create(final ModuleDefineHolder moduleDefineHolder, final Stream stream, final Class<? extends ManagementData> streamClass) throws StorageException {\n        final StorageBuilderFactory storageBuilderFactory = moduleDefineHolder.find(StorageModule.NAME)\n                                                                              .provider()\n                                                                              .getService(StorageBuilderFactory.class);\n        final Class<? extends StorageBuilder> builder = storageBuilderFactory.builderOf(streamClass, stream.builder());\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IManagementDAO managementDAO;\n        try {\n            managementDAO = storageDAO.newManagementDao(builder.getDeclaredConstructor().newInstance());\n        } catch (InstantiationException | IllegalAccessException | NoSuchMethodException | InvocationTargetException e) {\n            throw new UnexpectedException(\"Create \" + stream.builder()\n                    .getSimpleName() + \" none stream record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        \r\n        Model model = modelSetter.add(streamClass, stream.scopeId(), new Storage(stream.name(), false, DownSampling.None), false);\n\n        final ManagementPersistentWorker persistentWorker = new ManagementPersistentWorker(moduleDefineHolder, model, managementDAO);\n        workers.put(streamClass, persistentWorker);\n    }\n","date":"2021-07-15 18:06:11","endLine":85,"groupId":"10477","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"create","params":"(finalModuleDefineHoldermoduleDefineHolder@finalStreamstream@finalClass<?extendsManagementData>streamClass)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/fb/5ceec557b419d741f7e6ef4a93c484de87c1c4.src","preCode":"    public void create(final ModuleDefineHolder moduleDefineHolder, final Stream stream, final Class<? extends ManagementData> streamClass) throws StorageException {\n        final StorageBuilderFactory storageBuilderFactory = moduleDefineHolder.find(StorageModule.NAME)\n                                                                              .provider()\n                                                                              .getService(StorageBuilderFactory.class);\n        final Class<? extends StorageBuilder> builder = storageBuilderFactory.builderOf(streamClass, stream.builder());\n\n        StorageDAO storageDAO = moduleDefineHolder.find(StorageModule.NAME).provider().getService(StorageDAO.class);\n        IManagementDAO managementDAO;\n        try {\n            managementDAO = storageDAO.newManagementDao(builder.getDeclaredConstructor().newInstance());\n        } catch (InstantiationException | IllegalAccessException | NoSuchMethodException | InvocationTargetException e) {\n            throw new UnexpectedException(\"Create \" + stream.builder()\n                    .getSimpleName() + \" none stream record DAO failure.\", e);\n        }\n\n        ModelCreator modelSetter = moduleDefineHolder.find(CoreModule.NAME).provider().getService(ModelCreator.class);\n        Model model = modelSetter.add(streamClass, stream.scopeId(), new Storage(stream.name(), DownSampling.None), false);\n\n        final ManagementPersistentWorker persistentWorker = new ManagementPersistentWorker(moduleDefineHolder, model, managementDAO);\n        workers.put(streamClass, persistentWorker);\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/worker/ManagementStreamProcessor.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"c59ee900299d24d15780c0b1600c823c3ea111eb","commitMessage":"@@@Performance: optimize IDs read of ElasticSearch storage options(6 and 7) (#7307)\n\n* Performance: optimize IDs read of ElasticSearch storage options(6 and 7). Use the physical index rather than template alias name.","date":"2021-07-15 18:06:11","modifiedFileCount":"15","status":"M","submitter":"?? Wu Sheng"}]
