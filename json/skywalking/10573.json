[{"authorTime":"2020-10-05 20:16:18","codes":[{"authorDate":"2021-01-18 09:24:20","commitOrder":2,"curCode":"    private void sendAlarmMessage(CloseableHttpClient httpClient, String url, String requestBody) {\n        try {\n            HttpPost post = new HttpPost(url);\n            post.setConfig(requestConfig);\n            post.setHeader(HttpHeaders.ACCEPT, HttpHeaderValues.APPLICATION_JSON.toString());\n            post.setHeader(HttpHeaders.CONTENT_TYPE, HttpHeaderValues.APPLICATION_JSON.toString());\n            StringEntity entity = new StringEntity(requestBody, ContentType.APPLICATION_JSON);\n            post.setEntity(entity);\n            CloseableHttpResponse httpResponse = httpClient.execute(post);\n            StatusLine statusLine = httpResponse.getStatusLine();\n            if (statusLine != null && statusLine.getStatusCode() != HttpStatus.SC_OK) {\n                log.error(\"send feishu alarm to {} failure. Response code: {}, Response content: {}\", url, statusLine.getStatusCode(),\n                        EntityUtils.toString(httpResponse.getEntity()));\n            }\n        } catch (Throwable e) {\n            log.error(\"send feishu alarm to {} failure.\", url, e);\n        }\n    }\n","date":"2021-01-18 09:24:20","endLine":172,"groupId":"1774","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sendAlarmMessage","params":"(CloseableHttpClienthttpClient@Stringurl@StringrequestBody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/bf/f3a558fa5766b3910332c721634f0f19983167.src","preCode":"    private void sendAlarmMessage(CloseableHttpClient httpClient, String url, String requestBody) {\n        try {\n            HttpPost post = new HttpPost(url);\n            post.setConfig(requestConfig);\n            post.setHeader(HttpHeaders.ACCEPT, HttpHeaderValues.APPLICATION_JSON.toString());\n            post.setHeader(HttpHeaders.CONTENT_TYPE, HttpHeaderValues.APPLICATION_JSON.toString());\n            StringEntity entity = new StringEntity(requestBody, ContentType.APPLICATION_JSON);\n            post.setEntity(entity);\n            CloseableHttpResponse httpResponse = httpClient.execute(post);\n            StatusLine statusLine = httpResponse.getStatusLine();\n            if (statusLine != null && statusLine.getStatusCode() != HttpStatus.SC_OK) {\n                log.error(\"send feishu alarm to {} failure. Response code: {}, Response content: {}\", url, statusLine.getStatusCode(),\n                        EntityUtils.toString(httpResponse.getEntity()));\n            }\n        } catch (Throwable e) {\n            log.error(\"send feishu alarm to {} failure.\", url, e);\n        }\n    }\n","realPath":"oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/feishu/FeishuHookCallback.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"},{"authorDate":"2020-10-05 20:16:18","commitOrder":2,"curCode":"    private void sendAlarmMessage(CloseableHttpClient httpClient, String url, String requestBody) {\n        try {\n            HttpPost post = new HttpPost(url);\n            post.setConfig(requestConfig);\n            post.setHeader(HttpHeaders.ACCEPT, HttpHeaderValues.APPLICATION_JSON.toString());\n            post.setHeader(HttpHeaders.CONTENT_TYPE, HttpHeaderValues.APPLICATION_JSON.toString());\n            StringEntity entity = new StringEntity(requestBody, ContentType.APPLICATION_JSON);\n            post.setEntity(entity);\n            CloseableHttpResponse httpResponse = httpClient.execute(post);\n            StatusLine statusLine = httpResponse.getStatusLine();\n            if (statusLine != null && statusLine.getStatusCode() != HttpStatus.SC_OK) {\n                log.error(\"send dingtalk alarm to {} failure. Response code: {}, Response content: {}\", url, statusLine.getStatusCode(),\n                        EntityUtils.toString(httpResponse.getEntity()));\n            }\n        } catch (Throwable e) {\n            log.error(\"send dingtalk alarm to {} failure.\", url, e);\n        }\n    }\n","date":"2020-10-05 20:16:18","endLine":153,"groupId":"1774","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAlarmMessage","params":"(CloseableHttpClienthttpClient@Stringurl@StringrequestBody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/5a/cc63a807f550ec0d66408c7a657b1ad3fe9331.src","preCode":"    private void sendAlarmMessage(CloseableHttpClient httpClient, String url, String requestBody) {\n        try {\n            HttpPost post = new HttpPost(url);\n            post.setConfig(requestConfig);\n            post.setHeader(HttpHeaders.ACCEPT, HttpHeaderValues.APPLICATION_JSON.toString());\n            post.setHeader(HttpHeaders.CONTENT_TYPE, HttpHeaderValues.APPLICATION_JSON.toString());\n            StringEntity entity = new StringEntity(requestBody, ContentType.APPLICATION_JSON);\n            post.setEntity(entity);\n            CloseableHttpResponse httpResponse = httpClient.execute(post);\n            StatusLine statusLine = httpResponse.getStatusLine();\n            if (statusLine != null && statusLine.getStatusCode() != HttpStatus.SC_OK) {\n                log.error(\"send dingtalk alarm to {} failure. Response code: {}, Response content: {}\", url, statusLine.getStatusCode(),\n                        EntityUtils.toString(httpResponse.getEntity()));\n            }\n        } catch (Throwable e) {\n            log.error(\"send dingtalk alarm to {} failure.\", url, e);\n        }\n    }\n","realPath":"oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/dingtalk/DingtalkHookCallback.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"NB"}],"commitId":"4e43f227b4a579b7bd48996974b5872d30c191f1","commitMessage":"@@@Support Alarm to feishu (#6193)\n\n","date":"2021-01-18 09:24:20","modifiedFileCount":"5","status":"M","submitter":"HendSame"},{"authorTime":"2021-02-25 10:05:08","codes":[{"authorDate":"2021-02-25 10:05:08","commitOrder":3,"curCode":"    private void sendAlarmMessage(CloseableHttpClient httpClient, String url, String requestBody) {\n        CloseableHttpResponse httpResponse = null;\n        try {\n            HttpPost post = new HttpPost(url);\n            post.setConfig(requestConfig);\n            post.setHeader(HttpHeaders.ACCEPT, HttpHeaderValues.APPLICATION_JSON.toString());\n            post.setHeader(HttpHeaders.CONTENT_TYPE, HttpHeaderValues.APPLICATION_JSON.toString());\n            StringEntity entity = new StringEntity(requestBody, ContentType.APPLICATION_JSON);\n            post.setEntity(entity);\n            httpResponse = httpClient.execute(post);\n            StatusLine statusLine = httpResponse.getStatusLine();\n            if (statusLine != null && statusLine.getStatusCode() != HttpStatus.SC_OK) {\n                log.error(\"send feishu alarm to {} failure. Response code: {}, Response content: {}\", url, statusLine.getStatusCode(),\n                        EntityUtils.toString(httpResponse.getEntity()));\n            }\n        } catch (Throwable e) {\n            log.error(\"send feishu alarm to {} failure.\", url, e);\n        } finally {\n            if (httpResponse != null) {\n                try {\n                    httpResponse.close();\n                } catch (IOException e) {\n                    log.error(e.getMessage(), e);\n                }\n\n            }\n        }\n    }\n","date":"2021-02-25 10:05:08","endLine":182,"groupId":"10573","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"sendAlarmMessage","params":"(CloseableHttpClienthttpClient@Stringurl@StringrequestBody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/02/a9a3a75faf2b5497609c4c3b545c54718b2841.src","preCode":"    private void sendAlarmMessage(CloseableHttpClient httpClient, String url, String requestBody) {\n        try {\n            HttpPost post = new HttpPost(url);\n            post.setConfig(requestConfig);\n            post.setHeader(HttpHeaders.ACCEPT, HttpHeaderValues.APPLICATION_JSON.toString());\n            post.setHeader(HttpHeaders.CONTENT_TYPE, HttpHeaderValues.APPLICATION_JSON.toString());\n            StringEntity entity = new StringEntity(requestBody, ContentType.APPLICATION_JSON);\n            post.setEntity(entity);\n            CloseableHttpResponse httpResponse = httpClient.execute(post);\n            StatusLine statusLine = httpResponse.getStatusLine();\n            if (statusLine != null && statusLine.getStatusCode() != HttpStatus.SC_OK) {\n                log.error(\"send feishu alarm to {} failure. Response code: {}, Response content: {}\", url, statusLine.getStatusCode(),\n                        EntityUtils.toString(httpResponse.getEntity()));\n            }\n        } catch (Throwable e) {\n            log.error(\"send feishu alarm to {} failure.\", url, e);\n        }\n    }\n","realPath":"oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/feishu/FeishuHookCallback.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"},{"authorDate":"2021-02-25 10:05:08","commitOrder":3,"curCode":"    private void sendAlarmMessage(CloseableHttpClient httpClient, String url, String requestBody) {\n        CloseableHttpResponse httpResponse = null;\n        try {\n            HttpPost post = new HttpPost(url);\n            post.setConfig(requestConfig);\n            post.setHeader(HttpHeaders.ACCEPT, HttpHeaderValues.APPLICATION_JSON.toString());\n            post.setHeader(HttpHeaders.CONTENT_TYPE, HttpHeaderValues.APPLICATION_JSON.toString());\n            StringEntity entity = new StringEntity(requestBody, ContentType.APPLICATION_JSON);\n            post.setEntity(entity);\n            httpResponse = httpClient.execute(post);\n            StatusLine statusLine = httpResponse.getStatusLine();\n            if (statusLine != null && statusLine.getStatusCode() != HttpStatus.SC_OK) {\n                log.error(\"send dingtalk alarm to {} failure. Response code: {}, Response content: {}\", url, statusLine.getStatusCode(),\n                        EntityUtils.toString(httpResponse.getEntity()));\n            }\n        } catch (Throwable e) {\n            log.error(\"send dingtalk alarm to {} failure.\", url, e);\n        } finally {\n            if (httpResponse != null) {\n                try {\n                    httpResponse.close();\n                } catch (IOException e) {\n                    log.error(e.getMessage(), e);\n                }\n\n            }\n        }\n    }\n","date":"2021-02-25 10:05:08","endLine":163,"groupId":"10573","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAlarmMessage","params":"(CloseableHttpClienthttpClient@Stringurl@StringrequestBody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/e2/ce79324509e6189b79345c37dc43414e39dbdf.src","preCode":"    private void sendAlarmMessage(CloseableHttpClient httpClient, String url, String requestBody) {\n        try {\n            HttpPost post = new HttpPost(url);\n            post.setConfig(requestConfig);\n            post.setHeader(HttpHeaders.ACCEPT, HttpHeaderValues.APPLICATION_JSON.toString());\n            post.setHeader(HttpHeaders.CONTENT_TYPE, HttpHeaderValues.APPLICATION_JSON.toString());\n            StringEntity entity = new StringEntity(requestBody, ContentType.APPLICATION_JSON);\n            post.setEntity(entity);\n            CloseableHttpResponse httpResponse = httpClient.execute(post);\n            StatusLine statusLine = httpResponse.getStatusLine();\n            if (statusLine != null && statusLine.getStatusCode() != HttpStatus.SC_OK) {\n                log.error(\"send dingtalk alarm to {} failure. Response code: {}, Response content: {}\", url, statusLine.getStatusCode(),\n                        EntityUtils.toString(httpResponse.getEntity()));\n            }\n        } catch (Throwable e) {\n            log.error(\"send dingtalk alarm to {} failure.\", url, e);\n        }\n    }\n","realPath":"oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/dingtalk/DingtalkHookCallback.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"M"}],"commitId":"5b49f8f9fd7aa0095e1922c2e6225948e244b57c","commitMessage":"@@@Fix alarm httpclient connection leak (#6431)\n\n","date":"2021-02-25 10:05:08","modifiedFileCount":"5","status":"M","submitter":"haoyann"}]
