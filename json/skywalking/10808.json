[{"authorTime":"2018-09-04 12:06:03","codes":[{"authorDate":"2018-10-28 10:31:58","commitOrder":2,"curCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.initialize();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        } catch (ClientException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2018-10-28 10:31:58","endLine":134,"groupId":"1452","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c6/c52df6d240612658009cfe4169056e9e7bf8a2.src","preCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.initialize();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        } catch (ClientException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2018-09-04 12:06:03","commitOrder":2,"curCode":"    public void start() throws ModuleStartException {\n        try {\n            nameSpace.setNameSpace(config.getNameSpace());\n            elasticSearchClient.initialize();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2018-09-04 12:06:03","endLine":91,"groupId":"433","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/8a/cc0936dc5a6192a768c845920fb59a2a6657f5.src","preCode":"    public void start() throws ModuleStartException {\n        try {\n            nameSpace.setNameSpace(config.getNameSpace());\n            elasticSearchClient.initialize();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"NB"}],"commitId":"a9489b706739d9ca994997ac071013c9e4afd0ce","commitMessage":"@@@H2 storage (#1712)\n\n* H2 storage code skeleton.\n\n* Add batch dao for H2.\n\n* Fix wrong refactor.\n\n* Add codes of other dao. No metric dao.  wait for @peng-yongsheng new PR.\n\n* Change license of distribution\n\n* Add topology query in H2.\n\n* Add more daos.\n\n* Add some daos.\n\n* Commit all H2 daos. Wait @peng-yongsheng to submit new IAggregationQueryDAO interface.\n\n* Fix some CIs\n\n* Fix wrong refactor.  which causes h2 plugin failure.\n\n* Fix all codes of H2 storage. :) and CI should pass. No test.\n\n* Fix CI and typo\n\n* Fix connection closed.\n\n* Fix register bug\n\n* no message\n\n* Fixed service inventory register bug.\n\n* Fix a compile issue.\n\n* Sync change\n\n* Reset es as default storage.\n\n* Fix rat\n\n* Fix H2 compile issue.\n\n* Fix bugs for H2 storage.\n\n* Fix bug in mesh.\n\n* 1. Fix Thermodynamic query bug\n2. Fix service inventory query bug\n3. Fix missing traceid in trace query bug\n\n* Fix query bug.\n\n* Submit reverse caused by prev PR.\n\n* Fix duplicate spans.\n\n* Use H2 as default storage implementor.\n\n* Fix bug in topology query.\n\n* Fix CI\n\n* Fix rat\n\n* Fix two query in H2 storage.\n\n* Fix H2 query\n\n* Make release running in H2 mode and develop mode running is ES mode in default\n","date":"2018-10-28 10:31:58","modifiedFileCount":"17","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2018-11-22 20:50:27","codes":[{"authorDate":"2018-11-22 20:50:27","commitOrder":3,"curCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2018-11-22 20:50:27","endLine":99,"groupId":"1452","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/ac/8cb361d28b238bd8e8acbb54d79d5e43a5031b.src","preCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.initialize();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        } catch (ClientException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2018-11-22 20:50:27","commitOrder":3,"curCode":"    public void start() throws ModuleStartException {\n        try {\n            nameSpace.setNameSpace(config.getNameSpace());\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2018-11-22 20:50:27","endLine":101,"groupId":"433","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/10/99d739de258da2c1888e1b0ac13621d156b4c4.src","preCode":"    public void start() throws ModuleStartException {\n        try {\n            nameSpace.setNameSpace(config.getNameSpace());\n            elasticSearchClient.initialize();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"7c8a683c2f52353669ac1317e958d28400f8054c","commitMessage":"@@@gRPC client usage improve (#1946)\n\n* Close the clients which are unreachable.\nRemote client manager test case and comments.\n\n* Test the GRPCRemote client.\n\n* 1. Catch the throwable for onComplete method cause of it will throw exception when connection lost.\n2. Check the gRPC channel state.  send message when state is ready.  wait 5 second when state is not ready.\n\nNotice: gRPC channel getState with true parameter will trigger reconnect operation.\n\n* gRPC client will reconnect to the server when network recorvered.\n\n* Recovery application.yml\n\n* Recovery proto module commit id.\n\n* no message\n\n* Fixed compile error.\n","date":"2018-11-22 20:50:27","modifiedFileCount":"28","status":"M","submitter":"??? pengys"},{"authorTime":"2018-12-06 21:03:00","codes":[{"authorDate":"2018-11-22 20:50:27","commitOrder":4,"curCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2018-11-22 20:50:27","endLine":99,"groupId":"1452","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/ac/8cb361d28b238bd8e8acbb54d79d5e43a5031b.src","preCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"N"},{"authorDate":"2018-12-06 21:03:00","commitOrder":4,"curCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2018-12-06 21:03:00","endLine":97,"groupId":"433","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/e0/1606e2b696ba4fabe771fddd8cd704e9fd8ac7.src","preCode":"    public void start() throws ModuleStartException {\n        try {\n            nameSpace.setNameSpace(config.getNameSpace());\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"27c475f74c9e5ea4e1d6052934686de68743fd1a","commitMessage":"@@@1. Make storage and cluster using same name space. (#2014)\n\n2. Zookeeper implementation of the cluster module using name space to support using same zookeeper cluster by different OAP clusters.","date":"2018-12-06 21:03:00","modifiedFileCount":"6","status":"M","submitter":"??? pengys"},{"authorTime":"2018-12-06 21:03:00","codes":[{"authorDate":"2019-01-20 16:41:06","commitOrder":5,"curCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-01-20 16:41:06","endLine":102,"groupId":"1827","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a7/6fb49a7d9518e68a86f82850ca7861fc49dd10.src","preCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2018-12-06 21:03:00","commitOrder":5,"curCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2018-12-06 21:03:00","endLine":97,"groupId":"433","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/e0/1606e2b696ba4fabe771fddd8cd704e9fd8ac7.src","preCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"}],"commitId":"33f5cc19b54d0988304a3ed9e4477cdc3314cd6d","commitMessage":"@@@Fixed the inventory register lock invalid bug. (#2184)\n\n* #2183\n\nMerge commit into master.\n\n* Make the h2 register lock same as mysql.\n","date":"2019-01-20 16:41:06","modifiedFileCount":"17","status":"M","submitter":"??? pengys"},{"authorTime":"2019-04-11 20:08:51","codes":[{"authorDate":"2019-01-20 16:41:06","commitOrder":6,"curCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-01-20 16:41:06","endLine":102,"groupId":"1827","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a7/6fb49a7d9518e68a86f82850ca7861fc49dd10.src","preCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"},{"authorDate":"2019-04-11 20:08:51","commitOrder":6,"curCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-04-11 20:08:51","endLine":105,"groupId":"433","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/41/9ed56ca57794cf4f1f5eff6936af9e7df3511e.src","preCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"73e8853fa51fc12a94fc701dad131d5c101e6081","commitMessage":"@@@Provide elasticsearch template operation method. (#2474)\n\n* Provide elasticsearch template operation method.\n\n* Fixed compile failure issue.\n","date":"2019-04-11 20:08:51","modifiedFileCount":"14","status":"M","submitter":"??? pengys"},{"authorTime":"2019-06-03 18:46:42","codes":[{"authorDate":"2019-01-20 16:41:06","commitOrder":7,"curCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-01-20 16:41:06","endLine":102,"groupId":"1827","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a7/6fb49a7d9518e68a86f82850ca7861fc49dd10.src","preCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"},{"authorDate":"2019-06-03 18:46:42","commitOrder":7,"curCode":"    public void start() throws ModuleStartException {\n        overrideCoreModuleTTLConfig();\n\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-06-03 18:46:42","endLine":106,"groupId":"433","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/6b/90910160a3289ba0971d6eaae93e22b1e92ed2.src","preCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"5036e8334301322d49973005cd98513c17b0f28f","commitMessage":"@@@Good news of an important feature: time series implementation in Elasticsearch storage. (#2808)\n\n* The new feature of Elasticsearch storage with the time series implementation.\n\n* Time bucket util improve.\n\n* Fixed some Gramma error.\n\n* Update ttl.md\n\nPolish English a little.\n\n* Update ttl.md\n\nAdd more explicit description of TTL\n\n* Update ttl.md\n\n* Update StorageModuleElasticsearchConfig.java\n\nSet otherMetricsDataTTL = 0 as default.  make user more clear.\n\n* Rename the timeSeriesAble to capableOfTimeSeries\n\n* Fixed a test case failure.\n","date":"2019-06-03 18:46:42","modifiedFileCount":"46","status":"M","submitter":"??? pengys"},{"authorTime":"2019-07-19 14:22:01","codes":[{"authorDate":"2019-01-20 16:41:06","commitOrder":8,"curCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-01-20 16:41:06","endLine":102,"groupId":"1827","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a7/6fb49a7d9518e68a86f82850ca7861fc49dd10.src","preCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"},{"authorDate":"2019-07-19 14:22:01","commitOrder":8,"curCode":"    public void start() throws ModuleStartException {\n        overrideCoreModuleTTLConfig();\n\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber(), config.getIndexRefreshInterval());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-07-19 14:22:01","endLine":106,"groupId":"2583","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/58/e83835e3a0cb53142343db7a01de3a5ad00f82.src","preCode":"    public void start() throws ModuleStartException {\n        overrideCoreModuleTTLConfig();\n\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"ed507b78ef8274e0f9167664ce9a707f07ca1f4e","commitMessage":"@@@Dirty-Read in concurrency (#3117)\n\n* Fixed the problem of dirty reading of the storage implementation of elasticsearch.\n\n* Fixed a mistake.\n","date":"2019-07-19 14:22:01","modifiedFileCount":"11","status":"M","submitter":"??? pengys"},{"authorTime":"2019-09-02 11:15:43","codes":[{"authorDate":"2019-01-20 16:41:06","commitOrder":9,"curCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-01-20 16:41:06","endLine":102,"groupId":"1827","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a7/6fb49a7d9518e68a86f82850ca7861fc49dd10.src","preCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"},{"authorDate":"2019-09-02 11:15:43","commitOrder":9,"curCode":"    public void start() throws ModuleStartException {\n        overrideCoreModuleTTLConfig();\n\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber(), config.getIndexRefreshInterval());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-09-02 11:15:43","endLine":143,"groupId":"2583","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/d0/766b58c64bdeeaea9220c15f28cd73a23fd357.src","preCode":"    public void start() throws ModuleStartException {\n        overrideCoreModuleTTLConfig();\n\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber(), config.getIndexRefreshInterval());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"}],"commitId":"dbbf22a177d4bcc9cda9069b6d7054b4ad8b06bd","commitMessage":"@@@support es https ssl config. (#3370)\n\n* support es https ssl config.\n\n* update\n\n* update docs.\n\n* refactoring var name.\n\n* fix\n\n* update docs.\n\n* add config in es section.\n\n* fix logical.\n","date":"2019-09-02 11:15:43","modifiedFileCount":"5","status":"M","submitter":"Jared Tan"},{"authorTime":"2019-11-21 22:30:59","codes":[{"authorDate":"2019-01-20 16:41:06","commitOrder":10,"curCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-01-20 16:41:06","endLine":102,"groupId":"1827","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a7/6fb49a7d9518e68a86f82850ca7861fc49dd10.src","preCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"},{"authorDate":"2019-11-21 22:30:59","commitOrder":10,"curCode":"    public void start() throws ModuleStartException {\n        overrideCoreModuleTTLConfig();\n\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config);\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-11-21 22:30:59","endLine":143,"groupId":"5670","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/00/8ef8639012c207518b49fe299e1b6ff6880356.src","preCode":"    public void start() throws ModuleStartException {\n        overrideCoreModuleTTLConfig();\n\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config.getIndexShardsNumber(), config.getIndexReplicasNumber(), config.getIndexRefreshInterval());\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"}],"commitId":"d581f2294f27bff00eec64299200215004449197","commitMessage":"@@@Support custom elasticsearch settings in index level. (#3913)\n\n","date":"2019-11-21 22:30:59","modifiedFileCount":"4","status":"M","submitter":"Jared Tan"},{"authorTime":"2019-11-21 22:30:59","codes":[{"authorDate":"2020-02-11 17:10:49","commitOrder":11,"curCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2020-02-11 17:10:49","endLine":155,"groupId":"1827","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/5b/468ced6c926fb09e2e5ee456b99857fae1b1db.src","preCode":"    @Override public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"},{"authorDate":"2019-11-21 22:30:59","commitOrder":11,"curCode":"    public void start() throws ModuleStartException {\n        overrideCoreModuleTTLConfig();\n\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config);\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2019-11-21 22:30:59","endLine":143,"groupId":"5670","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/00/8ef8639012c207518b49fe299e1b6ff6880356.src","preCode":"    public void start() throws ModuleStartException {\n        overrideCoreModuleTTLConfig();\n\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config);\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"N"}],"commitId":"5b255ba3e3b50e0e0196b28cdca21dcd5c9c3da2","commitMessage":"@@@Set up more strict code styles and fix existing issues (#4337)\n\nMotivation:\n\nReview code styles with some bots automatically.\n\nModifications:\n\nSet up ReviewDog in GitHub Action to review code style.\n\nAdd more check rules to checkstyle plugin.\n\nResult:\n\nObvious code styles can be reviewed and commented automatically.","date":"2020-02-11 17:10:49","modifiedFileCount":"2429","status":"M","submitter":"kezhenxu94"},{"authorTime":"2020-04-10 11:03:24","codes":[{"authorDate":"2020-02-11 17:10:49","commitOrder":12,"curCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2020-02-11 17:10:49","endLine":155,"groupId":"1827","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/5b/468ced6c926fb09e2e5ee456b99857fae1b1db.src","preCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"},{"authorDate":"2020-04-10 11:03:24","commitOrder":12,"curCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config);\n            installer.install(elasticSearchClient);\n\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2020-04-10 11:03:24","endLine":188,"groupId":"5869","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/6d/6023f90b9631e07d9838190d8f0b1ec72e7479.src","preCode":"    public void start() throws ModuleStartException {\n        overrideCoreModuleTTLConfig();\n\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config);\n            installer.install(elasticSearchClient);\n\n            RegisterLockInstaller lockInstaller = new RegisterLockInstaller(elasticSearchClient);\n            lockInstaller.install();\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"}],"commitId":"6fe2041b470113e626cb3f41e3789261d31f2548","commitMessage":"@@@Make 8.0.0 Core available. New protocol and register removed. (#4599)\n\nHere are the list of changes we made in this pull request. Top 3 are the principle changes.  others are following these principles.\n1. New agent and mesh report protocol. \n2. New agent header protocol. \n3. Service register.  instance register and network address register have been removed permanently.\n4. Service traffic.  instance traffic and network alias metrics are added to replace the service.  instance and network address inventory.\n5. Register process has been removed.\n6. Metrics stream process supports insert only mode.  especially for traffic entities.\n7. Metrics stream process supports no-downsampling mode for traffic entities and network alias.\n8. Remove all register mechanism and cache in the java agent.\n9. Remove MONTH step in GraphQL query.\n10. Update UI to remove MONTH step query.  the max query range is 60 days now.\n11. Simplify the TTL to metrics and record. And the unit has been formatted in Day unit. No specific TTL for ElasticSearch storage.\n12. Buffer mechanism of trace receiver and mesh receiver has been removed due to no register.\n13. New service id.  instance id and endpoint id rules.  including service relation.  instance relation and endpoint relation id rules.\n14. Java agent support `keep tracing` mode.  meaning.  agent generating tracing context even the backend is unconnected/unavailable.\n15. Plugin test tool up to date.  in order to support new protocol.\n16. Plugin tests expected data files updated.\n17. E2E tests updated.\n18. Telemetry of Grafana config has been merged into one.\n19. Documentation updates.\n20. [TBD] InfluxDB storage implementation is not available.  need @dmsolr to fix later.  in order to reduce the master change block by this PR.","date":"2020-04-10 11:03:24","modifiedFileCount":"342","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2020-05-08 21:21:03","codes":[{"authorDate":"2020-05-08 21:21:03","commitOrder":13,"curCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(h2Client, getManager());\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2020-05-08 21:21:03","endLine":141,"groupId":"1220","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/59/e814238dfa00ed8ba768502ce3902fe4d045bc.src","preCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(getManager());\n            installer.install(h2Client);\n\n            new H2RegisterLockInstaller().install(h2Client, lockDAO);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2020-05-08 21:21:03","commitOrder":13,"curCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n            StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient, getManager(), config);\n\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2020-05-08 21:21:03","endLine":188,"groupId":"4204","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/e5/f51fb4fc87f341dc5bbfa1452ff6a8aad15d2f.src","preCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n\n            StorageEsInstaller installer = new StorageEsInstaller(getManager(), config);\n            installer.install(elasticSearchClient);\n\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"7edcd5aa33cec034047871ac1348b5b858b630f0","commitMessage":"@@@Change the model installation into the reactive module (#4761)\n\n","date":"2020-05-08 21:21:03","modifiedFileCount":"31","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2020-05-08 21:21:03","codes":[{"authorDate":"2020-07-10 00:30:43","commitOrder":14,"curCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService(MetricsCreator.class);\n        GaugeMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_h2\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        healthChecker.setValue(1);\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(h2Client, getManager());\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n        h2Client.setHealthCheckListener(isHealthy -> {\n            if (isHealthy) {\n                healthChecker.setValue(0);\n            } else {\n                healthChecker.setValue(1);\n            }\n        });\n    }\n","date":"2020-07-10 00:30:43","endLine":156,"groupId":"1220","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/06/7bf2ce8dc0851000b9a4b1c1cb293c71053ffa.src","preCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(h2Client, getManager());\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"},{"authorDate":"2020-05-08 21:21:03","commitOrder":14,"curCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n            StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient, getManager(), config);\n\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2020-05-08 21:21:03","endLine":188,"groupId":"4204","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/e5/f51fb4fc87f341dc5bbfa1452ff6a8aad15d2f.src","preCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n            StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient, getManager(), config);\n\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"N"}],"commitId":"b6661b5164fac59e754009fa6ef646aaed8929a7","commitMessage":"@@@Add health checker module (#5046)\n\n","date":"2020-07-10 00:30:43","modifiedFileCount":"9","status":"M","submitter":"Gao Hongtao"},{"authorTime":"2020-07-19 23:37:13","codes":[{"authorDate":"2020-07-19 23:37:13","commitOrder":15,"curCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_h2\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        h2Client.registerChecker(healthChecker);\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(h2Client, getManager());\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2020-07-19 23:37:13","endLine":149,"groupId":"1220","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/26/5352268bad498244b557eca53a4581d9f079a0.src","preCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService(MetricsCreator.class);\n        GaugeMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_h2\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        healthChecker.setValue(1);\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(h2Client, getManager());\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n        h2Client.setHealthCheckListener(isHealthy -> {\n            if (isHealthy) {\n                healthChecker.setValue(0);\n            } else {\n                healthChecker.setValue(1);\n            }\n        });\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"},{"authorDate":"2020-07-19 23:37:13","commitOrder":15,"curCode":"    public void start() throws ModuleStartException {\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_elasticsearch\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        elasticSearchClient.registerChecker(healthChecker);\n        try {\n            elasticSearchClient.connect();\n            StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient, getManager(), config);\n\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2020-07-19 23:37:13","endLine":199,"groupId":"4204","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/75/f17f722d2bb9000d61b8d7463ca5d5f2b8dd1c.src","preCode":"    public void start() throws ModuleStartException {\n        try {\n            elasticSearchClient.connect();\n            StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient, getManager(), config);\n\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"}],"commitId":"3fdfdf3b83a1d6d80066c321eb3f05568657aba7","commitMessage":"@@@Storage elasticsearch health check (#5099)\n\n","date":"2020-07-19 23:37:13","modifiedFileCount":"8","status":"M","submitter":"Gao Hongtao"},{"authorTime":"2020-07-19 23:37:13","codes":[{"authorDate":"2020-08-11 07:24:40","commitOrder":16,"curCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        final ConfigService configService = getManager().find(CoreModule.NAME)\n                                                        .provider()\n                                                        .getService(ConfigService.class);\n        final int numOfSearchableTags = configService.getSearchableTracesTags().split(Const.COMMA).length;\n        if (numOfSearchableTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()) {\n            throw new ModuleStartException(\"Size of searchableTracesTags[\" + numOfSearchableTags\n                                               + \"] * numOfSearchableValuesPerTag[\" + config.getNumOfSearchableValuesPerTag()\n                                               + \"] > maxSizeOfArrayColumn[\" + config.getMaxSizeOfArrayColumn()\n                                               + \"]. Potential out of bound in the runtime.\");\n        }\n\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME)\n                                                   .provider()\n                                                   .getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\n            \"storage_h2\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        h2Client.registerChecker(healthChecker);\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(\n                h2Client, getManager(), config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag());\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2020-08-11 07:24:40","endLine":176,"groupId":"1220","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/82/db55355da961e76002418cb65d748983d29968.src","preCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_h2\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        h2Client.registerChecker(healthChecker);\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(h2Client, getManager());\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2020-07-19 23:37:13","commitOrder":16,"curCode":"    public void start() throws ModuleStartException {\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_elasticsearch\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        elasticSearchClient.registerChecker(healthChecker);\n        try {\n            elasticSearchClient.connect();\n            StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient, getManager(), config);\n\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2020-07-19 23:37:13","endLine":199,"groupId":"4204","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/75/f17f722d2bb9000d61b8d7463ca5d5f2b8dd1c.src","preCode":"    public void start() throws ModuleStartException {\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_elasticsearch\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        elasticSearchClient.registerChecker(healthChecker);\n        try {\n            elasticSearchClient.connect();\n            StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient, getManager(), config);\n\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"N"}],"commitId":"7f7e96b088d3cb0a19f8ddeafe5ede9764ec2eda","commitMessage":"@@@[IMPORTANT] Query traces with tags as condition (#5270)\n\n","date":"2020-08-11 07:24:40","modifiedFileCount":"39","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2020-07-19 23:37:13","codes":[{"authorDate":"2021-01-14 09:49:11","commitOrder":17,"curCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        final ConfigService configService = getManager().find(CoreModule.NAME)\n                                                        .provider()\n                                                        .getService(ConfigService.class);\n        final int numOfSearchableTracesTags = configService.getSearchableTracesTags().split(Const.COMMA).length;\n        if (numOfSearchableTracesTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()) {\n            throw new ModuleStartException(\"Size of searchableTracesTags[\" + numOfSearchableTracesTags\n                                               + \"] * numOfSearchableValuesPerTag[\" + config.getNumOfSearchableValuesPerTag()\n                                               + \"] > maxSizeOfArrayColumn[\" + config.getMaxSizeOfArrayColumn()\n                                               + \"]. Potential out of bound in the runtime.\");\n        }\n        final int numOfSearchableLogsTags = configService.getSearchableLogsTags().split(Const.COMMA).length;\n        if (numOfSearchableLogsTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()) {\n            throw new ModuleStartException(\"Size of searchableLogsTags[\" + numOfSearchableLogsTags\n                                               + \"] * numOfSearchableValuesPerTag[\" + config.getNumOfSearchableValuesPerTag()\n                                               + \"] > maxSizeOfArrayColumn[\" + config.getMaxSizeOfArrayColumn()\n                                               + \"]. Potential out of bound in the runtime.\");\n        }\n\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME)\n                                                   .provider()\n                                                   .getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\n            \"storage_h2\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        h2Client.registerChecker(healthChecker);\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(\n                h2Client, getManager(), config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag());\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2021-01-14 09:49:11","endLine":194,"groupId":"1220","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/e4/c281a8be971f396a72542024ff0d9a767a678d.src","preCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        final ConfigService configService = getManager().find(CoreModule.NAME)\n                                                        .provider()\n                                                        .getService(ConfigService.class);\n        final int numOfSearchableTags = configService.getSearchableTracesTags().split(Const.COMMA).length;\n        if (numOfSearchableTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()) {\n            throw new ModuleStartException(\"Size of searchableTracesTags[\" + numOfSearchableTags\n                                               + \"] * numOfSearchableValuesPerTag[\" + config.getNumOfSearchableValuesPerTag()\n                                               + \"] > maxSizeOfArrayColumn[\" + config.getMaxSizeOfArrayColumn()\n                                               + \"]. Potential out of bound in the runtime.\");\n        }\n\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME)\n                                                   .provider()\n                                                   .getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\n            \"storage_h2\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        h2Client.registerChecker(healthChecker);\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(\n                h2Client, getManager(), config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag());\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"},{"authorDate":"2020-07-19 23:37:13","commitOrder":17,"curCode":"    public void start() throws ModuleStartException {\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_elasticsearch\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        elasticSearchClient.registerChecker(healthChecker);\n        try {\n            elasticSearchClient.connect();\n            StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient, getManager(), config);\n\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2020-07-19 23:37:13","endLine":199,"groupId":"4204","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/75/f17f722d2bb9000d61b8d7463ca5d5f2b8dd1c.src","preCode":"    public void start() throws ModuleStartException {\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_elasticsearch\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        elasticSearchClient.registerChecker(healthChecker);\n        try {\n            elasticSearchClient.connect();\n            StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient, getManager(), config);\n\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"N"}],"commitId":"15452025c65dd6934bd9d6c8a930961b0f960594","commitMessage":"@@@Log collecting and query implementation (#6120)\n\n","date":"2021-01-14 09:49:11","modifiedFileCount":"51","status":"M","submitter":"zhang-wei"},{"authorTime":"2021-09-06 15:21:35","codes":[{"authorDate":"2021-01-14 09:49:11","commitOrder":18,"curCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        final ConfigService configService = getManager().find(CoreModule.NAME)\n                                                        .provider()\n                                                        .getService(ConfigService.class);\n        final int numOfSearchableTracesTags = configService.getSearchableTracesTags().split(Const.COMMA).length;\n        if (numOfSearchableTracesTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()) {\n            throw new ModuleStartException(\"Size of searchableTracesTags[\" + numOfSearchableTracesTags\n                                               + \"] * numOfSearchableValuesPerTag[\" + config.getNumOfSearchableValuesPerTag()\n                                               + \"] > maxSizeOfArrayColumn[\" + config.getMaxSizeOfArrayColumn()\n                                               + \"]. Potential out of bound in the runtime.\");\n        }\n        final int numOfSearchableLogsTags = configService.getSearchableLogsTags().split(Const.COMMA).length;\n        if (numOfSearchableLogsTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()) {\n            throw new ModuleStartException(\"Size of searchableLogsTags[\" + numOfSearchableLogsTags\n                                               + \"] * numOfSearchableValuesPerTag[\" + config.getNumOfSearchableValuesPerTag()\n                                               + \"] > maxSizeOfArrayColumn[\" + config.getMaxSizeOfArrayColumn()\n                                               + \"]. Potential out of bound in the runtime.\");\n        }\n\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME)\n                                                   .provider()\n                                                   .getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\n            \"storage_h2\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        h2Client.registerChecker(healthChecker);\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(\n                h2Client, getManager(), config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag());\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2021-01-14 09:49:11","endLine":194,"groupId":"10808","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/e4/c281a8be971f396a72542024ff0d9a767a678d.src","preCode":"    public void start() throws ServiceNotProvidedException, ModuleStartException {\n        final ConfigService configService = getManager().find(CoreModule.NAME)\n                                                        .provider()\n                                                        .getService(ConfigService.class);\n        final int numOfSearchableTracesTags = configService.getSearchableTracesTags().split(Const.COMMA).length;\n        if (numOfSearchableTracesTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()) {\n            throw new ModuleStartException(\"Size of searchableTracesTags[\" + numOfSearchableTracesTags\n                                               + \"] * numOfSearchableValuesPerTag[\" + config.getNumOfSearchableValuesPerTag()\n                                               + \"] > maxSizeOfArrayColumn[\" + config.getMaxSizeOfArrayColumn()\n                                               + \"]. Potential out of bound in the runtime.\");\n        }\n        final int numOfSearchableLogsTags = configService.getSearchableLogsTags().split(Const.COMMA).length;\n        if (numOfSearchableLogsTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()) {\n            throw new ModuleStartException(\"Size of searchableLogsTags[\" + numOfSearchableLogsTags\n                                               + \"] * numOfSearchableValuesPerTag[\" + config.getNumOfSearchableValuesPerTag()\n                                               + \"] > maxSizeOfArrayColumn[\" + config.getMaxSizeOfArrayColumn()\n                                               + \"]. Potential out of bound in the runtime.\");\n        }\n\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME)\n                                                   .provider()\n                                                   .getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\n            \"storage_h2\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        h2Client.registerChecker(healthChecker);\n        try {\n            h2Client.connect();\n\n            H2TableInstaller installer = new H2TableInstaller(\n                h2Client, getManager(), config.getMaxSizeOfArrayColumn(), config.getNumOfSearchableValuesPerTag());\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/H2StorageProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"N"},{"authorDate":"2021-09-06 15:21:35","commitOrder":18,"curCode":"    public void start() throws ModuleStartException {\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME)\n                                                   .provider()\n                                                   .getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\n            \"storage_elasticsearch\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        elasticSearchClient.registerChecker(healthChecker);\n        try {\n            elasticSearchClient.connect();\n            StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient, getManager(), config);\n\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (Exception e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","date":"2021-09-06 15:21:35","endLine":214,"groupId":"10808","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/88/b863598747fc41607b929303c7cd64b90d434a.src","preCode":"    public void start() throws ModuleStartException {\n        MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME)\n                                                   .provider()\n                                                   .getService(MetricsCreator.class);\n        HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\n            \"storage_elasticsearch\", MetricsTag.EMPTY_KEY, MetricsTag.EMPTY_VALUE);\n        elasticSearchClient.registerChecker(healthChecker);\n        try {\n            elasticSearchClient.connect();\n            StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient, getManager(), config);\n\n            getManager().find(CoreModule.NAME).provider().getService(ModelCreator.class).addModelListener(installer);\n        } catch (StorageException | IOException | KeyStoreException | NoSuchAlgorithmException | KeyManagementException | CertificateException e) {\n            throw new ModuleStartException(e.getMessage(), e);\n        }\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/StorageModuleElasticsearchProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"}],"commitId":"26b81a2e5991ecdd2bde0f7071264cb80bb235cf","commitMessage":"@@@Rebuilt ElasticSearch client on top of their REST API (#7634)\n\n","date":"2021-09-06 15:21:35","modifiedFileCount":"60","status":"M","submitter":"kezhenxu94"}]
