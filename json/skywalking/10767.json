[{"authorTime":"2020-07-30 11:55:49","codes":[{"authorDate":"2020-07-30 11:55:49","commitOrder":1,"curCode":"    ServiceRelation toServiceRelation() {\n        ServiceRelation serviceRelation = new ServiceRelation();\n        serviceRelation.setSourceServiceName(sourceServiceName);\n        serviceRelation.setSourceServiceNodeType(sourceNodeType);\n        serviceRelation.setSourceServiceInstanceName(sourceServiceInstanceName);\n        serviceRelation.setDestServiceName(destServiceName);\n        serviceRelation.setDestServiceNodeType(destNodeType);\n        serviceRelation.setDestServiceInstanceName(destServiceInstanceName);\n        serviceRelation.setEndpoint(destEndpointName);\n        serviceRelation.setComponentId(componentId);\n        serviceRelation.setLatency(latency);\n        serviceRelation.setStatus(status);\n        serviceRelation.setResponseCode(responseCode);\n        serviceRelation.setType(type);\n        serviceRelation.setDetectPoint(detectPoint);\n        serviceRelation.setTimeBucket(timeBucket);\n        return serviceRelation;\n    }\n","date":"2020-07-30 11:55:49","endLine":177,"groupId":"1064","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toServiceRelation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c9/85eb3b9560f9da8e3f8bbe24d5dfcef86efde5.src","preCode":"    ServiceRelation toServiceRelation() {\n        ServiceRelation serviceRelation = new ServiceRelation();\n        serviceRelation.setSourceServiceName(sourceServiceName);\n        serviceRelation.setSourceServiceNodeType(sourceNodeType);\n        serviceRelation.setSourceServiceInstanceName(sourceServiceInstanceName);\n        serviceRelation.setDestServiceName(destServiceName);\n        serviceRelation.setDestServiceNodeType(destNodeType);\n        serviceRelation.setDestServiceInstanceName(destServiceInstanceName);\n        serviceRelation.setEndpoint(destEndpointName);\n        serviceRelation.setComponentId(componentId);\n        serviceRelation.setLatency(latency);\n        serviceRelation.setStatus(status);\n        serviceRelation.setResponseCode(responseCode);\n        serviceRelation.setType(type);\n        serviceRelation.setDetectPoint(detectPoint);\n        serviceRelation.setTimeBucket(timeBucket);\n        return serviceRelation;\n    }\n","realPath":"oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/SourceBuilder.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"B"},{"authorDate":"2020-07-30 11:55:49","commitOrder":1,"curCode":"    ServiceInstanceRelation toServiceInstanceRelation() {\n        if (StringUtil.isEmpty(sourceServiceInstanceName) || StringUtil.isEmpty(destServiceInstanceName)) {\n            return null;\n        }\n        ServiceInstanceRelation serviceInstanceRelation = new ServiceInstanceRelation();\n        serviceInstanceRelation.setSourceServiceName(sourceServiceName);\n        serviceInstanceRelation.setSourceServiceNodeType(sourceNodeType);\n        serviceInstanceRelation.setSourceServiceInstanceName(sourceServiceInstanceName);\n        serviceInstanceRelation.setDestServiceName(destServiceName);\n        serviceInstanceRelation.setDestServiceNodeType(destNodeType);\n        serviceInstanceRelation.setDestServiceInstanceName(destServiceInstanceName);\n        serviceInstanceRelation.setEndpoint(destEndpointName);\n        serviceInstanceRelation.setComponentId(componentId);\n        serviceInstanceRelation.setLatency(latency);\n        serviceInstanceRelation.setStatus(status);\n        serviceInstanceRelation.setResponseCode(responseCode);\n        serviceInstanceRelation.setType(type);\n        serviceInstanceRelation.setDetectPoint(detectPoint);\n        serviceInstanceRelation.setTimeBucket(timeBucket);\n        return serviceInstanceRelation;\n    }\n","date":"2020-07-30 11:55:49","endLine":220,"groupId":"1064","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toServiceInstanceRelation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c9/85eb3b9560f9da8e3f8bbe24d5dfcef86efde5.src","preCode":"    ServiceInstanceRelation toServiceInstanceRelation() {\n        if (StringUtil.isEmpty(sourceServiceInstanceName) || StringUtil.isEmpty(destServiceInstanceName)) {\n            return null;\n        }\n        ServiceInstanceRelation serviceInstanceRelation = new ServiceInstanceRelation();\n        serviceInstanceRelation.setSourceServiceName(sourceServiceName);\n        serviceInstanceRelation.setSourceServiceNodeType(sourceNodeType);\n        serviceInstanceRelation.setSourceServiceInstanceName(sourceServiceInstanceName);\n        serviceInstanceRelation.setDestServiceName(destServiceName);\n        serviceInstanceRelation.setDestServiceNodeType(destNodeType);\n        serviceInstanceRelation.setDestServiceInstanceName(destServiceInstanceName);\n        serviceInstanceRelation.setEndpoint(destEndpointName);\n        serviceInstanceRelation.setComponentId(componentId);\n        serviceInstanceRelation.setLatency(latency);\n        serviceInstanceRelation.setStatus(status);\n        serviceInstanceRelation.setResponseCode(responseCode);\n        serviceInstanceRelation.setType(type);\n        serviceInstanceRelation.setDetectPoint(detectPoint);\n        serviceInstanceRelation.setTimeBucket(timeBucket);\n        return serviceInstanceRelation;\n    }\n","realPath":"oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/SourceBuilder.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"B"}],"commitId":"f9257f5274f6a55e8bf8424444707aecf7a1f2c1","commitMessage":"@@@Provide kafka as collector/reporter (#4847)\n\n","date":"2020-07-30 11:55:49","modifiedFileCount":"24","status":"B","submitter":"Daming"},{"authorTime":"2021-08-14 20:17:46","codes":[{"authorDate":"2021-08-14 20:17:46","commitOrder":2,"curCode":"    ServiceRelation toServiceRelation() {\n        ServiceRelation serviceRelation = new ServiceRelation();\n        serviceRelation.setSourceServiceName(sourceServiceName);\n        serviceRelation.setSourceServiceNodeType(sourceNodeType);\n        serviceRelation.setSourceServiceInstanceName(sourceServiceInstanceName);\n        serviceRelation.setDestServiceName(destServiceName);\n        serviceRelation.setDestServiceNodeType(destNodeType);\n        serviceRelation.setDestServiceInstanceName(destServiceInstanceName);\n        serviceRelation.setEndpoint(destEndpointName);\n        serviceRelation.setComponentId(componentId);\n        serviceRelation.setLatency(latency);\n        serviceRelation.setStatus(status);\n        serviceRelation.setResponseCode(responseCode);\n        serviceRelation.setHttpResponseStatusCode(httpResponseStatusCode);\n        serviceRelation.setRpcStatusCode(rpcStatusCode);\n        serviceRelation.setType(type);\n        serviceRelation.setDetectPoint(detectPoint);\n        serviceRelation.setTimeBucket(timeBucket);\n        return serviceRelation;\n    }\n","date":"2021-08-14 20:17:46","endLine":179,"groupId":"10767","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"toServiceRelation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/58/9f90e793860aa6b7a7ec60e369bb7745df1b72.src","preCode":"    ServiceRelation toServiceRelation() {\n        ServiceRelation serviceRelation = new ServiceRelation();\n        serviceRelation.setSourceServiceName(sourceServiceName);\n        serviceRelation.setSourceServiceNodeType(sourceNodeType);\n        serviceRelation.setSourceServiceInstanceName(sourceServiceInstanceName);\n        serviceRelation.setDestServiceName(destServiceName);\n        serviceRelation.setDestServiceNodeType(destNodeType);\n        serviceRelation.setDestServiceInstanceName(destServiceInstanceName);\n        serviceRelation.setEndpoint(destEndpointName);\n        serviceRelation.setComponentId(componentId);\n        serviceRelation.setLatency(latency);\n        serviceRelation.setStatus(status);\n        serviceRelation.setResponseCode(responseCode);\n        serviceRelation.setType(type);\n        serviceRelation.setDetectPoint(detectPoint);\n        serviceRelation.setTimeBucket(timeBucket);\n        return serviceRelation;\n    }\n","realPath":"oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/SourceBuilder.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"},{"authorDate":"2021-08-14 20:17:46","commitOrder":2,"curCode":"    ServiceInstanceRelation toServiceInstanceRelation() {\n        if (StringUtil.isEmpty(sourceServiceInstanceName) || StringUtil.isEmpty(destServiceInstanceName)) {\n            return null;\n        }\n        ServiceInstanceRelation serviceInstanceRelation = new ServiceInstanceRelation();\n        serviceInstanceRelation.setSourceServiceName(sourceServiceName);\n        serviceInstanceRelation.setSourceServiceNodeType(sourceNodeType);\n        serviceInstanceRelation.setSourceServiceInstanceName(sourceServiceInstanceName);\n        serviceInstanceRelation.setDestServiceName(destServiceName);\n        serviceInstanceRelation.setDestServiceNodeType(destNodeType);\n        serviceInstanceRelation.setDestServiceInstanceName(destServiceInstanceName);\n        serviceInstanceRelation.setEndpoint(destEndpointName);\n        serviceInstanceRelation.setComponentId(componentId);\n        serviceInstanceRelation.setLatency(latency);\n        serviceInstanceRelation.setStatus(status);\n        serviceInstanceRelation.setResponseCode(responseCode);\n        serviceInstanceRelation.setHttpResponseStatusCode(httpResponseStatusCode);\n        serviceInstanceRelation.setRpcStatusCode(rpcStatusCode);\n        serviceInstanceRelation.setType(type);\n        serviceInstanceRelation.setDetectPoint(detectPoint);\n        serviceInstanceRelation.setTimeBucket(timeBucket);\n        return serviceInstanceRelation;\n    }\n","date":"2021-08-14 20:17:46","endLine":227,"groupId":"10767","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"toServiceInstanceRelation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/58/9f90e793860aa6b7a7ec60e369bb7745df1b72.src","preCode":"    ServiceInstanceRelation toServiceInstanceRelation() {\n        if (StringUtil.isEmpty(sourceServiceInstanceName) || StringUtil.isEmpty(destServiceInstanceName)) {\n            return null;\n        }\n        ServiceInstanceRelation serviceInstanceRelation = new ServiceInstanceRelation();\n        serviceInstanceRelation.setSourceServiceName(sourceServiceName);\n        serviceInstanceRelation.setSourceServiceNodeType(sourceNodeType);\n        serviceInstanceRelation.setSourceServiceInstanceName(sourceServiceInstanceName);\n        serviceInstanceRelation.setDestServiceName(destServiceName);\n        serviceInstanceRelation.setDestServiceNodeType(destNodeType);\n        serviceInstanceRelation.setDestServiceInstanceName(destServiceInstanceName);\n        serviceInstanceRelation.setEndpoint(destEndpointName);\n        serviceInstanceRelation.setComponentId(componentId);\n        serviceInstanceRelation.setLatency(latency);\n        serviceInstanceRelation.setStatus(status);\n        serviceInstanceRelation.setResponseCode(responseCode);\n        serviceInstanceRelation.setType(type);\n        serviceInstanceRelation.setDetectPoint(detectPoint);\n        serviceInstanceRelation.setTimeBucket(timeBucket);\n        return serviceInstanceRelation;\n    }\n","realPath":"oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/SourceBuilder.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"M"}],"commitId":"4b66f1e0a73bf6c107005be6d6acf040dc7cb6bd","commitMessage":"@@@fix: Fix MultiScopesAnalysisListener#setPublicAttrs log warn frequently (#7271)\n\n* fix: Fix MultiScopesAnalysisListener#setPublicAttrs log warn frequently. #6562\n\n1. Rename current STATUS_CODE to HTTP_RESPONSE_STATUS_CODE.  real tag key should be http.status_code.\n2. Add a new string tag RPC_RESPONSE_STATUS_CODE to hold all string type value tag. The key is `rpc.status_code`.\n3. At the backend.  keep responseCode for HTTP_RESPONSE_STATUS_CODE tag.  but add @Deprecated. Also.  add httpResponseStatusCode(a duplicate of responseCode) and rpcStatusCode(for RPC_RESPONSE_STATUS_CODE) fields for OAL.\n\n* Modify `Tags.STATUS_CODE` field name to `Tags.HTTP_RESPONSE_STATUS_CODE` and type from `StringTag` to `IntegerTag`.  add `Tags.RPC_RESPONSE_STATUS_CODE` field to hold rpc response code value.\n\n* Add `rpcStatusCode` for `rpc.status_code` tag in the OAL objects. The `responseCode` field is marked as deprecated and replaced by `httpResponseStatusCode` field. \n\n* Tag `status_code` is still supported in the backend for forward compatbility. Will be removed one year later.\n\nCo-authored-by: ?? Wu Sheng <wu.sheng@foxmail.com>","date":"2021-08-14 20:17:46","modifiedFileCount":"48","status":"M","submitter":"wallezhang"}]
