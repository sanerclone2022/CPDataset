[{"authorTime":"2020-10-03 23:26:29","codes":[{"authorDate":"2020-10-03 23:26:29","commitOrder":1,"curCode":"    public void testEvaluateMessageWithException() {\n        List<CompositeAlarmRule> compositeAlarmRules = new ArrayList<>();\n        CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\", \"a_rule + b_rule\", \"composite rule triggered!\");\n        compositeAlarmRules.add(compositeAlarmRule);\n        List<AlarmMessage> alarmMessages = getAlarmMessages();\n        List<AlarmMessage> compositeMsgs = ruleEvaluate.evaluate(compositeAlarmRules, alarmMessages);\n        assertThat(compositeMsgs.size(), is(0));\n    }\n","date":"2020-10-03 23:26:29","endLine":91,"groupId":"1167","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEvaluateMessageWithException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/50/08731609e18104949a30028ecc967345817758.src","preCode":"    public void testEvaluateMessageWithException() {\n        List<CompositeAlarmRule> compositeAlarmRules = new ArrayList<>();\n        CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\", \"a_rule + b_rule\", \"composite rule triggered!\");\n        compositeAlarmRules.add(compositeAlarmRule);\n        List<AlarmMessage> alarmMessages = getAlarmMessages();\n        List<AlarmMessage> compositeMsgs = ruleEvaluate.evaluate(compositeAlarmRules, alarmMessages);\n        assertThat(compositeMsgs.size(), is(0));\n    }\n","realPath":"oap-server/server-alarm-plugin/src/test/java/org/apache/skywalking/oap/server/core/alarm/provider/CompositeRuleEvaluatorTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"},{"authorDate":"2020-10-03 23:26:29","commitOrder":1,"curCode":"    public void testEvaluateMessageWithParenthesisAndOp() {\n        List<CompositeAlarmRule> compositeAlarmRules = new ArrayList<>();\n        CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\", \"(a_rule || b_rule) && c_rule\", \"composite rule triggered!\");\n        compositeAlarmRules.add(compositeAlarmRule);\n        List<AlarmMessage> alarmMessages = getAlarmMessages();\n        alarmMessages.remove(alarmMessages.size() - 1);\n        List<AlarmMessage> compositeMsgs = ruleEvaluate.evaluate(compositeAlarmRules, alarmMessages);\n        assertThat(compositeMsgs.size(), is(0));\n    }\n","date":"2020-10-03 23:26:29","endLine":150,"groupId":"1172","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEvaluateMessageWithParenthesisAndOp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/50/08731609e18104949a30028ecc967345817758.src","preCode":"    public void testEvaluateMessageWithParenthesisAndOp() {\n        List<CompositeAlarmRule> compositeAlarmRules = new ArrayList<>();\n        CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\", \"(a_rule || b_rule) && c_rule\", \"composite rule triggered!\");\n        compositeAlarmRules.add(compositeAlarmRule);\n        List<AlarmMessage> alarmMessages = getAlarmMessages();\n        alarmMessages.remove(alarmMessages.size() - 1);\n        List<AlarmMessage> compositeMsgs = ruleEvaluate.evaluate(compositeAlarmRules, alarmMessages);\n        assertThat(compositeMsgs.size(), is(0));\n    }\n","realPath":"oap-server/server-alarm-plugin/src/test/java/org/apache/skywalking/oap/server/core/alarm/provider/CompositeRuleEvaluatorTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"}],"commitId":"2c729b5d69b095962e7be5b8570eedc374659ec5","commitMessage":"@@@ Support group concept in the alarm core (#5615)\n\n","date":"2020-10-03 23:26:29","modifiedFileCount":"9","status":"B","submitter":"xbkaishui"},{"authorTime":"2021-04-25 17:22:43","codes":[{"authorDate":"2021-04-25 17:22:43","commitOrder":2,"curCode":"    public void testEvaluateMessageWithException() {\n        List<CompositeAlarmRule> compositeAlarmRules = new ArrayList<>();\n        CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\", \"a_rule + b_rule\", \"composite rule triggered!\", new HashMap<>());\n        compositeAlarmRules.add(compositeAlarmRule);\n        List<AlarmMessage> alarmMessages = getAlarmMessages();\n        List<AlarmMessage> compositeMsgs = ruleEvaluate.evaluate(compositeAlarmRules, alarmMessages);\n        assertThat(compositeMsgs.size(), is(0));\n    }\n","date":"2021-04-25 17:22:43","endLine":100,"groupId":"10559","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testEvaluateMessageWithException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/2d/a3e98bef57ef8c44daf7c414c1848a8e5906f6.src","preCode":"    public void testEvaluateMessageWithException() {\n        List<CompositeAlarmRule> compositeAlarmRules = new ArrayList<>();\n        CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\", \"a_rule + b_rule\", \"composite rule triggered!\");\n        compositeAlarmRules.add(compositeAlarmRule);\n        List<AlarmMessage> alarmMessages = getAlarmMessages();\n        List<AlarmMessage> compositeMsgs = ruleEvaluate.evaluate(compositeAlarmRules, alarmMessages);\n        assertThat(compositeMsgs.size(), is(0));\n    }\n","realPath":"oap-server/server-alarm-plugin/src/test/java/org/apache/skywalking/oap/server/core/alarm/provider/CompositeRuleEvaluatorTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2021-04-25 17:22:43","commitOrder":2,"curCode":"    public void testEvaluateMessageWithParenthesisAndOp() {\n        List<CompositeAlarmRule> compositeAlarmRules = new ArrayList<>();\n        CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\", \"(a_rule || b_rule) && c_rule\", \"composite rule triggered!\", new HashMap<>());\n        compositeAlarmRules.add(compositeAlarmRule);\n        List<AlarmMessage> alarmMessages = getAlarmMessages();\n        alarmMessages.remove(alarmMessages.size() - 1);\n        List<AlarmMessage> compositeMsgs = ruleEvaluate.evaluate(compositeAlarmRules, alarmMessages);\n        assertThat(compositeMsgs.size(), is(0));\n    }\n","date":"2021-04-25 17:22:43","endLine":163,"groupId":"10559","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testEvaluateMessageWithParenthesisAndOp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/2d/a3e98bef57ef8c44daf7c414c1848a8e5906f6.src","preCode":"    public void testEvaluateMessageWithParenthesisAndOp() {\n        List<CompositeAlarmRule> compositeAlarmRules = new ArrayList<>();\n        CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\", \"(a_rule || b_rule) && c_rule\", \"composite rule triggered!\");\n        compositeAlarmRules.add(compositeAlarmRule);\n        List<AlarmMessage> alarmMessages = getAlarmMessages();\n        alarmMessages.remove(alarmMessages.size() - 1);\n        List<AlarmMessage> compositeMsgs = ruleEvaluate.evaluate(compositeAlarmRules, alarmMessages);\n        assertThat(compositeMsgs.size(), is(0));\n    }\n","realPath":"oap-server/server-alarm-plugin/src/test/java/org/apache/skywalking/oap/server/core/alarm/provider/CompositeRuleEvaluatorTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"}],"commitId":"7a533313676579da1321c0177c10fc237a052cbe","commitMessage":"@@@Support alarm tags (#6820)\n\n","date":"2021-04-25 17:22:43","modifiedFileCount":"42","status":"M","submitter":"liqiangz"}]
