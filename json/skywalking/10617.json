[{"authorTime":"2019-06-07 12:01:24","codes":[{"authorDate":"2019-10-05 10:49:53","commitOrder":2,"curCode":"    public ConfigTable readConfig(Set<String> keys) {\n        removeUninterestedKeys(keys);\n\n        registerKeyListeners(keys);\n\n        final ConfigTable table = new ConfigTable();\n\n        configItemKeyedByName.forEach((key, value) -> {\n            if (value.isPresent()) {\n                table.add(new ConfigTable.ConfigItem(key, value.get()));\n            } else {\n                table.add(new ConfigTable.ConfigItem(key, null));\n            }\n        });\n\n        return table;\n    }\n","date":"2019-10-05 10:49:53","endLine":93,"groupId":"3020","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"readConfig","params":"(Set<String>keys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/1f/b1d0019a9e27fcbfbb9f4847a806f38df705cf.src","preCode":"    public ConfigTable readConfig(Set<String> keys) {\n        removeUninterestedKeys(keys);\n\n        registerKeyListeners(keys);\n\n        final ConfigTable table = new ConfigTable();\n\n        configItemKeyedByName.forEach((key, value) -> {\n            if (value.isPresent()) {\n                table.add(new ConfigTable.ConfigItem(key, value.get()));\n            } else {\n                table.add(new ConfigTable.ConfigItem(key, null));\n            }\n        });\n\n        return table;\n    }\n","realPath":"oap-server/server-configuration/configuration-consul/src/main/java/org/apache/skywalking/oap/server/configuration/consul/ConsulConfigurationWatcherRegister.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2019-06-07 12:01:24","commitOrder":2,"curCode":"    public ConfigTable readConfig(Set<String> keys) {\n        removeUninterestedKeys(keys);\n        registerKeyListeners(keys);\n\n        final ConfigTable table = new ConfigTable();\n\n        for (Map.Entry<String, Optional<String>> entry : configItemKeyedByName.entrySet()) {\n            final String key = entry.getKey();\n            final Optional<String> value = entry.getValue();\n\n            if (value.isPresent()) {\n                table.add(new ConfigTable.ConfigItem(key, value.get()));\n            } else {\n                table.add(new ConfigTable.ConfigItem(key, null));\n            }\n        }\n\n        return table;\n    }\n","date":"2019-06-07 12:01:24","endLine":79,"groupId":"637","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"readConfig","params":"(Set<String>keys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/56/1e974cd08d068c433d6a1c3a321ed3bb4e044b.src","preCode":"    public ConfigTable readConfig(Set<String> keys) {\n        removeUninterestedKeys(keys);\n        registerKeyListeners(keys);\n\n        final ConfigTable table = new ConfigTable();\n\n        for (Map.Entry<String, Optional<String>> entry : configItemKeyedByName.entrySet()) {\n            final String key = entry.getKey();\n            final Optional<String> value = entry.getValue();\n\n            if (value.isPresent()) {\n                table.add(new ConfigTable.ConfigItem(key, value.get()));\n            } else {\n                table.add(new ConfigTable.ConfigItem(key, null));\n            }\n        }\n\n        return table;\n    }\n","realPath":"oap-server/server-configuration/configuration-nacos/src/main/java/org/apache/skywalking/oap/server/configuration/nacos/NacosConfigWatcherRegister.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"NB"}],"commitId":"81f4c087b01bee72ddd79b2dfb9c995359b5708e","commitMessage":"@@@Provide Consul dynamic configuration center implementation (#3560)\n\n* Provide Consul dynamic configuration center implementation\n\n* Add more unit tests\n\n* Fix unit test\n\n* Add more unit tests and remove unused file\n\n* Remove redundant doc\n","date":"2019-10-05 10:49:53","modifiedFileCount":"1","status":"M","submitter":"kezhenxu94"},{"authorTime":"2020-03-04 10:17:04","codes":[{"authorDate":"2020-03-04 10:17:04","commitOrder":3,"curCode":"    public Optional<ConfigTable> readConfig(Set<String> keys) {\n        removeUninterestedKeys(keys);\n\n        registerKeyListeners(keys);\n\n        final ConfigTable table = new ConfigTable();\n\n        configItemKeyedByName.forEach((key, value) -> {\n            if (value.isPresent()) {\n                table.add(new ConfigTable.ConfigItem(key, value.get()));\n            } else {\n                table.add(new ConfigTable.ConfigItem(key, null));\n            }\n        });\n\n        return Optional.of(table);\n    }\n","date":"2020-03-04 10:17:04","endLine":95,"groupId":"10617","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"readConfig","params":"(Set<String>keys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/73/c3d5592c8cc84c519c8e8977eb178eb35cebf3.src","preCode":"    public ConfigTable readConfig(Set<String> keys) {\n        removeUninterestedKeys(keys);\n\n        registerKeyListeners(keys);\n\n        final ConfigTable table = new ConfigTable();\n\n        configItemKeyedByName.forEach((key, value) -> {\n            if (value.isPresent()) {\n                table.add(new ConfigTable.ConfigItem(key, value.get()));\n            } else {\n                table.add(new ConfigTable.ConfigItem(key, null));\n            }\n        });\n\n        return table;\n    }\n","realPath":"oap-server/server-configuration/configuration-consul/src/main/java/org/apache/skywalking/oap/server/configuration/consul/ConsulConfigurationWatcherRegister.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-03-04 10:17:04","commitOrder":3,"curCode":"    public Optional<ConfigTable> readConfig(Set<String> keys) {\n        removeUninterestedKeys(keys);\n        registerKeyListeners(keys);\n\n        final ConfigTable table = new ConfigTable();\n\n        for (Map.Entry<String, Optional<String>> entry : configItemKeyedByName.entrySet()) {\n            final String key = entry.getKey();\n            final Optional<String> value = entry.getValue();\n\n            if (value.isPresent()) {\n                table.add(new ConfigTable.ConfigItem(key, value.get()));\n            } else {\n                table.add(new ConfigTable.ConfigItem(key, null));\n            }\n        }\n\n        return Optional.of(table);\n    }\n","date":"2020-03-04 10:17:04","endLine":81,"groupId":"10617","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"readConfig","params":"(Set<String>keys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/01/01cdf5181f49e7a96356d7e2cc246080847404.src","preCode":"    public ConfigTable readConfig(Set<String> keys) {\n        removeUninterestedKeys(keys);\n        registerKeyListeners(keys);\n\n        final ConfigTable table = new ConfigTable();\n\n        for (Map.Entry<String, Optional<String>> entry : configItemKeyedByName.entrySet()) {\n            final String key = entry.getKey();\n            final Optional<String> value = entry.getValue();\n\n            if (value.isPresent()) {\n                table.add(new ConfigTable.ConfigItem(key, value.get()));\n            } else {\n                table.add(new ConfigTable.ConfigItem(key, null));\n            }\n        }\n\n        return table;\n    }\n","realPath":"oap-server/server-configuration/configuration-nacos/src/main/java/org/apache/skywalking/oap/server/configuration/nacos/NacosConfigWatcherRegister.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"be048d42362ccfc079a551e81bfca00ab658aa82","commitMessage":"@@@Support change detection mechanism in DCS (#4438)\n\n* Add UUID to DCS","date":"2020-03-04 10:17:04","modifiedFileCount":"13","status":"M","submitter":"?? Wu Sheng"}]
