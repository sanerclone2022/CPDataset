[{"authorTime":"2021-01-14 09:49:11","codes":[{"authorDate":"2021-01-14 09:49:11","commitOrder":1,"curCode":"    private void verifyServiceInstances(final Service service) throws Exception {\n        final Instances instances = graphql.instances(\n            new InstancesQuery().serviceId(service.getKey()).start(startTime).end(Times.now()));\n\n        LOGGER.info(\"instances: {}\", instances);\n        load(\"expected/log/instances.yml\").as(InstancesMatcher.class).verify(instances);\n    }\n","date":"2021-01-14 09:49:11","endLine":131,"groupId":"2903","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyServiceInstances","params":"(finalServiceservice)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/85/b41b6baa2d2b52fd1d8d30c7274ba6d4f46cf4.src","preCode":"    private void verifyServiceInstances(final Service service) throws Exception {\n        final Instances instances = graphql.instances(\n            new InstancesQuery().serviceId(service.getKey()).start(startTime).end(Times.now()));\n\n        LOGGER.info(\"instances: {}\", instances);\n        load(\"expected/log/instances.yml\").as(InstancesMatcher.class).verify(instances);\n    }\n","realPath":"test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/kafka/KafkaLogE2E.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"},{"authorDate":"2021-01-14 09:49:11","commitOrder":1,"curCode":"    private void verifyServiceInstances(final Service service) throws Exception {\n        final Instances instances = graphql.instances(\n            new InstancesQuery().serviceId(service.getKey()).start(startTime).end(Times.now()));\n\n        LOGGER.info(\"instances: {}\", instances);\n        load(\"expected/log/instances.yml\").as(InstancesMatcher.class).verify(instances);\n    }\n","date":"2021-01-14 09:49:11","endLine":144,"groupId":"2903","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyServiceInstances","params":"(finalServiceservice)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c2/4416221e79603bfba4e9cfd91fd8cdc367f666.src","preCode":"    private void verifyServiceInstances(final Service service) throws Exception {\n        final Instances instances = graphql.instances(\n            new InstancesQuery().serviceId(service.getKey()).start(startTime).end(Times.now()));\n\n        LOGGER.info(\"instances: {}\", instances);\n        load(\"expected/log/instances.yml\").as(InstancesMatcher.class).verify(instances);\n    }\n","realPath":"test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/log/LogE2E.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"}],"commitId":"15452025c65dd6934bd9d6c8a930961b0f960594","commitMessage":"@@@Log collecting and query implementation (#6120)\n\n","date":"2021-01-14 09:49:11","modifiedFileCount":"51","status":"B","submitter":"zhang-wei"},{"authorTime":"2021-02-23 20:06:48","codes":[{"authorDate":"2021-01-14 09:49:11","commitOrder":2,"curCode":"    private void verifyServiceInstances(final Service service) throws Exception {\n        final Instances instances = graphql.instances(\n            new InstancesQuery().serviceId(service.getKey()).start(startTime).end(Times.now()));\n\n        LOGGER.info(\"instances: {}\", instances);\n        load(\"expected/log/instances.yml\").as(InstancesMatcher.class).verify(instances);\n    }\n","date":"2021-01-14 09:49:11","endLine":131,"groupId":"10138","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyServiceInstances","params":"(finalServiceservice)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/85/b41b6baa2d2b52fd1d8d30c7274ba6d4f46cf4.src","preCode":"    private void verifyServiceInstances(final Service service) throws Exception {\n        final Instances instances = graphql.instances(\n            new InstancesQuery().serviceId(service.getKey()).start(startTime).end(Times.now()));\n\n        LOGGER.info(\"instances: {}\", instances);\n        load(\"expected/log/instances.yml\").as(InstancesMatcher.class).verify(instances);\n    }\n","realPath":"test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/kafka/KafkaLogE2E.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2021-02-23 20:06:48","commitOrder":2,"curCode":"    private void verifyServiceInstances(final Service service) throws Exception {\n        final Instances instances = graphql.instances(\n            new InstancesQuery().serviceId(service.getKey()).start(startTime).end(Times.now()));\n\n        LOGGER.info(\"instances: {}\", instances);\n        load(\"expected/log/instances.yml\").as(InstancesMatcher.class).verify(instances);\n\n        verifyInstanceMetrics(service, instances);\n    }\n","date":"2021-02-23 20:06:48","endLine":143,"groupId":"10138","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyServiceInstances","params":"(finalServiceservice)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/23/cb4d1f8a31e60665cd684dbe0edac63783bcaa.src","preCode":"    private void verifyServiceInstances(final Service service) throws Exception {\n        final Instances instances = graphql.instances(\n            new InstancesQuery().serviceId(service.getKey()).start(startTime).end(Times.now()));\n\n        LOGGER.info(\"instances: {}\", instances);\n        load(\"expected/log/instances.yml\").as(InstancesMatcher.class).verify(instances);\n    }\n","realPath":"test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/log/LogE2E.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"}],"commitId":"96f1c12159297f67cd6cd724b552b182bf44c573","commitMessage":"@@@Introduce log analysis language (LAL) (#6388)\n\n","date":"2021-02-23 20:06:48","modifiedFileCount":"8","status":"M","submitter":"Zhenxu Ke"}]
