[{"authorTime":"2020-10-30 14:30:19","codes":[{"authorDate":"2021-06-19 20:20:37","commitOrder":6,"curCode":"        public Factory(final ModuleManager moduleManager) {\n            this.namingControl = moduleManager.find(CoreModule.NAME)\n                                              .provider()\n                                              .getService(NamingControl.class);\n            this.sourceReceiver = moduleManager.find(CoreModule.NAME)\n                                               .provider()\n                                               .getService(SourceReceiver.class);\n        }\n","date":"2021-06-19 20:20:37","endLine":88,"groupId":"899","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"Factory","params":"(finalModuleManagermoduleManager)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/b8/c0d18538941d216be304611fd08885c4002c67.src","preCode":"        public Factory(final ModuleManager moduleManager) {\n            this.namingControl = moduleManager.find(CoreModule.NAME)\n                                              .provider()\n                                              .getService(NamingControl.class);\n            this.sourceReceiver = moduleManager.find(CoreModule.NAME)\n                                               .provider()\n                                               .getService(SourceReceiver.class);\n        }\n","realPath":"oap-server/analyzer/event-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/event/listener/EventRecordAnalyzerListener.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"},{"authorDate":"2020-10-30 14:30:19","commitOrder":6,"curCode":"        public Factory(ModuleManager moduleManager, AnalyzerModuleConfig config) {\n            this.sourceReceiver = moduleManager.find(CoreModule.NAME).provider().getService(SourceReceiver.class);\n            final ConfigService configService = moduleManager.find(CoreModule.NAME)\n                                                             .provider()\n                                                             .getService(ConfigService.class);\n            this.searchTagKeys = Arrays.asList(configService.getSearchableTracesTags().split(Const.COMMA));\n            this.sampler = new TraceSegmentSampler(config.getTraceSampleRateWatcher());\n            this.forceSampleErrorSegment = config.isForceSampleErrorSegment();\n            this.namingControl = moduleManager.find(CoreModule.NAME)\n                                              .provider()\n                                              .getService(NamingControl.class);\n            this.segmentStatusAnalyzer = SegmentStatusStrategy.findByName(config.getSegmentStatusAnalysisStrategy())\n                                                              .getExceptionAnalyzer();\n            this.traceLatencyThresholdsAndWatcher = config.getTraceLatencyThresholdsAndWatcher();\n        }\n","date":"2020-10-30 14:30:19","endLine":212,"groupId":"1926","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"Factory","params":"(ModuleManagermoduleManager@AnalyzerModuleConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/51/e4c682024779cb91ac9a34f1608b1a39f29f8a.src","preCode":"        public Factory(ModuleManager moduleManager, AnalyzerModuleConfig config) {\n            this.sourceReceiver = moduleManager.find(CoreModule.NAME).provider().getService(SourceReceiver.class);\n            final ConfigService configService = moduleManager.find(CoreModule.NAME)\n                                                             .provider()\n                                                             .getService(ConfigService.class);\n            this.searchTagKeys = Arrays.asList(configService.getSearchableTracesTags().split(Const.COMMA));\n            this.sampler = new TraceSegmentSampler(config.getTraceSampleRateWatcher());\n            this.forceSampleErrorSegment = config.isForceSampleErrorSegment();\n            this.namingControl = moduleManager.find(CoreModule.NAME)\n                                              .provider()\n                                              .getService(NamingControl.class);\n            this.segmentStatusAnalyzer = SegmentStatusStrategy.findByName(config.getSegmentStatusAnalysisStrategy())\n                                                              .getExceptionAnalyzer();\n            this.traceLatencyThresholdsAndWatcher = config.getTraceLatencyThresholdsAndWatcher();\n        }\n","realPath":"oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/SegmentAnalysisListener.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"NB"}],"commitId":"528ee6de4010df28d31443b2d02702649025095d","commitMessage":"@@@OAL supports generating metrics from events (#7134)\n\n* OAL supports generating metrics from events\n\n* Add new dashboard for event metrics\n\n* Add some docs for event metrics","date":"2021-06-19 20:20:37","modifiedFileCount":"16","status":"M","submitter":"kezhenxu94"},{"authorTime":"2021-08-30 14:52:20","codes":[{"authorDate":"2021-06-19 20:20:37","commitOrder":7,"curCode":"        public Factory(final ModuleManager moduleManager) {\n            this.namingControl = moduleManager.find(CoreModule.NAME)\n                                              .provider()\n                                              .getService(NamingControl.class);\n            this.sourceReceiver = moduleManager.find(CoreModule.NAME)\n                                               .provider()\n                                               .getService(SourceReceiver.class);\n        }\n","date":"2021-06-19 20:20:37","endLine":88,"groupId":"10712","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"Factory","params":"(finalModuleManagermoduleManager)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/b8/c0d18538941d216be304611fd08885c4002c67.src","preCode":"        public Factory(final ModuleManager moduleManager) {\n            this.namingControl = moduleManager.find(CoreModule.NAME)\n                                              .provider()\n                                              .getService(NamingControl.class);\n            this.sourceReceiver = moduleManager.find(CoreModule.NAME)\n                                               .provider()\n                                               .getService(SourceReceiver.class);\n        }\n","realPath":"oap-server/analyzer/event-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/event/listener/EventRecordAnalyzerListener.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"N"},{"authorDate":"2021-08-30 14:52:20","commitOrder":7,"curCode":"        public Factory(ModuleManager moduleManager, AnalyzerModuleConfig config) {\n            this.sourceReceiver = moduleManager.find(CoreModule.NAME).provider().getService(SourceReceiver.class);\n            final ConfigService configService = moduleManager.find(CoreModule.NAME)\n                                                             .provider()\n                                                             .getService(ConfigService.class);\n            this.searchTagKeys = Arrays.asList(configService.getSearchableTracesTags().split(Const.COMMA));\n            this.sampler = new TraceSegmentSampler(config.getTraceSamplingPolicyWatcher());\n            this.forceSampleErrorSegment = config.isForceSampleErrorSegment();\n            this.namingControl = moduleManager.find(CoreModule.NAME)\n                                              .provider()\n                                              .getService(NamingControl.class);\n            this.segmentStatusAnalyzer = SegmentStatusStrategy.findByName(config.getSegmentStatusAnalysisStrategy())\n                                                              .getExceptionAnalyzer();\n        }\n","date":"2021-08-30 14:52:20","endLine":204,"groupId":"10712","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"Factory","params":"(ModuleManagermoduleManager@AnalyzerModuleConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c2/b87aa60b542aa174f1d7ecdab060c136e52282.src","preCode":"        public Factory(ModuleManager moduleManager, AnalyzerModuleConfig config) {\n            this.sourceReceiver = moduleManager.find(CoreModule.NAME).provider().getService(SourceReceiver.class);\n            final ConfigService configService = moduleManager.find(CoreModule.NAME)\n                                                             .provider()\n                                                             .getService(ConfigService.class);\n            this.searchTagKeys = Arrays.asList(configService.getSearchableTracesTags().split(Const.COMMA));\n            this.sampler = new TraceSegmentSampler(config.getTraceSampleRateWatcher());\n            this.forceSampleErrorSegment = config.isForceSampleErrorSegment();\n            this.namingControl = moduleManager.find(CoreModule.NAME)\n                                              .provider()\n                                              .getService(NamingControl.class);\n            this.segmentStatusAnalyzer = SegmentStatusStrategy.findByName(config.getSegmentStatusAnalysisStrategy())\n                                                              .getExceptionAnalyzer();\n            this.traceLatencyThresholdsAndWatcher = config.getTraceLatencyThresholdsAndWatcher();\n        }\n","realPath":"oap-server/analyzer/agent-analyzer/src/main/java/org/apache/skywalking/oap/server/analyzer/provider/trace/parser/listener/SegmentAnalysisListener.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"}],"commitId":"1c0fc982b2dc61ca7e452142df7f9846e867d71d","commitMessage":"@@@Support configure sampling rate dynamically for service dimension on the backend side (#7554)\n\n","date":"2021-08-30 14:52:20","modifiedFileCount":"4","status":"M","submitter":"HendSame"}]
