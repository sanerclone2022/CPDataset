[{"authorTime":"2020-11-03 17:54:33","codes":[{"authorDate":"2021-03-30 08:48:22","commitOrder":3,"curCode":"    private void listenServiceEvents(final CoreV1Api coreV1Api, final SharedInformerFactory factory) {\n        factory.sharedIndexInformerFor(\n            params -> coreV1Api.listServiceForAllNamespacesCall(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                params.resourceVersion,\n                300,\n                params.watch,\n                null\n            ),\n            V1Service.class,\n            V1ServiceList.class\n        ).addEventHandler(new ResourceEventHandler<V1Service>() {\n            @Override\n            public void onAdd(final V1Service service) {\n                addService(service);\n            }\n\n            @Override\n            public void onUpdate(final V1Service oldService, final V1Service newService) {\n                addService(newService);\n            }\n\n            @Override\n            public void onDelete(final V1Service service, final boolean deletedFinalStateUnknown) {\n                removeService(service);\n            }\n        });\n    }\n","date":"2021-03-30 08:48:22","endLine":122,"groupId":"5031","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"listenServiceEvents","params":"(finalCoreV1ApicoreV1Api@finalSharedInformerFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/aa/49b051eab229633d4a006bb664759cb40e84a8.src","preCode":"    private void listenServiceEvents(final CoreV1Api coreV1Api, final SharedInformerFactory factory) {\n        factory.sharedIndexInformerFor(\n            params -> coreV1Api.listServiceForAllNamespacesCall(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                params.resourceVersion,\n                300,\n                params.watch,\n                null\n            ),\n            V1Service.class,\n            V1ServiceList.class\n        ).addEventHandler(new ResourceEventHandler<V1Service>() {\n            @Override\n            public void onAdd(final V1Service service) {\n                addService(service);\n            }\n\n            @Override\n            public void onUpdate(final V1Service oldService, final V1Service newService) {\n                addService(newService);\n            }\n\n            @Override\n            public void onDelete(final V1Service service, final boolean deletedFinalStateUnknown) {\n                removeService(service);\n            }\n        });\n    }\n","realPath":"oap-server/analyzer/meter-analyzer/src/main/java/org/apache/skywalking/oap/meter/analyzer/k8s/K8sInfoRegistry.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"B"},{"authorDate":"2020-11-03 17:54:33","commitOrder":3,"curCode":"    private void listenServiceEvents(final CoreV1Api coreV1Api, final SharedInformerFactory factory) {\n        factory.sharedIndexInformerFor(\n            params -> coreV1Api.listServiceForAllNamespacesCall(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                params.resourceVersion,\n                300,\n                params.watch,\n                null\n            ),\n            V1Service.class,\n            V1ServiceList.class\n        ).addEventHandler(new ResourceEventHandler<V1Service>() {\n            @Override\n            public void onAdd(final V1Service service) {\n                addService(service);\n            }\n\n            @Override\n            public void onUpdate(final V1Service oldService, final V1Service newService) {\n                addService(newService);\n            }\n\n            @Override\n            public void onDelete(final V1Service service, final boolean deletedFinalStateUnknown) {\n                removeService(service);\n            }\n        });\n    }\n","date":"2020-11-03 17:54:33","endLine":133,"groupId":"5031","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"listenServiceEvents","params":"(finalCoreV1ApicoreV1Api@finalSharedInformerFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/1f/116e982996611d803e6f3785f4d57f94576083.src","preCode":"    private void listenServiceEvents(final CoreV1Api coreV1Api, final SharedInformerFactory factory) {\n        factory.sharedIndexInformerFor(\n            params -> coreV1Api.listServiceForAllNamespacesCall(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                params.resourceVersion,\n                300,\n                params.watch,\n                null\n            ),\n            V1Service.class,\n            V1ServiceList.class\n        ).addEventHandler(new ResourceEventHandler<V1Service>() {\n            @Override\n            public void onAdd(final V1Service service) {\n                addService(service);\n            }\n\n            @Override\n            public void onUpdate(final V1Service oldService, final V1Service newService) {\n                addService(newService);\n            }\n\n            @Override\n            public void onDelete(final V1Service service, final boolean deletedFinalStateUnknown) {\n                removeService(service);\n            }\n        });\n    }\n","realPath":"oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/als/k8s/K8SServiceRegistry.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"NB"}],"commitId":"523944a59f7e6f8a3ed6f92b50401f733ffad6a5","commitMessage":"@@@Add  arg `namespace` to func `retagByK8sMeta`.  rebuild the relationship between pod and service by labels (#6650)\n\n* Add `namespace` to func `retagByK8sMeta`.  rebuild the relationship between pod and service by labels\n\n* add param check","date":"2021-03-30 08:48:22","modifiedFileCount":"5","status":"M","submitter":"wankai123"},{"authorTime":"2021-05-10 05:07:09","codes":[{"authorDate":"2021-05-10 05:07:09","commitOrder":4,"curCode":"    private void listenServiceEvents(final CoreV1Api coreV1Api, final SharedInformerFactory factory) {\n        factory.sharedIndexInformerFor(\n            params -> coreV1Api.listServiceForAllNamespacesCall(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                params.resourceVersion,\n                null,\n                params.timeoutSeconds,\n                params.watch,\n                null\n            ),\n            V1Service.class,\n            V1ServiceList.class\n        ).addEventHandler(new ResourceEventHandler<V1Service>() {\n            @Override\n            public void onAdd(final V1Service service) {\n                addService(service);\n            }\n\n            @Override\n            public void onUpdate(final V1Service oldService, final V1Service newService) {\n                addService(newService);\n            }\n\n            @Override\n            public void onDelete(final V1Service service, final boolean deletedFinalStateUnknown) {\n                removeService(service);\n            }\n        });\n    }\n","date":"2021-05-10 05:07:09","endLine":123,"groupId":"10752","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"listenServiceEvents","params":"(finalCoreV1ApicoreV1Api@finalSharedInformerFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/8b/76c5615a971ad89f3ee9c6eb0c00181bc06dd1.src","preCode":"    private void listenServiceEvents(final CoreV1Api coreV1Api, final SharedInformerFactory factory) {\n        factory.sharedIndexInformerFor(\n            params -> coreV1Api.listServiceForAllNamespacesCall(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                params.resourceVersion,\n                300,\n                params.watch,\n                null\n            ),\n            V1Service.class,\n            V1ServiceList.class\n        ).addEventHandler(new ResourceEventHandler<V1Service>() {\n            @Override\n            public void onAdd(final V1Service service) {\n                addService(service);\n            }\n\n            @Override\n            public void onUpdate(final V1Service oldService, final V1Service newService) {\n                addService(newService);\n            }\n\n            @Override\n            public void onDelete(final V1Service service, final boolean deletedFinalStateUnknown) {\n                removeService(service);\n            }\n        });\n    }\n","realPath":"oap-server/analyzer/meter-analyzer/src/main/java/org/apache/skywalking/oap/meter/analyzer/k8s/K8sInfoRegistry.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2021-05-10 05:07:09","commitOrder":4,"curCode":"    private void listenServiceEvents(final CoreV1Api coreV1Api, final SharedInformerFactory factory) {\n        factory.sharedIndexInformerFor(\n            params -> coreV1Api.listServiceForAllNamespacesCall(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                params.resourceVersion,\n                null,\n                params.timeoutSeconds,\n                params.watch,\n                null\n            ),\n            V1Service.class,\n            V1ServiceList.class\n        ).addEventHandler(new ResourceEventHandler<V1Service>() {\n            @Override\n            public void onAdd(final V1Service service) {\n                addService(service);\n            }\n\n            @Override\n            public void onUpdate(final V1Service oldService, final V1Service newService) {\n                addService(newService);\n            }\n\n            @Override\n            public void onDelete(final V1Service service, final boolean deletedFinalStateUnknown) {\n                removeService(service);\n            }\n        });\n    }\n","date":"2021-05-10 05:07:09","endLine":133,"groupId":"10752","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"listenServiceEvents","params":"(finalCoreV1ApicoreV1Api@finalSharedInformerFactoryfactory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/41/0c382fcf08ce95a377fd8d2e2fc5754ac5c2b1.src","preCode":"    private void listenServiceEvents(final CoreV1Api coreV1Api, final SharedInformerFactory factory) {\n        factory.sharedIndexInformerFor(\n            params -> coreV1Api.listServiceForAllNamespacesCall(\n                null,\n                null,\n                null,\n                null,\n                null,\n                null,\n                params.resourceVersion,\n                300,\n                params.watch,\n                null\n            ),\n            V1Service.class,\n            V1ServiceList.class\n        ).addEventHandler(new ResourceEventHandler<V1Service>() {\n            @Override\n            public void onAdd(final V1Service service) {\n                addService(service);\n            }\n\n            @Override\n            public void onUpdate(final V1Service oldService, final V1Service newService) {\n                addService(newService);\n            }\n\n            @Override\n            public void onDelete(final V1Service service, final boolean deletedFinalStateUnknown) {\n                removeService(service);\n            }\n        });\n    }\n","realPath":"oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/als/k8s/K8SServiceRegistry.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"94adbf1c1f20a59426e358858302ae2ff5260359","commitMessage":"@@@Bump Kubernetes client-java version (#6920)\n\n","date":"2021-05-10 05:07:09","modifiedFileCount":"7","status":"M","submitter":"Zhenxu Ke"}]
