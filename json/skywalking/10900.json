[{"authorTime":"2020-05-08 22:54:36","codes":[{"authorDate":"2020-04-10 11:03:24","commitOrder":2,"curCode":"    public TraceSegmentReportServiceHandler(ModuleManager moduleManager,\n                                            SegmentParserListenerManager listenerManager,\n                                            TraceServiceModuleConfig config) {\n        this.moduleManager = moduleManager;\n        this.listenerManager = listenerManager;\n        this.config = config;\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider()\n                                                     .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\", \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"grpc\")\n        );\n        errorCounter = metricsCreator.createCounter(\"trace_analysis_error_count\", \"The error number of trace analysis\",\n                                                    new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"grpc\")\n        );\n    }\n","date":"2020-04-10 11:03:24","endLine":61,"groupId":"6111","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"TraceSegmentReportServiceHandler","params":"(ModuleManagermoduleManager@SegmentParserListenerManagerlistenerManager@TraceServiceModuleConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/8e/5df3f73ed7d72a5991be51010c426532d28f88.src","preCode":"    public TraceSegmentReportServiceHandler(ModuleManager moduleManager,\n                                            SegmentParserListenerManager listenerManager,\n                                            TraceServiceModuleConfig config) {\n        this.moduleManager = moduleManager;\n        this.listenerManager = listenerManager;\n        this.config = config;\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider()\n                                                     .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\", \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"grpc\")\n        );\n        errorCounter = metricsCreator.createCounter(\"trace_analysis_error_count\", \"The error number of trace analysis\",\n                                                    new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"grpc\")\n        );\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/handler/v8/grpc/TraceSegmentReportServiceHandler.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"NB"},{"authorDate":"2020-05-08 22:54:36","commitOrder":2,"curCode":"    public TraceSegmentReportBaseServletHandler(ModuleManager moduleManager,\n                                                SegmentParserListenerManager listenerManager,\n                                                TraceServiceModuleConfig config) {\n        this.moduleManager = moduleManager;\n        this.listenerManager = listenerManager;\n        this.config = config;\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider()\n                                                     .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\", \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"http\")\n        );\n        errorCounter = metricsCreator.createCounter(\"trace_analysis_error_count\", \"The error number of trace analysis\",\n                                                    new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"http\")\n        );\n    }\n","date":"2020-05-08 22:54:36","endLine":63,"groupId":"6111","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"TraceSegmentReportBaseServletHandler","params":"(ModuleManagermoduleManager@SegmentParserListenerManagerlistenerManager@TraceServiceModuleConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/63/cfb41386cb240aeb718637bf9d7ce42022b16a.src","preCode":"    public TraceSegmentReportBaseServletHandler(ModuleManager moduleManager,\n                                                SegmentParserListenerManager listenerManager,\n                                                TraceServiceModuleConfig config) {\n        this.moduleManager = moduleManager;\n        this.listenerManager = listenerManager;\n        this.config = config;\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider()\n                                                     .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\", \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"http\")\n        );\n        errorCounter = metricsCreator.createCounter(\"trace_analysis_error_count\", \"The error number of trace analysis\",\n                                                    new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"http\")\n        );\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/handler/v8/rest/TraceSegmentReportBaseServletHandler.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"816878897cfb586d9c2865e36f2f5cb4be0c1482","commitMessage":"@@@Support multiple ways to analyze segments in rest (#4745)\n\n* support multiple segments analyze\n\n* Support multiple ways to analyze segment data\n\n* Change to support single or list of the segment data.  add the document\n\n* fix document and change the lua agent commit id\n\nCo-authored-by: Mrproliu <mrproliu@lagou.com>","date":"2020-05-08 22:54:36","modifiedFileCount":"1","status":"M","submitter":"mrproliu"},{"authorTime":"2020-07-30 11:55:49","codes":[{"authorDate":"2020-07-30 11:55:49","commitOrder":3,"curCode":"    public TraceSegmentReportServiceHandler(ModuleManager moduleManager) {\n        this.moduleManager = moduleManager;\n        this.segmentParserService = moduleManager.find(AnalyzerModule.NAME)\n                                                 .provider()\n                                                 .getService(ISegmentParserService.class);\n\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider()\n                                                     .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\", \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"grpc\")\n        );\n        errorCounter = metricsCreator.createCounter(\"trace_analysis_error_count\", \"The error number of trace analysis\",\n                                                    new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"grpc\")\n        );\n    }\n","date":"2020-07-30 11:55:49","endLine":60,"groupId":"10900","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"TraceSegmentReportServiceHandler","params":"(ModuleManagermoduleManager)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/b9/bbc4ef6c44cdbd9db9ba25bdb1864886fb68f9.src","preCode":"    public TraceSegmentReportServiceHandler(ModuleManager moduleManager,\n                                            SegmentParserListenerManager listenerManager,\n                                            TraceServiceModuleConfig config) {\n        this.moduleManager = moduleManager;\n        this.listenerManager = listenerManager;\n        this.config = config;\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider()\n                                                     .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\", \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"grpc\")\n        );\n        errorCounter = metricsCreator.createCounter(\"trace_analysis_error_count\", \"The error number of trace analysis\",\n                                                    new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"grpc\")\n        );\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/handler/v8/grpc/TraceSegmentReportServiceHandler.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2020-07-30 11:55:49","commitOrder":3,"curCode":"    public TraceSegmentReportBaseServletHandler(ModuleManager moduleManager) {\n        this.moduleManager = moduleManager;\n        this.segmentParserService = moduleManager.find(AnalyzerModule.NAME)\n                                                 .provider()\n                                                 .getService(ISegmentParserService.class);\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider()\n                                                     .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\", \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"http\")\n        );\n        errorCounter = metricsCreator.createCounter(\"trace_analysis_error_count\", \"The error number of trace analysis\",\n                                                    new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"http\")\n        );\n    }\n","date":"2020-07-30 11:55:49","endLine":60,"groupId":"10900","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"TraceSegmentReportBaseServletHandler","params":"(ModuleManagermoduleManager)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c8/22a7ba83720db455381945fa1297ba1f3155e8.src","preCode":"    public TraceSegmentReportBaseServletHandler(ModuleManager moduleManager,\n                                                SegmentParserListenerManager listenerManager,\n                                                TraceServiceModuleConfig config) {\n        this.moduleManager = moduleManager;\n        this.listenerManager = listenerManager;\n        this.config = config;\n        MetricsCreator metricsCreator = moduleManager.find(TelemetryModule.NAME)\n                                                     .provider()\n                                                     .getService(MetricsCreator.class);\n        histogram = metricsCreator.createHistogramMetric(\n            \"trace_in_latency\", \"The process latency of trace data\",\n            new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"http\")\n        );\n        errorCounter = metricsCreator.createCounter(\"trace_analysis_error_count\", \"The error number of trace analysis\",\n                                                    new MetricsTag.Keys(\"protocol\"), new MetricsTag.Values(\"http\")\n        );\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-trace-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/trace/provider/handler/v8/rest/TraceSegmentReportBaseServletHandler.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"f9257f5274f6a55e8bf8424444707aecf7a1f2c1","commitMessage":"@@@Provide kafka as collector/reporter (#4847)\n\n","date":"2020-07-30 11:55:49","modifiedFileCount":"24","status":"M","submitter":"Daming"}]
