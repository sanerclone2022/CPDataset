[{"authorTime":"2021-02-06 21:22:58","codes":[{"authorDate":"2021-02-06 21:22:58","commitOrder":1,"curCode":"        public SegmentRecord storage2Entity(Map<String, Object> dbMap) {\n            SegmentRecord record = new SegmentRecord();\n            record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n            record.setTraceId((String) dbMap.get(TRACE_ID));\n            record.setStatement((String) dbMap.get(TopN.STATEMENT));\n            record.setServiceId((String) dbMap.get(SERVICE_ID));\n            record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n            record.setEndpointName((String) dbMap.get(ENDPOINT_NAME));\n            record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n            record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n            record.setEndTime(((Number) dbMap.get(END_TIME)).longValue());\n            record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n            record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n            record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n            if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n                record.setDataBinary(new byte[] {});\n            } else {\n                record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n            }\n            record.setVersion(((Number) dbMap.get(VERSION)).intValue());\n            \r\n            return record;\n        }\n","date":"2021-02-06 21:22:58","endLine":183,"groupId":"1158","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"storage2Entity","params":"(Map<String@Object>dbMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/06/03f94375d502adadbd260b089ca8515fa3ae1f.src","preCode":"        public SegmentRecord storage2Entity(Map<String, Object> dbMap) {\n            SegmentRecord record = new SegmentRecord();\n            record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n            record.setTraceId((String) dbMap.get(TRACE_ID));\n            record.setStatement((String) dbMap.get(TopN.STATEMENT));\n            record.setServiceId((String) dbMap.get(SERVICE_ID));\n            record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n            record.setEndpointName((String) dbMap.get(ENDPOINT_NAME));\n            record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n            record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n            record.setEndTime(((Number) dbMap.get(END_TIME)).longValue());\n            record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n            record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n            record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n            if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n                record.setDataBinary(new byte[] {});\n            } else {\n                record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n            }\n            record.setVersion(((Number) dbMap.get(VERSION)).intValue());\n            \r\n            return record;\n        }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/manual/segment/SegmentRecord.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"B"},{"authorDate":"2021-02-06 21:22:58","commitOrder":1,"curCode":"    public Record storage2Entity(Map<String, Object> dbMap) {\n        SegmentRecord record = new SegmentRecord();\n        record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n        record.setTraceId((String) dbMap.get(TRACE_ID));\n        record.setStatement((String) dbMap.get(TopN.STATEMENT));\n        record.setServiceId((String) dbMap.get(SERVICE_ID));\n        record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n        record.setEndpointName((String) dbMap.get(ENDPOINT_NAME));\n        record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n        record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n        record.setEndTime(((Number) dbMap.get(END_TIME)).longValue());\n        record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n        record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n        record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n        if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n            record.setDataBinary(new byte[] {});\n        } else {\n            record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n        }\n        record.setVersion(((Number) dbMap.get(VERSION)).intValue());\n        \r\n        return record;\n    }\n","date":"2021-02-06 21:22:58","endLine":113,"groupId":"1158","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"storage2Entity","params":"(Map<String@Object>dbMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/54/afcf0de07420099e66ef46761677f8b7c3e6ca.src","preCode":"    public Record storage2Entity(Map<String, Object> dbMap) {\n        SegmentRecord record = new SegmentRecord();\n        record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n        record.setTraceId((String) dbMap.get(TRACE_ID));\n        record.setStatement((String) dbMap.get(TopN.STATEMENT));\n        record.setServiceId((String) dbMap.get(SERVICE_ID));\n        record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n        record.setEndpointName((String) dbMap.get(ENDPOINT_NAME));\n        record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n        record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n        record.setEndTime(((Number) dbMap.get(END_TIME)).longValue());\n        record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n        record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n        record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n        if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n            record.setDataBinary(new byte[] {});\n        } else {\n            record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n        }\n        record.setVersion(((Number) dbMap.get(VERSION)).intValue());\n        \r\n        return record;\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/dao/H2SegmentRecordBuilder.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"fc23dabf37a85cfc27482dbaf25b0109114f6ef7","commitMessage":"@@@Support multiple implementations of StorageBuilder in different storage implementations - stage 1. (#6334)\n\n","date":"2021-02-06 21:22:58","modifiedFileCount":"74","status":"B","submitter":"?? Wu Sheng"},{"authorTime":"2021-08-10 00:05:06","codes":[{"authorDate":"2021-08-10 00:05:06","commitOrder":2,"curCode":"        public SegmentRecord storage2Entity(Map<String, Object> dbMap) {\n            SegmentRecord record = new SegmentRecord();\n            record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n            record.setTraceId((String) dbMap.get(TRACE_ID));\n            record.setServiceId((String) dbMap.get(SERVICE_ID));\n            record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n            record.setEndpointName((String) dbMap.get(ENDPOINT_NAME));\n            record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n            record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n            record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n            record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n            record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n            if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n                record.setDataBinary(new byte[] {});\n            } else {\n                record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n            }\n            \r\n            return record;\n        }\n","date":"2021-08-10 00:05:06","endLine":157,"groupId":"3902","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"storage2Entity","params":"(Map<String@Object>dbMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/7a/f441927fbbcd1e54d844d5a8a6c6a57cc1d280.src","preCode":"        public SegmentRecord storage2Entity(Map<String, Object> dbMap) {\n            SegmentRecord record = new SegmentRecord();\n            record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n            record.setTraceId((String) dbMap.get(TRACE_ID));\n            record.setStatement((String) dbMap.get(TopN.STATEMENT));\n            record.setServiceId((String) dbMap.get(SERVICE_ID));\n            record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n            record.setEndpointName((String) dbMap.get(ENDPOINT_NAME));\n            record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n            record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n            record.setEndTime(((Number) dbMap.get(END_TIME)).longValue());\n            record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n            record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n            record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n            if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n                record.setDataBinary(new byte[] {});\n            } else {\n                record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n            }\n            record.setVersion(((Number) dbMap.get(VERSION)).intValue());\n            \r\n            return record;\n        }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/manual/segment/SegmentRecord.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"},{"authorDate":"2021-08-10 00:05:06","commitOrder":2,"curCode":"    public Record storage2Entity(Map<String, Object> dbMap) {\n        SegmentRecord record = new SegmentRecord();\n        record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n        record.setTraceId((String) dbMap.get(TRACE_ID));\n        record.setServiceId((String) dbMap.get(SERVICE_ID));\n        record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n        record.setEndpointName((String) dbMap.get(ENDPOINT_NAME));\n        record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n        record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n        record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n        record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n        record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n        if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n            record.setDataBinary(new byte[] {});\n        } else {\n            record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n        }\n        \r\n        return record;\n    }\n","date":"2021-08-10 00:05:06","endLine":99,"groupId":"3902","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"storage2Entity","params":"(Map<String@Object>dbMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a7/12cc73e7bcf3e4157d213de2897c5dff23ddb1.src","preCode":"    public Record storage2Entity(Map<String, Object> dbMap) {\n        SegmentRecord record = new SegmentRecord();\n        record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n        record.setTraceId((String) dbMap.get(TRACE_ID));\n        record.setStatement((String) dbMap.get(TopN.STATEMENT));\n        record.setServiceId((String) dbMap.get(SERVICE_ID));\n        record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n        record.setEndpointName((String) dbMap.get(ENDPOINT_NAME));\n        record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n        record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n        record.setEndTime(((Number) dbMap.get(END_TIME)).longValue());\n        record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n        record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n        record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n        if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n            record.setDataBinary(new byte[] {});\n        } else {\n            record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n        }\n        record.setVersion(((Number) dbMap.get(VERSION)).intValue());\n        \r\n        return record;\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/dao/H2SegmentRecordBuilder.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"cc66254729f74d739ff2a85c72ded44fdaeb1cd4","commitMessage":"@@@Remove statement.  version.  and endtime from segment entity. (#7427)\n\n","date":"2021-08-10 00:05:06","modifiedFileCount":"11","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2021-08-11 16:27:10","codes":[{"authorDate":"2021-08-11 16:27:10","commitOrder":3,"curCode":"        public SegmentRecord storage2Entity(Map<String, Object> dbMap) {\n            SegmentRecord record = new SegmentRecord();\n            record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n            record.setTraceId((String) dbMap.get(TRACE_ID));\n            record.setServiceId((String) dbMap.get(SERVICE_ID));\n            record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n            record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n            record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n            record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n            record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n            record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n            if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n                record.setDataBinary(new byte[] {});\n            } else {\n                record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n            }\n            \r\n            return record;\n        }\n","date":"2021-08-11 16:27:10","endLine":151,"groupId":"10436","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"storage2Entity","params":"(Map<String@Object>dbMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/21/92ce229e5c368ee60069c7f7ee89927f603e27.src","preCode":"        public SegmentRecord storage2Entity(Map<String, Object> dbMap) {\n            SegmentRecord record = new SegmentRecord();\n            record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n            record.setTraceId((String) dbMap.get(TRACE_ID));\n            record.setServiceId((String) dbMap.get(SERVICE_ID));\n            record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n            record.setEndpointName((String) dbMap.get(ENDPOINT_NAME));\n            record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n            record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n            record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n            record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n            record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n            if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n                record.setDataBinary(new byte[] {});\n            } else {\n                record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n            }\n            \r\n            return record;\n        }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/manual/segment/SegmentRecord.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2021-08-11 16:27:10","commitOrder":3,"curCode":"    public Record storage2Entity(Map<String, Object> dbMap) {\n        SegmentRecord record = new SegmentRecord();\n        record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n        record.setTraceId((String) dbMap.get(TRACE_ID));\n        record.setServiceId((String) dbMap.get(SERVICE_ID));\n        record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n        record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n        record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n        record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n        record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n        record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n        if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n            record.setDataBinary(new byte[] {});\n        } else {\n            record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n        }\n        \r\n        return record;\n    }\n","date":"2021-08-11 16:27:10","endLine":96,"groupId":"10436","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"storage2Entity","params":"(Map<String@Object>dbMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/f5/b21fe8d2da5cb37d09522c7f3bf1685ea90066.src","preCode":"    public Record storage2Entity(Map<String, Object> dbMap) {\n        SegmentRecord record = new SegmentRecord();\n        record.setSegmentId((String) dbMap.get(SEGMENT_ID));\n        record.setTraceId((String) dbMap.get(TRACE_ID));\n        record.setServiceId((String) dbMap.get(SERVICE_ID));\n        record.setServiceInstanceId((String) dbMap.get(SERVICE_INSTANCE_ID));\n        record.setEndpointName((String) dbMap.get(ENDPOINT_NAME));\n        record.setEndpointId((String) dbMap.get(ENDPOINT_ID));\n        record.setStartTime(((Number) dbMap.get(START_TIME)).longValue());\n        record.setLatency(((Number) dbMap.get(LATENCY)).intValue());\n        record.setIsError(((Number) dbMap.get(IS_ERROR)).intValue());\n        record.setTimeBucket(((Number) dbMap.get(TIME_BUCKET)).longValue());\n        if (StringUtil.isEmpty((String) dbMap.get(DATA_BINARY))) {\n            record.setDataBinary(new byte[] {});\n        } else {\n            record.setDataBinary(Base64.getDecoder().decode((String) dbMap.get(DATA_BINARY)));\n        }\n        \r\n        return record;\n    }\n","realPath":"oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/dao/H2SegmentRecordBuilder.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"de6cae34295f1558a92430323accc617202c754d","commitMessage":"@@@[Break Change] Remove endpoint name in the trace query condition. (#7438)\n\n* [Break Change] Remove endpoint name in the trace query condition.\n\n* Fix a local UT error(MacOS only)","date":"2021-08-11 16:27:10","modifiedFileCount":"19","status":"M","submitter":"?? Wu Sheng"}]
