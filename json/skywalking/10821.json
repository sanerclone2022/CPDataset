[{"authorTime":"2019-05-10 08:05:37","codes":[{"authorDate":"2018-09-19 15:21:56","commitOrder":2,"curCode":"    @Override public IndexRequest prepareBatchInsert(String modelName, Record record) throws IOException {\n        Map<String, Object> objectMap = storageBuilder.data2Map(record);\n\n        XContentBuilder builder = XContentFactory.jsonBuilder().startObject();\n        for (String key : objectMap.keySet()) {\n            Object value = objectMap.get(key);\n            if (value instanceof StorageDataType) {\n                builder.field(key, ((StorageDataType)value).toStorageData());\n            } else {\n                builder.field(key, value);\n            }\n        }\n        builder.endObject();\n        return getClient().prepareInsert(modelName, record.id(), builder);\n    }\n","date":"2018-09-19 15:21:56","endLine":56,"groupId":"2112","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareBatchInsert","params":"(StringmodelName@Recordrecord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/be/c4cabaf56c82c8bc54cc0fb6234b15793c2eb2.src","preCode":"    @Override public IndexRequest prepareBatchInsert(String modelName, Record record) throws IOException {\n        Map<String, Object> objectMap = storageBuilder.data2Map(record);\n\n        XContentBuilder builder = XContentFactory.jsonBuilder().startObject();\n        for (String key : objectMap.keySet()) {\n            Object value = objectMap.get(key);\n            if (value instanceof StorageDataType) {\n                builder.field(key, ((StorageDataType)value).toStorageData());\n            } else {\n                builder.field(key, value);\n            }\n        }\n        builder.endObject();\n        return getClient().prepareInsert(modelName, record.id(), builder);\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/RecordEsDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"NB"},{"authorDate":"2019-05-10 08:05:37","commitOrder":2,"curCode":"    @Override public UpdateRequest prepareBatchUpdate(String modelName, Metrics metrics) throws IOException {\n        Map<String, Object> objectMap = storageBuilder.data2Map(metrics);\n\n        XContentBuilder builder = XContentFactory.jsonBuilder().startObject();\n        for (String key : objectMap.keySet()) {\n            Object value = objectMap.get(key);\n            if (value instanceof StorageDataType) {\n                builder.field(key, ((StorageDataType)value).toStorageData());\n            } else {\n                builder.field(key, value);\n            }\n        }\n        builder.endObject();\n        return getClient().prepareUpdate(modelName, metrics.id(), builder);\n    }\n","date":"2019-05-10 08:05:37","endLine":86,"groupId":"2112","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareBatchUpdate","params":"(StringmodelName@Metricsmetrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/50/95252d98e59699c999374a30cc5cf6c44406a0.src","preCode":"    @Override public UpdateRequest prepareBatchUpdate(String modelName, Metrics metrics) throws IOException {\n        Map<String, Object> objectMap = storageBuilder.data2Map(metrics);\n\n        XContentBuilder builder = XContentFactory.jsonBuilder().startObject();\n        for (String key : objectMap.keySet()) {\n            Object value = objectMap.get(key);\n            if (value instanceof StorageDataType) {\n                builder.field(key, ((StorageDataType)value).toStorageData());\n            } else {\n                builder.field(key, value);\n            }\n        }\n        builder.endObject();\n        return getClient().prepareUpdate(modelName, metrics.id(), builder);\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/MetricsEsDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"ed78dabe8b142be3d546d349046768135f0a752a","commitMessage":"@@@Rename metric and indicator to metrics. (#2643)\n\n* Rename metric to metrics.\n\n* Fixed test case execute failure issues.\n","date":"2019-05-10 08:05:37","modifiedFileCount":"102","status":"M","submitter":"??? pengys"},{"authorTime":"2021-03-11 15:11:37","codes":[{"authorDate":"2021-03-11 15:11:37","commitOrder":3,"curCode":"    public InsertRequest prepareBatchInsert(Model model, Record record) throws IOException {\n        XContentBuilder builder = map2builder(\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(record)));\n        String modelName = TimeSeriesUtils.writeIndexName(model, record.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, record.id());\n        return getClient().prepareInsert(modelName, id, builder);\n    }\n","date":"2021-03-11 15:11:37","endLine":46,"groupId":"6787","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareBatchInsert","params":"(Modelmodel@Recordrecord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/f2/3bc6125ed19727c320fd53f1d84546505e3efd.src","preCode":"    @Override public IndexRequest prepareBatchInsert(String modelName, Record record) throws IOException {\n        Map<String, Object> objectMap = storageBuilder.data2Map(record);\n\n        XContentBuilder builder = XContentFactory.jsonBuilder().startObject();\n        for (String key : objectMap.keySet()) {\n            Object value = objectMap.get(key);\n            if (value instanceof StorageDataType) {\n                builder.field(key, ((StorageDataType)value).toStorageData());\n            } else {\n                builder.field(key, value);\n            }\n        }\n        builder.endObject();\n        return getClient().prepareInsert(modelName, record.id(), builder);\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/RecordEsDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2021-03-11 15:11:37","commitOrder":3,"curCode":"    public UpdateRequest prepareBatchUpdate(Model model, Metrics metrics) throws IOException {\n        XContentBuilder builder = map2builder(\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(metrics)));\n        String modelName = TimeSeriesUtils.writeIndexName(model, metrics.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, metrics.id());\n        return getClient().prepareUpdate(modelName, id, builder);\n    }\n","date":"2021-03-11 15:11:37","endLine":74,"groupId":"1332","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareBatchUpdate","params":"(Modelmodel@Metricsmetrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/7a/728384000763fdb862d34c36a36115ac6c300d.src","preCode":"    @Override public UpdateRequest prepareBatchUpdate(String modelName, Metrics metrics) throws IOException {\n        Map<String, Object> objectMap = storageBuilder.data2Map(metrics);\n\n        XContentBuilder builder = XContentFactory.jsonBuilder().startObject();\n        for (String key : objectMap.keySet()) {\n            Object value = objectMap.get(key);\n            if (value instanceof StorageDataType) {\n                builder.field(key, ((StorageDataType)value).toStorageData());\n            } else {\n                builder.field(key, value);\n            }\n        }\n        builder.endObject();\n        return getClient().prepareUpdate(modelName, metrics.id(), builder);\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/MetricsEsDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"fd1d21021f8f3abd66f957ff8484a0e2c29ceb36","commitMessage":"@@@[Incompatible Enhancement]New index policy of ElasticSearch storage option (#6499)\n\n","date":"2021-03-11 15:11:37","modifiedFileCount":"39","status":"M","submitter":"Evan"},{"authorTime":"2021-09-06 15:21:35","codes":[{"authorDate":"2021-09-06 15:21:35","commitOrder":4,"curCode":"    public InsertRequest prepareBatchInsert(Model model, Record record) throws IOException {\n        Map<String, Object> builder =\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(record));\n        String modelName = TimeSeriesUtils.writeIndexName(model, record.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, record.id());\n        return getClient().prepareInsert(modelName, id, builder);\n    }\n","date":"2021-09-06 15:21:35","endLine":46,"groupId":"10821","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"prepareBatchInsert","params":"(Modelmodel@Recordrecord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/26/f35c7fa1b7f7c78595dc015a74b89b777fbe04.src","preCode":"    public InsertRequest prepareBatchInsert(Model model, Record record) throws IOException {\n        XContentBuilder builder = map2builder(\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(record)));\n        String modelName = TimeSeriesUtils.writeIndexName(model, record.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, record.id());\n        return getClient().prepareInsert(modelName, id, builder);\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/RecordEsDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2021-09-06 15:21:35","commitOrder":4,"curCode":"    public UpdateRequest prepareBatchUpdate(Model model, Metrics metrics) {\n        Map<String, Object> builder =\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(metrics));\n        String modelName = TimeSeriesUtils.writeIndexName(model, metrics.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, metrics.id());\n        return getClient().prepareUpdate(modelName, id, builder);\n    }\n","date":"2021-09-06 15:21:35","endLine":118,"groupId":"10821","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"prepareBatchUpdate","params":"(Modelmodel@Metricsmetrics)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/49/0af1cbebbf6dd0c641f5e3c46f7aa1ba29f5cb.src","preCode":"    public UpdateRequest prepareBatchUpdate(Model model, Metrics metrics) throws IOException {\n        XContentBuilder builder = map2builder(\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(metrics)));\n        String modelName = TimeSeriesUtils.writeIndexName(model, metrics.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, metrics.id());\n        return getClient().prepareUpdate(modelName, id, builder);\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/MetricsEsDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"26b81a2e5991ecdd2bde0f7071264cb80bb235cf","commitMessage":"@@@Rebuilt ElasticSearch client on top of their REST API (#7634)\n\n","date":"2021-09-06 15:21:35","modifiedFileCount":"60","status":"M","submitter":"kezhenxu94"}]
