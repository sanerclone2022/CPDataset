[{"authorTime":"2020-06-22 07:56:39","codes":[{"authorDate":"2020-07-20 12:35:35","commitOrder":2,"curCode":"    private void doStartConfigMapInformer(final ConfigmapConfigurationSettings settings) throws IOException {\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1ConfigMap> configMapSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedConfigMapCall(\n                settings.getNamespace(), null, null, null, null, settings.getLabelSelector()\n                , 1, params.resourceVersion, params.timeoutSeconds, params.watch, null\n            ),\n            V1ConfigMap.class, V1ConfigMapList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        configMapLister = new Lister<>(configMapSharedIndexInformer.getIndexer());\n    }\n","date":"2020-07-20 12:35:35","endLine":83,"groupId":"3700","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doStartConfigMapInformer","params":"(finalConfigmapConfigurationSettingssettings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/10/1fcfd02e0cf4f494dca7cbf609b7365750db1e.src","preCode":"    private void doStartConfigMapInformer(final ConfigmapConfigurationSettings settings) throws IOException {\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1ConfigMap> configMapSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedConfigMapCall(\n                settings.getNamespace(), null, null, null, null, settings.getLabelSelector()\n                , 1, params.resourceVersion, params.timeoutSeconds, params.watch, null\n            ),\n            V1ConfigMap.class, V1ConfigMapList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        configMapLister = new Lister<>(configMapSharedIndexInformer.getIndexer());\n    }\n","realPath":"oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"},{"authorDate":"2020-06-22 07:56:39","commitOrder":2,"curCode":"    private void doStartPodInformer(ClusterModuleKubernetesConfig podConfig) throws IOException {\n\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1Pod> podSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedPodCall(\n                podConfig.getNamespace(), null, null, null, null,\n                podConfig.getLabelSelector(), Integer.MAX_VALUE, params.resourceVersion, params.timeoutSeconds,\n                params.watch, null\n            ),\n            V1Pod.class, V1PodList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        podLister = new Lister<>(podSharedIndexInformer.getIndexer());\n    }\n","date":"2020-06-22 07:56:39","endLine":92,"groupId":"2004","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doStartPodInformer","params":"(ClusterModuleKubernetesConfigpodConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/03/71a3b5297ff5409255dce933cb8b28044ad7e1.src","preCode":"    private void doStartPodInformer(ClusterModuleKubernetesConfig podConfig) throws IOException {\n\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1Pod> podSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedPodCall(\n                podConfig.getNamespace(), null, null, null, null,\n                podConfig.getLabelSelector(), Integer.MAX_VALUE, params.resourceVersion, params.timeoutSeconds,\n                params.watch, null\n            ),\n            V1Pod.class, V1PodList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        podLister = new Lister<>(podSharedIndexInformer.getIndexer());\n    }\n","realPath":"oap-server/server-cluster-plugin/cluster-kubernetes-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/kubernetes/NamespacedPodListInformer.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"NB"}],"commitId":"e0325a44070cf94c73624a2c4c81819bc14ee09d","commitMessage":"@@@Configmap configuration (#4959)\n\n","date":"2020-07-20 12:35:35","modifiedFileCount":"0","status":"M","submitter":"Evan"},{"authorTime":"2020-11-03 17:54:33","codes":[{"authorDate":"2020-11-03 17:54:33","commitOrder":3,"curCode":"    private void doStartConfigMapInformer(final ConfigmapConfigurationSettings settings) throws IOException {\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1ConfigMap> configMapSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedConfigMapCall(\n                settings.getNamespace(), null, null, null, null, settings.getLabelSelector()\n                , 1, params.resourceVersion, 300, params.watch, null\n            ),\n            V1ConfigMap.class, V1ConfigMapList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        configMapLister = new Lister<>(configMapSharedIndexInformer.getIndexer());\n    }\n","date":"2020-11-03 17:54:33","endLine":83,"groupId":"3700","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doStartConfigMapInformer","params":"(finalConfigmapConfigurationSettingssettings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/d1/1dfec97830b5dd1a27014f64f2916eb7088551.src","preCode":"    private void doStartConfigMapInformer(final ConfigmapConfigurationSettings settings) throws IOException {\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1ConfigMap> configMapSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedConfigMapCall(\n                settings.getNamespace(), null, null, null, null, settings.getLabelSelector()\n                , 1, params.resourceVersion, params.timeoutSeconds, params.watch, null\n            ),\n            V1ConfigMap.class, V1ConfigMapList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        configMapLister = new Lister<>(configMapSharedIndexInformer.getIndexer());\n    }\n","realPath":"oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2020-11-03 17:54:33","commitOrder":3,"curCode":"    private void doStartPodInformer(ClusterModuleKubernetesConfig podConfig) throws IOException {\n\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1Pod> podSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedPodCall(\n                podConfig.getNamespace(), null, null, null, null,\n                podConfig.getLabelSelector(), Integer.MAX_VALUE, params.resourceVersion, 300,\n                params.watch, null\n            ),\n            V1Pod.class, V1PodList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        podLister = new Lister<>(podSharedIndexInformer.getIndexer());\n    }\n","date":"2020-11-03 17:54:33","endLine":94,"groupId":"2004","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doStartPodInformer","params":"(ClusterModuleKubernetesConfigpodConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/de/618bc90a402893716f558211d0e7bbbd7977a3.src","preCode":"    private void doStartPodInformer(ClusterModuleKubernetesConfig podConfig) throws IOException {\n\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1Pod> podSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedPodCall(\n                podConfig.getNamespace(), null, null, null, null,\n                podConfig.getLabelSelector(), Integer.MAX_VALUE, params.resourceVersion, params.timeoutSeconds,\n                params.watch, null\n            ),\n            V1Pod.class, V1PodList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        podLister = new Lister<>(podSharedIndexInformer.getIndexer());\n    }\n","realPath":"oap-server/server-cluster-plugin/cluster-kubernetes-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/kubernetes/NamespacedPodListInformer.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"cf563fcf58af63fcafe4bdac44a76c54680afd5e","commitMessage":"@@@Fixed unit of time mixing problem in kubernetes-client (#5777)\n\n","date":"2020-11-03 17:54:33","modifiedFileCount":"3","status":"M","submitter":"Evan"},{"authorTime":"2021-02-20 22:09:10","codes":[{"authorDate":"2021-02-20 22:09:10","commitOrder":4,"curCode":"    private void doStartConfigMapInformer(final ConfigmapConfigurationSettings settings) throws IOException {\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        Configuration.setDefaultApiClient(apiClient);\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1ConfigMap> configMapSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedConfigMapCall(\n                settings.getNamespace(), null, null, null, null, settings.getLabelSelector()\n                , 1, params.resourceVersion, 300, params.watch, null\n            ),\n            V1ConfigMap.class, V1ConfigMapList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        configMapLister = new Lister<>(configMapSharedIndexInformer.getIndexer());\n    }\n","date":"2021-02-20 22:09:10","endLine":85,"groupId":"3700","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doStartConfigMapInformer","params":"(finalConfigmapConfigurationSettingssettings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/f1/40438d5e6fdd628adfb16699af2fa02cd94b8c.src","preCode":"    private void doStartConfigMapInformer(final ConfigmapConfigurationSettings settings) throws IOException {\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1ConfigMap> configMapSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedConfigMapCall(\n                settings.getNamespace(), null, null, null, null, settings.getLabelSelector()\n                , 1, params.resourceVersion, 300, params.watch, null\n            ),\n            V1ConfigMap.class, V1ConfigMapList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        configMapLister = new Lister<>(configMapSharedIndexInformer.getIndexer());\n    }\n","realPath":"oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2021-02-20 22:09:10","commitOrder":4,"curCode":"    private void doStartPodInformer(ClusterModuleKubernetesConfig podConfig) throws IOException {\n\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        Configuration.setDefaultApiClient(apiClient);\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1Pod> podSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedPodCall(\n                podConfig.getNamespace(), null, null, null, null,\n                podConfig.getLabelSelector(), Integer.MAX_VALUE, params.resourceVersion, 300,\n                params.watch, null\n            ),\n            V1Pod.class, V1PodList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        podLister = new Lister<>(podSharedIndexInformer.getIndexer());\n    }\n","date":"2021-02-20 22:09:10","endLine":96,"groupId":"2004","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doStartPodInformer","params":"(ClusterModuleKubernetesConfigpodConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/9f/90291a9a080d891523553c757ac9fe53ee7ab7.src","preCode":"    private void doStartPodInformer(ClusterModuleKubernetesConfig podConfig) throws IOException {\n\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1Pod> podSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedPodCall(\n                podConfig.getNamespace(), null, null, null, null,\n                podConfig.getLabelSelector(), Integer.MAX_VALUE, params.resourceVersion, 300,\n                params.watch, null\n            ),\n            V1Pod.class, V1PodList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        podLister = new Lister<>(podSharedIndexInformer.getIndexer());\n    }\n","realPath":"oap-server/server-cluster-plugin/cluster-kubernetes-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/kubernetes/NamespacedPodListInformer.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"3d2fba3c40bc9d8d4afbe9dc553ecd9f8875bbef","commitMessage":"@@@Fix kubernetes.client.opeanapi.ApiException (#6412)\n\n","date":"2021-02-20 22:09:10","modifiedFileCount":"2","status":"M","submitter":"buzuotaxuan"},{"authorTime":"2021-05-10 05:07:09","codes":[{"authorDate":"2021-05-10 05:07:09","commitOrder":5,"curCode":"    private void doStartConfigMapInformer(final ConfigmapConfigurationSettings settings) throws IOException {\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        Configuration.setDefaultApiClient(apiClient);\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1ConfigMap> configMapSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedConfigMapCall(\n                settings.getNamespace(), null, null, null, null, settings.getLabelSelector()\n                , 1, params.resourceVersion, null, params.timeoutSeconds, params.watch, null\n            ),\n            V1ConfigMap.class, V1ConfigMapList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        configMapLister = new Lister<>(configMapSharedIndexInformer.getIndexer());\n    }\n","date":"2021-05-10 05:07:09","endLine":85,"groupId":"10597","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doStartConfigMapInformer","params":"(finalConfigmapConfigurationSettingssettings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/84/daad34aa4bd1e5eba05b235c7b86af65685df1.src","preCode":"    private void doStartConfigMapInformer(final ConfigmapConfigurationSettings settings) throws IOException {\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        Configuration.setDefaultApiClient(apiClient);\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1ConfigMap> configMapSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedConfigMapCall(\n                settings.getNamespace(), null, null, null, null, settings.getLabelSelector()\n                , 1, params.resourceVersion, 300, params.watch, null\n            ),\n            V1ConfigMap.class, V1ConfigMapList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        configMapLister = new Lister<>(configMapSharedIndexInformer.getIndexer());\n    }\n","realPath":"oap-server/server-configuration/configuration-k8s-configmap/src/main/java/org/apache/skywalking/oap/server/configuration/configmap/ConfigurationConfigmapInformer.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2021-05-10 05:07:09","commitOrder":5,"curCode":"    private void doStartPodInformer(ClusterModuleKubernetesConfig podConfig) throws IOException {\n\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        Configuration.setDefaultApiClient(apiClient);\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1Pod> podSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedPodCall(\n                podConfig.getNamespace(), null, null, null, null,\n                podConfig.getLabelSelector(), Integer.MAX_VALUE, params.resourceVersion, null, params.timeoutSeconds,\n                params.watch, null\n            ),\n            V1Pod.class, V1PodList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        podLister = new Lister<>(podSharedIndexInformer.getIndexer());\n    }\n","date":"2021-05-10 05:07:09","endLine":96,"groupId":"10597","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"doStartPodInformer","params":"(ClusterModuleKubernetesConfigpodConfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/7c/ed29db2a4458e7e83e966c92a3665a3bdd7f9f.src","preCode":"    private void doStartPodInformer(ClusterModuleKubernetesConfig podConfig) throws IOException {\n\n        ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient().newBuilder().readTimeout(0, TimeUnit.SECONDS).build());\n        Configuration.setDefaultApiClient(apiClient);\n        CoreV1Api coreV1Api = new CoreV1Api(apiClient);\n        factory = new SharedInformerFactory(executorService);\n\n        SharedIndexInformer<V1Pod> podSharedIndexInformer = factory.sharedIndexInformerFor(\n            params -> coreV1Api.listNamespacedPodCall(\n                podConfig.getNamespace(), null, null, null, null,\n                podConfig.getLabelSelector(), Integer.MAX_VALUE, params.resourceVersion, 300,\n                params.watch, null\n            ),\n            V1Pod.class, V1PodList.class\n        );\n\n        factory.startAllRegisteredInformers();\n        podLister = new Lister<>(podSharedIndexInformer.getIndexer());\n    }\n","realPath":"oap-server/server-cluster-plugin/cluster-kubernetes-plugin/src/main/java/org/apache/skywalking/oap/server/cluster/plugin/kubernetes/NamespacedPodListInformer.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"94adbf1c1f20a59426e358858302ae2ff5260359","commitMessage":"@@@Bump Kubernetes client-java version (#6920)\n\n","date":"2021-05-10 05:07:09","modifiedFileCount":"7","status":"M","submitter":"Zhenxu Ke"}]
