[{"authorTime":"2020-04-21 15:39:18","codes":[{"authorDate":"2020-04-21 15:39:18","commitOrder":1,"curCode":"    public List<TopNEntity> getServiceInstanceTopN(final String serviceId, final String name, final int topN,\n                                                   final Duration duration, final Order order) throws IOException {\n        TopNCondition condition = new TopNCondition();\n        condition.setName(name);\n        condition.setScope(Scope.ServiceInstance);\n        final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition = IDManager.ServiceID.analysisId(serviceId);\n        condition.setParentService(serviceIDDefinition.getName());\n        condition.setOrder(order);\n        condition.setTopN(topN);\n        List<TopNEntity> list = new ArrayList<>();\n        query.sortMetrics(condition, duration).forEach(selectedRecord -> {\n            TopNEntity entity = new TopNEntity(selectedRecord);\n            list.add(entity);\n        });\n        return list;\n    }\n","date":"2020-04-21 15:39:18","endLine":89,"groupId":"1871","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getServiceInstanceTopN","params":"(finalStringserviceId@finalStringname@finalinttopN@finalDurationduration@finalOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/d8/89d3a13f062d3c82b2ee0f3bfef1f7a8002cf3.src","preCode":"    public List<TopNEntity> getServiceInstanceTopN(final String serviceId, final String name, final int topN,\n                                                   final Duration duration, final Order order) throws IOException {\n        TopNCondition condition = new TopNCondition();\n        condition.setName(name);\n        condition.setScope(Scope.ServiceInstance);\n        final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition = IDManager.ServiceID.analysisId(serviceId);\n        condition.setParentService(serviceIDDefinition.getName());\n        condition.setOrder(order);\n        condition.setTopN(topN);\n        List<TopNEntity> list = new ArrayList<>();\n        query.sortMetrics(condition, duration).forEach(selectedRecord -> {\n            TopNEntity entity = new TopNEntity(selectedRecord);\n            list.add(entity);\n        });\n        return list;\n    }\n","realPath":"oap-server/server-query-plugin/query-graphql-plugin/src/main/java/org/apache/skywalking/oap/query/graphql/resolver/AggregationQuery.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"},{"authorDate":"2020-04-21 15:39:18","commitOrder":1,"curCode":"    public List<TopNEntity> getEndpointTopN(final String serviceId, final String name, final int topN,\n                                            final Duration duration, final Order order) throws IOException {\n        TopNCondition condition = new TopNCondition();\n        condition.setName(name);\n        condition.setScope(Scope.Endpoint);\n        final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition = IDManager.ServiceID.analysisId(serviceId);\n        condition.setParentService(serviceIDDefinition.getName());\n        condition.setOrder(order);\n        condition.setTopN(topN);\n        List<TopNEntity> list = new ArrayList<>();\n        query.sortMetrics(condition, duration).forEach(selectedRecord -> {\n            TopNEntity entity = new TopNEntity(selectedRecord);\n            list.add(entity);\n        });\n        return list;\n    }\n","date":"2020-04-21 15:39:18","endLine":121,"groupId":"1871","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getEndpointTopN","params":"(finalStringserviceId@finalStringname@finalinttopN@finalDurationduration@finalOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/d8/89d3a13f062d3c82b2ee0f3bfef1f7a8002cf3.src","preCode":"    public List<TopNEntity> getEndpointTopN(final String serviceId, final String name, final int topN,\n                                            final Duration duration, final Order order) throws IOException {\n        TopNCondition condition = new TopNCondition();\n        condition.setName(name);\n        condition.setScope(Scope.Endpoint);\n        final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition = IDManager.ServiceID.analysisId(serviceId);\n        condition.setParentService(serviceIDDefinition.getName());\n        condition.setOrder(order);\n        condition.setTopN(topN);\n        List<TopNEntity> list = new ArrayList<>();\n        query.sortMetrics(condition, duration).forEach(selectedRecord -> {\n            TopNEntity entity = new TopNEntity(selectedRecord);\n            list.add(entity);\n        });\n        return list;\n    }\n","realPath":"oap-server/server-query-plugin/query-graphql-plugin/src/main/java/org/apache/skywalking/oap/query/graphql/resolver/AggregationQuery.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"418bdff277179b4660e578b1837f21fd3db514cb","commitMessage":"@@@New metrics query protocol v2 (#4679)\n\n1. Support the new query protocol.  and the v1 query protocol is still supported \n2. All `numOfxxx`/`GlobalBrief` is only a mock now.  no real number.\n3. typeOfMetrics service is a mock only too.  follow up PR will implement this.","date":"2020-04-21 15:39:18","modifiedFileCount":"123","status":"B","submitter":"?? Wu Sheng"},{"authorTime":"2020-04-26 10:58:36","codes":[{"authorDate":"2020-04-26 10:58:36","commitOrder":2,"curCode":"    public List<TopNEntity> getServiceInstanceTopN(final String serviceId, final String name, final int topN,\n                                                   final Duration duration, final Order order) throws IOException {\n        TopNCondition condition = new TopNCondition();\n        condition.setName(name);\n        condition.setScope(Scope.ServiceInstance);\n        final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition = IDManager.ServiceID.analysisId(serviceId);\n        condition.setParentService(serviceIDDefinition.getName());\n        condition.setNormal(true);\n        condition.setOrder(order);\n        condition.setTopN(topN);\n        List<TopNEntity> list = new ArrayList<>();\n        query.sortMetrics(condition, duration).forEach(selectedRecord -> {\n            TopNEntity entity = new TopNEntity(selectedRecord);\n            list.add(entity);\n        });\n        return list;\n    }\n","date":"2020-04-26 10:58:36","endLine":90,"groupId":"10873","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getServiceInstanceTopN","params":"(finalStringserviceId@finalStringname@finalinttopN@finalDurationduration@finalOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/3d/e9dee30058ad4b0e84ffd2b59d698ebd25257f.src","preCode":"    public List<TopNEntity> getServiceInstanceTopN(final String serviceId, final String name, final int topN,\n                                                   final Duration duration, final Order order) throws IOException {\n        TopNCondition condition = new TopNCondition();\n        condition.setName(name);\n        condition.setScope(Scope.ServiceInstance);\n        final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition = IDManager.ServiceID.analysisId(serviceId);\n        condition.setParentService(serviceIDDefinition.getName());\n        condition.setOrder(order);\n        condition.setTopN(topN);\n        List<TopNEntity> list = new ArrayList<>();\n        query.sortMetrics(condition, duration).forEach(selectedRecord -> {\n            TopNEntity entity = new TopNEntity(selectedRecord);\n            list.add(entity);\n        });\n        return list;\n    }\n","realPath":"oap-server/server-query-plugin/query-graphql-plugin/src/main/java/org/apache/skywalking/oap/query/graphql/resolver/AggregationQuery.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2020-04-26 10:58:36","commitOrder":2,"curCode":"    public List<TopNEntity> getEndpointTopN(final String serviceId, final String name, final int topN,\n                                            final Duration duration, final Order order) throws IOException {\n        TopNCondition condition = new TopNCondition();\n        condition.setName(name);\n        condition.setScope(Scope.Endpoint);\n        final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition = IDManager.ServiceID.analysisId(serviceId);\n        condition.setParentService(serviceIDDefinition.getName());\n        condition.setNormal(true);\n        condition.setOrder(order);\n        condition.setTopN(topN);\n        List<TopNEntity> list = new ArrayList<>();\n        query.sortMetrics(condition, duration).forEach(selectedRecord -> {\n            TopNEntity entity = new TopNEntity(selectedRecord);\n            list.add(entity);\n        });\n        return list;\n    }\n","date":"2020-04-26 10:58:36","endLine":123,"groupId":"10873","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getEndpointTopN","params":"(finalStringserviceId@finalStringname@finalinttopN@finalDurationduration@finalOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/3d/e9dee30058ad4b0e84ffd2b59d698ebd25257f.src","preCode":"    public List<TopNEntity> getEndpointTopN(final String serviceId, final String name, final int topN,\n                                            final Duration duration, final Order order) throws IOException {\n        TopNCondition condition = new TopNCondition();\n        condition.setName(name);\n        condition.setScope(Scope.Endpoint);\n        final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition = IDManager.ServiceID.analysisId(serviceId);\n        condition.setParentService(serviceIDDefinition.getName());\n        condition.setOrder(order);\n        condition.setTopN(topN);\n        List<TopNEntity> list = new ArrayList<>();\n        query.sortMetrics(condition, duration).forEach(selectedRecord -> {\n            TopNEntity entity = new TopNEntity(selectedRecord);\n            list.add(entity);\n        });\n        return list;\n    }\n","realPath":"oap-server/server-query-plugin/query-graphql-plugin/src/main/java/org/apache/skywalking/oap/query/graphql/resolver/AggregationQuery.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"f4864597c2753150acd26d484ca565dfeb27eb95","commitMessage":"@@@Fix an old query compatible bug. (#4714)\n\n","date":"2020-04-26 10:58:36","modifiedFileCount":"1","status":"M","submitter":"?? Wu Sheng"}]
