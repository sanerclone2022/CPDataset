[{"authorTime":"2020-03-16 23:45:14","codes":[{"authorDate":"2020-03-16 23:45:14","commitOrder":1,"curCode":"    public void shouldSuccess() {\n        final List<ServiceInstanceNode> nodes = new ArrayList<>();\n        nodes.add(new ServiceInstanceNode().setId(\"2\")\n                                           .setName(\"e2e-cluster-provider-pid:1582@2ffd0ee4eeb1\")\n                                           .setServiceId(\"2\")\n                                           .setServiceName(\"e2e-cluster-provider\")\n                                           .setType(\"Tomcat\")\n                                           .setIsReal(\"true\"));\n        nodes.add(new ServiceInstanceNode().setId(\"3\")\n                                           .setName(\"e2e-cluster-provider-pid:1583@2ffd0ee4eeb1\")\n                                           .setServiceId(\"2\")\n                                           .setServiceName(\"e2e-cluster-provider\")\n                                           .setType(\"Tomcat\")\n                                           .setIsReal(\"true\"));\n        nodes.add(new ServiceInstanceNode().setId(\"4\")\n                                           .setName(\"e2e-cluster-consumer-pid:1591@2ffd0ee4eeb1\")\n                                           .setServiceId(\"3\")\n                                           .setServiceName(\"e2e-cluster-consumer\")\n                                           .setIsReal(\"true\"));\n\n        final List<Call> calls = new ArrayList<>();\n        calls.add(new Call().setId(\"4_3\").setSource(\"4\").setTarget(\"3\"));\n        calls.add(new Call().setId(\"4_2\").setSource(\"4\").setTarget(\"2\"));\n\n        final ServiceInstanceTopology topoData = new ServiceInstanceTopology().setNodes(nodes).setCalls(calls);\n\n        topoMatcher.verify(topoData);\n    }\n","date":"2020-03-16 23:45:14","endLine":75,"groupId":"383","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSuccess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/2c/3d5e41df252635c792b79e4448b5af3588af9a.src","preCode":"    public void shouldSuccess() {\n        final List<ServiceInstanceNode> nodes = new ArrayList<>();\n        nodes.add(new ServiceInstanceNode().setId(\"2\")\n                                           .setName(\"e2e-cluster-provider-pid:1582@2ffd0ee4eeb1\")\n                                           .setServiceId(\"2\")\n                                           .setServiceName(\"e2e-cluster-provider\")\n                                           .setType(\"Tomcat\")\n                                           .setIsReal(\"true\"));\n        nodes.add(new ServiceInstanceNode().setId(\"3\")\n                                           .setName(\"e2e-cluster-provider-pid:1583@2ffd0ee4eeb1\")\n                                           .setServiceId(\"2\")\n                                           .setServiceName(\"e2e-cluster-provider\")\n                                           .setType(\"Tomcat\")\n                                           .setIsReal(\"true\"));\n        nodes.add(new ServiceInstanceNode().setId(\"4\")\n                                           .setName(\"e2e-cluster-consumer-pid:1591@2ffd0ee4eeb1\")\n                                           .setServiceId(\"3\")\n                                           .setServiceName(\"e2e-cluster-consumer\")\n                                           .setIsReal(\"true\"));\n\n        final List<Call> calls = new ArrayList<>();\n        calls.add(new Call().setId(\"4_3\").setSource(\"4\").setTarget(\"3\"));\n        calls.add(new Call().setId(\"4_2\").setSource(\"4\").setTarget(\"2\"));\n\n        final ServiceInstanceTopology topoData = new ServiceInstanceTopology().setNodes(nodes).setCalls(calls);\n\n        topoMatcher.verify(topoData);\n    }\n","realPath":"test/e2e/e2e-data/src/test/java/org/apache/skywalking/e2e/TestServiceInstanceTopologyMatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2020-03-16 23:45:14","commitOrder":1,"curCode":"    public void shouldVariableNotFound() {\n        assertThrows(VariableNotFoundException.class, () -> {\n            final List<ServiceInstanceNode> nodes = new ArrayList<>();\n            nodes.add(new ServiceInstanceNode().setId(\"2\")\n                                               .setName(\"e2e-cluster-provider-pid:1582@2ffd0ee4eeb1\")\n                                               .setServiceId(\"2\")\n                                               .setServiceName(\"e2e-cluster-provider\")\n                                               .setType(\"Tomcat\")\n                                               .setIsReal(\"true\"));\n            nodes.add(new ServiceInstanceNode().setId(\"3\")\n                                               .setName(\"e2e-cluster-Aprovider-pid:1583@2ffd0ee4eeb1\")\n                                               .setServiceId(\"2\")\n                                               .setServiceName(\"e2e-cluster-provider\")\n                                               .setType(\"Tomcat\")\n                                               .setIsReal(\"true\"));\n            nodes.add(new ServiceInstanceNode().setId(\"4\")\n                                               .setName(\"e2e-cluster-consumer-pid:1591@2ffd0ee4eeb1\")\n                                               .setServiceId(\"3\")\n                                               .setServiceName(\"e2e-cluster-consumer\")\n                                               .setIsReal(\"true\"));\n\n            final List<Call> calls = new ArrayList<>();\n            calls.add(new Call().setId(\"4_3\").setSource(\"4\").setTarget(\"3\"));\n            calls.add(new Call().setId(\"4_2\").setSource(\"4\").setTarget(\"2\"));\n\n            final ServiceInstanceTopology topoData = new ServiceInstanceTopology().setNodes(nodes).setCalls(calls);\n\n            topoMatcher.verify(topoData);\n        });\n    }\n","date":"2020-03-16 23:45:14","endLine":107,"groupId":"383","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldVariableNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/2c/3d5e41df252635c792b79e4448b5af3588af9a.src","preCode":"    public void shouldVariableNotFound() {\n        assertThrows(VariableNotFoundException.class, () -> {\n            final List<ServiceInstanceNode> nodes = new ArrayList<>();\n            nodes.add(new ServiceInstanceNode().setId(\"2\")\n                                               .setName(\"e2e-cluster-provider-pid:1582@2ffd0ee4eeb1\")\n                                               .setServiceId(\"2\")\n                                               .setServiceName(\"e2e-cluster-provider\")\n                                               .setType(\"Tomcat\")\n                                               .setIsReal(\"true\"));\n            nodes.add(new ServiceInstanceNode().setId(\"3\")\n                                               .setName(\"e2e-cluster-Aprovider-pid:1583@2ffd0ee4eeb1\")\n                                               .setServiceId(\"2\")\n                                               .setServiceName(\"e2e-cluster-provider\")\n                                               .setType(\"Tomcat\")\n                                               .setIsReal(\"true\"));\n            nodes.add(new ServiceInstanceNode().setId(\"4\")\n                                               .setName(\"e2e-cluster-consumer-pid:1591@2ffd0ee4eeb1\")\n                                               .setServiceId(\"3\")\n                                               .setServiceName(\"e2e-cluster-consumer\")\n                                               .setIsReal(\"true\"));\n\n            final List<Call> calls = new ArrayList<>();\n            calls.add(new Call().setId(\"4_3\").setSource(\"4\").setTarget(\"3\"));\n            calls.add(new Call().setId(\"4_2\").setSource(\"4\").setTarget(\"2\"));\n\n            final ServiceInstanceTopology topoData = new ServiceInstanceTopology().setNodes(nodes).setCalls(calls);\n\n            topoMatcher.verify(topoData);\n        });\n    }\n","realPath":"test/e2e/e2e-data/src/test/java/org/apache/skywalking/e2e/TestServiceInstanceTopologyMatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"}],"commitId":"dcd66ee6e940bdc9a7ecf90415929bfd48a3a284","commitMessage":"@@@Rewrite the E2E test framework and tests (#4510)\n\nMotivation:\n\nAccording the feedback from the community.  the e2e tests are hard for\nthem to understand and get them started.  so this pull request aims to\nrewrite the e2e tests with some improvements:\n\n- debuggable locally.  now you can run every individual case directly\ninside the IDE.  just like running a plain unit test.\n\n- same functionalities of multiple counterparts share the same codes. \ncases like different storages and cluster coordinators share the same\ncodes.  easy to add more similar cases.\n\n- the \"end\" now extends to the Doccker images.  meaning that some bugs\nlike #4483 and #4471 can be more easily and early to be discovered.\n\n- codes style and license headers are checked\n\nModifications:\n\n- adopt jupeter (a.k.a junit 5).  testcontainers as the new test\nframework.  all containers are orchestrated by docker-compose.yml. \nwell-known technology that developers should be familiar with.\n\n- rewrite all test cases and verify them.\n\n- reorganize the workflows in GitHub Actions.\n\nResult:\n\n- new e2e test should be easy to add.\n\n- closes https://github.com/apache/skywalking/issues/4472","date":"2020-03-16 23:45:14","modifiedFileCount":"3","status":"B","submitter":"kezhenxu94"},{"authorTime":"2020-04-10 11:03:24","codes":[{"authorDate":"2020-04-10 11:03:24","commitOrder":2,"curCode":"    public void shouldSuccess() {\n        final List<ServiceInstanceNode> nodes = new ArrayList<>();\n        nodes.add(new ServiceInstanceNode().setId(\"2\")\n                                           .setName(\"e2e-cluster-provider-pid:1582@2ffd0ee4eeb1\")\n                                           .setServiceId(\"2\")\n                                           .setServiceName(\"e2e-cluster-provider\")\n                                           .setType(\"Tomcat\")\n                                           .setIsReal(\"true\"));\n        nodes.add(new ServiceInstanceNode().setId(\"3\")\n                                           .setName(\"e2e-cluster-provider-pid:1583@2ffd0ee4eeb1\")\n                                           .setServiceId(\"2\")\n                                           .setServiceName(\"e2e-cluster-provider\")\n                                           .setType(\"Tomcat\")\n                                           .setIsReal(\"true\"));\n        nodes.add(new ServiceInstanceNode().setId(\"4\")\n                                           .setName(\"e2e-cluster-consumer-pid:1591@2ffd0ee4eeb1\")\n                                           .setServiceId(\"3\")\n                                           .setServiceName(\"e2e-cluster-consumer\")\n                                           .setIsReal(\"true\"));\n\n        final List<Call> calls = new ArrayList<>();\n        calls.add(new Call().setId(\"4-3\").setSource(\"4\").setTarget(\"3\"));\n        calls.add(new Call().setId(\"4-2\").setSource(\"4\").setTarget(\"2\"));\n\n        final ServiceInstanceTopology topoData = new ServiceInstanceTopology().setNodes(nodes).setCalls(calls);\n\n        topoMatcher.verify(topoData);\n    }\n","date":"2020-04-10 11:03:24","endLine":75,"groupId":"109","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"shouldSuccess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/b2/f6f58c4161778adf0c7bc78020dc7329d07e1a.src","preCode":"    public void shouldSuccess() {\n        final List<ServiceInstanceNode> nodes = new ArrayList<>();\n        nodes.add(new ServiceInstanceNode().setId(\"2\")\n                                           .setName(\"e2e-cluster-provider-pid:1582@2ffd0ee4eeb1\")\n                                           .setServiceId(\"2\")\n                                           .setServiceName(\"e2e-cluster-provider\")\n                                           .setType(\"Tomcat\")\n                                           .setIsReal(\"true\"));\n        nodes.add(new ServiceInstanceNode().setId(\"3\")\n                                           .setName(\"e2e-cluster-provider-pid:1583@2ffd0ee4eeb1\")\n                                           .setServiceId(\"2\")\n                                           .setServiceName(\"e2e-cluster-provider\")\n                                           .setType(\"Tomcat\")\n                                           .setIsReal(\"true\"));\n        nodes.add(new ServiceInstanceNode().setId(\"4\")\n                                           .setName(\"e2e-cluster-consumer-pid:1591@2ffd0ee4eeb1\")\n                                           .setServiceId(\"3\")\n                                           .setServiceName(\"e2e-cluster-consumer\")\n                                           .setIsReal(\"true\"));\n\n        final List<Call> calls = new ArrayList<>();\n        calls.add(new Call().setId(\"4_3\").setSource(\"4\").setTarget(\"3\"));\n        calls.add(new Call().setId(\"4_2\").setSource(\"4\").setTarget(\"2\"));\n\n        final ServiceInstanceTopology topoData = new ServiceInstanceTopology().setNodes(nodes).setCalls(calls);\n\n        topoMatcher.verify(topoData);\n    }\n","realPath":"test/e2e/e2e-data/src/test/java/org/apache/skywalking/e2e/TestServiceInstanceTopologyMatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2020-04-10 11:03:24","commitOrder":2,"curCode":"    public void shouldVariableNotFound() {\n        assertThrows(VariableNotFoundException.class, () -> {\n            final List<ServiceInstanceNode> nodes = new ArrayList<>();\n            nodes.add(new ServiceInstanceNode().setId(\"2\")\n                                               .setName(\"e2e-cluster-provider-pid:1582@2ffd0ee4eeb1\")\n                                               .setServiceId(\"2\")\n                                               .setServiceName(\"e2e-cluster-provider\")\n                                               .setType(\"Tomcat\")\n                                               .setIsReal(\"true\"));\n            nodes.add(new ServiceInstanceNode().setId(\"3\")\n                                               .setName(\"e2e-cluster-Aprovider-pid:1583@2ffd0ee4eeb1\")\n                                               .setServiceId(\"2\")\n                                               .setServiceName(\"e2e-cluster-provider\")\n                                               .setType(\"Tomcat\")\n                                               .setIsReal(\"true\"));\n            nodes.add(new ServiceInstanceNode().setId(\"4\")\n                                               .setName(\"e2e-cluster-consumer-pid:1591@2ffd0ee4eeb1\")\n                                               .setServiceId(\"3\")\n                                               .setServiceName(\"e2e-cluster-consumer\")\n                                               .setIsReal(\"true\"));\n\n            final List<Call> calls = new ArrayList<>();\n            calls.add(new Call().setId(\"4-3\").setSource(\"4\").setTarget(\"3\"));\n            calls.add(new Call().setId(\"4-2\").setSource(\"4\").setTarget(\"2\"));\n\n            final ServiceInstanceTopology topoData = new ServiceInstanceTopology().setNodes(nodes).setCalls(calls);\n\n            topoMatcher.verify(topoData);\n        });\n    }\n","date":"2020-04-10 11:03:24","endLine":107,"groupId":"109","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"shouldVariableNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/b2/f6f58c4161778adf0c7bc78020dc7329d07e1a.src","preCode":"    public void shouldVariableNotFound() {\n        assertThrows(VariableNotFoundException.class, () -> {\n            final List<ServiceInstanceNode> nodes = new ArrayList<>();\n            nodes.add(new ServiceInstanceNode().setId(\"2\")\n                                               .setName(\"e2e-cluster-provider-pid:1582@2ffd0ee4eeb1\")\n                                               .setServiceId(\"2\")\n                                               .setServiceName(\"e2e-cluster-provider\")\n                                               .setType(\"Tomcat\")\n                                               .setIsReal(\"true\"));\n            nodes.add(new ServiceInstanceNode().setId(\"3\")\n                                               .setName(\"e2e-cluster-Aprovider-pid:1583@2ffd0ee4eeb1\")\n                                               .setServiceId(\"2\")\n                                               .setServiceName(\"e2e-cluster-provider\")\n                                               .setType(\"Tomcat\")\n                                               .setIsReal(\"true\"));\n            nodes.add(new ServiceInstanceNode().setId(\"4\")\n                                               .setName(\"e2e-cluster-consumer-pid:1591@2ffd0ee4eeb1\")\n                                               .setServiceId(\"3\")\n                                               .setServiceName(\"e2e-cluster-consumer\")\n                                               .setIsReal(\"true\"));\n\n            final List<Call> calls = new ArrayList<>();\n            calls.add(new Call().setId(\"4_3\").setSource(\"4\").setTarget(\"3\"));\n            calls.add(new Call().setId(\"4_2\").setSource(\"4\").setTarget(\"2\"));\n\n            final ServiceInstanceTopology topoData = new ServiceInstanceTopology().setNodes(nodes).setCalls(calls);\n\n            topoMatcher.verify(topoData);\n        });\n    }\n","realPath":"test/e2e/e2e-data/src/test/java/org/apache/skywalking/e2e/TestServiceInstanceTopologyMatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"6fe2041b470113e626cb3f41e3789261d31f2548","commitMessage":"@@@Make 8.0.0 Core available. New protocol and register removed. (#4599)\n\nHere are the list of changes we made in this pull request. Top 3 are the principle changes.  others are following these principles.\n1. New agent and mesh report protocol. \n2. New agent header protocol. \n3. Service register.  instance register and network address register have been removed permanently.\n4. Service traffic.  instance traffic and network alias metrics are added to replace the service.  instance and network address inventory.\n5. Register process has been removed.\n6. Metrics stream process supports insert only mode.  especially for traffic entities.\n7. Metrics stream process supports no-downsampling mode for traffic entities and network alias.\n8. Remove all register mechanism and cache in the java agent.\n9. Remove MONTH step in GraphQL query.\n10. Update UI to remove MONTH step query.  the max query range is 60 days now.\n11. Simplify the TTL to metrics and record. And the unit has been formatted in Day unit. No specific TTL for ElasticSearch storage.\n12. Buffer mechanism of trace receiver and mesh receiver has been removed due to no register.\n13. New service id.  instance id and endpoint id rules.  including service relation.  instance relation and endpoint relation id rules.\n14. Java agent support `keep tracing` mode.  meaning.  agent generating tracing context even the backend is unconnected/unavailable.\n15. Plugin test tool up to date.  in order to support new protocol.\n16. Plugin tests expected data files updated.\n17. E2E tests updated.\n18. Telemetry of Grafana config has been merged into one.\n19. Documentation updates.\n20. [TBD] InfluxDB storage implementation is not available.  need @dmsolr to fix later.  in order to reduce the master change block by this PR.","date":"2020-04-10 11:03:24","modifiedFileCount":"342","status":"M","submitter":"?? Wu Sheng"}]
