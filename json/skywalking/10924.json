[{"authorTime":"2018-09-26 08:20:55","codes":[{"authorDate":"2018-09-26 08:20:55","commitOrder":1,"curCode":"    private static void toService(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metric = decorator.getMetric();\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setId(metric.getDestServiceId());\n        service.setName(getServiceName(metric.getDestServiceId(), metric.getDestServiceName()));\n        service.setServiceInstanceName(getServiceInstanceName(metric.getDestServiceInstanceId(), metric.getDestServiceInstance()));\n        service.setEndpointName(metric.getEndpoint());\n        service.setLatency(metric.getLatency());\n        service.setStatus(metric.getStatus());\n        service.setType(protocol2Type(metric.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","date":"2018-09-26 08:20:55","endLine":93,"groupId":"1969","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toService","params":"(ServiceMeshMetricDataDecoratordecorator@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/4d/fcc4e19fce8da34210f9aa5f35574019472149.src","preCode":"    private static void toService(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metric = decorator.getMetric();\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setId(metric.getDestServiceId());\n        service.setName(getServiceName(metric.getDestServiceId(), metric.getDestServiceName()));\n        service.setServiceInstanceName(getServiceInstanceName(metric.getDestServiceInstanceId(), metric.getDestServiceInstance()));\n        service.setEndpointName(metric.getEndpoint());\n        service.setLatency(metric.getLatency());\n        service.setStatus(metric.getStatus());\n        service.setType(protocol2Type(metric.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2018-09-26 08:20:55","commitOrder":1,"curCode":"    private static void toServiceInstance(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metric = decorator.getMetric();\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setId(metric.getDestServiceId());\n        serviceInstance.setName(getServiceInstanceName(metric.getDestServiceInstanceId(), metric.getDestServiceInstance()));\n        serviceInstance.setServiceId(metric.getDestServiceId());\n        serviceInstance.setServiceName(getServiceName(metric.getDestServiceId(), metric.getDestServiceName()));\n        serviceInstance.setEndpointName(metric.getEndpoint());\n        serviceInstance.setLatency(metric.getLatency());\n        serviceInstance.setStatus(metric.getStatus());\n        serviceInstance.setType(protocol2Type(metric.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","date":"2018-09-26 08:20:55","endLine":131,"groupId":"1969","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toServiceInstance","params":"(ServiceMeshMetricDataDecoratordecorator@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/4d/fcc4e19fce8da34210f9aa5f35574019472149.src","preCode":"    private static void toServiceInstance(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metric = decorator.getMetric();\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setId(metric.getDestServiceId());\n        serviceInstance.setName(getServiceInstanceName(metric.getDestServiceInstanceId(), metric.getDestServiceInstance()));\n        serviceInstance.setServiceId(metric.getDestServiceId());\n        serviceInstance.setServiceName(getServiceName(metric.getDestServiceId(), metric.getDestServiceName()));\n        serviceInstance.setEndpointName(metric.getEndpoint());\n        serviceInstance.setLatency(metric.getLatency());\n        serviceInstance.setStatus(metric.getStatus());\n        serviceInstance.setType(protocol2Type(metric.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"}],"commitId":"9d6bf6787b8b3751a08a087e8f6ac6532d80a9bd","commitMessage":"@@@Finish mesh source dispatch (#1687)\n\n* Merge module and provider of mesh\n\n* Finish the skeleton of mesh receiver.\n\n* Finish mesh dispatcher.\n\n* Fix missing timebucket\n","date":"2018-09-26 08:20:55","modifiedFileCount":"5","status":"B","submitter":"?? Wu Sheng"},{"authorTime":"2018-11-01 16:50:07","codes":[{"authorDate":"2018-09-26 08:20:55","commitOrder":2,"curCode":"    private static void toService(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metric = decorator.getMetric();\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setId(metric.getDestServiceId());\n        service.setName(getServiceName(metric.getDestServiceId(), metric.getDestServiceName()));\n        service.setServiceInstanceName(getServiceInstanceName(metric.getDestServiceInstanceId(), metric.getDestServiceInstance()));\n        service.setEndpointName(metric.getEndpoint());\n        service.setLatency(metric.getLatency());\n        service.setStatus(metric.getStatus());\n        service.setType(protocol2Type(metric.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","date":"2018-09-26 08:20:55","endLine":93,"groupId":"1969","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"toService","params":"(ServiceMeshMetricDataDecoratordecorator@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/4d/fcc4e19fce8da34210f9aa5f35574019472149.src","preCode":"    private static void toService(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metric = decorator.getMetric();\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setId(metric.getDestServiceId());\n        service.setName(getServiceName(metric.getDestServiceId(), metric.getDestServiceName()));\n        service.setServiceInstanceName(getServiceInstanceName(metric.getDestServiceInstanceId(), metric.getDestServiceInstance()));\n        service.setEndpointName(metric.getEndpoint());\n        service.setLatency(metric.getLatency());\n        service.setStatus(metric.getStatus());\n        service.setType(protocol2Type(metric.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"N"},{"authorDate":"2018-11-01 16:50:07","commitOrder":2,"curCode":"    private static void toServiceInstance(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metric = decorator.getMetric();\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setId(metric.getDestServiceInstanceId());\n        serviceInstance.setName(getServiceInstanceName(metric.getDestServiceInstanceId(), metric.getDestServiceInstance()));\n        serviceInstance.setServiceId(metric.getDestServiceId());\n        serviceInstance.setServiceName(getServiceName(metric.getDestServiceId(), metric.getDestServiceName()));\n        serviceInstance.setEndpointName(metric.getEndpoint());\n        serviceInstance.setLatency(metric.getLatency());\n        serviceInstance.setStatus(metric.getStatus());\n        serviceInstance.setType(protocol2Type(metric.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","date":"2018-11-01 16:50:07","endLine":193,"groupId":"1969","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"toServiceInstance","params":"(ServiceMeshMetricDataDecoratordecorator@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/7c/9e749bcd9dbdf6340c5118f6870ef76ae7f097.src","preCode":"    private static void toServiceInstance(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metric = decorator.getMetric();\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setId(metric.getDestServiceId());\n        serviceInstance.setName(getServiceInstanceName(metric.getDestServiceInstanceId(), metric.getDestServiceInstance()));\n        serviceInstance.setServiceId(metric.getDestServiceId());\n        serviceInstance.setServiceName(getServiceName(metric.getDestServiceId(), metric.getDestServiceName()));\n        serviceInstance.setEndpointName(metric.getEndpoint());\n        serviceInstance.setLatency(metric.getLatency());\n        serviceInstance.setStatus(metric.getStatus());\n        serviceInstance.setType(protocol2Type(metric.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"13f8825904d78bbae959cd38e4f555a99abe553d","commitMessage":"@@@Bug fix (#1857)\n\n* Fix mesh receiver doesn't update heartbeat.\n\n* Fix bug of mesh heartbeat and rest receiver.\n\n* Fix issue: opencensus is included in agent without shade. @tuohai666\n","date":"2018-11-01 16:50:07","modifiedFileCount":"4","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2019-05-10 08:05:37","codes":[{"authorDate":"2019-05-10 08:05:37","commitOrder":3,"curCode":"    private static void toService(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metrics = decorator.getMetric();\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setId(metrics.getDestServiceId());\n        service.setName(getServiceName(metrics.getDestServiceId(), metrics.getDestServiceName()));\n        service.setServiceInstanceName(getServiceInstanceName(metrics.getDestServiceInstanceId(), metrics.getDestServiceInstance()));\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","date":"2019-05-10 08:05:37","endLine":163,"groupId":"2708","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"toService","params":"(ServiceMeshMetricDataDecoratordecorator@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/5b/cf54b850270e99dcfc49fa00498fd01c095204.src","preCode":"    private static void toService(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metric = decorator.getMetric();\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setId(metric.getDestServiceId());\n        service.setName(getServiceName(metric.getDestServiceId(), metric.getDestServiceName()));\n        service.setServiceInstanceName(getServiceInstanceName(metric.getDestServiceInstanceId(), metric.getDestServiceInstance()));\n        service.setEndpointName(metric.getEndpoint());\n        service.setLatency(metric.getLatency());\n        service.setStatus(metric.getStatus());\n        service.setType(protocol2Type(metric.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2019-05-10 08:05:37","commitOrder":3,"curCode":"    private static void toServiceInstance(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metrics = decorator.getMetric();\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setId(metrics.getDestServiceInstanceId());\n        serviceInstance.setName(getServiceInstanceName(metrics.getDestServiceInstanceId(), metrics.getDestServiceInstance()));\n        serviceInstance.setServiceId(metrics.getDestServiceId());\n        serviceInstance.setServiceName(getServiceName(metrics.getDestServiceId(), metrics.getDestServiceName()));\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","date":"2019-05-10 08:05:37","endLine":202,"groupId":"2712","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"toServiceInstance","params":"(ServiceMeshMetricDataDecoratordecorator@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/5b/cf54b850270e99dcfc49fa00498fd01c095204.src","preCode":"    private static void toServiceInstance(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metric = decorator.getMetric();\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setId(metric.getDestServiceInstanceId());\n        serviceInstance.setName(getServiceInstanceName(metric.getDestServiceInstanceId(), metric.getDestServiceInstance()));\n        serviceInstance.setServiceId(metric.getDestServiceId());\n        serviceInstance.setServiceName(getServiceName(metric.getDestServiceId(), metric.getDestServiceName()));\n        serviceInstance.setEndpointName(metric.getEndpoint());\n        serviceInstance.setLatency(metric.getLatency());\n        serviceInstance.setStatus(metric.getStatus());\n        serviceInstance.setType(protocol2Type(metric.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"}],"commitId":"ed78dabe8b142be3d546d349046768135f0a752a","commitMessage":"@@@Rename metric and indicator to metrics. (#2643)\n\n* Rename metric to metrics.\n\n* Fixed test case execute failure issues.\n","date":"2019-05-10 08:05:37","modifiedFileCount":"102","status":"M","submitter":"??? pengys"},{"authorTime":"2019-05-16 00:20:18","codes":[{"authorDate":"2019-05-16 00:20:18","commitOrder":4,"curCode":"    private static void toService(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metrics = decorator.getMetric();\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setId(metrics.getDestServiceId());\n        service.setName(getServiceName(metrics.getDestServiceId(), metrics.getDestServiceName()));\n        service.setServiceInstanceName(getServiceInstanceName(metrics.getDestServiceInstanceId(), metrics.getDestServiceInstance()));\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setResponseCode(metrics.getResponseCode());\n        service.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","date":"2019-05-16 00:20:18","endLine":165,"groupId":"2708","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"toService","params":"(ServiceMeshMetricDataDecoratordecorator@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/db/e069b42a240e3acba0323e603a49b772e43473.src","preCode":"    private static void toService(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metrics = decorator.getMetric();\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setId(metrics.getDestServiceId());\n        service.setName(getServiceName(metrics.getDestServiceId(), metrics.getDestServiceName()));\n        service.setServiceInstanceName(getServiceInstanceName(metrics.getDestServiceInstanceId(), metrics.getDestServiceInstance()));\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"},{"authorDate":"2019-05-16 00:20:18","commitOrder":4,"curCode":"    private static void toServiceInstance(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metrics = decorator.getMetric();\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setId(metrics.getDestServiceInstanceId());\n        serviceInstance.setName(getServiceInstanceName(metrics.getDestServiceInstanceId(), metrics.getDestServiceInstance()));\n        serviceInstance.setServiceId(metrics.getDestServiceId());\n        serviceInstance.setServiceName(getServiceName(metrics.getDestServiceId(), metrics.getDestServiceName()));\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setResponseCode(metrics.getResponseCode());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","date":"2019-05-16 00:20:18","endLine":205,"groupId":"2712","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"toServiceInstance","params":"(ServiceMeshMetricDataDecoratordecorator@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/db/e069b42a240e3acba0323e603a49b772e43473.src","preCode":"    private static void toServiceInstance(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metrics = decorator.getMetric();\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setId(metrics.getDestServiceInstanceId());\n        serviceInstance.setName(getServiceInstanceName(metrics.getDestServiceInstanceId(), metrics.getDestServiceInstance()));\n        serviceInstance.setServiceId(metrics.getDestServiceId());\n        serviceInstance.setServiceName(getServiceName(metrics.getDestServiceId(), metrics.getDestServiceName()));\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"}],"commitId":"3c52a326cb7429bcdc287e6cca7d26cbe7b2a353","commitMessage":"@@@Miss copy response code in mesh analysis. (#2684)\n\n","date":"2019-05-16 00:20:18","modifiedFileCount":"1","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2020-04-10 11:03:24","codes":[{"authorDate":"2020-04-10 11:03:24","commitOrder":5,"curCode":"    private static void toService(ServiceMeshMetric metrics, long minuteTimeBucket) {\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setName(metrics.getDestServiceName());\n        service.setNodeType(NodeType.Normal);\n        service.setServiceInstanceName(metrics.getDestServiceInstance());\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setResponseCode(metrics.getResponseCode());\n        service.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","date":"2020-04-10 11:03:24","endLine":164,"groupId":"3759","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"toService","params":"(ServiceMeshMetricmetrics@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/61/b2a77c474505aa800cbf19ab1a3953e95f693b.src","preCode":"    private static void toService(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metrics = decorator.getMetric();\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setId(metrics.getDestServiceId());\n        service.setName(getServiceName(metrics.getDestServiceId(), metrics.getDestServiceName()));\n        service.setServiceInstanceName(\n            getServiceInstanceName(metrics.getDestServiceInstanceId(), metrics.getDestServiceInstance()));\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setResponseCode(metrics.getResponseCode());\n        service.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"},{"authorDate":"2020-04-10 11:03:24","commitOrder":5,"curCode":"    private static void toServiceInstance(ServiceMeshMetric metrics, long minuteTimeBucket) {\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setName(metrics.getDestServiceInstance());\n        serviceInstance.setServiceName(metrics.getDestServiceName());\n        serviceInstance.setNodeType(NodeType.Normal);\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setResponseCode(metrics.getResponseCode());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","date":"2020-04-10 11:03:24","endLine":199,"groupId":"3759","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"toServiceInstance","params":"(ServiceMeshMetricmetrics@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/61/b2a77c474505aa800cbf19ab1a3953e95f693b.src","preCode":"    private static void toServiceInstance(ServiceMeshMetricDataDecorator decorator, long minuteTimeBucket) {\n        ServiceMeshMetric metrics = decorator.getMetric();\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setId(metrics.getDestServiceInstanceId());\n        serviceInstance.setName(\n            getServiceInstanceName(metrics.getDestServiceInstanceId(), metrics.getDestServiceInstance()));\n        serviceInstance.setServiceId(metrics.getDestServiceId());\n        serviceInstance.setServiceName(getServiceName(metrics.getDestServiceId(), metrics.getDestServiceName()));\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setResponseCode(metrics.getResponseCode());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"6fe2041b470113e626cb3f41e3789261d31f2548","commitMessage":"@@@Make 8.0.0 Core available. New protocol and register removed. (#4599)\n\nHere are the list of changes we made in this pull request. Top 3 are the principle changes.  others are following these principles.\n1. New agent and mesh report protocol. \n2. New agent header protocol. \n3. Service register.  instance register and network address register have been removed permanently.\n4. Service traffic.  instance traffic and network alias metrics are added to replace the service.  instance and network address inventory.\n5. Register process has been removed.\n6. Metrics stream process supports insert only mode.  especially for traffic entities.\n7. Metrics stream process supports no-downsampling mode for traffic entities and network alias.\n8. Remove all register mechanism and cache in the java agent.\n9. Remove MONTH step in GraphQL query.\n10. Update UI to remove MONTH step query.  the max query range is 60 days now.\n11. Simplify the TTL to metrics and record. And the unit has been formatted in Day unit. No specific TTL for ElasticSearch storage.\n12. Buffer mechanism of trace receiver and mesh receiver has been removed due to no register.\n13. New service id.  instance id and endpoint id rules.  including service relation.  instance relation and endpoint relation id rules.\n14. Java agent support `keep tracing` mode.  meaning.  agent generating tracing context even the backend is unconnected/unavailable.\n15. Plugin test tool up to date.  in order to support new protocol.\n16. Plugin tests expected data files updated.\n17. E2E tests updated.\n18. Telemetry of Grafana config has been merged into one.\n19. Documentation updates.\n20. [TBD] InfluxDB storage implementation is not available.  need @dmsolr to fix later.  in order to reduce the master change block by this PR.","date":"2020-04-10 11:03:24","modifiedFileCount":"342","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2020-04-10 17:59:21","codes":[{"authorDate":"2020-04-10 17:59:21","commitOrder":6,"curCode":"    private static void toService(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setName(metrics.getDestServiceName());\n        service.setNodeType(NodeType.Normal);\n        service.setServiceInstanceName(metrics.getDestServiceInstance());\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setResponseCode(metrics.getResponseCode());\n        service.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","date":"2020-04-10 17:59:21","endLine":171,"groupId":"3759","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"toService","params":"(ServiceMeshMetric.Buildermetrics@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/73/05398eec37086e4c8a50be3103ef99b9c1a725.src","preCode":"    private static void toService(ServiceMeshMetric metrics, long minuteTimeBucket) {\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setName(metrics.getDestServiceName());\n        service.setNodeType(NodeType.Normal);\n        service.setServiceInstanceName(metrics.getDestServiceInstance());\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setResponseCode(metrics.getResponseCode());\n        service.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2020-04-10 17:59:21","commitOrder":6,"curCode":"    private static void toServiceInstance(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setName(metrics.getDestServiceInstance());\n        serviceInstance.setServiceName(metrics.getDestServiceName());\n        serviceInstance.setNodeType(NodeType.Normal);\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setResponseCode(metrics.getResponseCode());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","date":"2020-04-10 17:59:21","endLine":206,"groupId":"3759","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"toServiceInstance","params":"(ServiceMeshMetric.Buildermetrics@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/73/05398eec37086e4c8a50be3103ef99b9c1a725.src","preCode":"    private static void toServiceInstance(ServiceMeshMetric metrics, long minuteTimeBucket) {\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setName(metrics.getDestServiceInstance());\n        serviceInstance.setServiceName(metrics.getDestServiceName());\n        serviceInstance.setNodeType(NodeType.Normal);\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setResponseCode(metrics.getResponseCode());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"}],"commitId":"44cae97c259c06f95d1fc4b78ee41268670b6542","commitMessage":"@@@Set up restrict length rules for service.  instance and endpoint (#4633)\n\n* Set up restrict length rules for service.  instance and endpoint\n\n* Adjust two env names.","date":"2020-04-10 17:59:21","modifiedFileCount":"26","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2020-11-17 09:03:48","codes":[{"authorDate":"2020-11-17 09:03:48","commitOrder":7,"curCode":"    private static void toService(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setName(metrics.getDestServiceName());\n        service.setNodeType(NodeType.Normal);\n        service.setServiceInstanceName(metrics.getDestServiceInstance());\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setResponseCode(metrics.getResponseCode());\n        service.setType(protocol2Type(metrics.getProtocol()));\n        service.getSideCar().setInternalErrorCode(metrics.getInternalErrorCode());\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","date":"2020-11-17 09:03:48","endLine":177,"groupId":"3759","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"toService","params":"(ServiceMeshMetric.Buildermetrics@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/06/356554ef3ccd8bf0f139d3d5c7e445800d2e92.src","preCode":"    private static void toService(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setName(metrics.getDestServiceName());\n        service.setNodeType(NodeType.Normal);\n        service.setServiceInstanceName(metrics.getDestServiceInstance());\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setResponseCode(metrics.getResponseCode());\n        service.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2020-11-17 09:03:48","commitOrder":7,"curCode":"    private static void toServiceInstance(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setName(metrics.getDestServiceInstance());\n        serviceInstance.setServiceName(metrics.getDestServiceName());\n        serviceInstance.setNodeType(NodeType.Normal);\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setResponseCode(metrics.getResponseCode());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n        serviceInstance.getSideCar().setInternalErrorCode(metrics.getInternalErrorCode());\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","date":"2020-11-17 09:03:48","endLine":215,"groupId":"3759","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"toServiceInstance","params":"(ServiceMeshMetric.Buildermetrics@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/06/356554ef3ccd8bf0f139d3d5c7e445800d2e92.src","preCode":"    private static void toServiceInstance(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setName(metrics.getDestServiceInstance());\n        serviceInstance.setServiceName(metrics.getDestServiceName());\n        serviceInstance.setNodeType(NodeType.Normal);\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setResponseCode(metrics.getResponseCode());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"}],"commitId":"9c486a05ee3ad8947011168e0039f5b48922e4ab","commitMessage":"@@@Support `sideCar.internalErrorCode` in the sources (#5849)\n\n* Support nested sidecar object in the scope.\n\n* Update the changelog.\n\n* Fix comments and docs.","date":"2020-11-17 09:03:48","modifiedFileCount":"19","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2021-05-07 07:50:03","codes":[{"authorDate":"2021-05-07 07:50:03","commitOrder":8,"curCode":"    private static void toService(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setName(metrics.getDestServiceName());\n        service.setNodeType(NodeType.Normal);\n        service.setServiceInstanceName(metrics.getDestServiceInstance());\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setResponseCode(metrics.getResponseCode());\n        service.setType(protocol2Type(metrics.getProtocol()));\n        service.getSideCar().setInternalErrorCode(metrics.getInternalErrorCode());\n        service.getTcpInfo().setReceivedBytes(metrics.getTcp().getReceivedBytes());\n        service.getTcpInfo().setSentBytes(metrics.getTcp().getSentBytes());\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","date":"2021-05-07 07:50:03","endLine":155,"groupId":"3759","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"toService","params":"(ServiceMeshMetric.Buildermetrics@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/9a/f5fac86ef51e6bbedcd58ab5069d68051114b0.src","preCode":"    private static void toService(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setName(metrics.getDestServiceName());\n        service.setNodeType(NodeType.Normal);\n        service.setServiceInstanceName(metrics.getDestServiceInstance());\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setResponseCode(metrics.getResponseCode());\n        service.setType(protocol2Type(metrics.getProtocol()));\n        service.getSideCar().setInternalErrorCode(metrics.getInternalErrorCode());\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"},{"authorDate":"2021-05-07 07:50:03","commitOrder":8,"curCode":"    private static void toServiceInstance(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setName(metrics.getDestServiceInstance());\n        serviceInstance.setServiceName(metrics.getDestServiceName());\n        serviceInstance.setNodeType(NodeType.Normal);\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setResponseCode(metrics.getResponseCode());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n        serviceInstance.getSideCar().setInternalErrorCode(metrics.getInternalErrorCode());\n        serviceInstance.getTcpInfo().setReceivedBytes(metrics.getTcp().getReceivedBytes());\n        serviceInstance.getTcpInfo().setSentBytes(metrics.getTcp().getSentBytes());\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","date":"2021-05-07 07:50:03","endLine":197,"groupId":"3759","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"toServiceInstance","params":"(ServiceMeshMetric.Buildermetrics@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/9a/f5fac86ef51e6bbedcd58ab5069d68051114b0.src","preCode":"    private static void toServiceInstance(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setName(metrics.getDestServiceInstance());\n        serviceInstance.setServiceName(metrics.getDestServiceName());\n        serviceInstance.setNodeType(NodeType.Normal);\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setResponseCode(metrics.getResponseCode());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n        serviceInstance.getSideCar().setInternalErrorCode(metrics.getInternalErrorCode());\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"3b15f8d132284c6eec6bb670341910b640cbc65d","commitMessage":"@@@feature: Envoy access log receiver supports TCP logs (#6727)\n\n","date":"2021-05-07 07:50:03","modifiedFileCount":"17","status":"M","submitter":"Zhenxu Ke"},{"authorTime":"2021-08-19 06:12:05","codes":[{"authorDate":"2021-08-19 06:12:05","commitOrder":9,"curCode":"    private static void toService(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setName(metrics.getDestServiceName());\n        service.setNodeType(NodeType.Normal);\n        service.setServiceInstanceName(metrics.getDestServiceInstance());\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setResponseCode(metrics.getResponseCode());\n        service.setHttpResponseStatusCode(metrics.getResponseCode());\n        service.setType(protocol2Type(metrics.getProtocol()));\n        service.getSideCar().setInternalErrorCode(metrics.getInternalErrorCode());\n        service.getTcpInfo().setReceivedBytes(metrics.getTcp().getReceivedBytes());\n        service.getTcpInfo().setSentBytes(metrics.getTcp().getSentBytes());\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","date":"2021-08-19 06:12:05","endLine":157,"groupId":"10924","id":17,"instanceNumber":1,"isCurCommit":1,"methodName":"toService","params":"(ServiceMeshMetric.Buildermetrics@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/77/e1bd7e3e24e3c316572017f6a347778e7d9469.src","preCode":"    private static void toService(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        Service service = new Service();\n        service.setTimeBucket(minuteTimeBucket);\n        service.setName(metrics.getDestServiceName());\n        service.setNodeType(NodeType.Normal);\n        service.setServiceInstanceName(metrics.getDestServiceInstance());\n        service.setEndpointName(metrics.getEndpoint());\n        service.setLatency(metrics.getLatency());\n        service.setStatus(metrics.getStatus());\n        service.setResponseCode(metrics.getResponseCode());\n        service.setType(protocol2Type(metrics.getProtocol()));\n        service.getSideCar().setInternalErrorCode(metrics.getInternalErrorCode());\n        service.getTcpInfo().setReceivedBytes(metrics.getTcp().getReceivedBytes());\n        service.getTcpInfo().setSentBytes(metrics.getTcp().getSentBytes());\n\n        SOURCE_RECEIVER.receive(service);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2021-08-19 06:12:05","commitOrder":9,"curCode":"    private static void toServiceInstance(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setName(metrics.getDestServiceInstance());\n        serviceInstance.setServiceName(metrics.getDestServiceName());\n        serviceInstance.setNodeType(NodeType.Normal);\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setResponseCode(metrics.getResponseCode());\n        serviceInstance.setHttpResponseStatusCode(metrics.getResponseCode());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n        serviceInstance.getSideCar().setInternalErrorCode(metrics.getInternalErrorCode());\n        serviceInstance.getTcpInfo().setReceivedBytes(metrics.getTcp().getReceivedBytes());\n        serviceInstance.getTcpInfo().setSentBytes(metrics.getTcp().getSentBytes());\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","date":"2021-08-19 06:12:05","endLine":201,"groupId":"10924","id":18,"instanceNumber":2,"isCurCommit":1,"methodName":"toServiceInstance","params":"(ServiceMeshMetric.Buildermetrics@longminuteTimeBucket)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/77/e1bd7e3e24e3c316572017f6a347778e7d9469.src","preCode":"    private static void toServiceInstance(ServiceMeshMetric.Builder metrics, long minuteTimeBucket) {\n        ServiceInstance serviceInstance = new ServiceInstance();\n        serviceInstance.setTimeBucket(minuteTimeBucket);\n        serviceInstance.setName(metrics.getDestServiceInstance());\n        serviceInstance.setServiceName(metrics.getDestServiceName());\n        serviceInstance.setNodeType(NodeType.Normal);\n        serviceInstance.setEndpointName(metrics.getEndpoint());\n        serviceInstance.setLatency(metrics.getLatency());\n        serviceInstance.setStatus(metrics.getStatus());\n        serviceInstance.setResponseCode(metrics.getResponseCode());\n        serviceInstance.setType(protocol2Type(metrics.getProtocol()));\n        serviceInstance.getSideCar().setInternalErrorCode(metrics.getInternalErrorCode());\n        serviceInstance.getTcpInfo().setReceivedBytes(metrics.getTcp().getReceivedBytes());\n        serviceInstance.getTcpInfo().setSentBytes(metrics.getTcp().getSentBytes());\n\n        SOURCE_RECEIVER.receive(serviceInstance);\n    }\n","realPath":"oap-server/server-receiver-plugin/skywalking-mesh-receiver-plugin/src/main/java/org/apache/skywalking/aop/server/receiver/mesh/TelemetryDataDispatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"}],"commitId":"ad0042f6f5a529f646d0286e7cef4d7ca8d81ef9","commitMessage":"@@@Add missing property set for new field `httpResponseStatusCode` (#7486)\n\nFollow up https://github.com/apache/skywalking/pull/7271","date":"2021-08-19 06:12:05","modifiedFileCount":"1","status":"M","submitter":"kezhenxu94"}]
