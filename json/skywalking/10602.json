[{"authorTime":"2019-06-16 22:49:44","codes":[{"authorDate":"2019-07-27 22:02:40","commitOrder":2,"curCode":"    @Override public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","date":"2019-07-27 22:02:40","endLine":73,"groupId":"6349","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/93/d54969c781f89c1c2799e1ddc14d3a0e4afe02.src","preCode":"    @Override public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","realPath":"oap-server/server-configuration/configuration-etcd/src/test/java/org/apache/skywalking/oap/server/configuration/etcd/EtcdConfigurationTestProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2019-06-16 22:49:44","commitOrder":2,"curCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(ApolloConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","date":"2019-06-16 22:49:44","endLine":72,"groupId":"6349","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/04/20a5ab0be9a9ff27d5dbdf309d4562f34d0588.src","preCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(ApolloConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","realPath":"oap-server/server-configuration/configuration-apollo/src/test/java/org/apache/skywalking/oap/server/configuration/apollo/ApolloConfigurationTestProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"NB"}],"commitId":"76d91635eeeb07ff5f5ff665a1cba88b5ec0de8d","commitMessage":"@@@Support etcd configuration. (#2973)\n\n* Support etcd configuration.\n","date":"2019-07-27 22:02:40","modifiedFileCount":"0","status":"M","submitter":"Alan Lau"},{"authorTime":"2019-06-16 22:49:44","codes":[{"authorDate":"2020-02-11 17:10:49","commitOrder":3,"curCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","date":"2020-02-11 17:10:49","endLine":74,"groupId":"6349","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c8/7f84f1ecc13c84de0c9685dd35b6459520ddf9.src","preCode":"    @Override public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","realPath":"oap-server/server-configuration/configuration-etcd/src/test/java/org/apache/skywalking/oap/server/configuration/etcd/EtcdConfigurationTestProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2019-06-16 22:49:44","commitOrder":3,"curCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(ApolloConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","date":"2019-06-16 22:49:44","endLine":72,"groupId":"6349","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/04/20a5ab0be9a9ff27d5dbdf309d4562f34d0588.src","preCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(ApolloConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","realPath":"oap-server/server-configuration/configuration-apollo/src/test/java/org/apache/skywalking/oap/server/configuration/apollo/ApolloConfigurationTestProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"}],"commitId":"5b255ba3e3b50e0e0196b28cdca21dcd5c9c3da2","commitMessage":"@@@Set up more strict code styles and fix existing issues (#4337)\n\nMotivation:\n\nReview code styles with some bots automatically.\n\nModifications:\n\nSet up ReviewDog in GitHub Action to review code style.\n\nAdd more check rules to checkstyle plugin.\n\nResult:\n\nObvious code styles can be reviewed and commented automatically.","date":"2020-02-11 17:10:49","modifiedFileCount":"2429","status":"M","submitter":"kezhenxu94"},{"authorTime":"2019-06-16 22:49:44","codes":[{"authorDate":"2021-07-05 11:23:11","commitOrder":4,"curCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","date":"2021-07-05 11:23:11","endLine":74,"groupId":"6349","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/b9/38c5df2fcb06c02a44098da2cf320bfe0a540d.src","preCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","realPath":"oap-server/server-configuration/configuration-etcd/src/test/java/org/apache/skywalking/oap/server/configuration/etcd/EtcdConfigurationTestProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2019-06-16 22:49:44","commitOrder":4,"curCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(ApolloConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","date":"2019-06-16 22:49:44","endLine":72,"groupId":"6349","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/04/20a5ab0be9a9ff27d5dbdf309d4562f34d0588.src","preCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(ApolloConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","realPath":"oap-server/server-configuration/configuration-apollo/src/test/java/org/apache/skywalking/oap/server/configuration/apollo/ApolloConfigurationTestProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"}],"commitId":"5dd56a5ca45c1bc423af71dc0829aed1221621ac","commitMessage":"@@@Upgrade etcd cluster coordinator and dynamic configuration to v3.x (#7215)\n\n","date":"2021-07-05 11:23:11","modifiedFileCount":"10","status":"M","submitter":"Daming"},{"authorTime":"2019-06-16 22:49:44","codes":[{"authorDate":"2021-09-07 22:54:05","commitOrder":5,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        watcher = new ConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeEvent value) {\n                log.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n\n        groupWatcher = new GroupConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKeyGroup\") {\n            private Map<String, String> config = new ConcurrentHashMap<>();\n\n            @Override\n            public void notifyGroup(Map<String, ConfigChangeEvent> groupItems) {\n                log.info(\"GroupConfigChangeWatcher.ConfigChangeEvents: {}\", groupItems);\n                groupItems.forEach((groupItemName, event) -> {\n                    if (EventType.DELETE.equals(event.getEventType())) {\n                        config.remove(groupItemName);\n                    } else {\n                        config.put(groupItemName, event.getNewValue());\n                    }\n                });\n            }\n\n            @Override\n            public Map<String, String> groupItems() {\n                return config;\n            }\n        };\n    }\n","date":"2021-09-07 22:54:05","endLine":95,"groupId":"6349","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/21/d7f6eccb709a82eecf93d01ad8a22c60686139.src","preCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","realPath":"oap-server/server-configuration/configuration-etcd/src/test/java/org/apache/skywalking/oap/server/configuration/etcd/EtcdConfigurationTestProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2019-06-16 22:49:44","commitOrder":5,"curCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(ApolloConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","date":"2019-06-16 22:49:44","endLine":72,"groupId":"6349","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/04/20a5ab0be9a9ff27d5dbdf309d4562f34d0588.src","preCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(ApolloConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","realPath":"oap-server/server-configuration/configuration-apollo/src/test/java/org/apache/skywalking/oap/server/configuration/apollo/ApolloConfigurationTestProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"}],"commitId":"e89493b2472211772e5f90d3e0ca327a1ba5736c","commitMessage":"@@@Support etcd grouped dynamic configurations. (#7672)\n\n","date":"2021-09-07 22:54:05","modifiedFileCount":"3","status":"M","submitter":"wankai123"},{"authorTime":"2021-09-10 14:33:08","codes":[{"authorDate":"2021-09-07 22:54:05","commitOrder":6,"curCode":"    public void prepare() throws ServiceNotProvidedException {\n        watcher = new ConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeEvent value) {\n                log.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n\n        groupWatcher = new GroupConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKeyGroup\") {\n            private Map<String, String> config = new ConcurrentHashMap<>();\n\n            @Override\n            public void notifyGroup(Map<String, ConfigChangeEvent> groupItems) {\n                log.info(\"GroupConfigChangeWatcher.ConfigChangeEvents: {}\", groupItems);\n                groupItems.forEach((groupItemName, event) -> {\n                    if (EventType.DELETE.equals(event.getEventType())) {\n                        config.remove(groupItemName);\n                    } else {\n                        config.put(groupItemName, event.getNewValue());\n                    }\n                });\n            }\n\n            @Override\n            public Map<String, String> groupItems() {\n                return config;\n            }\n        };\n    }\n","date":"2021-09-07 22:54:05","endLine":95,"groupId":"10602","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/21/d7f6eccb709a82eecf93d01ad8a22c60686139.src","preCode":"    public void prepare() throws ServiceNotProvidedException {\n        watcher = new ConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeEvent value) {\n                log.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n\n        groupWatcher = new GroupConfigChangeWatcher(EtcdConfigurationTestModule.NAME, this, \"testKeyGroup\") {\n            private Map<String, String> config = new ConcurrentHashMap<>();\n\n            @Override\n            public void notifyGroup(Map<String, ConfigChangeEvent> groupItems) {\n                log.info(\"GroupConfigChangeWatcher.ConfigChangeEvents: {}\", groupItems);\n                groupItems.forEach((groupItemName, event) -> {\n                    if (EventType.DELETE.equals(event.getEventType())) {\n                        config.remove(groupItemName);\n                    } else {\n                        config.put(groupItemName, event.getNewValue());\n                    }\n                });\n            }\n\n            @Override\n            public Map<String, String> groupItems() {\n                return config;\n            }\n        };\n    }\n","realPath":"oap-server/server-configuration/configuration-etcd/src/test/java/org/apache/skywalking/oap/server/configuration/etcd/EtcdConfigurationTestProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2021-09-10 14:33:08","commitOrder":6,"curCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(ApolloConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                log.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n\n        groupWatcher = new GroupConfigChangeWatcher(ApolloConfigurationTestModule.NAME, this, \"testKeyGroup\") {\n            private Map<String, String> config = new ConcurrentHashMap<>();\n\n            @Override\n            public void notifyGroup(Map<String, ConfigChangeEvent> groupItems) {\n                log.info(\"GroupConfigChangeWatcher.ConfigChangeEvents: {}\", groupItems);\n                groupItems.forEach((groupItemName, event) -> {\n                    if (EventType.DELETE.equals(event.getEventType())) {\n                        config.remove(groupItemName);\n                    } else {\n                        config.put(groupItemName, event.getNewValue());\n                    }\n                });\n            }\n\n            @Override\n            public Map<String, String> groupItems() {\n                return config;\n            }\n        };\n    }\n","date":"2021-09-10 14:33:08","endLine":96,"groupId":"10602","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"prepare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/78/d56fc8d42452ae5db3ce9d62de83424d7b1ef2.src","preCode":"    public void prepare() throws ServiceNotProvidedException, ModuleStartException {\n        watcher = new ConfigChangeWatcher(ApolloConfigurationTestModule.NAME, this, \"testKey\") {\n            private volatile String testValue;\n\n            @Override\n            public void notify(ConfigChangeWatcher.ConfigChangeEvent value) {\n                LOGGER.info(\"ConfigChangeWatcher.ConfigChangeEvent: {}\", value);\n                if (EventType.DELETE.equals(value.getEventType())) {\n                    testValue = null;\n                } else {\n                    testValue = value.getNewValue();\n                }\n            }\n\n            @Override\n            public String value() {\n                return testValue;\n            }\n        };\n    }\n","realPath":"oap-server/server-configuration/configuration-apollo/src/test/java/org/apache/skywalking/oap/server/configuration/apollo/ApolloConfigurationTestProvider.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"80f999f998c7a8277b15b41c32c4fd4c7437a918","commitMessage":"@@@Support apollo grouped dynamic configurations (#7685)\n\n","date":"2021-09-10 14:33:08","modifiedFileCount":"2","status":"M","submitter":"wankai123"}]
