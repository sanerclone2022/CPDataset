[{"authorTime":"2020-08-31 15:46:37","codes":[{"authorDate":"2020-08-31 15:46:37","commitOrder":1,"curCode":"    private void sendBrowserPerfData(BrowserPerfData browserPerfData) throws InterruptedException {\n        final CountDownLatch latch = new CountDownLatch(1);\n\n        browserPerfServiceStub.collectPerfData(browserPerfData, new StreamObserver<Commands>() {\n            @Override\n            public void onNext(Commands commands) {\n\n            }\n\n            @Override\n            public void onError(Throwable throwable) {\n                throwable.printStackTrace();\n                latch.countDown();\n            }\n\n            @Override\n            public void onCompleted() {\n                latch.countDown();\n            }\n        });\n        latch.await();\n    }\n","date":"2020-08-31 15:46:37","endLine":262,"groupId":"1463","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sendBrowserPerfData","params":"(BrowserPerfDatabrowserPerfData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/dd/31599bd569fffc631c7a9864df3d5c3cc3915f.src","preCode":"    private void sendBrowserPerfData(BrowserPerfData browserPerfData) throws InterruptedException {\n        final CountDownLatch latch = new CountDownLatch(1);\n\n        browserPerfServiceStub.collectPerfData(browserPerfData, new StreamObserver<Commands>() {\n            @Override\n            public void onNext(Commands commands) {\n\n            }\n\n            @Override\n            public void onError(Throwable throwable) {\n                throwable.printStackTrace();\n                latch.countDown();\n            }\n\n            @Override\n            public void onCompleted() {\n                latch.countDown();\n            }\n        });\n        latch.await();\n    }\n","realPath":"test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/browser/BrowserE2E.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"B"},{"authorDate":"2020-08-31 15:46:37","commitOrder":1,"curCode":"    private void sendBrowserErrorLog(org.apache.skywalking.apm.network.language.agent.v3.BrowserErrorLog browserErrorLog) throws InterruptedException {\n        final CountDownLatch latch = new CountDownLatch(1);\n\n        StreamObserver<org.apache.skywalking.apm.network.language.agent.v3.BrowserErrorLog> collectStream = browserPerfServiceStub\n            .collectErrorLogs(\n                new StreamObserver<Commands>() {\n                    @Override\n                    public void onNext(Commands commands) {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable throwable) {\n                        throwable.printStackTrace();\n                        latch.countDown();\n                    }\n\n                    @Override\n                    public void onCompleted() {\n                        latch.countDown();\n                    }\n                });\n        collectStream.onNext(browserErrorLog);\n        collectStream.onCompleted();\n        latch.await();\n    }\n","date":"2020-08-31 15:46:37","endLine":289,"groupId":"1464","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sendBrowserErrorLog","params":"(org.apache.skywalking.apm.network.language.agent.v3.BrowserErrorLogbrowserErrorLog)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/dd/31599bd569fffc631c7a9864df3d5c3cc3915f.src","preCode":"    private void sendBrowserErrorLog(org.apache.skywalking.apm.network.language.agent.v3.BrowserErrorLog browserErrorLog) throws InterruptedException {\n        final CountDownLatch latch = new CountDownLatch(1);\n\n        StreamObserver<org.apache.skywalking.apm.network.language.agent.v3.BrowserErrorLog> collectStream = browserPerfServiceStub\n            .collectErrorLogs(\n                new StreamObserver<Commands>() {\n                    @Override\n                    public void onNext(Commands commands) {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable throwable) {\n                        throwable.printStackTrace();\n                        latch.countDown();\n                    }\n\n                    @Override\n                    public void onCompleted() {\n                        latch.countDown();\n                    }\n                });\n        collectStream.onNext(browserErrorLog);\n        collectStream.onCompleted();\n        latch.await();\n    }\n","realPath":"test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/browser/BrowserE2E.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"B"}],"commitId":"7ef8b3e476001154ba5d600f7206add0277d4d24","commitMessage":"@@@Support Browser protocol at OAP (#4228)\n\n","date":"2020-08-31 15:46:37","modifiedFileCount":"24","status":"B","submitter":"zhang-wei"},{"authorTime":"2021-01-14 09:49:11","codes":[{"authorDate":"2021-01-14 09:49:11","commitOrder":2,"curCode":"    private void sendBrowserPerfData(BrowserPerfData browserPerfData) throws InterruptedException {\n        final CountDownLatch latch = new CountDownLatch(1);\n\n        browserPerfServiceStub.collectPerfData(browserPerfData, new StreamObserver<Commands>() {\n            @Override\n            public void onNext(Commands commands) {\n\n            }\n\n            @Override\n            public void onError(Throwable throwable) {\n                LOGGER.warn(throwable.getMessage(), throwable);\n                latch.countDown();\n            }\n\n            @Override\n            public void onCompleted() {\n                latch.countDown();\n            }\n        });\n        latch.await();\n    }\n","date":"2021-01-14 09:49:11","endLine":262,"groupId":"1038","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"sendBrowserPerfData","params":"(BrowserPerfDatabrowserPerfData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/e6/b8b886d08d3727b6ccde2b27192dc1153a2311.src","preCode":"    private void sendBrowserPerfData(BrowserPerfData browserPerfData) throws InterruptedException {\n        final CountDownLatch latch = new CountDownLatch(1);\n\n        browserPerfServiceStub.collectPerfData(browserPerfData, new StreamObserver<Commands>() {\n            @Override\n            public void onNext(Commands commands) {\n\n            }\n\n            @Override\n            public void onError(Throwable throwable) {\n                throwable.printStackTrace();\n                latch.countDown();\n            }\n\n            @Override\n            public void onCompleted() {\n                latch.countDown();\n            }\n        });\n        latch.await();\n    }\n","realPath":"test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/browser/BrowserE2E.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"},{"authorDate":"2021-01-14 09:49:11","commitOrder":2,"curCode":"    private void sendBrowserErrorLog(org.apache.skywalking.apm.network.language.agent.v3.BrowserErrorLog browserErrorLog) throws InterruptedException {\n        final CountDownLatch latch = new CountDownLatch(1);\n\n        StreamObserver<org.apache.skywalking.apm.network.language.agent.v3.BrowserErrorLog> collectStream = browserPerfServiceStub\n            .collectErrorLogs(\n                new StreamObserver<Commands>() {\n                    @Override\n                    public void onNext(Commands commands) {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable throwable) {\n                        LOGGER.warn(throwable.getMessage(), throwable);\n                        latch.countDown();\n                    }\n\n                    @Override\n                    public void onCompleted() {\n                        latch.countDown();\n                    }\n                });\n        collectStream.onNext(browserErrorLog);\n        collectStream.onCompleted();\n        latch.await();\n    }\n","date":"2021-01-14 09:49:11","endLine":289,"groupId":"1038","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"sendBrowserErrorLog","params":"(org.apache.skywalking.apm.network.language.agent.v3.BrowserErrorLogbrowserErrorLog)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/e6/b8b886d08d3727b6ccde2b27192dc1153a2311.src","preCode":"    private void sendBrowserErrorLog(org.apache.skywalking.apm.network.language.agent.v3.BrowserErrorLog browserErrorLog) throws InterruptedException {\n        final CountDownLatch latch = new CountDownLatch(1);\n\n        StreamObserver<org.apache.skywalking.apm.network.language.agent.v3.BrowserErrorLog> collectStream = browserPerfServiceStub\n            .collectErrorLogs(\n                new StreamObserver<Commands>() {\n                    @Override\n                    public void onNext(Commands commands) {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable throwable) {\n                        throwable.printStackTrace();\n                        latch.countDown();\n                    }\n\n                    @Override\n                    public void onCompleted() {\n                        latch.countDown();\n                    }\n                });\n        collectStream.onNext(browserErrorLog);\n        collectStream.onCompleted();\n        latch.await();\n    }\n","realPath":"test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/browser/BrowserE2E.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"}],"commitId":"15452025c65dd6934bd9d6c8a930961b0f960594","commitMessage":"@@@Log collecting and query implementation (#6120)\n\n","date":"2021-01-14 09:49:11","modifiedFileCount":"51","status":"M","submitter":"zhang-wei"}]
