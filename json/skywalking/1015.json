[{"authorTime":"2020-03-16 23:45:14","codes":[{"authorDate":"2020-03-16 23:45:14","commitOrder":1,"curCode":"    public void verifyLoosely(final List<Trace> traces) {\n        for (final TraceMatcher matcher : getTraces()) {\n            boolean matched = false;\n            for (final Trace trace : traces) {\n                try {\n                    matcher.verify(trace);\n                    matched = true;\n                } catch (Throwable ignored) {\n                }\n            }\n            if (!matched) {\n                fail(\"\\nExpected: %s\\n Actual: %s\", getTraces(), traces);\n            }\n        }\n    }\n","date":"2020-03-16 23:45:14","endLine":54,"groupId":"785","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"verifyLoosely","params":"(finalList<Trace>traces)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/59/f7170cff916dfaf880b09399d3bd931c8f2523.src","preCode":"    public void verifyLoosely(final List<Trace> traces) {\n        for (final TraceMatcher matcher : getTraces()) {\n            boolean matched = false;\n            for (final Trace trace : traces) {\n                try {\n                    matcher.verify(trace);\n                    matched = true;\n                } catch (Throwable ignored) {\n                }\n            }\n            if (!matched) {\n                fail(\"\\nExpected: %s\\n Actual: %s\", getTraces(), traces);\n            }\n        }\n    }\n","realPath":"test/e2e/e2e-data/src/main/java/org/apache/skywalking/e2e/trace/TracesMatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"},{"authorDate":"2020-03-16 23:45:14","commitOrder":1,"curCode":"    public void verify(final List<Service> services) {\n        assertThat(services).hasSameSizeAs(this.getServices());\n\n        for (int i = 0; i < getServices().size(); i++) {\n            boolean matched = false;\n            for (Service service : services) {\n                try {\n                    this.getServices().get(i).verify(service);\n                    matched = true;\n                } catch (Throwable ignored) {\n                }\n            }\n            if (!matched) {\n                fail(\"\\nExpected: %s\\nActual: %s\", getServices(), services);\n            }\n        }\n    }\n","date":"2020-03-16 23:45:14","endLine":52,"groupId":"6354","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verify","params":"(finalList<Service>services)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/cd/e40d5410cb9dcc5dd981cec80de46266509e52.src","preCode":"    public void verify(final List<Service> services) {\n        assertThat(services).hasSameSizeAs(this.getServices());\n\n        for (int i = 0; i < getServices().size(); i++) {\n            boolean matched = false;\n            for (Service service : services) {\n                try {\n                    this.getServices().get(i).verify(service);\n                    matched = true;\n                } catch (Throwable ignored) {\n                }\n            }\n            if (!matched) {\n                fail(\"\\nExpected: %s\\nActual: %s\", getServices(), services);\n            }\n        }\n    }\n","realPath":"test/e2e/e2e-data/src/main/java/org/apache/skywalking/e2e/service/ServicesMatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"}],"commitId":"dcd66ee6e940bdc9a7ecf90415929bfd48a3a284","commitMessage":"@@@Rewrite the E2E test framework and tests (#4510)\n\nMotivation:\n\nAccording the feedback from the community.  the e2e tests are hard for\nthem to understand and get them started.  so this pull request aims to\nrewrite the e2e tests with some improvements:\n\n- debuggable locally.  now you can run every individual case directly\ninside the IDE.  just like running a plain unit test.\n\n- same functionalities of multiple counterparts share the same codes. \ncases like different storages and cluster coordinators share the same\ncodes.  easy to add more similar cases.\n\n- the \"end\" now extends to the Doccker images.  meaning that some bugs\nlike #4483 and #4471 can be more easily and early to be discovered.\n\n- codes style and license headers are checked\n\nModifications:\n\n- adopt jupeter (a.k.a junit 5).  testcontainers as the new test\nframework.  all containers are orchestrated by docker-compose.yml. \nwell-known technology that developers should be familiar with.\n\n- rewrite all test cases and verify them.\n\n- reorganize the workflows in GitHub Actions.\n\nResult:\n\n- new e2e test should be easy to add.\n\n- closes https://github.com/apache/skywalking/issues/4472","date":"2020-03-16 23:45:14","modifiedFileCount":"3","status":"B","submitter":"kezhenxu94"},{"authorTime":"2020-06-22 09:10:51","codes":[{"authorDate":"2020-03-16 23:45:14","commitOrder":2,"curCode":"    public void verifyLoosely(final List<Trace> traces) {\n        for (final TraceMatcher matcher : getTraces()) {\n            boolean matched = false;\n            for (final Trace trace : traces) {\n                try {\n                    matcher.verify(trace);\n                    matched = true;\n                } catch (Throwable ignored) {\n                }\n            }\n            if (!matched) {\n                fail(\"\\nExpected: %s\\n Actual: %s\", getTraces(), traces);\n            }\n        }\n    }\n","date":"2020-03-16 23:45:14","endLine":54,"groupId":"1015","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"verifyLoosely","params":"(finalList<Trace>traces)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/59/f7170cff916dfaf880b09399d3bd931c8f2523.src","preCode":"    public void verifyLoosely(final List<Trace> traces) {\n        for (final TraceMatcher matcher : getTraces()) {\n            boolean matched = false;\n            for (final Trace trace : traces) {\n                try {\n                    matcher.verify(trace);\n                    matched = true;\n                } catch (Throwable ignored) {\n                }\n            }\n            if (!matched) {\n                fail(\"\\nExpected: %s\\n Actual: %s\", getTraces(), traces);\n            }\n        }\n    }\n","realPath":"test/e2e/e2e-data/src/main/java/org/apache/skywalking/e2e/trace/TracesMatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"N"},{"authorDate":"2020-06-22 09:10:51","commitOrder":2,"curCode":"    public void verify(final List<Service> services) {\n        \n        LOGGER.info(\"services:{} matchers:{}\", services, this.getServices());\n        assertThat(services).hasSameSizeAs(this.getServices());\n\n        for (int i = 0; i < getServices().size(); i++) {\n            boolean matched = false;\n            for (Service service : services) {\n                try {\n                    this.getServices().get(i).verify(service);\n                    matched = true;\n                } catch (Throwable ignored) {\n                }\n            }\n            if (!matched) {\n                fail(\"\\nExpected: %s\\nActual: %s\", getServices(), services);\n            }\n        }\n    }\n","date":"2020-06-22 09:10:51","endLine":56,"groupId":"1015","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"verify","params":"(finalList<Service>services)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/38/cc9d96e5e766a2fef53e4f6eff7398c45addc4.src","preCode":"    public void verify(final List<Service> services) {\n        assertThat(services).hasSameSizeAs(this.getServices());\n\n        for (int i = 0; i < getServices().size(); i++) {\n            boolean matched = false;\n            for (Service service : services) {\n                try {\n                    this.getServices().get(i).verify(service);\n                    matched = true;\n                } catch (Throwable ignored) {\n                }\n            }\n            if (!matched) {\n                fail(\"\\nExpected: %s\\nActual: %s\", getServices(), services);\n            }\n        }\n    }\n","realPath":"test/e2e/e2e-data/src/main/java/org/apache/skywalking/e2e/service/ServicesMatcher.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"e143ae62eb8a2300b124f345b235bb1e3eb3c139","commitMessage":"@@@Reduce the length of metric name (#4936)\n\n","date":"2020-06-22 09:10:51","modifiedFileCount":"5","status":"M","submitter":"Gao Hongtao"}]
