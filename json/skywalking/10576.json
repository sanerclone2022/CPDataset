[{"authorTime":"2020-10-03 23:26:29","codes":[{"authorDate":"2020-10-03 23:26:29","commitOrder":1,"curCode":"    private void readRulesConfig(Rules rules) {\n        Map rulesData = (Map) yamlData.get(\"rules\");\n        if (rulesData == null) {\n            return;\n        }\n        rules.setRules(new ArrayList<>());\n        rulesData.forEach((k, v) -> {\n            if (((String) k).endsWith(\"_rule\")) {\n                AlarmRule alarmRule = new AlarmRule();\n                alarmRule.setAlarmRuleName((String) k);\n                Map settings = (Map) v;\n                Object metricsName = settings.get(\"metrics-name\");\n                if (metricsName == null) {\n                    throw new IllegalArgumentException(\"metrics-name can't be null\");\n                }\n\n                alarmRule.setMetricsName((String) metricsName);\n                alarmRule.setIncludeNames((ArrayList) settings.getOrDefault(\"include-names\", new ArrayList(0)));\n                alarmRule.setExcludeNames((ArrayList) settings.getOrDefault(\"exclude-names\", new ArrayList(0)));\n                alarmRule.setIncludeNamesRegex((String) settings.getOrDefault(\"include-names-regex\", \"\"));\n                alarmRule.setExcludeNamesRegex((String) settings.getOrDefault(\"exclude-names-regex\", \"\"));\n                alarmRule.setIncludeLabels(\n                        (ArrayList) settings.getOrDefault(\"include-labels\", new ArrayList(0)));\n                alarmRule.setExcludeLabels(\n                        (ArrayList) settings.getOrDefault(\"exclude-labels\", new ArrayList(0)));\n                alarmRule.setIncludeLabelsRegex((String) settings.getOrDefault(\"include-labels-regex\", \"\"));\n                alarmRule.setExcludeLabelsRegex((String) settings.getOrDefault(\"exclude-labels-regex\", \"\"));\n                alarmRule.setThreshold(settings.get(\"threshold\").toString());\n                alarmRule.setOp((String) settings.get(\"op\"));\n                alarmRule.setPeriod((Integer) settings.getOrDefault(\"period\", 1));\n                alarmRule.setCount((Integer) settings.getOrDefault(\"count\", 1));\n                \r\n                alarmRule.setSilencePeriod((Integer) settings.getOrDefault(\"silence-period\", alarmRule.getPeriod()));\n                alarmRule.setOnlyAsCondition((Boolean) settings.getOrDefault(\"only-as-condition\", false));\n                alarmRule.setMessage(\n                        (String) settings.getOrDefault(\"message\", \"Alarm caused by Rule \" + alarmRule\n                                .getAlarmRuleName()));\n\n                rules.getRules().add(alarmRule);\n            }\n        });\n    }\n","date":"2020-10-03 23:26:29","endLine":110,"groupId":"3015","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"readRulesConfig","params":"(Rulesrules)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/92/90f2fa702adbe3a32d47b85ad6227afc38fd7d.src","preCode":"    private void readRulesConfig(Rules rules) {\n        Map rulesData = (Map) yamlData.get(\"rules\");\n        if (rulesData == null) {\n            return;\n        }\n        rules.setRules(new ArrayList<>());\n        rulesData.forEach((k, v) -> {\n            if (((String) k).endsWith(\"_rule\")) {\n                AlarmRule alarmRule = new AlarmRule();\n                alarmRule.setAlarmRuleName((String) k);\n                Map settings = (Map) v;\n                Object metricsName = settings.get(\"metrics-name\");\n                if (metricsName == null) {\n                    throw new IllegalArgumentException(\"metrics-name can't be null\");\n                }\n\n                alarmRule.setMetricsName((String) metricsName);\n                alarmRule.setIncludeNames((ArrayList) settings.getOrDefault(\"include-names\", new ArrayList(0)));\n                alarmRule.setExcludeNames((ArrayList) settings.getOrDefault(\"exclude-names\", new ArrayList(0)));\n                alarmRule.setIncludeNamesRegex((String) settings.getOrDefault(\"include-names-regex\", \"\"));\n                alarmRule.setExcludeNamesRegex((String) settings.getOrDefault(\"exclude-names-regex\", \"\"));\n                alarmRule.setIncludeLabels(\n                        (ArrayList) settings.getOrDefault(\"include-labels\", new ArrayList(0)));\n                alarmRule.setExcludeLabels(\n                        (ArrayList) settings.getOrDefault(\"exclude-labels\", new ArrayList(0)));\n                alarmRule.setIncludeLabelsRegex((String) settings.getOrDefault(\"include-labels-regex\", \"\"));\n                alarmRule.setExcludeLabelsRegex((String) settings.getOrDefault(\"exclude-labels-regex\", \"\"));\n                alarmRule.setThreshold(settings.get(\"threshold\").toString());\n                alarmRule.setOp((String) settings.get(\"op\"));\n                alarmRule.setPeriod((Integer) settings.getOrDefault(\"period\", 1));\n                alarmRule.setCount((Integer) settings.getOrDefault(\"count\", 1));\n                \r\n                alarmRule.setSilencePeriod((Integer) settings.getOrDefault(\"silence-period\", alarmRule.getPeriod()));\n                alarmRule.setOnlyAsCondition((Boolean) settings.getOrDefault(\"only-as-condition\", false));\n                alarmRule.setMessage(\n                        (String) settings.getOrDefault(\"message\", \"Alarm caused by Rule \" + alarmRule\n                                .getAlarmRuleName()));\n\n                rules.getRules().add(alarmRule);\n            }\n        });\n    }\n","realPath":"oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RulesReader.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2020-10-03 23:26:29","commitOrder":1,"curCode":"    private void readCompositeRuleConfig(Rules rules) {\n        Map compositeRulesData = (Map) yamlData.get(\"composite-rules\");\n        if (compositeRulesData == null) {\n            return;\n        }\n        compositeRulesData.forEach((k, v) -> {\n            String ruleName = (String) k;\n            if (ruleName.endsWith(\"_rule\")) {\n                Map settings = (Map) v;\n                CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule();\n                compositeAlarmRule.setAlarmRuleName(ruleName);\n                String expression = (String) settings.get(\"expression\");\n                if (expression == null) {\n                    throw new IllegalArgumentException(\"expression can't be null\");\n                }\n                compositeAlarmRule.setExpression(expression);\n                compositeAlarmRule.setMessage(\n                        (String) settings.getOrDefault(\"message\", \"Alarm caused by Rule \" + ruleName));\n                rules.getCompositeRules().add(compositeAlarmRule);\n            }\n        });\n    }\n","date":"2020-10-03 23:26:29","endLine":205,"groupId":"4780","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"readCompositeRuleConfig","params":"(Rulesrules)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/92/90f2fa702adbe3a32d47b85ad6227afc38fd7d.src","preCode":"    private void readCompositeRuleConfig(Rules rules) {\n        Map compositeRulesData = (Map) yamlData.get(\"composite-rules\");\n        if (compositeRulesData == null) {\n            return;\n        }\n        compositeRulesData.forEach((k, v) -> {\n            String ruleName = (String) k;\n            if (ruleName.endsWith(\"_rule\")) {\n                Map settings = (Map) v;\n                CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule();\n                compositeAlarmRule.setAlarmRuleName(ruleName);\n                String expression = (String) settings.get(\"expression\");\n                if (expression == null) {\n                    throw new IllegalArgumentException(\"expression can't be null\");\n                }\n                compositeAlarmRule.setExpression(expression);\n                compositeAlarmRule.setMessage(\n                        (String) settings.getOrDefault(\"message\", \"Alarm caused by Rule \" + ruleName));\n                rules.getCompositeRules().add(compositeAlarmRule);\n            }\n        });\n    }\n","realPath":"oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RulesReader.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"}],"commitId":"2c729b5d69b095962e7be5b8570eedc374659ec5","commitMessage":"@@@ Support group concept in the alarm core (#5615)\n\n","date":"2020-10-03 23:26:29","modifiedFileCount":"9","status":"B","submitter":"xbkaishui"},{"authorTime":"2021-04-25 17:22:43","codes":[{"authorDate":"2021-04-25 17:22:43","commitOrder":2,"curCode":"    private void readRulesConfig(Rules rules) {\n        Map rulesData = (Map) yamlData.get(\"rules\");\n        if (rulesData == null) {\n            return;\n        }\n        rules.setRules(new ArrayList<>());\n        rulesData.forEach((k, v) -> {\n            if (((String) k).endsWith(\"_rule\")) {\n                AlarmRule alarmRule = new AlarmRule();\n                alarmRule.setAlarmRuleName((String) k);\n                Map settings = (Map) v;\n                Object metricsName = settings.get(\"metrics-name\");\n                if (metricsName == null) {\n                    throw new IllegalArgumentException(\"metrics-name can't be null\");\n                }\n\n                alarmRule.setMetricsName((String) metricsName);\n                alarmRule.setIncludeNames((ArrayList) settings.getOrDefault(\"include-names\", new ArrayList(0)));\n                alarmRule.setExcludeNames((ArrayList) settings.getOrDefault(\"exclude-names\", new ArrayList(0)));\n                alarmRule.setIncludeNamesRegex((String) settings.getOrDefault(\"include-names-regex\", \"\"));\n                alarmRule.setExcludeNamesRegex((String) settings.getOrDefault(\"exclude-names-regex\", \"\"));\n                alarmRule.setIncludeLabels(\n                        (ArrayList) settings.getOrDefault(\"include-labels\", new ArrayList(0)));\n                alarmRule.setExcludeLabels(\n                        (ArrayList) settings.getOrDefault(\"exclude-labels\", new ArrayList(0)));\n                alarmRule.setIncludeLabelsRegex((String) settings.getOrDefault(\"include-labels-regex\", \"\"));\n                alarmRule.setExcludeLabelsRegex((String) settings.getOrDefault(\"exclude-labels-regex\", \"\"));\n                alarmRule.setThreshold(settings.get(\"threshold\").toString());\n                alarmRule.setOp((String) settings.get(\"op\"));\n                alarmRule.setPeriod((Integer) settings.getOrDefault(\"period\", 1));\n                alarmRule.setCount((Integer) settings.getOrDefault(\"count\", 1));\n                \r\n                alarmRule.setSilencePeriod((Integer) settings.getOrDefault(\"silence-period\", alarmRule.getPeriod()));\n                alarmRule.setOnlyAsCondition((Boolean) settings.getOrDefault(\"only-as-condition\", false));\n                alarmRule.setMessage(\n                        (String) settings.getOrDefault(\"message\", \"Alarm caused by Rule \" + alarmRule\n                                .getAlarmRuleName()));\n                alarmRule.setTags((Map) settings.getOrDefault(\"tags\", new HashMap<String, String>()));\n                rules.getRules().add(alarmRule);\n            }\n        });\n    }\n","date":"2021-04-25 17:22:43","endLine":115,"groupId":"10576","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"readRulesConfig","params":"(Rulesrules)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/2b/f138a0af1767e8622b9b6b73731fdefa7ee8c2.src","preCode":"    private void readRulesConfig(Rules rules) {\n        Map rulesData = (Map) yamlData.get(\"rules\");\n        if (rulesData == null) {\n            return;\n        }\n        rules.setRules(new ArrayList<>());\n        rulesData.forEach((k, v) -> {\n            if (((String) k).endsWith(\"_rule\")) {\n                AlarmRule alarmRule = new AlarmRule();\n                alarmRule.setAlarmRuleName((String) k);\n                Map settings = (Map) v;\n                Object metricsName = settings.get(\"metrics-name\");\n                if (metricsName == null) {\n                    throw new IllegalArgumentException(\"metrics-name can't be null\");\n                }\n\n                alarmRule.setMetricsName((String) metricsName);\n                alarmRule.setIncludeNames((ArrayList) settings.getOrDefault(\"include-names\", new ArrayList(0)));\n                alarmRule.setExcludeNames((ArrayList) settings.getOrDefault(\"exclude-names\", new ArrayList(0)));\n                alarmRule.setIncludeNamesRegex((String) settings.getOrDefault(\"include-names-regex\", \"\"));\n                alarmRule.setExcludeNamesRegex((String) settings.getOrDefault(\"exclude-names-regex\", \"\"));\n                alarmRule.setIncludeLabels(\n                        (ArrayList) settings.getOrDefault(\"include-labels\", new ArrayList(0)));\n                alarmRule.setExcludeLabels(\n                        (ArrayList) settings.getOrDefault(\"exclude-labels\", new ArrayList(0)));\n                alarmRule.setIncludeLabelsRegex((String) settings.getOrDefault(\"include-labels-regex\", \"\"));\n                alarmRule.setExcludeLabelsRegex((String) settings.getOrDefault(\"exclude-labels-regex\", \"\"));\n                alarmRule.setThreshold(settings.get(\"threshold\").toString());\n                alarmRule.setOp((String) settings.get(\"op\"));\n                alarmRule.setPeriod((Integer) settings.getOrDefault(\"period\", 1));\n                alarmRule.setCount((Integer) settings.getOrDefault(\"count\", 1));\n                \r\n                alarmRule.setSilencePeriod((Integer) settings.getOrDefault(\"silence-period\", alarmRule.getPeriod()));\n                alarmRule.setOnlyAsCondition((Boolean) settings.getOrDefault(\"only-as-condition\", false));\n                alarmRule.setMessage(\n                        (String) settings.getOrDefault(\"message\", \"Alarm caused by Rule \" + alarmRule\n                                .getAlarmRuleName()));\n\n                rules.getRules().add(alarmRule);\n            }\n        });\n    }\n","realPath":"oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RulesReader.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2021-04-25 17:22:43","commitOrder":2,"curCode":"    private void readCompositeRuleConfig(Rules rules) {\n        Map compositeRulesData = (Map) yamlData.get(\"composite-rules\");\n        if (compositeRulesData == null) {\n            return;\n        }\n        compositeRulesData.forEach((k, v) -> {\n            String ruleName = (String) k;\n            if (ruleName.endsWith(\"_rule\")) {\n                Map settings = (Map) v;\n                CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule();\n                compositeAlarmRule.setAlarmRuleName(ruleName);\n                String expression = (String) settings.get(\"expression\");\n                if (expression == null) {\n                    throw new IllegalArgumentException(\"expression can't be null\");\n                }\n                compositeAlarmRule.setExpression(expression);\n                compositeAlarmRule.setMessage(\n                        (String) settings.getOrDefault(\"message\", \"Alarm caused by Rule \" + ruleName));\n                compositeAlarmRule.setTags((Map) settings.getOrDefault(\"tags\", new HashMap<String, String>(0)));\n                rules.getCompositeRules().add(compositeAlarmRule);\n            }\n        });\n    }\n","date":"2021-04-25 17:22:43","endLine":211,"groupId":"10576","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"readCompositeRuleConfig","params":"(Rulesrules)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/2b/f138a0af1767e8622b9b6b73731fdefa7ee8c2.src","preCode":"    private void readCompositeRuleConfig(Rules rules) {\n        Map compositeRulesData = (Map) yamlData.get(\"composite-rules\");\n        if (compositeRulesData == null) {\n            return;\n        }\n        compositeRulesData.forEach((k, v) -> {\n            String ruleName = (String) k;\n            if (ruleName.endsWith(\"_rule\")) {\n                Map settings = (Map) v;\n                CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule();\n                compositeAlarmRule.setAlarmRuleName(ruleName);\n                String expression = (String) settings.get(\"expression\");\n                if (expression == null) {\n                    throw new IllegalArgumentException(\"expression can't be null\");\n                }\n                compositeAlarmRule.setExpression(expression);\n                compositeAlarmRule.setMessage(\n                        (String) settings.getOrDefault(\"message\", \"Alarm caused by Rule \" + ruleName));\n                rules.getCompositeRules().add(compositeAlarmRule);\n            }\n        });\n    }\n","realPath":"oap-server/server-alarm-plugin/src/main/java/org/apache/skywalking/oap/server/core/alarm/provider/RulesReader.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"}],"commitId":"7a533313676579da1321c0177c10fc237a052cbe","commitMessage":"@@@Support alarm tags (#6820)\n\n","date":"2021-04-25 17:22:43","modifiedFileCount":"42","status":"M","submitter":"liqiangz"}]
