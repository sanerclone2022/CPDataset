[{"authorTime":"2020-07-30 11:55:49","codes":[{"authorDate":"2020-07-30 11:55:49","commitOrder":1,"curCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n            }\n        };\n        handler = new JVMMetricsHandler(manager, config);\n    }\n","date":"2020-07-30 11:55:49","endLine":84,"groupId":"2401","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/4e/a6f7380c41389a76484e7cde6cded8445c7006.src","preCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n            }\n        };\n        handler = new JVMMetricsHandler(manager, config);\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/test/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/JVMMetricsHandlerTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"},{"authorDate":"2020-07-30 11:55:49","commitOrder":1,"curCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n            }\n        };\n        handler = new ServiceManagementHandler(manager, config);\n    }\n","date":"2020-07-30 11:55:49","endLine":80,"groupId":"2401","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c2/3b00457c9ab233830af812193b13b5cbcf4f36.src","preCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n            }\n        };\n        handler = new ServiceManagementHandler(manager, config);\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/test/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/ServiceManagementHandlerTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"}],"commitId":"f9257f5274f6a55e8bf8424444707aecf7a1f2c1","commitMessage":"@@@Provide kafka as collector/reporter (#4847)\n\n","date":"2020-07-30 11:55:49","modifiedFileCount":"24","status":"B","submitter":"Daming"},{"authorTime":"2020-07-30 11:55:49","codes":[{"authorDate":"2021-06-02 12:56:00","commitOrder":2,"curCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n                register(TelemetryModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(MetricsCreator.class, new MetricsCreatorNoop());\n                    }\n                });\n            }\n        };\n        handler = new JVMMetricsHandler(manager, config);\n    }\n","date":"2021-06-02 12:56:00","endLine":97,"groupId":"2401","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/8a/c4824f25f3b832ebe18ff4e2d24c1cd58aa2ae.src","preCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n            }\n        };\n        handler = new JVMMetricsHandler(manager, config);\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/test/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/JVMMetricsHandlerTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2020-07-30 11:55:49","commitOrder":2,"curCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n            }\n        };\n        handler = new ServiceManagementHandler(manager, config);\n    }\n","date":"2020-07-30 11:55:49","endLine":80,"groupId":"2401","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c2/3b00457c9ab233830af812193b13b5cbcf4f36.src","preCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n            }\n        };\n        handler = new ServiceManagementHandler(manager, config);\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/test/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/ServiceManagementHandlerTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"}],"commitId":"38c182e4c00902e5a6cda49c557f8fdbccab011c","commitMessage":"@@@Kafka transporter code polish (#7032)\n\n","date":"2021-06-02 12:56:00","modifiedFileCount":"10","status":"M","submitter":"Daming"},{"authorTime":"2020-07-30 11:55:49","codes":[{"authorDate":"2021-06-11 22:21:10","commitOrder":3,"curCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                    }\n                });\n                register(TelemetryModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(MetricsCreator.class, new MetricsCreatorNoop());\n                    }\n                });\n            }\n        };\n        handler = new JVMMetricsHandler(manager, config, new ArrayList<>());\n    }\n","date":"2021-06-11 22:21:10","endLine":74,"groupId":"0","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/4d/56a56c606f1f317cc035e187ec22ceca994005.src","preCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n                register(TelemetryModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(MetricsCreator.class, new MetricsCreatorNoop());\n                    }\n                });\n            }\n        };\n        handler = new JVMMetricsHandler(manager, config);\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/test/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/JVMMetricsHandlerTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2020-07-30 11:55:49","commitOrder":3,"curCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n            }\n        };\n        handler = new ServiceManagementHandler(manager, config);\n    }\n","date":"2020-07-30 11:55:49","endLine":80,"groupId":"2401","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c2/3b00457c9ab233830af812193b13b5cbcf4f36.src","preCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n            }\n        };\n        handler = new ServiceManagementHandler(manager, config);\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/test/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/ServiceManagementHandlerTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"}],"commitId":"7a3355f956f6fdcbb8f01ad9cd3ea5de1d107c14","commitMessage":"@@@Use MAL to calculate JVM metrics.  remove OAL dependency. (#7091)\n\n","date":"2021-06-11 22:21:10","modifiedFileCount":"8","status":"M","submitter":"liqiangz"},{"authorTime":"2020-07-30 11:55:49","codes":[{"authorDate":"2021-06-28 21:05:28","commitOrder":4,"curCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n                register(TelemetryModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(MetricsCreator.class, new MetricsCreatorNoop());\n                    }\n                });\n            }\n        };\n        handler = new JVMMetricsHandler(manager, config);\n    }\n","date":"2021-06-28 21:05:28","endLine":97,"groupId":"10579","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/d2/1024a5b4bb77e4b3adf996d6df5432f40a2f99.src","preCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                    }\n                });\n                register(TelemetryModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(MetricsCreator.class, new MetricsCreatorNoop());\n                    }\n                });\n            }\n        };\n        handler = new JVMMetricsHandler(manager, config, new ArrayList<>());\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/test/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/JVMMetricsHandlerTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2020-07-30 11:55:49","commitOrder":4,"curCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n            }\n        };\n        handler = new ServiceManagementHandler(manager, config);\n    }\n","date":"2020-07-30 11:55:49","endLine":80,"groupId":"10579","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setup","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/c2/3b00457c9ab233830af812193b13b5cbcf4f36.src","preCode":"    public void setup() {\n        manager = new MockModuleManager() {\n            @Override\n            protected void init() {\n                register(CoreModule.NAME, () -> new MockModuleProvider() {\n                    @Override\n                    protected void register() {\n                        registerServiceImplementation(NamingControl.class, new NamingControl(\n                            512, 512, 512, new EndpointNameGrouping()));\n                        registerServiceImplementation(SourceReceiver.class, SOURCE_RECEIVER);\n                    }\n                });\n            }\n        };\n        handler = new ServiceManagementHandler(manager, config);\n    }\n","realPath":"oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/test/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/provider/handler/ServiceManagementHandlerTest.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"}],"commitId":"d63f3ffcc1788436cf65b6134d44d8e4b4a0ec78","commitMessage":"@@@revert #7091 (#7189)\n\n","date":"2021-06-28 21:05:28","modifiedFileCount":"6","status":"M","submitter":"liqiangz"}]
