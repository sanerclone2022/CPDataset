[{"authorTime":"2020-04-21 15:39:18","codes":[{"authorDate":"2020-04-24 23:33:13","commitOrder":2,"curCode":"    public String id() {\n        switch (scopeType) {\n            case SERVICE:\n                \r\n                return IDManager.ServiceID.buildId(serviceName, true);\n            case SERVICE_INSTANCE:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, true), instanceName);\n            case ENDPOINT:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, true), endpointName);\n            default:\n                throw new UnexpectedException(\"Unexpected scope type of entity \" + this.toString());\n        }\n    }\n","date":"2020-04-24 23:33:13","endLine":60,"groupId":"4919","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"id","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a0/06dbe6d2e17ed74399543684123db28364b77d.src","preCode":"    public String id() {\n        switch (scopeType) {\n            case SERVICE:\n                \r\n                return IDManager.ServiceID.buildId(serviceName, true);\n            case SERVICE_INSTANCE:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, true), instanceName);\n            case ENDPOINT:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, true), endpointName);\n            default:\n                throw new UnexpectedException(\"Unexpected scope type of entity \" + this.toString());\n        }\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/meter/MeterEntity.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2020-04-21 15:39:18","commitOrder":2,"curCode":"    public String buildId() {\n        switch (scope) {\n            case All:\n                \r\n                return null;\n            case Service:\n                return IDManager.ServiceID.buildId(serviceName, isNormal);\n            case ServiceInstance:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, isNormal), serviceInstanceName);\n            case Endpoint:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, isNormal), endpointName);\n            case ServiceRelation:\n                return IDManager.ServiceID.buildRelationId(\n                    new IDManager.ServiceID.ServiceRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, isNormal),\n                        IDManager.ServiceID.buildId(destServiceName, destIsNormal)\n                    )\n                );\n            case ServiceInstanceRelation:\n                return IDManager.ServiceInstanceID.buildRelationId(\n                    new IDManager.ServiceInstanceID.ServiceInstanceRelationDefine(\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(serviceName, isNormal), serviceInstanceName),\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(destServiceName, destIsNormal), destServiceInstanceName)\n                    )\n                );\n            case EndpointRelation:\n                return IDManager.EndpointID.buildRelationId(\n                    new IDManager.EndpointID.EndpointRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, isNormal),\n                        endpointName,\n                        IDManager.ServiceID.buildId(destServiceName, destIsNormal),\n                        destEndpointName\n                    )\n                );\n            default:\n                return null;\n        }\n    }\n","date":"2020-04-21 15:39:18","endLine":111,"groupId":"3629","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/6e/9f7322f1e6a4fb42d60fd41bcb0c7d3361eac4.src","preCode":"    public String buildId() {\n        switch (scope) {\n            case All:\n                \r\n                return null;\n            case Service:\n                return IDManager.ServiceID.buildId(serviceName, isNormal);\n            case ServiceInstance:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, isNormal), serviceInstanceName);\n            case Endpoint:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, isNormal), endpointName);\n            case ServiceRelation:\n                return IDManager.ServiceID.buildRelationId(\n                    new IDManager.ServiceID.ServiceRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, isNormal),\n                        IDManager.ServiceID.buildId(destServiceName, destIsNormal)\n                    )\n                );\n            case ServiceInstanceRelation:\n                return IDManager.ServiceInstanceID.buildRelationId(\n                    new IDManager.ServiceInstanceID.ServiceInstanceRelationDefine(\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(serviceName, isNormal), serviceInstanceName),\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(destServiceName, destIsNormal), destServiceInstanceName)\n                    )\n                );\n            case EndpointRelation:\n                return IDManager.EndpointID.buildRelationId(\n                    new IDManager.EndpointID.EndpointRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, isNormal),\n                        endpointName,\n                        IDManager.ServiceID.buildId(destServiceName, destIsNormal),\n                        destEndpointName\n                    )\n                );\n            default:\n                return null;\n        }\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/query/input/Entity.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"NB"}],"commitId":"b635e254c4b327aca22469d0551c9b3a63d991b9","commitMessage":"@@@Provide Meter(metrics) system  (#4694)\n\nHere are the basic and simple usages of the MeterSystem APIs.\n\n## Meter Creation\nNew meter could be created based on metrics name.  function.  scope and data type. \n1. Metrics name is still the storage entity name.\n2. Functions are every similar with the OAL function.  just accepting different input.\n```java\nfinal MeterSystem meterSystem = MeterSystem.meterSystem(getManager());\nmeterSystem.create(\"test_long_metrics\".  \"avg\".  ScopeType.SERVICE.  Long.class);\n```\nNOTICE.  this creation should only be called in the `module#prepare` stage.  otherwise.  `Can't create new metrics anymore` exception will be raised after the **CORE** module `start` stage finished. You may find out.  there is a chance `create` could be executed successfully in your own `module#start` stage.  but it it just because of the sequence of provider loaded by the class loader.  **no guarantee.  so please don't do that**.\n\n## Runtime Calculation\n`AcceptableValue` is the object created at the runtime to accept new metrics value.\n```java\n         final MeterSystem service = getManager().find(CoreModule.NAME).provider().getService(MeterSystem.class);\n        Executors.newSingleThreadScheduledExecutor().scheduleAtFixedRate(new Runnable() {\n            @Override\n            public void run() {\n                final AcceptableValue<Long> value = service.buildMetrics(\"test_long_metrics\".  Long.class);\n                value.accept(MeterEntity.newService(\"abc\").  5L);\n                value.setTimeBucket(TimeBucket.getMinuteTimeBucket(System.currentTimeMillis()));\n                service.doStreamingCalculation(value);\n            }\n        }.  2.  2.  TimeUnit.SECONDS);\n```\n\n## Meter Functions\nRight now.  only `avg` function has been implemented. I submit this PR as soon as possible to get your feedback. I will add more functions.\n\n## Notice\n1. Make slow trace query available in the sampled record. Logically.  they are the same thing. The UI doesn't need to concern about the trace as a special case.\n2. Endpoint dependency will be removed from the dashboard. Because no query available for it. We will provide a new page for that in 8.1\n3. Comparison page will be removed due to dashboard is powerful enough to replace it.","date":"2020-04-24 23:33:13","modifiedFileCount":"10","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2020-04-27 14:38:38","codes":[{"authorDate":"2020-04-24 23:33:13","commitOrder":3,"curCode":"    public String id() {\n        switch (scopeType) {\n            case SERVICE:\n                \r\n                return IDManager.ServiceID.buildId(serviceName, true);\n            case SERVICE_INSTANCE:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, true), instanceName);\n            case ENDPOINT:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, true), endpointName);\n            default:\n                throw new UnexpectedException(\"Unexpected scope type of entity \" + this.toString());\n        }\n    }\n","date":"2020-04-24 23:33:13","endLine":60,"groupId":"4919","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"id","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a0/06dbe6d2e17ed74399543684123db28364b77d.src","preCode":"    public String id() {\n        switch (scopeType) {\n            case SERVICE:\n                \r\n                return IDManager.ServiceID.buildId(serviceName, true);\n            case SERVICE_INSTANCE:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, true), instanceName);\n            case ENDPOINT:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, true), endpointName);\n            default:\n                throw new UnexpectedException(\"Unexpected scope type of entity \" + this.toString());\n        }\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/meter/MeterEntity.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2020-04-27 14:38:38","commitOrder":3,"curCode":"    public String buildId() {\n        switch (scope) {\n            case All:\n                \r\n                return null;\n            case Service:\n                return IDManager.ServiceID.buildId(serviceName, normal);\n            case ServiceInstance:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, normal), serviceInstanceName);\n            case Endpoint:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, normal), endpointName);\n            case ServiceRelation:\n                return IDManager.ServiceID.buildRelationId(\n                    new IDManager.ServiceID.ServiceRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, normal),\n                        IDManager.ServiceID.buildId(destServiceName, destNormal)\n                    )\n                );\n            case ServiceInstanceRelation:\n                return IDManager.ServiceInstanceID.buildRelationId(\n                    new IDManager.ServiceInstanceID.ServiceInstanceRelationDefine(\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(serviceName, normal), serviceInstanceName),\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(destServiceName, destNormal), destServiceInstanceName)\n                    )\n                );\n            case EndpointRelation:\n                return IDManager.EndpointID.buildRelationId(\n                    new IDManager.EndpointID.EndpointRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, normal),\n                        endpointName,\n                        IDManager.ServiceID.buildId(destServiceName, destNormal),\n                        destEndpointName\n                    )\n                );\n            default:\n                return null;\n        }\n    }\n","date":"2020-04-27 14:38:38","endLine":111,"groupId":"3629","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a7/81161563a12d7abb97b09cee9263203f0faf1e.src","preCode":"    public String buildId() {\n        switch (scope) {\n            case All:\n                \r\n                return null;\n            case Service:\n                return IDManager.ServiceID.buildId(serviceName, isNormal);\n            case ServiceInstance:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, isNormal), serviceInstanceName);\n            case Endpoint:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, isNormal), endpointName);\n            case ServiceRelation:\n                return IDManager.ServiceID.buildRelationId(\n                    new IDManager.ServiceID.ServiceRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, isNormal),\n                        IDManager.ServiceID.buildId(destServiceName, destIsNormal)\n                    )\n                );\n            case ServiceInstanceRelation:\n                return IDManager.ServiceInstanceID.buildRelationId(\n                    new IDManager.ServiceInstanceID.ServiceInstanceRelationDefine(\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(serviceName, isNormal), serviceInstanceName),\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(destServiceName, destIsNormal), destServiceInstanceName)\n                    )\n                );\n            case EndpointRelation:\n                return IDManager.EndpointID.buildRelationId(\n                    new IDManager.EndpointID.EndpointRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, isNormal),\n                        endpointName,\n                        IDManager.ServiceID.buildId(destServiceName, destIsNormal),\n                        destEndpointName\n                    )\n                );\n            default:\n                return null;\n        }\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/query/input/Entity.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"7c84e77bf22c0b6975d12aecfc9316f3cc6d815a","commitMessage":"@@@Support histogram function in Meter system. (#4719)\n\n* Support histogram function in Meter system.\n* Add histogram in the document.\n* Support infinite-","date":"2020-04-27 14:38:38","modifiedFileCount":"13","status":"M","submitter":"?? Wu Sheng"},{"authorTime":"2020-04-27 14:38:38","codes":[{"authorDate":"2021-08-06 17:09:13","commitOrder":4,"curCode":"    public String id() {\n        switch (scopeType) {\n            case SERVICE:\n                \r\n                return IDManager.ServiceID.buildId(serviceName, true);\n            case SERVICE_INSTANCE:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, true), instanceName);\n            case ENDPOINT:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, true), endpointName);\n            case SERVICE_RELATION:\n                return IDManager.ServiceID.buildRelationId(new IDManager.ServiceID.ServiceRelationDefine(\n                    sourceServiceId(),\n                    destServiceId()\n                ));\n            default:\n                throw new UnexpectedException(\"Unexpected scope type of entity \" + this.toString());\n        }\n    }\n","date":"2021-08-06 17:09:13","endLine":65,"groupId":"10357","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"id","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/d2/d59582747a4663764280419bc81eb8fad7c334.src","preCode":"    public String id() {\n        switch (scopeType) {\n            case SERVICE:\n                \r\n                return IDManager.ServiceID.buildId(serviceName, true);\n            case SERVICE_INSTANCE:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, true), instanceName);\n            case ENDPOINT:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, true), endpointName);\n            default:\n                throw new UnexpectedException(\"Unexpected scope type of entity \" + this.toString());\n        }\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/meter/MeterEntity.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2020-04-27 14:38:38","commitOrder":4,"curCode":"    public String buildId() {\n        switch (scope) {\n            case All:\n                \r\n                return null;\n            case Service:\n                return IDManager.ServiceID.buildId(serviceName, normal);\n            case ServiceInstance:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, normal), serviceInstanceName);\n            case Endpoint:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, normal), endpointName);\n            case ServiceRelation:\n                return IDManager.ServiceID.buildRelationId(\n                    new IDManager.ServiceID.ServiceRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, normal),\n                        IDManager.ServiceID.buildId(destServiceName, destNormal)\n                    )\n                );\n            case ServiceInstanceRelation:\n                return IDManager.ServiceInstanceID.buildRelationId(\n                    new IDManager.ServiceInstanceID.ServiceInstanceRelationDefine(\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(serviceName, normal), serviceInstanceName),\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(destServiceName, destNormal), destServiceInstanceName)\n                    )\n                );\n            case EndpointRelation:\n                return IDManager.EndpointID.buildRelationId(\n                    new IDManager.EndpointID.EndpointRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, normal),\n                        endpointName,\n                        IDManager.ServiceID.buildId(destServiceName, destNormal),\n                        destEndpointName\n                    )\n                );\n            default:\n                return null;\n        }\n    }\n","date":"2020-04-27 14:38:38","endLine":111,"groupId":"10357","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"buildId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/a7/81161563a12d7abb97b09cee9263203f0faf1e.src","preCode":"    public String buildId() {\n        switch (scope) {\n            case All:\n                \r\n                return null;\n            case Service:\n                return IDManager.ServiceID.buildId(serviceName, normal);\n            case ServiceInstance:\n                return IDManager.ServiceInstanceID.buildId(\n                    IDManager.ServiceID.buildId(serviceName, normal), serviceInstanceName);\n            case Endpoint:\n                return IDManager.EndpointID.buildId(IDManager.ServiceID.buildId(serviceName, normal), endpointName);\n            case ServiceRelation:\n                return IDManager.ServiceID.buildRelationId(\n                    new IDManager.ServiceID.ServiceRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, normal),\n                        IDManager.ServiceID.buildId(destServiceName, destNormal)\n                    )\n                );\n            case ServiceInstanceRelation:\n                return IDManager.ServiceInstanceID.buildRelationId(\n                    new IDManager.ServiceInstanceID.ServiceInstanceRelationDefine(\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(serviceName, normal), serviceInstanceName),\n                        IDManager.ServiceInstanceID.buildId(\n                            IDManager.ServiceID.buildId(destServiceName, destNormal), destServiceInstanceName)\n                    )\n                );\n            case EndpointRelation:\n                return IDManager.EndpointID.buildRelationId(\n                    new IDManager.EndpointID.EndpointRelationDefine(\n                        IDManager.ServiceID.buildId(serviceName, normal),\n                        endpointName,\n                        IDManager.ServiceID.buildId(destServiceName, destNormal),\n                        destEndpointName\n                    )\n                );\n            default:\n                return null;\n        }\n    }\n","realPath":"oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/query/input/Entity.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"N"}],"commitId":"4e7d80fb88a603e076f6c53ed9817d81dc55da3d","commitMessage":"@@@Support Metric level function `serviceRelation` in `MAL` and binding  envoy metrics into the topology. (#7399)\n\n* Support Metric level function `serviceRelation` in `MAL`.\n* Support envoy metrics binding into the topology.\n* add istio args\n* remove istio 1.7\n\nCo-authored-by: ?? Wu Sheng <wu.sheng@foxmail.com>\nCo-authored-by: Jared Tan <jian.tan@daocloud.io>\nCo-authored-by: Zhenxu <kezhenxu94@apache.org>","date":"2021-08-06 17:09:13","modifiedFileCount":"14","status":"M","submitter":"wankai123"}]
