[{"authorTime":"2021-05-19 14:14:48","codes":[{"authorDate":"2021-05-19 14:14:48","commitOrder":2,"curCode":"    protected SearchSourceBuilder buildQuery(final List<EventQueryCondition> conditionList) {\n        final SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource();\n        BoolQueryBuilder linkShouldBuilder = QueryBuilders.boolQuery();\n        sourceBuilder.query(linkShouldBuilder);\n        conditionList.forEach(condition -> {\n            final BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n            final List<QueryBuilder> mustQueryList = boolQueryBuilder.must();\n            linkShouldBuilder.should(boolQueryBuilder);\n            buildMustQueryListByCondition(condition, mustQueryList);\n        });\n        EventQueryCondition condition = conditionList.get(0);\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        sourceBuilder.sort(Event.START_TIME, Order.DES.equals(queryOrder) ? SortOrder.DESC : SortOrder.ASC);\n        sourceBuilder.size(condition.getSize());\n        return sourceBuilder;\n    }\n","date":"2021-05-19 14:14:48","endLine":134,"groupId":"1350","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"buildQuery","params":"(finalList<EventQueryCondition>conditionList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/74/9037b477ceebeedef46c8894a39c9e7cef6839.src","preCode":"    protected SearchSourceBuilder buildQuery(final List<EventQueryCondition> conditionList) {\n        final SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource();\n        BoolQueryBuilder linkShouldBuilder = QueryBuilders.boolQuery();\n        sourceBuilder.query(linkShouldBuilder);\n        conditionList.forEach(condition -> {\n            final BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n            final List<QueryBuilder> mustQueryList = boolQueryBuilder.must();\n            linkShouldBuilder.should(boolQueryBuilder);\n            buildMustQueryListByCondition(condition, mustQueryList);\n        });\n        EventQueryCondition condition = conditionList.get(0);\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        sourceBuilder.sort(Event.START_TIME, Order.DES.equals(queryOrder) ? SortOrder.DESC : SortOrder.ASC);\n        sourceBuilder.size(condition.getSize());\n        return sourceBuilder;\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/query/ESEventQueryDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"B"},{"authorDate":"2021-05-19 14:14:48","commitOrder":2,"curCode":"    protected SearchSourceBuilder buildQuery(final EventQueryCondition condition) {\n        final SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource();\n        final BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n        sourceBuilder.query(boolQueryBuilder);\n\n        final List<QueryBuilder> mustQueryList = boolQueryBuilder.must();\n\n        buildMustQueryListByCondition(condition, mustQueryList);\n\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        sourceBuilder.sort(Event.START_TIME, Order.DES.equals(queryOrder) ? SortOrder.DESC : SortOrder.ASC);\n        sourceBuilder.size(condition.getSize());\n\n        return sourceBuilder;\n    }\n","date":"2021-05-19 14:14:48","endLine":150,"groupId":"1351","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildQuery","params":"(finalEventQueryConditioncondition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/74/9037b477ceebeedef46c8894a39c9e7cef6839.src","preCode":"    protected SearchSourceBuilder buildQuery(final EventQueryCondition condition) {\n        final SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource();\n        final BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n        sourceBuilder.query(boolQueryBuilder);\n\n        final List<QueryBuilder> mustQueryList = boolQueryBuilder.must();\n\n        buildMustQueryListByCondition(condition, mustQueryList);\n\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        sourceBuilder.sort(Event.START_TIME, Order.DES.equals(queryOrder) ? SortOrder.DESC : SortOrder.ASC);\n        sourceBuilder.size(condition.getSize());\n\n        return sourceBuilder;\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/query/ESEventQueryDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"MB"}],"commitId":"bb590daba99e25e78c98a9601fae46e63fc5efa6","commitMessage":"@@@Include event(s) to alarms. (#6888)\n\nCo-authored-by: kezhenxu94 <kezhenxu94@apache.org>\nCo-authored-by: ?? Wu Sheng <wu.sheng@foxmail.com>","date":"2021-05-19 14:14:48","modifiedFileCount":"19","status":"M","submitter":"chen~"},{"authorTime":"2021-07-09 23:04:50","codes":[{"authorDate":"2021-07-09 23:04:50","commitOrder":3,"curCode":"    protected SearchSourceBuilder buildQuery(final List<EventQueryCondition> conditionList) {\n        final SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource();\n        BoolQueryBuilder linkShouldBuilder = QueryBuilders.boolQuery();\n        sourceBuilder.query(linkShouldBuilder);\n        conditionList.forEach(condition -> {\n            final BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n            final List<QueryBuilder> mustQueryList = boolQueryBuilder.must();\n            linkShouldBuilder.should(boolQueryBuilder);\n            buildMustQueryListByCondition(condition, mustQueryList);\n        });\n        EventQueryCondition condition = conditionList.get(0);\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        sourceBuilder.sort(Event.START_TIME, Order.DES.equals(queryOrder) ? SortOrder.DESC : SortOrder.ASC);\n\n        final PaginationUtils.Page page = PaginationUtils.INSTANCE.exchange(condition.getPaging());\n        sourceBuilder.from(page.getFrom());\n        sourceBuilder.size(page.getLimit());\n        return sourceBuilder;\n    }\n","date":"2021-07-09 23:04:50","endLine":138,"groupId":"1350","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"buildQuery","params":"(finalList<EventQueryCondition>conditionList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/fb/7c865a202c95c75db8e43bca1ea83f5b458e95.src","preCode":"    protected SearchSourceBuilder buildQuery(final List<EventQueryCondition> conditionList) {\n        final SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource();\n        BoolQueryBuilder linkShouldBuilder = QueryBuilders.boolQuery();\n        sourceBuilder.query(linkShouldBuilder);\n        conditionList.forEach(condition -> {\n            final BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n            final List<QueryBuilder> mustQueryList = boolQueryBuilder.must();\n            linkShouldBuilder.should(boolQueryBuilder);\n            buildMustQueryListByCondition(condition, mustQueryList);\n        });\n        EventQueryCondition condition = conditionList.get(0);\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        sourceBuilder.sort(Event.START_TIME, Order.DES.equals(queryOrder) ? SortOrder.DESC : SortOrder.ASC);\n        sourceBuilder.size(condition.getSize());\n        return sourceBuilder;\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/query/ESEventQueryDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2021-07-09 23:04:50","commitOrder":3,"curCode":"    protected SearchSourceBuilder buildQuery(final EventQueryCondition condition) {\n        final SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource();\n        final BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n        sourceBuilder.query(boolQueryBuilder);\n\n        final List<QueryBuilder> mustQueryList = boolQueryBuilder.must();\n\n        buildMustQueryListByCondition(condition, mustQueryList);\n\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        sourceBuilder.sort(Event.START_TIME, Order.DES.equals(queryOrder) ? SortOrder.DESC : SortOrder.ASC);\n\n        final PaginationUtils.Page page = PaginationUtils.INSTANCE.exchange(condition.getPaging());\n        sourceBuilder.from(page.getFrom());\n        sourceBuilder.size(page.getLimit());\n\n        return sourceBuilder;\n    }\n","date":"2021-07-09 23:04:50","endLine":157,"groupId":"1351","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildQuery","params":"(finalEventQueryConditioncondition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/fb/7c865a202c95c75db8e43bca1ea83f5b458e95.src","preCode":"    protected SearchSourceBuilder buildQuery(final EventQueryCondition condition) {\n        final SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource();\n        final BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n        sourceBuilder.query(boolQueryBuilder);\n\n        final List<QueryBuilder> mustQueryList = boolQueryBuilder.must();\n\n        buildMustQueryListByCondition(condition, mustQueryList);\n\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        sourceBuilder.sort(Event.START_TIME, Order.DES.equals(queryOrder) ? SortOrder.DESC : SortOrder.ASC);\n        sourceBuilder.size(condition.getSize());\n\n        return sourceBuilder;\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/query/ESEventQueryDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"}],"commitId":"d79094c1786b5772514a89e17a259efb230efa6e","commitMessage":"@@@Add pagination to event query (#7274)\n\n","date":"2021-07-09 23:04:50","modifiedFileCount":"10","status":"M","submitter":"kezhenxu94"},{"authorTime":"2021-09-06 15:21:35","codes":[{"authorDate":"2021-09-06 15:21:35","commitOrder":4,"curCode":"    protected SearchBuilder buildQuery(final List<EventQueryCondition> conditionList) {\n        final BoolQueryBuilder query = Query.bool();\n\n        conditionList.forEach(condition -> {\n            final BoolQueryBuilder bool = Query.bool();\n            query.should(bool);\n            buildMustQueryListByCondition(condition, bool);\n        });\n        EventQueryCondition condition = conditionList.get(0);\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        final PaginationUtils.Page page = PaginationUtils.INSTANCE.exchange(condition.getPaging());\n\n        return Search.builder().query(query)\n                     .sort(\n                         Event.START_TIME,\n                         Order.DES.equals(queryOrder) ? Sort.Order.DESC : Sort.Order.ASC\n                     )\n                     .from(page.getFrom())\n                     .size(page.getLimit());\n    }\n","date":"2021-09-06 15:21:35","endLine":139,"groupId":"11842","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"buildQuery","params":"(finalList<EventQueryCondition>conditionList)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/07/0181529129390fb99fa5d143d6329c03cd9c43.src","preCode":"    protected SearchSourceBuilder buildQuery(final List<EventQueryCondition> conditionList) {\n        final SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource();\n        BoolQueryBuilder linkShouldBuilder = QueryBuilders.boolQuery();\n        sourceBuilder.query(linkShouldBuilder);\n        conditionList.forEach(condition -> {\n            final BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n            final List<QueryBuilder> mustQueryList = boolQueryBuilder.must();\n            linkShouldBuilder.should(boolQueryBuilder);\n            buildMustQueryListByCondition(condition, mustQueryList);\n        });\n        EventQueryCondition condition = conditionList.get(0);\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        sourceBuilder.sort(Event.START_TIME, Order.DES.equals(queryOrder) ? SortOrder.DESC : SortOrder.ASC);\n\n        final PaginationUtils.Page page = PaginationUtils.INSTANCE.exchange(condition.getPaging());\n        sourceBuilder.from(page.getFrom());\n        sourceBuilder.size(page.getLimit());\n        return sourceBuilder;\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/query/ESEventQueryDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2021-09-06 15:21:35","commitOrder":4,"curCode":"    protected SearchBuilder buildQuery(final EventQueryCondition condition) {\n        final BoolQueryBuilder query = Query.bool();\n\n        buildMustQueryListByCondition(condition, query);\n\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        final PaginationUtils.Page page = PaginationUtils.INSTANCE.exchange(condition.getPaging());\n\n        return Search.builder()\n                     .query(query)\n                     .sort(\n                         Event.START_TIME,\n                         Order.DES.equals(queryOrder) ? Sort.Order.DESC : Sort.Order.ASC\n                     )\n                     .from(page.getFrom())\n                     .size(page.getLimit());\n    }\n","date":"2021-09-06 15:21:35","endLine":157,"groupId":"11842","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"buildQuery","params":"(finalEventQueryConditioncondition)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/07/0181529129390fb99fa5d143d6329c03cd9c43.src","preCode":"    protected SearchSourceBuilder buildQuery(final EventQueryCondition condition) {\n        final SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource();\n        final BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();\n        sourceBuilder.query(boolQueryBuilder);\n\n        final List<QueryBuilder> mustQueryList = boolQueryBuilder.must();\n\n        buildMustQueryListByCondition(condition, mustQueryList);\n\n        final Order queryOrder = isNull(condition.getOrder()) ? Order.DES : condition.getOrder();\n        sourceBuilder.sort(Event.START_TIME, Order.DES.equals(queryOrder) ? SortOrder.DESC : SortOrder.ASC);\n\n        final PaginationUtils.Page page = PaginationUtils.INSTANCE.exchange(condition.getPaging());\n        sourceBuilder.from(page.getFrom());\n        sourceBuilder.size(page.getLimit());\n\n        return sourceBuilder;\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/query/ESEventQueryDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"}],"commitId":"26b81a2e5991ecdd2bde0f7071264cb80bb235cf","commitMessage":"@@@Rebuilt ElasticSearch client on top of their REST API (#7634)\n\n","date":"2021-09-06 15:21:35","modifiedFileCount":"60","status":"M","submitter":"kezhenxu94"}]
