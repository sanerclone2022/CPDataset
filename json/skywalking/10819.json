[{"authorTime":"2021-03-11 15:11:37","codes":[{"authorDate":"2021-03-11 15:11:37","commitOrder":2,"curCode":"    public InsertRequest prepareBatchInsert(Model model, Record record) throws IOException {\n        XContentBuilder builder = map2builder(\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(record)));\n        String modelName = TimeSeriesUtils.writeIndexName(model, record.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, record.id());\n        return getClient().prepareInsert(modelName, id, builder);\n    }\n","date":"2021-03-11 15:11:37","endLine":46,"groupId":"6787","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareBatchInsert","params":"(Modelmodel@Recordrecord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/f2/3bc6125ed19727c320fd53f1d84546505e3efd.src","preCode":"    public InsertRequest prepareBatchInsert(Model model, Record record) throws IOException {\n        XContentBuilder builder = map2builder(\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(record)));\n        String modelName = TimeSeriesUtils.writeIndexName(model, record.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, record.id());\n        return getClient().prepareInsert(modelName, id, builder);\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/RecordEsDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"MB"},{"authorDate":"2021-03-11 15:11:37","commitOrder":2,"curCode":"    public void insert(Model model, NoneStream noneStream) throws IOException {\n        XContentBuilder builder = map2builder(\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(noneStream)));\n        String modelName = TimeSeriesUtils.writeIndexName(model, noneStream.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, noneStream.id());\n        getClient().forceInsert(modelName, id, builder);\n    }\n","date":"2021-03-11 15:11:37","endLine":48,"groupId":"5044","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"insert","params":"(Modelmodel@NoneStreamnoneStream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/3d/892430c1f55aeeafd5f774ccff534c8b04394e.src","preCode":"    public void insert(Model model, NoneStream noneStream) throws IOException {\n        XContentBuilder builder = map2builder(\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(noneStream)));\n        String modelName = TimeSeriesUtils.writeIndexName(model, noneStream.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, noneStream.id());\n        getClient().forceInsert(modelName, id, builder);\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/NoneStreamEsDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"}],"commitId":"fd1d21021f8f3abd66f957ff8484a0e2c29ceb36","commitMessage":"@@@[Incompatible Enhancement]New index policy of ElasticSearch storage option (#6499)\n\n","date":"2021-03-11 15:11:37","modifiedFileCount":"39","status":"M","submitter":"Evan"},{"authorTime":"2021-09-06 15:21:35","codes":[{"authorDate":"2021-09-06 15:21:35","commitOrder":3,"curCode":"    public InsertRequest prepareBatchInsert(Model model, Record record) throws IOException {\n        Map<String, Object> builder =\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(record));\n        String modelName = TimeSeriesUtils.writeIndexName(model, record.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, record.id());\n        return getClient().prepareInsert(modelName, id, builder);\n    }\n","date":"2021-09-06 15:21:35","endLine":46,"groupId":"10819","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"prepareBatchInsert","params":"(Modelmodel@Recordrecord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/26/f35c7fa1b7f7c78595dc015a74b89b777fbe04.src","preCode":"    public InsertRequest prepareBatchInsert(Model model, Record record) throws IOException {\n        XContentBuilder builder = map2builder(\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(record)));\n        String modelName = TimeSeriesUtils.writeIndexName(model, record.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, record.id());\n        return getClient().prepareInsert(modelName, id, builder);\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/RecordEsDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2021-09-06 15:21:35","commitOrder":3,"curCode":"    public void insert(Model model, NoneStream noneStream) throws IOException {\n        Map<String, Object> builder =\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(\n                noneStream));\n        String modelName = TimeSeriesUtils.writeIndexName(model, noneStream.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, noneStream.id());\n        getClient().forceInsert(modelName, id, builder);\n    }\n","date":"2021-09-06 15:21:35","endLine":49,"groupId":"10819","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"insert","params":"(Modelmodel@NoneStreamnoneStream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/bb/9295637d1b8d060f41908a4e2e46d0315c8341.src","preCode":"    public void insert(Model model, NoneStream noneStream) throws IOException {\n        XContentBuilder builder = map2builder(\n            IndexController.INSTANCE.appendMetricTableColumn(model, storageBuilder.entity2Storage(noneStream)));\n        String modelName = TimeSeriesUtils.writeIndexName(model, noneStream.getTimeBucket());\n        String id = IndexController.INSTANCE.generateDocId(model, noneStream.id());\n        getClient().forceInsert(modelName, id, builder);\n    }\n","realPath":"oap-server/server-storage-plugin/storage-elasticsearch-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/elasticsearch/base/NoneStreamEsDAO.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"}],"commitId":"26b81a2e5991ecdd2bde0f7071264cb80bb235cf","commitMessage":"@@@Rebuilt ElasticSearch client on top of their REST API (#7634)\n\n","date":"2021-09-06 15:21:35","modifiedFileCount":"60","status":"M","submitter":"kezhenxu94"}]
