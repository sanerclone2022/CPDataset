[{"authorTime":"2020-11-11 22:12:40","codes":[{"authorDate":"2021-03-25 20:50:58","commitOrder":3,"curCode":"    public void start() {\n        if (isStarted.compareAndSet(false, true)) {\n            init();\n            final ApiClient apiClient = Config.defaultClient();\n            apiClient.setHttpClient(apiClient.getHttpClient()\n                                             .newBuilder()\n                                             .readTimeout(0, TimeUnit.SECONDS)\n                                             .build());\n            Configuration.setDefaultApiClient(apiClient);\n\n            final CoreV1Api coreV1Api = new CoreV1Api();\n            final SharedInformerFactory factory = new SharedInformerFactory(executor);\n\n            listenEndpointsEvents(coreV1Api, factory);\n            listenPodEvents(coreV1Api, factory);\n            factory.startAllRegisteredInformers();\n        }\n    }\n","date":"2021-03-25 20:50:58","endLine":87,"groupId":"5030","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/69/4cd311a5de31d7702e7f81420665711cb9cba1.src","preCode":"    public void start() {\n        if (isStarted.compareAndSet(false, true)) {\n            init();\n            final ApiClient apiClient = Config.defaultClient();\n            apiClient.setHttpClient(apiClient.getHttpClient()\n                                             .newBuilder()\n                                             .readTimeout(0, TimeUnit.SECONDS)\n                                             .build());\n            Configuration.setDefaultApiClient(apiClient);\n\n            final CoreV1Api coreV1Api = new CoreV1Api();\n            final SharedInformerFactory factory = new SharedInformerFactory(executor);\n\n            listenEndpointsEvents(coreV1Api, factory);\n            listenPodEvents(coreV1Api, factory);\n            factory.startAllRegisteredInformers();\n        }\n    }\n","realPath":"oap-server/analyzer/meter-analyzer/src/main/java/org/apache/skywalking/oap/meter/analyzer/k8s/K8sInfoRegistry.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2020-11-11 22:12:40","commitOrder":3,"curCode":"    public void start() throws IOException {\n        final ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient()\n                                         .newBuilder()\n                                         .readTimeout(0, TimeUnit.SECONDS)\n                                         .build());\n        Configuration.setDefaultApiClient(apiClient);\n\n        final CoreV1Api coreV1Api = new CoreV1Api();\n        final SharedInformerFactory factory = new SharedInformerFactory(executor);\n\n        \r\n        listenServiceEvents(coreV1Api, factory);\n        listenEndpointsEvents(coreV1Api, factory);\n        listenPodEvents(coreV1Api, factory);\n\n        factory.startAllRegisteredInformers();\n    }\n","date":"2020-11-11 22:12:40","endLine":99,"groupId":"5030","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/5e/cb379474907f842bbc9ef1e2b129e29fce10bf.src","preCode":"    public void start() throws IOException {\n        final ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient()\n                                         .newBuilder()\n                                         .readTimeout(0, TimeUnit.SECONDS)\n                                         .build());\n        Configuration.setDefaultApiClient(apiClient);\n\n        final CoreV1Api coreV1Api = new CoreV1Api();\n        final SharedInformerFactory factory = new SharedInformerFactory(executor);\n\n        \r\n        listenServiceEvents(coreV1Api, factory);\n        listenEndpointsEvents(coreV1Api, factory);\n        listenPodEvents(coreV1Api, factory);\n\n        factory.startAllRegisteredInformers();\n    }\n","realPath":"oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/als/k8s/K8SServiceRegistry.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"NB"}],"commitId":"92c0cb856d4df5ded4708d285c4e0ecce97dfd7a","commitMessage":"@@@Add function `retagByK8sMeta` and opt type `K8sRetagType.Pod2Service` in MAL for k8s to relate pods and services. (#6608)\n\n","date":"2021-03-25 20:50:58","modifiedFileCount":"4","status":"M","submitter":"wankai123"},{"authorTime":"2020-11-11 22:12:40","codes":[{"authorDate":"2021-03-30 08:48:22","commitOrder":4,"curCode":"    public void start() {\n        if (isStarted.compareAndSet(false, true)) {\n            init();\n            final ApiClient apiClient = Config.defaultClient();\n            apiClient.setHttpClient(apiClient.getHttpClient()\n                                             .newBuilder()\n                                             .readTimeout(0, TimeUnit.SECONDS)\n                                             .build());\n            Configuration.setDefaultApiClient(apiClient);\n\n            final CoreV1Api coreV1Api = new CoreV1Api();\n            final SharedInformerFactory factory = new SharedInformerFactory(executor);\n            listenServiceEvents(coreV1Api, factory);\n            listenPodEvents(coreV1Api, factory);\n            factory.startAllRegisteredInformers();\n        }\n    }\n","date":"2021-03-30 08:48:22","endLine":88,"groupId":"10751","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/aa/49b051eab229633d4a006bb664759cb40e84a8.src","preCode":"    public void start() {\n        if (isStarted.compareAndSet(false, true)) {\n            init();\n            final ApiClient apiClient = Config.defaultClient();\n            apiClient.setHttpClient(apiClient.getHttpClient()\n                                             .newBuilder()\n                                             .readTimeout(0, TimeUnit.SECONDS)\n                                             .build());\n            Configuration.setDefaultApiClient(apiClient);\n\n            final CoreV1Api coreV1Api = new CoreV1Api();\n            final SharedInformerFactory factory = new SharedInformerFactory(executor);\n\n            listenEndpointsEvents(coreV1Api, factory);\n            listenPodEvents(coreV1Api, factory);\n            factory.startAllRegisteredInformers();\n        }\n    }\n","realPath":"oap-server/analyzer/meter-analyzer/src/main/java/org/apache/skywalking/oap/meter/analyzer/k8s/K8sInfoRegistry.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2020-11-11 22:12:40","commitOrder":4,"curCode":"    public void start() throws IOException {\n        final ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient()\n                                         .newBuilder()\n                                         .readTimeout(0, TimeUnit.SECONDS)\n                                         .build());\n        Configuration.setDefaultApiClient(apiClient);\n\n        final CoreV1Api coreV1Api = new CoreV1Api();\n        final SharedInformerFactory factory = new SharedInformerFactory(executor);\n\n        \r\n        listenServiceEvents(coreV1Api, factory);\n        listenEndpointsEvents(coreV1Api, factory);\n        listenPodEvents(coreV1Api, factory);\n\n        factory.startAllRegisteredInformers();\n    }\n","date":"2020-11-11 22:12:40","endLine":99,"groupId":"10751","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-skywalking-10-0.7/blobInfo/CC_OUT/blobs/5e/cb379474907f842bbc9ef1e2b129e29fce10bf.src","preCode":"    public void start() throws IOException {\n        final ApiClient apiClient = Config.defaultClient();\n        apiClient.setHttpClient(apiClient.getHttpClient()\n                                         .newBuilder()\n                                         .readTimeout(0, TimeUnit.SECONDS)\n                                         .build());\n        Configuration.setDefaultApiClient(apiClient);\n\n        final CoreV1Api coreV1Api = new CoreV1Api();\n        final SharedInformerFactory factory = new SharedInformerFactory(executor);\n\n        \r\n        listenServiceEvents(coreV1Api, factory);\n        listenEndpointsEvents(coreV1Api, factory);\n        listenPodEvents(coreV1Api, factory);\n\n        factory.startAllRegisteredInformers();\n    }\n","realPath":"oap-server/server-receiver-plugin/envoy-metrics-receiver-plugin/src/main/java/org/apache/skywalking/oap/server/receiver/envoy/als/k8s/K8SServiceRegistry.java","repoName":"skywalking","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"}],"commitId":"523944a59f7e6f8a3ed6f92b50401f733ffad6a5","commitMessage":"@@@Add  arg `namespace` to func `retagByK8sMeta`.  rebuild the relationship between pod and service by labels (#6650)\n\n* Add `namespace` to func `retagByK8sMeta`.  rebuild the relationship between pod and service by labels\n\n* add param check","date":"2021-03-30 08:48:22","modifiedFileCount":"5","status":"M","submitter":"wankai123"}]
