[{"authorTime":"2019-08-28 16:29:33","codes":[{"authorDate":"2019-08-28 16:29:33","commitOrder":2,"curCode":"\tpublic AbstractStreamOperatorTestHarness(\n\t\t\tStreamOperator<OUT> operator,\n\t\t\tint maxParallelism,\n\t\t\tint parallelism,\n\t\t\tint subtaskIndex,\n\t\t\tOperatorID operatorID) throws Exception {\n\t\tthis(\n\t\t\t\toperator,\n\t\t\t\tSimpleOperatorFactory.of(operator),\n\t\t\t\tnew MockEnvironmentBuilder()\n\t\t\t\t\t\t.setTaskName(\"MockTask\")\n\t\t\t\t\t\t.setMemorySize(3 * 1024 * 1024)\n\t\t\t\t\t\t.setInputSplitProvider(new MockInputSplitProvider())\n\t\t\t\t\t\t.setBufferSize(1024)\n\t\t\t\t\t\t.setMaxParallelism(maxParallelism)\n\t\t\t\t\t\t.setParallelism(parallelism)\n\t\t\t\t\t\t.setSubtaskIndex(subtaskIndex)\n\t\t\t\t\t\t.build(),\n\t\t\t\ttrue,\n\t\t\t\toperatorID);\n\t}\n","date":"2019-08-30 14:36:14","endLine":169,"groupId":"13630","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"AbstractStreamOperatorTestHarness","params":"(StreamOperator<OUT>operator@intmaxParallelism@intparallelism@intsubtaskIndex@OperatorIDoperatorID)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c0/339510f1cc1995ccd3cc52290714412b77aaca.src","preCode":"\tpublic AbstractStreamOperatorTestHarness(\n\t\t\tStreamOperator<OUT> operator,\n\t\t\tint maxParallelism,\n\t\t\tint parallelism,\n\t\t\tint subtaskIndex,\n\t\t\tOperatorID operatorID) throws Exception {\n\t\tthis(\n\t\t\t\toperator,\n\t\t\t\tSimpleOperatorFactory.of(operator),\n\t\t\t\tnew MockEnvironmentBuilder()\n\t\t\t\t\t\t.setTaskName(\"MockTask\")\n\t\t\t\t\t\t.setMemorySize(3 * 1024 * 1024)\n\t\t\t\t\t\t.setInputSplitProvider(new MockInputSplitProvider())\n\t\t\t\t\t\t.setBufferSize(1024)\n\t\t\t\t\t\t.setMaxParallelism(maxParallelism)\n\t\t\t\t\t\t.setParallelism(parallelism)\n\t\t\t\t\t\t.setSubtaskIndex(subtaskIndex)\n\t\t\t\t\t\t.build(),\n\t\t\t\ttrue,\n\t\t\t\toperatorID);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/util/AbstractStreamOperatorTestHarness.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"MB"},{"authorDate":"2019-08-28 16:29:33","commitOrder":2,"curCode":"\tpublic AbstractStreamOperatorTestHarness(\n\t\t\tStreamOperatorFactory<OUT> factory,\n\t\t\tint maxParallelism,\n\t\t\tint parallelism,\n\t\t\tint subtaskIndex,\n\t\t\tOperatorID operatorID) throws Exception {\n\t\tthis(\n\t\t\t\tnull,\n\t\t\t\tfactory,\n\t\t\t\tnew MockEnvironmentBuilder()\n\t\t\t\t\t\t.setTaskName(\"MockTask\")\n\t\t\t\t\t\t.setMemorySize(3 * 1024 * 1024)\n\t\t\t\t\t\t.setInputSplitProvider(new MockInputSplitProvider())\n\t\t\t\t\t\t.setBufferSize(1024)\n\t\t\t\t\t\t.setMaxParallelism(maxParallelism)\n\t\t\t\t\t\t.setParallelism(parallelism)\n\t\t\t\t\t\t.setSubtaskIndex(subtaskIndex)\n\t\t\t\t\t\t.build(),\n\t\t\t\ttrue,\n\t\t\t\toperatorID);\n\t}\n","date":"2019-08-30 14:36:14","endLine":210,"groupId":"13630","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"AbstractStreamOperatorTestHarness","params":"(StreamOperatorFactory<OUT>factory@intmaxParallelism@intparallelism@intsubtaskIndex@OperatorIDoperatorID)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c0/339510f1cc1995ccd3cc52290714412b77aaca.src","preCode":"\tpublic AbstractStreamOperatorTestHarness(\n\t\t\tStreamOperatorFactory<OUT> factory,\n\t\t\tint maxParallelism,\n\t\t\tint parallelism,\n\t\t\tint subtaskIndex,\n\t\t\tOperatorID operatorID) throws Exception {\n\t\tthis(\n\t\t\t\tnull,\n\t\t\t\tfactory,\n\t\t\t\tnew MockEnvironmentBuilder()\n\t\t\t\t\t\t.setTaskName(\"MockTask\")\n\t\t\t\t\t\t.setMemorySize(3 * 1024 * 1024)\n\t\t\t\t\t\t.setInputSplitProvider(new MockInputSplitProvider())\n\t\t\t\t\t\t.setBufferSize(1024)\n\t\t\t\t\t\t.setMaxParallelism(maxParallelism)\n\t\t\t\t\t\t.setParallelism(parallelism)\n\t\t\t\t\t\t.setSubtaskIndex(subtaskIndex)\n\t\t\t\t\t\t.build(),\n\t\t\t\ttrue,\n\t\t\t\toperatorID);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/util/AbstractStreamOperatorTestHarness.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"B"}],"commitId":"ccc7eb431477059b32fb924104c17af953620c74","commitMessage":"@@@[FLINK-13248] [datastream/streaming] Enabling custom factories for one input stream operators to be passed in DataStream\n\nAlso enabled StreamOperatorTestHarness and InputStreamTaskTestHarness to work with factories. In the future.  instead of passing operators directly in the DataStream API.  factories should be used instead.\n","date":"2019-08-30 14:36:14","modifiedFileCount":"4","status":"M","submitter":"Arvid Heise"},{"authorTime":"2020-01-21 23:46:05","codes":[{"authorDate":"2020-01-21 23:46:05","commitOrder":3,"curCode":"\tpublic AbstractStreamOperatorTestHarness(\n\t\t\tStreamOperator<OUT> operator,\n\t\t\tint maxParallelism,\n\t\t\tint parallelism,\n\t\t\tint subtaskIndex,\n\t\t\tOperatorID operatorID) throws Exception {\n\t\tthis(\n\t\t\t\toperator,\n\t\t\t\tSimpleOperatorFactory.of(operator),\n\t\t\t\tnew MockEnvironmentBuilder()\n\t\t\t\t\t\t.setTaskName(\"MockTask\")\n\t\t\t\t\t\t.setManagedMemorySize(3 * 1024 * 1024)\n\t\t\t\t\t\t.setInputSplitProvider(new MockInputSplitProvider())\n\t\t\t\t\t\t.setBufferSize(1024)\n\t\t\t\t\t\t.setMaxParallelism(maxParallelism)\n\t\t\t\t\t\t.setParallelism(parallelism)\n\t\t\t\t\t\t.setSubtaskIndex(subtaskIndex)\n\t\t\t\t\t\t.build(),\n\t\t\t\ttrue,\n\t\t\t\toperatorID);\n\t}\n","date":"2020-01-23 21:10:06","endLine":168,"groupId":"113410","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"AbstractStreamOperatorTestHarness","params":"(StreamOperator<OUT>operator@intmaxParallelism@intparallelism@intsubtaskIndex@OperatorIDoperatorID)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/32/857f74ece0d253f24a88d2291817a80301cd22.src","preCode":"\tpublic AbstractStreamOperatorTestHarness(\n\t\t\tStreamOperator<OUT> operator,\n\t\t\tint maxParallelism,\n\t\t\tint parallelism,\n\t\t\tint subtaskIndex,\n\t\t\tOperatorID operatorID) throws Exception {\n\t\tthis(\n\t\t\t\toperator,\n\t\t\t\tSimpleOperatorFactory.of(operator),\n\t\t\t\tnew MockEnvironmentBuilder()\n\t\t\t\t\t\t.setTaskName(\"MockTask\")\n\t\t\t\t\t\t.setMemorySize(3 * 1024 * 1024)\n\t\t\t\t\t\t.setInputSplitProvider(new MockInputSplitProvider())\n\t\t\t\t\t\t.setBufferSize(1024)\n\t\t\t\t\t\t.setMaxParallelism(maxParallelism)\n\t\t\t\t\t\t.setParallelism(parallelism)\n\t\t\t\t\t\t.setSubtaskIndex(subtaskIndex)\n\t\t\t\t\t\t.build(),\n\t\t\t\ttrue,\n\t\t\t\toperatorID);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/util/AbstractStreamOperatorTestHarness.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2020-01-21 23:46:05","commitOrder":3,"curCode":"\tpublic AbstractStreamOperatorTestHarness(\n\t\t\tStreamOperatorFactory<OUT> factory,\n\t\t\tint maxParallelism,\n\t\t\tint parallelism,\n\t\t\tint subtaskIndex,\n\t\t\tOperatorID operatorID) throws Exception {\n\t\tthis(\n\t\t\t\tnull,\n\t\t\t\tfactory,\n\t\t\t\tnew MockEnvironmentBuilder()\n\t\t\t\t\t\t.setTaskName(\"MockTask\")\n\t\t\t\t\t\t.setManagedMemorySize(3 * 1024 * 1024)\n\t\t\t\t\t\t.setInputSplitProvider(new MockInputSplitProvider())\n\t\t\t\t\t\t.setBufferSize(1024)\n\t\t\t\t\t\t.setMaxParallelism(maxParallelism)\n\t\t\t\t\t\t.setParallelism(parallelism)\n\t\t\t\t\t\t.setSubtaskIndex(subtaskIndex)\n\t\t\t\t\t\t.build(),\n\t\t\t\ttrue,\n\t\t\t\toperatorID);\n\t}\n","date":"2020-01-23 21:10:06","endLine":209,"groupId":"113410","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"AbstractStreamOperatorTestHarness","params":"(StreamOperatorFactory<OUT>factory@intmaxParallelism@intparallelism@intsubtaskIndex@OperatorIDoperatorID)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/32/857f74ece0d253f24a88d2291817a80301cd22.src","preCode":"\tpublic AbstractStreamOperatorTestHarness(\n\t\t\tStreamOperatorFactory<OUT> factory,\n\t\t\tint maxParallelism,\n\t\t\tint parallelism,\n\t\t\tint subtaskIndex,\n\t\t\tOperatorID operatorID) throws Exception {\n\t\tthis(\n\t\t\t\tnull,\n\t\t\t\tfactory,\n\t\t\t\tnew MockEnvironmentBuilder()\n\t\t\t\t\t\t.setTaskName(\"MockTask\")\n\t\t\t\t\t\t.setMemorySize(3 * 1024 * 1024)\n\t\t\t\t\t\t.setInputSplitProvider(new MockInputSplitProvider())\n\t\t\t\t\t\t.setBufferSize(1024)\n\t\t\t\t\t\t.setMaxParallelism(maxParallelism)\n\t\t\t\t\t\t.setParallelism(parallelism)\n\t\t\t\t\t\t.setSubtaskIndex(subtaskIndex)\n\t\t\t\t\t\t.build(),\n\t\t\t\ttrue,\n\t\t\t\toperatorID);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/util/AbstractStreamOperatorTestHarness.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"}],"commitId":"e6ff5655c76e25157781d64f08dbc0893b22708e","commitMessage":"@@@[FLINK-15692][state] Enable limiting RocksDB memory consumption by default\n\nTurn on state.backend.rocksdb.memory.managed to enable memory limit on RocksDB\n\nThis closes #10921.\n","date":"2020-01-23 21:10:06","modifiedFileCount":"23","status":"M","submitter":"Yun Tang"}]
