[{"authorTime":"2020-05-13 11:09:32","codes":[{"authorDate":"2020-05-13 11:09:32","commitOrder":1,"curCode":"\tprivate static void configureDeserializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataDeserializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> delimiter.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\n\t\tformatOptions.getOptional(ALLOW_COMMENTS)\n\t\t\t\t.ifPresent(schemaBuilder::setAllowComments);\n\n\t\tformatOptions.getOptional(IGNORE_PARSE_ERRORS)\n\t\t\t\t.ifPresent(schemaBuilder::setIgnoreParseErrors);\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","date":"2020-05-14 10:41:58","endLine":221,"groupId":"514","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"configureDeserializationSchema","params":"(ReadableConfigformatOptions@CsvRowDataDeserializationSchema.BuilderschemaBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/99/e4ac44f9454bdaa277e606266c61e255691fd7.src","preCode":"\tprivate static void configureDeserializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataDeserializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> delimiter.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\n\t\tformatOptions.getOptional(ALLOW_COMMENTS)\n\t\t\t\t.ifPresent(schemaBuilder::setAllowComments);\n\n\t\tformatOptions.getOptional(IGNORE_PARSE_ERRORS)\n\t\t\t\t.ifPresent(schemaBuilder::setIgnoreParseErrors);\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"B"},{"authorDate":"2020-05-13 11:09:32","commitOrder":1,"curCode":"\tprivate static void configureSerializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataSerializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> delimiter.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tformatOptions.getOptional(LINE_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setLineDelimiter);\n\n\t\tif (formatOptions.get(DISABLE_QUOTE_CHARACTER)) {\n\t\t\tschemaBuilder.disableQuoteCharacter();\n\t\t} else {\n\t\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\t\t}\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","date":"2020-05-14 10:41:58","endLine":250,"groupId":"15842","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"configureSerializationSchema","params":"(ReadableConfigformatOptions@CsvRowDataSerializationSchema.BuilderschemaBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/99/e4ac44f9454bdaa277e606266c61e255691fd7.src","preCode":"\tprivate static void configureSerializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataSerializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> delimiter.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tformatOptions.getOptional(LINE_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setLineDelimiter);\n\n\t\tif (formatOptions.get(DISABLE_QUOTE_CHARACTER)) {\n\t\t\tschemaBuilder.disableQuoteCharacter();\n\t\t} else {\n\t\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\t\t}\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"B"}],"commitId":"654a637edc154c2bd5cd8d3999be3dfd93d70a1c","commitMessage":"@@@[FLINK-17604][csv] Implement format factory for CSV serialization and deseriazation schema of RowData type\n\nThis closes #12065\n","date":"2020-05-14 10:41:58","modifiedFileCount":"0","status":"B","submitter":"yuzhao.cyz"},{"authorTime":"2020-11-06 11:29:42","codes":[{"authorDate":"2020-05-13 11:09:32","commitOrder":2,"curCode":"\tprivate static void configureDeserializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataDeserializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> delimiter.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\n\t\tformatOptions.getOptional(ALLOW_COMMENTS)\n\t\t\t\t.ifPresent(schemaBuilder::setAllowComments);\n\n\t\tformatOptions.getOptional(IGNORE_PARSE_ERRORS)\n\t\t\t\t.ifPresent(schemaBuilder::setIgnoreParseErrors);\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","date":"2020-05-14 10:41:58","endLine":221,"groupId":"514","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"configureDeserializationSchema","params":"(ReadableConfigformatOptions@CsvRowDataDeserializationSchema.BuilderschemaBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/99/e4ac44f9454bdaa277e606266c61e255691fd7.src","preCode":"\tprivate static void configureDeserializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataDeserializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> delimiter.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\n\t\tformatOptions.getOptional(ALLOW_COMMENTS)\n\t\t\t\t.ifPresent(schemaBuilder::setAllowComments);\n\n\t\tformatOptions.getOptional(IGNORE_PARSE_ERRORS)\n\t\t\t\t.ifPresent(schemaBuilder::setIgnoreParseErrors);\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"N"},{"authorDate":"2020-11-06 11:29:42","commitOrder":2,"curCode":"\tprivate static void configureSerializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataSerializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> delimiter.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tif (formatOptions.get(DISABLE_QUOTE_CHARACTER)) {\n\t\t\tschemaBuilder.disableQuoteCharacter();\n\t\t} else {\n\t\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\t\t}\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","date":"2020-11-06 11:29:42","endLine":231,"groupId":"15842","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"configureSerializationSchema","params":"(ReadableConfigformatOptions@CsvRowDataSerializationSchema.BuilderschemaBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f3/38bd4bdbf16a96673d36216e2ab4145d8f62f5.src","preCode":"\tprivate static void configureSerializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataSerializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> delimiter.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tformatOptions.getOptional(LINE_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setLineDelimiter);\n\n\t\tif (formatOptions.get(DISABLE_QUOTE_CHARACTER)) {\n\t\t\tschemaBuilder.disableQuoteCharacter();\n\t\t} else {\n\t\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\t\t}\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"2d12d325d77e4727cb74d8a58597eb0ce9ab5aa2","commitMessage":"@@@[FLINK-19868][csv] Remove 'csv.line-delimiter' option for CSV format\n\nThis closes #13925","date":"2020-11-06 11:29:42","modifiedFileCount":"6","status":"M","submitter":"SteNicholas"},{"authorTime":"2020-11-16 11:24:28","codes":[{"authorDate":"2020-11-16 11:24:28","commitOrder":3,"curCode":"\tprivate static void configureDeserializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataDeserializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> StringEscapeUtils.unescapeJava(delimiter).charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\n\t\tformatOptions.getOptional(ALLOW_COMMENTS)\n\t\t\t\t.ifPresent(schemaBuilder::setAllowComments);\n\n\t\tformatOptions.getOptional(IGNORE_PARSE_ERRORS)\n\t\t\t\t.ifPresent(schemaBuilder::setIgnoreParseErrors);\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","date":"2020-11-19 10:16:28","endLine":226,"groupId":"514","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"configureDeserializationSchema","params":"(ReadableConfigformatOptions@CsvRowDataDeserializationSchema.BuilderschemaBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e2/fead2dafcc8b9b7ff21966a4e0e6bee2f4fc29.src","preCode":"\tprivate static void configureDeserializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataDeserializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> delimiter.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\n\t\tformatOptions.getOptional(ALLOW_COMMENTS)\n\t\t\t\t.ifPresent(schemaBuilder::setAllowComments);\n\n\t\tformatOptions.getOptional(IGNORE_PARSE_ERRORS)\n\t\t\t\t.ifPresent(schemaBuilder::setIgnoreParseErrors);\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"},{"authorDate":"2020-11-16 11:24:28","commitOrder":3,"curCode":"\tprivate static void configureSerializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataSerializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> StringEscapeUtils.unescapeJava(delimiter).charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tif (formatOptions.get(DISABLE_QUOTE_CHARACTER)) {\n\t\t\tschemaBuilder.disableQuoteCharacter();\n\t\t} else {\n\t\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\t\t}\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","date":"2020-11-19 10:16:28","endLine":252,"groupId":"15842","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"configureSerializationSchema","params":"(ReadableConfigformatOptions@CsvRowDataSerializationSchema.BuilderschemaBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e2/fead2dafcc8b9b7ff21966a4e0e6bee2f4fc29.src","preCode":"\tprivate static void configureSerializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataSerializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> delimiter.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tif (formatOptions.get(DISABLE_QUOTE_CHARACTER)) {\n\t\t\tschemaBuilder.disableQuoteCharacter();\n\t\t} else {\n\t\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\t\t}\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"M"}],"commitId":"afb239e311aad2a8237e8be001a12d8af102e2b2","commitMessage":"@@@[FLINK-19949][csv] Unescape CSV format field delimiter character\n\nThe field delimiter should be unescaped when read from a File.\n\nThis closes #13900\n","date":"2020-11-19 10:16:28","modifiedFileCount":"3","status":"M","submitter":"yuzhao.cyz"},{"authorTime":"2020-11-16 11:24:28","codes":[{"authorDate":"2021-01-29 22:58:11","commitOrder":4,"curCode":"    private static void configureDeserializationSchema(\n            ReadableConfig formatOptions, CsvRowDataDeserializationSchema.Builder schemaBuilder) {\n        formatOptions\n                .getOptional(FIELD_DELIMITER)\n                .map(delimiter -> StringEscapeUtils.unescapeJava(delimiter).charAt(0))\n                .ifPresent(schemaBuilder::setFieldDelimiter);\n\n        if (formatOptions.get(DISABLE_QUOTE_CHARACTER)) {\n            schemaBuilder.disableQuoteCharacter();\n        } else {\n            formatOptions\n                    .getOptional(QUOTE_CHARACTER)\n                    .map(quote -> quote.charAt(0))\n                    .ifPresent(schemaBuilder::setQuoteCharacter);\n        }\n\n        formatOptions.getOptional(ALLOW_COMMENTS).ifPresent(schemaBuilder::setAllowComments);\n\n        formatOptions\n                .getOptional(IGNORE_PARSE_ERRORS)\n                .ifPresent(schemaBuilder::setIgnoreParseErrors);\n\n        formatOptions\n                .getOptional(ARRAY_ELEMENT_DELIMITER)\n                .ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n        formatOptions\n                .getOptional(ESCAPE_CHARACTER)\n                .map(escape -> escape.charAt(0))\n                .ifPresent(schemaBuilder::setEscapeCharacter);\n\n        formatOptions.getOptional(NULL_LITERAL).ifPresent(schemaBuilder::setNullLiteral);\n    }\n","date":"2021-02-02 11:56:47","endLine":221,"groupId":"102297","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"configureDeserializationSchema","params":"(ReadableConfigformatOptions@CsvRowDataDeserializationSchema.BuilderschemaBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/49/08c2df2a77956a74bde500bac623c53fc1759b.src","preCode":"    private static void configureDeserializationSchema(\n            ReadableConfig formatOptions, CsvRowDataDeserializationSchema.Builder schemaBuilder) {\n        formatOptions\n                .getOptional(FIELD_DELIMITER)\n                .map(delimiter -> StringEscapeUtils.unescapeJava(delimiter).charAt(0))\n                .ifPresent(schemaBuilder::setFieldDelimiter);\n\n        formatOptions\n                .getOptional(QUOTE_CHARACTER)\n                .map(quote -> quote.charAt(0))\n                .ifPresent(schemaBuilder::setQuoteCharacter);\n\n        formatOptions.getOptional(ALLOW_COMMENTS).ifPresent(schemaBuilder::setAllowComments);\n\n        formatOptions\n                .getOptional(IGNORE_PARSE_ERRORS)\n                .ifPresent(schemaBuilder::setIgnoreParseErrors);\n\n        formatOptions\n                .getOptional(ARRAY_ELEMENT_DELIMITER)\n                .ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n        formatOptions\n                .getOptional(ESCAPE_CHARACTER)\n                .map(escape -> escape.charAt(0))\n                .ifPresent(schemaBuilder::setEscapeCharacter);\n\n        formatOptions.getOptional(NULL_LITERAL).ifPresent(schemaBuilder::setNullLiteral);\n    }\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"},{"authorDate":"2020-11-16 11:24:28","commitOrder":4,"curCode":"\tprivate static void configureSerializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataSerializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> StringEscapeUtils.unescapeJava(delimiter).charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tif (formatOptions.get(DISABLE_QUOTE_CHARACTER)) {\n\t\t\tschemaBuilder.disableQuoteCharacter();\n\t\t} else {\n\t\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\t\t}\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","date":"2020-11-19 10:16:28","endLine":252,"groupId":"102297","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"configureSerializationSchema","params":"(ReadableConfigformatOptions@CsvRowDataSerializationSchema.BuilderschemaBuilder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e2/fead2dafcc8b9b7ff21966a4e0e6bee2f4fc29.src","preCode":"\tprivate static void configureSerializationSchema(\n\t\t\tReadableConfig formatOptions,\n\t\t\tCsvRowDataSerializationSchema.Builder schemaBuilder) {\n\t\tformatOptions.getOptional(FIELD_DELIMITER)\n\t\t\t\t.map(delimiter -> StringEscapeUtils.unescapeJava(delimiter).charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setFieldDelimiter);\n\n\t\tif (formatOptions.get(DISABLE_QUOTE_CHARACTER)) {\n\t\t\tschemaBuilder.disableQuoteCharacter();\n\t\t} else {\n\t\t\tformatOptions.getOptional(QUOTE_CHARACTER)\n\t\t\t\t\t.map(quote -> quote.charAt(0))\n\t\t\t\t\t.ifPresent(schemaBuilder::setQuoteCharacter);\n\t\t}\n\n\t\tformatOptions.getOptional(ARRAY_ELEMENT_DELIMITER)\n\t\t\t\t.ifPresent(schemaBuilder::setArrayElementDelimiter);\n\n\t\tformatOptions.getOptional(ESCAPE_CHARACTER)\n\t\t\t\t.map(escape -> escape.charAt(0))\n\t\t\t\t.ifPresent(schemaBuilder::setEscapeCharacter);\n\n\t\tformatOptions.getOptional(NULL_LITERAL)\n\t\t\t\t.ifPresent(schemaBuilder::setNullLiteral);\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"N"}],"commitId":"03871e142746832a64c84756e928da0c3bdff6a2","commitMessage":"@@@[FLINK-21207][csv] Fix 'csv.disable-quote-character' = 'true' can not take effect in source table\n\nThis closes #14813\n","date":"2021-02-02 11:56:47","modifiedFileCount":"4","status":"M","submitter":"sharkdtu(???)"}]
