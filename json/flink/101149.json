[{"authorTime":"2018-08-25 21:21:54","codes":[{"authorDate":"2018-08-25 21:21:54","commitOrder":1,"curCode":"\tpublic void testAddAcknowledgeIdOnEmptyState() throws Exception {\n\t\tAcknowledgeOnCheckpoint<String> acknowledgeOnCheckpoint = new AcknowledgeOnCheckpoint<>(mockedAcknowledger);\n\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId\");\n\n\t\tList<AcknowledgeIdsForCheckpoint<String>> actual = acknowledgeOnCheckpoint.snapshotState(2, 100);\n\n\t\tassertThat(actual.get(0).getCheckpointId(), is(2L));\n\t\tassertThat(actual.get(0).getAcknowledgeIds(), containsInAnyOrder(\"ackId\"));\n\n\t\tassertThat(acknowledgeOnCheckpoint.numberOfOutstandingAcknowledgements(), is(1));\n\t}\n","date":"2019-07-05 20:44:52","endLine":74,"groupId":"51551","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddAcknowledgeIdOnEmptyState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/80/113cbb411062e3db3eea18de88272a2179ce3e.src","preCode":"\tpublic void testAddAcknowledgeIdOnEmptyState() throws Exception {\n\t\tAcknowledgeOnCheckpoint<String> acknowledgeOnCheckpoint = new AcknowledgeOnCheckpoint<>(mockedAcknowledger);\n\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId\");\n\n\t\tList<AcknowledgeIdsForCheckpoint<String>> actual = acknowledgeOnCheckpoint.snapshotState(2, 100);\n\n\t\tassertThat(actual.get(0).getCheckpointId(), is(2L));\n\t\tassertThat(actual.get(0).getAcknowledgeIds(), containsInAnyOrder(\"ackId\"));\n\n\t\tassertThat(acknowledgeOnCheckpoint.numberOfOutstandingAcknowledgements(), is(1));\n\t}\n","realPath":"flink-connectors/flink-connector-gcp-pubsub/src/test/java/org/apache/flink/streaming/connectors/gcp/pubsub/common/AcknowledgeOnCheckpointTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"},{"authorDate":"2018-08-25 21:21:54","commitOrder":1,"curCode":"\tpublic void testAddMultipleAcknowledgeIds() throws Exception {\n\t\tAcknowledgeOnCheckpoint<String> acknowledgeOnCheckpoint = new AcknowledgeOnCheckpoint<>(mockedAcknowledger);\n\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId\");\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId2\");\n\n\t\tList<AcknowledgeIdsForCheckpoint<String>> actual = acknowledgeOnCheckpoint.snapshotState(2, 100);\n\n\t\tassertThat(actual.get(0).getCheckpointId(), is(2L));\n\t\tassertThat(actual.get(0).getAcknowledgeIds(), containsInAnyOrder(\"ackId\", \"ackId2\"));\n\n\t\tassertThat(acknowledgeOnCheckpoint.numberOfOutstandingAcknowledgements(), is(2));\n\t}\n","date":"2019-07-05 20:44:52","endLine":111,"groupId":"51551","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddMultipleAcknowledgeIds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/80/113cbb411062e3db3eea18de88272a2179ce3e.src","preCode":"\tpublic void testAddMultipleAcknowledgeIds() throws Exception {\n\t\tAcknowledgeOnCheckpoint<String> acknowledgeOnCheckpoint = new AcknowledgeOnCheckpoint<>(mockedAcknowledger);\n\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId\");\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId2\");\n\n\t\tList<AcknowledgeIdsForCheckpoint<String>> actual = acknowledgeOnCheckpoint.snapshotState(2, 100);\n\n\t\tassertThat(actual.get(0).getCheckpointId(), is(2L));\n\t\tassertThat(actual.get(0).getAcknowledgeIds(), containsInAnyOrder(\"ackId\", \"ackId2\"));\n\n\t\tassertThat(acknowledgeOnCheckpoint.numberOfOutstandingAcknowledgements(), is(2));\n\t}\n","realPath":"flink-connectors/flink-connector-gcp-pubsub/src/test/java/org/apache/flink/streaming/connectors/gcp/pubsub/common/AcknowledgeOnCheckpointTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"}],"commitId":"cc101de77fee1962907daf2b9f78c5c5a105bfc5","commitMessage":"@@@[FLINK-9311] [pubsub] Clean up / add documentation and style issues in the PubSub connector\n","date":"2019-07-05 20:44:52","modifiedFileCount":"0","status":"B","submitter":"Richard Deurwaarder"},{"authorTime":"2020-07-08 19:13:11","codes":[{"authorDate":"2020-07-08 19:13:11","commitOrder":2,"curCode":"\tpublic void testAddAcknowledgeIdOnEmptyState() {\n\t\tAcknowledgeOnCheckpoint<String> acknowledgeOnCheckpoint = new AcknowledgeOnCheckpoint<>(mockedAcknowledger);\n\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId\");\n\n\t\tList<AcknowledgeIdsForCheckpoint<String>> actual = acknowledgeOnCheckpoint.snapshotState(2, 100);\n\n\t\tassertThat(actual.get(0).getCheckpointId(), is(2L));\n\t\tassertThat(actual.get(0).getAcknowledgeIds(), containsInAnyOrder(\"ackId\"));\n\n\t\tassertThat(acknowledgeOnCheckpoint.numberOfOutstandingAcknowledgements(), is(1));\n\t}\n","date":"2020-07-23 23:21:09","endLine":74,"groupId":"101149","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddAcknowledgeIdOnEmptyState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/82/9f9cc46839edf7f5157e099548c2c946323309.src","preCode":"\tpublic void testAddAcknowledgeIdOnEmptyState() throws Exception {\n\t\tAcknowledgeOnCheckpoint<String> acknowledgeOnCheckpoint = new AcknowledgeOnCheckpoint<>(mockedAcknowledger);\n\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId\");\n\n\t\tList<AcknowledgeIdsForCheckpoint<String>> actual = acknowledgeOnCheckpoint.snapshotState(2, 100);\n\n\t\tassertThat(actual.get(0).getCheckpointId(), is(2L));\n\t\tassertThat(actual.get(0).getAcknowledgeIds(), containsInAnyOrder(\"ackId\"));\n\n\t\tassertThat(acknowledgeOnCheckpoint.numberOfOutstandingAcknowledgements(), is(1));\n\t}\n","realPath":"flink-connectors/flink-connector-gcp-pubsub/src/test/java/org/apache/flink/streaming/connectors/gcp/pubsub/common/AcknowledgeOnCheckpointTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-07-08 19:13:11","commitOrder":2,"curCode":"\tpublic void testAddMultipleAcknowledgeIds() {\n\t\tAcknowledgeOnCheckpoint<String> acknowledgeOnCheckpoint = new AcknowledgeOnCheckpoint<>(mockedAcknowledger);\n\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId\");\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId2\");\n\n\t\tList<AcknowledgeIdsForCheckpoint<String>> actual = acknowledgeOnCheckpoint.snapshotState(2, 100);\n\n\t\tassertThat(actual.get(0).getCheckpointId(), is(2L));\n\t\tassertThat(actual.get(0).getAcknowledgeIds(), containsInAnyOrder(\"ackId\", \"ackId2\"));\n\n\t\tassertThat(acknowledgeOnCheckpoint.numberOfOutstandingAcknowledgements(), is(2));\n\t}\n","date":"2020-07-23 23:21:09","endLine":111,"groupId":"101149","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddMultipleAcknowledgeIds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/82/9f9cc46839edf7f5157e099548c2c946323309.src","preCode":"\tpublic void testAddMultipleAcknowledgeIds() throws Exception {\n\t\tAcknowledgeOnCheckpoint<String> acknowledgeOnCheckpoint = new AcknowledgeOnCheckpoint<>(mockedAcknowledger);\n\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId\");\n\t\tacknowledgeOnCheckpoint.addAcknowledgeId(\"ackId2\");\n\n\t\tList<AcknowledgeIdsForCheckpoint<String>> actual = acknowledgeOnCheckpoint.snapshotState(2, 100);\n\n\t\tassertThat(actual.get(0).getCheckpointId(), is(2L));\n\t\tassertThat(actual.get(0).getAcknowledgeIds(), containsInAnyOrder(\"ackId\", \"ackId2\"));\n\n\t\tassertThat(acknowledgeOnCheckpoint.numberOfOutstandingAcknowledgements(), is(2));\n\t}\n","realPath":"flink-connectors/flink-connector-gcp-pubsub/src/test/java/org/apache/flink/streaming/connectors/gcp/pubsub/common/AcknowledgeOnCheckpointTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"fdcaa46f6047b53e7b6616be21c26967c0f8ade7","commitMessage":"@@@[FLINK-18448][pubsub] Update Google Cloud PubSub dependencies\n\nThis closes #12846\n","date":"2020-07-23 23:21:09","modifiedFileCount":"12","status":"M","submitter":"Niels Basjes"}]
