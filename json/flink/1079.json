[{"authorTime":"2018-06-12 23:24:20","codes":[{"authorDate":"2018-06-12 23:24:20","commitOrder":3,"curCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\n\t\t\tif (valueBytes == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tByteArrayInputStream bais = new ByteArrayInputStream(valueBytes);\n\t\t\tDataInputViewStreamWrapper in = new DataInputViewStreamWrapper(bais);\n\n\t\t\tList<V> result = new ArrayList<>();\n\t\t\twhile (in.available() > 0) {\n\t\t\t\tresult.add(elementSerializer.deserialize(in));\n\t\t\t\tif (in.available() > 0) {\n\t\t\t\t\tin.readByte();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-06-14 17:40:16","endLine":128,"groupId":"39921","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3b/273166e844eb71362469f1331694f05bef8c16.src","preCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\n\t\t\tif (valueBytes == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tByteArrayInputStream bais = new ByteArrayInputStream(valueBytes);\n\t\t\tDataInputViewStreamWrapper in = new DataInputViewStreamWrapper(bais);\n\n\t\t\tList<V> result = new ArrayList<>();\n\t\t\twhile (in.available() > 0) {\n\t\t\t\tresult.add(elementSerializer.deserialize(in));\n\t\t\t\tif (in.available() > 0) {\n\t\t\t\t\tin.readByte();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"},{"authorDate":"2018-06-12 23:24:20","commitOrder":3,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\t\r\n\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tbyte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-06-14 17:40:16","endLine":183,"groupId":"36945","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3b/273166e844eb71362469f1331694f05bef8c16.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\t\r\n\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tbyte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"MB"}],"commitId":"09fbf23f5d0e63877670ae00787dc33be3e53402","commitMessage":"@@@[FLINK-9572] Extend InternalAppendingState with internal stored state access\n\nThis closes #6156.\n","date":"2018-06-14 17:40:16","modifiedFileCount":"17","status":"M","submitter":"Andrey Zagrebin"},{"authorTime":"2018-06-12 23:24:20","codes":[{"authorDate":"2018-08-04 00:18:07","commitOrder":4,"curCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\t\t\treturn deserializeList(valueBytes, elementSerializer);\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-08-04 01:40:24","endLine":125,"groupId":"42376","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/17/6f48cda98668eb5b583aa2c8bfd42886c1e401.src","preCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\n\t\t\tif (valueBytes == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tByteArrayInputStream bais = new ByteArrayInputStream(valueBytes);\n\t\t\tDataInputViewStreamWrapper in = new DataInputViewStreamWrapper(bais);\n\n\t\t\tList<V> result = new ArrayList<>();\n\t\t\twhile (in.available() > 0) {\n\t\t\t\tresult.add(elementSerializer.deserialize(in));\n\t\t\t\tif (in.available() > 0) {\n\t\t\t\t\tin.readByte();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2018-06-12 23:24:20","commitOrder":4,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\t\r\n\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tbyte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-06-14 17:40:16","endLine":183,"groupId":"36945","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3b/273166e844eb71362469f1331694f05bef8c16.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\t\r\n\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tbyte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"N"}],"commitId":"ce96c409148d1a9bc40f581e13900818b5f11f6a","commitMessage":"@@@[FLINK-9938][state] Clean up full snapshot from expired state with TTL\n\nThis closes #6460.\n","date":"2018-08-04 01:40:24","modifiedFileCount":"28","status":"M","submitter":"Andrey Zagrebin"},{"authorTime":"2018-08-11 02:06:58","codes":[{"authorDate":"2018-08-11 02:06:58","commitOrder":5,"curCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = dataOutputView.toByteArray();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\t\t\treturn deserializeList(valueBytes);\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-08-11 02:07:56","endLine":124,"groupId":"42376","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/cd/d7afb7d9a22ea09728137c3741e85509156f09.src","preCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\t\t\treturn deserializeList(valueBytes, elementSerializer);\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2018-08-11 02:06:58","commitOrder":5,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\t\r\n\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\t\t\tfinal byte[] targetKey = dataOutputView.toByteArray();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tbyte[] sourceKey = dataOutputView.toByteArray();\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-08-11 02:07:56","endLine":205,"groupId":"36945","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/cd/d7afb7d9a22ea09728137c3741e85509156f09.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\t\r\n\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tbyte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"18ff4ab8e55d76522f835cc683f57252b3f742bc","commitMessage":"@@@[FLINK-10124][state] Use ByteArrayDataInput/OutputView instead of stream + wrapper\n","date":"2018-08-11 02:07:56","modifiedFileCount":"12","status":"M","submitter":"Stefan Richter"},{"authorTime":"2018-08-22 19:31:49","codes":[{"authorDate":"2018-08-22 19:31:49","commitOrder":6,"curCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = dataOutputView.getCopyOfBuffer();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\t\t\treturn deserializeList(valueBytes);\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-08-22 19:33:25","endLine":123,"groupId":"42376","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f7/0c6a57bad607c2c07f0f347ed31038fb4fcffd.src","preCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = dataOutputView.toByteArray();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\t\t\treturn deserializeList(valueBytes);\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2018-08-22 19:31:49","commitOrder":6,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\t\r\n\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\t\t\tfinal byte[] targetKey = dataOutputView.getCopyOfBuffer();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tbyte[] sourceKey = dataOutputView.getCopyOfBuffer();\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-08-22 19:33:25","endLine":204,"groupId":"36945","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f7/0c6a57bad607c2c07f0f347ed31038fb4fcffd.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\t\r\n\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\t\t\tfinal byte[] targetKey = dataOutputView.toByteArray();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tbyte[] sourceKey = dataOutputView.toByteArray();\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"3fd6587208a16940eab327ed37fa4e23d0b7eb62","commitMessage":"@@@[FLINK-10176][state] Replace ByteArrayData[Input|Output]View with (enhanced) Data[Output|InputDe]Serializer\n\nThis closes #6583.\n","date":"2018-08-22 19:33:25","modifiedFileCount":"20","status":"M","submitter":"Stefan Richter"},{"authorTime":"2018-11-27 13:51:29","codes":[{"authorDate":"2018-08-22 19:31:49","commitOrder":7,"curCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = dataOutputView.getCopyOfBuffer();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\t\t\treturn deserializeList(valueBytes);\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-08-22 19:33:25","endLine":123,"groupId":"42376","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f7/0c6a57bad607c2c07f0f347ed31038fb4fcffd.src","preCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = dataOutputView.getCopyOfBuffer();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\t\t\treturn deserializeList(valueBytes);\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"N"},{"authorDate":"2018-11-27 13:51:29","commitOrder":7,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t\r\n\t\t\tsetCurrentNamespace(target);\n\t\t\tfinal byte[] targetKey = serializeCurrentKeyWithGroupAndNamespace();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\tsetCurrentNamespace(source);\n\t\t\t\t\tfinal byte[] sourceKey = serializeCurrentKeyWithGroupAndNamespace();\n\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2019-01-07 19:59:38","endLine":202,"groupId":"37081","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/13/f5559405e8bf856830a0009e0434ee3a66dc6e.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\t\r\n\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\t\t\tfinal byte[] targetKey = dataOutputView.getCopyOfBuffer();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tbyte[] sourceKey = dataOutputView.getCopyOfBuffer();\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"}],"commitId":"54ef382439b1687a645a377a5f6a095746423109","commitMessage":"@@@[FLINK-9702] Improvement in (de)serialization of keys and values for RocksDB state\n\nThis closes #7288.\n\nCo-authored-by: Stefan Richter <s.richter@data-artisans.com>\nCo-authored-by: klion26 <qcx978132955@gmail.com>\n","date":"2019-01-07 19:59:38","modifiedFileCount":"10","status":"M","submitter":"Stefan Richter"},{"authorTime":"2019-12-03 01:10:05","codes":[{"authorDate":"2018-08-22 19:31:49","commitOrder":8,"curCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = dataOutputView.getCopyOfBuffer();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\t\t\treturn deserializeList(valueBytes);\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-08-22 19:33:25","endLine":123,"groupId":"42376","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f7/0c6a57bad607c2c07f0f347ed31038fb4fcffd.src","preCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = dataOutputView.getCopyOfBuffer();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\t\t\treturn deserializeList(valueBytes);\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"N"},{"authorDate":"2019-12-03 01:10:05","commitOrder":8,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t\r\n\t\t\tsetCurrentNamespace(target);\n\t\t\tfinal byte[] targetKey = serializeCurrentKeyWithGroupAndNamespace();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\tsetCurrentNamespace(source);\n\t\t\t\t\tfinal byte[] sourceKey = serializeCurrentKeyWithGroupAndNamespace();\n\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2019-12-04 22:06:04","endLine":201,"groupId":"21145","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/96/527a07671889160dfc9384789d891c40a9227d.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t\r\n\t\t\tsetCurrentNamespace(target);\n\t\t\tfinal byte[] targetKey = serializeCurrentKeyWithGroupAndNamespace();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\tsetCurrentNamespace(source);\n\t\t\t\t\tfinal byte[] sourceKey = serializeCurrentKeyWithGroupAndNamespace();\n\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"e041d51fc9ca6f2f97ce006622338b7518941a65","commitMessage":"@@@[FLINK-14997][state-backends] Avoid unnecessary delete() calls in RocksDBState's mergeNamespaces implementation\n\nThis helps to improve the performance after the changed from FLINK-7700.\n\nThis closes #10383\n","date":"2019-12-04 22:06:04","modifiedFileCount":"3","status":"M","submitter":"Yun Tang"},{"authorTime":"2019-12-03 01:10:05","codes":[{"authorDate":"2021-01-28 21:04:06","commitOrder":9,"curCode":"    public List<V> getInternal() {\n        try {\n            byte[] key = serializeCurrentKeyWithGroupAndNamespace();\n            byte[] valueBytes = backend.db.get(columnFamily, key);\n            return listSerializer.deserializeList(valueBytes, elementSerializer);\n        } catch (RocksDBException e) {\n            throw new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n        }\n    }\n","date":"2021-02-06 01:38:46","endLine":124,"groupId":"1079","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getInternal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8b/cecc71a6aef9dd92604e75f484817db6b274c8.src","preCode":"\tpublic List<V> getInternal() {\n\t\ttry {\n\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\tbyte[] key = dataOutputView.getCopyOfBuffer();\n\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, key);\n\t\t\treturn deserializeList(valueBytes);\n\t\t} catch (IOException | RocksDBException e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while retrieving data from RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2019-12-03 01:10:05","commitOrder":9,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t\r\n\t\t\tsetCurrentNamespace(target);\n\t\t\tfinal byte[] targetKey = serializeCurrentKeyWithGroupAndNamespace();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\tsetCurrentNamespace(source);\n\t\t\t\t\tfinal byte[] sourceKey = serializeCurrentKeyWithGroupAndNamespace();\n\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2019-12-04 22:06:04","endLine":201,"groupId":"1079","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/96/527a07671889160dfc9384789d891c40a9227d.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t\r\n\t\t\tsetCurrentNamespace(target);\n\t\t\tfinal byte[] targetKey = serializeCurrentKeyWithGroupAndNamespace();\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\tsetCurrentNamespace(source);\n\t\t\t\t\tfinal byte[] sourceKey = serializeCurrentKeyWithGroupAndNamespace();\n\n\t\t\t\t\tbyte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\t\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, targetKey, valueBytes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"N"}],"commitId":"aae75bfe3cc16c56aa3a35b21b3698cbf7d7d209","commitMessage":"@@@[refactor] Extract common logic for serializing delimited list\n","date":"2021-02-06 01:38:46","modifiedFileCount":"2","status":"M","submitter":"Dawid Wysakowicz"}]
