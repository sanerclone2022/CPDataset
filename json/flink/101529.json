[{"authorTime":"2016-09-20 20:45:01","codes":[{"authorDate":"2016-09-20 20:45:01","commitOrder":1,"curCode":"\t\tpublic void processElement(StreamRecord<String> element) throws Exception {\n\t\t\tif (!semaphore.tryAcquire()) {\n\t\t\t\tAssert.fail(\"Concurrent invocation of operator functions.\");\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\tgetTimerService().registerTimer(System.currentTimeMillis() + 100, this);\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\tnumElements++;\n\t\t\t\n\t\t\tsemaphore.release();\n\t\t}\n","date":"2016-09-23 21:01:06","endLine":201,"groupId":"25922","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"processElement","params":"(StreamRecord<String>element)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/70/7ce0f75ef8c2bf5e1fd940c70070d7631d70d2.src","preCode":"\t\tpublic void processElement(StreamRecord<String> element) throws Exception {\n\t\t\tif (!semaphore.tryAcquire()) {\n\t\t\t\tAssert.fail(\"Concurrent invocation of operator functions.\");\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\tgetTimerService().registerTimer(System.currentTimeMillis() + 100, this);\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\tnumElements++;\n\t\t\t\n\t\t\tsemaphore.release();\n\t\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/streaming/runtime/StreamTaskTimerITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"B"},{"authorDate":"2016-09-20 20:45:01","commitOrder":1,"curCode":"\t\tpublic void processElement2(StreamRecord<String> element) throws Exception {\n\t\t\tif (!semaphore.tryAcquire()) {\n\t\t\t\tAssert.fail(\"Concurrent invocation of operator functions.\");\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\tgetTimerService().registerTimer(System.currentTimeMillis() + 100, this);\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\tnumElements++;\n\n\t\t\tsemaphore.release();\n\t\t}\n","date":"2016-09-23 21:01:06","endLine":275,"groupId":"25922","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"processElement2","params":"(StreamRecord<String>element)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/70/7ce0f75ef8c2bf5e1fd940c70070d7631d70d2.src","preCode":"\t\tpublic void processElement2(StreamRecord<String> element) throws Exception {\n\t\t\tif (!semaphore.tryAcquire()) {\n\t\t\t\tAssert.fail(\"Concurrent invocation of operator functions.\");\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\tgetTimerService().registerTimer(System.currentTimeMillis() + 100, this);\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\tnumElements++;\n\n\t\t\tsemaphore.release();\n\t\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/streaming/runtime/StreamTaskTimerITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"B"}],"commitId":"ffff2997a5c82386a6428744f39b808a3fb49538","commitMessage":"@@@[FLINK-4494] Expose the TimeServiceProvider from the Task to each Operator.\n","date":"2016-09-23 21:01:06","modifiedFileCount":"20","status":"B","submitter":"kl0u"},{"authorTime":"2016-09-26 02:58:16","codes":[{"authorDate":"2016-09-26 02:58:16","commitOrder":2,"curCode":"\t\tpublic void processElement(StreamRecord<String> element) throws Exception {\n\t\t\tif (!semaphore.tryAcquire()) {\n\t\t\t\tAssert.fail(\"Concurrent invocation of operator functions.\");\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\tgetProcessingTimeService().registerTimer(System.currentTimeMillis() + 100, this);\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\tnumElements++;\n\t\t\t\n\t\t\tsemaphore.release();\n\t\t}\n","date":"2016-10-22 01:03:04","endLine":201,"groupId":"101529","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"processElement","params":"(StreamRecord<String>element)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e7/f62fd996ee81014aa88afefc7b99fed6304cb0.src","preCode":"\t\tpublic void processElement(StreamRecord<String> element) throws Exception {\n\t\t\tif (!semaphore.tryAcquire()) {\n\t\t\t\tAssert.fail(\"Concurrent invocation of operator functions.\");\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\tgetTimerService().registerTimer(System.currentTimeMillis() + 100, this);\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\tnumElements++;\n\t\t\t\n\t\t\tsemaphore.release();\n\t\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/streaming/runtime/StreamTaskTimerITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"},{"authorDate":"2016-09-26 02:58:16","commitOrder":2,"curCode":"\t\tpublic void processElement2(StreamRecord<String> element) throws Exception {\n\t\t\tif (!semaphore.tryAcquire()) {\n\t\t\t\tAssert.fail(\"Concurrent invocation of operator functions.\");\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\tgetProcessingTimeService().registerTimer(System.currentTimeMillis() + 100, this);\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\tnumElements++;\n\n\t\t\tsemaphore.release();\n\t\t}\n","date":"2016-10-22 01:03:04","endLine":275,"groupId":"101529","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"processElement2","params":"(StreamRecord<String>element)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e7/f62fd996ee81014aa88afefc7b99fed6304cb0.src","preCode":"\t\tpublic void processElement2(StreamRecord<String> element) throws Exception {\n\t\t\tif (!semaphore.tryAcquire()) {\n\t\t\t\tAssert.fail(\"Concurrent invocation of operator functions.\");\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\tgetTimerService().registerTimer(System.currentTimeMillis() + 100, this);\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\tnumElements++;\n\n\t\t\tsemaphore.release();\n\t\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/streaming/runtime/StreamTaskTimerITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"M"}],"commitId":"e112a63208006b4e348d75f3df84d2fd4b091797","commitMessage":"@@@[FLINK-4877] Rename TimeServiceProvider to ProcessingTimeService\n\nThe name is clashing with the soon-to-be-added\nTimerService/InternalTimerService which is meant as an interface for\ndealing with both processing time and event time.\n\nTimeServiceProvider is renamed to ProcessingTimeService to reflect the\nfact that it is a low-level utility that only deals with \"physical\"\nprocessing-time trigger tasks.\n","date":"2016-10-22 01:03:04","modifiedFileCount":"29","status":"M","submitter":"Aljoscha Krettek"}]
