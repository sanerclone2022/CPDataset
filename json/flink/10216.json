[{"authorTime":"2020-10-23 15:58:17","codes":[{"authorDate":"2020-10-23 15:58:17","commitOrder":2,"curCode":"\tpublic void testMissingStartupTimestamp() {\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expect(containsCause(new ValidationException(\"'scan.startup.timestamp-millis' \"\n\t\t\t\t+ \"is required in 'timestamp' startup mode but missing.\")));\n\n\t\tfinal Map<String, String> modifiedOptions = getModifiedOptions(\n\t\t\t\tgetBasicSourceOptions(),\n\t\t\t\toptions -> options.put(\"scan.startup.mode\", \"timestamp\"));\n\n\t\tcreateTableSource(modifiedOptions);\n\t}\n","date":"2020-11-03 13:24:13","endLine":383,"groupId":"29888","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMissingStartupTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a7/618b11355839aa86de4b07e6187bb5c143cf36.src","preCode":"\tpublic void testMissingStartupTimestamp() {\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expect(containsCause(new ValidationException(\"'scan.startup.timestamp-millis' \"\n\t\t\t\t+ \"is required in 'timestamp' startup mode but missing.\")));\n\n\t\tfinal Map<String, String> modifiedOptions = getModifiedOptions(\n\t\t\t\tgetBasicSourceOptions(),\n\t\t\t\toptions -> options.put(\"scan.startup.mode\", \"timestamp\"));\n\n\t\tcreateTableSource(modifiedOptions);\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":373,"status":"MB"},{"authorDate":"2020-10-23 15:58:17","commitOrder":2,"curCode":"\tpublic void testMissingSpecificOffsets() {\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expect(containsCause(new ValidationException(\"'scan.startup.specific-offsets' \"\n\t\t\t\t+ \"is required in 'specific-offsets' startup mode but missing.\")));\n\n\t\tfinal Map<String, String> modifiedOptions = getModifiedOptions(\n\t\t\t\tgetBasicSourceOptions(),\n\t\t\t\toptions -> options.remove(\"scan.startup.specific-offsets\"));\n\n\t\tcreateTableSource(modifiedOptions);\n\t}\n","date":"2020-11-03 13:24:13","endLine":396,"groupId":"29888","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMissingSpecificOffsets","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a7/618b11355839aa86de4b07e6187bb5c143cf36.src","preCode":"\tpublic void testMissingSpecificOffsets() {\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expect(containsCause(new ValidationException(\"'scan.startup.specific-offsets' \"\n\t\t\t\t+ \"is required in 'specific-offsets' startup mode but missing.\")));\n\n\t\tfinal Map<String, String> modifiedOptions = getModifiedOptions(\n\t\t\t\tgetBasicSourceOptions(),\n\t\t\t\toptions -> options.remove(\"scan.startup.specific-offsets\"));\n\n\t\tcreateTableSource(modifiedOptions);\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"MB"}],"commitId":"59d2a2dd9c4ade641793fecc9c2084a2b6c0a0e1","commitMessage":"@@@[FLINK-19294][connector-kafka] Support key/value formats in Kafka table source and sinks\n\nThis closes #13862\n","date":"2020-11-03 13:24:13","modifiedFileCount":"13","status":"M","submitter":"Timo Walther"},{"authorTime":"2020-11-04 23:21:07","codes":[{"authorDate":"2020-11-04 23:21:07","commitOrder":3,"curCode":"\tpublic void testMissingStartupTimestamp() {\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expect(containsCause(new ValidationException(\"'scan.startup.timestamp-millis' \"\n\t\t\t\t+ \"is required in 'timestamp' startup mode but missing.\")));\n\n\t\tfinal Map<String, String> modifiedOptions = getModifiedOptions(\n\t\t\t\tgetBasicSourceOptions(),\n\t\t\t\toptions -> options.put(\"scan.startup.mode\", \"timestamp\"));\n\n\t\tcreateTableSource(SCHEMA, modifiedOptions);\n\t}\n","date":"2020-11-05 21:08:28","endLine":386,"groupId":"10216","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMissingStartupTimestamp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/48/e2fc7cf65f20a425b7ea3c34eaab089a26163d.src","preCode":"\tpublic void testMissingStartupTimestamp() {\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expect(containsCause(new ValidationException(\"'scan.startup.timestamp-millis' \"\n\t\t\t\t+ \"is required in 'timestamp' startup mode but missing.\")));\n\n\t\tfinal Map<String, String> modifiedOptions = getModifiedOptions(\n\t\t\t\tgetBasicSourceOptions(),\n\t\t\t\toptions -> options.put(\"scan.startup.mode\", \"timestamp\"));\n\n\t\tcreateTableSource(modifiedOptions);\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":376,"status":"M"},{"authorDate":"2020-11-04 23:21:07","commitOrder":3,"curCode":"\tpublic void testMissingSpecificOffsets() {\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expect(containsCause(new ValidationException(\"'scan.startup.specific-offsets' \"\n\t\t\t\t+ \"is required in 'specific-offsets' startup mode but missing.\")));\n\n\t\tfinal Map<String, String> modifiedOptions = getModifiedOptions(\n\t\t\t\tgetBasicSourceOptions(),\n\t\t\t\toptions -> options.remove(\"scan.startup.specific-offsets\"));\n\n\t\tcreateTableSource(SCHEMA, modifiedOptions);\n\t}\n","date":"2020-11-05 21:08:28","endLine":399,"groupId":"10216","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMissingSpecificOffsets","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/48/e2fc7cf65f20a425b7ea3c34eaab089a26163d.src","preCode":"\tpublic void testMissingSpecificOffsets() {\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expect(containsCause(new ValidationException(\"'scan.startup.specific-offsets' \"\n\t\t\t\t+ \"is required in 'specific-offsets' startup mode but missing.\")));\n\n\t\tfinal Map<String, String> modifiedOptions = getModifiedOptions(\n\t\t\t\tgetBasicSourceOptions(),\n\t\t\t\toptions -> options.remove(\"scan.startup.specific-offsets\"));\n\n\t\tcreateTableSource(modifiedOptions);\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"M"}],"commitId":"37fe82469b08eaa0b585fda19f893270bfa95ba4","commitMessage":"@@@[hotfix][kafka] Disallow primary key on insert-only kafka table\n","date":"2020-11-05 21:08:28","modifiedFileCount":"2","status":"M","submitter":"Jark Wu"}]
