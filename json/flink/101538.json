[{"authorTime":"2015-05-27 17:27:56","codes":[{"authorDate":"2015-05-27 17:27:56","commitOrder":1,"curCode":"\tprivate File generateFileWithStrings(int numStrings, String prefix) throws IOException {\n\t\tfinal Random rnd = new Random(SEED);\n\t\t\n\t\tfinal StringBuilder bld = new StringBuilder();\n\t\tfinal int resetValue = prefix.length();\n\t\t\n\t\tbld.append(prefix);\n\t\t\n\t\tFile f = File.createTempFile(\"strings\", \"txt\");\n\t\tBufferedWriter wrt = null;\n\t\ttry {\n\t\t\twrt = new BufferedWriter(new FileWriter(f));\n\t\t\n\t\t\tfor (int i = 0 ; i < numStrings; i++) {\n\t\t\t\tbld.setLength(resetValue);\n\t\t\t\t\n\t\t\t\tint len = rnd.nextInt(20) + 300;\n\t\t\t\tfor (int k = 0; k < len; k++) {\n\t\t\t\t\tchar c = (char) (rnd.nextInt(80) + 40);\n\t\t\t\t\tbld.append(c);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tString str = bld.toString();\n\t\t\t\twrt.write(str);\n\t\t\t\twrt.newLine();\n\t\t\t}\n\t\t} finally {\n\t\t\twrt.close();\n\t\t}\n\t\t\n\t\treturn f;\n\t}\n","date":"2015-05-27 22:36:02","endLine":355,"groupId":"33629","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"generateFileWithStrings","params":"(intnumStrings@Stringprefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/bc/65ab929c4006551d384d79dfc5f5a96cfb6b81.src","preCode":"\tprivate File generateFileWithStrings(int numStrings, String prefix) throws IOException {\n\t\tfinal Random rnd = new Random(SEED);\n\t\t\n\t\tfinal StringBuilder bld = new StringBuilder();\n\t\tfinal int resetValue = prefix.length();\n\t\t\n\t\tbld.append(prefix);\n\t\t\n\t\tFile f = File.createTempFile(\"strings\", \"txt\");\n\t\tBufferedWriter wrt = null;\n\t\ttry {\n\t\t\twrt = new BufferedWriter(new FileWriter(f));\n\t\t\n\t\t\tfor (int i = 0 ; i < numStrings; i++) {\n\t\t\t\tbld.setLength(resetValue);\n\t\t\t\t\n\t\t\t\tint len = rnd.nextInt(20) + 300;\n\t\t\t\tfor (int k = 0; k < len; k++) {\n\t\t\t\t\tchar c = (char) (rnd.nextInt(80) + 40);\n\t\t\t\t\tbld.append(c);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tString str = bld.toString();\n\t\t\t\twrt.write(str);\n\t\t\t\twrt.newLine();\n\t\t\t}\n\t\t} finally {\n\t\t\twrt.close();\n\t\t}\n\t\t\n\t\treturn f;\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/manual/MassiveStringValueSorting.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":324,"status":"B"},{"authorDate":"2015-05-27 17:27:56","commitOrder":1,"curCode":"\tprivate File generateFileWithStrings(int numStrings, String prefix) throws IOException {\n\t\tfinal Random rnd = new Random(SEED);\n\t\t\n\t\tfinal StringBuilder bld = new StringBuilder();\n\t\tfinal int resetValue = prefix.length();\n\t\t\n\t\tbld.append(prefix);\n\t\t\n\t\tFile f = File.createTempFile(\"strings\", \"txt\");\n\t\tBufferedWriter wrt = null;\n\t\ttry {\n\t\t\twrt = new BufferedWriter(new FileWriter(f));\n\t\t\n\t\t\tfor (int i = 0 ; i < numStrings; i++) {\n\t\t\t\tbld.setLength(resetValue);\n\t\t\t\t\n\t\t\t\tint len = rnd.nextInt(20) + 300;\n\t\t\t\tfor (int k = 0; k < len; k++) {\n\t\t\t\t\tchar c = (char) (rnd.nextInt(80) + 40);\n\t\t\t\t\tbld.append(c);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tString str = bld.toString();\n\t\t\t\twrt.write(str);\n\t\t\t\twrt.newLine();\n\t\t\t}\n\t\t} finally {\n\t\t\twrt.close();\n\t\t}\n\t\t\n\t\treturn f;\n\t}\n","date":"2015-05-27 22:36:02","endLine":343,"groupId":"33629","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"generateFileWithStrings","params":"(intnumStrings@Stringprefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2d/a29e8c4787fe6648a6a14b937fe649a0f444e2.src","preCode":"\tprivate File generateFileWithStrings(int numStrings, String prefix) throws IOException {\n\t\tfinal Random rnd = new Random(SEED);\n\t\t\n\t\tfinal StringBuilder bld = new StringBuilder();\n\t\tfinal int resetValue = prefix.length();\n\t\t\n\t\tbld.append(prefix);\n\t\t\n\t\tFile f = File.createTempFile(\"strings\", \"txt\");\n\t\tBufferedWriter wrt = null;\n\t\ttry {\n\t\t\twrt = new BufferedWriter(new FileWriter(f));\n\t\t\n\t\t\tfor (int i = 0 ; i < numStrings; i++) {\n\t\t\t\tbld.setLength(resetValue);\n\t\t\t\t\n\t\t\t\tint len = rnd.nextInt(20) + 300;\n\t\t\t\tfor (int k = 0; k < len; k++) {\n\t\t\t\t\tchar c = (char) (rnd.nextInt(80) + 40);\n\t\t\t\t\tbld.append(c);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tString str = bld.toString();\n\t\t\t\twrt.write(str);\n\t\t\t\twrt.newLine();\n\t\t\t}\n\t\t} finally {\n\t\t\twrt.close();\n\t\t}\n\t\t\n\t\treturn f;\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/manual/MassiveStringSorting.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":312,"status":"B"}],"commitId":"3061eb126a69319a4ad45995f66f98c58dc23fdc","commitMessage":"@@@[tests] Consolidate manually triggered tests into a dedicated package\n","date":"2015-05-27 22:36:02","modifiedFileCount":"0","status":"B","submitter":"Stephan Ewen"},{"authorTime":"2015-05-27 17:27:56","codes":[{"authorDate":"2015-08-31 04:36:46","commitOrder":2,"curCode":"\tprivate File generateFileWithStrings(int numStrings, String prefix) throws IOException {\n\t\tfinal Random rnd = new Random(SEED);\n\t\t\n\t\tfinal StringBuilder bld = new StringBuilder();\n\t\tfinal int resetValue = prefix.length();\n\t\t\n\t\tbld.append(prefix);\n\t\t\n\t\tFile f = File.createTempFile(\"strings\", \"txt\");\n\t\tBufferedWriter wrt = null;\n\t\ttry {\n\t\t\twrt = new BufferedWriter(new FileWriter(f));\n\t\t\n\t\t\tfor (int i = 0 ; i < numStrings; i++) {\n\t\t\t\tbld.setLength(resetValue);\n\t\t\t\t\n\t\t\t\tint len = rnd.nextInt(20) + 300;\n\t\t\t\tfor (int k = 0; k < len; k++) {\n\t\t\t\t\tchar c = (char) (rnd.nextInt(80) + 40);\n\t\t\t\t\tbld.append(c);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tString str = bld.toString();\n\t\t\t\twrt.write(str);\n\t\t\t\twrt.newLine();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (wrt != null) {\n\t\t\t\twrt.close();\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn f;\n\t}\n","date":"2015-09-09 02:58:05","endLine":360,"groupId":"101538","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"generateFileWithStrings","params":"(intnumStrings@Stringprefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/7a/484e7e0ef19f511735ea7f9055808b03786b2c.src","preCode":"\tprivate File generateFileWithStrings(int numStrings, String prefix) throws IOException {\n\t\tfinal Random rnd = new Random(SEED);\n\t\t\n\t\tfinal StringBuilder bld = new StringBuilder();\n\t\tfinal int resetValue = prefix.length();\n\t\t\n\t\tbld.append(prefix);\n\t\t\n\t\tFile f = File.createTempFile(\"strings\", \"txt\");\n\t\tBufferedWriter wrt = null;\n\t\ttry {\n\t\t\twrt = new BufferedWriter(new FileWriter(f));\n\t\t\n\t\t\tfor (int i = 0 ; i < numStrings; i++) {\n\t\t\t\tbld.setLength(resetValue);\n\t\t\t\t\n\t\t\t\tint len = rnd.nextInt(20) + 300;\n\t\t\t\tfor (int k = 0; k < len; k++) {\n\t\t\t\t\tchar c = (char) (rnd.nextInt(80) + 40);\n\t\t\t\t\tbld.append(c);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tString str = bld.toString();\n\t\t\t\twrt.write(str);\n\t\t\t\twrt.newLine();\n\t\t\t}\n\t\t} finally {\n\t\t\twrt.close();\n\t\t}\n\t\t\n\t\treturn f;\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/manual/MassiveStringValueSorting.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"M"},{"authorDate":"2015-05-27 17:27:56","commitOrder":2,"curCode":"\tprivate File generateFileWithStrings(int numStrings, String prefix) throws IOException {\n\t\tfinal Random rnd = new Random(SEED);\n\t\t\n\t\tfinal StringBuilder bld = new StringBuilder();\n\t\tfinal int resetValue = prefix.length();\n\t\t\n\t\tbld.append(prefix);\n\t\t\n\t\tFile f = File.createTempFile(\"strings\", \"txt\");\n\t\tBufferedWriter wrt = null;\n\t\ttry {\n\t\t\twrt = new BufferedWriter(new FileWriter(f));\n\t\t\n\t\t\tfor (int i = 0 ; i < numStrings; i++) {\n\t\t\t\tbld.setLength(resetValue);\n\t\t\t\t\n\t\t\t\tint len = rnd.nextInt(20) + 300;\n\t\t\t\tfor (int k = 0; k < len; k++) {\n\t\t\t\t\tchar c = (char) (rnd.nextInt(80) + 40);\n\t\t\t\t\tbld.append(c);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tString str = bld.toString();\n\t\t\t\twrt.write(str);\n\t\t\t\twrt.newLine();\n\t\t\t}\n\t\t} finally {\n\t\t\twrt.close();\n\t\t}\n\t\t\n\t\treturn f;\n\t}\n","date":"2015-05-27 22:36:02","endLine":343,"groupId":"101538","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"generateFileWithStrings","params":"(intnumStrings@Stringprefix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2d/a29e8c4787fe6648a6a14b937fe649a0f444e2.src","preCode":"\tprivate File generateFileWithStrings(int numStrings, String prefix) throws IOException {\n\t\tfinal Random rnd = new Random(SEED);\n\t\t\n\t\tfinal StringBuilder bld = new StringBuilder();\n\t\tfinal int resetValue = prefix.length();\n\t\t\n\t\tbld.append(prefix);\n\t\t\n\t\tFile f = File.createTempFile(\"strings\", \"txt\");\n\t\tBufferedWriter wrt = null;\n\t\ttry {\n\t\t\twrt = new BufferedWriter(new FileWriter(f));\n\t\t\n\t\t\tfor (int i = 0 ; i < numStrings; i++) {\n\t\t\t\tbld.setLength(resetValue);\n\t\t\t\t\n\t\t\t\tint len = rnd.nextInt(20) + 300;\n\t\t\t\tfor (int k = 0; k < len; k++) {\n\t\t\t\t\tchar c = (char) (rnd.nextInt(80) + 40);\n\t\t\t\t\tbld.append(c);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tString str = bld.toString();\n\t\t\t\twrt.write(str);\n\t\t\t\twrt.newLine();\n\t\t\t}\n\t\t} finally {\n\t\t\twrt.close();\n\t\t}\n\t\t\n\t\treturn f;\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/manual/MassiveStringSorting.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":312,"status":"N"}],"commitId":"655a891d929db9d858bb5c2edf54419f2b0d3ace","commitMessage":"@@@[FLINK-1320] [core] Add an off-heap variant of the managed memory\n\nThis closes #1093\n","date":"2015-09-09 02:58:05","modifiedFileCount":"153","status":"M","submitter":"Stephan Ewen"}]
