[{"authorTime":"2020-11-05 15:18:31","codes":[{"authorDate":"2020-11-05 15:18:31","commitOrder":1,"curCode":"\tpublic void testParallelismOptions() {\n\t\tMap<String, String> options = getAllOptions();\n\t\toptions.put(\"sink.parallelism\", \"2\");\n\n\t\tTableSchema schema = TableSchema.builder()\n\t\t\t.field(ROWKEY, STRING())\n\t\t\t.build();\n\n\t\tDynamicTableSink sink = createTableSink(schema, options);\n\t\tassertTrue(sink instanceof HBaseDynamicTableSink);\n\t\tHBaseDynamicTableSink hbaseSink = (HBaseDynamicTableSink) sink;\n\t\tSinkFunctionProvider provider = (SinkFunctionProvider) hbaseSink.getSinkRuntimeProvider(\n\t\t\tnew SinkRuntimeProviderContext(false));\n\t\tassertEquals(2, (long) provider.getParallelism().get());\n\t}\n","date":"2020-11-18 22:41:48","endLine":230,"groupId":"43657","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParallelismOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0a/3e9c1cf82fb584966490960a8ae3dbea6c5936.src","preCode":"\tpublic void testParallelismOptions() {\n\t\tMap<String, String> options = getAllOptions();\n\t\toptions.put(\"sink.parallelism\", \"2\");\n\n\t\tTableSchema schema = TableSchema.builder()\n\t\t\t.field(ROWKEY, STRING())\n\t\t\t.build();\n\n\t\tDynamicTableSink sink = createTableSink(schema, options);\n\t\tassertTrue(sink instanceof HBaseDynamicTableSink);\n\t\tHBaseDynamicTableSink hbaseSink = (HBaseDynamicTableSink) sink;\n\t\tSinkFunctionProvider provider = (SinkFunctionProvider) hbaseSink.getSinkRuntimeProvider(\n\t\t\tnew SinkRuntimeProviderContext(false));\n\t\tassertEquals(2, (long) provider.getParallelism().get());\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-1.4/src/test/java/org/apache/flink/connector/hbase1/HBaseDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"B"},{"authorDate":"2020-11-05 15:18:31","commitOrder":1,"curCode":"\tpublic void testParallelismOptions() {\n\t\tMap<String, String> options = getAllOptions();\n\t\toptions.put(\"sink.parallelism\", \"2\");\n\n\t\tTableSchema schema = TableSchema.builder()\n\t\t\t.field(ROWKEY, STRING())\n\t\t\t.build();\n\n\t\tDynamicTableSink sink = createTableSink(schema, options);\n\t\tassertTrue(sink instanceof HBaseDynamicTableSink);\n\t\tHBaseDynamicTableSink hbaseSink = (HBaseDynamicTableSink) sink;\n\t\tSinkFunctionProvider provider = (SinkFunctionProvider) hbaseSink.getSinkRuntimeProvider(\n\t\t\tnew SinkRuntimeProviderContext(false));\n\t\tassertEquals(2, (long) provider.getParallelism().get());\n\t}\n","date":"2020-11-18 22:41:48","endLine":221,"groupId":"43657","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParallelismOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/6f/be542fbb56bd1edd537f8e4e5d652d5b432d30.src","preCode":"\tpublic void testParallelismOptions() {\n\t\tMap<String, String> options = getAllOptions();\n\t\toptions.put(\"sink.parallelism\", \"2\");\n\n\t\tTableSchema schema = TableSchema.builder()\n\t\t\t.field(ROWKEY, STRING())\n\t\t\t.build();\n\n\t\tDynamicTableSink sink = createTableSink(schema, options);\n\t\tassertTrue(sink instanceof HBaseDynamicTableSink);\n\t\tHBaseDynamicTableSink hbaseSink = (HBaseDynamicTableSink) sink;\n\t\tSinkFunctionProvider provider = (SinkFunctionProvider) hbaseSink.getSinkRuntimeProvider(\n\t\t\tnew SinkRuntimeProviderContext(false));\n\t\tassertEquals(2, (long) provider.getParallelism().get());\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-2.2/src/test/java/org/apache/flink/connector/hbase2/HBaseDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"B"}],"commitId":"a0398ff138351280e605e0abde3310bb19033676","commitMessage":"@@@[FLINK-19946][hbase] Add sink parallelism option for HBase connector\n\nThis closes #13933\n","date":"2020-11-18 22:41:48","modifiedFileCount":"7","status":"B","submitter":"zhuxiaoshang"},{"authorTime":"2021-03-18 19:13:17","codes":[{"authorDate":"2021-03-18 19:13:17","commitOrder":2,"curCode":"    public void testParallelismOptions() {\n        Map<String, String> options = getAllOptions();\n        options.put(\"sink.parallelism\", \"2\");\n\n        ResolvedSchema schema = ResolvedSchema.of(Column.physical(ROWKEY, STRING()));\n\n        DynamicTableSink sink = createTableSink(schema, options);\n        assertTrue(sink instanceof HBaseDynamicTableSink);\n        HBaseDynamicTableSink hbaseSink = (HBaseDynamicTableSink) sink;\n        SinkFunctionProvider provider =\n                (SinkFunctionProvider)\n                        hbaseSink.getSinkRuntimeProvider(new SinkRuntimeProviderContext(false));\n        assertEquals(2, (long) provider.getParallelism().get());\n    }\n","date":"2021-03-24 04:35:35","endLine":246,"groupId":"10758","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testParallelismOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b4/e30b0ef9f731868cb04af619ced127647ee4a9.src","preCode":"    public void testParallelismOptions() {\n        Map<String, String> options = getAllOptions();\n        options.put(\"sink.parallelism\", \"2\");\n\n        TableSchema schema = TableSchema.builder().field(ROWKEY, STRING()).build();\n\n        DynamicTableSink sink = createTableSink(schema, options);\n        assertTrue(sink instanceof HBaseDynamicTableSink);\n        HBaseDynamicTableSink hbaseSink = (HBaseDynamicTableSink) sink;\n        SinkFunctionProvider provider =\n                (SinkFunctionProvider)\n                        hbaseSink.getSinkRuntimeProvider(new SinkRuntimeProviderContext(false));\n        assertEquals(2, (long) provider.getParallelism().get());\n    }\n","realPath":"flink-connectors/flink-connector-hbase-1.4/src/test/java/org/apache/flink/connector/hbase1/HBaseDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"},{"authorDate":"2021-03-18 19:13:17","commitOrder":2,"curCode":"    public void testParallelismOptions() {\n        Map<String, String> options = getAllOptions();\n        options.put(\"sink.parallelism\", \"2\");\n\n        ResolvedSchema schema = ResolvedSchema.of(Column.physical(ROWKEY, STRING()));\n\n        DynamicTableSink sink = createTableSink(schema, options);\n        assertTrue(sink instanceof HBaseDynamicTableSink);\n        HBaseDynamicTableSink hbaseSink = (HBaseDynamicTableSink) sink;\n        SinkFunctionProvider provider =\n                (SinkFunctionProvider)\n                        hbaseSink.getSinkRuntimeProvider(new SinkRuntimeProviderContext(false));\n        assertEquals(2, (long) provider.getParallelism().get());\n    }\n","date":"2021-03-24 04:35:35","endLine":249,"groupId":"10758","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testParallelismOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/7d/0f900ab3c93f31c066c5e1f6e33610e2919d10.src","preCode":"    public void testParallelismOptions() {\n        Map<String, String> options = getAllOptions();\n        options.put(\"sink.parallelism\", \"2\");\n\n        TableSchema schema = TableSchema.builder().field(ROWKEY, STRING()).build();\n\n        DynamicTableSink sink = createTableSink(schema, options);\n        assertTrue(sink instanceof HBaseDynamicTableSink);\n        HBaseDynamicTableSink hbaseSink = (HBaseDynamicTableSink) sink;\n        SinkFunctionProvider provider =\n                (SinkFunctionProvider)\n                        hbaseSink.getSinkRuntimeProvider(new SinkRuntimeProviderContext(false));\n        assertEquals(2, (long) provider.getParallelism().get());\n    }\n","realPath":"flink-connectors/flink-connector-hbase-2.2/src/test/java/org/apache/flink/connector/hbase2/HBaseDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"}],"commitId":"73338e22bd0567169ce2636c8f9e3b87df783385","commitMessage":"@@@[FLINK-21913][table][connectors] Update DynamicTableFactory.Context to use ResolvedCatalogTable\n\nThis closes #15316.\n","date":"2021-03-24 04:35:35","modifiedFileCount":"45","status":"M","submitter":"Timo Walther"}]
