[{"authorTime":"2018-02-19 17:31:44","codes":[{"authorDate":"2018-02-19 17:31:44","commitOrder":1,"curCode":"\t\t\treturn new ColumnFamilyOptions();\n\t\t}\n\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions() {\n\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions() {\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n","date":"2018-02-20 01:37:49","endLine":96,"groupId":"2482","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ColumnFamilyOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/73/dc0be58cefeb56f15af71e36600c78010e57be.src","preCode":"\t\t\treturn new ColumnFamilyOptions();\n\t\t}\n\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions() {\n\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions() {\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/PredefinedOptions.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2018-02-19 17:31:44","commitOrder":1,"curCode":"\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED_HIGH_MEM {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions() {\n\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions() {\n\n\t\t\tfinal long blockCacheSize = 256 * 1024 * 1024;\n\t\t\tfinal long blockSize = 128 * 1024;\n\t\t\tfinal long targetFileSize = 256 * 1024 * 1024;\n\t\t\tfinal long writeBufferSize = 64 * 1024 * 1024;\n\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true)\n\t\t\t\t\t.setTargetFileSizeBase(targetFileSize)\n\t\t\t\t\t.setMaxBytesForLevelBase(4 * targetFileSize)\n\t\t\t\t\t.setWriteBufferSize(writeBufferSize)\n\t\t\t\t\t.setMinWriteBufferNumberToMerge(3)\n\t\t\t\t\t.setMaxWriteBufferNumber(4)\n\t\t\t\t\t.setTableFormatConfig(\n\t\t\t\t\t\t\tnew BlockBasedTableConfig()\n\t\t\t\t\t\t\t\t\t.setBlockCacheSize(blockCacheSize)\n\t\t\t\t\t\t\t\t\t.setBlockSize(blockSize)\n\t\t\t\t\t\t\t\t\t.setFilter(new BloomFilter())\n\t\t\t\t\t);\n\t\t}\n\t},\n","date":"2018-02-20 01:37:49","endLine":158,"groupId":"22408","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setLevelCompactionDynamicLevelBytes","params":"(true)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/73/dc0be58cefeb56f15af71e36600c78010e57be.src","preCode":"\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED_HIGH_MEM {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions() {\n\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions() {\n\n\t\t\tfinal long blockCacheSize = 256 * 1024 * 1024;\n\t\t\tfinal long blockSize = 128 * 1024;\n\t\t\tfinal long targetFileSize = 256 * 1024 * 1024;\n\t\t\tfinal long writeBufferSize = 64 * 1024 * 1024;\n\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true)\n\t\t\t\t\t.setTargetFileSizeBase(targetFileSize)\n\t\t\t\t\t.setMaxBytesForLevelBase(4 * targetFileSize)\n\t\t\t\t\t.setWriteBufferSize(writeBufferSize)\n\t\t\t\t\t.setMinWriteBufferNumberToMerge(3)\n\t\t\t\t\t.setMaxWriteBufferNumber(4)\n\t\t\t\t\t.setTableFormatConfig(\n\t\t\t\t\t\t\tnew BlockBasedTableConfig()\n\t\t\t\t\t\t\t\t\t.setBlockCacheSize(blockCacheSize)\n\t\t\t\t\t\t\t\t\t.setBlockSize(blockSize)\n\t\t\t\t\t\t\t\t\t.setFilter(new BloomFilter())\n\t\t\t\t\t);\n\t\t}\n\t},\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/PredefinedOptions.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"}],"commitId":"2f7392d77d85823d3db1f1e5a8d4f6c94358d773","commitMessage":"@@@[FLINK-8695] [rocksdb] Move flink-statebackend-rocksdb from 'flink-contrib' to 'flink-state-backends'.\n\nThis closes #5523\n","date":"2018-02-20 01:37:49","modifiedFileCount":"0","status":"B","submitter":"Stephan Ewen"},{"authorTime":"2019-12-05 17:35:44","codes":[{"authorDate":"2019-12-05 17:35:44","commitOrder":2,"curCode":"\t\t\treturn new ColumnFamilyOptions();\n\t\t}\n\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions() {\n\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1)\n\t\t\t\t\t.setInfoLogLevel(InfoLogLevel.HEADER_LEVEL)\n\t\t\t\t\t.setStatsDumpPeriodSec(0);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions() {\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n","date":"2019-12-06 20:39:30","endLine":113,"groupId":"22408","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ColumnFamilyOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/24/fde98817b5d4a6168dcb3791dc3e2825b28b10.src","preCode":"\t\t\treturn new ColumnFamilyOptions();\n\t\t}\n\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions() {\n\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions() {\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/PredefinedOptions.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2019-12-05 17:35:44","commitOrder":2,"curCode":"\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED_HIGH_MEM {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions() {\n\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1)\n\t\t\t\t\t.setInfoLogLevel(InfoLogLevel.HEADER_LEVEL)\n\t\t\t\t\t.setStatsDumpPeriodSec(0);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions() {\n\n\t\t\tfinal long blockCacheSize = 256 * 1024 * 1024;\n\t\t\tfinal long blockSize = 128 * 1024;\n\t\t\tfinal long targetFileSize = 256 * 1024 * 1024;\n\t\t\tfinal long writeBufferSize = 64 * 1024 * 1024;\n\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true)\n\t\t\t\t\t.setTargetFileSizeBase(targetFileSize)\n\t\t\t\t\t.setMaxBytesForLevelBase(4 * targetFileSize)\n\t\t\t\t\t.setWriteBufferSize(writeBufferSize)\n\t\t\t\t\t.setMinWriteBufferNumberToMerge(3)\n\t\t\t\t\t.setMaxWriteBufferNumber(4)\n\t\t\t\t\t.setTableFormatConfig(\n\t\t\t\t\t\t\tnew BlockBasedTableConfig()\n\t\t\t\t\t\t\t\t\t.setBlockCacheSize(blockCacheSize)\n\t\t\t\t\t\t\t\t\t.setBlockSize(blockSize)\n\t\t\t\t\t\t\t\t\t.setFilter(new BloomFilter())\n\t\t\t\t\t);\n\t\t}\n\t},\n","date":"2019-12-06 20:39:30","endLine":179,"groupId":"22408","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setLevelCompactionDynamicLevelBytes","params":"(true)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/24/fde98817b5d4a6168dcb3791dc3e2825b28b10.src","preCode":"\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED_HIGH_MEM {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions() {\n\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions() {\n\n\t\t\tfinal long blockCacheSize = 256 * 1024 * 1024;\n\t\t\tfinal long blockSize = 128 * 1024;\n\t\t\tfinal long targetFileSize = 256 * 1024 * 1024;\n\t\t\tfinal long writeBufferSize = 64 * 1024 * 1024;\n\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true)\n\t\t\t\t\t.setTargetFileSizeBase(targetFileSize)\n\t\t\t\t\t.setMaxBytesForLevelBase(4 * targetFileSize)\n\t\t\t\t\t.setWriteBufferSize(writeBufferSize)\n\t\t\t\t\t.setMinWriteBufferNumberToMerge(3)\n\t\t\t\t\t.setMaxWriteBufferNumber(4)\n\t\t\t\t\t.setTableFormatConfig(\n\t\t\t\t\t\t\tnew BlockBasedTableConfig()\n\t\t\t\t\t\t\t\t\t.setBlockCacheSize(blockCacheSize)\n\t\t\t\t\t\t\t\t\t.setBlockSize(blockSize)\n\t\t\t\t\t\t\t\t\t.setFilter(new BloomFilter())\n\t\t\t\t\t);\n\t\t}\n\t},\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/PredefinedOptions.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"798b22cb258579b3ef981eb444397abd7c81f291","commitMessage":"@@@[FLINK-15068][rocksdb] stop writing to RocksDB logs by default\n\nThis commit changes the default RocksDB configuration for all PredefinedOptions\nso that they use log level HEADER_LEVEL and disable periodic statistics dumps\nto the LOG file.\nPlease note that there is no need to also change\nDefaultConfigurableOptionsFactory since this is only applied after any\nPredefinedOptions.  and there is always one - at least PredefinedOptions#DEFAULT.\n\nThe problem with this file is that is will grow indefinitely until it is deleted\nwhen the job is cancelled/restarted since it lives in RocksDB's local directory.\nTherefore.  it cannot be used for troubleshooting errors. For looking into\nperformance.  metrics are probably better in the first place.\n\nNote: Theoretically.  we could even set the log level to NUM_INFO_LOG_LEVELS\nwhich even removes (most of) the headers.  but although that is working.  it is\npractically an invalid value for the log level and would be a bit hacky.\n\nThis closes #10437\n","date":"2019-12-06 20:39:30","modifiedFileCount":"1","status":"M","submitter":"Nico Kruber"},{"authorTime":"2019-12-10 18:52:59","codes":[{"authorDate":"2019-12-10 18:52:59","commitOrder":3,"curCode":"\t\t\treturn new ColumnFamilyOptions();\n\t\t}\n\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions(Collection<AutoCloseable> handlesToClose) {\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1)\n\t\t\t\t\t.setInfoLogLevel(InfoLogLevel.HEADER_LEVEL)\n\t\t\t\t\t.setStatsDumpPeriodSec(0);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions(Collection<AutoCloseable> handlesToClose) {\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n","date":"2019-12-11 21:01:21","endLine":115,"groupId":"10104","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"ColumnFamilyOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/47/c7d1286ef34f7fd411adbc89e0c5cfdf8ff696.src","preCode":"\t\t\treturn new ColumnFamilyOptions();\n\t\t}\n\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions() {\n\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1)\n\t\t\t\t\t.setInfoLogLevel(InfoLogLevel.HEADER_LEVEL)\n\t\t\t\t\t.setStatsDumpPeriodSec(0);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions() {\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/PredefinedOptions.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2019-12-10 18:52:59","commitOrder":3,"curCode":"\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED_HIGH_MEM {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions(Collection<AutoCloseable> handlesToClose) {\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1)\n\t\t\t\t\t.setInfoLogLevel(InfoLogLevel.HEADER_LEVEL)\n\t\t\t\t\t.setStatsDumpPeriodSec(0);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions(Collection<AutoCloseable> handlesToClose) {\n\n\t\t\tfinal long blockCacheSize = 256 * 1024 * 1024;\n\t\t\tfinal long blockSize = 128 * 1024;\n\t\t\tfinal long targetFileSize = 256 * 1024 * 1024;\n\t\t\tfinal long writeBufferSize = 64 * 1024 * 1024;\n\n\t\t\tBloomFilter bloomFilter = new BloomFilter();\n\t\t\thandlesToClose.add(bloomFilter);\n\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true)\n\t\t\t\t\t.setTargetFileSizeBase(targetFileSize)\n\t\t\t\t\t.setMaxBytesForLevelBase(4 * targetFileSize)\n\t\t\t\t\t.setWriteBufferSize(writeBufferSize)\n\t\t\t\t\t.setMinWriteBufferNumberToMerge(3)\n\t\t\t\t\t.setMaxWriteBufferNumber(4)\n\t\t\t\t\t.setTableFormatConfig(\n\t\t\t\t\t\t\tnew BlockBasedTableConfig()\n\t\t\t\t\t\t\t\t\t.setBlockCacheSize(blockCacheSize)\n\t\t\t\t\t\t\t\t\t.setBlockSize(blockSize)\n\t\t\t\t\t\t\t\t\t.setFilter(bloomFilter)\n\t\t\t\t\t);\n\t\t}\n\t},\n","date":"2019-12-11 21:01:21","endLine":183,"groupId":"10104","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setLevelCompactionDynamicLevelBytes","params":"(true)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/47/c7d1286ef34f7fd411adbc89e0c5cfdf8ff696.src","preCode":"\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true);\n\t\t}\n\t},\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\tSPINNING_DISK_OPTIMIZED_HIGH_MEM {\n\n\t\t@Override\n\t\tpublic DBOptions createDBOptions() {\n\n\t\t\treturn new DBOptions()\n\t\t\t\t\t.setIncreaseParallelism(4)\n\t\t\t\t\t.setUseFsync(false)\n\t\t\t\t\t.setMaxOpenFiles(-1)\n\t\t\t\t\t.setInfoLogLevel(InfoLogLevel.HEADER_LEVEL)\n\t\t\t\t\t.setStatsDumpPeriodSec(0);\n\t\t}\n\n\t\t@Override\n\t\tpublic ColumnFamilyOptions createColumnOptions() {\n\n\t\t\tfinal long blockCacheSize = 256 * 1024 * 1024;\n\t\t\tfinal long blockSize = 128 * 1024;\n\t\t\tfinal long targetFileSize = 256 * 1024 * 1024;\n\t\t\tfinal long writeBufferSize = 64 * 1024 * 1024;\n\n\t\t\treturn new ColumnFamilyOptions()\n\t\t\t\t\t.setCompactionStyle(CompactionStyle.LEVEL)\n\t\t\t\t\t.setLevelCompactionDynamicLevelBytes(true)\n\t\t\t\t\t.setTargetFileSizeBase(targetFileSize)\n\t\t\t\t\t.setMaxBytesForLevelBase(4 * targetFileSize)\n\t\t\t\t\t.setWriteBufferSize(writeBufferSize)\n\t\t\t\t\t.setMinWriteBufferNumberToMerge(3)\n\t\t\t\t\t.setMaxWriteBufferNumber(4)\n\t\t\t\t\t.setTableFormatConfig(\n\t\t\t\t\t\t\tnew BlockBasedTableConfig()\n\t\t\t\t\t\t\t\t\t.setBlockCacheSize(blockCacheSize)\n\t\t\t\t\t\t\t\t\t.setBlockSize(blockSize)\n\t\t\t\t\t\t\t\t\t.setFilter(new BloomFilter())\n\t\t\t\t\t);\n\t\t}\n\t},\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/PredefinedOptions.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"2405111bd62595e728669ad7753b1aa0be960ae6","commitMessage":"@@@[FLINK-14926][state-backend-rocksdb] (follow-up) Simplify collecton the option objects to close\n\n  - rather than letting each option factory method add the option to the list itself.  add it in one place in the Resource Container.\n  - assume the list passed to the factory methods is always non-null\n","date":"2019-12-11 21:01:21","modifiedFileCount":"2","status":"M","submitter":"Stephan Ewen"}]
