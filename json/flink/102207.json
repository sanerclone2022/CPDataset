[{"authorTime":"2019-03-05 17:45:20","codes":[{"authorDate":"2020-09-25 22:50:09","commitOrder":2,"curCode":"\tpublic JsonToRowDataConverter createRowConverter(RowType rowType) {\n\t\tfinal JsonToRowDataConverter[] fieldConverters = rowType.getFields().stream()\n\t\t\t.map(RowType.RowField::getType)\n\t\t\t.map(this::createConverter)\n\t\t\t.toArray(JsonToRowDataConverter[]::new);\n\t\tfinal String[] fieldNames = rowType.getFieldNames().toArray(new String[0]);\n\n\t\treturn jsonNode -> {\n\t\t\tObjectNode node = (ObjectNode) jsonNode;\n\t\t\tint arity = fieldNames.length;\n\t\t\tGenericRowData row = new GenericRowData(arity);\n\t\t\tfor (int i = 0; i < arity; i++) {\n\t\t\t\tString fieldName = fieldNames[i];\n\t\t\t\tJsonNode field = node.get(fieldName);\n\t\t\t\tObject convertedField = convertField(fieldConverters[i], fieldName, field);\n\t\t\t\trow.setField(i, convertedField);\n\t\t\t}\n\t\t\treturn row;\n\t\t};\n\t}\n","date":"2020-09-25 22:50:09","endLine":343,"groupId":"53084","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createRowConverter","params":"(RowTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/87/5d85effeac60c9131ad7be6f20917e4d0a52c3.src","preCode":"\tpublic JsonToRowDataConverter createRowConverter(RowType rowType) {\n\t\tfinal JsonToRowDataConverter[] fieldConverters = rowType.getFields().stream()\n\t\t\t.map(RowType.RowField::getType)\n\t\t\t.map(this::createConverter)\n\t\t\t.toArray(JsonToRowDataConverter[]::new);\n\t\tfinal String[] fieldNames = rowType.getFieldNames().toArray(new String[0]);\n\n\t\treturn jsonNode -> {\n\t\t\tObjectNode node = (ObjectNode) jsonNode;\n\t\t\tint arity = fieldNames.length;\n\t\t\tGenericRowData row = new GenericRowData(arity);\n\t\t\tfor (int i = 0; i < arity; i++) {\n\t\t\t\tString fieldName = fieldNames[i];\n\t\t\t\tJsonNode field = node.get(fieldName);\n\t\t\t\tObject convertedField = convertField(fieldConverters[i], fieldName, field);\n\t\t\t\trow.setField(i, convertedField);\n\t\t\t}\n\t\t\treturn row;\n\t\t};\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonToRowDataConverters.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":324,"status":"B"},{"authorDate":"2019-03-05 17:45:20","commitOrder":2,"curCode":"\tprivate DeserializationRuntimeConverter assembleRowConverter(\n\t\tString[] fieldNames,\n\t\tList<DeserializationRuntimeConverter> fieldConverters) {\n\t\treturn (mapper, jsonNode) -> {\n\t\t\tObjectNode node = (ObjectNode) jsonNode;\n\n\t\t\tint arity = fieldNames.length;\n\t\t\tRow row = new Row(arity);\n\t\t\tfor (int i = 0; i < arity; i++) {\n\t\t\t\tString fieldName = fieldNames[i];\n\t\t\t\tJsonNode field = node.get(fieldName);\n\t\t\t\tObject convertField = convertField(mapper, fieldConverters.get(i), fieldName, field);\n\t\t\t\trow.setField(i, convertField);\n\t\t\t}\n\n\t\t\treturn row;\n\t\t};\n\t}\n","date":"2019-07-15 20:55:28","endLine":388,"groupId":"9565","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assembleRowConverter","params":"(String[]fieldNames@List<DeserializationRuntimeConverter>fieldConverters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4a/1ff274bd394b6b0ecc3768eefcba77e5cdf800.src","preCode":"\tprivate DeserializationRuntimeConverter assembleRowConverter(\n\t\tString[] fieldNames,\n\t\tList<DeserializationRuntimeConverter> fieldConverters) {\n\t\treturn (mapper, jsonNode) -> {\n\t\t\tObjectNode node = (ObjectNode) jsonNode;\n\n\t\t\tint arity = fieldNames.length;\n\t\t\tRow row = new Row(arity);\n\t\t\tfor (int i = 0; i < arity; i++) {\n\t\t\t\tString fieldName = fieldNames[i];\n\t\t\t\tJsonNode field = node.get(fieldName);\n\t\t\t\tObject convertField = convertField(mapper, fieldConverters.get(i), fieldName, field);\n\t\t\t\trow.setField(i, convertField);\n\t\t\t}\n\n\t\t\treturn row;\n\t\t};\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"NB"}],"commitId":"ef4d997756756bf0e1e722af8a3fcd6995f37dc8","commitMessage":"@@@[FLINK-19098][json][csv] Make RowData CSV and JSON converters public\n\nThis closes #13303\n\nCo-authored-by: Jark Wu <jark@apache.org>","date":"2020-09-25 22:50:09","modifiedFileCount":"5","status":"M","submitter":"Brian Zhou"},{"authorTime":"2019-03-05 17:45:20","codes":[{"authorDate":"2021-06-03 15:26:39","commitOrder":3,"curCode":"    public JsonToRowDataConverter createRowConverter(RowType rowType) {\n        final JsonToRowDataConverter[] fieldConverters =\n                rowType.getFields().stream()\n                        .map(RowType.RowField::getType)\n                        .map(this::createConverter)\n                        .toArray(JsonToRowDataConverter[]::new);\n        final String[] fieldNames = rowType.getFieldNames().toArray(new String[0]);\n\n        return jsonNode -> {\n            ObjectNode node = (ObjectNode) jsonNode;\n            int arity = fieldNames.length;\n            GenericRowData row = new GenericRowData(arity);\n            for (int i = 0; i < arity; i++) {\n                String fieldName = fieldNames[i];\n                JsonNode field = node.get(fieldName);\n                try {\n                    Object convertedField = convertField(fieldConverters[i], fieldName, field);\n                    row.setField(i, convertedField);\n                } catch (Throwable t) {\n                    throw new JsonParseException(\n                            String.format(\"Fail to deserialize at field: %s.\", fieldName), t);\n                }\n            }\n            return row;\n        };\n    }\n","date":"2021-06-08 15:03:38","endLine":360,"groupId":"102207","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createRowConverter","params":"(RowTyperowType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f5/6897d20370dd5d2feca76261658f672b51e02b.src","preCode":"    public JsonToRowDataConverter createRowConverter(RowType rowType) {\n        final JsonToRowDataConverter[] fieldConverters =\n                rowType.getFields().stream()\n                        .map(RowType.RowField::getType)\n                        .map(this::createConverter)\n                        .toArray(JsonToRowDataConverter[]::new);\n        final String[] fieldNames = rowType.getFieldNames().toArray(new String[0]);\n\n        return jsonNode -> {\n            ObjectNode node = (ObjectNode) jsonNode;\n            int arity = fieldNames.length;\n            GenericRowData row = new GenericRowData(arity);\n            for (int i = 0; i < arity; i++) {\n                String fieldName = fieldNames[i];\n                JsonNode field = node.get(fieldName);\n                Object convertedField = convertField(fieldConverters[i], fieldName, field);\n                row.setField(i, convertedField);\n            }\n            return row;\n        };\n    }\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonToRowDataConverters.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":335,"status":"M"},{"authorDate":"2019-03-05 17:45:20","commitOrder":3,"curCode":"\tprivate DeserializationRuntimeConverter assembleRowConverter(\n\t\tString[] fieldNames,\n\t\tList<DeserializationRuntimeConverter> fieldConverters) {\n\t\treturn (mapper, jsonNode) -> {\n\t\t\tObjectNode node = (ObjectNode) jsonNode;\n\n\t\t\tint arity = fieldNames.length;\n\t\t\tRow row = new Row(arity);\n\t\t\tfor (int i = 0; i < arity; i++) {\n\t\t\t\tString fieldName = fieldNames[i];\n\t\t\t\tJsonNode field = node.get(fieldName);\n\t\t\t\tObject convertField = convertField(mapper, fieldConverters.get(i), fieldName, field);\n\t\t\t\trow.setField(i, convertField);\n\t\t\t}\n\n\t\t\treturn row;\n\t\t};\n\t}\n","date":"2019-07-15 20:55:28","endLine":388,"groupId":"102207","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assembleRowConverter","params":"(String[]fieldNames@List<DeserializationRuntimeConverter>fieldConverters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4a/1ff274bd394b6b0ecc3768eefcba77e5cdf800.src","preCode":"\tprivate DeserializationRuntimeConverter assembleRowConverter(\n\t\tString[] fieldNames,\n\t\tList<DeserializationRuntimeConverter> fieldConverters) {\n\t\treturn (mapper, jsonNode) -> {\n\t\t\tObjectNode node = (ObjectNode) jsonNode;\n\n\t\t\tint arity = fieldNames.length;\n\t\t\tRow row = new Row(arity);\n\t\t\tfor (int i = 0; i < arity; i++) {\n\t\t\t\tString fieldName = fieldNames[i];\n\t\t\t\tJsonNode field = node.get(fieldName);\n\t\t\t\tObject convertField = convertField(mapper, fieldConverters.get(i), fieldName, field);\n\t\t\t\trow.setField(i, convertField);\n\t\t\t}\n\n\t\t\treturn row;\n\t\t};\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"N"}],"commitId":"16452fbb57c11418796912251152947601572106","commitMessage":"@@@[FLINK-13538][formats] Figure out wrong field name when serializer/deserializer throw exceptions while doing serializing/deserializing for json and csv format.\n\nThis closes #16068\n","date":"2021-06-08 15:03:38","modifiedFileCount":"12","status":"M","submitter":"??"}]
