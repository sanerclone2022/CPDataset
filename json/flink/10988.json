[{"authorTime":"2020-05-18 07:46:32","codes":[{"authorDate":"2020-11-06 13:28:22","commitOrder":2,"curCode":"\tpublic void testFileSink() throws Exception {\n\t\tString path = TEMPORARY_FOLDER.newFolder().getAbsolutePath();\n\n\t\tJobGraph jobGraph = createJobGraph(path);\n\n\t\tfinal Configuration config = new Configuration();\n\t\tconfig.setString(RestOptions.BIND_PORT, \"18081-19000\");\n\t\tfinal MiniClusterConfiguration cfg = new MiniClusterConfiguration.Builder()\n\t\t\t\t.setNumTaskManagers(1)\n\t\t\t\t.setNumSlotsPerTaskManager(4)\n\t\t\t\t.setConfiguration(config)\n\t\t\t\t.build();\n\n\t\ttry (MiniCluster miniCluster = new MiniCluster(cfg)) {\n\t\t\tminiCluster.start();\n\t\t\tminiCluster.executeJobBlocking(jobGraph);\n\t\t}\n\n\t\tcheckResult(path);\n\t}\n","date":"2020-11-06 21:50:20","endLine":105,"groupId":"51179","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFileSink","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/6c/d09d6ef9d7b12a201bf8a498c1dc3c1b44eaaa.src","preCode":"\tpublic void testFileSink() throws Exception {\n\t\tString path = TEMPORARY_FOLDER.newFolder().getAbsolutePath();\n\n\t\tJobGraph jobGraph = createJobGraph(path);\n\n\t\tfinal Configuration config = new Configuration();\n\t\tconfig.setString(RestOptions.BIND_PORT, \"18081-19000\");\n\t\tfinal MiniClusterConfiguration cfg = new MiniClusterConfiguration.Builder()\n\t\t\t\t.setNumTaskManagers(1)\n\t\t\t\t.setNumSlotsPerTaskManager(4)\n\t\t\t\t.setConfiguration(config)\n\t\t\t\t.build();\n\n\t\ttry (MiniCluster miniCluster = new MiniCluster(cfg)) {\n\t\t\tminiCluster.start();\n\t\t\tminiCluster.executeJobBlocking(jobGraph);\n\t\t}\n\n\t\tcheckResult(path);\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/sink/FileSinkITBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"},{"authorDate":"2020-05-18 07:46:32","commitOrder":2,"curCode":"\tpublic static void startMiniCluster() throws Exception {\n\t\tfinal Configuration config = new Configuration();\n\t\tconfig.setString(RestOptions.BIND_PORT, \"0\");\n\n\t\tfinal MiniClusterConfiguration clusterCfg = new MiniClusterConfiguration.Builder()\n\t\t\t.setNumTaskManagers(2)\n\t\t\t.setNumSlotsPerTaskManager(1)\n\t\t\t.setConfiguration(config)\n\t\t\t.build();\n\n\t\tminiCluster = new MiniCluster(clusterCfg);\n\t\tminiCluster.start();\n\t}\n","date":"2020-05-30 21:34:31","endLine":119,"groupId":"23340","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"startMiniCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/91/9e6fe89fc9675010b923eac014aa833ad6ad8d.src","preCode":"\tpublic static void startMiniCluster() throws Exception {\n\t\tfinal Configuration config = new Configuration();\n\t\tconfig.setString(RestOptions.BIND_PORT, \"0\");\n\n\t\tfinal MiniClusterConfiguration clusterCfg = new MiniClusterConfiguration.Builder()\n\t\t\t.setNumTaskManagers(2)\n\t\t\t.setNumSlotsPerTaskManager(1)\n\t\t\t.setConfiguration(config)\n\t\t\t.build();\n\n\t\tminiCluster = new MiniCluster(clusterCfg);\n\t\tminiCluster.start();\n\t}\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/operators/coordination/CoordinatorEventsExactlyOnceITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"NB"}],"commitId":"19eb503079d9341fd0126284f22b1ac70e09d6c4","commitMessage":"@@@[FLINK-20006] Fix the unstable FileSinkITCase\n","date":"2020-11-06 21:50:20","modifiedFileCount":"0","status":"M","submitter":"Yun Gao"},{"authorTime":"2020-05-18 07:46:32","codes":[{"authorDate":"2020-11-26 17:46:59","commitOrder":3,"curCode":"\tpublic void testFileSink() throws Exception {\n\t\tString path = TEMPORARY_FOLDER.newFolder().getAbsolutePath();\n\n\t\tJobGraph jobGraph = createJobGraph(path);\n\n\t\tfinal Configuration config = new Configuration();\n\t\tconfig.setString(RestOptions.BIND_PORT, \"18081-19000\");\n\t\tfinal MiniClusterConfiguration cfg = new MiniClusterConfiguration.Builder()\n\t\t\t\t.setNumTaskManagers(1)\n\t\t\t\t.setNumSlotsPerTaskManager(4)\n\t\t\t\t.setConfiguration(config)\n\t\t\t\t.build();\n\n\t\ttry (MiniCluster miniCluster = new MiniCluster(cfg)) {\n\t\t\tminiCluster.start();\n\t\t\tminiCluster.executeJobBlocking(jobGraph);\n\t\t}\n\n\t\tIntegerFileSinkTestDataUtils.checkIntegerSequenceSinkOutput(path, NUM_RECORDS, NUM_BUCKETS, NUM_SOURCES);\n\t}\n","date":"2020-11-30 22:18:18","endLine":89,"groupId":"10988","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFileSink","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/49/12f2cf2d506263212e105569d750241a9c9691.src","preCode":"\tpublic void testFileSink() throws Exception {\n\t\tString path = TEMPORARY_FOLDER.newFolder().getAbsolutePath();\n\n\t\tJobGraph jobGraph = createJobGraph(path);\n\n\t\tfinal Configuration config = new Configuration();\n\t\tconfig.setString(RestOptions.BIND_PORT, \"18081-19000\");\n\t\tfinal MiniClusterConfiguration cfg = new MiniClusterConfiguration.Builder()\n\t\t\t\t.setNumTaskManagers(1)\n\t\t\t\t.setNumSlotsPerTaskManager(4)\n\t\t\t\t.setConfiguration(config)\n\t\t\t\t.build();\n\n\t\ttry (MiniCluster miniCluster = new MiniCluster(cfg)) {\n\t\t\tminiCluster.start();\n\t\t\tminiCluster.executeJobBlocking(jobGraph);\n\t\t}\n\n\t\tcheckResult(path);\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/sink/FileSinkITBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2020-05-18 07:46:32","commitOrder":3,"curCode":"\tpublic static void startMiniCluster() throws Exception {\n\t\tfinal Configuration config = new Configuration();\n\t\tconfig.setString(RestOptions.BIND_PORT, \"0\");\n\n\t\tfinal MiniClusterConfiguration clusterCfg = new MiniClusterConfiguration.Builder()\n\t\t\t.setNumTaskManagers(2)\n\t\t\t.setNumSlotsPerTaskManager(1)\n\t\t\t.setConfiguration(config)\n\t\t\t.build();\n\n\t\tminiCluster = new MiniCluster(clusterCfg);\n\t\tminiCluster.start();\n\t}\n","date":"2020-05-30 21:34:31","endLine":119,"groupId":"10988","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"startMiniCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/91/9e6fe89fc9675010b923eac014aa833ad6ad8d.src","preCode":"\tpublic static void startMiniCluster() throws Exception {\n\t\tfinal Configuration config = new Configuration();\n\t\tconfig.setString(RestOptions.BIND_PORT, \"0\");\n\n\t\tfinal MiniClusterConfiguration clusterCfg = new MiniClusterConfiguration.Builder()\n\t\t\t.setNumTaskManagers(2)\n\t\t\t.setNumSlotsPerTaskManager(1)\n\t\t\t.setConfiguration(config)\n\t\t\t.build();\n\n\t\tminiCluster = new MiniCluster(clusterCfg);\n\t\tminiCluster.start();\n\t}\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/operators/coordination/CoordinatorEventsExactlyOnceITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"N"}],"commitId":"e302552657bf038c5631e6dd457c13b60587ebb5","commitMessage":"@@@[refactor] Factor common testing code out of FileSinkITBase\n\nWe want to reuse this code for the new FileSink migration test as well.\n","date":"2020-11-30 22:18:18","modifiedFileCount":"1","status":"M","submitter":"Yun Gao"}]
