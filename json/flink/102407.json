[{"authorTime":"2017-07-05 23:16:52","codes":[{"authorDate":"2017-07-05 23:16:52","commitOrder":1,"curCode":"\tpublic static void main(String[] args) {\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","date":"2017-07-28 21:36:49","endLine":140,"groupId":"40384","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/7e/abdd5dd0a686408e7866a4f10fc13ab6a35af4.src","preCode":"\tpublic static void main(String[] args) {\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"},{"authorDate":"2017-07-05 23:16:52","commitOrder":1,"curCode":"\tpublic static void main(String[] args) {\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnSessionClusterEntrypoint.startCluster();\n\t}\n","date":"2017-07-28 21:36:49","endLine":114,"groupId":"40384","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/cb/c55a687d310ed2f30b64d24c01885156561425.src","preCode":"\tpublic static void main(String[] args) {\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnSessionClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"}],"commitId":"b1f37efb3b49ad73bf31d0bbf9b1337439de722c","commitMessage":"@@@[FLINK-7108] [yarn] Add YARN entry points based on the generic entry point\n\nAdd the YarnSesssionClusterEntrypoint and the YarnJobClusterEntrypoint which extend\nSessionClusterEntrypoint and JobClusterEntrypoint.  respectively.\n\nAdd new Yarn session and per-job cluster entry points\n\nRemove old Flip-6 Yarn per job entry point\n\nThis closes #4281.\n","date":"2017-07-28 21:36:49","modifiedFileCount":"5","status":"B","submitter":"Till Rohrmann"},{"authorTime":"2017-10-19 18:32:26","codes":[{"authorDate":"2017-10-19 18:32:26","commitOrder":2,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","date":"2017-10-20 20:39:36","endLine":148,"groupId":"40384","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e1/efb54f706a56844740abce9078dcb361f50952.src","preCode":"\tpublic static void main(String[] args) {\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2017-10-19 18:32:26","commitOrder":2,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnSessionClusterEntrypoint.startCluster();\n\t}\n","date":"2017-10-20 20:39:36","endLine":122,"groupId":"40384","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/04/2644b6f4e7cce13ef9c61832eadf781315dcde.src","preCode":"\tpublic static void main(String[] args) {\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnSessionClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"a5801d058dc955200d726131f98a6f0f883ed4dc","commitMessage":"@@@[FLINK-7874] Add logging to the ClusterEntrypoints\n\nThis closes #4860.\n","date":"2017-10-20 20:39:36","modifiedFileCount":"5","status":"M","submitter":"Till"},{"authorTime":"2018-01-02 23:52:16","codes":[{"authorDate":"2018-01-02 23:52:16","commitOrder":3,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","date":"2018-01-18 16:45:59","endLine":152,"groupId":"40384","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d2/7e2075e4e69759fd9bf1dbddefeea0ab401550.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2018-01-02 23:52:16","commitOrder":3,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnSessionClusterEntrypoint.startCluster();\n\t}\n","date":"2018-01-18 16:45:59","endLine":126,"groupId":"40384","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/81/a9b6b42893294987201eb90d229a9c4ccdad80.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnSessionClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"76abcaa55d0d6ab704b7ab8164718e8e2dcae2c4","commitMessage":"@@@[FLINK-8350][config] replace \"taskmanager.tmp.dirs\" with \"io.tmp.dirs\"\n\nThis replaces \"taskmanager.tmp.dirs\" with the new \"io.tmp.dirs\"\nconfiguration parameter to define temporary directories in (cluster)\nenvironments for all components.  i.e. JobManager.  JobMaster.  Dispatcher. ...\n\nPlease note that this (kind of internal and thus undocumented) configuration\nparameter is set by our YARN and Mesos integrations.\n\n[FLINK-8350][cluster] initialise \"io.tmp.dirs\" for JobManager as well\n\nIn a YARN and Mesos environment.  this initialises Flink's temporary directory\nconfiguration with YARN/Mesos application-specific paths for JobManager. \nJobMaster.  Dispatcher.  etc. components as well (Mesos integration actually still\nlacks a proper integration of this.  but once done.  the new hooks fall in place\njust fine).\n","date":"2018-01-18 16:45:59","modifiedFileCount":"20","status":"M","submitter":"Nico Kruber"},{"authorTime":"2018-09-24 15:27:34","codes":[{"authorDate":"2018-09-24 15:27:34","commitOrder":4,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","date":"2018-09-28 17:42:39","endLine":103,"groupId":"40384","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/17/33f49d93889e00f0679361eeb3b7adb0f66e8a.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2018-09-24 15:27:34","commitOrder":4,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnSessionClusterEntrypoint);\n\t}\n","date":"2018-09-28 17:42:39","endLine":94,"groupId":"40384","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e0/bebfdae3b80eb5c01f3aa121eb90b948f1b562.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnSessionClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"b9ebf421c8979d99f2ae960075b76796ba0b6ac4","commitMessage":"@@@[FLINK-10411] Move System.exit out of ClusterEntrypoint\n\nMove the logic of when to exit the JVM process out of the ClusterEntrypoint\nso that the caller is now responsible to make this call. This improves the\nusage of the ClusterEntrypoint for testing purposes.\n","date":"2018-09-28 17:42:39","modifiedFileCount":"7","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2020-01-02 18:20:49","codes":[{"authorDate":"2020-01-02 18:20:49","commitOrder":5,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","date":"2020-01-03 10:58:45","endLine":120,"groupId":"40384","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a3/60d940335a34b095690bf035bddb7df1212940.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2020-01-02 18:20:49","commitOrder":5,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnSessionClusterEntrypoint);\n\t}\n","date":"2020-01-03 10:58:45","endLine":88,"groupId":"40384","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/99/d7936fed83ef6b92141c9e71678578b225a4d0.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnSessionClusterEntrypoint);\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"d82828d8c8fffcc5afd3a7c79bfdb7e018908546","commitMessage":"@@@[hotfix][yarn] Remove unused argument workingDirectory for YarnEntrypointUtils#installSecurityContext.\n","date":"2020-01-03 10:58:45","modifiedFileCount":"4","status":"M","submitter":"Xintong Song"},{"authorTime":"2020-01-02 18:24:00","codes":[{"authorDate":"2020-01-02 18:24:00","commitOrder":6,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","date":"2020-01-03 10:58:45","endLine":120,"groupId":"40384","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/da/df92da2e3ad9b4a3d4e31470fe841ee6be45d6.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2020-01-02 18:24:00","commitOrder":6,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnSessionClusterEntrypoint);\n\t}\n","date":"2020-01-03 10:58:45","endLine":88,"groupId":"40384","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c4/56f29078ae991cc55b424d61496498f329c165.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnSessionClusterEntrypoint);\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"267f59017bf14a30bf5f70a94d85f800def92109","commitMessage":"@@@[hotfix][yarn] Remove unused argument logger for YarnEntrypointUtils#loadConfiguration.\n","date":"2020-01-03 10:58:45","modifiedFileCount":"4","status":"M","submitter":"Xintong Song"},{"authorTime":"2020-10-19 21:09:56","codes":[{"authorDate":"2020-10-19 21:09:56","commitOrder":7,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tfinal Configuration dynamicParameters = ClusterEntrypointUtils.parseParametersOrExit(\n\t\t\targs,\n\t\t\tnew DynamicParametersConfigurationParserFactory(),\n\t\t\tYarnJobClusterEntrypoint.class);\n\t\tfinal Configuration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, dynamicParameters, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","date":"2020-11-05 01:07:21","endLine":96,"groupId":"102407","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c7/6b8d23ce5376bb2aeec1bb9eee0fe073608682.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2020-10-19 21:09:56","commitOrder":7,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tfinal Configuration dynamicParameters = ClusterEntrypointUtils.parseParametersOrExit(\n\t\t\targs,\n\t\t\tnew DynamicParametersConfigurationParserFactory(),\n\t\t\tYarnSessionClusterEntrypoint.class);\n\t\tfinal Configuration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, dynamicParameters, env);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnSessionClusterEntrypoint);\n\t}\n","date":"2020-11-05 01:07:21","endLine":87,"groupId":"102407","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a2/de71270e80b46c989010ebee52f8dabd9545c6.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnSessionClusterEntrypoint yarnSessionClusterEntrypoint = new YarnSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnSessionClusterEntrypoint);\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"0a51d85255b9c7480eb5e939d88e9ccc5e98af69","commitMessage":"@@@[FLINK-19662][runtime][kubernetes][yarn][dist] Added dynamic parameters to BashJavaUtils' JobManager argument extraction. Additionally.  the Kubernetes and Yarn deployment were extended accordingly.\n\nThe parameters are returned using the newly introduced global environment variable DYNAMIC_PARAMETERS.\n","date":"2020-11-05 01:07:21","modifiedFileCount":"17","status":"M","submitter":"Matthias Pohl"}]
