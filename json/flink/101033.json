[{"authorTime":"2020-05-26 17:08:56","codes":[{"authorDate":"2020-05-26 17:08:56","commitOrder":3,"curCode":"\tprivate void testReadWriteCsvWithProctime(boolean isStreaming) {\n\t\tTableEnvironment tableEnv = prepareTable(isStreaming);\n\t\tArrayList<Row> rows = Lists.newArrayList(\n\t\t\t\ttableEnv.executeSql(\"SELECT * FROM proctime_src\").collect());\n\t\tAssert.assertEquals(5, rows.size());\n\t\ttableEnv.executeSql(\"DROP TABLE proctime_src\");\n\t}\n","date":"2020-06-09 19:27:38","endLine":290,"groupId":"10948","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReadWriteCsvWithProctime","params":"(booleanisStreaming)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ba/12079179b5a0207901478bf912c181c0613fff.src","preCode":"\tprivate void testReadWriteCsvWithProctime(boolean isStreaming) {\n\t\tTableEnvironment tableEnv = prepareTable(isStreaming);\n\t\tArrayList<Row> rows = Lists.newArrayList(\n\t\t\t\ttableEnv.executeSql(\"SELECT * FROM proctime_src\").collect());\n\t\tAssert.assertEquals(5, rows.size());\n\t\ttableEnv.executeSql(\"DROP TABLE proctime_src\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"MB"},{"authorDate":"2020-05-26 17:08:56","commitOrder":3,"curCode":"\tprivate void testTableApiWithProctime(boolean isStreaming) {\n\t\tTableEnvironment tableEnv = prepareTable(isStreaming);\n\t\tArrayList<Row> rows = Lists.newArrayList(\n\t\t\t\ttableEnv.from(\"proctime_src\").select($(\"price\"), $(\"ts\"), $(\"l_proctime\")).execute().collect());\n\t\tAssert.assertEquals(5, rows.size());\n\t\ttableEnv.executeSql(\"DROP TABLE proctime_src\");\n\t}\n","date":"2020-06-09 19:27:38","endLine":308,"groupId":"10947","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTableApiWithProctime","params":"(booleanisStreaming)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ba/12079179b5a0207901478bf912c181c0613fff.src","preCode":"\tprivate void testTableApiWithProctime(boolean isStreaming) {\n\t\tTableEnvironment tableEnv = prepareTable(isStreaming);\n\t\tArrayList<Row> rows = Lists.newArrayList(\n\t\t\t\ttableEnv.from(\"proctime_src\").select($(\"price\"), $(\"ts\"), $(\"l_proctime\")).execute().collect());\n\t\tAssert.assertEquals(5, rows.size());\n\t\ttableEnv.executeSql(\"DROP TABLE proctime_src\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":302,"status":"B"}],"commitId":"8a8d8a95d0ead424d0ab61105b57fcabf6878e2e","commitMessage":"@@@[FLINK-17753] [table-planner-blink] Fix watermark defined in ddl does not work in Table api\n\nThis closes #12335\n","date":"2020-06-09 19:27:38","modifiedFileCount":"19","status":"M","submitter":"godfreyhe"},{"authorTime":"2020-06-18 11:52:35","codes":[{"authorDate":"2020-06-18 11:52:35","commitOrder":4,"curCode":"\tprivate void testReadWriteCsvWithProctime(boolean isStreaming) {\n\t\tTableEnvironment tableEnv = prepareTable(isStreaming);\n\t\tList<Row> rows = CollectionUtil.iteratorToList(\n\t\t\t\ttableEnv.executeSql(\"SELECT * FROM proctime_src\").collect());\n\t\tAssert.assertEquals(5, rows.size());\n\t\ttableEnv.executeSql(\"DROP TABLE proctime_src\");\n\t}\n","date":"2020-09-07 17:37:11","endLine":289,"groupId":"101033","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReadWriteCsvWithProctime","params":"(booleanisStreaming)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0d/a48f04fdf6865a5791a015a3e2ce3b83ae8dba.src","preCode":"\tprivate void testReadWriteCsvWithProctime(boolean isStreaming) {\n\t\tTableEnvironment tableEnv = prepareTable(isStreaming);\n\t\tArrayList<Row> rows = Lists.newArrayList(\n\t\t\t\ttableEnv.executeSql(\"SELECT * FROM proctime_src\").collect());\n\t\tAssert.assertEquals(5, rows.size());\n\t\ttableEnv.executeSql(\"DROP TABLE proctime_src\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"M"},{"authorDate":"2020-06-18 11:52:35","commitOrder":4,"curCode":"\tprivate void testTableApiWithProctime(boolean isStreaming) {\n\t\tTableEnvironment tableEnv = prepareTable(isStreaming);\n\t\tList<Row> rows = CollectionUtil.iteratorToList(\n\t\t\t\ttableEnv.from(\"proctime_src\").select($(\"price\"), $(\"ts\"), $(\"l_proctime\")).execute().collect());\n\t\tAssert.assertEquals(5, rows.size());\n\t\ttableEnv.executeSql(\"DROP TABLE proctime_src\");\n\t}\n","date":"2020-09-07 17:37:11","endLine":307,"groupId":"101033","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTableApiWithProctime","params":"(booleanisStreaming)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0d/a48f04fdf6865a5791a015a3e2ce3b83ae8dba.src","preCode":"\tprivate void testTableApiWithProctime(boolean isStreaming) {\n\t\tTableEnvironment tableEnv = prepareTable(isStreaming);\n\t\tArrayList<Row> rows = Lists.newArrayList(\n\t\t\t\ttableEnv.from(\"proctime_src\").select($(\"price\"), $(\"ts\"), $(\"l_proctime\")).execute().collect());\n\t\tAssert.assertEquals(5, rows.size());\n\t\ttableEnv.executeSql(\"DROP TABLE proctime_src\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"M"}],"commitId":"91d2b628bfe1a2e7beed5111a6d9a572cc6bc310","commitMessage":"@@@[hotfix][table][connector] Use CollectionUtil#iteratorToList instead of Guava Lists\n","date":"2020-09-07 17:37:11","modifiedFileCount":"18","status":"M","submitter":"godfreyhe"}]
