[{"authorTime":"2018-01-11 01:02:27","codes":[{"authorDate":"2018-01-11 01:02:27","commitOrder":1,"curCode":"\tpublic void testExternalizedFullRocksDBCheckpointsZookeeper() throws Exception {\n\t\tTestingServer zkServer = new TestingServer();\n\t\tzkServer.start();\n\t\ttry {\n\t\t\tfinal File checkpointDir = temporaryFolder.newFolder();\n\t\t\ttestExternalizedCheckpoints(\n\t\t\t\tcheckpointDir,\n\t\t\t\tzkServer.getConnectString(),\n\t\t\t\tnew RocksDBStateBackend(checkpointDir.toURI().toString(), false));\n\t\t} finally {\n\t\t\tzkServer.stop();\n\t\t}\n\t}\n","date":"2018-02-01 20:54:55","endLine":122,"groupId":"28270","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testExternalizedFullRocksDBCheckpointsZookeeper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/fb/a3b934c061205a6722c7d714ec66ac5cdeee2d.src","preCode":"\tpublic void testExternalizedFullRocksDBCheckpointsZookeeper() throws Exception {\n\t\tTestingServer zkServer = new TestingServer();\n\t\tzkServer.start();\n\t\ttry {\n\t\t\tfinal File checkpointDir = temporaryFolder.newFolder();\n\t\t\ttestExternalizedCheckpoints(\n\t\t\t\tcheckpointDir,\n\t\t\t\tzkServer.getConnectString(),\n\t\t\t\tnew RocksDBStateBackend(checkpointDir.toURI().toString(), false));\n\t\t} finally {\n\t\t\tzkServer.stop();\n\t\t}\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/checkpointing/ResumeCheckpointManuallyITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"B"},{"authorDate":"2018-01-11 01:02:27","commitOrder":1,"curCode":"\tpublic void testExternalizedFSCheckpointsZookeeper() throws Exception {\n\t\tTestingServer zkServer = new TestingServer();\n\t\tzkServer.start();\n\t\ttry {\n\t\t\tfinal File checkpointDir = temporaryFolder.newFolder();\n\t\t\ttestExternalizedCheckpoints(\n\t\t\t\tcheckpointDir,\n\t\t\t\tzkServer.getConnectString(),\n\t\t\t\tnew FsStateBackend(checkpointDir.toURI().toString(), true));\n\t\t} finally {\n\t\t\tzkServer.stop();\n\t\t}\n\t}\n","date":"2018-02-01 20:54:55","endLine":137,"groupId":"28270","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testExternalizedFSCheckpointsZookeeper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/fb/a3b934c061205a6722c7d714ec66ac5cdeee2d.src","preCode":"\tpublic void testExternalizedFSCheckpointsZookeeper() throws Exception {\n\t\tTestingServer zkServer = new TestingServer();\n\t\tzkServer.start();\n\t\ttry {\n\t\t\tfinal File checkpointDir = temporaryFolder.newFolder();\n\t\t\ttestExternalizedCheckpoints(\n\t\t\t\tcheckpointDir,\n\t\t\t\tzkServer.getConnectString(),\n\t\t\t\tnew FsStateBackend(checkpointDir.toURI().toString(), true));\n\t\t} finally {\n\t\t\tzkServer.stop();\n\t\t}\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/checkpointing/ResumeCheckpointManuallyITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"}],"commitId":"9903c8c42793b922549835217c586c5928999ea5","commitMessage":"@@@[FLINK-8531] [checkpoints] (part 3) Rework ExternalizedCheckpointITCase\n","date":"2018-02-01 20:54:55","modifiedFileCount":"2","status":"B","submitter":"Stephan Ewen"},{"authorTime":"2018-02-06 21:44:01","codes":[{"authorDate":"2018-02-06 21:44:01","commitOrder":2,"curCode":"\tpublic void testExternalizedFullRocksDBCheckpointsZookeeper() throws Exception {\n\t\tTestingServer zkServer = new TestingServer();\n\t\tzkServer.start();\n\t\ttry {\n\t\t\tfinal File checkpointDir = temporaryFolder.newFolder();\n\t\t\ttestExternalizedCheckpoints(\n\t\t\t\tcheckpointDir,\n\t\t\t\tzkServer.getConnectString(),\n\t\t\t\tcreateRocksDBStateBackend(checkpointDir, false),\n\t\t\t\tfalse);\n\t\t} finally {\n\t\t\tzkServer.stop();\n\t\t}\n\t}\n","date":"2018-02-25 22:14:21","endLine":158,"groupId":"101645","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testExternalizedFullRocksDBCheckpointsZookeeper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/53/7f8641e1dded667611775b28f7a6803db18e6a.src","preCode":"\tpublic void testExternalizedFullRocksDBCheckpointsZookeeper() throws Exception {\n\t\tTestingServer zkServer = new TestingServer();\n\t\tzkServer.start();\n\t\ttry {\n\t\t\tfinal File checkpointDir = temporaryFolder.newFolder();\n\t\t\ttestExternalizedCheckpoints(\n\t\t\t\tcheckpointDir,\n\t\t\t\tzkServer.getConnectString(),\n\t\t\t\tnew RocksDBStateBackend(checkpointDir.toURI().toString(), false));\n\t\t} finally {\n\t\t\tzkServer.stop();\n\t\t}\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/checkpointing/ResumeCheckpointManuallyITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2018-02-06 21:44:01","commitOrder":2,"curCode":"\tpublic void testExternalizedFSCheckpointsZookeeper() throws Exception {\n\t\tTestingServer zkServer = new TestingServer();\n\t\tzkServer.start();\n\t\ttry {\n\t\t\tfinal File checkpointDir = temporaryFolder.newFolder();\n\t\t\ttestExternalizedCheckpoints(\n\t\t\t\tcheckpointDir,\n\t\t\t\tzkServer.getConnectString(),\n\t\t\t\tcreateFsStateBackend(checkpointDir),\n\t\t\t\tfalse);\n\t\t} finally {\n\t\t\tzkServer.stop();\n\t\t}\n\t}\n","date":"2018-02-25 22:14:21","endLine":206,"groupId":"101645","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testExternalizedFSCheckpointsZookeeper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/53/7f8641e1dded667611775b28f7a6803db18e6a.src","preCode":"\tpublic void testExternalizedFSCheckpointsZookeeper() throws Exception {\n\t\tTestingServer zkServer = new TestingServer();\n\t\tzkServer.start();\n\t\ttry {\n\t\t\tfinal File checkpointDir = temporaryFolder.newFolder();\n\t\t\ttestExternalizedCheckpoints(\n\t\t\t\tcheckpointDir,\n\t\t\t\tzkServer.getConnectString(),\n\t\t\t\tnew FsStateBackend(checkpointDir.toURI().toString(), true));\n\t\t} finally {\n\t\t\tzkServer.stop();\n\t\t}\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/checkpointing/ResumeCheckpointManuallyITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"}],"commitId":"df3e6bb7627db03635febd48eff4c10032b668ef","commitMessage":"@@@[FLINK-8360][checkpointing] Implement state storage for local recovery and integrate with task lifecycle\n","date":"2018-02-25 22:14:21","modifiedFileCount":"107","status":"M","submitter":"Stefan Richter"}]
