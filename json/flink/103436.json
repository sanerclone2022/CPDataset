[{"authorTime":"2020-10-14 17:41:08","codes":[{"authorDate":"2020-10-14 17:30:15","commitOrder":2,"curCode":"\tprivate Collection<Integer> translateInternal(\n\t\t\tfinal PartitionTransformation<OUT> transformation,\n\t\t\tfinal Context context) {\n\t\tcheckNotNull(transformation);\n\t\tcheckNotNull(context);\n\n\t\tfinal StreamGraph streamGraph = context.getStreamGraph();\n\n\t\tfinal List<Transformation<?>> parentTransformations = transformation.getInputs();\n\t\tcheckState(\n\t\t\t\tparentTransformations.size() == 1,\n\t\t\t\t\"Expected exactly one input transformation but found \" + parentTransformations.size());\n\t\tfinal Transformation<?> input = parentTransformations.get(0);\n\n\t\tList<Integer> resultIds = new ArrayList<>();\n\n\t\tfor (Integer inputId: context.getStreamNodeIds(input)) {\n\t\t\tfinal int virtualId = Transformation.getNewNodeId();\n\t\t\tstreamGraph.addVirtualPartitionNode(\n\t\t\t\t\tinputId,\n\t\t\t\t\tvirtualId,\n\t\t\t\t\ttransformation.getPartitioner(),\n\t\t\t\t\ttransformation.getShuffleMode());\n\t\t\tresultIds.add(virtualId);\n\t\t}\n\t\treturn resultIds;\n\t}\n","date":"2020-10-20 14:52:09","endLine":84,"groupId":"20646","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"translateInternal","params":"(finalPartitionTransformation<OUT>transformation@finalContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/13/94a4603a5fc36ef2bdd8860b2ecad75d4b6ed7.src","preCode":"\tprivate Collection<Integer> translateInternal(\n\t\t\tfinal PartitionTransformation<OUT> transformation,\n\t\t\tfinal Context context) {\n\t\tcheckNotNull(transformation);\n\t\tcheckNotNull(context);\n\n\t\tfinal StreamGraph streamGraph = context.getStreamGraph();\n\n\t\tfinal List<Transformation<?>> parentTransformations = transformation.getInputs();\n\t\tcheckState(\n\t\t\t\tparentTransformations.size() == 1,\n\t\t\t\t\"Expected exactly one input transformation but found \" + parentTransformations.size());\n\t\tfinal Transformation<?> input = parentTransformations.get(0);\n\n\t\tList<Integer> resultIds = new ArrayList<>();\n\n\t\tfor (Integer inputId: context.getStreamNodeIds(input)) {\n\t\t\tfinal int virtualId = Transformation.getNewNodeId();\n\t\t\tstreamGraph.addVirtualPartitionNode(\n\t\t\t\t\tinputId,\n\t\t\t\t\tvirtualId,\n\t\t\t\t\ttransformation.getPartitioner(),\n\t\t\t\t\ttransformation.getShuffleMode());\n\t\t\tresultIds.add(virtualId);\n\t\t}\n\t\treturn resultIds;\n\t}\n","realPath":"flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/translators/PartitionTransformationTranslator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"NB"},{"authorDate":"2020-10-14 17:41:08","commitOrder":2,"curCode":"\tprivate Collection<Integer> translateInternal(\n\t\t\tfinal SideOutputTransformation<OUT> transformation,\n\t\t\tfinal Context context) {\n\t\tcheckNotNull(transformation);\n\t\tcheckNotNull(context);\n\n\t\tfinal StreamGraph streamGraph = context.getStreamGraph();\n\t\tfinal List<Transformation<?>> parentTransformations = transformation.getInputs();\n\t\tcheckState(\n\t\t\t\tparentTransformations.size() == 1,\n\t\t\t\t\"Expected exactly one input transformation but found \" + parentTransformations.size());\n\n\t\tfinal List<Integer> virtualResultIds = new ArrayList<>();\n\t\tfinal Transformation<?> parentTransformation = parentTransformations.get(0);\n\t\tfor (int inputId : context.getStreamNodeIds(parentTransformation)) {\n\t\t\tfinal int virtualId = Transformation.getNewNodeId();\n\t\t\tstreamGraph.addVirtualSideOutputNode(inputId, virtualId, transformation.getOutputTag());\n\t\t\tvirtualResultIds.add(virtualId);\n\t\t}\n\t\treturn virtualResultIds;\n\t}\n","date":"2020-10-20 14:52:41","endLine":78,"groupId":"38630","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"translateInternal","params":"(finalSideOutputTransformation<OUT>transformation@finalContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f9/6da7e2d55e7a4368d62f022e23b0a8cdfdf5e2.src","preCode":"\tprivate Collection<Integer> translateInternal(\n\t\t\tfinal SideOutputTransformation<OUT> transformation,\n\t\t\tfinal Context context) {\n\t\tcheckNotNull(transformation);\n\t\tcheckNotNull(context);\n\n\t\tfinal StreamGraph streamGraph = context.getStreamGraph();\n\t\tfinal List<Transformation<?>> parentTransformations = transformation.getInputs();\n\t\tcheckState(\n\t\t\t\tparentTransformations.size() == 1,\n\t\t\t\t\"Expected exactly one input transformation but found \" + parentTransformations.size());\n\n\t\tfinal List<Integer> virtualResultIds = new ArrayList<>();\n\t\tfinal Transformation<?> parentTransformation = parentTransformations.get(0);\n\t\tfor (int inputId : context.getStreamNodeIds(parentTransformation)) {\n\t\t\tfinal int virtualId = Transformation.getNewNodeId();\n\t\t\tstreamGraph.addVirtualSideOutputNode(inputId, virtualId, transformation.getOutputTag());\n\t\t\tvirtualResultIds.add(virtualId);\n\t\t}\n\t\treturn virtualResultIds;\n\t}\n","realPath":"flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/translators/SideOutputTransformationTranslator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"}],"commitId":"c5f7d19568f9c906b8827738e27fe60fce177062","commitMessage":"@@@[FLINK-19579] Add the SideOutputTransformation translator\n\nWith the addition of the TransformationTranslator framework\nin FLINK-19485.  we can now pull the translation logic out\nof the StreamGraphGenerator and put it into dedicated translators.\nThis commit does so for the SideOutputTransformation.\n\nThis closes #13649\n","date":"2020-10-20 14:52:41","modifiedFileCount":"1","status":"M","submitter":"Kostas Kloudas"},{"authorTime":"2020-10-14 17:41:08","codes":[{"authorDate":"2021-07-19 20:22:18","commitOrder":3,"curCode":"    private Collection<Integer> translateInternal(\n            final PartitionTransformation<OUT> transformation, final Context context) {\n        checkNotNull(transformation);\n        checkNotNull(context);\n\n        final StreamGraph streamGraph = context.getStreamGraph();\n\n        final List<Transformation<?>> parentTransformations = transformation.getInputs();\n        checkState(\n                parentTransformations.size() == 1,\n                \"Expected exactly one input transformation but found \"\n                        + parentTransformations.size());\n        final Transformation<?> input = parentTransformations.get(0);\n\n        List<Integer> resultIds = new ArrayList<>();\n\n        for (Integer inputId : context.getStreamNodeIds(input)) {\n            final int virtualId = Transformation.getNewNodeId();\n            streamGraph.addVirtualPartitionNode(\n                    inputId,\n                    virtualId,\n                    transformation.getPartitioner(),\n                    transformation.getExchangeMode());\n            resultIds.add(virtualId);\n        }\n        return resultIds;\n    }\n","date":"2021-07-21 21:38:20","endLine":83,"groupId":"103436","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"translateInternal","params":"(finalPartitionTransformation<OUT>transformation@finalContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f4/27cae54505f576763b93546728b860ca8e5ef2.src","preCode":"    private Collection<Integer> translateInternal(\n            final PartitionTransformation<OUT> transformation, final Context context) {\n        checkNotNull(transformation);\n        checkNotNull(context);\n\n        final StreamGraph streamGraph = context.getStreamGraph();\n\n        final List<Transformation<?>> parentTransformations = transformation.getInputs();\n        checkState(\n                parentTransformations.size() == 1,\n                \"Expected exactly one input transformation but found \"\n                        + parentTransformations.size());\n        final Transformation<?> input = parentTransformations.get(0);\n\n        List<Integer> resultIds = new ArrayList<>();\n\n        for (Integer inputId : context.getStreamNodeIds(input)) {\n            final int virtualId = Transformation.getNewNodeId();\n            streamGraph.addVirtualPartitionNode(\n                    inputId,\n                    virtualId,\n                    transformation.getPartitioner(),\n                    transformation.getShuffleMode());\n            resultIds.add(virtualId);\n        }\n        return resultIds;\n    }\n","realPath":"flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/translators/PartitionTransformationTranslator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2020-10-14 17:41:08","commitOrder":3,"curCode":"\tprivate Collection<Integer> translateInternal(\n\t\t\tfinal SideOutputTransformation<OUT> transformation,\n\t\t\tfinal Context context) {\n\t\tcheckNotNull(transformation);\n\t\tcheckNotNull(context);\n\n\t\tfinal StreamGraph streamGraph = context.getStreamGraph();\n\t\tfinal List<Transformation<?>> parentTransformations = transformation.getInputs();\n\t\tcheckState(\n\t\t\t\tparentTransformations.size() == 1,\n\t\t\t\t\"Expected exactly one input transformation but found \" + parentTransformations.size());\n\n\t\tfinal List<Integer> virtualResultIds = new ArrayList<>();\n\t\tfinal Transformation<?> parentTransformation = parentTransformations.get(0);\n\t\tfor (int inputId : context.getStreamNodeIds(parentTransformation)) {\n\t\t\tfinal int virtualId = Transformation.getNewNodeId();\n\t\t\tstreamGraph.addVirtualSideOutputNode(inputId, virtualId, transformation.getOutputTag());\n\t\t\tvirtualResultIds.add(virtualId);\n\t\t}\n\t\treturn virtualResultIds;\n\t}\n","date":"2020-10-20 14:52:41","endLine":78,"groupId":"103436","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"translateInternal","params":"(finalSideOutputTransformation<OUT>transformation@finalContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f9/6da7e2d55e7a4368d62f022e23b0a8cdfdf5e2.src","preCode":"\tprivate Collection<Integer> translateInternal(\n\t\t\tfinal SideOutputTransformation<OUT> transformation,\n\t\t\tfinal Context context) {\n\t\tcheckNotNull(transformation);\n\t\tcheckNotNull(context);\n\n\t\tfinal StreamGraph streamGraph = context.getStreamGraph();\n\t\tfinal List<Transformation<?>> parentTransformations = transformation.getInputs();\n\t\tcheckState(\n\t\t\t\tparentTransformations.size() == 1,\n\t\t\t\t\"Expected exactly one input transformation but found \" + parentTransformations.size());\n\n\t\tfinal List<Integer> virtualResultIds = new ArrayList<>();\n\t\tfinal Transformation<?> parentTransformation = parentTransformations.get(0);\n\t\tfor (int inputId : context.getStreamNodeIds(parentTransformation)) {\n\t\t\tfinal int virtualId = Transformation.getNewNodeId();\n\t\t\tstreamGraph.addVirtualSideOutputNode(inputId, virtualId, transformation.getOutputTag());\n\t\t\tvirtualResultIds.add(virtualId);\n\t\t}\n\t\treturn virtualResultIds;\n\t}\n","realPath":"flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/translators/SideOutputTransformationTranslator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"}],"commitId":"4e65322dc1b5f80a7f3a42f0f205f978357daa40","commitMessage":"@@@[FLINK-23402][streaming-java] Refactor ShuffleMode to StreamExchangeMode\n","date":"2021-07-21 21:38:20","modifiedFileCount":"16","status":"M","submitter":"Timo Walther"}]
