[{"authorTime":"2018-02-19 17:31:44","codes":[{"authorDate":"2018-02-19 17:31:44","commitOrder":1,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new Exception(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-02-20 01:37:49","endLine":188,"groupId":"28394","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b4/c3f5141375d16fa61dd116a10aaa412a3b6c95.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new Exception(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBReducingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2018-02-19 17:31:44","commitOrder":1,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new Exception(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-02-20 01:37:49","endLine":205,"groupId":"1018","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2c/07814d103f713a204c40081bbd4f01bca33a48.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new Exception(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBAggregatingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"B"}],"commitId":"2f7392d77d85823d3db1f1e5a8d4f6c94358d773","commitMessage":"@@@[FLINK-8695] [rocksdb] Move flink-statebackend-rocksdb from 'flink-contrib' to 'flink-state-backends'.\n\nThis closes #5523\n","date":"2018-02-20 01:37:49","modifiedFileCount":"0","status":"B","submitter":"Stephan Ewen"},{"authorTime":"2018-02-26 13:00:06","codes":[{"authorDate":"2018-02-26 13:00:06","commitOrder":2,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new Exception(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-06-05 20:18:44","endLine":193,"groupId":"9449","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a7/9dd90f8b195a6e25101d1e6d7155a0bdee7164.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new Exception(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBReducingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2018-02-26 13:00:06","commitOrder":2,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new Exception(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-06-05 20:18:44","endLine":208,"groupId":"24938","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/58/47e97e04feec7a9c185517f5bab0445ed5feeb.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new Exception(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBAggregatingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"bbf7ff2273d3e7724abdd6eb6414961a26e53159","commitMessage":"@@@[FLINK-8790][State] Improve performance of rescaling an incremental checkpoint\n\nThis closes #5582.\n","date":"2018-06-05 20:18:44","modifiedFileCount":"7","status":"M","submitter":"sihuazhou"},{"authorTime":"2018-06-12 23:24:20","codes":[{"authorDate":"2018-06-12 23:24:20","commitOrder":3,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-06-14 17:40:16","endLine":165,"groupId":"9449","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ea/d40b28fcab74324b8427a3a96a375b77e95dcd.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new Exception(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBReducingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2018-06-12 23:24:20","commitOrder":3,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-06-14 17:40:16","endLine":170,"groupId":"24938","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/76/f59d19ccf73b184407776f5ad7472b3712fadd.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new Exception(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBAggregatingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"09fbf23f5d0e63877670ae00787dc33be3e53402","commitMessage":"@@@[FLINK-9572] Extend InternalAppendingState with internal stored state access\n\nThis closes #6156.\n","date":"2018-06-14 17:40:16","modifiedFileCount":"17","status":"M","submitter":"Andrey Zagrebin"},{"authorTime":"2018-08-11 02:06:58","codes":[{"authorDate":"2018-08-11 02:06:58","commitOrder":4,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = dataOutputView.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setData(valueBytes);\n\t\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = dataOutputView.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\tdataInputView.setData(targetValueBytes);\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.reset();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-08-11 02:07:56","endLine":163,"groupId":"52963","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d1/fe3bd379854923268017c145fd0d091861778e.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) throws Exception {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBReducingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2018-08-11 02:06:58","commitOrder":4,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = dataOutputView.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setData(valueBytes);\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = dataOutputView.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tdataInputView.setData(targetValueBytes);\n\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.reset();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-08-11 02:07:56","endLine":169,"groupId":"52963","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4f/9ef2f811c8f3e72986a770846a24ed3ef9b905.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\t\tkeyGroup, key, source,\n\t\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = keySerializationStream.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(valueBytes)));\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(\n\t\t\t\t\t\tkeyGroup, key, target,\n\t\t\t\t\t\tkeySerializationStream, keySerializationDataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = keySerializationStream.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tACC value = valueSerializer.deserialize(\n\t\t\t\t\t\t\tnew DataInputViewStreamWrapper(new ByteArrayInputStreamWithPos(targetValueBytes)));\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tkeySerializationStream.reset();\n\t\t\t\tvalueSerializer.serialize(current, keySerializationDataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, keySerializationStream.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBAggregatingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"18ff4ab8e55d76522f835cc683f57252b3f742bc","commitMessage":"@@@[FLINK-10124][state] Use ByteArrayDataInput/OutputView instead of stream + wrapper\n","date":"2018-08-11 02:07:56","modifiedFileCount":"12","status":"M","submitter":"Stefan Richter"},{"authorTime":"2018-08-22 19:31:49","codes":[{"authorDate":"2018-08-22 19:31:49","commitOrder":5,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = dataOutputView.getCopyOfBuffer();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setBuffer(valueBytes);\n\t\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = dataOutputView.getCopyOfBuffer();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\tdataInputView.setBuffer(targetValueBytes);\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.clear();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.getCopyOfBuffer());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-08-22 19:33:25","endLine":163,"groupId":"37258","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/13/8357b0d77c850b64cdd5376d41b3f135869e3f.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = dataOutputView.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setData(valueBytes);\n\t\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = dataOutputView.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\tdataInputView.setData(targetValueBytes);\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.reset();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBReducingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2018-08-22 19:31:49","commitOrder":5,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = dataOutputView.getCopyOfBuffer();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setBuffer(valueBytes);\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = dataOutputView.getCopyOfBuffer();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tdataInputView.setBuffer(targetValueBytes);\n\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.clear();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.getCopyOfBuffer());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2018-08-22 19:33:25","endLine":169,"groupId":"31690","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/20/85fb86256a3d676cd9078b7a0be31ec7eee8cc.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = dataOutputView.toByteArray();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setData(valueBytes);\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = dataOutputView.toByteArray();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tdataInputView.setData(targetValueBytes);\n\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.reset();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.toByteArray());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBAggregatingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"3fd6587208a16940eab327ed37fa4e23d0b7eb62","commitMessage":"@@@[FLINK-10176][state] Replace ByteArrayData[Input|Output]View with (enhanced) Data[Output|InputDe]Serializer\n\nThis closes #6583.\n","date":"2018-08-22 19:33:25","modifiedFileCount":"20","status":"M","submitter":"Stefan Richter"},{"authorTime":"2018-11-27 13:51:29","codes":[{"authorDate":"2018-11-27 13:51:29","commitOrder":6,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\tsetCurrentNamespace(source);\n\t\t\t\t\tfinal byte[] sourceKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setBuffer(valueBytes);\n\t\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\tsetCurrentNamespace(target);\n\t\t\t\tfinal byte[] targetKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\tdataInputView.setBuffer(targetValueBytes);\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.clear();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.getCopyOfBuffer());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2019-01-07 19:59:38","endLine":156,"groupId":"52390","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a5/eb46eace6e0aaffea8b2034719e47c04636e71.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = dataOutputView.getCopyOfBuffer();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setBuffer(valueBytes);\n\t\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = dataOutputView.getCopyOfBuffer();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\tdataInputView.setBuffer(targetValueBytes);\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.clear();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.getCopyOfBuffer());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBReducingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2018-11-27 13:51:29","commitOrder":6,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\tsetCurrentNamespace(source);\n\t\t\t\t\tfinal byte[] sourceKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setBuffer(valueBytes);\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\tsetCurrentNamespace(target);\n\t\t\t\t\r\n\t\t\t\tfinal byte[] targetKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tdataInputView.setBuffer(targetValueBytes);\n\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.clear();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.getCopyOfBuffer());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2019-01-07 19:59:38","endLine":163,"groupId":"0","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/fb/d2979feb1b53f549d120f0e1c252fa3ed4bc45.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\t\r\n\t\tfinal K key = backend.getCurrentKey();\n\t\tfinal int keyGroup = backend.getCurrentKeyGroupIndex();\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, source, dataOutputView);\n\n\t\t\t\t\tfinal byte[] sourceKey = dataOutputView.getCopyOfBuffer();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setBuffer(valueBytes);\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\twriteKeyWithGroupAndNamespace(keyGroup, key, target, dataOutputView);\n\n\t\t\t\tfinal byte[] targetKey = dataOutputView.getCopyOfBuffer();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tdataInputView.setBuffer(targetValueBytes);\n\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.clear();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.getCopyOfBuffer());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBAggregatingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"54ef382439b1687a645a377a5f6a095746423109","commitMessage":"@@@[FLINK-9702] Improvement in (de)serialization of keys and values for RocksDB state\n\nThis closes #7288.\n\nCo-authored-by: Stefan Richter <s.richter@data-artisans.com>\nCo-authored-by: klion26 <qcx978132955@gmail.com>\n","date":"2019-01-07 19:59:38","modifiedFileCount":"10","status":"M","submitter":"Stefan Richter"},{"authorTime":"2019-12-03 01:10:05","codes":[{"authorDate":"2019-12-03 01:10:05","commitOrder":7,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\tsetCurrentNamespace(source);\n\t\t\t\t\tfinal byte[] sourceKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\t\t\t\t\t\tdataInputView.setBuffer(valueBytes);\n\t\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\tsetCurrentNamespace(target);\n\t\t\t\tfinal byte[] targetKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\tdataInputView.setBuffer(targetValueBytes);\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.clear();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.getCopyOfBuffer());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2019-12-04 22:06:04","endLine":156,"groupId":"1084","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/74/7c6b664af2a502e1a2a0eb9746882d32abe696.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tV current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\tsetCurrentNamespace(source);\n\t\t\t\t\tfinal byte[] sourceKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setBuffer(valueBytes);\n\t\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\t\r\n\t\t\t\tsetCurrentNamespace(target);\n\t\t\t\tfinal byte[] targetKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\tdataInputView.setBuffer(targetValueBytes);\n\t\t\t\t\t\r\n\t\t\t\t\tV value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = reduceFunction.reduce(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.clear();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.getCopyOfBuffer());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBReducingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2019-12-03 01:10:05","commitOrder":7,"curCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\tsetCurrentNamespace(source);\n\t\t\t\t\tfinal byte[] sourceKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\t\t\t\t\t\tdataInputView.setBuffer(valueBytes);\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\tsetCurrentNamespace(target);\n\t\t\t\t\r\n\t\t\t\tfinal byte[] targetKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tdataInputView.setBuffer(targetValueBytes);\n\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.clear();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.getCopyOfBuffer());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","date":"2019-12-04 22:06:04","endLine":163,"groupId":"1084","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"mergeNamespaces","params":"(Ntarget@Collection<N>sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f2/ea2fe14936e15d89c411a33659864d37f99472.src","preCode":"\tpublic void mergeNamespaces(N target, Collection<N> sources) {\n\t\tif (sources == null || sources.isEmpty()) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tACC current = null;\n\n\t\t\t\r\n\t\t\tfor (N source : sources) {\n\t\t\t\tif (source != null) {\n\t\t\t\t\tsetCurrentNamespace(source);\n\t\t\t\t\tfinal byte[] sourceKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\t\tfinal byte[] valueBytes = backend.db.get(columnFamily, sourceKey);\n\t\t\t\t\tbackend.db.delete(columnFamily, writeOptions, sourceKey);\n\n\t\t\t\t\tif (valueBytes != null) {\n\t\t\t\t\t\tdataInputView.setBuffer(valueBytes);\n\t\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\t\tif (current != null) {\n\t\t\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrent = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\r\n\t\t\tif (current != null) {\n\t\t\t\tsetCurrentNamespace(target);\n\t\t\t\t\r\n\t\t\t\tfinal byte[] targetKey = serializeCurrentKeyWithGroupAndNamespace();\n\t\t\t\tfinal byte[] targetValueBytes = backend.db.get(columnFamily, targetKey);\n\n\t\t\t\tif (targetValueBytes != null) {\n\t\t\t\t\t\r\n\t\t\t\t\tdataInputView.setBuffer(targetValueBytes);\n\t\t\t\t\tACC value = valueSerializer.deserialize(dataInputView);\n\n\t\t\t\t\tcurrent = aggFunction.merge(current, value);\n\t\t\t\t}\n\n\t\t\t\t\r\n\t\t\t\tdataOutputView.clear();\n\t\t\t\tvalueSerializer.serialize(current, dataOutputView);\n\n\t\t\t\t\r\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, targetKey, dataOutputView.getCopyOfBuffer());\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new FlinkRuntimeException(\"Error while merging state in RocksDB\", e);\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBAggregatingState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"e041d51fc9ca6f2f97ce006622338b7518941a65","commitMessage":"@@@[FLINK-14997][state-backends] Avoid unnecessary delete() calls in RocksDBState's mergeNamespaces implementation\n\nThis helps to improve the performance after the changed from FLINK-7700.\n\nThis closes #10383\n","date":"2019-12-04 22:06:04","modifiedFileCount":"3","status":"M","submitter":"Yun Tang"}]
