[{"authorTime":"2021-01-22 04:15:38","codes":[{"authorDate":"2021-01-22 04:15:38","commitOrder":1,"curCode":"    public void testDismissingSnapshot() throws Exception {\n        setupRocksKeyedStateBackend();\n        try {\n            RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot =\n                    keyedStateBackend.snapshot(\n                            0L,\n                            0L,\n                            testStreamFactory,\n                            CheckpointOptions.forCheckpointWithDefaultLocation());\n            snapshot.cancel(true);\n            verifyRocksObjectsReleased();\n        } finally {\n            this.keyedStateBackend.dispose();\n            this.keyedStateBackend = null;\n        }\n    }\n","date":"2021-02-25 10:11:27","endLine":386,"groupId":"15554","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDismissingSnapshot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/23/c4bde0a0227525d78088e0dbebbc2680ef7c4a.src","preCode":"    public void testDismissingSnapshot() throws Exception {\n        setupRocksKeyedStateBackend();\n        try {\n            RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot =\n                    keyedStateBackend.snapshot(\n                            0L,\n                            0L,\n                            testStreamFactory,\n                            CheckpointOptions.forCheckpointWithDefaultLocation());\n            snapshot.cancel(true);\n            verifyRocksObjectsReleased();\n        } finally {\n            this.keyedStateBackend.dispose();\n            this.keyedStateBackend = null;\n        }\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/EmbeddedRocksDBStateBackendTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":371,"status":"B"},{"authorDate":"2021-01-22 04:15:38","commitOrder":1,"curCode":"    public void testDismissingSnapshotNotRunnable() throws Exception {\n        setupRocksKeyedStateBackend();\n        try {\n            RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot =\n                    keyedStateBackend.snapshot(\n                            0L,\n                            0L,\n                            testStreamFactory,\n                            CheckpointOptions.forCheckpointWithDefaultLocation());\n            snapshot.cancel(true);\n            Thread asyncSnapshotThread = new Thread(snapshot);\n            asyncSnapshotThread.start();\n            try {\n                snapshot.get();\n                fail();\n            } catch (Exception ignored) {\n\n            }\n            asyncSnapshotThread.join();\n            verifyRocksObjectsReleased();\n        } finally {\n            this.keyedStateBackend.dispose();\n            this.keyedStateBackend = null;\n        }\n    }\n","date":"2021-02-25 10:11:27","endLine":413,"groupId":"15554","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDismissingSnapshotNotRunnable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/23/c4bde0a0227525d78088e0dbebbc2680ef7c4a.src","preCode":"    public void testDismissingSnapshotNotRunnable() throws Exception {\n        setupRocksKeyedStateBackend();\n        try {\n            RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot =\n                    keyedStateBackend.snapshot(\n                            0L,\n                            0L,\n                            testStreamFactory,\n                            CheckpointOptions.forCheckpointWithDefaultLocation());\n            snapshot.cancel(true);\n            Thread asyncSnapshotThread = new Thread(snapshot);\n            asyncSnapshotThread.start();\n            try {\n                snapshot.get();\n                fail();\n            } catch (Exception ignored) {\n\n            }\n            asyncSnapshotThread.join();\n            verifyRocksObjectsReleased();\n        } finally {\n            this.keyedStateBackend.dispose();\n            this.keyedStateBackend = null;\n        }\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/EmbeddedRocksDBStateBackendTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"B"}],"commitId":"0a76daba0a428a322f0273d7dc6a70966f62bf26","commitMessage":"@@@[FLINK-19467][runtime / state backends] Implement HashMapStateBackend and EmbeddedRocksDBStateBackend\n","date":"2021-02-25 10:11:27","modifiedFileCount":"32","status":"B","submitter":"Seth Wiesman"},{"authorTime":"2021-06-17 00:35:27","codes":[{"authorDate":"2021-06-17 00:35:27","commitOrder":2,"curCode":"    public void testDismissingSnapshot() throws Exception {\n        setupRocksKeyedStateBackend();\n        try {\n            RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot =\n                    keyedStateBackend.snapshot(\n                            0L,\n                            0L,\n                            testStreamFactory,\n                            CheckpointOptions.forCheckpointWithDefaultLocation());\n            snapshot.cancel(true);\n            verifyRocksObjectsReleased();\n        } finally {\n            this.keyedStateBackend.dispose();\n            this.keyedStateBackend = null;\n        }\n        verifyRocksDBStateUploaderClosed();\n    }\n","date":"2021-06-21 23:03:35","endLine":399,"groupId":"1068","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testDismissingSnapshot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8c/13466c7cbe1ee7439c691348552e1a25dec403.src","preCode":"    public void testDismissingSnapshot() throws Exception {\n        setupRocksKeyedStateBackend();\n        try {\n            RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot =\n                    keyedStateBackend.snapshot(\n                            0L,\n                            0L,\n                            testStreamFactory,\n                            CheckpointOptions.forCheckpointWithDefaultLocation());\n            snapshot.cancel(true);\n            verifyRocksObjectsReleased();\n        } finally {\n            this.keyedStateBackend.dispose();\n            this.keyedStateBackend = null;\n        }\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/EmbeddedRocksDBStateBackendTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":383,"status":"M"},{"authorDate":"2021-06-17 00:35:27","commitOrder":2,"curCode":"    public void testDismissingSnapshotNotRunnable() throws Exception {\n        setupRocksKeyedStateBackend();\n        try {\n            RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot =\n                    keyedStateBackend.snapshot(\n                            0L,\n                            0L,\n                            testStreamFactory,\n                            CheckpointOptions.forCheckpointWithDefaultLocation());\n            snapshot.cancel(true);\n            Thread asyncSnapshotThread = new Thread(snapshot);\n            asyncSnapshotThread.start();\n            try {\n                snapshot.get();\n                fail();\n            } catch (Exception ignored) {\n\n            }\n            asyncSnapshotThread.join();\n            verifyRocksObjectsReleased();\n        } finally {\n            this.keyedStateBackend.dispose();\n            this.keyedStateBackend = null;\n        }\n        verifyRocksDBStateUploaderClosed();\n    }\n","date":"2021-06-21 23:03:35","endLine":427,"groupId":"1068","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testDismissingSnapshotNotRunnable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8c/13466c7cbe1ee7439c691348552e1a25dec403.src","preCode":"    public void testDismissingSnapshotNotRunnable() throws Exception {\n        setupRocksKeyedStateBackend();\n        try {\n            RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot =\n                    keyedStateBackend.snapshot(\n                            0L,\n                            0L,\n                            testStreamFactory,\n                            CheckpointOptions.forCheckpointWithDefaultLocation());\n            snapshot.cancel(true);\n            Thread asyncSnapshotThread = new Thread(snapshot);\n            asyncSnapshotThread.start();\n            try {\n                snapshot.get();\n                fail();\n            } catch (Exception ignored) {\n\n            }\n            asyncSnapshotThread.join();\n            verifyRocksObjectsReleased();\n        } finally {\n            this.keyedStateBackend.dispose();\n            this.keyedStateBackend = null;\n        }\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/EmbeddedRocksDBStateBackendTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":402,"status":"M"}],"commitId":"3ebb34ec5e67f70f13898570d2f331fc9f32b4f7","commitMessage":"@@@[FLINK-22886][state] Add unit test for resource leak in RocksIncrementalSnapshotStrategy\n","date":"2021-06-21 23:03:35","modifiedFileCount":"4","status":"M","submitter":"mayue.fight"}]
