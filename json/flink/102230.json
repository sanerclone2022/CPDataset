[{"authorTime":"2016-12-10 01:41:36","codes":[{"authorDate":"2016-12-10 01:41:36","commitOrder":1,"curCode":"\tpublic void ignoreSingleCharPrefixComments() throws Exception {\n\t\tString fileContent =\n\t\t\t\"#description of the data\\n\" +\n\t\t\t\t\"#successive commented line\\n\" +\n\t\t\t\t\"this is|1|2.0|\\n\" +\n\t\t\t\t\"a test|3|4.0|\\n\" +\n\t\t\t\t\"#next|5|6.0|\\n\";\n\n\t\tFileInputSplit split = createTempFile(fileContent);\n\n\t\tRowTypeInfo typeInfo = new RowTypeInfo(\n\t\t\tBasicTypeInfo.STRING_TYPE_INFO,\n\t\t\tBasicTypeInfo.INT_TYPE_INFO,\n\t\t\tBasicTypeInfo.DOUBLE_TYPE_INFO);\n\n\t\tRowCsvInputFormat format = new RowCsvInputFormat(PATH, typeInfo, \"\\n\", \"|\");\n\t\tformat.setCommentPrefix(\"#\");\n\t\tformat.configure(new Configuration());\n\t\tformat.open(split);\n\n\t\tRow result = new Row(3);\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"this is\", result.getField(0));\n\t\tassertEquals(1, result.getField(1));\n\t\tassertEquals(2.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"a test\", result.getField(0));\n\t\tassertEquals(3, result.getField(1));\n\t\tassertEquals(4.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNull(result);\n\t}\n","date":"2016-12-15 18:36:40","endLine":190,"groupId":"30014","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ignoreSingleCharPrefixComments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a6/8e81ee839a623e584cfc0ed94f51d8ace5d0a9.src","preCode":"\tpublic void ignoreSingleCharPrefixComments() throws Exception {\n\t\tString fileContent =\n\t\t\t\"#description of the data\\n\" +\n\t\t\t\t\"#successive commented line\\n\" +\n\t\t\t\t\"this is|1|2.0|\\n\" +\n\t\t\t\t\"a test|3|4.0|\\n\" +\n\t\t\t\t\"#next|5|6.0|\\n\";\n\n\t\tFileInputSplit split = createTempFile(fileContent);\n\n\t\tRowTypeInfo typeInfo = new RowTypeInfo(\n\t\t\tBasicTypeInfo.STRING_TYPE_INFO,\n\t\t\tBasicTypeInfo.INT_TYPE_INFO,\n\t\t\tBasicTypeInfo.DOUBLE_TYPE_INFO);\n\n\t\tRowCsvInputFormat format = new RowCsvInputFormat(PATH, typeInfo, \"\\n\", \"|\");\n\t\tformat.setCommentPrefix(\"#\");\n\t\tformat.configure(new Configuration());\n\t\tformat.open(split);\n\n\t\tRow result = new Row(3);\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"this is\", result.getField(0));\n\t\tassertEquals(1, result.getField(1));\n\t\tassertEquals(2.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"a test\", result.getField(0));\n\t\tassertEquals(3, result.getField(1));\n\t\tassertEquals(4.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNull(result);\n\t}\n","realPath":"flink-java/src/test/java/org/apache/flink/api/java/io/RowCsvInputFormatTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"B"},{"authorDate":"2016-12-10 01:41:36","commitOrder":1,"curCode":"\tpublic void ignoreMultiCharPrefixComments() throws Exception {\n\t\tString fileContent =\n\t\t\t\"//description of the data\\n\" +\n\t\t\t\t\"//successive commented line\\n\" +\n\t\t\t\t\"this is|1|2.0|\\n\" +\n\t\t\t\t\"a test|3|4.0|\\n\" +\n\t\t\t\t\"//next|5|6.0|\\n\";\n\n\t\tFileInputSplit split = createTempFile(fileContent);\n\n\t\tRowTypeInfo typeInfo = new RowTypeInfo(\n\t\t\tBasicTypeInfo.STRING_TYPE_INFO,\n\t\t\tBasicTypeInfo.INT_TYPE_INFO,\n\t\t\tBasicTypeInfo.DOUBLE_TYPE_INFO);\n\n\t\tRowCsvInputFormat format = new RowCsvInputFormat(PATH, typeInfo, \"\\n\", \"|\");\n\t\tformat.setCommentPrefix(\"//\");\n\t\tformat.configure(new Configuration());\n\t\tformat.open(split);\n\n\t\tRow result = new Row(3);\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"this is\", result.getField(0));\n\t\tassertEquals(1, result.getField(1));\n\t\tassertEquals(2.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"a test\", result.getField(0));\n\t\tassertEquals(3, result.getField(1));\n\t\tassertEquals(4.0, result.getField(2));\n\t\tresult = format.nextRecord(result);\n\t\tassertNull(result);\n\t}\n","date":"2016-12-15 18:36:40","endLine":228,"groupId":"30014","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ignoreMultiCharPrefixComments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a6/8e81ee839a623e584cfc0ed94f51d8ace5d0a9.src","preCode":"\tpublic void ignoreMultiCharPrefixComments() throws Exception {\n\t\tString fileContent =\n\t\t\t\"//description of the data\\n\" +\n\t\t\t\t\"//successive commented line\\n\" +\n\t\t\t\t\"this is|1|2.0|\\n\" +\n\t\t\t\t\"a test|3|4.0|\\n\" +\n\t\t\t\t\"//next|5|6.0|\\n\";\n\n\t\tFileInputSplit split = createTempFile(fileContent);\n\n\t\tRowTypeInfo typeInfo = new RowTypeInfo(\n\t\t\tBasicTypeInfo.STRING_TYPE_INFO,\n\t\t\tBasicTypeInfo.INT_TYPE_INFO,\n\t\t\tBasicTypeInfo.DOUBLE_TYPE_INFO);\n\n\t\tRowCsvInputFormat format = new RowCsvInputFormat(PATH, typeInfo, \"\\n\", \"|\");\n\t\tformat.setCommentPrefix(\"//\");\n\t\tformat.configure(new Configuration());\n\t\tformat.open(split);\n\n\t\tRow result = new Row(3);\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"this is\", result.getField(0));\n\t\tassertEquals(1, result.getField(1));\n\t\tassertEquals(2.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"a test\", result.getField(0));\n\t\tassertEquals(3, result.getField(1));\n\t\tassertEquals(4.0, result.getField(2));\n\t\tresult = format.nextRecord(result);\n\t\tassertNull(result);\n\t}\n","realPath":"flink-java/src/test/java/org/apache/flink/api/java/io/RowCsvInputFormatTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"B"}],"commitId":"4d27f8f2deef9fad845ebc91cef121cf9b35f825","commitMessage":"@@@[FLINK-5188] [table] [connectors] [core] Adjust imports and method calls to new Row type.\n\n- Port RowCsvInputFormat to Java and move it to flink-core.\n\nThis closes #3003.\n","date":"2016-12-15 18:36:40","modifiedFileCount":"35","status":"B","submitter":"tonycox"},{"authorTime":"2016-12-08 16:00:40","codes":[{"authorDate":"2016-12-08 16:00:40","commitOrder":2,"curCode":"\tpublic void ignoreSingleCharPrefixComments() throws Exception {\n\t\tString fileContent =\n\t\t\t\"#description of the data\\n\" +\n\t\t\t\t\"#successive commented line\\n\" +\n\t\t\t\t\"this is|1|2.0|\\n\" +\n\t\t\t\t\"a test|3|4.0|\\n\" +\n\t\t\t\t\"#next|5|6.0|\\n\";\n\n\t\tFileInputSplit split = createTempFile(fileContent);\n\n\t\tTypeInformation[] fieldTypes = new TypeInformation[]{\n\t\t\tBasicTypeInfo.STRING_TYPE_INFO,\n\t\t\tBasicTypeInfo.INT_TYPE_INFO,\n\t\t\tBasicTypeInfo.DOUBLE_TYPE_INFO};\n\n\t\tRowCsvInputFormat format = new RowCsvInputFormat(PATH, fieldTypes, \"\\n\", \"|\");\n\t\tformat.setCommentPrefix(\"#\");\n\t\tformat.configure(new Configuration());\n\t\tformat.open(split);\n\n\t\tRow result = new Row(3);\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"this is\", result.getField(0));\n\t\tassertEquals(1, result.getField(1));\n\t\tassertEquals(2.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"a test\", result.getField(0));\n\t\tassertEquals(3, result.getField(1));\n\t\tassertEquals(4.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNull(result);\n\t}\n","date":"2016-12-16 23:41:21","endLine":191,"groupId":"102230","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ignoreSingleCharPrefixComments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b8/19641c8f09fd05bd471919ed81bcc56ea12ee7.src","preCode":"\tpublic void ignoreSingleCharPrefixComments() throws Exception {\n\t\tString fileContent =\n\t\t\t\"#description of the data\\n\" +\n\t\t\t\t\"#successive commented line\\n\" +\n\t\t\t\t\"this is|1|2.0|\\n\" +\n\t\t\t\t\"a test|3|4.0|\\n\" +\n\t\t\t\t\"#next|5|6.0|\\n\";\n\n\t\tFileInputSplit split = createTempFile(fileContent);\n\n\t\tRowTypeInfo typeInfo = new RowTypeInfo(\n\t\t\tBasicTypeInfo.STRING_TYPE_INFO,\n\t\t\tBasicTypeInfo.INT_TYPE_INFO,\n\t\t\tBasicTypeInfo.DOUBLE_TYPE_INFO);\n\n\t\tRowCsvInputFormat format = new RowCsvInputFormat(PATH, typeInfo, \"\\n\", \"|\");\n\t\tformat.setCommentPrefix(\"#\");\n\t\tformat.configure(new Configuration());\n\t\tformat.open(split);\n\n\t\tRow result = new Row(3);\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"this is\", result.getField(0));\n\t\tassertEquals(1, result.getField(1));\n\t\tassertEquals(2.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"a test\", result.getField(0));\n\t\tassertEquals(3, result.getField(1));\n\t\tassertEquals(4.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNull(result);\n\t}\n","realPath":"flink-java/src/test/java/org/apache/flink/api/java/io/RowCsvInputFormatTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"},{"authorDate":"2016-12-08 16:00:40","commitOrder":2,"curCode":"\tpublic void ignoreMultiCharPrefixComments() throws Exception {\n\t\tString fileContent =\n\t\t\t\"//description of the data\\n\" +\n\t\t\t\t\"//successive commented line\\n\" +\n\t\t\t\t\"this is|1|2.0|\\n\" +\n\t\t\t\t\"a test|3|4.0|\\n\" +\n\t\t\t\t\"//next|5|6.0|\\n\";\n\n\t\tFileInputSplit split = createTempFile(fileContent);\n\n\t\tTypeInformation[] fieldTypes = new TypeInformation[]{\n\t\t\tBasicTypeInfo.STRING_TYPE_INFO,\n\t\t\tBasicTypeInfo.INT_TYPE_INFO,\n\t\t\tBasicTypeInfo.DOUBLE_TYPE_INFO};\n\n\t\tRowCsvInputFormat format = new RowCsvInputFormat(PATH, fieldTypes, \"\\n\", \"|\");\n\t\tformat.setCommentPrefix(\"//\");\n\t\tformat.configure(new Configuration());\n\t\tformat.open(split);\n\n\t\tRow result = new Row(3);\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"this is\", result.getField(0));\n\t\tassertEquals(1, result.getField(1));\n\t\tassertEquals(2.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"a test\", result.getField(0));\n\t\tassertEquals(3, result.getField(1));\n\t\tassertEquals(4.0, result.getField(2));\n\t\tresult = format.nextRecord(result);\n\t\tassertNull(result);\n\t}\n","date":"2016-12-16 23:41:21","endLine":229,"groupId":"102230","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ignoreMultiCharPrefixComments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b8/19641c8f09fd05bd471919ed81bcc56ea12ee7.src","preCode":"\tpublic void ignoreMultiCharPrefixComments() throws Exception {\n\t\tString fileContent =\n\t\t\t\"//description of the data\\n\" +\n\t\t\t\t\"//successive commented line\\n\" +\n\t\t\t\t\"this is|1|2.0|\\n\" +\n\t\t\t\t\"a test|3|4.0|\\n\" +\n\t\t\t\t\"//next|5|6.0|\\n\";\n\n\t\tFileInputSplit split = createTempFile(fileContent);\n\n\t\tRowTypeInfo typeInfo = new RowTypeInfo(\n\t\t\tBasicTypeInfo.STRING_TYPE_INFO,\n\t\t\tBasicTypeInfo.INT_TYPE_INFO,\n\t\t\tBasicTypeInfo.DOUBLE_TYPE_INFO);\n\n\t\tRowCsvInputFormat format = new RowCsvInputFormat(PATH, typeInfo, \"\\n\", \"|\");\n\t\tformat.setCommentPrefix(\"//\");\n\t\tformat.configure(new Configuration());\n\t\tformat.open(split);\n\n\t\tRow result = new Row(3);\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"this is\", result.getField(0));\n\t\tassertEquals(1, result.getField(1));\n\t\tassertEquals(2.0, result.getField(2));\n\n\t\tresult = format.nextRecord(result);\n\t\tassertNotNull(result);\n\t\tassertEquals(\"a test\", result.getField(0));\n\t\tassertEquals(3, result.getField(1));\n\t\tassertEquals(4.0, result.getField(2));\n\t\tresult = format.nextRecord(result);\n\t\tassertNull(result);\n\t}\n","realPath":"flink-java/src/test/java/org/apache/flink/api/java/io/RowCsvInputFormatTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"}],"commitId":"ef575e87e8a77d56673d40d98d3d66c6511d57ab","commitMessage":"@@@[FLINK-3848] [table] Add projection push down for StreamTableSource.\n\n- Add plan tests for projection push down.\n- Implement ProjectableTableSource in CsvTableSource.\n- Refactored RowCsvInputFormat\n\nThis closes #2810.\n","date":"2016-12-16 23:41:21","modifiedFileCount":"2","status":"M","submitter":"tonycox"}]
