[{"authorTime":"2020-08-25 19:19:04","codes":[{"authorDate":"2020-08-25 19:19:04","commitOrder":1,"curCode":"\tpublic void testTableInputFormatOpenClose() throws IOException {\n\t\tHBaseTableSchema tableSchema = new HBaseTableSchema();\n\t\ttableSchema.addColumn(FAMILY1, F1COL1, byte[].class);\n\t\tAbstractTableInputFormat<?> inputFormat;\n\t\tif (isLegacyConnector) {\n\t\t\tinputFormat = new HBaseRowInputFormat(getConf(), TEST_TABLE_1, tableSchema);\n\t\t} else {\n\t\t\tinputFormat = new HBaseRowDataInputFormat(getConf(), TEST_TABLE_1, tableSchema, \"null\");\n\t\t}\n\t\tinputFormat.open(inputFormat.createInputSplits(1)[0]);\n\t\tassertNotNull(inputFormat.getConnection());\n\t\tassertNotNull(inputFormat.getConnection().getTable(TableName.valueOf(TEST_TABLE_1)));\n\n\t\tinputFormat.close();\n\t\tassertNull(inputFormat.getConnection());\n\t}\n","date":"2020-09-28 22:08:46","endLine":526,"groupId":"32792","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTableInputFormatOpenClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/31/95e053e619c5bf26b1781f718b867227e1e938.src","preCode":"\tpublic void testTableInputFormatOpenClose() throws IOException {\n\t\tHBaseTableSchema tableSchema = new HBaseTableSchema();\n\t\ttableSchema.addColumn(FAMILY1, F1COL1, byte[].class);\n\t\tAbstractTableInputFormat<?> inputFormat;\n\t\tif (isLegacyConnector) {\n\t\t\tinputFormat = new HBaseRowInputFormat(getConf(), TEST_TABLE_1, tableSchema);\n\t\t} else {\n\t\t\tinputFormat = new HBaseRowDataInputFormat(getConf(), TEST_TABLE_1, tableSchema, \"null\");\n\t\t}\n\t\tinputFormat.open(inputFormat.createInputSplits(1)[0]);\n\t\tassertNotNull(inputFormat.getConnection());\n\t\tassertNotNull(inputFormat.getConnection().getTable(TableName.valueOf(TEST_TABLE_1)));\n\n\t\tinputFormat.close();\n\t\tassertNull(inputFormat.getConnection());\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-1.4/src/test/java/org/apache/flink/connector/hbase1/HBaseConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":511,"status":"B"},{"authorDate":"2020-08-25 19:19:04","commitOrder":1,"curCode":"\tpublic void testTableInputFormatOpenClose() throws IOException {\n\t\tHBaseTableSchema tableSchema = new HBaseTableSchema();\n\t\ttableSchema.addColumn(FAMILY1, F1COL1, byte[].class);\n\t\tAbstractTableInputFormat<?> inputFormat;\n\t\tif (isLegacyConnector) {\n\t\t\tinputFormat = new HBaseRowInputFormat(getConf(), TEST_TABLE_1, tableSchema);\n\t\t} else {\n\t\t\tinputFormat = new HBaseRowDataInputFormat(getConf(), TEST_TABLE_1, tableSchema, \"null\");\n\t\t}\n\t\tinputFormat.open(inputFormat.createInputSplits(1)[0]);\n\t\tassertNotNull(inputFormat.getConnection());\n\t\tassertNotNull(inputFormat.getConnection().getTable(TableName.valueOf(TEST_TABLE_1)));\n\n\t\tinputFormat.close();\n\t\tassertNull(inputFormat.getConnection());\n\t}\n","date":"2020-09-28 22:08:46","endLine":529,"groupId":"32792","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTableInputFormatOpenClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c6/fc1ee3d7be85cca2a8be09b35b18f7e490ab40.src","preCode":"\tpublic void testTableInputFormatOpenClose() throws IOException {\n\t\tHBaseTableSchema tableSchema = new HBaseTableSchema();\n\t\ttableSchema.addColumn(FAMILY1, F1COL1, byte[].class);\n\t\tAbstractTableInputFormat<?> inputFormat;\n\t\tif (isLegacyConnector) {\n\t\t\tinputFormat = new HBaseRowInputFormat(getConf(), TEST_TABLE_1, tableSchema);\n\t\t} else {\n\t\t\tinputFormat = new HBaseRowDataInputFormat(getConf(), TEST_TABLE_1, tableSchema, \"null\");\n\t\t}\n\t\tinputFormat.open(inputFormat.createInputSplits(1)[0]);\n\t\tassertNotNull(inputFormat.getConnection());\n\t\tassertNotNull(inputFormat.getConnection().getTable(TableName.valueOf(TEST_TABLE_1)));\n\n\t\tinputFormat.close();\n\t\tassertNull(inputFormat.getConnection());\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-2.2/src/test/java/org/apache/flink/connector/hbase2/HBaseConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":514,"status":"B"}],"commitId":"16c97c8db718219ed036218faf3519541f24b430","commitMessage":"@@@[FLINK-18795][hbase] Support for HBase 2\n\nThis closes #13128\n","date":"2020-09-28 22:08:46","modifiedFileCount":"5","status":"B","submitter":"Miklos Gergely"},{"authorTime":"2021-05-11 23:29:15","codes":[{"authorDate":"2021-05-11 23:29:15","commitOrder":2,"curCode":"    public void testTableInputFormatOpenClose() throws IOException {\n        HBaseTableSchema tableSchema = new HBaseTableSchema();\n        tableSchema.addColumn(FAMILY1, F1COL1, byte[].class);\n        AbstractTableInputFormat<?> inputFormat =\n                new HBaseRowDataInputFormat(getConf(), TEST_TABLE_1, tableSchema, \"null\");\n        inputFormat.open(inputFormat.createInputSplits(1)[0]);\n        assertNotNull(inputFormat.getConnection());\n        assertNotNull(inputFormat.getConnection().getTable(TableName.valueOf(TEST_TABLE_1)));\n\n        inputFormat.close();\n        assertNull(inputFormat.getConnection());\n    }\n","date":"2021-05-18 19:59:43","endLine":435,"groupId":"10771","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testTableInputFormatOpenClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1a/d2dd2d196495dada8ff95f9e5d245a82edfaa4.src","preCode":"    public void testTableInputFormatOpenClose() throws IOException {\n        HBaseTableSchema tableSchema = new HBaseTableSchema();\n        tableSchema.addColumn(FAMILY1, F1COL1, byte[].class);\n        AbstractTableInputFormat<?> inputFormat;\n        if (isLegacyConnector) {\n            inputFormat = new HBaseRowInputFormat(getConf(), TEST_TABLE_1, tableSchema);\n        } else {\n            inputFormat = new HBaseRowDataInputFormat(getConf(), TEST_TABLE_1, tableSchema, \"null\");\n        }\n        inputFormat.open(inputFormat.createInputSplits(1)[0]);\n        assertNotNull(inputFormat.getConnection());\n        assertNotNull(inputFormat.getConnection().getTable(TableName.valueOf(TEST_TABLE_1)));\n\n        inputFormat.close();\n        assertNull(inputFormat.getConnection());\n    }\n","realPath":"flink-connectors/flink-connector-hbase-1.4/src/test/java/org/apache/flink/connector/hbase1/HBaseConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":424,"status":"M"},{"authorDate":"2021-05-11 23:29:15","commitOrder":2,"curCode":"    public void testTableInputFormatOpenClose() throws IOException {\n        HBaseTableSchema tableSchema = new HBaseTableSchema();\n        tableSchema.addColumn(FAMILY1, F1COL1, byte[].class);\n        AbstractTableInputFormat<?> inputFormat =\n                new HBaseRowDataInputFormat(getConf(), TEST_TABLE_1, tableSchema, \"null\");\n        inputFormat.open(inputFormat.createInputSplits(1)[0]);\n        assertNotNull(inputFormat.getConnection());\n        assertNotNull(inputFormat.getConnection().getTable(TableName.valueOf(TEST_TABLE_1)));\n\n        inputFormat.close();\n        assertNull(inputFormat.getConnection());\n    }\n","date":"2021-05-18 19:59:43","endLine":381,"groupId":"10771","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTableInputFormatOpenClose","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d9/633161cafadb4faec63a4d8e2e9e03f2c00381.src","preCode":"    public void testTableInputFormatOpenClose() throws IOException {\n        HBaseTableSchema tableSchema = new HBaseTableSchema();\n        tableSchema.addColumn(FAMILY1, F1COL1, byte[].class);\n        AbstractTableInputFormat<?> inputFormat;\n        if (isLegacyConnector) {\n            inputFormat = new HBaseRowInputFormat(getConf(), TEST_TABLE_1, tableSchema);\n        } else {\n            inputFormat = new HBaseRowDataInputFormat(getConf(), TEST_TABLE_1, tableSchema, \"null\");\n        }\n        inputFormat.open(inputFormat.createInputSplits(1)[0]);\n        assertNotNull(inputFormat.getConnection());\n        assertNotNull(inputFormat.getConnection().getTable(TableName.valueOf(TEST_TABLE_1)));\n\n        inputFormat.close();\n        assertNull(inputFormat.getConnection());\n    }\n","realPath":"flink-connectors/flink-connector-hbase-2.2/src/test/java/org/apache/flink/connector/hbase2/HBaseConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"M"}],"commitId":"97610190fbdf4899e7d9aa8888971a0423fb7d81","commitMessage":"@@@[FLINK-22623][hbase] Drop BatchTableSource/Sink HBaseTableSource/Sink and related classes\n\nThis removes the HBaseTableSource/Sink and related classes including various HBaseInputFormats and\nHBaseSinkFunction. It is possible to read via Table & SQL API and convert the Table to DataStream API\n(or vice versa) if necessary. DataSet API is not supported anymore.\n\nThis closes #15905.\n","date":"2021-05-18 19:59:43","modifiedFileCount":"5","status":"M","submitter":"Timo Walther"}]
