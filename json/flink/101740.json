[{"authorTime":"2021-07-12 15:32:54","codes":[{"authorDate":"2021-07-12 15:32:54","commitOrder":1,"curCode":"    public void testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResult() throws Throwable {\n        final JobID testJobID = new JobID(0, 2);\n        final Configuration configurationUnderTest = getConfiguration();\n        configurationUnderTest.set(\n                PipelineOptionsInternal.PIPELINE_FIXED_JOB_ID, testJobID.toHexString());\n        configurationUnderTest.set(\n                HighAvailabilityOptions.HA_MODE, HighAvailabilityMode.ZOOKEEPER.name());\n        final TestingDispatcherGateway.Builder dispatcherBuilder =\n                new TestingDispatcherGateway.Builder()\n                        .setSubmitFunction(\n                                jobGraph ->\n                                        FutureUtils.completedExceptionally(\n                                                new DuplicateJobSubmissionException(\n                                                        testJobID, true)))\n                        .setRequestJobStatusFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)))\n                        .setRequestJobResultFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)));\n        final CompletableFuture<Void> applicationFuture =\n                runApplication(dispatcherBuilder, configurationUnderTest, 1);\n        applicationFuture.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);\n    }\n","date":"2021-07-15 17:19:29","endLine":718,"groupId":"29058","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e1/606a140257c442804b9de23127a1cfcae85b45.src","preCode":"    public void testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResult() throws Throwable {\n        final JobID testJobID = new JobID(0, 2);\n        final Configuration configurationUnderTest = getConfiguration();\n        configurationUnderTest.set(\n                PipelineOptionsInternal.PIPELINE_FIXED_JOB_ID, testJobID.toHexString());\n        configurationUnderTest.set(\n                HighAvailabilityOptions.HA_MODE, HighAvailabilityMode.ZOOKEEPER.name());\n        final TestingDispatcherGateway.Builder dispatcherBuilder =\n                new TestingDispatcherGateway.Builder()\n                        .setSubmitFunction(\n                                jobGraph ->\n                                        FutureUtils.completedExceptionally(\n                                                new DuplicateJobSubmissionException(\n                                                        testJobID, true)))\n                        .setRequestJobStatusFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)))\n                        .setRequestJobResultFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)));\n        final CompletableFuture<Void> applicationFuture =\n                runApplication(dispatcherBuilder, configurationUnderTest, 1);\n        applicationFuture.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);\n    }\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/deployment/application/ApplicationDispatcherBootstrapTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":693,"status":"B"},{"authorDate":"2021-07-12 15:32:54","commitOrder":1,"curCode":"    public void testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResultAttached()\n            throws Throwable {\n        final JobID testJobID = new JobID(0, 2);\n        final Configuration configurationUnderTest = getConfiguration();\n        configurationUnderTest.set(\n                PipelineOptionsInternal.PIPELINE_FIXED_JOB_ID, testJobID.toHexString());\n        configurationUnderTest.set(\n                HighAvailabilityOptions.HA_MODE, HighAvailabilityMode.ZOOKEEPER.name());\n        final TestingDispatcherGateway.Builder dispatcherBuilder =\n                new TestingDispatcherGateway.Builder()\n                        .setSubmitFunction(\n                                jobGraph ->\n                                        FutureUtils.completedExceptionally(\n                                                new DuplicateJobSubmissionException(\n                                                        testJobID, true)))\n                        .setRequestJobStatusFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)))\n                        .setRequestJobResultFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)));\n        final CompletableFuture<Void> applicationFuture =\n                runApplication(dispatcherBuilder, configurationUnderTest, 1);\n        applicationFuture.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);\n    }\n","date":"2021-07-15 17:19:29","endLine":753,"groupId":"29058","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResultAttached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e1/606a140257c442804b9de23127a1cfcae85b45.src","preCode":"    public void testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResultAttached()\n            throws Throwable {\n        final JobID testJobID = new JobID(0, 2);\n        final Configuration configurationUnderTest = getConfiguration();\n        configurationUnderTest.set(\n                PipelineOptionsInternal.PIPELINE_FIXED_JOB_ID, testJobID.toHexString());\n        configurationUnderTest.set(\n                HighAvailabilityOptions.HA_MODE, HighAvailabilityMode.ZOOKEEPER.name());\n        final TestingDispatcherGateway.Builder dispatcherBuilder =\n                new TestingDispatcherGateway.Builder()\n                        .setSubmitFunction(\n                                jobGraph ->\n                                        FutureUtils.completedExceptionally(\n                                                new DuplicateJobSubmissionException(\n                                                        testJobID, true)))\n                        .setRequestJobStatusFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)))\n                        .setRequestJobResultFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)));\n        final CompletableFuture<Void> applicationFuture =\n                runApplication(dispatcherBuilder, configurationUnderTest, 1);\n        applicationFuture.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);\n    }\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/deployment/application/ApplicationDispatcherBootstrapTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":727,"status":"B"}],"commitId":"172b9e322151c079cb1c31323ec6697da48e67de","commitMessage":"@@@[FLINK-21928][clients] JobManager failover should succeed.  when trying to resubmit already terminated job in application mode.\n\n[FLINK-21928][clients] Tolerate missing job result for already terminated jobs after JM failover in application mode.\n","date":"2021-07-15 17:19:29","modifiedFileCount":"8","status":"B","submitter":"David Moravek"},{"authorTime":"2021-07-12 22:51:55","codes":[{"authorDate":"2021-07-12 22:51:55","commitOrder":2,"curCode":"    public void testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResult() throws Throwable {\n        final JobID testJobID = new JobID(0, 2);\n        final Configuration configurationUnderTest = getConfiguration();\n        configurationUnderTest.set(\n                PipelineOptionsInternal.PIPELINE_FIXED_JOB_ID, testJobID.toHexString());\n        configurationUnderTest.set(\n                HighAvailabilityOptions.HA_MODE, HighAvailabilityMode.ZOOKEEPER.name());\n        final TestingDispatcherGateway.Builder dispatcherBuilder =\n                new TestingDispatcherGateway.Builder()\n                        .setSubmitFunction(\n                                jobGraph ->\n                                        FutureUtils.completedExceptionally(\n                                                DuplicateJobSubmissionException\n                                                        .ofGloballyTerminated(testJobID)))\n                        .setRequestJobStatusFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)))\n                        .setRequestJobResultFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)));\n        final CompletableFuture<Void> applicationFuture =\n                runApplication(dispatcherBuilder, configurationUnderTest, 1);\n        applicationFuture.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);\n    }\n","date":"2021-07-15 17:19:32","endLine":718,"groupId":"101740","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/87/8ebcbeb39890cf66be5fcfc86fb0f88b015e08.src","preCode":"    public void testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResult() throws Throwable {\n        final JobID testJobID = new JobID(0, 2);\n        final Configuration configurationUnderTest = getConfiguration();\n        configurationUnderTest.set(\n                PipelineOptionsInternal.PIPELINE_FIXED_JOB_ID, testJobID.toHexString());\n        configurationUnderTest.set(\n                HighAvailabilityOptions.HA_MODE, HighAvailabilityMode.ZOOKEEPER.name());\n        final TestingDispatcherGateway.Builder dispatcherBuilder =\n                new TestingDispatcherGateway.Builder()\n                        .setSubmitFunction(\n                                jobGraph ->\n                                        FutureUtils.completedExceptionally(\n                                                new DuplicateJobSubmissionException(\n                                                        testJobID, true)))\n                        .setRequestJobStatusFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)))\n                        .setRequestJobResultFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)));\n        final CompletableFuture<Void> applicationFuture =\n                runApplication(dispatcherBuilder, configurationUnderTest, 1);\n        applicationFuture.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);\n    }\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/deployment/application/ApplicationDispatcherBootstrapTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":693,"status":"M"},{"authorDate":"2021-07-12 22:51:55","commitOrder":2,"curCode":"    public void testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResultAttached()\n            throws Throwable {\n        final JobID testJobID = new JobID(0, 2);\n        final Configuration configurationUnderTest = getConfiguration();\n        configurationUnderTest.set(\n                PipelineOptionsInternal.PIPELINE_FIXED_JOB_ID, testJobID.toHexString());\n        configurationUnderTest.set(\n                HighAvailabilityOptions.HA_MODE, HighAvailabilityMode.ZOOKEEPER.name());\n        final TestingDispatcherGateway.Builder dispatcherBuilder =\n                new TestingDispatcherGateway.Builder()\n                        .setSubmitFunction(\n                                jobGraph ->\n                                        FutureUtils.completedExceptionally(\n                                                DuplicateJobSubmissionException\n                                                        .ofGloballyTerminated(testJobID)))\n                        .setRequestJobStatusFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)))\n                        .setRequestJobResultFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)));\n        final CompletableFuture<Void> applicationFuture =\n                runApplication(dispatcherBuilder, configurationUnderTest, 1);\n        applicationFuture.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);\n    }\n","date":"2021-07-15 17:19:32","endLine":753,"groupId":"101740","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResultAttached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/87/8ebcbeb39890cf66be5fcfc86fb0f88b015e08.src","preCode":"    public void testDuplicateJobSubmissionWithTerminatedJobIdWithUnknownResultAttached()\n            throws Throwable {\n        final JobID testJobID = new JobID(0, 2);\n        final Configuration configurationUnderTest = getConfiguration();\n        configurationUnderTest.set(\n                PipelineOptionsInternal.PIPELINE_FIXED_JOB_ID, testJobID.toHexString());\n        configurationUnderTest.set(\n                HighAvailabilityOptions.HA_MODE, HighAvailabilityMode.ZOOKEEPER.name());\n        final TestingDispatcherGateway.Builder dispatcherBuilder =\n                new TestingDispatcherGateway.Builder()\n                        .setSubmitFunction(\n                                jobGraph ->\n                                        FutureUtils.completedExceptionally(\n                                                new DuplicateJobSubmissionException(\n                                                        testJobID, true)))\n                        .setRequestJobStatusFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)))\n                        .setRequestJobResultFunction(\n                                jobId ->\n                                        FutureUtils.completedExceptionally(\n                                                new FlinkJobNotFoundException(jobId)));\n        final CompletableFuture<Void> applicationFuture =\n                runApplication(dispatcherBuilder, configurationUnderTest, 1);\n        applicationFuture.get(TIMEOUT_SECONDS, TimeUnit.SECONDS);\n    }\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/deployment/application/ApplicationDispatcherBootstrapTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":727,"status":"M"}],"commitId":"4a78097d0385749daceafd8326930c8cc5f26f1a","commitMessage":"@@@[FLINK-21928][clients][runtime] Introduce static method constructors of DuplicateJobSubmissionException for better readability.\n\nThis closes #16464.\n","date":"2021-07-15 17:19:32","modifiedFileCount":"6","status":"M","submitter":"David Moravek"}]
