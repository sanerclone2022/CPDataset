[{"authorTime":"2020-12-07 10:03:43","codes":[{"authorDate":"2020-12-07 10:03:43","commitOrder":1,"curCode":"\tprivate static boolean noticeFileExistsAndIsValid(Path noticeFile, Path jar) throws IOException {\n\t\tif (!Files.exists(noticeFile)) {\n\t\t\tLOG.error(\"Missing META-INF/NOTICE in {}\", jar);\n\t\t\treturn false;\n\t\t}\n\n\t\tfinal String noticeFileContents = new String(Files.readAllBytes(noticeFile), StandardCharsets.UTF_8);\n\t\tif (!noticeFileContents.toLowerCase().contains(\"flink\") || !noticeFileContents.contains(\"The Apache Software Foundation\")) {\n\t\t\tLOG.error(\"The notice file in {} does not contain the expected entries.\", jar);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n","date":"2020-12-07 18:45:04","endLine":112,"groupId":"37720","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"noticeFileExistsAndIsValid","params":"(PathnoticeFile@Pathjar)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/db/d19458fc5236fd40cc7053393edf579b5bf7b8.src","preCode":"\tprivate static boolean noticeFileExistsAndIsValid(Path noticeFile, Path jar) throws IOException {\n\t\tif (!Files.exists(noticeFile)) {\n\t\t\tLOG.error(\"Missing META-INF/NOTICE in {}\", jar);\n\t\t\treturn false;\n\t\t}\n\n\t\tfinal String noticeFileContents = new String(Files.readAllBytes(noticeFile), StandardCharsets.UTF_8);\n\t\tif (!noticeFileContents.toLowerCase().contains(\"flink\") || !noticeFileContents.contains(\"The Apache Software Foundation\")) {\n\t\t\tLOG.error(\"The notice file in {} does not contain the expected entries.\", jar);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n","realPath":"tools/ci/java-ci-tools/src/main/java/org/apache/flink/tools/ci/licensecheck/JarFileChecker.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"},{"authorDate":"2020-12-07 10:03:43","commitOrder":1,"curCode":"\tprivate static boolean licenseFileExistsAndIsValid(Path licenseFile, Path jar) throws IOException {\n\t\tif (!Files.exists(licenseFile)) {\n\t\t\tLOG.error(\"Missing META-INF/LICENSE in {}\", jar);\n\t\t\treturn false;\n\t\t}\n\n\t\tfinal String licenseFileContents = new String(Files.readAllBytes(licenseFile), StandardCharsets.UTF_8);\n\t\tif (!licenseFileContents.contains(\"Apache License\") || !licenseFileContents.contains(\"Version 2.0, January 2004\")) {\n\t\t\tLOG.error(\"The license file in {} does not contain the expected entries.\", jar);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n","date":"2020-12-07 18:45:04","endLine":127,"groupId":"37724","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"licenseFileExistsAndIsValid","params":"(PathlicenseFile@Pathjar)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/db/d19458fc5236fd40cc7053393edf579b5bf7b8.src","preCode":"\tprivate static boolean licenseFileExistsAndIsValid(Path licenseFile, Path jar) throws IOException {\n\t\tif (!Files.exists(licenseFile)) {\n\t\t\tLOG.error(\"Missing META-INF/LICENSE in {}\", jar);\n\t\t\treturn false;\n\t\t}\n\n\t\tfinal String licenseFileContents = new String(Files.readAllBytes(licenseFile), StandardCharsets.UTF_8);\n\t\tif (!licenseFileContents.contains(\"Apache License\") || !licenseFileContents.contains(\"Version 2.0, January 2004\")) {\n\t\t\tLOG.error(\"The license file in {} does not contain the expected entries.\", jar);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n","realPath":"tools/ci/java-ci-tools/src/main/java/org/apache/flink/tools/ci/licensecheck/JarFileChecker.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"}],"commitId":"59ae84069313ede60cf7ad3a9d2fe1bc07c4e460","commitMessage":"@@@[FLINK-20455][build][legal] Add jar license checker\n","date":"2020-12-07 18:45:04","modifiedFileCount":"1","status":"B","submitter":"Chesnay Schepler"},{"authorTime":"2021-05-10 22:52:12","codes":[{"authorDate":"2021-05-10 22:52:12","commitOrder":2,"curCode":"    private static boolean noticeFileExistsAndIsValid(Path noticeFile, Path jar)\n            throws IOException {\n        if (!Files.exists(noticeFile)) {\n            LOG.error(\"Missing META-INF/NOTICE in {}\", jar);\n            return false;\n        }\n\n        final String noticeFileContents = readFile(noticeFile);\n        if (!noticeFileContents.toLowerCase().contains(\"flink\")\n                || !noticeFileContents.contains(\"The Apache Software Foundation\")) {\n            LOG.error(\"The notice file in {} does not contain the expected entries.\", jar);\n            return false;\n        }\n\n        return true;\n    }\n","date":"2021-05-12 06:05:48","endLine":122,"groupId":"1040","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"noticeFileExistsAndIsValid","params":"(PathnoticeFile@Pathjar)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9c/a658a10cf9579c59b26d15ad74480d305ad514.src","preCode":"    private static boolean noticeFileExistsAndIsValid(Path noticeFile, Path jar)\n            throws IOException {\n        if (!Files.exists(noticeFile)) {\n            LOG.error(\"Missing META-INF/NOTICE in {}\", jar);\n            return false;\n        }\n\n        final String noticeFileContents =\n                new String(Files.readAllBytes(noticeFile), StandardCharsets.UTF_8);\n        if (!noticeFileContents.toLowerCase().contains(\"flink\")\n                || !noticeFileContents.contains(\"The Apache Software Foundation\")) {\n            LOG.error(\"The notice file in {} does not contain the expected entries.\", jar);\n            return false;\n        }\n\n        return true;\n    }\n","realPath":"tools/ci/java-ci-tools/src/main/java/org/apache/flink/tools/ci/licensecheck/JarFileChecker.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"},{"authorDate":"2021-05-10 22:52:12","commitOrder":2,"curCode":"    private static boolean licenseFileExistsAndIsValid(Path licenseFile, Path jar)\n            throws IOException {\n        if (!Files.exists(licenseFile)) {\n            LOG.error(\"Missing META-INF/LICENSE in {}\", jar);\n            return false;\n        }\n\n        final String licenseFileContents = readFile(licenseFile);\n        if (!licenseFileContents.contains(\"Apache License\")\n                || !licenseFileContents.contains(\"Version 2.0, January 2004\")) {\n            LOG.error(\"The license file in {} does not contain the expected entries.\", jar);\n            return false;\n        }\n\n        return true;\n    }\n","date":"2021-05-12 06:05:48","endLine":139,"groupId":"1040","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"licenseFileExistsAndIsValid","params":"(PathlicenseFile@Pathjar)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9c/a658a10cf9579c59b26d15ad74480d305ad514.src","preCode":"    private static boolean licenseFileExistsAndIsValid(Path licenseFile, Path jar)\n            throws IOException {\n        if (!Files.exists(licenseFile)) {\n            LOG.error(\"Missing META-INF/LICENSE in {}\", jar);\n            return false;\n        }\n\n        final String licenseFileContents =\n                new String(Files.readAllBytes(licenseFile), StandardCharsets.UTF_8);\n        if (!licenseFileContents.contains(\"Apache License\")\n                || !licenseFileContents.contains(\"Version 2.0, January 2004\")) {\n            LOG.error(\"The license file in {} does not contain the expected entries.\", jar);\n            return false;\n        }\n\n        return true;\n    }\n","realPath":"tools/ci/java-ci-tools/src/main/java/org/apache/flink/tools/ci/licensecheck/JarFileChecker.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"214f936bf4aa461da74d1ff72f479604fa84b564","commitMessage":"@@@[FLINK-22556][ci] Extend JarFileChecker to search for traces of incompatible licenses\n","date":"2021-05-12 06:05:48","modifiedFileCount":"2","status":"M","submitter":"Chesnay Schepler"}]
