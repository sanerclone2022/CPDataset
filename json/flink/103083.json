[{"authorTime":"2018-11-22 18:03:13","codes":[{"authorDate":"2018-11-22 18:03:13","commitOrder":1,"curCode":"\tpublic void shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0);\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(0)); \r\n\t}\n","date":"2018-12-05 00:21:16","endLine":65,"groupId":"9529","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f3/28fd75d25d5e11729ef8c58c2438ded5dc3119.src","preCode":"\tpublic void shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0);\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(0)); \r\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2018-11-22 18:03:13","commitOrder":1,"curCode":"\tpublic void shouldCleanupOutdatedResumablesOnCheckpointAck() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0);\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\n\t\tbucketUnderTest.onReceptionOfCheckpoint(1L);\n\t\tbucketUnderTest.onReceptionOfCheckpoint(2L);\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(2L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(2)); \r\n\t}\n","date":"2018-12-05 00:21:16","endLine":88,"groupId":"9529","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldCleanupOutdatedResumablesOnCheckpointAck","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f3/28fd75d25d5e11729ef8c58c2438ded5dc3119.src","preCode":"\tpublic void shouldCleanupOutdatedResumablesOnCheckpointAck() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0);\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\n\t\tbucketUnderTest.onReceptionOfCheckpoint(1L);\n\t\tbucketUnderTest.onReceptionOfCheckpoint(2L);\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(2L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(2)); \r\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"bf5dc6c8bac73e7f8d54e983be2080cf6ce48a94","commitMessage":"@@@[FLINK-10963][fs-connector.  s3] Cleanup tmp S3 objects uploaded as backups of in-progress files.\n\nThis closes #7161.\n","date":"2018-12-05 00:21:16","modifiedFileCount":"11","status":"B","submitter":"Kostas Kloudas"},{"authorTime":"2019-08-02 14:59:14","codes":[{"authorDate":"2019-08-02 14:59:14","commitOrder":2,"curCode":"\tpublic void shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, new PartFileConfig());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(0)); \r\n\t}\n","date":"2019-08-07 15:46:36","endLine":76,"groupId":"15505","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/96/9ecd7b97689f8fadabdbf3556c35cbd60d35b7.src","preCode":"\tpublic void shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0);\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(0)); \r\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2019-08-02 14:59:14","commitOrder":2,"curCode":"\tpublic void shouldCleanupOutdatedResumablesOnCheckpointAck() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, new PartFileConfig());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\n\t\tbucketUnderTest.onReceptionOfCheckpoint(1L);\n\t\tbucketUnderTest.onReceptionOfCheckpoint(2L);\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(2L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(2)); \r\n\t}\n","date":"2019-08-07 15:46:36","endLine":99,"groupId":"15505","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldCleanupOutdatedResumablesOnCheckpointAck","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/96/9ecd7b97689f8fadabdbf3556c35cbd60d35b7.src","preCode":"\tpublic void shouldCleanupOutdatedResumablesOnCheckpointAck() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0);\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\n\t\tbucketUnderTest.onReceptionOfCheckpoint(1L);\n\t\tbucketUnderTest.onReceptionOfCheckpoint(2L);\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(2L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(2)); \r\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"e9d3d58eff5c9a3727b1d5b2b3dfaec136267951","commitMessage":"@@@[FLINK-13428][fs-connector] Make part file name configurable\n\nThis closes #9228\n","date":"2019-08-07 15:46:36","modifiedFileCount":"11","status":"M","submitter":"eskabetxe"},{"authorTime":"2019-11-15 03:14:02","codes":[{"authorDate":"2019-11-15 03:14:02","commitOrder":3,"curCode":"\tpublic void shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, PartFileConfig.builder().build());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(0)); \r\n\t}\n","date":"2019-11-15 20:39:28","endLine":76,"groupId":"14241","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2b/cb881bfc1dac256e5329486230c7ccfefc9179.src","preCode":"\tpublic void shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, new PartFileConfig());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(0)); \r\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2019-11-15 03:14:02","commitOrder":3,"curCode":"\tpublic void shouldCleanupOutdatedResumablesOnCheckpointAck() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, PartFileConfig.builder().build());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\n\t\tbucketUnderTest.onReceptionOfCheckpoint(1L);\n\t\tbucketUnderTest.onReceptionOfCheckpoint(2L);\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(2L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(2)); \r\n\t}\n","date":"2019-11-15 20:39:28","endLine":99,"groupId":"14241","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldCleanupOutdatedResumablesOnCheckpointAck","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2b/cb881bfc1dac256e5329486230c7ccfefc9179.src","preCode":"\tpublic void shouldCleanupOutdatedResumablesOnCheckpointAck() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, new PartFileConfig());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\n\t\tbucketUnderTest.onReceptionOfCheckpoint(1L);\n\t\tbucketUnderTest.onReceptionOfCheckpoint(2L);\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(2L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(2)); \r\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"22b2a8856307c310b4c75b32eeed33ba66c0206e","commitMessage":"@@@[FLINK-13850] refactor part file configurations into a single method\n\nCloses #9533\n","date":"2019-11-15 20:39:28","modifiedFileCount":"11","status":"M","submitter":"Joao Boto"},{"authorTime":"2019-11-15 21:44:06","codes":[{"authorDate":"2019-11-15 21:44:06","commitOrder":4,"curCode":"\tpublic void shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, new PartFileConfig());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(0)); \r\n\t}\n","date":"2019-11-15 21:44:06","endLine":76,"groupId":"15505","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/58/3bacfc8155ed04f81a7356c2fbac2856d6469f.src","preCode":"\tpublic void shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, PartFileConfig.builder().build());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(0)); \r\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2019-11-15 21:44:06","commitOrder":4,"curCode":"\tpublic void shouldCleanupOutdatedResumablesOnCheckpointAck() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, new PartFileConfig());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\n\t\tbucketUnderTest.onReceptionOfCheckpoint(1L);\n\t\tbucketUnderTest.onReceptionOfCheckpoint(2L);\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(2L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(2)); \r\n\t}\n","date":"2019-11-15 21:44:06","endLine":99,"groupId":"15505","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldCleanupOutdatedResumablesOnCheckpointAck","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/58/3bacfc8155ed04f81a7356c2fbac2856d6469f.src","preCode":"\tpublic void shouldCleanupOutdatedResumablesOnCheckpointAck() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, PartFileConfig.builder().build());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\n\t\tbucketUnderTest.onReceptionOfCheckpoint(1L);\n\t\tbucketUnderTest.onReceptionOfCheckpoint(2L);\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(2L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(2)); \r\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"fdc2555c7d417ddd62a700b2ea67b59193ea720e","commitMessage":"@@@Revert \"[FLINK-13850] refactor part file configurations into a single method\"\n\nThis reverts commit 22b2a8856307c310b4c75b32eeed33ba66c0206e.\n","date":"2019-11-15 21:44:06","modifiedFileCount":"11","status":"M","submitter":"Chesnay Schepler"},{"authorTime":"2019-11-15 22:44:16","codes":[{"authorDate":"2019-11-15 22:44:16","commitOrder":5,"curCode":"\tpublic void shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, OutputFileConfig.builder().build());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(0)); \r\n\t}\n","date":"2019-11-17 19:53:50","endLine":76,"groupId":"103083","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ee/85e556f535808a6ee426282141d30e418c479c.src","preCode":"\tpublic void shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, new PartFileConfig());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(0)); \r\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2019-11-15 22:44:16","commitOrder":5,"curCode":"\tpublic void shouldCleanupOutdatedResumablesOnCheckpointAck() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, OutputFileConfig.builder().build());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\n\t\tbucketUnderTest.onReceptionOfCheckpoint(1L);\n\t\tbucketUnderTest.onReceptionOfCheckpoint(2L);\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(2L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(2)); \r\n\t}\n","date":"2019-11-17 19:53:50","endLine":99,"groupId":"103083","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldCleanupOutdatedResumablesOnCheckpointAck","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ee/85e556f535808a6ee426282141d30e418c479c.src","preCode":"\tpublic void shouldCleanupOutdatedResumablesOnCheckpointAck() throws IOException {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\t\tfinal Path path = new Path(outDir.toURI());\n\n\t\tfinal TestRecoverableWriter recoverableWriter = getRecoverableWriter(path);\n\t\tfinal Bucket<String, String> bucketUnderTest =\n\t\t\t\tcreateBucket(recoverableWriter, path, 0, 0, new PartFileConfig());\n\n\t\tbucketUnderTest.write(\"test-element\", 0L);\n\n\t\tfinal BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L);\n\t\tassertThat(state, hasActiveInProgressFile());\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L);\n\n\t\tbucketUnderTest.onReceptionOfCheckpoint(1L);\n\t\tbucketUnderTest.onReceptionOfCheckpoint(2L);\n\n\t\tbucketUnderTest.onSuccessfulCompletionOfCheckpoint(2L);\n\t\tassertThat(recoverableWriter, hasCalledDiscard(2)); \r\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BucketTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"901438b65bfbf3874cec60ea17b0c3b05bdd8477","commitMessage":"@@@[FLINK-13850] refactor part file configurations into a single method\nCloses #10225\n","date":"2019-11-17 19:53:50","modifiedFileCount":"11","status":"M","submitter":"eskabetxe"}]
