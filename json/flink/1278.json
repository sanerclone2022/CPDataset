[{"authorTime":"2021-01-14 00:24:57","codes":[{"authorDate":"2019-11-24 16:20:09","commitOrder":3,"curCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer,\n\t\t\tRocksDB db,\n\t\t\tColumnFamilyHandle defaultCFHandle,\n\t\t\tColumnFamilyOptions columnFamilyOptions) {\n\n\t\tfinal RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\tinstanceBasePath,\n\t\t\t\toptionsContainer,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\t\tkeySerializer,\n\t\t\t\t2,\n\t\t\t\tnew KeyGroupRange(0, 1),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\t\tdb,\n\t\t\t\tdefaultCFHandle,\n\t\t\t\tnew CloseableRegistry());\n\t}\n","date":"2019-12-11 21:01:21","endLine":100,"groupId":"37829","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"builderForTestDB","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@RocksDBdb@ColumnFamilyHandledefaultCFHandle@ColumnFamilyOptionscolumnFamilyOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ed/44a73a7182f60a6bc9b890024d5589a1bd398d.src","preCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer,\n\t\t\tRocksDB db,\n\t\t\tColumnFamilyHandle defaultCFHandle,\n\t\t\tColumnFamilyOptions columnFamilyOptions) {\n\n\t\tfinal RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\tinstanceBasePath,\n\t\t\t\toptionsContainer,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\t\tkeySerializer,\n\t\t\t\t2,\n\t\t\t\tnew KeyGroupRange(0, 1),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\t\tdb,\n\t\t\t\tdefaultCFHandle,\n\t\t\t\tnew CloseableRegistry());\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"NB"},{"authorDate":"2021-01-14 00:24:57","commitOrder":3,"curCode":"        public CheckpointableKeyedStateBackend<String> createBackend(\n                KeyGroupRange keyGroupRange,\n                int numKeyGroups,\n                Collection<KeyedStateHandle> stateHandles)\n                throws Exception {\n            final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n            temporaryFolder.create();\n            return new RocksDBKeyedStateBackendBuilder<>(\n                            \"no-op\",\n                            ClassLoader.getSystemClassLoader(),\n                            temporaryFolder.newFolder(),\n                            optionsContainer,\n                            stateName -> optionsContainer.getColumnOptions(),\n                            new KvStateRegistry()\n                                    .createTaskRegistry(new JobID(), new JobVertexID()),\n                            StringSerializer.INSTANCE,\n                            numKeyGroups,\n                            keyGroupRange,\n                            new ExecutionConfig(),\n                            TestLocalRecoveryConfig.disabled(),\n                            RocksDBStateBackend.PriorityQueueStateType.ROCKSDB,\n                            TtlTimeProvider.DEFAULT,\n                            new UnregisteredMetricsGroup(),\n                            stateHandles,\n                            UncompressedStreamCompressionDecorator.INSTANCE,\n                            new CloseableRegistry())\n                    .build();\n        }\n","date":"2021-02-06 01:38:48","endLine":107,"groupId":"4596","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createBackend","params":"(KeyGroupRangekeyGroupRange@intnumKeyGroups@Collection<KeyedStateHandle>stateHandles)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2c/ccafdb0c413f381998544b815f5d7b8e768ab0.src","preCode":"        public CheckpointableKeyedStateBackend<String> createBackend(\n                KeyGroupRange keyGroupRange,\n                int numKeyGroups,\n                Collection<KeyedStateHandle> stateHandles)\n                throws Exception {\n            final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n            temporaryFolder.create();\n            return new RocksDBKeyedStateBackendBuilder<>(\n                            \"no-op\",\n                            ClassLoader.getSystemClassLoader(),\n                            temporaryFolder.newFolder(),\n                            optionsContainer,\n                            stateName -> optionsContainer.getColumnOptions(),\n                            new KvStateRegistry()\n                                    .createTaskRegistry(new JobID(), new JobVertexID()),\n                            StringSerializer.INSTANCE,\n                            numKeyGroups,\n                            keyGroupRange,\n                            new ExecutionConfig(),\n                            TestLocalRecoveryConfig.disabled(),\n                            RocksDBStateBackend.PriorityQueueStateType.ROCKSDB,\n                            TtlTimeProvider.DEFAULT,\n                            new UnregisteredMetricsGroup(),\n                            stateHandles,\n                            UncompressedStreamCompressionDecorator.INSTANCE,\n                            new CloseableRegistry())\n                    .build();\n        }\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/state/BackendSwitchSpecs.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"}],"commitId":"f56021cc2cf1b78bfbdb2ba24b4b639dedca4247","commitMessage":"@@@[FLINK-20978] Implement test for migrating from Rocks savepoint\n\nThis closes #14648\n","date":"2021-02-06 01:38:48","modifiedFileCount":"0","status":"M","submitter":"Dawid Wysakowicz"},{"authorTime":"2021-02-09 00:09:19","codes":[{"authorDate":"2019-11-24 16:20:09","commitOrder":4,"curCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer,\n\t\t\tRocksDB db,\n\t\t\tColumnFamilyHandle defaultCFHandle,\n\t\t\tColumnFamilyOptions columnFamilyOptions) {\n\n\t\tfinal RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\tinstanceBasePath,\n\t\t\t\toptionsContainer,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\t\tkeySerializer,\n\t\t\t\t2,\n\t\t\t\tnew KeyGroupRange(0, 1),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\t\tdb,\n\t\t\t\tdefaultCFHandle,\n\t\t\t\tnew CloseableRegistry());\n\t}\n","date":"2019-12-11 21:01:21","endLine":100,"groupId":"37829","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"builderForTestDB","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@RocksDBdb@ColumnFamilyHandledefaultCFHandle@ColumnFamilyOptionscolumnFamilyOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ed/44a73a7182f60a6bc9b890024d5589a1bd398d.src","preCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer,\n\t\t\tRocksDB db,\n\t\t\tColumnFamilyHandle defaultCFHandle,\n\t\t\tColumnFamilyOptions columnFamilyOptions) {\n\n\t\tfinal RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\tinstanceBasePath,\n\t\t\t\toptionsContainer,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\t\tkeySerializer,\n\t\t\t\t2,\n\t\t\t\tnew KeyGroupRange(0, 1),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\t\tdb,\n\t\t\t\tdefaultCFHandle,\n\t\t\t\tnew CloseableRegistry());\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"N"},{"authorDate":"2021-02-09 00:09:19","commitOrder":4,"curCode":"        public CheckpointableKeyedStateBackend<String> createBackend(\n                KeyGroupRange keyGroupRange,\n                int numKeyGroups,\n                Collection<KeyedStateHandle> stateHandles)\n                throws Exception {\n            final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n            temporaryFolder.create();\n            return new RocksDBKeyedStateBackendBuilder<>(\n                            \"no-op\",\n                            ClassLoader.getSystemClassLoader(),\n                            temporaryFolder.newFolder(),\n                            optionsContainer,\n                            stateName -> optionsContainer.getColumnOptions(),\n                            new KvStateRegistry()\n                                    .createTaskRegistry(new JobID(), new JobVertexID()),\n                            StringSerializer.INSTANCE,\n                            numKeyGroups,\n                            keyGroupRange,\n                            new ExecutionConfig(),\n                            TestLocalRecoveryConfig.disabled(),\n                            queueStateType,\n                            TtlTimeProvider.DEFAULT,\n                            new UnregisteredMetricsGroup(),\n                            stateHandles,\n                            UncompressedStreamCompressionDecorator.INSTANCE,\n                            new CloseableRegistry())\n                    .build();\n        }\n","date":"2021-02-25 00:19:05","endLine":115,"groupId":"4596","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createBackend","params":"(KeyGroupRangekeyGroupRange@intnumKeyGroups@Collection<KeyedStateHandle>stateHandles)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a7/2ca84b69d20437eb8e7555f6c37b88110af627.src","preCode":"        public CheckpointableKeyedStateBackend<String> createBackend(\n                KeyGroupRange keyGroupRange,\n                int numKeyGroups,\n                Collection<KeyedStateHandle> stateHandles)\n                throws Exception {\n            final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n            temporaryFolder.create();\n            return new RocksDBKeyedStateBackendBuilder<>(\n                            \"no-op\",\n                            ClassLoader.getSystemClassLoader(),\n                            temporaryFolder.newFolder(),\n                            optionsContainer,\n                            stateName -> optionsContainer.getColumnOptions(),\n                            new KvStateRegistry()\n                                    .createTaskRegistry(new JobID(), new JobVertexID()),\n                            StringSerializer.INSTANCE,\n                            numKeyGroups,\n                            keyGroupRange,\n                            new ExecutionConfig(),\n                            TestLocalRecoveryConfig.disabled(),\n                            RocksDBStateBackend.PriorityQueueStateType.ROCKSDB,\n                            TtlTimeProvider.DEFAULT,\n                            new UnregisteredMetricsGroup(),\n                            stateHandles,\n                            UncompressedStreamCompressionDecorator.INSTANCE,\n                            new CloseableRegistry())\n                    .build();\n        }\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/state/BackendSwitchSpecs.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"a9fef44654b0c154af573f5c27398e27d3351cf9","commitMessage":"@@@[FLINK-21344] Handle heap timers in Rocks state\n\nWe serialize the heap timers into the same format as if they were\nactually stored in RocksDB instead of storing them in a raw operator\nstate. It lets users change between using heap and RocksDB timers.\n","date":"2021-02-25 00:19:05","modifiedFileCount":"14","status":"M","submitter":"Dawid Wysakowicz"},{"authorTime":"2021-02-09 00:09:19","codes":[{"authorDate":"2021-01-22 04:15:38","commitOrder":5,"curCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            RocksDB db,\n            ColumnFamilyHandle defaultCFHandle,\n            ColumnFamilyOptions columnFamilyOptions) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> columnFamilyOptions,\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                EmbeddedRocksDBStateBackend.PriorityQueueStateType.HEAP,\n                TtlTimeProvider.DEFAULT,\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                db,\n                defaultCFHandle,\n                new CloseableRegistry());\n    }\n","date":"2021-02-25 10:11:27","endLine":110,"groupId":"37829","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"builderForTestDB","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@RocksDBdb@ColumnFamilyHandledefaultCFHandle@ColumnFamilyOptionscolumnFamilyOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/20/66ada6d1678372c84dc82a6e33f1f29d42f62d.src","preCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            RocksDB db,\n            ColumnFamilyHandle defaultCFHandle,\n            ColumnFamilyOptions columnFamilyOptions) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> columnFamilyOptions,\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                RocksDBStateBackend.PriorityQueueStateType.HEAP,\n                TtlTimeProvider.DEFAULT,\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                db,\n                defaultCFHandle,\n                new CloseableRegistry());\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2021-02-09 00:09:19","commitOrder":5,"curCode":"        public CheckpointableKeyedStateBackend<String> createBackend(\n                KeyGroupRange keyGroupRange,\n                int numKeyGroups,\n                Collection<KeyedStateHandle> stateHandles)\n                throws Exception {\n            final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n            temporaryFolder.create();\n            return new RocksDBKeyedStateBackendBuilder<>(\n                            \"no-op\",\n                            ClassLoader.getSystemClassLoader(),\n                            temporaryFolder.newFolder(),\n                            optionsContainer,\n                            stateName -> optionsContainer.getColumnOptions(),\n                            new KvStateRegistry()\n                                    .createTaskRegistry(new JobID(), new JobVertexID()),\n                            StringSerializer.INSTANCE,\n                            numKeyGroups,\n                            keyGroupRange,\n                            new ExecutionConfig(),\n                            TestLocalRecoveryConfig.disabled(),\n                            queueStateType,\n                            TtlTimeProvider.DEFAULT,\n                            new UnregisteredMetricsGroup(),\n                            stateHandles,\n                            UncompressedStreamCompressionDecorator.INSTANCE,\n                            new CloseableRegistry())\n                    .build();\n        }\n","date":"2021-02-25 00:19:05","endLine":115,"groupId":"4596","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createBackend","params":"(KeyGroupRangekeyGroupRange@intnumKeyGroups@Collection<KeyedStateHandle>stateHandles)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a7/2ca84b69d20437eb8e7555f6c37b88110af627.src","preCode":"        public CheckpointableKeyedStateBackend<String> createBackend(\n                KeyGroupRange keyGroupRange,\n                int numKeyGroups,\n                Collection<KeyedStateHandle> stateHandles)\n                throws Exception {\n            final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n            temporaryFolder.create();\n            return new RocksDBKeyedStateBackendBuilder<>(\n                            \"no-op\",\n                            ClassLoader.getSystemClassLoader(),\n                            temporaryFolder.newFolder(),\n                            optionsContainer,\n                            stateName -> optionsContainer.getColumnOptions(),\n                            new KvStateRegistry()\n                                    .createTaskRegistry(new JobID(), new JobVertexID()),\n                            StringSerializer.INSTANCE,\n                            numKeyGroups,\n                            keyGroupRange,\n                            new ExecutionConfig(),\n                            TestLocalRecoveryConfig.disabled(),\n                            queueStateType,\n                            TtlTimeProvider.DEFAULT,\n                            new UnregisteredMetricsGroup(),\n                            stateHandles,\n                            UncompressedStreamCompressionDecorator.INSTANCE,\n                            new CloseableRegistry())\n                    .build();\n        }\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/state/BackendSwitchSpecs.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"}],"commitId":"0a76daba0a428a322f0273d7dc6a70966f62bf26","commitMessage":"@@@[FLINK-19467][runtime / state backends] Implement HashMapStateBackend and EmbeddedRocksDBStateBackend\n","date":"2021-02-25 10:11:27","modifiedFileCount":"32","status":"M","submitter":"Seth Wiesman"},{"authorTime":"2021-03-09 00:44:40","codes":[{"authorDate":"2021-03-09 00:44:40","commitOrder":6,"curCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            RocksDB db,\n            ColumnFamilyHandle defaultCFHandle,\n            ColumnFamilyOptions columnFamilyOptions) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> columnFamilyOptions,\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                EmbeddedRocksDBStateBackend.PriorityQueueStateType.HEAP,\n                TtlTimeProvider.DEFAULT,\n                LatencyTrackingStateConfig.disabled(),\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                db,\n                defaultCFHandle,\n                new CloseableRegistry());\n    }\n","date":"2021-04-01 14:16:24","endLine":113,"groupId":"1278","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"builderForTestDB","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@RocksDBdb@ColumnFamilyHandledefaultCFHandle@ColumnFamilyOptionscolumnFamilyOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/04/9591211dbc68d23c4df021caa24a138b168a35.src","preCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            RocksDB db,\n            ColumnFamilyHandle defaultCFHandle,\n            ColumnFamilyOptions columnFamilyOptions) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> columnFamilyOptions,\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                EmbeddedRocksDBStateBackend.PriorityQueueStateType.HEAP,\n                TtlTimeProvider.DEFAULT,\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                db,\n                defaultCFHandle,\n                new CloseableRegistry());\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2021-03-09 00:44:40","commitOrder":6,"curCode":"        public CheckpointableKeyedStateBackend<String> createBackend(\n                KeyGroupRange keyGroupRange,\n                int numKeyGroups,\n                Collection<KeyedStateHandle> stateHandles)\n                throws Exception {\n            final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n            temporaryFolder.create();\n            return new RocksDBKeyedStateBackendBuilder<>(\n                            \"no-op\",\n                            ClassLoader.getSystemClassLoader(),\n                            temporaryFolder.newFolder(),\n                            optionsContainer,\n                            stateName -> optionsContainer.getColumnOptions(),\n                            new KvStateRegistry()\n                                    .createTaskRegistry(new JobID(), new JobVertexID()),\n                            StringSerializer.INSTANCE,\n                            numKeyGroups,\n                            keyGroupRange,\n                            new ExecutionConfig(),\n                            TestLocalRecoveryConfig.disabled(),\n                            queueStateType,\n                            TtlTimeProvider.DEFAULT,\n                            LatencyTrackingStateConfig.disabled(),\n                            new UnregisteredMetricsGroup(),\n                            stateHandles,\n                            UncompressedStreamCompressionDecorator.INSTANCE,\n                            new CloseableRegistry())\n                    .build();\n        }\n","date":"2021-04-01 14:16:24","endLine":117,"groupId":"1278","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createBackend","params":"(KeyGroupRangekeyGroupRange@intnumKeyGroups@Collection<KeyedStateHandle>stateHandles)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/84/85756f72ab27149e7c692ef923f980131f7149.src","preCode":"        public CheckpointableKeyedStateBackend<String> createBackend(\n                KeyGroupRange keyGroupRange,\n                int numKeyGroups,\n                Collection<KeyedStateHandle> stateHandles)\n                throws Exception {\n            final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n            temporaryFolder.create();\n            return new RocksDBKeyedStateBackendBuilder<>(\n                            \"no-op\",\n                            ClassLoader.getSystemClassLoader(),\n                            temporaryFolder.newFolder(),\n                            optionsContainer,\n                            stateName -> optionsContainer.getColumnOptions(),\n                            new KvStateRegistry()\n                                    .createTaskRegistry(new JobID(), new JobVertexID()),\n                            StringSerializer.INSTANCE,\n                            numKeyGroups,\n                            keyGroupRange,\n                            new ExecutionConfig(),\n                            TestLocalRecoveryConfig.disabled(),\n                            queueStateType,\n                            TtlTimeProvider.DEFAULT,\n                            new UnregisteredMetricsGroup(),\n                            stateHandles,\n                            UncompressedStreamCompressionDecorator.INSTANCE,\n                            new CloseableRegistry())\n                    .build();\n        }\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/state/BackendSwitchSpecs.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"a402eaec1f71288651a24cf40f08b3f54924a63d","commitMessage":"@@@[FLINK-16444][state] Introduce latency tracking state config and basic classes\n","date":"2021-04-01 14:16:24","modifiedFileCount":"24","status":"M","submitter":"Yun Tang"}]
