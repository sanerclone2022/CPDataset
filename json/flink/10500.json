[{"authorTime":"2020-06-08 18:48:37","codes":[{"authorDate":"2020-06-08 18:48:37","commitOrder":1,"curCode":"\tpublic DynamicTableSink createDynamicTableSink(Context context) {\n\t\tfinal FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n\t\tfinal ReadableConfig config = helper.getOptions();\n\n\t\thelper.validate();\n\t\tvalidateConfigOptions(config);\n\t\tJdbcOptions jdbcOptions = getJdbcOptions(config);\n\t\tTableSchema physicalSchema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n\n\t\treturn new JdbcDynamicTableSink(\n\t\t\tjdbcOptions,\n\t\t\tgetJdbcExecutionOptions(config),\n\t\t\tgetJdbcDmlOptions(jdbcOptions, physicalSchema),\n\t\t\tphysicalSchema);\n\t}\n","date":"2020-06-11 17:02:19","endLine":166,"groupId":"9230","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createDynamicTableSink","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f5/fd9a7e4af1462a02f3fcda5f170ed9a984da2f.src","preCode":"\tpublic DynamicTableSink createDynamicTableSink(Context context) {\n\t\tfinal FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n\t\tfinal ReadableConfig config = helper.getOptions();\n\n\t\thelper.validate();\n\t\tvalidateConfigOptions(config);\n\t\tJdbcOptions jdbcOptions = getJdbcOptions(config);\n\t\tTableSchema physicalSchema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n\n\t\treturn new JdbcDynamicTableSink(\n\t\t\tjdbcOptions,\n\t\t\tgetJdbcExecutionOptions(config),\n\t\t\tgetJdbcDmlOptions(jdbcOptions, physicalSchema),\n\t\t\tphysicalSchema);\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"B"},{"authorDate":"2020-06-08 18:48:37","commitOrder":1,"curCode":"\tpublic DynamicTableSource createDynamicTableSource(Context context) {\n\t\tfinal FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n\t\tfinal ReadableConfig config = helper.getOptions();\n\n\t\thelper.validate();\n\t\tvalidateConfigOptions(config);\n\t\tTableSchema physicalSchema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n\t\treturn new JdbcDynamicTableSource(\n\t\t\tgetJdbcOptions(helper.getOptions()),\n\t\t\tgetJdbcReadOptions(helper.getOptions()),\n\t\t\tgetJdbcLookupOptions(helper.getOptions()),\n\t\t\tphysicalSchema);\n\t}\n","date":"2020-06-11 17:02:19","endLine":181,"groupId":"37437","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createDynamicTableSource","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f5/fd9a7e4af1462a02f3fcda5f170ed9a984da2f.src","preCode":"\tpublic DynamicTableSource createDynamicTableSource(Context context) {\n\t\tfinal FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n\t\tfinal ReadableConfig config = helper.getOptions();\n\n\t\thelper.validate();\n\t\tvalidateConfigOptions(config);\n\t\tTableSchema physicalSchema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n\t\treturn new JdbcDynamicTableSource(\n\t\t\tgetJdbcOptions(helper.getOptions()),\n\t\t\tgetJdbcReadOptions(helper.getOptions()),\n\t\t\tgetJdbcLookupOptions(helper.getOptions()),\n\t\t\tphysicalSchema);\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"B"}],"commitId":"6c2ff9753802b02586f21faff3c997b19482cc5d","commitMessage":"@@@[FLINK-16497][jdbc][table] Improve default flush strategy for new JDBC sink for better out-of-box\n\nThe default flush strategy for old JDBC sink is no flush interval and 5000 buffered rows.\nThe new default flush strategy for new JDBC sink is '1s' flush interval and '100' buffered rows.\n\nThis closes #12536\n","date":"2020-06-11 17:02:19","modifiedFileCount":"5","status":"B","submitter":"Jark Wu"},{"authorTime":"2020-06-08 18:48:37","codes":[{"authorDate":"2021-06-30 17:15:22","commitOrder":2,"curCode":"    public DynamicTableSink createDynamicTableSink(Context context) {\n        final FactoryUtil.TableFactoryHelper helper =\n                FactoryUtil.createTableFactoryHelper(this, context);\n        final ReadableConfig config = helper.getOptions();\n\n        helper.validate();\n        validateConfigOptions(config);\n        JdbcConnectorOptions jdbcOptions = getJdbcOptions(config);\n        TableSchema physicalSchema =\n                TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n\n        return new JdbcDynamicTableSink(\n                jdbcOptions,\n                getJdbcExecutionOptions(config),\n                getJdbcDmlOptions(jdbcOptions, physicalSchema),\n                physicalSchema);\n    }\n","date":"2021-07-12 18:56:17","endLine":93,"groupId":"10500","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createDynamicTableSink","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/15/bef93215b1779ce014042063cc10f051057ec4.src","preCode":"    public DynamicTableSink createDynamicTableSink(Context context) {\n        final FactoryUtil.TableFactoryHelper helper =\n                FactoryUtil.createTableFactoryHelper(this, context);\n        final ReadableConfig config = helper.getOptions();\n\n        helper.validate();\n        validateConfigOptions(config);\n        JdbcOptions jdbcOptions = getJdbcOptions(config);\n        TableSchema physicalSchema =\n                TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n\n        return new JdbcDynamicTableSink(\n                jdbcOptions,\n                getJdbcExecutionOptions(config),\n                getJdbcDmlOptions(jdbcOptions, physicalSchema),\n                physicalSchema);\n    }\n","realPath":"flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2020-06-08 18:48:37","commitOrder":2,"curCode":"\tpublic DynamicTableSource createDynamicTableSource(Context context) {\n\t\tfinal FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n\t\tfinal ReadableConfig config = helper.getOptions();\n\n\t\thelper.validate();\n\t\tvalidateConfigOptions(config);\n\t\tTableSchema physicalSchema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n\t\treturn new JdbcDynamicTableSource(\n\t\t\tgetJdbcOptions(helper.getOptions()),\n\t\t\tgetJdbcReadOptions(helper.getOptions()),\n\t\t\tgetJdbcLookupOptions(helper.getOptions()),\n\t\t\tphysicalSchema);\n\t}\n","date":"2020-06-11 17:02:19","endLine":181,"groupId":"10500","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createDynamicTableSource","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f5/fd9a7e4af1462a02f3fcda5f170ed9a984da2f.src","preCode":"\tpublic DynamicTableSource createDynamicTableSource(Context context) {\n\t\tfinal FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n\t\tfinal ReadableConfig config = helper.getOptions();\n\n\t\thelper.validate();\n\t\tvalidateConfigOptions(config);\n\t\tTableSchema physicalSchema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n\t\treturn new JdbcDynamicTableSource(\n\t\t\tgetJdbcOptions(helper.getOptions()),\n\t\t\tgetJdbcReadOptions(helper.getOptions()),\n\t\t\tgetJdbcLookupOptions(helper.getOptions()),\n\t\t\tphysicalSchema);\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"N"}],"commitId":"00f92ba924297cb7aec0d48367c47923f4f3be0f","commitMessage":"@@@[FLINK-23064][connector-jdbc] Create PublicEvolving JdbcOptions\n","date":"2021-07-12 18:56:17","modifiedFileCount":"22","status":"M","submitter":"Ingo B?rk"}]
