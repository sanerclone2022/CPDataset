[{"authorTime":"2020-11-11 10:58:04","codes":[{"authorDate":"2020-11-05 12:29:49","commitOrder":4,"curCode":"\tpublic Set<ConfigOption<?>> optionalOptions() {\n\t\tfinal Set<ConfigOption<?>> options = new HashSet<>();\n\t\toptions.add(FactoryUtil.FORMAT);\n\t\toptions.add(KEY_FORMAT);\n\t\toptions.add(KEY_FIELDS);\n\t\toptions.add(KEY_FIELDS_PREFIX);\n\t\toptions.add(VALUE_FORMAT);\n\t\toptions.add(VALUE_FIELDS_INCLUDE);\n\t\toptions.add(TOPIC);\n\t\toptions.add(TOPIC_PATTERN);\n\t\toptions.add(PROPS_GROUP_ID);\n\t\toptions.add(SCAN_STARTUP_MODE);\n\t\toptions.add(SCAN_STARTUP_SPECIFIC_OFFSETS);\n\t\toptions.add(SCAN_TOPIC_PARTITION_DISCOVERY);\n\t\toptions.add(SCAN_STARTUP_TIMESTAMP_MILLIS);\n\t\toptions.add(SINK_PARTITIONER);\n\t\toptions.add(SINK_SEMANTIC);\n\t\toptions.add(SINK_PARALLELISM);\n\t\treturn options;\n\t}\n","date":"2020-11-05 12:29:49","endLine":123,"groupId":"5784","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"optionalOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8a/ba3ad2db4a83ba5c41ba3214a35db4671c06d7.src","preCode":"\tpublic Set<ConfigOption<?>> optionalOptions() {\n\t\tfinal Set<ConfigOption<?>> options = new HashSet<>();\n\t\toptions.add(FactoryUtil.FORMAT);\n\t\toptions.add(KEY_FORMAT);\n\t\toptions.add(KEY_FIELDS);\n\t\toptions.add(KEY_FIELDS_PREFIX);\n\t\toptions.add(VALUE_FORMAT);\n\t\toptions.add(VALUE_FIELDS_INCLUDE);\n\t\toptions.add(TOPIC);\n\t\toptions.add(TOPIC_PATTERN);\n\t\toptions.add(PROPS_GROUP_ID);\n\t\toptions.add(SCAN_STARTUP_MODE);\n\t\toptions.add(SCAN_STARTUP_SPECIFIC_OFFSETS);\n\t\toptions.add(SCAN_TOPIC_PARTITION_DISCOVERY);\n\t\toptions.add(SCAN_STARTUP_TIMESTAMP_MILLIS);\n\t\toptions.add(SINK_PARTITIONER);\n\t\toptions.add(SINK_SEMANTIC);\n\t\toptions.add(SINK_PARALLELISM);\n\t\treturn options;\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"NB"},{"authorDate":"2020-11-11 10:58:04","commitOrder":4,"curCode":"\tpublic Set<ConfigOption<?>> optionalOptions() {\n\t\tSet<ConfigOption<?>> options = new HashSet<>();\n\t\toptions.add(IGNORE_PARSE_ERRORS);\n\t\toptions.add(TIMESTAMP_FORMAT);\n\t\toptions.add(DATABASE_INCLUDE);\n\t\toptions.add(TABLE_INCLUDE);\n\t\toptions.add(JSON_MAP_NULL_KEY_MODE);\n\t\toptions.add(JSON_MAP_NULL_KEY_LITERAL);\n\t\treturn options;\n\t}\n","date":"2020-11-11 10:58:04","endLine":159,"groupId":"7275","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"optionalOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/41/eb86c02471bbe62f8f7c7e8c1ec2e48f5bd258.src","preCode":"\tpublic Set<ConfigOption<?>> optionalOptions() {\n\t\tSet<ConfigOption<?>> options = new HashSet<>();\n\t\toptions.add(IGNORE_PARSE_ERRORS);\n\t\toptions.add(TIMESTAMP_FORMAT);\n\t\toptions.add(DATABASE_INCLUDE);\n\t\toptions.add(TABLE_INCLUDE);\n\t\toptions.add(JSON_MAP_NULL_KEY_MODE);\n\t\toptions.add(JSON_MAP_NULL_KEY_LITERAL);\n\t\treturn options;\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"B"}],"commitId":"ba7c232cd2519995b693376cdf08b028e8f2e260","commitMessage":"@@@[FLINK-19912][json] Fix JSON format fails to serialize map value with null keys\n\nThis closes #13972","date":"2020-11-11 10:58:04","modifiedFileCount":"19","status":"M","submitter":"wangxlong"},{"authorTime":"2021-01-13 20:15:49","codes":[{"authorDate":"2020-11-05 12:29:49","commitOrder":5,"curCode":"\tpublic Set<ConfigOption<?>> optionalOptions() {\n\t\tfinal Set<ConfigOption<?>> options = new HashSet<>();\n\t\toptions.add(FactoryUtil.FORMAT);\n\t\toptions.add(KEY_FORMAT);\n\t\toptions.add(KEY_FIELDS);\n\t\toptions.add(KEY_FIELDS_PREFIX);\n\t\toptions.add(VALUE_FORMAT);\n\t\toptions.add(VALUE_FIELDS_INCLUDE);\n\t\toptions.add(TOPIC);\n\t\toptions.add(TOPIC_PATTERN);\n\t\toptions.add(PROPS_GROUP_ID);\n\t\toptions.add(SCAN_STARTUP_MODE);\n\t\toptions.add(SCAN_STARTUP_SPECIFIC_OFFSETS);\n\t\toptions.add(SCAN_TOPIC_PARTITION_DISCOVERY);\n\t\toptions.add(SCAN_STARTUP_TIMESTAMP_MILLIS);\n\t\toptions.add(SINK_PARTITIONER);\n\t\toptions.add(SINK_SEMANTIC);\n\t\toptions.add(SINK_PARALLELISM);\n\t\treturn options;\n\t}\n","date":"2020-11-05 12:29:49","endLine":123,"groupId":"5784","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"optionalOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8a/ba3ad2db4a83ba5c41ba3214a35db4671c06d7.src","preCode":"\tpublic Set<ConfigOption<?>> optionalOptions() {\n\t\tfinal Set<ConfigOption<?>> options = new HashSet<>();\n\t\toptions.add(FactoryUtil.FORMAT);\n\t\toptions.add(KEY_FORMAT);\n\t\toptions.add(KEY_FIELDS);\n\t\toptions.add(KEY_FIELDS_PREFIX);\n\t\toptions.add(VALUE_FORMAT);\n\t\toptions.add(VALUE_FIELDS_INCLUDE);\n\t\toptions.add(TOPIC);\n\t\toptions.add(TOPIC_PATTERN);\n\t\toptions.add(PROPS_GROUP_ID);\n\t\toptions.add(SCAN_STARTUP_MODE);\n\t\toptions.add(SCAN_STARTUP_SPECIFIC_OFFSETS);\n\t\toptions.add(SCAN_TOPIC_PARTITION_DISCOVERY);\n\t\toptions.add(SCAN_STARTUP_TIMESTAMP_MILLIS);\n\t\toptions.add(SINK_PARTITIONER);\n\t\toptions.add(SINK_SEMANTIC);\n\t\toptions.add(SINK_PARALLELISM);\n\t\treturn options;\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"N"},{"authorDate":"2021-01-13 20:15:49","commitOrder":5,"curCode":"    public Set<ConfigOption<?>> optionalOptions() {\n        Set<ConfigOption<?>> options = new HashSet<>();\n        options.add(IGNORE_PARSE_ERRORS);\n        options.add(TIMESTAMP_FORMAT);\n        options.add(DATABASE_INCLUDE);\n        options.add(TABLE_INCLUDE);\n        options.add(JSON_MAP_NULL_KEY_MODE);\n        options.add(JSON_MAP_NULL_KEY_LITERAL);\n        options.add(ENCODE_DECIMAL_AS_PLAIN_NUMBER);\n        return options;\n    }\n","date":"2021-01-13 20:15:49","endLine":137,"groupId":"7275","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"optionalOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e4/3dd1c50cdd7e18f47cbb0738bc80f450661b55.src","preCode":"    public Set<ConfigOption<?>> optionalOptions() {\n        Set<ConfigOption<?>> options = new HashSet<>();\n        options.add(IGNORE_PARSE_ERRORS);\n        options.add(TIMESTAMP_FORMAT);\n        options.add(DATABASE_INCLUDE);\n        options.add(TABLE_INCLUDE);\n        options.add(JSON_MAP_NULL_KEY_MODE);\n        options.add(JSON_MAP_NULL_KEY_LITERAL);\n        return options;\n    }\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"5b9f4db30e5afcf23588f44da767aaa218df1207","commitMessage":"@@@[FLINK-20861][json] Introduce an option for serializing DECIMALs in JSON as plain number instead of scientific notation\n\nThis closes #14604","date":"2021-01-13 20:15:49","modifiedFileCount":"17","status":"M","submitter":"LM Kang"},{"authorTime":"2021-01-13 20:15:49","codes":[{"authorDate":"2021-08-10 19:34:26","commitOrder":6,"curCode":"    public Set<ConfigOption<?>> optionalOptions() {\n        final Set<ConfigOption<?>> options = new HashSet<>();\n        options.add(FactoryUtil.FORMAT);\n        options.add(KEY_FORMAT);\n        options.add(KEY_FIELDS);\n        options.add(KEY_FIELDS_PREFIX);\n        options.add(VALUE_FORMAT);\n        options.add(VALUE_FIELDS_INCLUDE);\n        options.add(TOPIC);\n        options.add(TOPIC_PATTERN);\n        options.add(PROPS_GROUP_ID);\n        options.add(SCAN_STARTUP_MODE);\n        options.add(SCAN_STARTUP_SPECIFIC_OFFSETS);\n        options.add(SCAN_TOPIC_PARTITION_DISCOVERY);\n        options.add(SCAN_STARTUP_TIMESTAMP_MILLIS);\n        options.add(SINK_PARTITIONER);\n        options.add(SINK_PARALLELISM);\n        options.add(DELIVERY_GUARANTEE);\n        options.add(TRANSACTIONAL_ID_PREFIX);\n        options.add(SINK_SEMANTIC);\n        return options;\n    }\n","date":"2021-08-14 00:05:49","endLine":146,"groupId":"102148","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"optionalOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d9/b17315e156bd59ea71130f3e1f11e6a35fce57.src","preCode":"    public Set<ConfigOption<?>> optionalOptions() {\n        final Set<ConfigOption<?>> options = new HashSet<>();\n        options.add(FactoryUtil.FORMAT);\n        options.add(KEY_FORMAT);\n        options.add(KEY_FIELDS);\n        options.add(KEY_FIELDS_PREFIX);\n        options.add(VALUE_FORMAT);\n        options.add(VALUE_FIELDS_INCLUDE);\n        options.add(TOPIC);\n        options.add(TOPIC_PATTERN);\n        options.add(PROPS_GROUP_ID);\n        options.add(SCAN_STARTUP_MODE);\n        options.add(SCAN_STARTUP_SPECIFIC_OFFSETS);\n        options.add(SCAN_TOPIC_PARTITION_DISCOVERY);\n        options.add(SCAN_STARTUP_TIMESTAMP_MILLIS);\n        options.add(SINK_PARTITIONER);\n        options.add(SINK_SEMANTIC);\n        options.add(SINK_PARALLELISM);\n        return options;\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2021-01-13 20:15:49","commitOrder":6,"curCode":"    public Set<ConfigOption<?>> optionalOptions() {\n        Set<ConfigOption<?>> options = new HashSet<>();\n        options.add(IGNORE_PARSE_ERRORS);\n        options.add(TIMESTAMP_FORMAT);\n        options.add(DATABASE_INCLUDE);\n        options.add(TABLE_INCLUDE);\n        options.add(JSON_MAP_NULL_KEY_MODE);\n        options.add(JSON_MAP_NULL_KEY_LITERAL);\n        options.add(ENCODE_DECIMAL_AS_PLAIN_NUMBER);\n        return options;\n    }\n","date":"2021-01-13 20:15:49","endLine":137,"groupId":"102148","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"optionalOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e4/3dd1c50cdd7e18f47cbb0738bc80f450661b55.src","preCode":"    public Set<ConfigOption<?>> optionalOptions() {\n        Set<ConfigOption<?>> options = new HashSet<>();\n        options.add(IGNORE_PARSE_ERRORS);\n        options.add(TIMESTAMP_FORMAT);\n        options.add(DATABASE_INCLUDE);\n        options.add(TABLE_INCLUDE);\n        options.add(JSON_MAP_NULL_KEY_MODE);\n        options.add(JSON_MAP_NULL_KEY_LITERAL);\n        options.add(ENCODE_DECIMAL_AS_PLAIN_NUMBER);\n        return options;\n    }\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"N"}],"commitId":"1948446eeda0bcd93471b2aad61a953b6a2e36e3","commitMessage":"@@@[FLINK-23639][connectors/kafka] Migrate Table API Kafka connector to use FLIP-143 KafkaSink\n","date":"2021-08-14 00:05:49","modifiedFileCount":"9","status":"M","submitter":"Fabian Paul"}]
