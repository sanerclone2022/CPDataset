[{"authorTime":"2020-05-13 20:55:49","codes":[{"authorDate":"2020-05-15 21:49:36","commitOrder":2,"curCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE4);\n\t\t}\n\t}\n","date":"2020-05-18 12:30:38","endLine":102,"groupId":"10801","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"clearOutputTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a2/f7f77f21bbf1dd474c1b2e328edd470463cd2a.src","preCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE4);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableSinkITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"},{"authorDate":"2020-05-13 20:55:49","commitOrder":2,"curCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE REAL_TABLE\");\n\t\t}\n\t}\n","date":"2020-05-13 20:55:49","endLine":101,"groupId":"10801","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"clearOutputTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/69/a6ac97f1f925fcde0a5ebce17b57cc8d3cc256.src","preCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE REAL_TABLE\");\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcUpsertTableSinkITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"NB"}],"commitId":"ce843a2e601cbc2ddba8d3feacaa930aea810877","commitMessage":"@@@[FLINK-17029][jdbc] Introduce a new JDBC connector with new property keys\n\nThis closes #12176\n","date":"2020-05-18 12:30:38","modifiedFileCount":"29","status":"M","submitter":"Leonard Xu"},{"authorTime":"2020-05-13 20:55:49","codes":[{"authorDate":"2020-07-02 11:42:44","commitOrder":3,"curCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tTestValuesTableFactory.clearAllData();\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE4);\n\t\t\tstat.execute(\"DROP TABLE \" + USER_TABLE);\n\t\t}\n\t}\n","date":"2020-07-03 21:14:26","endLine":117,"groupId":"10801","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"clearOutputTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2d/988b080cd99bcb0bdeee1c29fc29b595b5e1a0.src","preCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE4);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableSinkITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2020-05-13 20:55:49","commitOrder":3,"curCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE REAL_TABLE\");\n\t\t}\n\t}\n","date":"2020-05-13 20:55:49","endLine":101,"groupId":"10801","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"clearOutputTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/69/a6ac97f1f925fcde0a5ebce17b57cc8d3cc256.src","preCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE REAL_TABLE\");\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcUpsertTableSinkITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"}],"commitId":"e08994588709b30e5d59d3c8302893a53c8a6baf","commitMessage":"@@@[FLINK-18461][table-planner-blink] Fix Changelog source can't be insert into upsert sink\n","date":"2020-07-03 21:14:26","modifiedFileCount":"2","status":"M","submitter":"Jark Wu"},{"authorTime":"2020-05-13 20:55:49","codes":[{"authorDate":"2020-12-23 00:50:57","commitOrder":4,"curCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tTestValuesTableFactory.clearAllData();\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE4);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE5);\n\t\t\tstat.execute(\"DROP TABLE \" + USER_TABLE);\n\t\t}\n\t}\n","date":"2020-12-25 10:15:46","endLine":137,"groupId":"10443","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"clearOutputTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c7/8fc92efa29f55bcda9ce572e16ffbf9b0aae04.src","preCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tTestValuesTableFactory.clearAllData();\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE4);\n\t\t\tstat.execute(\"DROP TABLE \" + USER_TABLE);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcDynamicTableSinkITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2020-05-13 20:55:49","commitOrder":4,"curCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE REAL_TABLE\");\n\t\t}\n\t}\n","date":"2020-05-13 20:55:49","endLine":101,"groupId":"10443","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"clearOutputTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/69/a6ac97f1f925fcde0a5ebce17b57cc8d3cc256.src","preCode":"\tpublic void clearOutputTable() throws Exception {\n\t\tClass.forName(DERBY_EBOOKSHOP_DB.getDriverClass());\n\t\ttry (\n\t\t\tConnection conn = DriverManager.getConnection(DB_URL);\n\t\t\tStatement stat = conn.createStatement()) {\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE1);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE2);\n\t\t\tstat.execute(\"DROP TABLE \" + OUTPUT_TABLE3);\n\t\t\tstat.execute(\"DROP TABLE REAL_TABLE\");\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcUpsertTableSinkITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"}],"commitId":"21a08ea5696c92505f85f3cba0e47e32d7c1e21d","commitMessage":"@@@[FLINK-20552][jdbc] JdbcDynamicTableSink doesn't sink buffered data on checkpoint\n\nThis closes #14387\n","date":"2020-12-25 10:15:46","modifiedFileCount":"2","status":"M","submitter":"meijie"}]
