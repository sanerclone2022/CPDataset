[{"authorTime":"2020-02-23 16:53:48","codes":[{"authorDate":"2020-02-23 16:53:48","commitOrder":1,"curCode":"\tpublic void testCreateFlinkTaskManagerPod() throws Exception {\n\t\tthis.flinkKubeClient.createJobManagerComponent(this.kubernetesJobManagerSpecification);\n\n\t\tfinal KubernetesPod kubernetesPod = new KubernetesPod(new PodBuilder()\n\t\t\t.editOrNewMetadata()\n\t\t\t.withName(\"mock-task-manager-pod\")\n\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t.endSpec()\n\t\t\t.build());\n\t\tthis.flinkKubeClient.createTaskManagerPod(kubernetesPod);\n\n\t\tfinal Pod resultTaskManagerPod =\n\t\t\tthis.kubeClient.pods().inNamespace(NAMESPACE).withName(\"mock-task-manager-pod\").get();\n\n\t\tassertEquals(\n\t\t\tthis.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().get(0).getMetadata().getUid(),\n\t\t\tresultTaskManagerPod.getMetadata().getOwnerReferences().get(0).getUid());\n\t}\n","date":"2020-03-05 09:17:40","endLine":158,"groupId":"2451","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateFlinkTaskManagerPod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/35/1f7644e607377e1e5e7a5c4b9b6d3863f2eaa5.src","preCode":"\tpublic void testCreateFlinkTaskManagerPod() throws Exception {\n\t\tthis.flinkKubeClient.createJobManagerComponent(this.kubernetesJobManagerSpecification);\n\n\t\tfinal KubernetesPod kubernetesPod = new KubernetesPod(new PodBuilder()\n\t\t\t.editOrNewMetadata()\n\t\t\t.withName(\"mock-task-manager-pod\")\n\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t.endSpec()\n\t\t\t.build());\n\t\tthis.flinkKubeClient.createTaskManagerPod(kubernetesPod);\n\n\t\tfinal Pod resultTaskManagerPod =\n\t\t\tthis.kubeClient.pods().inNamespace(NAMESPACE).withName(\"mock-task-manager-pod\").get();\n\n\t\tassertEquals(\n\t\t\tthis.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().get(0).getMetadata().getUid(),\n\t\t\tresultTaskManagerPod.getMetadata().getOwnerReferences().get(0).getUid());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/Fabric8FlinkKubeClientTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"B"},{"authorDate":"2020-02-23 16:53:48","commitOrder":1,"curCode":"\tpublic void testStopAndCleanupCluster() throws Exception {\n\t\tthis.flinkKubeClient.createJobManagerComponent(this.kubernetesJobManagerSpecification);\n\n\t\tfinal KubernetesPod kubernetesPod = new KubernetesPod(new PodBuilder()\n\t\t\t.editOrNewMetadata()\n\t\t\t.withName(\"mock-task-manager-pod\")\n\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t.endSpec()\n\t\t\t.build());\n\t\tthis.flinkKubeClient.createTaskManagerPod(kubernetesPod);\n\n\t\tassertEquals(1, this.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(1, this.kubeClient.configMaps().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(2, this.kubeClient.services().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(1, this.kubeClient.pods().inNamespace(NAMESPACE).list().getItems().size());\n\n\t\tthis.flinkKubeClient.stopAndCleanupCluster(CLUSTER_ID);\n\t\tassertTrue(this.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().isEmpty());\n\t}\n","date":"2020-03-05 09:17:40","endLine":225,"groupId":"13646","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testStopAndCleanupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/35/1f7644e607377e1e5e7a5c4b9b6d3863f2eaa5.src","preCode":"\tpublic void testStopAndCleanupCluster() throws Exception {\n\t\tthis.flinkKubeClient.createJobManagerComponent(this.kubernetesJobManagerSpecification);\n\n\t\tfinal KubernetesPod kubernetesPod = new KubernetesPod(new PodBuilder()\n\t\t\t.editOrNewMetadata()\n\t\t\t.withName(\"mock-task-manager-pod\")\n\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t.endSpec()\n\t\t\t.build());\n\t\tthis.flinkKubeClient.createTaskManagerPod(kubernetesPod);\n\n\t\tassertEquals(1, this.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(1, this.kubeClient.configMaps().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(2, this.kubeClient.services().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(1, this.kubeClient.pods().inNamespace(NAMESPACE).list().getItems().size());\n\n\t\tthis.flinkKubeClient.stopAndCleanupCluster(CLUSTER_ID);\n\t\tassertTrue(this.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().isEmpty());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/Fabric8FlinkKubeClientTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"B"}],"commitId":"f6ad9685bcb8365277ffc2fa3fe1d54b2d445a28","commitMessage":"@@@[FLINK-16194][k8s] Rework FlinkKubeClient to use the new decorator pattern\n\nThis closes #11233 .\n","date":"2020-03-05 09:17:40","modifiedFileCount":"11","status":"B","submitter":"felixzheng"},{"authorTime":"2020-04-08 23:08:30","codes":[{"authorDate":"2020-04-08 23:08:30","commitOrder":2,"curCode":"\tpublic void testCreateFlinkTaskManagerPod() throws Exception {\n\t\tthis.flinkKubeClient.createJobManagerComponent(this.kubernetesJobManagerSpecification);\n\n\t\tfinal KubernetesPod kubernetesPod = new KubernetesPod(new PodBuilder()\n\t\t\t.editOrNewMetadata()\n\t\t\t.withName(\"mock-task-manager-pod\")\n\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t.endSpec()\n\t\t\t.build());\n\t\tthis.flinkKubeClient.createTaskManagerPod(kubernetesPod).get();\n\n\t\tfinal Pod resultTaskManagerPod =\n\t\t\tthis.kubeClient.pods().inNamespace(NAMESPACE).withName(TASKMANAGER_POD_NAME).get();\n\n\t\tassertEquals(\n\t\t\tthis.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().get(0).getMetadata().getUid(),\n\t\t\tresultTaskManagerPod.getMetadata().getOwnerReferences().get(0).getUid());\n\t}\n","date":"2020-04-16 22:02:39","endLine":155,"groupId":"102384","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateFlinkTaskManagerPod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/01/7abcb1517ddccc2b2da27de863ffe552922ed3.src","preCode":"\tpublic void testCreateFlinkTaskManagerPod() throws Exception {\n\t\tthis.flinkKubeClient.createJobManagerComponent(this.kubernetesJobManagerSpecification);\n\n\t\tfinal KubernetesPod kubernetesPod = new KubernetesPod(new PodBuilder()\n\t\t\t.editOrNewMetadata()\n\t\t\t.withName(\"mock-task-manager-pod\")\n\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t.endSpec()\n\t\t\t.build());\n\t\tthis.flinkKubeClient.createTaskManagerPod(kubernetesPod);\n\n\t\tfinal Pod resultTaskManagerPod =\n\t\t\tthis.kubeClient.pods().inNamespace(NAMESPACE).withName(\"mock-task-manager-pod\").get();\n\n\t\tassertEquals(\n\t\t\tthis.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().get(0).getMetadata().getUid(),\n\t\t\tresultTaskManagerPod.getMetadata().getOwnerReferences().get(0).getUid());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/Fabric8FlinkKubeClientTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"},{"authorDate":"2020-04-08 23:08:30","commitOrder":2,"curCode":"\tpublic void testStopAndCleanupCluster() throws Exception {\n\t\tthis.flinkKubeClient.createJobManagerComponent(this.kubernetesJobManagerSpecification);\n\n\t\tfinal KubernetesPod kubernetesPod = new KubernetesPod(new PodBuilder()\n\t\t\t.editOrNewMetadata()\n\t\t\t.withName(TASKMANAGER_POD_NAME)\n\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t.endSpec()\n\t\t\t.build());\n\t\tthis.flinkKubeClient.createTaskManagerPod(kubernetesPod).get();\n\n\t\tassertEquals(1, this.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(1, this.kubeClient.configMaps().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(2, this.kubeClient.services().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(1, this.kubeClient.pods().inNamespace(NAMESPACE).list().getItems().size());\n\n\t\tthis.flinkKubeClient.stopAndCleanupCluster(CLUSTER_ID);\n\t\tassertTrue(this.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().isEmpty());\n\t}\n","date":"2020-04-16 22:02:39","endLine":241,"groupId":"102384","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testStopAndCleanupCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/01/7abcb1517ddccc2b2da27de863ffe552922ed3.src","preCode":"\tpublic void testStopAndCleanupCluster() throws Exception {\n\t\tthis.flinkKubeClient.createJobManagerComponent(this.kubernetesJobManagerSpecification);\n\n\t\tfinal KubernetesPod kubernetesPod = new KubernetesPod(new PodBuilder()\n\t\t\t.editOrNewMetadata()\n\t\t\t.withName(\"mock-task-manager-pod\")\n\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t.endSpec()\n\t\t\t.build());\n\t\tthis.flinkKubeClient.createTaskManagerPod(kubernetesPod);\n\n\t\tassertEquals(1, this.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(1, this.kubeClient.configMaps().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(2, this.kubeClient.services().inNamespace(NAMESPACE).list().getItems().size());\n\t\tassertEquals(1, this.kubeClient.pods().inNamespace(NAMESPACE).list().getItems().size());\n\n\t\tthis.flinkKubeClient.stopAndCleanupCluster(CLUSTER_ID);\n\t\tassertTrue(this.kubeClient.apps().deployments().inNamespace(NAMESPACE).list().getItems().isEmpty());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/Fabric8FlinkKubeClientTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"}],"commitId":"577abe7fe120adc039cd9f0450de3124d6b7a6a9","commitMessage":"@@@[FLINK-15790][k8s] Make some interfaces in FlinkKubeClient asynchronous which potentially blocks the execution of RpcEndpoint's main thread\n\nThe interfaces in FlinkKubeClient will be called both in Client and ResourceManager. To avoid potentially blocking the execution of RpcEndpoint's main thread.  these interfaces #createTaskManagerPod.  #stopPod should be implemented asynchronously.\n\nThis closes #11427.\n","date":"2020-04-16 22:02:39","modifiedFileCount":"10","status":"M","submitter":"wangyang0918"}]
