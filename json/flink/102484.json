[{"authorTime":"2020-01-02 21:22:19","codes":[{"authorDate":"2019-12-05 23:23:17","commitOrder":2,"curCode":"\tpublic void testCanceleablesCanceledOnCancelTaskError() throws Exception {\n\t\tsyncLatch = new OneShotLatch();\n\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tTask task = createTask(CancelFailingTask.class, cfg, new Configuration());\n\n\t\t\r\n\t\t\r\n\t\t\r\n\t\ttask.startTaskThread();\n\t\tsyncLatch.await();\n\n\t\t\r\n\t\ttask.cancelExecution();\n\t\ttask.getExecutingThread().join();\n\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t}\n","date":"2019-12-10 18:32:57","endLine":335,"groupId":"28126","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCanceleablesCanceledOnCancelTaskError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/99/1730170dc0a03c43d6dd6847e13c3423b19222.src","preCode":"\tpublic void testCanceleablesCanceledOnCancelTaskError() throws Exception {\n\t\tsyncLatch = new OneShotLatch();\n\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tTask task = createTask(CancelFailingTask.class, cfg, new Configuration());\n\n\t\t\r\n\t\t\r\n\t\t\r\n\t\ttask.startTaskThread();\n\t\tsyncLatch.await();\n\n\t\t\r\n\t\ttask.cancelExecution();\n\t\ttask.getExecutingThread().join();\n\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/StreamTaskTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"NB"},{"authorDate":"2020-01-02 21:22:19","commitOrder":2,"curCode":"\tpublic void testCancelTaskExceptionHandling() throws Exception {\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tTask task = createTask(CancelThrowingTask.class, cfg, new Configuration());\n\n\t\ttask.startTaskThread();\n\t\ttask.getExecutingThread().join();\n\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t}\n","date":"2020-01-03 17:11:55","endLine":445,"groupId":"4251","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCancelTaskExceptionHandling","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/82/76cb452c2f9de235759f0981f7da91dc215d42.src","preCode":"\tpublic void testCancelTaskExceptionHandling() throws Exception {\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tTask task = createTask(CancelThrowingTask.class, cfg, new Configuration());\n\n\t\ttask.startTaskThread();\n\t\ttask.getExecutingThread().join();\n\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/StreamTaskTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"B"}],"commitId":"11be93a5d5afc2961966fb2bc63f4d8095bbf21a","commitMessage":"@@@[FLINK-15403][task] Allow the CancelTaskException to be thrown from mailbox thread\n\nCancelTaskException can be thrown for example from LocalInputChannel#getNextBuffer\neven if the current (down stream) task hasn't YET been canceled. This restores\nthe behaviour to before [FLINK-15317].\n\nStreamTask is able to correctly process/handle CancelTaskException.\n","date":"2020-01-03 17:11:55","modifiedFileCount":"2","status":"M","submitter":"Piotr Nowojski"},{"authorTime":"2020-03-20 13:14:35","codes":[{"authorDate":"2020-03-20 13:14:35","commitOrder":3,"curCode":"\tpublic void testCanceleablesCanceledOnCancelTaskError() throws Exception {\n\t\tsyncLatch = new OneShotLatch();\n\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\ttry (NettyShuffleEnvironment shuffleEnvironment = new NettyShuffleEnvironmentBuilder().build()) {\n\n\t\t\tTask task = createTask(CancelFailingTask.class, shuffleEnvironment, cfg, new Configuration());\n\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\ttask.startTaskThread();\n\t\t\tsyncLatch.await();\n\n\t\t\t\r\n\t\t\ttask.cancelExecution();\n\t\t\ttask.getExecutingThread().join();\n\n\t\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t\t}\n\t}\n","date":"2020-03-21 22:10:58","endLine":325,"groupId":"102484","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCanceleablesCanceledOnCancelTaskError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/16/28e4c055d7ba6e22b7b27cd747adb6bf9334aa.src","preCode":"\tpublic void testCanceleablesCanceledOnCancelTaskError() throws Exception {\n\t\tsyncLatch = new OneShotLatch();\n\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tTask task = createTask(CancelFailingTask.class, cfg, new Configuration());\n\n\t\t\r\n\t\t\r\n\t\t\r\n\t\ttask.startTaskThread();\n\t\tsyncLatch.await();\n\n\t\t\r\n\t\ttask.cancelExecution();\n\t\ttask.getExecutingThread().join();\n\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/StreamTaskTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"M"},{"authorDate":"2020-03-20 13:14:35","commitOrder":3,"curCode":"\tpublic void testCancelTaskExceptionHandling() throws Exception {\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\n\t\ttry (NettyShuffleEnvironment shuffleEnvironment = new NettyShuffleEnvironmentBuilder().build()) {\n\t\t\tTask task = createTask(CancelThrowingTask.class, shuffleEnvironment, cfg, new Configuration());\n\n\t\t\ttask.startTaskThread();\n\t\t\ttask.getExecutingThread().join();\n\n\t\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t\t}\n\t}\n","date":"2020-03-21 22:10:58","endLine":438,"groupId":"102484","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCancelTaskExceptionHandling","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/16/28e4c055d7ba6e22b7b27cd747adb6bf9334aa.src","preCode":"\tpublic void testCancelTaskExceptionHandling() throws Exception {\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tTask task = createTask(CancelThrowingTask.class, cfg, new Configuration());\n\n\t\ttask.startTaskThread();\n\t\ttask.getExecutingThread().join();\n\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/StreamTaskTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":427,"status":"M"}],"commitId":"7dafd1cd65ba8977d923482a810c907ed7d37b59","commitMessage":"@@@[FLINK-16690][tests] Refactor StreamTaskTest to reuse TestTaskBuilder and MockStreamTaskBuilder\n\nThis closes #11459\n","date":"2020-03-21 22:10:58","modifiedFileCount":"5","status":"M","submitter":"Zhijiang"}]
