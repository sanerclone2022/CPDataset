[{"authorTime":"2020-03-25 14:31:22","codes":[{"authorDate":"2020-03-25 14:31:22","commitOrder":2,"curCode":"\tpublic void testPodLabels() {\n\t\tfinal Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, this.resultPod.getMetadata().getLabels());\n\t}\n","date":"2020-03-25 14:31:22","endLine":150,"groupId":"27852","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPodLabels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/97/13cd62bf30df0225e5ec2b0fddfea8135a8794.src","preCode":"\tpublic void testPodLabels() {\n\t\tfinal Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, this.resultPod.getMetadata().getLabels());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecoratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"},{"authorDate":"2020-03-25 14:31:22","commitOrder":2,"curCode":"\tpublic void testDeploymentSpec() {\n\t\tfinal DeploymentSpec resultDeploymentSpec = this.kubernetesJobManagerSpecification.getDeployment().getSpec();\n\t\tassertEquals(1, resultDeploymentSpec.getReplicas().intValue());\n\n\t\tfinal Map<String, String> expectedLabels =  new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, resultDeploymentSpec.getTemplate().getMetadata().getLabels());\n\t\tassertEquals(expectedLabels, resultDeploymentSpec.getSelector().getMatchLabels());\n\n\t\tassertNotNull(resultDeploymentSpec.getTemplate().getSpec());\n\t}\n","date":"2020-03-25 14:31:22","endLine":106,"groupId":"27852","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeploymentSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/16/c688a7dfb6413a20b7fec6830f67aef1d8883c.src","preCode":"\tpublic void testDeploymentSpec() {\n\t\tfinal DeploymentSpec resultDeploymentSpec = this.kubernetesJobManagerSpecification.getDeployment().getSpec();\n\t\tassertEquals(1, resultDeploymentSpec.getReplicas().intValue());\n\n\t\tfinal Map<String, String> expectedLabels =  new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, resultDeploymentSpec.getTemplate().getMetadata().getLabels());\n\t\tassertEquals(expectedLabels, resultDeploymentSpec.getSelector().getMatchLabels());\n\n\t\tassertNotNull(resultDeploymentSpec.getTemplate().getSpec());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/factory/KubernetesJobManagerFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"MB"}],"commitId":"f4b68c4440c0c0a8ab061a4eac366bbb19233455","commitMessage":"@@@[FLINK-15640][k8s] Support to set labels for jobmanager and taskmanager pod\n\nThis closes #11489 .\n","date":"2020-03-25 14:31:22","modifiedFileCount":"16","status":"M","submitter":"Yang Wang"},{"authorTime":"2020-06-22 16:39:35","codes":[{"authorDate":"2020-03-25 14:31:22","commitOrder":3,"curCode":"\tpublic void testPodLabels() {\n\t\tfinal Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, this.resultPod.getMetadata().getLabels());\n\t}\n","date":"2020-03-25 14:31:22","endLine":150,"groupId":"27852","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPodLabels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/97/13cd62bf30df0225e5ec2b0fddfea8135a8794.src","preCode":"\tpublic void testPodLabels() {\n\t\tfinal Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, this.resultPod.getMetadata().getLabels());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecoratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"},{"authorDate":"2020-06-22 16:39:35","commitOrder":3,"curCode":"\tpublic void testDeploymentSpec() throws IOException {\n\t\tkubernetesJobManagerSpecification = KubernetesJobManagerFactory.buildKubernetesJobManagerSpecification(kubernetesJobManagerParameters);\n\n\t\tfinal DeploymentSpec resultDeploymentSpec = this.kubernetesJobManagerSpecification.getDeployment().getSpec();\n\t\tassertEquals(1, resultDeploymentSpec.getReplicas().intValue());\n\n\t\tfinal Map<String, String> expectedLabels =  new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, resultDeploymentSpec.getTemplate().getMetadata().getLabels());\n\t\tassertEquals(expectedLabels, resultDeploymentSpec.getSelector().getMatchLabels());\n\n\t\tassertNotNull(resultDeploymentSpec.getTemplate().getSpec());\n\t}\n","date":"2020-10-22 11:33:26","endLine":124,"groupId":"27852","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeploymentSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/99/3fedc3e5b17efb83417e560b901849c7359798.src","preCode":"\tpublic void testDeploymentSpec() {\n\t\tfinal DeploymentSpec resultDeploymentSpec = this.kubernetesJobManagerSpecification.getDeployment().getSpec();\n\t\tassertEquals(1, resultDeploymentSpec.getReplicas().intValue());\n\n\t\tfinal Map<String, String> expectedLabels =  new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, resultDeploymentSpec.getTemplate().getMetadata().getLabels());\n\t\tassertEquals(expectedLabels, resultDeploymentSpec.getSelector().getMatchLabels());\n\n\t\tassertNotNull(resultDeploymentSpec.getTemplate().getSpec());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/factory/KubernetesJobManagerFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"3862a4aaf3750506eb69af6faf822b07d7d725a2","commitMessage":"@@@[FLINK-18971][kubernetes] Support to mount kerberos conf as ConfigMap and Keytab as Secrete in Kubernetes\n","date":"2020-10-22 11:33:26","modifiedFileCount":"9","status":"M","submitter":"Yangze Guo"},{"authorTime":"2021-02-20 11:30:39","codes":[{"authorDate":"2020-03-25 14:31:22","commitOrder":4,"curCode":"\tpublic void testPodLabels() {\n\t\tfinal Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, this.resultPod.getMetadata().getLabels());\n\t}\n","date":"2020-03-25 14:31:22","endLine":150,"groupId":"27852","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPodLabels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/97/13cd62bf30df0225e5ec2b0fddfea8135a8794.src","preCode":"\tpublic void testPodLabels() {\n\t\tfinal Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, this.resultPod.getMetadata().getLabels());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecoratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"},{"authorDate":"2021-02-20 11:30:39","commitOrder":4,"curCode":"    public void testDeploymentSpec() throws IOException {\n        kubernetesJobManagerSpecification =\n                KubernetesJobManagerFactory.buildKubernetesJobManagerSpecification(\n                        flinkPod, kubernetesJobManagerParameters);\n\n        final DeploymentSpec resultDeploymentSpec =\n                this.kubernetesJobManagerSpecification.getDeployment().getSpec();\n        assertEquals(1, resultDeploymentSpec.getReplicas().intValue());\n\n        final Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n        expectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n        expectedLabels.putAll(userLabels);\n\n        assertEquals(expectedLabels, resultDeploymentSpec.getTemplate().getMetadata().getLabels());\n        assertEquals(expectedLabels, resultDeploymentSpec.getSelector().getMatchLabels());\n\n        assertNotNull(resultDeploymentSpec.getTemplate().getSpec());\n    }\n","date":"2021-03-01 17:38:17","endLine":157,"groupId":"27852","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeploymentSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/25/869c66e5ad22bcac02e10f2d06c3a9aaa83e66.src","preCode":"    public void testDeploymentSpec() throws IOException {\n        kubernetesJobManagerSpecification =\n                KubernetesJobManagerFactory.buildKubernetesJobManagerSpecification(\n                        kubernetesJobManagerParameters);\n\n        final DeploymentSpec resultDeploymentSpec =\n                this.kubernetesJobManagerSpecification.getDeployment().getSpec();\n        assertEquals(1, resultDeploymentSpec.getReplicas().intValue());\n\n        final Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n        expectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n        expectedLabels.putAll(userLabels);\n\n        assertEquals(expectedLabels, resultDeploymentSpec.getTemplate().getMetadata().getLabels());\n        assertEquals(expectedLabels, resultDeploymentSpec.getSelector().getMatchLabels());\n\n        assertNotNull(resultDeploymentSpec.getTemplate().getSpec());\n    }\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/factory/KubernetesJobManagerFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"}],"commitId":"4957736f9d00f6a2e7185fcea9965efd5aea9da0","commitMessage":"@@@[FLINK-15656][k8s] Support pod template for native kubernetes integration\n\nBenifit from flexibility of pod template.  we could support init container.  sidecar container.  volume mount.  pod security context.  etc.\n","date":"2021-03-01 17:38:17","modifiedFileCount":"17","status":"M","submitter":"wangyang0918"},{"authorTime":"2021-08-04 10:33:25","codes":[{"authorDate":"2020-03-25 14:31:22","commitOrder":5,"curCode":"\tpublic void testPodLabels() {\n\t\tfinal Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, this.resultPod.getMetadata().getLabels());\n\t}\n","date":"2020-03-25 14:31:22","endLine":150,"groupId":"102355","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testPodLabels","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/97/13cd62bf30df0225e5ec2b0fddfea8135a8794.src","preCode":"\tpublic void testPodLabels() {\n\t\tfinal Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n\t\texpectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n\t\texpectedLabels.putAll(userLabels);\n\n\t\tassertEquals(expectedLabels, this.resultPod.getMetadata().getLabels());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecoratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"},{"authorDate":"2021-08-04 10:33:25","commitOrder":5,"curCode":"    public void testDeploymentSpec() throws IOException {\n        kubernetesJobManagerSpecification =\n                KubernetesJobManagerFactory.buildKubernetesJobManagerSpecification(\n                        flinkPod, kubernetesJobManagerParameters);\n\n        final DeploymentSpec resultDeploymentSpec =\n                this.kubernetesJobManagerSpecification.getDeployment().getSpec();\n        assertEquals(1, resultDeploymentSpec.getReplicas().intValue());\n\n        final Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n        expectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n        expectedLabels.putAll(userLabels);\n\n        assertEquals(expectedLabels, resultDeploymentSpec.getTemplate().getMetadata().getLabels());\n        assertEquals(expectedLabels, resultDeploymentSpec.getSelector().getMatchLabels());\n\n        assertThat(\n                resultDeploymentSpec.getTemplate().getMetadata().getAnnotations(),\n                equalTo(userAnnotations));\n\n        assertNotNull(resultDeploymentSpec.getTemplate().getSpec());\n    }\n","date":"2021-08-05 17:36:31","endLine":172,"groupId":"102355","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testDeploymentSpec","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/85/41eb912998a64a79f243ec3cb508f212fc610a.src","preCode":"    public void testDeploymentSpec() throws IOException {\n        kubernetesJobManagerSpecification =\n                KubernetesJobManagerFactory.buildKubernetesJobManagerSpecification(\n                        flinkPod, kubernetesJobManagerParameters);\n\n        final DeploymentSpec resultDeploymentSpec =\n                this.kubernetesJobManagerSpecification.getDeployment().getSpec();\n        assertEquals(1, resultDeploymentSpec.getReplicas().intValue());\n\n        final Map<String, String> expectedLabels = new HashMap<>(getCommonLabels());\n        expectedLabels.put(Constants.LABEL_COMPONENT_KEY, Constants.LABEL_COMPONENT_JOB_MANAGER);\n        expectedLabels.putAll(userLabels);\n\n        assertEquals(expectedLabels, resultDeploymentSpec.getTemplate().getMetadata().getLabels());\n        assertEquals(expectedLabels, resultDeploymentSpec.getSelector().getMatchLabels());\n\n        assertNotNull(resultDeploymentSpec.getTemplate().getSpec());\n    }\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/factory/KubernetesJobManagerFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"}],"commitId":"aa21c111d9bcda156a9bb80b30094149b72cf930","commitMessage":"@@@[FLINK-23587][k8s] Set the annotations on JobManager deployment when using native kubernetes\n\nThis closes #16697.\n","date":"2021-08-05 17:36:31","modifiedFileCount":"4","status":"M","submitter":"yangminghua"}]
