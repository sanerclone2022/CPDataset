[{"authorTime":"2021-06-26 15:42:11","codes":[{"authorDate":"2021-06-26 15:42:11","commitOrder":1,"curCode":"    public void testTriggerCheckpointsWithEndOfPartition() throws Exception {\n        BufferOrEvent[] sequence = {\n            createBarrier(1, 0),\n            createBarrier(2, 0),\n            createBarrier(2, 1),\n            createBarrier(3, 0),\n            createBarrier(4, 0),\n            createBarrier(4, 1),\n            createBarrier(5, 1),\n            createEndOfPartition(2)\n        };\n\n        ValidatingCheckpointHandler validator = new ValidatingCheckpointHandler(4);\n        inputGate = createCheckpointedInputGate(3, sequence, validator);\n\n        CheckpointBarrierTracker checkpointBarrierTracker =\n                (CheckpointBarrierTracker) inputGate.getCheckpointBarrierHandler();\n        checkpointBarrierTracker.setEnableCheckpointAfterTasksFinished(true);\n\n        for (BufferOrEvent boe : sequence) {\n            assertEquals(boe, inputGate.pollNext().get());\n        }\n\n        \r\n        assertThat(validator.triggeredCheckpoints, contains(4L));\n        assertEquals(0, validator.getAbortedCheckpointCounter());\n        assertThat(checkpointBarrierTracker.getPendingCheckpointIds(), contains(5L));\n        assertEquals(2, checkpointBarrierTracker.getNumOpenChannels());\n    }\n","date":"2021-07-03 00:00:46","endLine":585,"groupId":"579","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTriggerCheckpointsWithEndOfPartition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3c/fe11f3d617e0f5c7a4e309d28369a9909daaa8.src","preCode":"    public void testTriggerCheckpointsWithEndOfPartition() throws Exception {\n        BufferOrEvent[] sequence = {\n            createBarrier(1, 0),\n            createBarrier(2, 0),\n            createBarrier(2, 1),\n            createBarrier(3, 0),\n            createBarrier(4, 0),\n            createBarrier(4, 1),\n            createBarrier(5, 1),\n            createEndOfPartition(2)\n        };\n\n        ValidatingCheckpointHandler validator = new ValidatingCheckpointHandler(4);\n        inputGate = createCheckpointedInputGate(3, sequence, validator);\n\n        CheckpointBarrierTracker checkpointBarrierTracker =\n                (CheckpointBarrierTracker) inputGate.getCheckpointBarrierHandler();\n        checkpointBarrierTracker.setEnableCheckpointAfterTasksFinished(true);\n\n        for (BufferOrEvent boe : sequence) {\n            assertEquals(boe, inputGate.pollNext().get());\n        }\n\n        \r\n        assertThat(validator.triggeredCheckpoints, contains(4L));\n        assertEquals(0, validator.getAbortedCheckpointCounter());\n        assertThat(checkpointBarrierTracker.getPendingCheckpointIds(), contains(5L));\n        assertEquals(2, checkpointBarrierTracker.getNumOpenChannels());\n    }\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/checkpointing/CheckpointBarrierTrackerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":557,"status":"B"},{"authorDate":"2021-06-26 15:42:11","commitOrder":1,"curCode":"    public void testCompleteAndRemoveAbortedCheckpointWithEndOfPartition() throws Exception {\n        BufferOrEvent[] sequence = {\n            createCancellationBarrier(4, 0),\n            createBarrier(4, 1),\n            createBarrier(5, 1),\n            createEndOfPartition(2)\n        };\n\n        ValidatingCheckpointHandler validator = new ValidatingCheckpointHandler(-1);\n        inputGate = createCheckpointedInputGate(3, sequence, validator);\n\n        CheckpointBarrierTracker checkpointBarrierTracker =\n                (CheckpointBarrierTracker) inputGate.getCheckpointBarrierHandler();\n        checkpointBarrierTracker.setEnableCheckpointAfterTasksFinished(true);\n\n        for (BufferOrEvent boe : sequence) {\n            assertEquals(boe, inputGate.pollNext().get());\n        }\n\n        assertEquals(1, validator.getAbortedCheckpointCounter());\n        assertEquals(4L, validator.getLastCanceledCheckpointId());\n        assertEquals(0, validator.getTriggeredCheckpointCounter());\n        assertThat(checkpointBarrierTracker.getPendingCheckpointIds(), contains(5L));\n        assertEquals(2, checkpointBarrierTracker.getNumOpenChannels());\n    }\n","date":"2021-07-03 00:00:46","endLine":689,"groupId":"576","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompleteAndRemoveAbortedCheckpointWithEndOfPartition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3c/fe11f3d617e0f5c7a4e309d28369a9909daaa8.src","preCode":"    public void testCompleteAndRemoveAbortedCheckpointWithEndOfPartition() throws Exception {\n        BufferOrEvent[] sequence = {\n            createCancellationBarrier(4, 0),\n            createBarrier(4, 1),\n            createBarrier(5, 1),\n            createEndOfPartition(2)\n        };\n\n        ValidatingCheckpointHandler validator = new ValidatingCheckpointHandler(-1);\n        inputGate = createCheckpointedInputGate(3, sequence, validator);\n\n        CheckpointBarrierTracker checkpointBarrierTracker =\n                (CheckpointBarrierTracker) inputGate.getCheckpointBarrierHandler();\n        checkpointBarrierTracker.setEnableCheckpointAfterTasksFinished(true);\n\n        for (BufferOrEvent boe : sequence) {\n            assertEquals(boe, inputGate.pollNext().get());\n        }\n\n        assertEquals(1, validator.getAbortedCheckpointCounter());\n        assertEquals(4L, validator.getLastCanceledCheckpointId());\n        assertEquals(0, validator.getTriggeredCheckpointCounter());\n        assertThat(checkpointBarrierTracker.getPendingCheckpointIds(), contains(5L));\n        assertEquals(2, checkpointBarrierTracker.getNumOpenChannels());\n    }\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/checkpointing/CheckpointBarrierTrackerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":665,"status":"B"}],"commitId":"6f21603cc2386ba08cbf6f7e33634d96f8bc4815","commitMessage":"@@@[FLINK-21086][runtime][checkpoint] Make CheckpointBarrierHandler supports alignment with finished channels\n","date":"2021-07-03 00:00:46","modifiedFileCount":"23","status":"B","submitter":"Yun Gao"},{"authorTime":"2021-07-15 19:40:11","codes":[{"authorDate":"2021-07-15 19:40:11","commitOrder":2,"curCode":"    public void testTriggerCheckpointsWithEndOfPartition() throws Exception {\n        BufferOrEvent[] sequence = {\n            createBarrier(1, 0),\n            createBarrier(2, 0),\n            createBarrier(2, 1),\n            createBarrier(3, 0),\n            createBarrier(4, 0),\n            createBarrier(4, 1),\n            createBarrier(5, 1),\n            createEndOfPartition(2)\n        };\n\n        ValidatingCheckpointHandler validator = new ValidatingCheckpointHandler(4);\n        inputGate = createCheckpointedInputGate(3, sequence, validator);\n\n        CheckpointBarrierTracker checkpointBarrierTracker =\n                (CheckpointBarrierTracker) inputGate.getCheckpointBarrierHandler();\n\n        for (BufferOrEvent boe : sequence) {\n            assertEquals(boe, inputGate.pollNext().get());\n        }\n\n        \r\n        assertThat(validator.triggeredCheckpoints, contains(4L));\n        assertEquals(0, validator.getAbortedCheckpointCounter());\n        assertThat(checkpointBarrierTracker.getPendingCheckpointIds(), contains(5L));\n        assertEquals(2, checkpointBarrierTracker.getNumOpenChannels());\n    }\n","date":"2021-07-28 18:47:48","endLine":613,"groupId":"102891","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testTriggerCheckpointsWithEndOfPartition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/35/bc92f8e55b85e984ef2e6c43306a996fb08df6.src","preCode":"    public void testTriggerCheckpointsWithEndOfPartition() throws Exception {\n        BufferOrEvent[] sequence = {\n            createBarrier(1, 0),\n            createBarrier(2, 0),\n            createBarrier(2, 1),\n            createBarrier(3, 0),\n            createBarrier(4, 0),\n            createBarrier(4, 1),\n            createBarrier(5, 1),\n            createEndOfPartition(2)\n        };\n\n        ValidatingCheckpointHandler validator = new ValidatingCheckpointHandler(4);\n        inputGate = createCheckpointedInputGate(3, sequence, validator);\n\n        CheckpointBarrierTracker checkpointBarrierTracker =\n                (CheckpointBarrierTracker) inputGate.getCheckpointBarrierHandler();\n        checkpointBarrierTracker.setEnableCheckpointAfterTasksFinished(true);\n\n        for (BufferOrEvent boe : sequence) {\n            assertEquals(boe, inputGate.pollNext().get());\n        }\n\n        \r\n        assertThat(validator.triggeredCheckpoints, contains(4L));\n        assertEquals(0, validator.getAbortedCheckpointCounter());\n        assertThat(checkpointBarrierTracker.getPendingCheckpointIds(), contains(5L));\n        assertEquals(2, checkpointBarrierTracker.getNumOpenChannels());\n    }\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/checkpointing/CheckpointBarrierTrackerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":586,"status":"M"},{"authorDate":"2021-07-15 19:40:11","commitOrder":2,"curCode":"    public void testCompleteAndRemoveAbortedCheckpointWithEndOfPartition() throws Exception {\n        BufferOrEvent[] sequence = {\n            createCancellationBarrier(4, 0),\n            createBarrier(4, 1),\n            createBarrier(5, 1),\n            createEndOfPartition(2)\n        };\n\n        ValidatingCheckpointHandler validator = new ValidatingCheckpointHandler(-1);\n        inputGate = createCheckpointedInputGate(3, sequence, validator);\n\n        CheckpointBarrierTracker checkpointBarrierTracker =\n                (CheckpointBarrierTracker) inputGate.getCheckpointBarrierHandler();\n\n        for (BufferOrEvent boe : sequence) {\n            assertEquals(boe, inputGate.pollNext().get());\n        }\n\n        assertEquals(1, validator.getAbortedCheckpointCounter());\n        assertEquals(4L, validator.getLastCanceledCheckpointId());\n        assertEquals(0, validator.getTriggeredCheckpointCounter());\n        assertThat(checkpointBarrierTracker.getPendingCheckpointIds(), contains(5L));\n        assertEquals(2, checkpointBarrierTracker.getNumOpenChannels());\n    }\n","date":"2021-07-28 18:47:48","endLine":704,"groupId":"102891","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testCompleteAndRemoveAbortedCheckpointWithEndOfPartition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/35/bc92f8e55b85e984ef2e6c43306a996fb08df6.src","preCode":"    public void testCompleteAndRemoveAbortedCheckpointWithEndOfPartition() throws Exception {\n        BufferOrEvent[] sequence = {\n            createCancellationBarrier(4, 0),\n            createBarrier(4, 1),\n            createBarrier(5, 1),\n            createEndOfPartition(2)\n        };\n\n        ValidatingCheckpointHandler validator = new ValidatingCheckpointHandler(-1);\n        inputGate = createCheckpointedInputGate(3, sequence, validator);\n\n        CheckpointBarrierTracker checkpointBarrierTracker =\n                (CheckpointBarrierTracker) inputGate.getCheckpointBarrierHandler();\n        checkpointBarrierTracker.setEnableCheckpointAfterTasksFinished(true);\n\n        for (BufferOrEvent boe : sequence) {\n            assertEquals(boe, inputGate.pollNext().get());\n        }\n\n        assertEquals(1, validator.getAbortedCheckpointCounter());\n        assertEquals(4L, validator.getLastCanceledCheckpointId());\n        assertEquals(0, validator.getTriggeredCheckpointCounter());\n        assertThat(checkpointBarrierTracker.getPendingCheckpointIds(), contains(5L));\n        assertEquals(2, checkpointBarrierTracker.getNumOpenChannels());\n    }\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/checkpointing/CheckpointBarrierTrackerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":681,"status":"M"}],"commitId":"7c902745fff13e70908d32084d2888a69e13fc8b","commitMessage":"@@@[FLINK-23460] Use a global feature flag in the CheckpointBarrierHandler\n","date":"2021-07-28 18:47:48","modifiedFileCount":"21","status":"M","submitter":"Dawid Wysakowicz"}]
