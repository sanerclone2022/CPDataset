[{"authorTime":"2019-05-19 23:26:09","codes":[{"authorDate":"2019-05-19 23:26:09","commitOrder":1,"curCode":"\tpublic void dropDatabase(String name, boolean ignoreIfNotExists) throws DatabaseNotExistException,\n\t\t\tDatabaseNotEmptyException, CatalogException {\n\t\ttry {\n\t\t\tclient.dropDatabase(name, true, ignoreIfNotExists);\n\t\t} catch (NoSuchObjectException e) {\n\t\t\tif (!ignoreIfNotExists) {\n\t\t\t\tthrow new DatabaseNotExistException(catalogName, name);\n\t\t\t}\n\t\t} catch (InvalidOperationException e) {\n\t\t\tthrow new DatabaseNotEmptyException(catalogName, name);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(String.format(\"Failed to drop database %s\", name), e);\n\t\t}\n\t}\n","date":"2019-05-21 10:28:26","endLine":282,"groupId":"19839","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"dropDatabase","params":"(Stringname@booleanignoreIfNotExists)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/13/c5fde97089737cf3a0df9ddc2b8ca7498dfa6a.src","preCode":"\tpublic void dropDatabase(String name, boolean ignoreIfNotExists) throws DatabaseNotExistException,\n\t\t\tDatabaseNotEmptyException, CatalogException {\n\t\ttry {\n\t\t\tclient.dropDatabase(name, true, ignoreIfNotExists);\n\t\t} catch (NoSuchObjectException e) {\n\t\t\tif (!ignoreIfNotExists) {\n\t\t\t\tthrow new DatabaseNotExistException(catalogName, name);\n\t\t\t}\n\t\t} catch (InvalidOperationException e) {\n\t\t\tthrow new DatabaseNotEmptyException(catalogName, name);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(String.format(\"Failed to drop database %s\", name), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"B"},{"authorDate":"2019-05-19 23:26:09","commitOrder":1,"curCode":"\tpublic List<String> listTables(String databaseName) throws DatabaseNotExistException, CatalogException {\n\t\tcheckArgument(!StringUtils.isNullOrWhitespaceOnly(databaseName), \"databaseName cannot be null or empty\");\n\n\t\ttry {\n\t\t\treturn client.getAllTables(databaseName);\n\t\t} catch (UnknownDBException e) {\n\t\t\tthrow new DatabaseNotExistException(catalogName, databaseName);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list tables in database %s\", databaseName), e);\n\t\t}\n\t}\n","date":"2019-05-21 10:28:26","endLine":440,"groupId":"8220","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"listTables","params":"(StringdatabaseName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/13/c5fde97089737cf3a0df9ddc2b8ca7498dfa6a.src","preCode":"\tpublic List<String> listTables(String databaseName) throws DatabaseNotExistException, CatalogException {\n\t\tcheckArgument(!StringUtils.isNullOrWhitespaceOnly(databaseName), \"databaseName cannot be null or empty\");\n\n\t\ttry {\n\t\t\treturn client.getAllTables(databaseName);\n\t\t} catch (UnknownDBException e) {\n\t\t\tthrow new DatabaseNotExistException(catalogName, databaseName);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list tables in database %s\", databaseName), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"B"}],"commitId":"3fba21a0ce5534b8c95a2bb9e8547b0061e5bb8f","commitMessage":"@@@[FLINK-12552][table]: Combine HiveCatalog and GenericHiveMetastoreCatalog\n\nThis PR is to combine GenericHiveMetastoreCatalog and HiveCatalog into one single class.\n\nThis closes #8480.\n","date":"2019-05-21 10:28:26","modifiedFileCount":"14","status":"B","submitter":"Xuefu Zhang"},{"authorTime":"2019-05-30 03:07:54","codes":[{"authorDate":"2019-05-30 03:07:54","commitOrder":2,"curCode":"\tpublic void dropDatabase(String name, boolean ignoreIfNotExists) throws DatabaseNotExistException,\n\t\t\tDatabaseNotEmptyException, CatalogException {\n\t\ttry {\n\t\t\tclient.dropDatabase(name, true, ignoreIfNotExists);\n\t\t} catch (NoSuchObjectException e) {\n\t\t\tif (!ignoreIfNotExists) {\n\t\t\t\tthrow new DatabaseNotExistException(getCatalogName(), name);\n\t\t\t}\n\t\t} catch (InvalidOperationException e) {\n\t\t\tthrow new DatabaseNotEmptyException(getCatalogName(), name);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(String.format(\"Failed to drop database %s\", name), e);\n\t\t}\n\t}\n","date":"2019-06-01 02:07:34","endLine":292,"groupId":"40938","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"dropDatabase","params":"(Stringname@booleanignoreIfNotExists)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/40/81296c7e9624014ebb741c6effdcf4a08a1559.src","preCode":"\tpublic void dropDatabase(String name, boolean ignoreIfNotExists) throws DatabaseNotExistException,\n\t\t\tDatabaseNotEmptyException, CatalogException {\n\t\ttry {\n\t\t\tclient.dropDatabase(name, true, ignoreIfNotExists);\n\t\t} catch (NoSuchObjectException e) {\n\t\t\tif (!ignoreIfNotExists) {\n\t\t\t\tthrow new DatabaseNotExistException(catalogName, name);\n\t\t\t}\n\t\t} catch (InvalidOperationException e) {\n\t\t\tthrow new DatabaseNotEmptyException(catalogName, name);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(String.format(\"Failed to drop database %s\", name), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"M"},{"authorDate":"2019-05-30 03:07:54","commitOrder":2,"curCode":"\tpublic List<String> listTables(String databaseName) throws DatabaseNotExistException, CatalogException {\n\t\tcheckArgument(!StringUtils.isNullOrWhitespaceOnly(databaseName), \"databaseName cannot be null or empty\");\n\n\t\ttry {\n\t\t\treturn client.getAllTables(databaseName);\n\t\t} catch (UnknownDBException e) {\n\t\t\tthrow new DatabaseNotExistException(getCatalogName(), databaseName);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list tables in database %s\", databaseName), e);\n\t\t}\n\t}\n","date":"2019-06-01 02:07:34","endLine":440,"groupId":"8220","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"listTables","params":"(StringdatabaseName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/40/81296c7e9624014ebb741c6effdcf4a08a1559.src","preCode":"\tpublic List<String> listTables(String databaseName) throws DatabaseNotExistException, CatalogException {\n\t\tcheckArgument(!StringUtils.isNullOrWhitespaceOnly(databaseName), \"databaseName cannot be null or empty\");\n\n\t\ttry {\n\t\t\treturn client.getAllTables(databaseName);\n\t\t} catch (UnknownDBException e) {\n\t\t\tthrow new DatabaseNotExistException(catalogName, databaseName);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list tables in database %s\", databaseName), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"M"}],"commitId":"ba648a57c3bf65efb657095a5c682e2a852d1bdf","commitMessage":"@@@[FLINK-12678][table] Add AbstractCatalog to manage the common catalog name and default database name for catalogs\n","date":"2019-06-01 02:07:34","modifiedFileCount":"2","status":"M","submitter":"bowen.li"},{"authorTime":"2019-05-30 03:20:18","codes":[{"authorDate":"2019-05-30 03:20:18","commitOrder":3,"curCode":"\tpublic void dropDatabase(String name, boolean ignoreIfNotExists) throws DatabaseNotExistException,\n\t\t\tDatabaseNotEmptyException, CatalogException {\n\t\ttry {\n\t\t\tclient.dropDatabase(name, true, ignoreIfNotExists);\n\t\t} catch (NoSuchObjectException e) {\n\t\t\tif (!ignoreIfNotExists) {\n\t\t\t\tthrow new DatabaseNotExistException(getName(), name);\n\t\t\t}\n\t\t} catch (InvalidOperationException e) {\n\t\t\tthrow new DatabaseNotEmptyException(getName(), name);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(String.format(\"Failed to drop database %s\", name), e);\n\t\t}\n\t}\n","date":"2019-06-01 02:08:34","endLine":292,"groupId":"40938","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"dropDatabase","params":"(Stringname@booleanignoreIfNotExists)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/80/22c453084949b962acecdd443aacfcf3631dab.src","preCode":"\tpublic void dropDatabase(String name, boolean ignoreIfNotExists) throws DatabaseNotExistException,\n\t\t\tDatabaseNotEmptyException, CatalogException {\n\t\ttry {\n\t\t\tclient.dropDatabase(name, true, ignoreIfNotExists);\n\t\t} catch (NoSuchObjectException e) {\n\t\t\tif (!ignoreIfNotExists) {\n\t\t\t\tthrow new DatabaseNotExistException(getCatalogName(), name);\n\t\t\t}\n\t\t} catch (InvalidOperationException e) {\n\t\t\tthrow new DatabaseNotEmptyException(getCatalogName(), name);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(String.format(\"Failed to drop database %s\", name), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"M"},{"authorDate":"2019-05-30 03:20:18","commitOrder":3,"curCode":"\tpublic List<String> listTables(String databaseName) throws DatabaseNotExistException, CatalogException {\n\t\tcheckArgument(!StringUtils.isNullOrWhitespaceOnly(databaseName), \"databaseName cannot be null or empty\");\n\n\t\ttry {\n\t\t\treturn client.getAllTables(databaseName);\n\t\t} catch (UnknownDBException e) {\n\t\t\tthrow new DatabaseNotExistException(getName(), databaseName);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list tables in database %s\", databaseName), e);\n\t\t}\n\t}\n","date":"2019-06-01 02:08:34","endLine":440,"groupId":"8220","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"listTables","params":"(StringdatabaseName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/80/22c453084949b962acecdd443aacfcf3631dab.src","preCode":"\tpublic List<String> listTables(String databaseName) throws DatabaseNotExistException, CatalogException {\n\t\tcheckArgument(!StringUtils.isNullOrWhitespaceOnly(databaseName), \"databaseName cannot be null or empty\");\n\n\t\ttry {\n\t\t\treturn client.getAllTables(databaseName);\n\t\t} catch (UnknownDBException e) {\n\t\t\tthrow new DatabaseNotExistException(getCatalogName(), databaseName);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list tables in database %s\", databaseName), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"M"}],"commitId":"c691c1381fe486068a3beb6bab38f3a29b1cc255","commitMessage":"@@@[FLINK-12676][table][sql-client] Add descriptor.  validator.  and factory of GenericInMemoryCatalog for table discovery service\n\nThis closes #8567.\n","date":"2019-06-01 02:08:34","modifiedFileCount":"6","status":"M","submitter":"bowen.li"},{"authorTime":"2019-05-30 03:20:18","codes":[{"authorDate":"2019-11-21 17:03:59","commitOrder":4,"curCode":"\tpublic void dropDatabase(String name, boolean ignoreIfNotExists, boolean cascade)\n\t\t\tthrows DatabaseNotExistException, DatabaseNotEmptyException, CatalogException {\n\t\ttry {\n\t\t\tclient.dropDatabase(name, true, ignoreIfNotExists, cascade);\n\t\t} catch (NoSuchObjectException e) {\n\t\t\tif (!ignoreIfNotExists) {\n\t\t\t\tthrow new DatabaseNotExistException(getName(), name);\n\t\t\t}\n\t\t} catch (InvalidOperationException e) {\n\t\t\tthrow new DatabaseNotEmptyException(getName(), name);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(String.format(\"Failed to drop database %s\", name), e);\n\t\t}\n\t}\n","date":"2019-12-04 09:27:05","endLine":318,"groupId":"40938","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"dropDatabase","params":"(Stringname@booleanignoreIfNotExists@booleancascade)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/10/1d0cdee79d043bd705f844cf8b57e98f8ee9ef.src","preCode":"\tpublic void dropDatabase(String name, boolean ignoreIfNotExists) throws DatabaseNotExistException,\n\t\t\tDatabaseNotEmptyException, CatalogException {\n\t\ttry {\n\t\t\tclient.dropDatabase(name, true, ignoreIfNotExists);\n\t\t} catch (NoSuchObjectException e) {\n\t\t\tif (!ignoreIfNotExists) {\n\t\t\t\tthrow new DatabaseNotExistException(getName(), name);\n\t\t\t}\n\t\t} catch (InvalidOperationException e) {\n\t\t\tthrow new DatabaseNotEmptyException(getName(), name);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(String.format(\"Failed to drop database %s\", name), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"M"},{"authorDate":"2019-05-30 03:20:18","commitOrder":4,"curCode":"\tpublic List<String> listTables(String databaseName) throws DatabaseNotExistException, CatalogException {\n\t\tcheckArgument(!StringUtils.isNullOrWhitespaceOnly(databaseName), \"databaseName cannot be null or empty\");\n\n\t\ttry {\n\t\t\treturn client.getAllTables(databaseName);\n\t\t} catch (UnknownDBException e) {\n\t\t\tthrow new DatabaseNotExistException(getName(), databaseName);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list tables in database %s\", databaseName), e);\n\t\t}\n\t}\n","date":"2019-06-01 02:08:34","endLine":440,"groupId":"8220","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"listTables","params":"(StringdatabaseName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/80/22c453084949b962acecdd443aacfcf3631dab.src","preCode":"\tpublic List<String> listTables(String databaseName) throws DatabaseNotExistException, CatalogException {\n\t\tcheckArgument(!StringUtils.isNullOrWhitespaceOnly(databaseName), \"databaseName cannot be null or empty\");\n\n\t\ttry {\n\t\t\treturn client.getAllTables(databaseName);\n\t\t} catch (UnknownDBException e) {\n\t\t\tthrow new DatabaseNotExistException(getName(), databaseName);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list tables in database %s\", databaseName), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"N"}],"commitId":"02a8c41d83e3ff500f4cd2f474d8efe063222a71","commitMessage":"@@@[FLINK-14691][table] Support create/drop/alter/use database in TableEnvironment\n\nThis closes #10296\n","date":"2019-12-04 09:27:05","modifiedFileCount":"15","status":"M","submitter":"zjuwangg"},{"authorTime":"2020-09-30 10:30:46","codes":[{"authorDate":"2019-11-21 17:03:59","commitOrder":5,"curCode":"\tpublic void dropDatabase(String name, boolean ignoreIfNotExists, boolean cascade)\n\t\t\tthrows DatabaseNotExistException, DatabaseNotEmptyException, CatalogException {\n\t\ttry {\n\t\t\tclient.dropDatabase(name, true, ignoreIfNotExists, cascade);\n\t\t} catch (NoSuchObjectException e) {\n\t\t\tif (!ignoreIfNotExists) {\n\t\t\t\tthrow new DatabaseNotExistException(getName(), name);\n\t\t\t}\n\t\t} catch (InvalidOperationException e) {\n\t\t\tthrow new DatabaseNotEmptyException(getName(), name);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(String.format(\"Failed to drop database %s\", name), e);\n\t\t}\n\t}\n","date":"2019-12-04 09:27:05","endLine":318,"groupId":"101110","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"dropDatabase","params":"(Stringname@booleanignoreIfNotExists@booleancascade)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/10/1d0cdee79d043bd705f844cf8b57e98f8ee9ef.src","preCode":"\tpublic void dropDatabase(String name, boolean ignoreIfNotExists, boolean cascade)\n\t\t\tthrows DatabaseNotExistException, DatabaseNotEmptyException, CatalogException {\n\t\ttry {\n\t\t\tclient.dropDatabase(name, true, ignoreIfNotExists, cascade);\n\t\t} catch (NoSuchObjectException e) {\n\t\t\tif (!ignoreIfNotExists) {\n\t\t\t\tthrow new DatabaseNotExistException(getName(), name);\n\t\t\t}\n\t\t} catch (InvalidOperationException e) {\n\t\t\tthrow new DatabaseNotEmptyException(getName(), name);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(String.format(\"Failed to drop database %s\", name), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"N"},{"authorDate":"2020-09-30 10:30:46","commitOrder":5,"curCode":"\tpublic List<String> listTables(String databaseName) throws DatabaseNotExistException, CatalogException {\n\t\tcheckArgument(!isNullOrWhitespaceOnly(databaseName), \"databaseName cannot be null or empty\");\n\n\t\ttry {\n\t\t\treturn client.getAllTables(databaseName);\n\t\t} catch (UnknownDBException e) {\n\t\t\tthrow new DatabaseNotExistException(getName(), databaseName);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list tables in database %s\", databaseName), e);\n\t\t}\n\t}\n","date":"2020-09-30 10:30:46","endLine":568,"groupId":"101110","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"listTables","params":"(StringdatabaseName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/76/8b28b230b106ecc336083087827502a8ba901b.src","preCode":"\tpublic List<String> listTables(String databaseName) throws DatabaseNotExistException, CatalogException {\n\t\tcheckArgument(!StringUtils.isNullOrWhitespaceOnly(databaseName), \"databaseName cannot be null or empty\");\n\n\t\ttry {\n\t\t\treturn client.getAllTables(databaseName);\n\t\t} catch (UnknownDBException e) {\n\t\t\tthrow new DatabaseNotExistException(getName(), databaseName);\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list tables in database %s\", databaseName), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":557,"status":"M"}],"commitId":"b4ae1170b11cabcb6737c390508e8b8cdfc7c6bd","commitMessage":"@@@[FLINK-19292][hive] HiveCatalog should support specifying Hadoop conf dir with configuration (#13434)\n\n","date":"2020-09-30 10:30:46","modifiedFileCount":"6","status":"M","submitter":"SteNicholas"}]
