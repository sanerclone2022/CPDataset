[{"authorTime":"2020-06-29 17:00:59","codes":[{"authorDate":"2020-06-29 17:00:59","commitOrder":1,"curCode":"\tpublic void testClosesStreamIfReaderCreationFails() throws Exception {\n\t\t\r\n\t\tfinal Path testPath = new Path(\"testFs:///testpath-1\");\n\t\tfinal CloseTestingInputStream in = new CloseTestingInputStream();\n\t\tfinal TestingFileSystem testFs = TestingFileSystem.createForFileStatus(\"testFs\",\n\t\t\t\tTestingFileSystem.TestFileStatus.forFileWithStream(testPath, 1024, in));\n\t\ttestFs.register();\n\n\t\t\r\n\t\tfinal BulkFormat<Integer> adapter = wrapWithAdapter(createFormatFailingInInstantiation());\n\t\ttry {\n\t\t\tadapter.createReader(new Configuration(), testPath, 0, 1024);\n\t\t} catch (IOException ignored) {}\n\n\t\t\r\n\t\tassertTrue(in.closed);\n\n\t\t\r\n\t\ttestFs.unregister();\n\t}\n","date":"2020-09-22 00:04:52","endLine":161,"groupId":"30531","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testClosesStreamIfReaderCreationFails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ea/59379e5a14c325e6acc7deae81a28d4f8c393e.src","preCode":"\tpublic void testClosesStreamIfReaderCreationFails() throws Exception {\n\t\t\r\n\t\tfinal Path testPath = new Path(\"testFs:///testpath-1\");\n\t\tfinal CloseTestingInputStream in = new CloseTestingInputStream();\n\t\tfinal TestingFileSystem testFs = TestingFileSystem.createForFileStatus(\"testFs\",\n\t\t\t\tTestingFileSystem.TestFileStatus.forFileWithStream(testPath, 1024, in));\n\t\ttestFs.register();\n\n\t\t\r\n\t\tfinal BulkFormat<Integer> adapter = wrapWithAdapter(createFormatFailingInInstantiation());\n\t\ttry {\n\t\t\tadapter.createReader(new Configuration(), testPath, 0, 1024);\n\t\t} catch (IOException ignored) {}\n\n\t\t\r\n\t\tassertTrue(in.closed);\n\n\t\t\r\n\t\ttestFs.unregister();\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/AdapterTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"},{"authorDate":"2020-06-29 17:00:59","commitOrder":1,"curCode":"\tpublic void testClosesStreamIfReaderRestoreFails() throws Exception {\n\t\t\r\n\t\tfinal Path testPath = new Path(\"testFs:///testpath-1\");\n\t\tfinal CloseTestingInputStream in = new CloseTestingInputStream();\n\t\tfinal TestingFileSystem testFs = TestingFileSystem.createForFileStatus(\"testFs\",\n\t\t\tTestingFileSystem.TestFileStatus.forFileWithStream(testPath, 1024, in));\n\t\ttestFs.register();\n\n\t\t\r\n\t\tfinal BulkFormat<Integer> adapter = wrapWithAdapter(createFormatFailingInInstantiation());\n\t\ttry {\n\t\t\tadapter.restoreReader(\n\t\t\t\t\tnew Configuration(), testPath, 0, 1024,\n\t\t\t\t\tnew CheckpointedPosition(0L, 5L));\n\t\t} catch (IOException ignored) {}\n\n\t\t\r\n\t\tassertTrue(in.closed);\n\n\t\t\r\n\t\ttestFs.unregister();\n\t}\n","date":"2020-09-22 00:04:52","endLine":185,"groupId":"30531","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testClosesStreamIfReaderRestoreFails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ea/59379e5a14c325e6acc7deae81a28d4f8c393e.src","preCode":"\tpublic void testClosesStreamIfReaderRestoreFails() throws Exception {\n\t\t\r\n\t\tfinal Path testPath = new Path(\"testFs:///testpath-1\");\n\t\tfinal CloseTestingInputStream in = new CloseTestingInputStream();\n\t\tfinal TestingFileSystem testFs = TestingFileSystem.createForFileStatus(\"testFs\",\n\t\t\tTestingFileSystem.TestFileStatus.forFileWithStream(testPath, 1024, in));\n\t\ttestFs.register();\n\n\t\t\r\n\t\tfinal BulkFormat<Integer> adapter = wrapWithAdapter(createFormatFailingInInstantiation());\n\t\ttry {\n\t\t\tadapter.restoreReader(\n\t\t\t\t\tnew Configuration(), testPath, 0, 1024,\n\t\t\t\t\tnew CheckpointedPosition(0L, 5L));\n\t\t} catch (IOException ignored) {}\n\n\t\t\r\n\t\tassertTrue(in.closed);\n\n\t\t\r\n\t\ttestFs.unregister();\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/AdapterTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"}],"commitId":"90d01f7409c579313e70fcbfa9e0342e6af50ff8","commitMessage":"@@@[FLINK-19161][file connector] Add first version of the FLIP-27 File Source\n\nThis closes #13401\n","date":"2020-09-22 00:04:52","modifiedFileCount":"3","status":"B","submitter":"Stephan Ewen"},{"authorTime":"2020-10-26 03:00:26","codes":[{"authorDate":"2020-10-26 03:00:26","commitOrder":2,"curCode":"\tpublic void testClosesStreamIfReaderCreationFails() throws Exception {\n\t\t\r\n\t\tfinal Path testPath = new Path(\"testFs:///testpath-1\");\n\t\tfinal CloseTestingInputStream in = new CloseTestingInputStream();\n\t\tfinal TestingFileSystem testFs = TestingFileSystem.createForFileStatus(\"testFs\",\n\t\t\t\tTestingFileSystem.TestFileStatus.forFileWithStream(testPath, 1024, in));\n\t\ttestFs.register();\n\n\t\t\r\n\t\tfinal BulkFormat<Integer, FileSourceSplit> adapter = wrapWithAdapter(createFormatFailingInInstantiation());\n\t\ttry {\n\t\t\tadapter.createReader(new Configuration(), new FileSourceSplit(\"id\", testPath, 0, 1024));\n\t\t} catch (IOException ignored) {}\n\n\t\t\r\n\t\tassertTrue(in.closed);\n\n\t\t\r\n\t\ttestFs.unregister();\n\t}\n","date":"2020-11-03 23:33:28","endLine":160,"groupId":"10993","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testClosesStreamIfReaderCreationFails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ee/e99e1200c0f6f84131849ec82f227c52d98125.src","preCode":"\tpublic void testClosesStreamIfReaderCreationFails() throws Exception {\n\t\t\r\n\t\tfinal Path testPath = new Path(\"testFs:///testpath-1\");\n\t\tfinal CloseTestingInputStream in = new CloseTestingInputStream();\n\t\tfinal TestingFileSystem testFs = TestingFileSystem.createForFileStatus(\"testFs\",\n\t\t\t\tTestingFileSystem.TestFileStatus.forFileWithStream(testPath, 1024, in));\n\t\ttestFs.register();\n\n\t\t\r\n\t\tfinal BulkFormat<Integer> adapter = wrapWithAdapter(createFormatFailingInInstantiation());\n\t\ttry {\n\t\t\tadapter.createReader(new Configuration(), testPath, 0, 1024);\n\t\t} catch (IOException ignored) {}\n\n\t\t\r\n\t\tassertTrue(in.closed);\n\n\t\t\r\n\t\ttestFs.unregister();\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/AdapterTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"},{"authorDate":"2020-10-26 03:00:26","commitOrder":2,"curCode":"\tpublic void testClosesStreamIfReaderRestoreFails() throws Exception {\n\t\t\r\n\t\tfinal Path testPath = new Path(\"testFs:///testpath-1\");\n\t\tfinal CloseTestingInputStream in = new CloseTestingInputStream();\n\t\tfinal TestingFileSystem testFs = TestingFileSystem.createForFileStatus(\"testFs\",\n\t\t\tTestingFileSystem.TestFileStatus.forFileWithStream(testPath, 1024, in));\n\t\ttestFs.register();\n\n\t\t\r\n\t\tfinal BulkFormat<Integer, FileSourceSplit> adapter = wrapWithAdapter(createFormatFailingInInstantiation());\n\t\tfinal FileSourceSplit split = new FileSourceSplit(\n\t\t\t\t\"id\",\n\t\t\t\ttestPath,\n\t\t\t\t0, 1024,\n\t\t\t\tnew String[0],\n\t\t\t\tnew CheckpointedPosition(0L, 5L));\n\n\t\ttry {\n\t\t\tadapter.restoreReader(new Configuration(), split);\n\t\t} catch (IOException ignored) {}\n\n\t\t\r\n\t\tassertTrue(in.closed);\n\n\t\t\r\n\t\ttestFs.unregister();\n\t}\n","date":"2020-11-03 23:33:28","endLine":189,"groupId":"10993","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testClosesStreamIfReaderRestoreFails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ee/e99e1200c0f6f84131849ec82f227c52d98125.src","preCode":"\tpublic void testClosesStreamIfReaderRestoreFails() throws Exception {\n\t\t\r\n\t\tfinal Path testPath = new Path(\"testFs:///testpath-1\");\n\t\tfinal CloseTestingInputStream in = new CloseTestingInputStream();\n\t\tfinal TestingFileSystem testFs = TestingFileSystem.createForFileStatus(\"testFs\",\n\t\t\tTestingFileSystem.TestFileStatus.forFileWithStream(testPath, 1024, in));\n\t\ttestFs.register();\n\n\t\t\r\n\t\tfinal BulkFormat<Integer> adapter = wrapWithAdapter(createFormatFailingInInstantiation());\n\t\ttry {\n\t\t\tadapter.restoreReader(\n\t\t\t\t\tnew Configuration(), testPath, 0, 1024,\n\t\t\t\t\tnew CheckpointedPosition(0L, 5L));\n\t\t} catch (IOException ignored) {}\n\n\t\t\r\n\t\tassertTrue(in.closed);\n\n\t\t\r\n\t\ttestFs.unregister();\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/AdapterTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"a2849b327635233d34686a9ab95cf3486ac08ae5","commitMessage":"@@@[FLINK-19802][connector files] Let BulkFormat createReader and restoreReader methods accept Splits directly\n\nThis is a step in supporting File Sources for BulkFormats that need subclasses of FileSourceSplit.\n","date":"2020-11-03 23:33:28","modifiedFileCount":"19","status":"M","submitter":"Stephan Ewen"}]
