[{"authorTime":"2019-11-27 23:03:16","codes":[{"authorDate":"2019-11-27 23:03:16","commitOrder":1,"curCode":"\tOneInputStreamOperatorTestHarness<IN, OUT> forProcessFunction(\n\t\tfinal ProcessFunction<IN, OUT> function)\n\t\tthrows Exception {\n\n\t\tOneInputStreamOperatorTestHarness<IN, OUT> testHarness =\n\t\t\tnew OneInputStreamOperatorTestHarness<>(\n\t\t\t\tnew ProcessOperator<>(\n\t\t\t\t\tPreconditions.checkNotNull(function)),\n\t\t\t\t1,\n\t\t\t\t1,\n\t\t\t\t0);\n\t\ttestHarness.setup();\n\t\ttestHarness.open();\n\t\treturn testHarness;\n\t}\n","date":"2019-12-05 17:16:58","endLine":68,"groupId":"30216","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"forProcessFunction","params":"(finalProcessFunction<IN@OUT>function)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/82/5984ee845f5909784901267de62e903fd46fd5.src","preCode":"\tOneInputStreamOperatorTestHarness<IN, OUT> forProcessFunction(\n\t\tfinal ProcessFunction<IN, OUT> function)\n\t\tthrows Exception {\n\n\t\tOneInputStreamOperatorTestHarness<IN, OUT> testHarness =\n\t\t\tnew OneInputStreamOperatorTestHarness<>(\n\t\t\t\tnew ProcessOperator<>(\n\t\t\t\t\tPreconditions.checkNotNull(function)),\n\t\t\t\t1,\n\t\t\t\t1,\n\t\t\t\t0);\n\t\ttestHarness.setup();\n\t\ttestHarness.open();\n\t\treturn testHarness;\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/util/ProcessFunctionTestHarnesses.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2019-11-27 23:03:16","commitOrder":1,"curCode":"\tKeyedOneInputStreamOperatorTestHarness<K, IN, OUT> forKeyedProcessFunction(\n\t\tfinal KeyedProcessFunction<K, IN, OUT> function,\n\t\tfinal KeySelector<IN, K> keySelector,\n\t\tfinal TypeInformation<K> keyType) throws Exception {\n\n\t\tKeyedOneInputStreamOperatorTestHarness<K, IN, OUT> testHarness =\n\t\t\tnew KeyedOneInputStreamOperatorTestHarness<>(\n\t\t\t\tnew KeyedProcessOperator<>(\n\t\t\t\t\tPreconditions.checkNotNull(function)),\n\t\t\t\tkeySelector,\n\t\t\t\tkeyType,\n\t\t\t\t1,\n\t\t\t\t1,\n\t\t\t\t0);\n\t\ttestHarness.open();\n\t\treturn testHarness;\n\t}\n","date":"2019-12-05 17:16:58","endLine":96,"groupId":"30216","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"forKeyedProcessFunction","params":"(finalKeyedProcessFunction<K@IN@OUT>function@finalKeySelector<IN@K>keySelector@finalTypeInformation<K>keyType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/82/5984ee845f5909784901267de62e903fd46fd5.src","preCode":"\tKeyedOneInputStreamOperatorTestHarness<K, IN, OUT> forKeyedProcessFunction(\n\t\tfinal KeyedProcessFunction<K, IN, OUT> function,\n\t\tfinal KeySelector<IN, K> keySelector,\n\t\tfinal TypeInformation<K> keyType) throws Exception {\n\n\t\tKeyedOneInputStreamOperatorTestHarness<K, IN, OUT> testHarness =\n\t\t\tnew KeyedOneInputStreamOperatorTestHarness<>(\n\t\t\t\tnew KeyedProcessOperator<>(\n\t\t\t\t\tPreconditions.checkNotNull(function)),\n\t\t\t\tkeySelector,\n\t\t\t\tkeyType,\n\t\t\t\t1,\n\t\t\t\t1,\n\t\t\t\t0);\n\t\ttestHarness.open();\n\t\treturn testHarness;\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/util/ProcessFunctionTestHarnesses.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"10c0cd8e68fb7b0bace2cdd9e0d1e30d59131a50","commitMessage":"@@@[FLINK-14890] Add utility class for initializing various process function test harnesses\n","date":"2019-12-05 17:16:58","modifiedFileCount":"0","status":"B","submitter":"Alexander Fedulov"},{"authorTime":"2019-11-27 23:03:16","codes":[{"authorDate":"2020-12-28 21:30:59","commitOrder":2,"curCode":"    public static <IN, OUT> OneInputStreamOperatorTestHarness<IN, OUT> forProcessFunction(\n            final ProcessFunction<IN, OUT> function) throws Exception {\n\n        OneInputStreamOperatorTestHarness<IN, OUT> testHarness =\n                new OneInputStreamOperatorTestHarness<>(\n                        new ProcessOperator<>(Preconditions.checkNotNull(function)), 1, 1, 0);\n        testHarness.setup();\n        testHarness.open();\n        return testHarness;\n    }\n","date":"2020-12-28 21:35:13","endLine":60,"groupId":"103401","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"forProcessFunction","params":"(finalProcessFunction<IN@OUT>function)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/01/c19523acbfca6cfd2f37ecbdaf6bf4533e6358.src","preCode":"\tOneInputStreamOperatorTestHarness<IN, OUT> forProcessFunction(\n\t\tfinal ProcessFunction<IN, OUT> function)\n\t\tthrows Exception {\n\n\t\tOneInputStreamOperatorTestHarness<IN, OUT> testHarness =\n\t\t\tnew OneInputStreamOperatorTestHarness<>(\n\t\t\t\tnew ProcessOperator<>(\n\t\t\t\t\tPreconditions.checkNotNull(function)),\n\t\t\t\t1,\n\t\t\t\t1,\n\t\t\t\t0);\n\t\ttestHarness.setup();\n\t\ttestHarness.open();\n\t\treturn testHarness;\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/util/ProcessFunctionTestHarnesses.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2019-11-27 23:03:16","commitOrder":2,"curCode":"\tKeyedOneInputStreamOperatorTestHarness<K, IN, OUT> forKeyedProcessFunction(\n\t\tfinal KeyedProcessFunction<K, IN, OUT> function,\n\t\tfinal KeySelector<IN, K> keySelector,\n\t\tfinal TypeInformation<K> keyType) throws Exception {\n\n\t\tKeyedOneInputStreamOperatorTestHarness<K, IN, OUT> testHarness =\n\t\t\tnew KeyedOneInputStreamOperatorTestHarness<>(\n\t\t\t\tnew KeyedProcessOperator<>(\n\t\t\t\t\tPreconditions.checkNotNull(function)),\n\t\t\t\tkeySelector,\n\t\t\t\tkeyType,\n\t\t\t\t1,\n\t\t\t\t1,\n\t\t\t\t0);\n\t\ttestHarness.open();\n\t\treturn testHarness;\n\t}\n","date":"2019-12-05 17:16:58","endLine":96,"groupId":"103401","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"forKeyedProcessFunction","params":"(finalKeyedProcessFunction<K@IN@OUT>function@finalKeySelector<IN@K>keySelector@finalTypeInformation<K>keyType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/82/5984ee845f5909784901267de62e903fd46fd5.src","preCode":"\tKeyedOneInputStreamOperatorTestHarness<K, IN, OUT> forKeyedProcessFunction(\n\t\tfinal KeyedProcessFunction<K, IN, OUT> function,\n\t\tfinal KeySelector<IN, K> keySelector,\n\t\tfinal TypeInformation<K> keyType) throws Exception {\n\n\t\tKeyedOneInputStreamOperatorTestHarness<K, IN, OUT> testHarness =\n\t\t\tnew KeyedOneInputStreamOperatorTestHarness<>(\n\t\t\t\tnew KeyedProcessOperator<>(\n\t\t\t\t\tPreconditions.checkNotNull(function)),\n\t\t\t\tkeySelector,\n\t\t\t\tkeyType,\n\t\t\t\t1,\n\t\t\t\t1,\n\t\t\t\t0);\n\t\ttestHarness.open();\n\t\treturn testHarness;\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/util/ProcessFunctionTestHarnesses.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"N"}],"commitId":"c6997c97c575d334679915c328792b8a3067cfb5","commitMessage":"@@@[FLINK-20651] Format code with Spotless/google-java-format\n","date":"2020-12-28 21:35:13","modifiedFileCount":"11013","status":"M","submitter":"Rufus Refactor"}]
