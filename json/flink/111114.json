[{"authorTime":"2019-05-30 03:07:54","codes":[{"authorDate":"2019-05-30 03:07:54","commitOrder":1,"curCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\n\t\ttry {\n\t\t\t\r\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), (short) -1).stream()\n\t\t\t\t.map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","date":"2019-06-01 02:07:34","endLine":702,"groupId":"24096","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"listPartitions","params":"(ObjectPathtablePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/40/81296c7e9624014ebb741c6effdcf4a08a1559.src","preCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\n\t\ttry {\n\t\t\t\r\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), (short) -1).stream()\n\t\t\t\t.map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":686,"status":"B"},{"authorDate":"2019-05-30 03:07:54","commitOrder":1,"curCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath, CatalogPartitionSpec partitionSpec)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\t\tcheckNotNull(partitionSpec, \"CatalogPartitionSpec cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\n\t\ttry {\n\t\t\t\r\n\t\t\tList<String> partialVals = MetaStoreUtils.getPvals(hiveTable.getPartitionKeys(), partitionSpec.getPartitionSpec());\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), partialVals,\n\t\t\t\t(short) -1).stream().map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","date":"2019-06-01 02:07:34","endLine":723,"groupId":"24094","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"listPartitions","params":"(ObjectPathtablePath@CatalogPartitionSpecpartitionSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/40/81296c7e9624014ebb741c6effdcf4a08a1559.src","preCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath, CatalogPartitionSpec partitionSpec)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\t\tcheckNotNull(partitionSpec, \"CatalogPartitionSpec cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\n\t\ttry {\n\t\t\t\r\n\t\t\tList<String> partialVals = MetaStoreUtils.getPvals(hiveTable.getPartitionKeys(), partitionSpec.getPartitionSpec());\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), partialVals,\n\t\t\t\t(short) -1).stream().map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":705,"status":"B"}],"commitId":"ba648a57c3bf65efb657095a5c682e2a852d1bdf","commitMessage":"@@@[FLINK-12678][table] Add AbstractCatalog to manage the common catalog name and default database name for catalogs\n","date":"2019-06-01 02:07:34","modifiedFileCount":"2","status":"B","submitter":"bowen.li"},{"authorTime":"2019-08-31 02:23:57","codes":[{"authorDate":"2019-05-30 03:07:54","commitOrder":2,"curCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\n\t\ttry {\n\t\t\t\r\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), (short) -1).stream()\n\t\t\t\t.map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","date":"2019-06-01 02:07:34","endLine":702,"groupId":"24096","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"listPartitions","params":"(ObjectPathtablePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/40/81296c7e9624014ebb741c6effdcf4a08a1559.src","preCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\n\t\ttry {\n\t\t\t\r\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), (short) -1).stream()\n\t\t\t\t.map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":686,"status":"N"},{"authorDate":"2019-08-31 02:23:57","commitOrder":2,"curCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath, CatalogPartitionSpec partitionSpec)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\t\tcheckNotNull(partitionSpec, \"CatalogPartitionSpec cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\n\t\ttry {\n\t\t\t\r\n\t\t\tList<String> partialVals = HiveReflectionUtils.getPvals(hiveShim, hiveTable.getPartitionKeys(),\n\t\t\t\tpartitionSpec.getPartitionSpec());\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), partialVals,\n\t\t\t\t(short) -1).stream().map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","date":"2019-09-06 04:56:38","endLine":750,"groupId":"38835","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"listPartitions","params":"(ObjectPathtablePath@CatalogPartitionSpecpartitionSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/79/14c8964ec5f78a575ac4575bee77807c5801ce.src","preCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath, CatalogPartitionSpec partitionSpec)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\t\tcheckNotNull(partitionSpec, \"CatalogPartitionSpec cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\n\t\ttry {\n\t\t\t\r\n\t\t\tList<String> partialVals = MetaStoreUtils.getPvals(hiveTable.getPartitionKeys(), partitionSpec.getPartitionSpec());\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), partialVals,\n\t\t\t\t(short) -1).stream().map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":731,"status":"M"}],"commitId":"e670b929ae124e04c6cdec560d4432ae9c561ff9","commitMessage":"@@@[FLINK-13930][hive] Support Hive version 3.1.x\n\nSupport Hive 3.1.x versions.  including 3.1.0.  3.1.1.  and 3.1.2. Those are latest and newest versions from Hive community.\n\nThis closes #9580.\n","date":"2019-09-06 04:56:38","modifiedFileCount":"18","status":"M","submitter":"Xuefu Zhang"},{"authorTime":"2020-08-21 15:20:43","codes":[{"authorDate":"2019-05-30 03:07:54","commitOrder":3,"curCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\n\t\ttry {\n\t\t\t\r\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), (short) -1).stream()\n\t\t\t\t.map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","date":"2019-06-01 02:07:34","endLine":702,"groupId":"111114","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"listPartitions","params":"(ObjectPathtablePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/40/81296c7e9624014ebb741c6effdcf4a08a1559.src","preCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\n\t\ttry {\n\t\t\t\r\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), (short) -1).stream()\n\t\t\t\t.map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":686,"status":"N"},{"authorDate":"2020-08-21 15:20:43","commitOrder":3,"curCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath, CatalogPartitionSpec partitionSpec)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, PartitionSpecInvalidException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\t\tcheckNotNull(partitionSpec, \"CatalogPartitionSpec cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\t\tcheckValidPartitionSpec(partitionSpec, getFieldNames(hiveTable.getPartitionKeys()), tablePath);\n\n\t\ttry {\n\t\t\t\r\n\t\t\tList<String> partialVals = HiveReflectionUtils.getPvals(hiveShim, hiveTable.getPartitionKeys(),\n\t\t\t\tpartitionSpec.getPartitionSpec());\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), partialVals,\n\t\t\t\t(short) -1).stream().map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","date":"2020-08-21 15:20:43","endLine":787,"groupId":"111114","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"listPartitions","params":"(ObjectPathtablePath@CatalogPartitionSpecpartitionSpec)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9a/4eb3d373f67f414b355f45118b4e128926f0cd.src","preCode":"\tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath, CatalogPartitionSpec partitionSpec)\n\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n\t\tcheckNotNull(tablePath, \"Table path cannot be null\");\n\t\tcheckNotNull(partitionSpec, \"CatalogPartitionSpec cannot be null\");\n\n\t\tTable hiveTable = getHiveTable(tablePath);\n\n\t\tensurePartitionedTable(tablePath, hiveTable);\n\n\t\ttry {\n\t\t\t\r\n\t\t\tList<String> partialVals = HiveReflectionUtils.getPvals(hiveShim, hiveTable.getPartitionKeys(),\n\t\t\t\tpartitionSpec.getPartitionSpec());\n\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), partialVals,\n\t\t\t\t(short) -1).stream().map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n\t\t} catch (TException e) {\n\t\t\tthrow new CatalogException(\n\t\t\t\tString.format(\"Failed to list partitions of table %s\", tablePath), e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":767,"status":"M"}],"commitId":"478c9657fe1240acdc1eb08ad32ea93e08b0cd5e","commitMessage":"@@@[FLINK-18900][hive] HiveCatalog should error out when listing partitions with an invalid spec\n\nThis closes #13157","date":"2020-08-21 15:20:43","modifiedFileCount":"5","status":"M","submitter":"SteNicholas"}]
