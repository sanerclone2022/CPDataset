[{"authorTime":"2019-10-16 02:11:35","codes":[{"authorDate":"2019-10-16 02:11:35","commitOrder":1,"curCode":"\tpublic void testPutAsHeadWithPriority() throws Exception {\n\n\t\tMail mailA = new Mail(() -> {}, 2, \"mailA\");\n\t\tMail mailB = new Mail(() -> {}, 2, \"mailB\");\n\t\tMail mailC = new Mail(() -> {}, 1, \"mailC\");\n\t\tMail mailD = new Mail(() -> {}, 1, \"mailD\");\n\n\t\ttaskMailbox.put(mailC);\n\t\ttaskMailbox.put(mailB);\n\t\ttaskMailbox.put(mailD);\n\t\ttaskMailbox.putFirst(mailA);\n\n\t\tAssert.assertSame(mailA, taskMailbox.take(2));\n\t\tAssert.assertSame(mailB, taskMailbox.take(2));\n\t\tAssert.assertFalse(taskMailbox.tryTake(2).isPresent());\n\n\t\tAssert.assertSame(mailC, taskMailbox.take(1));\n\t\tAssert.assertSame(mailD, taskMailbox.take(1));\n\n\t\tAssert.assertFalse(taskMailbox.tryTake(1).isPresent());\n\t}\n","date":"2019-10-23 21:56:01","endLine":289,"groupId":"18381","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPutAsHeadWithPriority","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/61/256122dd7162d36869a406db81835f1a11a757.src","preCode":"\tpublic void testPutAsHeadWithPriority() throws Exception {\n\n\t\tMail mailA = new Mail(() -> {}, 2, \"mailA\");\n\t\tMail mailB = new Mail(() -> {}, 2, \"mailB\");\n\t\tMail mailC = new Mail(() -> {}, 1, \"mailC\");\n\t\tMail mailD = new Mail(() -> {}, 1, \"mailD\");\n\n\t\ttaskMailbox.put(mailC);\n\t\ttaskMailbox.put(mailB);\n\t\ttaskMailbox.put(mailD);\n\t\ttaskMailbox.putFirst(mailA);\n\n\t\tAssert.assertSame(mailA, taskMailbox.take(2));\n\t\tAssert.assertSame(mailB, taskMailbox.take(2));\n\t\tAssert.assertFalse(taskMailbox.tryTake(2).isPresent());\n\n\t\tAssert.assertSame(mailC, taskMailbox.take(1));\n\t\tAssert.assertSame(mailD, taskMailbox.take(1));\n\n\t\tAssert.assertFalse(taskMailbox.tryTake(1).isPresent());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/mailbox/TaskMailboxImplTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"B"},{"authorDate":"2019-10-16 02:11:35","commitOrder":1,"curCode":"\tpublic void testPutWithPriorityAndReadingFromMainMailbox() throws Exception {\n\n\t\tMail mailA = new Mail(() -> {}, 2, \"mailA\");\n\t\tMail mailB = new Mail(() -> {}, 2, \"mailB\");\n\t\tMail mailC = new Mail(() -> {}, 1, \"mailC\");\n\t\tMail mailD = new Mail(() -> {}, 1, \"mailD\");\n\n\t\ttaskMailbox.put(mailC);\n\t\ttaskMailbox.put(mailB);\n\t\ttaskMailbox.put(mailD);\n\t\ttaskMailbox.putFirst(mailA);\n\n\t\t\r\n\t\tAssert.assertSame(mailA, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailC, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailB, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailD, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t}\n","date":"2019-10-23 21:56:01","endLine":309,"groupId":"18381","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPutWithPriorityAndReadingFromMainMailbox","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/61/256122dd7162d36869a406db81835f1a11a757.src","preCode":"\tpublic void testPutWithPriorityAndReadingFromMainMailbox() throws Exception {\n\n\t\tMail mailA = new Mail(() -> {}, 2, \"mailA\");\n\t\tMail mailB = new Mail(() -> {}, 2, \"mailB\");\n\t\tMail mailC = new Mail(() -> {}, 1, \"mailC\");\n\t\tMail mailD = new Mail(() -> {}, 1, \"mailD\");\n\n\t\ttaskMailbox.put(mailC);\n\t\ttaskMailbox.put(mailB);\n\t\ttaskMailbox.put(mailD);\n\t\ttaskMailbox.putFirst(mailA);\n\n\t\t\r\n\t\tAssert.assertSame(mailA, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailC, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailB, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailD, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/mailbox/TaskMailboxImplTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"B"}],"commitId":"529e1ccc68f38cb627c2b0baabcd26c2f218a15e","commitMessage":"@@@[FLINK-14199] [runtime] Improving error-reporting when a Mailbox mail failed to execute\n\nPromoting Mail to internal class and using it primarily in Mailbox API.\nMoving priority association entirely to MailboxExecutor.\nRemoving priority views on TaskMailbox - the MailboxExecutor will now put and pull mails with its priority.\nConsolidating Mailbox hierarchy: Only the Mailbox interface for MailboxExecutor and the TaskMailbox interface for MailProcessor remain.\n","date":"2019-10-23 21:56:01","modifiedFileCount":"7","status":"B","submitter":"Arvid Heise"},{"authorTime":"2019-10-26 06:31:30","codes":[{"authorDate":"2019-10-26 06:31:30","commitOrder":2,"curCode":"\tpublic void testPutAsHeadWithPriority() throws InterruptedException {\n\n\t\tMail mailA = new Mail(() -> {}, 2, \"mailA\");\n\t\tMail mailB = new Mail(() -> {}, 2, \"mailB\");\n\t\tMail mailC = new Mail(() -> {}, 1, \"mailC\");\n\t\tMail mailD = new Mail(() -> {}, 1, \"mailD\");\n\n\t\ttaskMailbox.put(mailC);\n\t\ttaskMailbox.put(mailB);\n\t\ttaskMailbox.put(mailD);\n\t\ttaskMailbox.putFirst(mailA);\n\n\t\tAssert.assertSame(mailA, taskMailbox.take(2));\n\t\tAssert.assertSame(mailB, taskMailbox.take(2));\n\t\tAssert.assertFalse(taskMailbox.tryTake(2).isPresent());\n\n\t\tAssert.assertSame(mailC, taskMailbox.take(1));\n\t\tAssert.assertSame(mailD, taskMailbox.take(1));\n\n\t\tAssert.assertFalse(taskMailbox.tryTake(1).isPresent());\n\t}\n","date":"2019-11-07 21:21:43","endLine":290,"groupId":"102519","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPutAsHeadWithPriority","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/81/4bbee4fd70af038e4220b54c6d1ab6c6cc4d8d.src","preCode":"\tpublic void testPutAsHeadWithPriority() throws Exception {\n\n\t\tMail mailA = new Mail(() -> {}, 2, \"mailA\");\n\t\tMail mailB = new Mail(() -> {}, 2, \"mailB\");\n\t\tMail mailC = new Mail(() -> {}, 1, \"mailC\");\n\t\tMail mailD = new Mail(() -> {}, 1, \"mailD\");\n\n\t\ttaskMailbox.put(mailC);\n\t\ttaskMailbox.put(mailB);\n\t\ttaskMailbox.put(mailD);\n\t\ttaskMailbox.putFirst(mailA);\n\n\t\tAssert.assertSame(mailA, taskMailbox.take(2));\n\t\tAssert.assertSame(mailB, taskMailbox.take(2));\n\t\tAssert.assertFalse(taskMailbox.tryTake(2).isPresent());\n\n\t\tAssert.assertSame(mailC, taskMailbox.take(1));\n\t\tAssert.assertSame(mailD, taskMailbox.take(1));\n\n\t\tAssert.assertFalse(taskMailbox.tryTake(1).isPresent());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/mailbox/TaskMailboxImplTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"},{"authorDate":"2019-10-26 06:31:30","commitOrder":2,"curCode":"\tpublic void testPutWithPriorityAndReadingFromMainMailbox() throws InterruptedException {\n\n\t\tMail mailA = new Mail(() -> {}, 2, \"mailA\");\n\t\tMail mailB = new Mail(() -> {}, 2, \"mailB\");\n\t\tMail mailC = new Mail(() -> {}, 1, \"mailC\");\n\t\tMail mailD = new Mail(() -> {}, 1, \"mailD\");\n\n\t\ttaskMailbox.put(mailC);\n\t\ttaskMailbox.put(mailB);\n\t\ttaskMailbox.put(mailD);\n\t\ttaskMailbox.putFirst(mailA);\n\n\t\t\r\n\t\tAssert.assertSame(mailA, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailC, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailB, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailD, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t}\n","date":"2019-11-07 21:21:43","endLine":310,"groupId":"102519","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPutWithPriorityAndReadingFromMainMailbox","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/81/4bbee4fd70af038e4220b54c6d1ab6c6cc4d8d.src","preCode":"\tpublic void testPutWithPriorityAndReadingFromMainMailbox() throws Exception {\n\n\t\tMail mailA = new Mail(() -> {}, 2, \"mailA\");\n\t\tMail mailB = new Mail(() -> {}, 2, \"mailB\");\n\t\tMail mailC = new Mail(() -> {}, 1, \"mailC\");\n\t\tMail mailD = new Mail(() -> {}, 1, \"mailD\");\n\n\t\ttaskMailbox.put(mailC);\n\t\ttaskMailbox.put(mailB);\n\t\ttaskMailbox.put(mailD);\n\t\ttaskMailbox.putFirst(mailA);\n\n\t\t\r\n\t\tAssert.assertSame(mailA, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailC, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailB, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t\tAssert.assertSame(mailD, taskMailbox.take(TaskMailbox.MIN_PRIORITY));\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/mailbox/TaskMailboxImplTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":293,"status":"M"}],"commitId":"bf7a402caf0197ba9640070444737974a775a8f6","commitMessage":"@@@[hotfix][runtime] Replace MailboxStateException with IllegalStateException.\n\nMailboxStateException adds no information and makes using code throwing it more clunky then necessary. (Handling exception is limited to rethrowing since it indicates a programmatic error).\n","date":"2019-11-07 21:21:43","modifiedFileCount":"7","status":"M","submitter":"Arvid Heise"}]
