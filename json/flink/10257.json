[{"authorTime":"2019-07-30 17:52:38","codes":[{"authorDate":"2019-10-31 17:58:43","commitOrder":2,"curCode":"\tpublic void testProducerWhenCommitEmptyPartitionsToOutdatedTxnCoordinator() throws Exception {\n\t\tString topic = \"flink-kafka-producer-txn-coordinator-changed\";\n\t\tcreateTestTopic(topic, 1, 2);\n\t\ttry (Producer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties)) {\n\t\t\tkafkaProducer.initTransactions();\n\t\t\tkafkaProducer.beginTransaction();\n\t\t\trestartBroker(kafkaServer.getLeaderToShutDown(\"__transaction_state\"));\n\t\t\tkafkaProducer.flush();\n\t\t\tkafkaProducer.commitTransaction();\n\t\t}\n\t\tdeleteTestTopic(topic);\n\t}\n","date":"2019-10-31 17:58:43","endLine":185,"groupId":"51256","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testProducerWhenCommitEmptyPartitionsToOutdatedTxnCoordinator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/50/62b70ab61ba75e7d3791498810984bba46837f.src","preCode":"\tpublic void testProducerWhenCommitEmptyPartitionsToOutdatedTxnCoordinator() throws Exception {\n\t\tString topic = \"flink-kafka-producer-txn-coordinator-changed\";\n\t\tcreateTestTopic(topic, 1, 2);\n\t\ttry (Producer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties)) {\n\t\t\tkafkaProducer.initTransactions();\n\t\t\tkafkaProducer.beginTransaction();\n\t\t\trestartBroker(kafkaServer.getLeaderToShutDown(\"__transaction_state\"));\n\t\t\tkafkaProducer.flush();\n\t\t\tkafkaProducer.commitTransaction();\n\t\t}\n\t\tdeleteTestTopic(topic);\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaInternalProducerITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"B"},{"authorDate":"2019-07-30 17:52:38","commitOrder":2,"curCode":"\tprivate FlinkKafkaInternalProducer<String, String> getClosedProducer(String topicName) {\n\t\tFlinkKafkaInternalProducer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties);\n\t\tkafkaProducer.initTransactions();\n\t\tkafkaProducer.beginTransaction();\n\t\tkafkaProducer.send(new ProducerRecord<>(topicName, \"42\", \"42\"));\n\t\tkafkaProducer.close();\n\t\treturn kafkaProducer;\n\t}\n","date":"2019-08-01 15:01:33","endLine":162,"groupId":"35504","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getClosedProducer","params":"(StringtopicName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2d/749ba8bee544ff75eabcb035fb5feca2b88b45.src","preCode":"\tprivate FlinkKafkaInternalProducer<String, String> getClosedProducer(String topicName) {\n\t\tFlinkKafkaInternalProducer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties);\n\t\tkafkaProducer.initTransactions();\n\t\tkafkaProducer.beginTransaction();\n\t\tkafkaProducer.send(new ProducerRecord<>(topicName, \"42\", \"42\"));\n\t\tkafkaProducer.close();\n\t\treturn kafkaProducer;\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaInternalProducerITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"NB"}],"commitId":"d90e49905ed6f2f9a519ac274345f08c867a999d","commitMessage":"@@@[FLINK-14302] [kafka] FlinkKafkaInternalProducer should not send `ADD_PARTITIONS_TO_TXN` request if `newPartitionsInTransaction` is empty when enable EoS\n\n","date":"2019-10-31 17:58:43","modifiedFileCount":"4","status":"M","submitter":"Tony Wei"},{"authorTime":"2020-05-11 17:32:37","codes":[{"authorDate":"2020-05-11 17:32:37","commitOrder":3,"curCode":"\tpublic void testProducerWhenCommitEmptyPartitionsToOutdatedTxnCoordinator() throws Exception {\n\t\tString topic = \"flink-kafka-producer-txn-coordinator-changed\";\n\t\tcreateTestTopic(topic, 1, 2);\n\t\tProducer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties);\n\t\ttry {\n\t\t\tkafkaProducer.initTransactions();\n\t\t\tkafkaProducer.beginTransaction();\n\t\t\trestartBroker(kafkaServer.getLeaderToShutDown(\"__transaction_state\"));\n\t\t\tkafkaProducer.flush();\n\t\t\tkafkaProducer.commitTransaction();\n\t\t} finally {\n\t\t\tkafkaProducer.close(Duration.ofSeconds(5));\n\t\t}\n\t\tdeleteTestTopic(topic);\n\t}\n","date":"2020-06-16 00:53:46","endLine":202,"groupId":"9519","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testProducerWhenCommitEmptyPartitionsToOutdatedTxnCoordinator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/53/fb7814a6b257306ac326c608c978f737218082.src","preCode":"\tpublic void testProducerWhenCommitEmptyPartitionsToOutdatedTxnCoordinator() throws Exception {\n\t\tString topic = \"flink-kafka-producer-txn-coordinator-changed\";\n\t\tcreateTestTopic(topic, 1, 2);\n\t\ttry (Producer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties)) {\n\t\t\tkafkaProducer.initTransactions();\n\t\t\tkafkaProducer.beginTransaction();\n\t\t\trestartBroker(kafkaServer.getLeaderToShutDown(\"__transaction_state\"));\n\t\t\tkafkaProducer.flush();\n\t\t\tkafkaProducer.commitTransaction();\n\t\t}\n\t\tdeleteTestTopic(topic);\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaInternalProducerITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"},{"authorDate":"2020-05-11 17:32:37","commitOrder":3,"curCode":"\tprivate FlinkKafkaInternalProducer<String, String> getClosedProducer(String topicName) {\n\t\tFlinkKafkaInternalProducer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties);\n\t\tkafkaProducer.initTransactions();\n\t\tkafkaProducer.beginTransaction();\n\t\tkafkaProducer.send(new ProducerRecord<>(topicName, \"42\", \"42\"));\n\t\tkafkaProducer.close(Duration.ofSeconds(5));\n\t\treturn kafkaProducer;\n\t}\n","date":"2020-06-16 00:53:46","endLine":211,"groupId":"35504","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getClosedProducer","params":"(StringtopicName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/53/fb7814a6b257306ac326c608c978f737218082.src","preCode":"\tprivate FlinkKafkaInternalProducer<String, String> getClosedProducer(String topicName) {\n\t\tFlinkKafkaInternalProducer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties);\n\t\tkafkaProducer.initTransactions();\n\t\tkafkaProducer.beginTransaction();\n\t\tkafkaProducer.send(new ProducerRecord<>(topicName, \"42\", \"42\"));\n\t\tkafkaProducer.close();\n\t\treturn kafkaProducer;\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaInternalProducerITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"711f619d3f61b7cf37b13fefb820edff2199b19d","commitMessage":"@@@[FLINK-17327] Always use close() with zero timeout in exactly-once Kafka Producer\n\nNOTE: This fix does not work without also bumping the Kafka version to\nsth > 2.4 (2.3 might work as well). Because of KAFKA-6635/KAFKA-7763.\n\nCalling close() without timeout is equivalent to calling\nclose(Long.MAX_VALUE). This will leave lingering Kafka threads on\nshutdown.  which eventually cause the Task Manager to be killed by the\nFlink Task watchdog.\n\nWe also forbid calling close() without a timeout on our internal\nProducer.  which means that we have to change some code that uses\ntry-with-resources.  because this calls close() without a timeout.\n\nWe need to call close with a zero timeout to prevent in-flight\ntransactions from being aborted by the KafkaProducer/sender. This would\nbreak how we use transactions in our Kafka Producer.\n\nWe don't update FlinkKafkaProducerBase.  which is used for\nnon-exactly-once Kafka Producers.\n","date":"2020-06-16 00:53:46","modifiedFileCount":"4","status":"M","submitter":"Aljoscha Krettek"},{"authorTime":"2019-08-17 22:47:52","codes":[{"authorDate":"2020-05-11 17:32:37","commitOrder":4,"curCode":"\tpublic void testProducerWhenCommitEmptyPartitionsToOutdatedTxnCoordinator() throws Exception {\n\t\tString topic = \"flink-kafka-producer-txn-coordinator-changed\";\n\t\tcreateTestTopic(topic, 1, 2);\n\t\tProducer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties);\n\t\ttry {\n\t\t\tkafkaProducer.initTransactions();\n\t\t\tkafkaProducer.beginTransaction();\n\t\t\trestartBroker(kafkaServer.getLeaderToShutDown(\"__transaction_state\"));\n\t\t\tkafkaProducer.flush();\n\t\t\tkafkaProducer.commitTransaction();\n\t\t} finally {\n\t\t\tkafkaProducer.close(Duration.ofSeconds(5));\n\t\t}\n\t\tdeleteTestTopic(topic);\n\t}\n","date":"2020-06-16 00:53:46","endLine":202,"groupId":"10257","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testProducerWhenCommitEmptyPartitionsToOutdatedTxnCoordinator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/53/fb7814a6b257306ac326c608c978f737218082.src","preCode":"\tpublic void testProducerWhenCommitEmptyPartitionsToOutdatedTxnCoordinator() throws Exception {\n\t\tString topic = \"flink-kafka-producer-txn-coordinator-changed\";\n\t\tcreateTestTopic(topic, 1, 2);\n\t\tProducer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties);\n\t\ttry {\n\t\t\tkafkaProducer.initTransactions();\n\t\t\tkafkaProducer.beginTransaction();\n\t\t\trestartBroker(kafkaServer.getLeaderToShutDown(\"__transaction_state\"));\n\t\t\tkafkaProducer.flush();\n\t\t\tkafkaProducer.commitTransaction();\n\t\t} finally {\n\t\t\tkafkaProducer.close(Duration.ofSeconds(5));\n\t\t}\n\t\tdeleteTestTopic(topic);\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaInternalProducerITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"N"},{"authorDate":"2019-08-17 22:47:52","commitOrder":4,"curCode":"\tprivate FlinkKafkaInternalProducer<String, String> getClosedProducer(String topicName) {\n\t\tFlinkKafkaInternalProducer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties);\n\t\tkafkaProducer.initTransactions();\n\t\tkafkaProducer.beginTransaction();\n\t\tkafkaProducer.send(new ProducerRecord<>(topicName, \"42\", \"42\"), new ErrorCheckingCallback());\n\t\tkafkaProducer.close(Duration.ofSeconds(5));\n\t\tassertNull(\"The message should have been successfully sent\", exceptionInCallback);\n\t\treturn kafkaProducer;\n\t}\n","date":"2020-11-11 13:55:29","endLine":217,"groupId":"10257","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getClosedProducer","params":"(StringtopicName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/7c/dc84dd794b28e2afcafa0a05b7fb774b923856.src","preCode":"\tprivate FlinkKafkaInternalProducer<String, String> getClosedProducer(String topicName) {\n\t\tFlinkKafkaInternalProducer<String, String> kafkaProducer = new FlinkKafkaInternalProducer<>(extraProperties);\n\t\tkafkaProducer.initTransactions();\n\t\tkafkaProducer.beginTransaction();\n\t\tkafkaProducer.send(new ProducerRecord<>(topicName, \"42\", \"42\"));\n\t\tkafkaProducer.close(Duration.ofSeconds(5));\n\t\treturn kafkaProducer;\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaInternalProducerITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"}],"commitId":"9528677754dfa78d136817d9116a14b5ceb3f0f2","commitMessage":"@@@[FLINK-13733][connector/kafka][test] Make FlinkKafkaInternalProducerITCase more robust.\n","date":"2020-11-11 13:55:29","modifiedFileCount":"1","status":"M","submitter":"Jiangjie (Becket) Qin"}]
