[{"authorTime":"2019-06-12 18:14:21","codes":[{"authorDate":"2019-06-12 18:14:21","commitOrder":1,"curCode":"\tpublic void testAnyOrderedReading() throws Exception {\n\t\tConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>();\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 4\"));\n\n\t\ttestBase(new AnyReadingStreamOperator(\"Operator0\"), true, expectedOutput, true);\n\t}\n","date":"2019-06-12 18:40:09","endLine":60,"groupId":"14965","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAnyOrderedReading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a5/6dc9b2673a7b9585ccbd61efcee7579398444c.src","preCode":"\tpublic void testAnyOrderedReading() throws Exception {\n\t\tConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>();\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 4\"));\n\n\t\ttestBase(new AnyReadingStreamOperator(\"Operator0\"), true, expectedOutput, true);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/StreamTaskSelectiveReadingTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"},{"authorDate":"2019-06-12 18:14:21","commitOrder":1,"curCode":"\tpublic void testAnyUnorderedReading() throws Exception {\n\t\tConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>();\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 4\"));\n\n\t\ttestBase(new AnyReadingStreamOperator(\"Operator0\"), false, expectedOutput, false);\n\t}\n","date":"2019-06-12 18:40:09","endLine":74,"groupId":"14965","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnyUnorderedReading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a5/6dc9b2673a7b9585ccbd61efcee7579398444c.src","preCode":"\tpublic void testAnyUnorderedReading() throws Exception {\n\t\tConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>();\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 4\"));\n\n\t\ttestBase(new AnyReadingStreamOperator(\"Operator0\"), false, expectedOutput, false);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/StreamTaskSelectiveReadingTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"48b54e3e40d91b4a79a56f327210e3e8e36557e9","commitMessage":"@@@[FLINK-11877][runtime] Implement the runtime handling of the InputSelectable interface\n","date":"2019-06-12 18:40:09","modifiedFileCount":"10","status":"B","submitter":"sunhaibotb"},{"authorTime":"2019-07-15 11:27:29","codes":[{"authorDate":"2019-07-15 11:27:29","commitOrder":2,"curCode":"\tpublic void testAnyOrderedReading() throws Exception {\n\t\tConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>();\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 4\"));\n\n\t\ttestBase(new TestAnyModeReadingStreamOperator(\"Operator0\"), true, expectedOutput, true);\n\t}\n","date":"2019-08-19 22:32:41","endLine":63,"groupId":"102496","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAnyOrderedReading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/48/0c1b2031ba8ec25c2a8237c5600adbfc326493.src","preCode":"\tpublic void testAnyOrderedReading() throws Exception {\n\t\tConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>();\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 4\"));\n\n\t\ttestBase(new AnyReadingStreamOperator(\"Operator0\"), true, expectedOutput, true);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/StreamTaskSelectiveReadingTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2019-07-15 11:27:29","commitOrder":2,"curCode":"\tpublic void testAnyUnorderedReading() throws Exception {\n\t\tConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>();\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 4\"));\n\n\t\ttestBase(new TestAnyModeReadingStreamOperator(\"Operator0\"), false, expectedOutput, false);\n\t}\n","date":"2019-08-19 22:32:41","endLine":77,"groupId":"102496","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnyUnorderedReading","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/48/0c1b2031ba8ec25c2a8237c5600adbfc326493.src","preCode":"\tpublic void testAnyUnorderedReading() throws Exception {\n\t\tConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>();\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 1\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 2\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-1]: Hello-3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 3\"));\n\t\texpectedOutput.add(new StreamRecord<>(\"[Operator0-2]: 4\"));\n\n\t\ttestBase(new AnyReadingStreamOperator(\"Operator0\"), false, expectedOutput, false);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/StreamTaskSelectiveReadingTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"9042a15813e736ada9d14c4c6303dc3556706d46","commitMessage":"@@@[hotfix][test] Separate some shared inner classes from test classes into the separate files\n","date":"2019-08-19 22:32:41","modifiedFileCount":"3","status":"M","submitter":"sunhaibotb"}]
