[{"authorTime":"2021-01-15 22:42:20","codes":[{"authorDate":"2021-01-15 22:42:20","commitOrder":1,"curCode":"    public void testTableSinkAutoCompleteSchemaRegistrySubject() {\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"debezium-avro-confluent\");\n                    options.put(\"debezium-avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"csv\");\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"json\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.fields\", NAME);\n                },\n                \"N/A\",\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"debezium-avro-confluent\");\n                    options.put(\"debezium-avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"debezium-avro-confluent.schema-registry.subject\", \"sub1\");\n                },\n                \"sub1\",\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"avro-confluent\");\n                    options.put(\"avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.avro-confluent.schema-registry.subject\", \"sub2\");\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"sub2\");\n    }\n","date":"2021-01-15 22:42:20","endLine":549,"groupId":"43477","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTableSinkAutoCompleteSchemaRegistrySubject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b7/1943f9bf936b685ca659f40ccea283919fbb35.src","preCode":"    public void testTableSinkAutoCompleteSchemaRegistrySubject() {\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"debezium-avro-confluent\");\n                    options.put(\"debezium-avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"csv\");\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"json\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.fields\", NAME);\n                },\n                \"N/A\",\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"debezium-avro-confluent\");\n                    options.put(\"debezium-avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"debezium-avro-confluent.schema-registry.subject\", \"sub1\");\n                },\n                \"sub1\",\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"avro-confluent\");\n                    options.put(\"avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.avro-confluent.schema-registry.subject\", \"sub2\");\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"sub2\");\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":474,"status":"B"},{"authorDate":"2021-01-15 22:42:20","commitOrder":1,"curCode":"    public void testTableSinkAutoCompleteSchemaRegistrySubject() {\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"csv\");\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"json\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                \"N/A\",\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.avro-confluent.schema-registry.subject\", \"sub2\");\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"sub2\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"value.avro-confluent.schema-registry.subject\", \"sub1\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                \"sub1\",\n                DEFAULT_KEY_SUBJECT);\n    }\n","date":"2021-01-15 22:42:20","endLine":282,"groupId":"43477","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTableSinkAutoCompleteSchemaRegistrySubject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/93/a30f12bc902ddbe43d72dd3c57f967f9c9353b.src","preCode":"    public void testTableSinkAutoCompleteSchemaRegistrySubject() {\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"csv\");\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"json\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                \"N/A\",\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.avro-confluent.schema-registry.subject\", \"sub2\");\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"sub2\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"value.avro-confluent.schema-registry.subject\", \"sub1\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                \"sub1\",\n                DEFAULT_KEY_SUBJECT);\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"B"}],"commitId":"3786d3b1e55e063c7453d9813335dc5c2906bf7b","commitMessage":"@@@[FLINK-20348][kafka] Make \"schema-registry.subject\" optional for avro-confluent format when used with kafka\n\nThis closes #14530\n\nCo-authored-by: zhuxiaoshang <zhushang@qutoutiao.net>","date":"2021-01-15 22:42:20","modifiedFileCount":"7","status":"B","submitter":"zhuxiaoshang"},{"authorTime":"2021-06-22 15:39:40","codes":[{"authorDate":"2021-06-22 15:39:40","commitOrder":2,"curCode":"    public void testTableSinkAutoCompleteSchemaRegistrySubject() {\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"debezium-avro-confluent\");\n                    options.put(\"debezium-avro-confluent.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"csv\");\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"json\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.fields\", NAME);\n                },\n                \"N/A\",\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"debezium-avro-confluent\");\n                    options.put(\"debezium-avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"debezium-avro-confluent.subject\", \"sub1\");\n                },\n                \"sub1\",\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"avro-confluent\");\n                    options.put(\"avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.avro-confluent.subject\", \"sub2\");\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"sub2\");\n    }\n","date":"2021-06-24 14:48:11","endLine":557,"groupId":"10214","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTableSinkAutoCompleteSchemaRegistrySubject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c7/ac675c91e588bbb774fcf7d1f000f34e24a5da.src","preCode":"    public void testTableSinkAutoCompleteSchemaRegistrySubject() {\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"debezium-avro-confluent\");\n                    options.put(\"debezium-avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"csv\");\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"json\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.fields\", NAME);\n                },\n                \"N/A\",\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"debezium-avro-confluent\");\n                    options.put(\"debezium-avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"debezium-avro-confluent.schema-registry.subject\", \"sub1\");\n                },\n                \"sub1\",\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"format\", \"avro-confluent\");\n                    options.put(\"avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.avro-confluent.schema-registry.subject\", \"sub2\");\n                    options.put(\"key.fields\", NAME);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"sub2\");\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":482,"status":"M"},{"authorDate":"2021-06-22 15:39:40","commitOrder":2,"curCode":"    public void testTableSinkAutoCompleteSchemaRegistrySubject() {\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"csv\");\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"json\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.url\", TEST_REGISTRY_URL);\n                },\n                \"N/A\",\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.avro-confluent.subject\", \"sub2\");\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"sub2\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.url\", TEST_REGISTRY_URL);\n                    options.put(\"value.avro-confluent.subject\", \"sub1\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.url\", TEST_REGISTRY_URL);\n                },\n                \"sub1\",\n                DEFAULT_KEY_SUBJECT);\n    }\n","date":"2021-06-24 14:48:11","endLine":320,"groupId":"10214","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTableSinkAutoCompleteSchemaRegistrySubject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a9/582e42573aa0bea07683b0c7c106fa11e5b875.src","preCode":"    public void testTableSinkAutoCompleteSchemaRegistrySubject() {\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                DEFAULT_VALUE_SUBJECT,\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"csv\");\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"N/A\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"json\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                \"N/A\",\n                DEFAULT_KEY_SUBJECT);\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"key.avro-confluent.schema-registry.subject\", \"sub2\");\n                },\n                DEFAULT_VALUE_SUBJECT,\n                \"sub2\");\n\n        \r\n        verifyEncoderSubject(\n                options -> {\n                    options.put(\"value.format\", \"avro-confluent\");\n                    options.put(\"value.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                    options.put(\"value.avro-confluent.schema-registry.subject\", \"sub1\");\n                    options.put(\"key.format\", \"avro-confluent\");\n                    options.put(\"key.avro-confluent.schema-registry.url\", TEST_REGISTRY_URL);\n                },\n                \"sub1\",\n                DEFAULT_KEY_SUBJECT);\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/streaming/connectors/kafka/table/UpsertKafkaDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"}],"commitId":"6c70f8805f1c0929eecfe4fd0e0d4912e9576cb6","commitMessage":"@@@[FLINK-21229][avro-confluent-registry] Shorten RegistryAvroOptions\n","date":"2021-06-24 14:48:11","modifiedFileCount":"8","status":"M","submitter":"Timo Walther"}]
