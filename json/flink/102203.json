[{"authorTime":"2020-09-25 22:50:09","codes":[{"authorDate":"2020-09-25 22:50:09","commitOrder":1,"curCode":"\tprivate JsonToRowDataConverter createNotNullConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestampWithLocalZone;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase MAP:\n\t\t\tcase MULTISET:\n\t\t\t\treturn createMapConverter((MapType) type);\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type);\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","date":"2020-09-25 22:50:09","endLine":161,"groupId":"39587","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createNotNullConverter","params":"(LogicalTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/87/5d85effeac60c9131ad7be6f20917e4d0a52c3.src","preCode":"\tprivate JsonToRowDataConverter createNotNullConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestampWithLocalZone;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase MAP:\n\t\t\tcase MULTISET:\n\t\t\t\treturn createMapConverter((MapType) type);\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type);\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonToRowDataConverters.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"},{"authorDate":"2020-09-25 22:50:09","commitOrder":1,"curCode":"\tprivate CsvToRowDataConverter createConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITH_TIME_ZONE:\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type, false);\n\t\t\tcase MAP:\n\t\t\tcase MULTISET:\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","date":"2020-09-25 22:50:09","endLine":172,"groupId":"15974","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createConverter","params":"(LogicalTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ae/f3a38f41d2b91ae41a4505bbbc7f7c250afaf9.src","preCode":"\tprivate CsvToRowDataConverter createConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITH_TIME_ZONE:\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type, false);\n\t\t\tcase MAP:\n\t\t\tcase MULTISET:\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvToRowDataConverters.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"B"}],"commitId":"ef4d997756756bf0e1e722af8a3fcd6995f37dc8","commitMessage":"@@@[FLINK-19098][json][csv] Make RowData CSV and JSON converters public\n\nThis closes #13303\n\nCo-authored-by: Jark Wu <jark@apache.org>","date":"2020-09-25 22:50:09","modifiedFileCount":"5","status":"B","submitter":"Brian Zhou"},{"authorTime":"2020-09-25 22:50:09","codes":[{"authorDate":"2020-10-10 15:56:01","commitOrder":2,"curCode":"\tprivate JsonToRowDataConverter createNotNullConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestampWithLocalZone;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase MAP:\n\t\t\t\tMapType mapType = (MapType) type;\n\t\t\t\treturn createMapConverter(\n\t\t\t\t\tmapType.asSummaryString(), mapType.getKeyType(), mapType.getValueType());\n\t\t\tcase MULTISET:\n\t\t\t\tMultisetType multisetType = (MultisetType) type;\n\t\t\t\treturn createMapConverter(\n\t\t\t\t\tmultisetType.asSummaryString(), multisetType.getElementType(), new IntType());\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type);\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","date":"2020-10-10 15:56:01","endLine":168,"groupId":"39587","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createNotNullConverter","params":"(LogicalTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/25/df3df80ca37807dfbe59a67d908dca568a6736.src","preCode":"\tprivate JsonToRowDataConverter createNotNullConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestampWithLocalZone;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase MAP:\n\t\t\tcase MULTISET:\n\t\t\t\treturn createMapConverter((MapType) type);\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type);\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonToRowDataConverters.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2020-09-25 22:50:09","commitOrder":2,"curCode":"\tprivate CsvToRowDataConverter createConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITH_TIME_ZONE:\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type, false);\n\t\t\tcase MAP:\n\t\t\tcase MULTISET:\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","date":"2020-09-25 22:50:09","endLine":172,"groupId":"15974","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createConverter","params":"(LogicalTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ae/f3a38f41d2b91ae41a4505bbbc7f7c250afaf9.src","preCode":"\tprivate CsvToRowDataConverter createConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITH_TIME_ZONE:\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type, false);\n\t\t\tcase MAP:\n\t\t\tcase MULTISET:\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvToRowDataConverters.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"N"}],"commitId":"d4f2abb278047180cd174febc45acb432f5b0735","commitMessage":"@@@[FLINK-19509][json] Support MULTISET type for JSON format\n\nThis closes #13543","date":"2020-10-10 15:56:01","modifiedFileCount":"3","status":"M","submitter":"wangxlong"},{"authorTime":"2020-11-12 15:50:33","codes":[{"authorDate":"2020-10-10 15:56:01","commitOrder":3,"curCode":"\tprivate JsonToRowDataConverter createNotNullConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestampWithLocalZone;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase MAP:\n\t\t\t\tMapType mapType = (MapType) type;\n\t\t\t\treturn createMapConverter(\n\t\t\t\t\tmapType.asSummaryString(), mapType.getKeyType(), mapType.getValueType());\n\t\t\tcase MULTISET:\n\t\t\t\tMultisetType multisetType = (MultisetType) type;\n\t\t\t\treturn createMapConverter(\n\t\t\t\t\tmultisetType.asSummaryString(), multisetType.getElementType(), new IntType());\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type);\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","date":"2020-10-10 15:56:01","endLine":168,"groupId":"39587","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createNotNullConverter","params":"(LogicalTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/25/df3df80ca37807dfbe59a67d908dca568a6736.src","preCode":"\tprivate JsonToRowDataConverter createNotNullConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestampWithLocalZone;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase MAP:\n\t\t\t\tMapType mapType = (MapType) type;\n\t\t\t\treturn createMapConverter(\n\t\t\t\t\tmapType.asSummaryString(), mapType.getKeyType(), mapType.getValueType());\n\t\t\tcase MULTISET:\n\t\t\t\tMultisetType multisetType = (MultisetType) type;\n\t\t\t\treturn createMapConverter(\n\t\t\t\t\tmultisetType.asSummaryString(), multisetType.getElementType(), new IntType());\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type);\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonToRowDataConverters.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"N"},{"authorDate":"2020-11-12 15:50:33","commitOrder":3,"curCode":"\tprivate CsvToRowDataConverter createConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn convertToTime((TimeType) type);\n\t\t\tcase TIMESTAMP_WITH_TIME_ZONE:\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type, false);\n\t\t\tcase MAP:\n\t\t\tcase MULTISET:\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","date":"2020-11-12 15:50:33","endLine":172,"groupId":"53083","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createConverter","params":"(LogicalTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8f/f2936c6c688bb7e4c372ec44e02112df48c2f0.src","preCode":"\tprivate CsvToRowDataConverter createConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITH_TIME_ZONE:\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type, false);\n\t\t\tcase MAP:\n\t\t\tcase MULTISET:\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvToRowDataConverters.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"e86b40909dcd4a0f53fa900989cf2655ff8f6c19","commitMessage":"@@@[FLINK-19872][csv] Fix CSV format is unable to parse millisecond for TIME type\n\nThis closes #13834","date":"2020-11-12 15:50:33","modifiedFileCount":"3","status":"M","submitter":"fangliang"},{"authorTime":"2021-03-24 17:10:23","codes":[{"authorDate":"2020-10-10 15:56:01","commitOrder":4,"curCode":"\tprivate JsonToRowDataConverter createNotNullConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestampWithLocalZone;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase MAP:\n\t\t\t\tMapType mapType = (MapType) type;\n\t\t\t\treturn createMapConverter(\n\t\t\t\t\tmapType.asSummaryString(), mapType.getKeyType(), mapType.getValueType());\n\t\t\tcase MULTISET:\n\t\t\t\tMultisetType multisetType = (MultisetType) type;\n\t\t\t\treturn createMapConverter(\n\t\t\t\t\tmultisetType.asSummaryString(), multisetType.getElementType(), new IntType());\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type);\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","date":"2020-10-10 15:56:01","endLine":168,"groupId":"102203","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createNotNullConverter","params":"(LogicalTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/25/df3df80ca37807dfbe59a67d908dca568a6736.src","preCode":"\tprivate JsonToRowDataConverter createNotNullConverter(LogicalType type) {\n\t\tswitch (type.getTypeRoot()) {\n\t\t\tcase NULL:\n\t\t\t\treturn jsonNode -> null;\n\t\t\tcase BOOLEAN:\n\t\t\t\treturn this::convertToBoolean;\n\t\t\tcase TINYINT:\n\t\t\t\treturn jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n\t\t\tcase SMALLINT:\n\t\t\t\treturn jsonNode -> Short.parseShort(jsonNode.asText().trim());\n\t\t\tcase INTEGER:\n\t\t\tcase INTERVAL_YEAR_MONTH:\n\t\t\t\treturn this::convertToInt;\n\t\t\tcase BIGINT:\n\t\t\tcase INTERVAL_DAY_TIME:\n\t\t\t\treturn this::convertToLong;\n\t\t\tcase DATE:\n\t\t\t\treturn this::convertToDate;\n\t\t\tcase TIME_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTime;\n\t\t\tcase TIMESTAMP_WITHOUT_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestamp;\n\t\t\tcase TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n\t\t\t\treturn this::convertToTimestampWithLocalZone;\n\t\t\tcase FLOAT:\n\t\t\t\treturn this::convertToFloat;\n\t\t\tcase DOUBLE:\n\t\t\t\treturn this::convertToDouble;\n\t\t\tcase CHAR:\n\t\t\tcase VARCHAR:\n\t\t\t\treturn this::convertToString;\n\t\t\tcase BINARY:\n\t\t\tcase VARBINARY:\n\t\t\t\treturn this::convertToBytes;\n\t\t\tcase DECIMAL:\n\t\t\t\treturn createDecimalConverter((DecimalType) type);\n\t\t\tcase ARRAY:\n\t\t\t\treturn createArrayConverter((ArrayType) type);\n\t\t\tcase MAP:\n\t\t\t\tMapType mapType = (MapType) type;\n\t\t\t\treturn createMapConverter(\n\t\t\t\t\tmapType.asSummaryString(), mapType.getKeyType(), mapType.getValueType());\n\t\t\tcase MULTISET:\n\t\t\t\tMultisetType multisetType = (MultisetType) type;\n\t\t\t\treturn createMapConverter(\n\t\t\t\t\tmultisetType.asSummaryString(), multisetType.getElementType(), new IntType());\n\t\t\tcase ROW:\n\t\t\t\treturn createRowConverter((RowType) type);\n\t\t\tcase RAW:\n\t\t\tdefault:\n\t\t\t\tthrow new UnsupportedOperationException(\"Unsupported type: \" + type);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonToRowDataConverters.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"N"},{"authorDate":"2021-03-24 17:10:23","commitOrder":4,"curCode":"    private CsvToRowDataConverter createConverter(LogicalType type) {\n        switch (type.getTypeRoot()) {\n            case NULL:\n                return jsonNode -> null;\n            case BOOLEAN:\n                return this::convertToBoolean;\n            case TINYINT:\n                return jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n            case SMALLINT:\n                return jsonNode -> Short.parseShort(jsonNode.asText().trim());\n            case INTEGER:\n            case INTERVAL_YEAR_MONTH:\n                return this::convertToInt;\n            case BIGINT:\n            case INTERVAL_DAY_TIME:\n                return this::convertToLong;\n            case DATE:\n                return this::convertToDate;\n            case TIME_WITHOUT_TIME_ZONE:\n                return convertToTime((TimeType) type);\n            case TIMESTAMP_WITHOUT_TIME_ZONE:\n                return jsonNode -> convertToTimestamp(jsonNode, SQL_TIMESTAMP_FORMAT);\n            case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n                return jsonNode ->\n                        convertToTimestamp(jsonNode, SQL_TIMESTAMP_WITH_LOCAL_TIMEZONE_FORMAT);\n            case FLOAT:\n                return this::convertToFloat;\n            case DOUBLE:\n                return this::convertToDouble;\n            case CHAR:\n            case VARCHAR:\n                return this::convertToString;\n            case BINARY:\n            case VARBINARY:\n                return this::convertToBytes;\n            case DECIMAL:\n                return createDecimalConverter((DecimalType) type);\n            case ARRAY:\n                return createArrayConverter((ArrayType) type);\n            case ROW:\n                return createRowConverter((RowType) type, false);\n            case MAP:\n            case MULTISET:\n            case RAW:\n            default:\n                throw new UnsupportedOperationException(\"Unsupported type: \" + type);\n        }\n    }\n","date":"2021-03-27 11:07:48","endLine":175,"groupId":"102203","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createConverter","params":"(LogicalTypetype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ce/19755b66e545a380a05c8e71674a1cc48cd30e.src","preCode":"    private CsvToRowDataConverter createConverter(LogicalType type) {\n        switch (type.getTypeRoot()) {\n            case NULL:\n                return jsonNode -> null;\n            case BOOLEAN:\n                return this::convertToBoolean;\n            case TINYINT:\n                return jsonNode -> Byte.parseByte(jsonNode.asText().trim());\n            case SMALLINT:\n                return jsonNode -> Short.parseShort(jsonNode.asText().trim());\n            case INTEGER:\n            case INTERVAL_YEAR_MONTH:\n                return this::convertToInt;\n            case BIGINT:\n            case INTERVAL_DAY_TIME:\n                return this::convertToLong;\n            case DATE:\n                return this::convertToDate;\n            case TIME_WITHOUT_TIME_ZONE:\n                return convertToTime((TimeType) type);\n            case TIMESTAMP_WITH_TIME_ZONE:\n            case TIMESTAMP_WITHOUT_TIME_ZONE:\n                return this::convertToTimestamp;\n            case FLOAT:\n                return this::convertToFloat;\n            case DOUBLE:\n                return this::convertToDouble;\n            case CHAR:\n            case VARCHAR:\n                return this::convertToString;\n            case BINARY:\n            case VARBINARY:\n                return this::convertToBytes;\n            case DECIMAL:\n                return createDecimalConverter((DecimalType) type);\n            case ARRAY:\n                return createArrayConverter((ArrayType) type);\n            case ROW:\n                return createRowConverter((RowType) type, false);\n            case MAP:\n            case MULTISET:\n            case RAW:\n            default:\n                throw new UnsupportedOperationException(\"Unsupported type: \" + type);\n        }\n    }\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvToRowDataConverters.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"a5aaa0e605eb4966b5d73c987ea4d9d0bc852c6d","commitMessage":"@@@[FLINK-21947][csv] Support TIMESTAMP_LTZ type in CSV format\n\nThis closes #15356\n","date":"2021-03-27 11:07:48","modifiedFileCount":"34","status":"M","submitter":"Leonard Xu"}]
