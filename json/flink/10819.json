[{"authorTime":"2020-05-16 02:06:46","codes":[{"authorDate":"2020-05-16 02:06:40","commitOrder":2,"curCode":"\tpublic void validateWrongRetries() {\n\t\tElasticsearch7DynamicSinkFactory sinkFactory = new Elasticsearch7DynamicSinkFactory();\n\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expectMessage(\n\t\t\t\"'sink.bulk-flush.back-off.max-retries' must be at least 1. Got: 0\");\n\t\tsinkFactory.createDynamicTableSink(\n\t\t\tcontext()\n\t\t\t\t.withSchema(TableSchema.builder()\n\t\t\t\t\t.field(\"a\", DataTypes.TIME())\n\t\t\t\t\t.build())\n\t\t\t\t.withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n\t\t\t\t.withOption(ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n\t\t\t\t.withOption(ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(), \"0\")\n\t\t\t\t.build()\n\t\t);\n\t}\n","date":"2020-05-17 22:34:39","endLine":132,"groupId":"11590","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"validateWrongRetries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a8/30fa30d4eb2b9302a7e421f7237a25390dd277.src","preCode":"\tpublic void validateWrongRetries() {\n\t\tElasticsearch7DynamicSinkFactory sinkFactory = new Elasticsearch7DynamicSinkFactory();\n\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expectMessage(\n\t\t\t\"'sink.bulk-flush.back-off.max-retries' must be at least 1. Got: 0\");\n\t\tsinkFactory.createDynamicTableSink(\n\t\t\tcontext()\n\t\t\t\t.withSchema(TableSchema.builder()\n\t\t\t\t\t.field(\"a\", DataTypes.TIME())\n\t\t\t\t\t.build())\n\t\t\t\t.withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n\t\t\t\t.withOption(ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n\t\t\t\t.withOption(ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(), \"0\")\n\t\t\t\t.build()\n\t\t);\n\t}\n","realPath":"flink-connectors/flink-connector-elasticsearch7/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch7DynamicSinkFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"NB"},{"authorDate":"2020-05-16 02:06:46","commitOrder":2,"curCode":"\tpublic void validateWrongRetries() {\n\t\tElasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory();\n\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expectMessage(\n\t\t\t\"'sink.bulk-flush.back-off.max-retries' must be at least 1. Got: 0\");\n\t\tsinkFactory.createDynamicTableSink(\n\t\t\tcontext()\n\t\t\t\t.withSchema(TableSchema.builder()\n\t\t\t\t\t.field(\"a\", DataTypes.TIME())\n\t\t\t\t\t.build())\n\t\t\t\t.withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n\t\t\t\t.withOption(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(), \"MyType\")\n\t\t\t\t.withOption(ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n\t\t\t\t.withOption(ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(), \"0\")\n\t\t\t\t.build()\n\t\t);\n\t}\n","date":"2020-05-17 22:34:47","endLine":137,"groupId":"11590","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"validateWrongRetries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f1/be1b21a0928fa791e566a5cb22dcd5f36499d1.src","preCode":"\tpublic void validateWrongRetries() {\n\t\tElasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory();\n\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expectMessage(\n\t\t\t\"'sink.bulk-flush.back-off.max-retries' must be at least 1. Got: 0\");\n\t\tsinkFactory.createDynamicTableSink(\n\t\t\tcontext()\n\t\t\t\t.withSchema(TableSchema.builder()\n\t\t\t\t\t.field(\"a\", DataTypes.TIME())\n\t\t\t\t\t.build())\n\t\t\t\t.withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n\t\t\t\t.withOption(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(), \"MyType\")\n\t\t\t\t.withOption(ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n\t\t\t\t.withOption(ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(), \"0\")\n\t\t\t\t.build()\n\t\t);\n\t}\n","realPath":"flink-connectors/flink-connector-elasticsearch6/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch6DynamicSinkFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"B"}],"commitId":"ccd2d531d1cb577113d5021efd6277031eeef9d1","commitMessage":"@@@[FLINK-17027] Introduce a new Elasticsearch 6 connector with new property keys\n\nThis closes #12184\n","date":"2020-05-17 22:34:47","modifiedFileCount":"0","status":"M","submitter":"Dawid Wysakowicz"},{"authorTime":"2020-05-19 15:30:25","codes":[{"authorDate":"2020-05-19 15:30:25","commitOrder":3,"curCode":"\tpublic void validateWrongRetries() {\n\t\tElasticsearch7DynamicSinkFactory sinkFactory = new Elasticsearch7DynamicSinkFactory();\n\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expectMessage(\n\t\t\t\"'sink.bulk-flush.backoff.max-retries' must be at least 1. Got: 0\");\n\t\tsinkFactory.createDynamicTableSink(\n\t\t\tcontext()\n\t\t\t\t.withSchema(TableSchema.builder()\n\t\t\t\t\t.field(\"a\", DataTypes.TIME())\n\t\t\t\t\t.build())\n\t\t\t\t.withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n\t\t\t\t.withOption(ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n\t\t\t\t.withOption(ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(), \"0\")\n\t\t\t\t.build()\n\t\t);\n\t}\n","date":"2020-05-19 17:07:11","endLine":132,"groupId":"11590","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"validateWrongRetries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4f/e321421288620c92ac566dc3e9c68fed23b7c2.src","preCode":"\tpublic void validateWrongRetries() {\n\t\tElasticsearch7DynamicSinkFactory sinkFactory = new Elasticsearch7DynamicSinkFactory();\n\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expectMessage(\n\t\t\t\"'sink.bulk-flush.back-off.max-retries' must be at least 1. Got: 0\");\n\t\tsinkFactory.createDynamicTableSink(\n\t\t\tcontext()\n\t\t\t\t.withSchema(TableSchema.builder()\n\t\t\t\t\t.field(\"a\", DataTypes.TIME())\n\t\t\t\t\t.build())\n\t\t\t\t.withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n\t\t\t\t.withOption(ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n\t\t\t\t.withOption(ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(), \"0\")\n\t\t\t\t.build()\n\t\t);\n\t}\n","realPath":"flink-connectors/flink-connector-elasticsearch7/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch7DynamicSinkFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2020-05-19 15:30:25","commitOrder":3,"curCode":"\tpublic void validateWrongRetries() {\n\t\tElasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory();\n\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expectMessage(\n\t\t\t\"'sink.bulk-flush.backoff.max-retries' must be at least 1. Got: 0\");\n\t\tsinkFactory.createDynamicTableSink(\n\t\t\tcontext()\n\t\t\t\t.withSchema(TableSchema.builder()\n\t\t\t\t\t.field(\"a\", DataTypes.TIME())\n\t\t\t\t\t.build())\n\t\t\t\t.withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n\t\t\t\t.withOption(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(), \"MyType\")\n\t\t\t\t.withOption(ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n\t\t\t\t.withOption(ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(), \"0\")\n\t\t\t\t.build()\n\t\t);\n\t}\n","date":"2020-05-19 17:07:11","endLine":137,"groupId":"11590","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"validateWrongRetries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/6d/0878f2bf797ea81d93a16b4ae8b9f01f37e29d.src","preCode":"\tpublic void validateWrongRetries() {\n\t\tElasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory();\n\n\t\tthrown.expect(ValidationException.class);\n\t\tthrown.expectMessage(\n\t\t\t\"'sink.bulk-flush.back-off.max-retries' must be at least 1. Got: 0\");\n\t\tsinkFactory.createDynamicTableSink(\n\t\t\tcontext()\n\t\t\t\t.withSchema(TableSchema.builder()\n\t\t\t\t\t.field(\"a\", DataTypes.TIME())\n\t\t\t\t\t.build())\n\t\t\t\t.withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n\t\t\t\t.withOption(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(), \"MyType\")\n\t\t\t\t.withOption(ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n\t\t\t\t.withOption(ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(), \"0\")\n\t\t\t\t.build()\n\t\t);\n\t}\n","realPath":"flink-connectors/flink-connector-elasticsearch6/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch6DynamicSinkFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"a47c611591204d95ae89d1f6ec44cedf4791fd42","commitMessage":"@@@[FLINK-17027][hotfix] Rename back-off infix to backoff in new Elasticsearch properties\n","date":"2020-05-19 17:07:11","modifiedFileCount":"3","status":"M","submitter":"Dawid Wysakowicz"},{"authorTime":"2021-03-18 19:13:17","codes":[{"authorDate":"2021-03-18 19:13:17","commitOrder":4,"curCode":"    public void validateWrongRetries() {\n        Elasticsearch7DynamicSinkFactory sinkFactory = new Elasticsearch7DynamicSinkFactory();\n\n        thrown.expect(ValidationException.class);\n        thrown.expectMessage(\"'sink.bulk-flush.backoff.max-retries' must be at least 1. Got: 0\");\n        sinkFactory.createDynamicTableSink(\n                context()\n                        .withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n                        .withOption(\n                                ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n                        .withOption(\n                                ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(),\n                                \"0\")\n                        .build());\n    }\n","date":"2021-03-24 04:35:35","endLine":111,"groupId":"11590","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"validateWrongRetries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/74/80254cf259aff2ac17add9f72a89eaf42e267c.src","preCode":"    public void validateWrongRetries() {\n        Elasticsearch7DynamicSinkFactory sinkFactory = new Elasticsearch7DynamicSinkFactory();\n\n        thrown.expect(ValidationException.class);\n        thrown.expectMessage(\"'sink.bulk-flush.backoff.max-retries' must be at least 1. Got: 0\");\n        sinkFactory.createDynamicTableSink(\n                context()\n                        .withSchema(TableSchema.builder().field(\"a\", DataTypes.TIME()).build())\n                        .withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n                        .withOption(\n                                ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n                        .withOption(\n                                ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(),\n                                \"0\")\n                        .build());\n    }\n","realPath":"flink-connectors/flink-connector-elasticsearch7/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch7DynamicSinkFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2021-03-18 19:13:17","commitOrder":4,"curCode":"    public void validateWrongRetries() {\n        Elasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory();\n\n        thrown.expect(ValidationException.class);\n        thrown.expectMessage(\"'sink.bulk-flush.backoff.max-retries' must be at least 1. Got: 0\");\n        sinkFactory.createDynamicTableSink(\n                context()\n                        .withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n                        .withOption(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(), \"MyType\")\n                        .withOption(\n                                ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n                        .withOption(\n                                ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(),\n                                \"0\")\n                        .build());\n    }\n","date":"2021-03-24 04:35:35","endLine":119,"groupId":"11590","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"validateWrongRetries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d3/558108f986c140405af6a9c3c00834aa7a1163.src","preCode":"    public void validateWrongRetries() {\n        Elasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory();\n\n        thrown.expect(ValidationException.class);\n        thrown.expectMessage(\"'sink.bulk-flush.backoff.max-retries' must be at least 1. Got: 0\");\n        sinkFactory.createDynamicTableSink(\n                context()\n                        .withSchema(TableSchema.builder().field(\"a\", DataTypes.TIME()).build())\n                        .withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n                        .withOption(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(), \"MyType\")\n                        .withOption(\n                                ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n                        .withOption(\n                                ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(),\n                                \"0\")\n                        .build());\n    }\n","realPath":"flink-connectors/flink-connector-elasticsearch6/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch6DynamicSinkFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"73338e22bd0567169ce2636c8f9e3b87df783385","commitMessage":"@@@[FLINK-21913][table][connectors] Update DynamicTableFactory.Context to use ResolvedCatalogTable\n\nThis closes #15316.\n","date":"2021-03-24 04:35:35","modifiedFileCount":"45","status":"M","submitter":"Timo Walther"},{"authorTime":"2021-06-30 16:32:46","codes":[{"authorDate":"2021-06-30 16:32:46","commitOrder":5,"curCode":"    public void validateWrongRetries() {\n        Elasticsearch7DynamicSinkFactory sinkFactory = new Elasticsearch7DynamicSinkFactory();\n\n        thrown.expect(ValidationException.class);\n        thrown.expectMessage(\"'sink.bulk-flush.backoff.max-retries' must be at least 1. Got: 0\");\n        sinkFactory.createDynamicTableSink(\n                context()\n                        .withOption(ElasticsearchConnectorOptions.INDEX_OPTION.key(), \"MyIndex\")\n                        .withOption(\n                                ElasticsearchConnectorOptions.HOSTS_OPTION.key(),\n                                \"http://localhost:1234\")\n                        .withOption(\n                                ElasticsearchConnectorOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION\n                                        .key(),\n                                \"0\")\n                        .build());\n    }\n","date":"2021-07-12 18:56:17","endLine":116,"groupId":"10819","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"validateWrongRetries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ba/37dbc5bd7c3a30f3eae1d681cf2c97bb83c5fa.src","preCode":"    public void validateWrongRetries() {\n        Elasticsearch7DynamicSinkFactory sinkFactory = new Elasticsearch7DynamicSinkFactory();\n\n        thrown.expect(ValidationException.class);\n        thrown.expectMessage(\"'sink.bulk-flush.backoff.max-retries' must be at least 1. Got: 0\");\n        sinkFactory.createDynamicTableSink(\n                context()\n                        .withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n                        .withOption(\n                                ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n                        .withOption(\n                                ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(),\n                                \"0\")\n                        .build());\n    }\n","realPath":"flink-connectors/flink-connector-elasticsearch7/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch7DynamicSinkFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2021-06-30 16:32:46","commitOrder":5,"curCode":"    public void validateWrongRetries() {\n        Elasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory();\n\n        thrown.expect(ValidationException.class);\n        thrown.expectMessage(\"'sink.bulk-flush.backoff.max-retries' must be at least 1. Got: 0\");\n        sinkFactory.createDynamicTableSink(\n                context()\n                        .withOption(ElasticsearchConnectorOptions.INDEX_OPTION.key(), \"MyIndex\")\n                        .withOption(\n                                ElasticsearchConnectorOptions.DOCUMENT_TYPE_OPTION.key(), \"MyType\")\n                        .withOption(\n                                ElasticsearchConnectorOptions.HOSTS_OPTION.key(),\n                                \"http://localhost:1234\")\n                        .withOption(\n                                ElasticsearchConnectorOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION\n                                        .key(),\n                                \"0\")\n                        .build());\n    }\n","date":"2021-07-12 18:56:17","endLine":126,"groupId":"10819","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"validateWrongRetries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/25/bcbbfb05b80e6f0069e7f627dbaed4a6a1cec9.src","preCode":"    public void validateWrongRetries() {\n        Elasticsearch6DynamicSinkFactory sinkFactory = new Elasticsearch6DynamicSinkFactory();\n\n        thrown.expect(ValidationException.class);\n        thrown.expectMessage(\"'sink.bulk-flush.backoff.max-retries' must be at least 1. Got: 0\");\n        sinkFactory.createDynamicTableSink(\n                context()\n                        .withOption(ElasticsearchOptions.INDEX_OPTION.key(), \"MyIndex\")\n                        .withOption(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(), \"MyType\")\n                        .withOption(\n                                ElasticsearchOptions.HOSTS_OPTION.key(), \"http://localhost:1234\")\n                        .withOption(\n                                ElasticsearchOptions.BULK_FLUSH_BACKOFF_MAX_RETRIES_OPTION.key(),\n                                \"0\")\n                        .build());\n    }\n","realPath":"flink-connectors/flink-connector-elasticsearch6/src/test/java/org/apache/flink/streaming/connectors/elasticsearch/table/Elasticsearch6DynamicSinkFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"2dbb3de221339edf120dac3fbbd6e13c3e54af11","commitMessage":"@@@[FLINK-23064][connector-elasticsearch] Make connector options PublicEvolving\n","date":"2021-07-12 18:56:17","modifiedFileCount":"11","status":"M","submitter":"Ingo B?rk"}]
