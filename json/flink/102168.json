[{"authorTime":"2020-05-15 23:07:03","codes":[{"authorDate":"2020-05-15 23:07:58","commitOrder":2,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tCanalJsonDeserializationSchema that = (CanalJsonDeserializationSchema) o;\n\t\treturn ignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tfieldCount == that.fieldCount &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","date":"2020-05-15 23:07:58","endLine":173,"groupId":"35190","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4c/03d041e2a9d8220c6d34b1f2ce9159dd511bbb.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tCanalJsonDeserializationSchema that = (CanalJsonDeserializationSchema) o;\n\t\treturn ignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tfieldCount == that.fieldCount &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"B"},{"authorDate":"2020-05-15 23:07:03","commitOrder":2,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumJsonDeserializationSchema that = (DebeziumJsonDeserializationSchema) o;\n\t\treturn schemaInclude == that.schemaInclude &&\n\t\t\tignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","date":"2020-05-15 23:07:03","endLine":162,"groupId":"5267","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f0/ae9d99d3bea95da1c4a6b27f693227e64beb85.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumJsonDeserializationSchema that = (DebeziumJsonDeserializationSchema) o;\n\t\treturn schemaInclude == that.schemaInclude &&\n\t\t\tignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/debezium/DebeziumJsonDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"NB"}],"commitId":"d2b8ebb9e4e0b8762800eb4404a4c9bdbfd83789","commitMessage":"@@@[FLINK-17150][json][canal] Introduce Canal format to support reading canal changelogs\n\nThis closes #12152\n","date":"2020-05-15 23:07:58","modifiedFileCount":"0","status":"M","submitter":"Jark Wu"},{"authorTime":"2020-11-03 22:55:58","codes":[{"authorDate":"2020-05-15 23:07:58","commitOrder":3,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tCanalJsonDeserializationSchema that = (CanalJsonDeserializationSchema) o;\n\t\treturn ignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tfieldCount == that.fieldCount &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","date":"2020-05-15 23:07:58","endLine":173,"groupId":"35190","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4c/03d041e2a9d8220c6d34b1f2ce9159dd511bbb.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tCanalJsonDeserializationSchema that = (CanalJsonDeserializationSchema) o;\n\t\treturn ignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tfieldCount == that.fieldCount &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"N"},{"authorDate":"2020-11-03 22:55:58","commitOrder":3,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumJsonDeserializationSchema that = (DebeziumJsonDeserializationSchema) o;\n\t\treturn Objects.equals(jsonDeserializer, that.jsonDeserializer)\n\t\t\t\t&& hasMetadata == that.hasMetadata\n\t\t\t\t&& Objects.equals(producedTypeInfo, that.producedTypeInfo)\n\t\t\t\t&& schemaInclude == that.schemaInclude\n\t\t\t\t&& ignoreParseErrors == that.ignoreParseErrors;\n\t}\n","date":"2020-11-07 17:22:09","endLine":219,"groupId":"38966","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/43/bd94efa4a083b2c224d414fd0b0bf1fe8db856.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumJsonDeserializationSchema that = (DebeziumJsonDeserializationSchema) o;\n\t\treturn schemaInclude == that.schemaInclude &&\n\t\t\tignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/debezium/DebeziumJsonDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"}],"commitId":"64b96651579d76c718d67ebf2caca526d402a70e","commitMessage":"@@@[FLINK-19276][json][connector-kafka] Support reading Debezium metadata\n\nThis exposes metadata for the Debezium JSON format according to FLIP-107.\n\n- Update the Kafka connector to expose format specific metadata.\n- Reconfigure the internal JsonRowDataDeserializationSchema to read additional fields.\n- Let DebeziumJsonDeserializationSchema access and convert those additional fields to metadata columns.\n\nThis closes #13910.\n","date":"2020-11-07 17:22:09","modifiedFileCount":"13","status":"M","submitter":"Timo Walther"},{"authorTime":"2020-11-03 22:55:58","codes":[{"authorDate":"2020-12-31 10:34:00","commitOrder":4,"curCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        CanalJsonDeserializationSchema that = (CanalJsonDeserializationSchema) o;\n        return Objects.equals(jsonDeserializer, that.jsonDeserializer)\n                && hasMetadata == that.hasMetadata\n                && Objects.equals(producedTypeInfo, that.producedTypeInfo)\n                && Objects.equals(database, that.database)\n                && Objects.equals(table, that.table)\n                && ignoreParseErrors == that.ignoreParseErrors\n                && fieldCount == that.fieldCount;\n    }\n","date":"2020-12-31 10:34:00","endLine":313,"groupId":"102168","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/00/bb7483b435b978b51cda05a1bb141f68f2e0f9.src","preCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        CanalJsonDeserializationSchema that = (CanalJsonDeserializationSchema) o;\n        return ignoreParseErrors == that.ignoreParseErrors\n                && fieldCount == that.fieldCount\n                && Objects.equals(jsonDeserializer, that.jsonDeserializer)\n                && Objects.equals(resultTypeInfo, that.resultTypeInfo);\n    }\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"M"},{"authorDate":"2020-11-03 22:55:58","commitOrder":4,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumJsonDeserializationSchema that = (DebeziumJsonDeserializationSchema) o;\n\t\treturn Objects.equals(jsonDeserializer, that.jsonDeserializer)\n\t\t\t\t&& hasMetadata == that.hasMetadata\n\t\t\t\t&& Objects.equals(producedTypeInfo, that.producedTypeInfo)\n\t\t\t\t&& schemaInclude == that.schemaInclude\n\t\t\t\t&& ignoreParseErrors == that.ignoreParseErrors;\n\t}\n","date":"2020-11-07 17:22:09","endLine":219,"groupId":"102168","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/43/bd94efa4a083b2c224d414fd0b0bf1fe8db856.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumJsonDeserializationSchema that = (DebeziumJsonDeserializationSchema) o;\n\t\treturn Objects.equals(jsonDeserializer, that.jsonDeserializer)\n\t\t\t\t&& hasMetadata == that.hasMetadata\n\t\t\t\t&& Objects.equals(producedTypeInfo, that.producedTypeInfo)\n\t\t\t\t&& schemaInclude == that.schemaInclude\n\t\t\t\t&& ignoreParseErrors == that.ignoreParseErrors;\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/debezium/DebeziumJsonDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"N"}],"commitId":"814fe0eb06f1941247742de27e8150b7c9274b43","commitMessage":"@@@[FLINK-20385][canal-json] Allow to read metadata for canal-json format\n\n\nThis closes #14464","date":"2020-12-31 10:34:00","modifiedFileCount":"5","status":"M","submitter":"SteNicholas"}]
