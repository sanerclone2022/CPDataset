[{"authorTime":"2020-10-10 00:40:21","codes":[{"authorDate":"2020-10-10 00:40:21","commitOrder":1,"curCode":"\tpublic void testDiscoverPartitionsTriggersAssignments() throws Throwable {\n\t\tMockSplitEnumeratorContext<KafkaPartitionSplit> context = new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n\t\ttry (KafkaSourceEnumerator enumerator = createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n\t\t\t\r\n\t\t\tenumerator.start();\n\n\t\t\t\r\n\t\t\tregisterReader(context, enumerator, READER0);\n\t\t\tregisterReader(context, enumerator, READER1);\n\t\t\tassertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n\t\t\t\r\n\t\t\tcontext.runNextOneTimeCallable();\n\n\t\t\t\r\n\t\t\tverifyLastReadersAssignments(context, Arrays.asList(READER0, READER1), PRE_EXISTING_TOPICS, 1);\n\t\t}\n\t}\n","date":"2020-11-08 23:07:24","endLine":134,"groupId":"34294","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDiscoverPartitionsTriggersAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/14/8e9d1ae510196c5a91c3ca43eeeb20e2675d0a.src","preCode":"\tpublic void testDiscoverPartitionsTriggersAssignments() throws Throwable {\n\t\tMockSplitEnumeratorContext<KafkaPartitionSplit> context = new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n\t\ttry (KafkaSourceEnumerator enumerator = createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n\t\t\t\r\n\t\t\tenumerator.start();\n\n\t\t\t\r\n\t\t\tregisterReader(context, enumerator, READER0);\n\t\t\tregisterReader(context, enumerator, READER1);\n\t\t\tassertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n\t\t\t\r\n\t\t\tcontext.runNextOneTimeCallable();\n\n\t\t\t\r\n\t\t\tverifyLastReadersAssignments(context, Arrays.asList(READER0, READER1), PRE_EXISTING_TOPICS, 1);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/source/enumerator/KafkaEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"},{"authorDate":"2020-10-10 00:40:21","commitOrder":1,"curCode":"\tpublic void testReaderRegistrationTriggersAssignments() throws Throwable {\n\t\tMockSplitEnumeratorContext<KafkaPartitionSplit> context = new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n\t\ttry (KafkaSourceEnumerator enumerator = createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n\t\t\t\r\n\t\t\tenumerator.start();\n\t\t\tcontext.runNextOneTimeCallable();\n\t\t\tassertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n\t\t\tregisterReader(context, enumerator, READER0);\n\t\t\tverifyLastReadersAssignments(context, Collections.singleton(READER0), PRE_EXISTING_TOPICS, 1);\n\n\t\t\tregisterReader(context, enumerator, READER1);\n\t\t\tverifyLastReadersAssignments(context, Collections.singleton(READER1), PRE_EXISTING_TOPICS, 2);\n\t\t}\n\t}\n","date":"2020-11-08 23:07:24","endLine":152,"groupId":"34293","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReaderRegistrationTriggersAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/14/8e9d1ae510196c5a91c3ca43eeeb20e2675d0a.src","preCode":"\tpublic void testReaderRegistrationTriggersAssignments() throws Throwable {\n\t\tMockSplitEnumeratorContext<KafkaPartitionSplit> context = new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n\t\ttry (KafkaSourceEnumerator enumerator = createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n\t\t\t\r\n\t\t\tenumerator.start();\n\t\t\tcontext.runNextOneTimeCallable();\n\t\t\tassertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n\t\t\tregisterReader(context, enumerator, READER0);\n\t\t\tverifyLastReadersAssignments(context, Collections.singleton(READER0), PRE_EXISTING_TOPICS, 1);\n\n\t\t\tregisterReader(context, enumerator, READER1);\n\t\t\tverifyLastReadersAssignments(context, Collections.singleton(READER1), PRE_EXISTING_TOPICS, 2);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/source/enumerator/KafkaEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"B"}],"commitId":"80c040fcf3118a52053ffcd00ca4e063e6f52c97","commitMessage":"@@@[FLINK-18323][connector/kafka] Add Kafka Source based on FLIP-27.\n","date":"2020-11-08 23:07:24","modifiedFileCount":"0","status":"B","submitter":"Jiangjie (Becket) Qin"},{"authorTime":"2021-04-08 15:15:27","codes":[{"authorDate":"2021-04-08 15:15:27","commitOrder":2,"curCode":"    public void testDiscoverPartitionsTriggersAssignments() throws Throwable {\n        MockSplitEnumeratorContext<KafkaPartitionSplit> context =\n                new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n        try (KafkaSourceEnumerator enumerator =\n                createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n            \r\n            \r\n            enumerator.start();\n\n            \r\n            registerReader(context, enumerator, READER0);\n            registerReader(context, enumerator, READER1);\n            assertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n            \r\n            runOneTimePartitionDiscovery(context);\n\n            \r\n            verifyLastReadersAssignments(\n                    context, Arrays.asList(READER0, READER1), PRE_EXISTING_TOPICS, 1);\n        }\n    }\n","date":"2021-06-25 13:13:10","endLine":148,"groupId":"34294","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDiscoverPartitionsTriggersAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e6/8fb5dda41d14e441eef63adb5fd2acb6ae4307.src","preCode":"    public void testDiscoverPartitionsTriggersAssignments() throws Throwable {\n        MockSplitEnumeratorContext<KafkaPartitionSplit> context =\n                new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n        try (KafkaSourceEnumerator enumerator =\n                createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n            \r\n            \r\n            enumerator.start();\n\n            \r\n            registerReader(context, enumerator, READER0);\n            registerReader(context, enumerator, READER1);\n            assertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n            \r\n            context.runNextOneTimeCallable();\n\n            \r\n            verifyLastReadersAssignments(\n                    context, Arrays.asList(READER0, READER1), PRE_EXISTING_TOPICS, 1);\n        }\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/source/enumerator/KafkaEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2021-04-08 15:15:27","commitOrder":2,"curCode":"    public void testReaderRegistrationTriggersAssignments() throws Throwable {\n        MockSplitEnumeratorContext<KafkaPartitionSplit> context =\n                new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n        try (KafkaSourceEnumerator enumerator =\n                createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n            \r\n            \r\n            enumerator.start();\n            runOneTimePartitionDiscovery(context);\n            assertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n            registerReader(context, enumerator, READER0);\n            verifyLastReadersAssignments(\n                    context, Collections.singleton(READER0), PRE_EXISTING_TOPICS, 1);\n\n            registerReader(context, enumerator, READER1);\n            verifyLastReadersAssignments(\n                    context, Collections.singleton(READER1), PRE_EXISTING_TOPICS, 2);\n        }\n    }\n","date":"2021-06-25 13:13:10","endLine":171,"groupId":"36001","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testReaderRegistrationTriggersAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e6/8fb5dda41d14e441eef63adb5fd2acb6ae4307.src","preCode":"    public void testReaderRegistrationTriggersAssignments() throws Throwable {\n        MockSplitEnumeratorContext<KafkaPartitionSplit> context =\n                new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n        try (KafkaSourceEnumerator enumerator =\n                createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n            \r\n            \r\n            enumerator.start();\n            context.runNextOneTimeCallable();\n            assertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n            registerReader(context, enumerator, READER0);\n            verifyLastReadersAssignments(\n                    context, Collections.singleton(READER0), PRE_EXISTING_TOPICS, 1);\n\n            registerReader(context, enumerator, READER1);\n            verifyLastReadersAssignments(\n                    context, Collections.singleton(READER1), PRE_EXISTING_TOPICS, 2);\n        }\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/source/enumerator/KafkaEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"}],"commitId":"07f27050b18612fe31f7f2ad42516aa75e825701","commitMessage":"@@@[FLINK-22147][connector/kafka] Refactor partition discovery logic in Kafka source enumerator\n","date":"2021-06-25 13:13:10","modifiedFileCount":"8","status":"M","submitter":"Qingsheng Ren"},{"authorTime":"2021-06-23 09:45:21","codes":[{"authorDate":"2021-06-23 09:45:21","commitOrder":3,"curCode":"    public void testDiscoverPartitionsTriggersAssignments() throws Throwable {\n        try (MockSplitEnumeratorContext<KafkaPartitionSplit> context =\n                        new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n                KafkaSourceEnumerator enumerator =\n                        createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n            \r\n            \r\n            enumerator.start();\n\n            \r\n            registerReader(context, enumerator, READER0);\n            registerReader(context, enumerator, READER1);\n            assertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n            \r\n            runOneTimePartitionDiscovery(context);\n\n            \r\n            verifyLastReadersAssignments(\n                    context, Arrays.asList(READER0, READER1), PRE_EXISTING_TOPICS, 1);\n        }\n    }\n","date":"2021-06-25 13:13:10","endLine":148,"groupId":"10312","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDiscoverPartitionsTriggersAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/54/e5e476804ccf322bf212c68cfc707adafba057.src","preCode":"    public void testDiscoverPartitionsTriggersAssignments() throws Throwable {\n        MockSplitEnumeratorContext<KafkaPartitionSplit> context =\n                new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n        try (KafkaSourceEnumerator enumerator =\n                createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n            \r\n            \r\n            enumerator.start();\n\n            \r\n            registerReader(context, enumerator, READER0);\n            registerReader(context, enumerator, READER1);\n            assertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n            \r\n            runOneTimePartitionDiscovery(context);\n\n            \r\n            verifyLastReadersAssignments(\n                    context, Arrays.asList(READER0, READER1), PRE_EXISTING_TOPICS, 1);\n        }\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/source/enumerator/KafkaEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2021-06-23 09:45:21","commitOrder":3,"curCode":"    public void testReaderRegistrationTriggersAssignments() throws Throwable {\n        try (MockSplitEnumeratorContext<KafkaPartitionSplit> context =\n                        new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n                KafkaSourceEnumerator enumerator =\n                        createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n            \r\n            \r\n            enumerator.start();\n            runOneTimePartitionDiscovery(context);\n            assertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n            registerReader(context, enumerator, READER0);\n            verifyLastReadersAssignments(\n                    context, Collections.singleton(READER0), PRE_EXISTING_TOPICS, 1);\n\n            registerReader(context, enumerator, READER1);\n            verifyLastReadersAssignments(\n                    context, Collections.singleton(READER1), PRE_EXISTING_TOPICS, 2);\n        }\n    }\n","date":"2021-06-25 13:13:10","endLine":171,"groupId":"10312","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testReaderRegistrationTriggersAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/54/e5e476804ccf322bf212c68cfc707adafba057.src","preCode":"    public void testReaderRegistrationTriggersAssignments() throws Throwable {\n        MockSplitEnumeratorContext<KafkaPartitionSplit> context =\n                new MockSplitEnumeratorContext<>(NUM_SUBTASKS);\n        try (KafkaSourceEnumerator enumerator =\n                createEnumerator(context, DISABLE_PERIODIC_PARTITION_DISCOVERY)) {\n\n            \r\n            \r\n            enumerator.start();\n            runOneTimePartitionDiscovery(context);\n            assertTrue(context.getSplitsAssignmentSequence().isEmpty());\n\n            registerReader(context, enumerator, READER0);\n            verifyLastReadersAssignments(\n                    context, Collections.singleton(READER0), PRE_EXISTING_TOPICS, 1);\n\n            registerReader(context, enumerator, READER1);\n            verifyLastReadersAssignments(\n                    context, Collections.singleton(READER1), PRE_EXISTING_TOPICS, 2);\n        }\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/source/enumerator/KafkaEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"}],"commitId":"1418a1ddd025adb3b502b8d7a89d0f338aa40c29","commitMessage":"@@@[hotfix][connector/test] Make MockSplitEnumeratorContext implement AutoClosable and shutdown executors at closing\n","date":"2021-06-25 13:13:10","modifiedFileCount":"3","status":"M","submitter":"Qingsheng Ren"}]
