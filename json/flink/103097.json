[{"authorTime":"2015-10-20 23:04:21","codes":[{"authorDate":"2015-10-20 23:04:21","commitOrder":1,"curCode":"\tpublic void testPrintSinkStdOut(){\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tPrintStream stream = new PrintStream(baos);\n\t\tSystem.setOut(stream);\n\n\t\tfinal StreamingRuntimeContext ctx = Mockito.mock(StreamingRuntimeContext.class);\n\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(ctx);\n\t\ttry {\n\t\t\tprintSink.open(new Configuration());\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail();\n\t\t}\n\t\tprintSink.setTargetToStandardOut();\n\t\tprintSink.invoke(\"hello world!\");\n\n\t\tassertEquals(\"Print to System.out\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, baos.toString());\n\n\t\tprintSink.close();\n\t\tstream.close();\n\t}\n","date":"2015-10-21 17:01:43","endLine":65,"groupId":"49609","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPrintSinkStdOut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f7/c6e53b47f60c9865a1559732dfde8f22dad571.src","preCode":"\tpublic void testPrintSinkStdOut(){\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tPrintStream stream = new PrintStream(baos);\n\t\tSystem.setOut(stream);\n\n\t\tfinal StreamingRuntimeContext ctx = Mockito.mock(StreamingRuntimeContext.class);\n\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(ctx);\n\t\ttry {\n\t\t\tprintSink.open(new Configuration());\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail();\n\t\t}\n\t\tprintSink.setTargetToStandardOut();\n\t\tprintSink.invoke(\"hello world!\");\n\n\t\tassertEquals(\"Print to System.out\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, baos.toString());\n\n\t\tprintSink.close();\n\t\tstream.close();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/PrintSinkFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"},{"authorDate":"2015-10-20 23:04:21","commitOrder":1,"curCode":"\tpublic void testPrintSinkStdErr(){\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tPrintStream stream = new PrintStream(baos);\n\t\tSystem.setOut(stream);\n\n\t\tfinal StreamingRuntimeContext ctx = Mockito.mock(StreamingRuntimeContext.class);\n\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(ctx);\n\t\ttry {\n\t\t\tprintSink.open(new Configuration());\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail();\n\t\t}\n\t\tprintSink.setTargetToStandardErr();\n\t\tprintSink.invoke(\"hello world!\");\n\n\t\tassertEquals(\"Print to System.err\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, baos.toString());\n\n\t\tprintSink.close();\n\t\tstream.close();\n\t}\n","date":"2015-10-21 17:01:43","endLine":90,"groupId":"49609","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPrintSinkStdErr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f7/c6e53b47f60c9865a1559732dfde8f22dad571.src","preCode":"\tpublic void testPrintSinkStdErr(){\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tPrintStream stream = new PrintStream(baos);\n\t\tSystem.setOut(stream);\n\n\t\tfinal StreamingRuntimeContext ctx = Mockito.mock(StreamingRuntimeContext.class);\n\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(ctx);\n\t\ttry {\n\t\t\tprintSink.open(new Configuration());\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail();\n\t\t}\n\t\tprintSink.setTargetToStandardErr();\n\t\tprintSink.invoke(\"hello world!\");\n\n\t\tassertEquals(\"Print to System.err\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, baos.toString());\n\n\t\tprintSink.close();\n\t\tstream.close();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/PrintSinkFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"06f6ac5d3edbc8dd20baf6e1b30900c189a68876","commitMessage":"@@@[FLINK-2877] Move Streaming API out of Staging package\n","date":"2015-10-21 17:01:43","modifiedFileCount":"0","status":"B","submitter":"Rufus Refactor"},{"authorTime":"2017-08-29 21:50:56","codes":[{"authorDate":"2017-08-29 21:50:56","commitOrder":2,"curCode":"\tpublic void testPrintSinkStdOut() throws Exception {\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tPrintStream stream = new PrintStream(baos);\n\t\tSystem.setOut(stream);\n\n\t\tfinal StreamingRuntimeContext ctx = Mockito.mock(StreamingRuntimeContext.class);\n\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(ctx);\n\t\ttry {\n\t\t\tprintSink.open(new Configuration());\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail();\n\t\t}\n\t\tprintSink.setTargetToStandardOut();\n\t\tprintSink.invoke(\"hello world!\", SinkContextUtil.forTimestamp(0));\n\n\t\tassertEquals(\"Print to System.out\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, baos.toString());\n\n\t\tprintSink.close();\n\t\tstream.close();\n\t}\n","date":"2017-09-21 19:46:17","endLine":66,"groupId":"49609","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPrintSinkStdOut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8c/303d1628281bc7b85f25cf5bd617c5895d3a01.src","preCode":"\tpublic void testPrintSinkStdOut(){\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tPrintStream stream = new PrintStream(baos);\n\t\tSystem.setOut(stream);\n\n\t\tfinal StreamingRuntimeContext ctx = Mockito.mock(StreamingRuntimeContext.class);\n\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(ctx);\n\t\ttry {\n\t\t\tprintSink.open(new Configuration());\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail();\n\t\t}\n\t\tprintSink.setTargetToStandardOut();\n\t\tprintSink.invoke(\"hello world!\");\n\n\t\tassertEquals(\"Print to System.out\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, baos.toString());\n\n\t\tprintSink.close();\n\t\tstream.close();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/PrintSinkFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2017-08-29 21:50:56","commitOrder":2,"curCode":"\tpublic void testPrintSinkStdErr() throws Exception {\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tPrintStream stream = new PrintStream(baos);\n\t\tSystem.setOut(stream);\n\n\t\tfinal StreamingRuntimeContext ctx = Mockito.mock(StreamingRuntimeContext.class);\n\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(ctx);\n\t\ttry {\n\t\t\tprintSink.open(new Configuration());\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail();\n\t\t}\n\t\tprintSink.setTargetToStandardErr();\n\t\tprintSink.invoke(\"hello world!\", SinkContextUtil.forTimestamp(0));\n\n\t\tassertEquals(\"Print to System.err\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, baos.toString());\n\n\t\tprintSink.close();\n\t\tstream.close();\n\t}\n","date":"2017-09-21 19:46:17","endLine":91,"groupId":"49609","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPrintSinkStdErr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8c/303d1628281bc7b85f25cf5bd617c5895d3a01.src","preCode":"\tpublic void testPrintSinkStdErr(){\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tPrintStream stream = new PrintStream(baos);\n\t\tSystem.setOut(stream);\n\n\t\tfinal StreamingRuntimeContext ctx = Mockito.mock(StreamingRuntimeContext.class);\n\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(ctx);\n\t\ttry {\n\t\t\tprintSink.open(new Configuration());\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail();\n\t\t}\n\t\tprintSink.setTargetToStandardErr();\n\t\tprintSink.invoke(\"hello world!\");\n\n\t\tassertEquals(\"Print to System.err\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, baos.toString());\n\n\t\tprintSink.close();\n\t\tstream.close();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/PrintSinkFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"e7996b0d0ff5fe705a3830f3855f977cad4f0c44","commitMessage":"@@@[FLINK-7552] Extend SinkFunction interface with SinkContext\n","date":"2017-09-21 19:46:17","modifiedFileCount":"8","status":"M","submitter":"Aljoscha Krettek"},{"authorTime":"2018-08-10 20:57:04","codes":[{"authorDate":"2018-08-10 20:57:04","commitOrder":3,"curCode":"\tpublic void testPrintSinkStdOut() throws Exception {\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(new MockStreamingRuntimeContext(false, 1, 0));\n\t\tprintSink.setTargetToStandardOut();\n\t\tprintSink.open(new Configuration());\n\n\t\tprintSink.invoke(\"hello world!\", SinkContextUtil.forTimestamp(0));\n\n\t\tassertEquals(\"Print to System.out\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, arrayOutputStream.toString());\n\t\tprintSink.close();\n\t}\n","date":"2018-08-14 19:06:54","endLine":77,"groupId":"24245","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPrintSinkStdOut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4a/163387b9ef6bcfe70cd28145b8188117ba8c9f.src","preCode":"\tpublic void testPrintSinkStdOut() throws Exception {\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tPrintStream stream = new PrintStream(baos);\n\t\tSystem.setOut(stream);\n\n\t\tfinal StreamingRuntimeContext ctx = Mockito.mock(StreamingRuntimeContext.class);\n\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(ctx);\n\t\ttry {\n\t\t\tprintSink.open(new Configuration());\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail();\n\t\t}\n\t\tprintSink.setTargetToStandardOut();\n\t\tprintSink.invoke(\"hello world!\", SinkContextUtil.forTimestamp(0));\n\n\t\tassertEquals(\"Print to System.out\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, baos.toString());\n\n\t\tprintSink.close();\n\t\tstream.close();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/PrintSinkFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2018-08-10 20:57:04","commitOrder":3,"curCode":"\tpublic void testPrintSinkStdErr() throws Exception {\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(new MockStreamingRuntimeContext(false, 1, 0));\n\t\tprintSink.setTargetToStandardErr();\n\t\tprintSink.open(new Configuration());\n\n\t\tprintSink.invoke(\"hello world!\", SinkContextUtil.forTimestamp(0));\n\n\t\tassertEquals(\"Print to System.err\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, arrayErrorStream.toString());\n\t\tprintSink.close();\n\t}\n","date":"2018-08-14 19:06:54","endLine":91,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testPrintSinkStdErr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4a/163387b9ef6bcfe70cd28145b8188117ba8c9f.src","preCode":"\tpublic void testPrintSinkStdErr() throws Exception {\n\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\tPrintStream stream = new PrintStream(baos);\n\t\tSystem.setOut(stream);\n\n\t\tfinal StreamingRuntimeContext ctx = Mockito.mock(StreamingRuntimeContext.class);\n\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(ctx);\n\t\ttry {\n\t\t\tprintSink.open(new Configuration());\n\t\t} catch (Exception e) {\n\t\t\tAssert.fail();\n\t\t}\n\t\tprintSink.setTargetToStandardErr();\n\t\tprintSink.invoke(\"hello world!\", SinkContextUtil.forTimestamp(0));\n\n\t\tassertEquals(\"Print to System.err\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, baos.toString());\n\n\t\tprintSink.close();\n\t\tstream.close();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/PrintSinkFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"80b2a6a9713b6ddb3bedcf3f762ab8912d950d7e","commitMessage":"@@@[hotfix][streaming] Fix and simplify PrintSinkFunctionTest\n\nPreviously PrintSinkFunctionTest was testing incorrectly for System.err. setTargetToStandardErr was being\ncalled after opening PrintSink so it didn't have any effect.\n\nThis commit also reduce code duplication and get rids of mockito usage in this test.\n","date":"2018-08-14 19:06:54","modifiedFileCount":"2","status":"M","submitter":"Piotr Nowojski"},{"authorTime":"2018-08-17 15:52:23","codes":[{"authorDate":"2018-08-17 15:52:23","commitOrder":4,"curCode":"\tpublic void testPrintSinkStdOut() throws Exception {\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(new MockStreamingRuntimeContext(false, 1, 0));\n\n\t\tprintSink.open(new Configuration());\n\n\t\tprintSink.invoke(\"hello world!\", SinkContextUtil.forTimestamp(0));\n\n\t\tassertEquals(\"Print to System.out\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, arrayOutputStream.toString());\n\t\tprintSink.close();\n\t}\n","date":"2018-08-17 15:52:23","endLine":77,"groupId":"103097","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testPrintSinkStdOut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/be/f044022dce9658db8b1493b11851e42a892300.src","preCode":"\tpublic void testPrintSinkStdOut() throws Exception {\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(new MockStreamingRuntimeContext(false, 1, 0));\n\t\tprintSink.setTargetToStandardOut();\n\t\tprintSink.open(new Configuration());\n\n\t\tprintSink.invoke(\"hello world!\", SinkContextUtil.forTimestamp(0));\n\n\t\tassertEquals(\"Print to System.out\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, arrayOutputStream.toString());\n\t\tprintSink.close();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/PrintSinkFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2018-08-17 15:52:23","commitOrder":4,"curCode":"\tpublic void testPrintSinkStdErr() throws Exception {\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>(true);\n\t\tprintSink.setRuntimeContext(new MockStreamingRuntimeContext(false, 1, 0));\n\t\tprintSink.open(new Configuration());\n\n\t\tprintSink.invoke(\"hello world!\", SinkContextUtil.forTimestamp(0));\n\n\t\tassertEquals(\"Print to System.err\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, arrayErrorStream.toString());\n\t\tprintSink.close();\n\t}\n","date":"2018-08-17 15:52:23","endLine":90,"groupId":"103097","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testPrintSinkStdErr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/be/f044022dce9658db8b1493b11851e42a892300.src","preCode":"\tpublic void testPrintSinkStdErr() throws Exception {\n\t\tPrintSinkFunction<String> printSink = new PrintSinkFunction<>();\n\t\tprintSink.setRuntimeContext(new MockStreamingRuntimeContext(false, 1, 0));\n\t\tprintSink.setTargetToStandardErr();\n\t\tprintSink.open(new Configuration());\n\n\t\tprintSink.invoke(\"hello world!\", SinkContextUtil.forTimestamp(0));\n\n\t\tassertEquals(\"Print to System.err\", printSink.toString());\n\t\tassertEquals(\"hello world!\" + line, arrayErrorStream.toString());\n\t\tprintSink.close();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/PrintSinkFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"effa09cb80adc76842952ea78acc746fd1f826e7","commitMessage":"@@@[FLINK-9850][streaming] Add a string to the print method to identify output for DataStream (#6367)\n\n","date":"2018-08-17 15:52:23","modifiedFileCount":"5","status":"M","submitter":"vinoyang"}]
