[{"authorTime":"2020-11-23 04:41:41","codes":[{"authorDate":"2020-11-23 04:41:41","commitOrder":1,"curCode":"\tpublic void testDiscoverSplitWhenNoReaderRegistered() throws Exception {\n\t\tfinal TestingFileEnumerator fileEnumerator = new TestingFileEnumerator();\n\t\tfinal TestingSplitEnumeratorContext<FileSourceSplit> context = new TestingSplitEnumeratorContext<>(4);\n\t\tfinal ContinuousFileSplitEnumerator enumerator = createEnumerator(fileEnumerator, context);\n\n\t\t\r\n\t\tfinal FileSourceSplit split = createRandomSplit();\n\t\tfileEnumerator.addSplits(split);\n\t\tcontext.triggerAllActions();\n\n\t\tassertThat(enumerator.snapshotState().getSplits(), contains(split));\n\t}\n","date":"2020-11-23 05:10:07","endLine":62,"groupId":"50721","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDiscoverSplitWhenNoReaderRegistered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1a/4f8d6c7e4bf9aca33e27c6201719752d22bfc9.src","preCode":"\tpublic void testDiscoverSplitWhenNoReaderRegistered() throws Exception {\n\t\tfinal TestingFileEnumerator fileEnumerator = new TestingFileEnumerator();\n\t\tfinal TestingSplitEnumeratorContext<FileSourceSplit> context = new TestingSplitEnumeratorContext<>(4);\n\t\tfinal ContinuousFileSplitEnumerator enumerator = createEnumerator(fileEnumerator, context);\n\n\t\t\r\n\t\tfinal FileSourceSplit split = createRandomSplit();\n\t\tfileEnumerator.addSplits(split);\n\t\tcontext.triggerAllActions();\n\n\t\tassertThat(enumerator.snapshotState().getSplits(), contains(split));\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/ContinuousFileSplitEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"},{"authorDate":"2020-11-23 04:41:41","commitOrder":1,"curCode":"\tpublic void testDiscoverWhenReaderRegistered() throws Exception {\n\t\tfinal TestingFileEnumerator fileEnumerator = new TestingFileEnumerator();\n\t\tfinal TestingSplitEnumeratorContext<FileSourceSplit> context = new TestingSplitEnumeratorContext<>(4);\n\t\tfinal ContinuousFileSplitEnumerator enumerator = createEnumerator(fileEnumerator, context);\n\n\t\t\r\n\t\tcontext.registerReader(2, \"localhost\");\n\t\tenumerator.addReader(2);\n\t\tenumerator.handleSplitRequest(2, \"localhost\");\n\n\t\t\r\n\t\tfinal FileSourceSplit split = createRandomSplit();\n\t\tfileEnumerator.addSplits(split);\n\t\tcontext.triggerAllActions();\n\n\t\tassertThat(enumerator.snapshotState().getSplits(), empty());\n\t\tassertThat(context.getSplitAssignments().get(2).getAssignedSplits(), contains(split));\n\t}\n","date":"2020-11-23 05:10:07","endLine":82,"groupId":"50720","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDiscoverWhenReaderRegistered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1a/4f8d6c7e4bf9aca33e27c6201719752d22bfc9.src","preCode":"\tpublic void testDiscoverWhenReaderRegistered() throws Exception {\n\t\tfinal TestingFileEnumerator fileEnumerator = new TestingFileEnumerator();\n\t\tfinal TestingSplitEnumeratorContext<FileSourceSplit> context = new TestingSplitEnumeratorContext<>(4);\n\t\tfinal ContinuousFileSplitEnumerator enumerator = createEnumerator(fileEnumerator, context);\n\n\t\t\r\n\t\tcontext.registerReader(2, \"localhost\");\n\t\tenumerator.addReader(2);\n\t\tenumerator.handleSplitRequest(2, \"localhost\");\n\n\t\t\r\n\t\tfinal FileSourceSplit split = createRandomSplit();\n\t\tfileEnumerator.addSplits(split);\n\t\tcontext.triggerAllActions();\n\n\t\tassertThat(enumerator.snapshotState().getSplits(), empty());\n\t\tassertThat(context.getSplitAssignments().get(2).getAssignedSplits(), contains(split));\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/ContinuousFileSplitEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"}],"commitId":"75599bca3ecff89c0abf9d9027d1280e1ac812b0","commitMessage":"@@@[FLINK-20261][connector source] Enumerators do not assign splits to unregistered (failed) readers.\n","date":"2020-11-23 05:10:07","modifiedFileCount":"2","status":"B","submitter":"Stephan Ewen"},{"authorTime":"2021-04-19 23:32:00","codes":[{"authorDate":"2021-04-19 23:32:00","commitOrder":2,"curCode":"    public void testDiscoverSplitWhenNoReaderRegistered() throws Exception {\n        final TestingFileEnumerator fileEnumerator = new TestingFileEnumerator();\n        final TestingSplitEnumeratorContext<FileSourceSplit> context =\n                new TestingSplitEnumeratorContext<>(4);\n        final ContinuousFileSplitEnumerator enumerator = createEnumerator(fileEnumerator, context);\n\n        \r\n        final FileSourceSplit split = createRandomSplit();\n        fileEnumerator.addSplits(split);\n        context.triggerAllActions();\n\n        assertThat(enumerator.snapshotState(1L).getSplits(), contains(split));\n    }\n","date":"2021-04-20 23:44:58","endLine":61,"groupId":"10992","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testDiscoverSplitWhenNoReaderRegistered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1f/e4b2d85f608b64d744891c11759979f8481166.src","preCode":"    public void testDiscoverSplitWhenNoReaderRegistered() throws Exception {\n        final TestingFileEnumerator fileEnumerator = new TestingFileEnumerator();\n        final TestingSplitEnumeratorContext<FileSourceSplit> context =\n                new TestingSplitEnumeratorContext<>(4);\n        final ContinuousFileSplitEnumerator enumerator = createEnumerator(fileEnumerator, context);\n\n        \r\n        final FileSourceSplit split = createRandomSplit();\n        fileEnumerator.addSplits(split);\n        context.triggerAllActions();\n\n        assertThat(enumerator.snapshotState().getSplits(), contains(split));\n    }\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/ContinuousFileSplitEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2021-04-19 23:32:00","commitOrder":2,"curCode":"    public void testDiscoverWhenReaderRegistered() throws Exception {\n        final TestingFileEnumerator fileEnumerator = new TestingFileEnumerator();\n        final TestingSplitEnumeratorContext<FileSourceSplit> context =\n                new TestingSplitEnumeratorContext<>(4);\n        final ContinuousFileSplitEnumerator enumerator = createEnumerator(fileEnumerator, context);\n\n        \r\n        context.registerReader(2, \"localhost\");\n        enumerator.addReader(2);\n        enumerator.handleSplitRequest(2, \"localhost\");\n\n        \r\n        final FileSourceSplit split = createRandomSplit();\n        fileEnumerator.addSplits(split);\n        context.triggerAllActions();\n\n        assertThat(enumerator.snapshotState(1L).getSplits(), empty());\n        assertThat(context.getSplitAssignments().get(2).getAssignedSplits(), contains(split));\n    }\n","date":"2021-04-20 23:44:58","endLine":82,"groupId":"10992","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testDiscoverWhenReaderRegistered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1f/e4b2d85f608b64d744891c11759979f8481166.src","preCode":"    public void testDiscoverWhenReaderRegistered() throws Exception {\n        final TestingFileEnumerator fileEnumerator = new TestingFileEnumerator();\n        final TestingSplitEnumeratorContext<FileSourceSplit> context =\n                new TestingSplitEnumeratorContext<>(4);\n        final ContinuousFileSplitEnumerator enumerator = createEnumerator(fileEnumerator, context);\n\n        \r\n        context.registerReader(2, \"localhost\");\n        enumerator.addReader(2);\n        enumerator.handleSplitRequest(2, \"localhost\");\n\n        \r\n        final FileSourceSplit split = createRandomSplit();\n        fileEnumerator.addSplits(split);\n        context.triggerAllActions();\n\n        assertThat(enumerator.snapshotState().getSplits(), empty());\n        assertThat(context.getSplitAssignments().get(2).getAssignedSplits(), contains(split));\n    }\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/ContinuousFileSplitEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"c4678d874b32cd996da49c39ea33b3420b77e17c","commitMessage":"@@@[FLINK-22133][core] Add checkpointID to 'SplitEnumerator.snapshotState()'\n\nThis closes #15677\n","date":"2021-04-20 23:44:58","modifiedFileCount":"16","status":"M","submitter":"Stephan Ewen"}]
