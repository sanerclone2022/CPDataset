[{"authorTime":"2018-11-26 23:11:04","codes":[{"authorDate":"2020-05-06 11:40:18","commitOrder":3,"curCode":"\tpublic byte[] serialize(RowData row) {\n\t\tif (root == null) {\n\t\t\troot = csvMapper.createObjectNode();\n\t\t}\n\t\ttry {\n\t\t\truntimeConverter.convert(csvMapper, root, row);\n\t\t\treturn objectWriter.writeValueAsBytes(root);\n\t\t} catch (Throwable t) {\n\t\t\tthrow new RuntimeException(\"Could not serialize row '\" + row + \"'.\", t);\n\t\t}\n\t}\n","date":"2020-05-06 11:40:18","endLine":176,"groupId":"25826","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"serialize","params":"(RowDatarow)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/21/f8ae94431d6a9055cd0291ddb6050aff060487.src","preCode":"\tpublic byte[] serialize(RowData row) {\n\t\tif (root == null) {\n\t\t\troot = csvMapper.createObjectNode();\n\t\t}\n\t\ttry {\n\t\t\truntimeConverter.convert(csvMapper, root, row);\n\t\t\treturn objectWriter.writeValueAsBytes(root);\n\t\t} catch (Throwable t) {\n\t\t\tthrow new RuntimeException(\"Could not serialize row '\" + row + \"'.\", t);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvRowDataSerializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"B"},{"authorDate":"2018-11-26 23:11:04","commitOrder":3,"curCode":"\tpublic byte[] serialize(Row row) {\n\t\tif (root == null) {\n\t\t\troot = csvMapper.createObjectNode();\n\t\t}\n\t\ttry {\n\t\t\truntimeConverter.convert(csvMapper, root, row);\n\t\t\treturn objectWriter.writeValueAsBytes(root);\n\t\t} catch (Throwable t) {\n\t\t\tthrow new RuntimeException(\"Could not serialize row '\" + row + \"'.\", t);\n\t\t}\n\t}\n","date":"2019-02-23 01:34:13","endLine":166,"groupId":"25826","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"serialize","params":"(Rowrow)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a6/5554f8cab21762f430b2f1cd127cba769998c7.src","preCode":"\tpublic byte[] serialize(Row row) {\n\t\tif (root == null) {\n\t\t\troot = csvMapper.createObjectNode();\n\t\t}\n\t\ttry {\n\t\t\truntimeConverter.convert(csvMapper, root, row);\n\t\t\treturn objectWriter.writeValueAsBytes(root);\n\t\t} catch (Throwable t) {\n\t\t\tthrow new RuntimeException(\"Could not serialize row '\" + row + \"'.\", t);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvRowSerializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"NB"}],"commitId":"b1e436a109c6473b794f02ec0a853d1ae6df6c83","commitMessage":"@@@[FLINK-17462][format][csv] Support CSV serialization and deseriazation schema for RowData type\n\nThis closes #11962","date":"2020-05-06 11:40:18","modifiedFileCount":"1","status":"M","submitter":"Jark Wu"},{"authorTime":"2018-11-26 23:11:04","codes":[{"authorDate":"2021-06-03 15:26:39","commitOrder":4,"curCode":"    public byte[] serialize(RowData row) {\n        if (root == null) {\n            root = csvMapper.createObjectNode();\n        }\n        try {\n            runtimeConverter.convert(csvMapper, root, row);\n            return objectWriter.writeValueAsBytes(root);\n        } catch (Throwable t) {\n            throw new RuntimeException(String.format(\"Could not serialize row '%s'.\", row), t);\n        }\n    }\n","date":"2021-06-08 15:03:38","endLine":142,"groupId":"102282","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"serialize","params":"(RowDatarow)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/87/abdbaaebbe4d406cae3d76aa776b3bf17326cc.src","preCode":"    public byte[] serialize(RowData row) {\n        if (root == null) {\n            root = csvMapper.createObjectNode();\n        }\n        try {\n            runtimeConverter.convert(csvMapper, root, row);\n            return objectWriter.writeValueAsBytes(root);\n        } catch (Throwable t) {\n            throw new RuntimeException(\"Could not serialize row '\" + row + \"'.\", t);\n        }\n    }\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvRowDataSerializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2018-11-26 23:11:04","commitOrder":4,"curCode":"\tpublic byte[] serialize(Row row) {\n\t\tif (root == null) {\n\t\t\troot = csvMapper.createObjectNode();\n\t\t}\n\t\ttry {\n\t\t\truntimeConverter.convert(csvMapper, root, row);\n\t\t\treturn objectWriter.writeValueAsBytes(root);\n\t\t} catch (Throwable t) {\n\t\t\tthrow new RuntimeException(\"Could not serialize row '\" + row + \"'.\", t);\n\t\t}\n\t}\n","date":"2019-02-23 01:34:13","endLine":166,"groupId":"102282","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"serialize","params":"(Rowrow)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a6/5554f8cab21762f430b2f1cd127cba769998c7.src","preCode":"\tpublic byte[] serialize(Row row) {\n\t\tif (root == null) {\n\t\t\troot = csvMapper.createObjectNode();\n\t\t}\n\t\ttry {\n\t\t\truntimeConverter.convert(csvMapper, root, row);\n\t\t\treturn objectWriter.writeValueAsBytes(root);\n\t\t} catch (Throwable t) {\n\t\t\tthrow new RuntimeException(\"Could not serialize row '\" + row + \"'.\", t);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvRowSerializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"}],"commitId":"16452fbb57c11418796912251152947601572106","commitMessage":"@@@[FLINK-13538][formats] Figure out wrong field name when serializer/deserializer throw exceptions while doing serializing/deserializing for json and csv format.\n\nThis closes #16068\n","date":"2021-06-08 15:03:38","modifiedFileCount":"12","status":"M","submitter":"??"}]
