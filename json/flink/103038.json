[{"authorTime":"2020-10-28 19:44:51","codes":[{"authorDate":"2020-10-28 19:44:51","commitOrder":1,"curCode":"\tpublic void generateWriterCommitterGlobalCommitterTopology() {\n\n\t\tfinal StreamGraph streamGraph = buildGraph(TestSink\n\t\t\t\t.newBuilder()\n\t\t\t\t.setDefaultCommitter()\n\t\t\t\t.setDefaultGlobalCommitter()\n\t\t\t\t.build(), runtimeExecutionMode);\n\n\t\tfinal StreamNode committerNode = findNodeNameContains(streamGraph, \"Committer\");\n\t\tfinal StreamNode globalCommitterNode = findNodeNameContains(\n\t\t\t\tstreamGraph,\n\t\t\t\t\"Global Committer\");\n\n\t\tvalidateTopology(\n\t\t\t\tcommitterNode,\n\t\t\t\tSimpleVersionedSerializerTypeSerializerProxy.class,\n\t\t\t\tglobalCommitterNode,\n\t\t\t\t\"Global Committer\",\n\t\t\t\tglobalCommitterClass,\n\t\t\t\t1,\n\t\t\t\t1);\n\t}\n","date":"2020-11-02 19:01:45","endLine":142,"groupId":"7232","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"generateWriterCommitterGlobalCommitterTopology","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/81/25b989c54fce992da9309ec159b7d564a082da.src","preCode":"\tpublic void generateWriterCommitterGlobalCommitterTopology() {\n\n\t\tfinal StreamGraph streamGraph = buildGraph(TestSink\n\t\t\t\t.newBuilder()\n\t\t\t\t.setDefaultCommitter()\n\t\t\t\t.setDefaultGlobalCommitter()\n\t\t\t\t.build(), runtimeExecutionMode);\n\n\t\tfinal StreamNode committerNode = findNodeNameContains(streamGraph, \"Committer\");\n\t\tfinal StreamNode globalCommitterNode = findNodeNameContains(\n\t\t\t\tstreamGraph,\n\t\t\t\t\"Global Committer\");\n\n\t\tvalidateTopology(\n\t\t\t\tcommitterNode,\n\t\t\t\tSimpleVersionedSerializerTypeSerializerProxy.class,\n\t\t\t\tglobalCommitterNode,\n\t\t\t\t\"Global Committer\",\n\t\t\t\tglobalCommitterClass,\n\t\t\t\t1,\n\t\t\t\t1);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/SinkTransformationTranslatorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2020-10-28 19:44:51","commitOrder":1,"curCode":"\tpublic void generateWriterGlobalCommitterTopology() {\n\t\tfinal StreamGraph streamGraph = buildGraph(TestSink\n\t\t\t\t.newBuilder()\n\t\t\t\t.setCommittableSerializer(TestSink.StringCommittableSerializer.INSTANCE)\n\t\t\t\t.setDefaultGlobalCommitter()\n\t\t\t\t.build(), runtimeExecutionMode);\n\n\t\tfinal StreamNode writerNode = findNodeNameContains(streamGraph, \"Writer\");\n\t\tfinal StreamNode globalCommitterNode = findNodeNameContains(\n\t\t\t\tstreamGraph,\n\t\t\t\t\"Global Committer\");\n\n\t\tvalidateTopology(\n\t\t\t\twriterNode,\n\t\t\t\tSimpleVersionedSerializerTypeSerializerProxy.class,\n\t\t\t\tglobalCommitterNode,\n\t\t\t\t\"Global Committer\",\n\t\t\t\tglobalCommitterClass,\n\t\t\t\t1,\n\t\t\t\t1);\n\t}\n","date":"2020-11-02 19:01:45","endLine":165,"groupId":"7232","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"generateWriterGlobalCommitterTopology","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/81/25b989c54fce992da9309ec159b7d564a082da.src","preCode":"\tpublic void generateWriterGlobalCommitterTopology() {\n\t\tfinal StreamGraph streamGraph = buildGraph(TestSink\n\t\t\t\t.newBuilder()\n\t\t\t\t.setCommittableSerializer(TestSink.StringCommittableSerializer.INSTANCE)\n\t\t\t\t.setDefaultGlobalCommitter()\n\t\t\t\t.build(), runtimeExecutionMode);\n\n\t\tfinal StreamNode writerNode = findNodeNameContains(streamGraph, \"Writer\");\n\t\tfinal StreamNode globalCommitterNode = findNodeNameContains(\n\t\t\t\tstreamGraph,\n\t\t\t\t\"Global Committer\");\n\n\t\tvalidateTopology(\n\t\t\t\twriterNode,\n\t\t\t\tSimpleVersionedSerializerTypeSerializerProxy.class,\n\t\t\t\tglobalCommitterNode,\n\t\t\t\t\"Global Committer\",\n\t\t\t\tglobalCommitterClass,\n\t\t\t\t1,\n\t\t\t\t1);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/SinkTransformationTranslatorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"B"}],"commitId":"34d143fb23216ac03869cce7834200ac1709dc43","commitMessage":"@@@[FLINK-19736] Add SinkTransformation along with Translator\n\nThis patch does three things:\n\n1. Introduce 'SinkTransformation' to represent the new sink api.\n\n2. Introduce 'SinkTransformationTranslator' that translates the\n'SinkTransformation' to the corresponding runtime operators.\n\n3. Make DataStream Sdk support new sink api.\n","date":"2020-11-02 19:01:45","modifiedFileCount":"7","status":"B","submitter":"GuoWei Ma"},{"authorTime":"2020-11-06 22:50:30","codes":[{"authorDate":"2020-11-06 22:50:30","commitOrder":2,"curCode":"\tpublic void generateWriterCommitterGlobalCommitterTopology() {\n\n\t\tfinal StreamGraph streamGraph = buildGraph(TestSink\n\t\t\t\t.newBuilder()\n\t\t\t\t.setDefaultCommitter()\n\t\t\t\t.setDefaultGlobalCommitter()\n\t\t\t\t.build(), runtimeExecutionMode);\n\n\t\tfinal StreamNode committerNode = findNodeNameContains(streamGraph, \"Committer\");\n\t\tfinal StreamNode globalCommitterNode = findNodeNameContains(\n\t\t\t\tstreamGraph,\n\t\t\t\t\"Global Committer\");\n\n\t\tvalidateTopology(\n\t\t\t\tcommitterNode,\n\t\t\t\tSimpleVersionedSerializerTypeSerializerProxy.class,\n\t\t\t\tglobalCommitterNode,\n\t\t\t\tString.format(\"Sink Global Committer: %s\", NAME),\n\t\t\t\tString.format(\"Sink Global Committer: %s\", UID),\n\t\t\t\tglobalCommitterClass,\n\t\t\t\t1,\n\t\t\t\t1);\n\t}\n","date":"2020-11-08 18:46:04","endLine":145,"groupId":"7232","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"generateWriterCommitterGlobalCommitterTopology","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/45/eeff686d63cea833f8dad16efe376a2e88b1e0.src","preCode":"\tpublic void generateWriterCommitterGlobalCommitterTopology() {\n\n\t\tfinal StreamGraph streamGraph = buildGraph(TestSink\n\t\t\t\t.newBuilder()\n\t\t\t\t.setDefaultCommitter()\n\t\t\t\t.setDefaultGlobalCommitter()\n\t\t\t\t.build(), runtimeExecutionMode);\n\n\t\tfinal StreamNode committerNode = findNodeNameContains(streamGraph, \"Committer\");\n\t\tfinal StreamNode globalCommitterNode = findNodeNameContains(\n\t\t\t\tstreamGraph,\n\t\t\t\t\"Global Committer\");\n\n\t\tvalidateTopology(\n\t\t\t\tcommitterNode,\n\t\t\t\tSimpleVersionedSerializerTypeSerializerProxy.class,\n\t\t\t\tglobalCommitterNode,\n\t\t\t\t\"Global Committer\",\n\t\t\t\tglobalCommitterClass,\n\t\t\t\t1,\n\t\t\t\t1);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/SinkTransformationTranslatorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2020-11-06 22:50:30","commitOrder":2,"curCode":"\tpublic void generateWriterGlobalCommitterTopology() {\n\t\tfinal StreamGraph streamGraph = buildGraph(TestSink\n\t\t\t\t.newBuilder()\n\t\t\t\t.setCommittableSerializer(TestSink.StringCommittableSerializer.INSTANCE)\n\t\t\t\t.setDefaultGlobalCommitter()\n\t\t\t\t.build(), runtimeExecutionMode);\n\n\t\tfinal StreamNode writerNode = findNodeNameContains(streamGraph, \"Writer\");\n\t\tfinal StreamNode globalCommitterNode = findNodeNameContains(\n\t\t\t\tstreamGraph,\n\t\t\t\t\"Global Committer\");\n\n\t\tvalidateTopology(\n\t\t\t\twriterNode,\n\t\t\t\tSimpleVersionedSerializerTypeSerializerProxy.class,\n\t\t\t\tglobalCommitterNode,\n\t\t\t\tString.format(\"Sink Global Committer: %s\", NAME),\n\t\t\t\tString.format(\"Sink Global Committer: %s\", UID),\n\t\t\t\tglobalCommitterClass,\n\t\t\t\t1,\n\t\t\t\t1);\n\t}\n","date":"2020-11-08 18:46:04","endLine":169,"groupId":"7232","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"generateWriterGlobalCommitterTopology","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/45/eeff686d63cea833f8dad16efe376a2e88b1e0.src","preCode":"\tpublic void generateWriterGlobalCommitterTopology() {\n\t\tfinal StreamGraph streamGraph = buildGraph(TestSink\n\t\t\t\t.newBuilder()\n\t\t\t\t.setCommittableSerializer(TestSink.StringCommittableSerializer.INSTANCE)\n\t\t\t\t.setDefaultGlobalCommitter()\n\t\t\t\t.build(), runtimeExecutionMode);\n\n\t\tfinal StreamNode writerNode = findNodeNameContains(streamGraph, \"Writer\");\n\t\tfinal StreamNode globalCommitterNode = findNodeNameContains(\n\t\t\t\tstreamGraph,\n\t\t\t\t\"Global Committer\");\n\n\t\tvalidateTopology(\n\t\t\t\twriterNode,\n\t\t\t\tSimpleVersionedSerializerTypeSerializerProxy.class,\n\t\t\t\tglobalCommitterNode,\n\t\t\t\t\"Global Committer\",\n\t\t\t\tglobalCommitterClass,\n\t\t\t\t1,\n\t\t\t\t1);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/SinkTransformationTranslatorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"dd17dc749948d328d086d1d8a920e325217f1902","commitMessage":"@@@[FLINK-20031] Keep the UID of SinkWriter same as the SinkTransformation\n\nIn case we want to migrate the StreamingFileSink to the new Sink API we\nmight need to let user set the SinkWriter's uid same as the\nStreamingFileSink's. So that SinkWriter operator has the opportunity to\nreuse the old state. (This is just to keep the option open for now.)\n\nFor this we need to let SinkWriter operator's uid is the same as the\nSinkTransformation.\n","date":"2020-11-08 18:46:04","modifiedFileCount":"2","status":"M","submitter":"GuoWei Ma"},{"authorTime":"2021-08-04 18:12:01","codes":[{"authorDate":"2021-08-04 18:12:01","commitOrder":3,"curCode":"    public void generateWriterCommitterGlobalCommitterTopology() {\n\n        final StreamGraph streamGraph =\n                buildGraph(\n                        TestSink.newBuilder()\n                                .setDefaultCommitter()\n                                .setDefaultGlobalCommitter()\n                                .build(),\n                        runtimeExecutionMode);\n\n        final StreamNode writerNode = findWriter(streamGraph);\n        final StreamNode committerNode = findCommitter(streamGraph);\n\n        validateTopology(\n                writerNode,\n                BytePrimitiveArraySerializer.class,\n                committerNode,\n                CommitterOperatorFactory.class,\n                1,\n                1);\n    }\n","date":"2021-08-06 13:54:35","endLine":136,"groupId":"103038","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"generateWriterCommitterGlobalCommitterTopology","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9e/0c66e47aeb60bfcc7577f117afc7548bc23960.src","preCode":"    public void generateWriterCommitterGlobalCommitterTopology() {\n\n        final StreamGraph streamGraph =\n                buildGraph(\n                        TestSink.newBuilder()\n                                .setDefaultCommitter()\n                                .setDefaultGlobalCommitter()\n                                .build(),\n                        runtimeExecutionMode);\n\n        final StreamNode committerNode = findNodeNameContains(streamGraph, \"Committer\");\n        final StreamNode globalCommitterNode =\n                findNodeNameContains(streamGraph, \"Global Committer\");\n\n        validateTopology(\n                committerNode,\n                SimpleVersionedSerializerTypeSerializerProxy.class,\n                globalCommitterNode,\n                String.format(\"Sink Global Committer: %s\", NAME),\n                String.format(\"Sink Global Committer: %s\", UID),\n                globalCommitterClass,\n                1,\n                1);\n    }\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/SinkTransformationTranslatorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2021-08-04 18:12:01","commitOrder":3,"curCode":"    public void generateWriterGlobalCommitterTopology() {\n        final StreamGraph streamGraph =\n                buildGraph(\n                        TestSink.newBuilder()\n                                .setCommittableSerializer(\n                                        TestSink.StringCommittableSerializer.INSTANCE)\n                                .setDefaultGlobalCommitter()\n                                .build(),\n                        runtimeExecutionMode);\n\n        final StreamNode writerNode = findWriter(streamGraph);\n        final StreamNode globalCommitterNode = findCommitter(streamGraph);\n\n        validateTopology(\n                writerNode,\n                BytePrimitiveArraySerializer.class,\n                globalCommitterNode,\n                CommitterOperatorFactory.class,\n                1,\n                1);\n    }\n","date":"2021-08-06 13:54:35","endLine":159,"groupId":"103038","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"generateWriterGlobalCommitterTopology","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9e/0c66e47aeb60bfcc7577f117afc7548bc23960.src","preCode":"    public void generateWriterGlobalCommitterTopology() {\n        final StreamGraph streamGraph =\n                buildGraph(\n                        TestSink.newBuilder()\n                                .setCommittableSerializer(\n                                        TestSink.StringCommittableSerializer.INSTANCE)\n                                .setDefaultGlobalCommitter()\n                                .build(),\n                        runtimeExecutionMode);\n\n        final StreamNode writerNode = findNodeNameContains(streamGraph, \"Writer\");\n        final StreamNode globalCommitterNode =\n                findNodeNameContains(streamGraph, \"Global Committer\");\n\n        validateTopology(\n                writerNode,\n                SimpleVersionedSerializerTypeSerializerProxy.class,\n                globalCommitterNode,\n                String.format(\"Sink Global Committer: %s\", NAME),\n                String.format(\"Sink Global Committer: %s\", UID),\n                globalCommitterClass,\n                1,\n                1);\n    }\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/graph/SinkTransformationTranslatorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"478e8d094264ed22071e26147f5566f6f6c6f9a3","commitMessage":"@@@[FLINK-23617][datastream] Translate sink into the new SinkOperatorFactory and CommitterOperatorFactory.\n\nThis commit converts existing sink operators into SinkWriterStateHandler and CommitterHandler and composes them into the new operators.\nFurther all test cases are adjusted to test the new combinations.\n","date":"2021-08-06 13:54:35","modifiedFileCount":"6","status":"M","submitter":"Arvid Heise"}]
