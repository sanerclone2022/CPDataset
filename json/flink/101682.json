[{"authorTime":"2019-02-11 07:05:10","codes":[{"authorDate":"2019-02-11 07:05:10","commitOrder":4,"curCode":"\tpublic void testDetachedModeSecureWithPreInstallKeytab() throws Exception {\n\t\trunTest(() -> {\n\t\t\tLOG.info(\"Starting testDetachedModeSecureWithPreInstallKeytab()\");\n\t\t\tMap<String, String> securityProperties = new HashMap<>();\n\t\t\tif (SecureTestEnvironment.getTestKeytab() != null) {\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(YarnConfigOptions.LOCALIZED_KEYTAB_PATH.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(YarnConfigOptions.SHIP_LOCAL_KEYTAB.key(), \"false\");\n\t\t\t}\n\t\t\tif (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(), SecureTestEnvironment.getHadoopServicePrincipal());\n\t\t\t}\n\t\t\trunDetachedModeTest(securityProperties);\n\t\t\tfinal String[] mustHave = {\"Login successful for user\", \"using keytab file\"};\n\t\t\tfinal boolean jobManagerRunsWithKerberos = verifyStringsInNamedLogFiles(\n\t\t\t\tmustHave,\n\t\t\t\t\"jobmanager.log\");\n\t\t\tfinal boolean taskManagerRunsWithKerberos = verifyStringsInNamedLogFiles(\n\t\t\t\tmustHave, \"taskmanager.log\");\n\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The JobManager and the TaskManager should both run with Kerberos.\",\n\t\t\t\tjobManagerRunsWithKerberos && taskManagerRunsWithKerberos,\n\t\t\t\tMatchers.is(true));\n\n\t\t\tfinal List<String> amRMTokens = Lists.newArrayList(AMRMTokenIdentifier.KIND_NAME.toString());\n\t\t\tfinal String jobmanagerContainerId = getContainerIdByLogName(\"jobmanager.log\");\n\t\t\tfinal String taskmanagerContainerId = getContainerIdByLogName(\"taskmanager.log\");\n\t\t\tfinal boolean jobmanagerWithAmRmToken = verifyTokenKindInContainerCredentials(amRMTokens, jobmanagerContainerId);\n\t\t\tfinal boolean taskmanagerWithAmRmToken = verifyTokenKindInContainerCredentials(amRMTokens, taskmanagerContainerId);\n\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The JobManager should have AMRMToken.\",\n\t\t\t\tjobmanagerWithAmRmToken,\n\t\t\t\tMatchers.is(true));\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The TaskManager should not have AMRMToken.\",\n\t\t\t\ttaskmanagerWithAmRmToken,\n\t\t\t\tMatchers.is(false));\n\t\t});\n\t}\n","date":"2020-03-13 21:37:33","endLine":195,"groupId":"14650","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDetachedModeSecureWithPreInstallKeytab","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a9/c9aa3b463c2398bdd9135561e4b9a02a0acc23.src","preCode":"\tpublic void testDetachedModeSecureWithPreInstallKeytab() throws Exception {\n\t\trunTest(() -> {\n\t\t\tLOG.info(\"Starting testDetachedModeSecureWithPreInstallKeytab()\");\n\t\t\tMap<String, String> securityProperties = new HashMap<>();\n\t\t\tif (SecureTestEnvironment.getTestKeytab() != null) {\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(YarnConfigOptions.LOCALIZED_KEYTAB_PATH.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(YarnConfigOptions.SHIP_LOCAL_KEYTAB.key(), \"false\");\n\t\t\t}\n\t\t\tif (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(), SecureTestEnvironment.getHadoopServicePrincipal());\n\t\t\t}\n\t\t\trunDetachedModeTest(securityProperties);\n\t\t\tfinal String[] mustHave = {\"Login successful for user\", \"using keytab file\"};\n\t\t\tfinal boolean jobManagerRunsWithKerberos = verifyStringsInNamedLogFiles(\n\t\t\t\tmustHave,\n\t\t\t\t\"jobmanager.log\");\n\t\t\tfinal boolean taskManagerRunsWithKerberos = verifyStringsInNamedLogFiles(\n\t\t\t\tmustHave, \"taskmanager.log\");\n\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The JobManager and the TaskManager should both run with Kerberos.\",\n\t\t\t\tjobManagerRunsWithKerberos && taskManagerRunsWithKerberos,\n\t\t\t\tMatchers.is(true));\n\n\t\t\tfinal List<String> amRMTokens = Lists.newArrayList(AMRMTokenIdentifier.KIND_NAME.toString());\n\t\t\tfinal String jobmanagerContainerId = getContainerIdByLogName(\"jobmanager.log\");\n\t\t\tfinal String taskmanagerContainerId = getContainerIdByLogName(\"taskmanager.log\");\n\t\t\tfinal boolean jobmanagerWithAmRmToken = verifyTokenKindInContainerCredentials(amRMTokens, jobmanagerContainerId);\n\t\t\tfinal boolean taskmanagerWithAmRmToken = verifyTokenKindInContainerCredentials(amRMTokens, taskmanagerContainerId);\n\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The JobManager should have AMRMToken.\",\n\t\t\t\tjobmanagerWithAmRmToken,\n\t\t\t\tMatchers.is(true));\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The TaskManager should not have AMRMToken.\",\n\t\t\t\ttaskmanagerWithAmRmToken,\n\t\t\t\tMatchers.is(false));\n\t\t});\n\t}\n","realPath":"flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOSecuredITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"B"},{"authorDate":"2019-02-11 07:05:10","commitOrder":4,"curCode":"\tpublic void testDetachedMode() throws Exception {\n\t\trunTest(() -> {\n\t\t\tMap<String, String> securityProperties = new HashMap<>();\n\t\t\tif (SecureTestEnvironment.getTestKeytab() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t}\n\t\t\tif (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(), SecureTestEnvironment.getHadoopServicePrincipal());\n\t\t\t}\n\t\t\trunDetachedModeTest(securityProperties);\n\t\t\tfinal String[] mustHave = {\"Login successful for user\", \"using keytab file\"};\n\t\t\tfinal boolean jobManagerRunsWithKerberos = verifyStringsInNamedLogFiles(\n\t\t\t\tmustHave,\n\t\t\t\t\"jobmanager.log\");\n\t\t\tfinal boolean taskManagerRunsWithKerberos = verifyStringsInNamedLogFiles(\n\t\t\t\tmustHave, \"taskmanager.log\");\n\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The JobManager and the TaskManager should both run with Kerberos.\",\n\t\t\t\tjobManagerRunsWithKerberos && taskManagerRunsWithKerberos,\n\t\t\t\tMatchers.is(true));\n\n\t\t\tfinal List<String> amRMTokens = Lists.newArrayList(AMRMTokenIdentifier.KIND_NAME.toString());\n\t\t\tfinal String jobmanagerContainerId = getContainerIdByLogName(\"jobmanager.log\");\n\t\t\tfinal String taskmanagerContainerId = getContainerIdByLogName(\"taskmanager.log\");\n\t\t\tfinal boolean jobmanagerWithAmRmToken = verifyTokenKindInContainerCredentials(amRMTokens, jobmanagerContainerId);\n\t\t\tfinal boolean taskmanagerWithAmRmToken = verifyTokenKindInContainerCredentials(amRMTokens, taskmanagerContainerId);\n\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The JobManager should have AMRMToken.\",\n\t\t\t\tjobmanagerWithAmRmToken,\n\t\t\t\tMatchers.is(true));\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The TaskManager should not have AMRMToken.\",\n\t\t\t\ttaskmanagerWithAmRmToken,\n\t\t\t\tMatchers.is(false));\n\t\t});\n\t}\n","date":"2020-03-13 21:37:33","endLine":149,"groupId":"14650","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDetachedMode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a9/c9aa3b463c2398bdd9135561e4b9a02a0acc23.src","preCode":"\tpublic void testDetachedMode() throws Exception {\n\t\trunTest(() -> {\n\t\t\tMap<String, String> securityProperties = new HashMap<>();\n\t\t\tif (SecureTestEnvironment.getTestKeytab() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t}\n\t\t\tif (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(), SecureTestEnvironment.getHadoopServicePrincipal());\n\t\t\t}\n\t\t\trunDetachedModeTest(securityProperties);\n\t\t\tfinal String[] mustHave = {\"Login successful for user\", \"using keytab file\"};\n\t\t\tfinal boolean jobManagerRunsWithKerberos = verifyStringsInNamedLogFiles(\n\t\t\t\tmustHave,\n\t\t\t\t\"jobmanager.log\");\n\t\t\tfinal boolean taskManagerRunsWithKerberos = verifyStringsInNamedLogFiles(\n\t\t\t\tmustHave, \"taskmanager.log\");\n\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The JobManager and the TaskManager should both run with Kerberos.\",\n\t\t\t\tjobManagerRunsWithKerberos && taskManagerRunsWithKerberos,\n\t\t\t\tMatchers.is(true));\n\n\t\t\tfinal List<String> amRMTokens = Lists.newArrayList(AMRMTokenIdentifier.KIND_NAME.toString());\n\t\t\tfinal String jobmanagerContainerId = getContainerIdByLogName(\"jobmanager.log\");\n\t\t\tfinal String taskmanagerContainerId = getContainerIdByLogName(\"taskmanager.log\");\n\t\t\tfinal boolean jobmanagerWithAmRmToken = verifyTokenKindInContainerCredentials(amRMTokens, jobmanagerContainerId);\n\t\t\tfinal boolean taskmanagerWithAmRmToken = verifyTokenKindInContainerCredentials(amRMTokens, taskmanagerContainerId);\n\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The JobManager should have AMRMToken.\",\n\t\t\t\tjobmanagerWithAmRmToken,\n\t\t\t\tMatchers.is(true));\n\t\t\tAssert.assertThat(\n\t\t\t\t\"The TaskManager should not have AMRMToken.\",\n\t\t\t\ttaskmanagerWithAmRmToken,\n\t\t\t\tMatchers.is(false));\n\t\t});\n\t}\n","realPath":"flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOSecuredITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"MB"}],"commitId":"0920e6447283579551d14a0fed726f8b8d73bd3f","commitMessage":"@@@[FLINK-11088] Allow YARN to discover pre-installed keytab files\n\nThis is to change how keytab files are discovered. \n    * remove hard-coded keytab filenames\n    * extended YARNSessionFIFOITCase to accommodate different types of security setting test cases regenerate configuration documentations\n","date":"2020-03-13 21:37:33","modifiedFileCount":"9","status":"M","submitter":"Rong Rong"},{"authorTime":"2020-03-12 01:04:33","codes":[{"authorDate":"2020-03-12 01:04:33","commitOrder":5,"curCode":"\tpublic void testDetachedModeSecureWithPreInstallKeytab() throws Exception {\n\t\trunTest(() -> {\n\t\t\tMap<String, String> securityProperties = new HashMap<>();\n\t\t\tif (SecureTestEnvironment.getTestKeytab() != null) {\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(YarnConfigOptions.LOCALIZED_KEYTAB_PATH.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(YarnConfigOptions.SHIP_LOCAL_KEYTAB.key(), \"false\");\n\t\t\t}\n\t\t\tif (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(), SecureTestEnvironment.getHadoopServicePrincipal());\n\t\t\t}\n\t\t\trunDetachedModeTest(securityProperties);\n\t\t\tverifyResultContainsKerberosKeytab();\n\t\t});\n\t}\n","date":"2020-03-13 21:37:33","endLine":128,"groupId":"14650","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDetachedModeSecureWithPreInstallKeytab","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b2/10c4429e71edad3bcf7980647af856e15fc6b6.src","preCode":"\tpublic void testDetachedModeSecureWithPreInstallKeytab() throws Exception {\n\t\trunTest(() -> {\n\t\t\tMap<String, String> securityProperties = new HashMap<>();\n\t\t\tif (SecureTestEnvironment.getTestKeytab() != null) {\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(YarnConfigOptions.LOCALIZED_KEYTAB_PATH.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t\t\r\n\t\t\t\tsecurityProperties.put(YarnConfigOptions.SHIP_LOCAL_KEYTAB.key(), \"false\");\n\t\t\t}\n\t\t\tif (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(), SecureTestEnvironment.getHadoopServicePrincipal());\n\t\t\t}\n\t\t\trunDetachedModeTest(securityProperties);\n\t\t\tverifyResultContainsKerberosKeytab();\n\t\t});\n\t}\n","realPath":"flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOSecuredITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"MB"},{"authorDate":"2020-03-12 01:04:33","commitOrder":5,"curCode":"\tpublic void testDetachedMode() throws Exception {\n\t\trunTest(() -> {\n\t\t\tMap<String, String> securityProperties = new HashMap<>();\n\t\t\tif (SecureTestEnvironment.getTestKeytab() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t}\n\t\t\tif (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(), SecureTestEnvironment.getHadoopServicePrincipal());\n\t\t\t}\n\t\t\trunDetachedModeTest(securityProperties);\n\t\t\tverifyResultContainsKerberosKeytab();\n\t\t});\n\t}\n","date":"2020-03-13 21:37:33","endLine":144,"groupId":"14650","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDetachedMode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b2/10c4429e71edad3bcf7980647af856e15fc6b6.src","preCode":"\tpublic void testDetachedMode() throws Exception {\n\t\trunTest(() -> {\n\t\t\tMap<String, String> securityProperties = new HashMap<>();\n\t\t\tif (SecureTestEnvironment.getTestKeytab() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(), SecureTestEnvironment.getTestKeytab());\n\t\t\t}\n\t\t\tif (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n\t\t\t\tsecurityProperties.put(SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(), SecureTestEnvironment.getHadoopServicePrincipal());\n\t\t\t}\n\t\t\trunDetachedModeTest(securityProperties);\n\t\t\tverifyResultContainsKerberosKeytab();\n\t\t});\n\t}\n","realPath":"flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOSecuredITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"MB"}],"commitId":"ea8f0e3ecc9fa9f4bcb150d04b62b94a6ea43757","commitMessage":"@@@[FLINK-11088] Refactor keytab resolution to Utils\n","date":"2020-03-13 21:37:33","modifiedFileCount":"5","status":"M","submitter":"Rong Rong"},{"authorTime":"2021-04-03 01:03:42","codes":[{"authorDate":"2021-04-03 01:03:42","commitOrder":6,"curCode":"    public void testDetachedModeSecureWithPreInstallKeytab() throws Exception {\n        runTest(\n                () -> {\n                    Map<String, String> securityProperties = new HashMap<>();\n                    if (SecureTestEnvironment.getTestKeytab() != null) {\n                        \r\n                        securityProperties.put(\n                                SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(),\n                                SecureTestEnvironment.getTestKeytab());\n                        \r\n                        \r\n                        securityProperties.put(\n                                YarnConfigOptions.LOCALIZED_KEYTAB_PATH.key(),\n                                SecureTestEnvironment.getTestKeytab());\n                        \r\n                        securityProperties.put(YarnConfigOptions.SHIP_LOCAL_KEYTAB.key(), \"false\");\n                    }\n                    if (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n                        securityProperties.put(\n                                SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(),\n                                SecureTestEnvironment.getHadoopServicePrincipal());\n                    }\n                    final ApplicationId applicationId = runDetachedModeTest(securityProperties);\n                    verifyResultContainsKerberosKeytab(applicationId);\n                });\n    }\n","date":"2021-04-09 17:40:00","endLine":157,"groupId":"101682","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDetachedModeSecureWithPreInstallKeytab","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ea/e6d42cb5eed6ca59aeec99b6565b12c69a9170.src","preCode":"    public void testDetachedModeSecureWithPreInstallKeytab() throws Exception {\n        runTest(\n                () -> {\n                    Map<String, String> securityProperties = new HashMap<>();\n                    if (SecureTestEnvironment.getTestKeytab() != null) {\n                        \r\n                        securityProperties.put(\n                                SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(),\n                                SecureTestEnvironment.getTestKeytab());\n                        \r\n                        \r\n                        securityProperties.put(\n                                YarnConfigOptions.LOCALIZED_KEYTAB_PATH.key(),\n                                SecureTestEnvironment.getTestKeytab());\n                        \r\n                        securityProperties.put(YarnConfigOptions.SHIP_LOCAL_KEYTAB.key(), \"false\");\n                    }\n                    if (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n                        securityProperties.put(\n                                SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(),\n                                SecureTestEnvironment.getHadoopServicePrincipal());\n                    }\n                    runDetachedModeTest(securityProperties);\n                    verifyResultContainsKerberosKeytab();\n                });\n    }\n","realPath":"flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOSecuredITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2021-04-03 01:03:42","commitOrder":6,"curCode":"    public void testDetachedMode() throws Exception {\n        runTest(\n                () -> {\n                    Map<String, String> securityProperties = new HashMap<>();\n                    if (SecureTestEnvironment.getTestKeytab() != null) {\n                        securityProperties.put(\n                                SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(),\n                                SecureTestEnvironment.getTestKeytab());\n                    }\n                    if (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n                        securityProperties.put(\n                                SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(),\n                                SecureTestEnvironment.getHadoopServicePrincipal());\n                    }\n                    final ApplicationId applicationId = runDetachedModeTest(securityProperties);\n                    verifyResultContainsKerberosKeytab(applicationId);\n                });\n    }\n","date":"2021-04-09 17:40:00","endLine":178,"groupId":"101682","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDetachedMode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ea/e6d42cb5eed6ca59aeec99b6565b12c69a9170.src","preCode":"    public void testDetachedMode() throws Exception {\n        runTest(\n                () -> {\n                    Map<String, String> securityProperties = new HashMap<>();\n                    if (SecureTestEnvironment.getTestKeytab() != null) {\n                        securityProperties.put(\n                                SecurityOptions.KERBEROS_LOGIN_KEYTAB.key(),\n                                SecureTestEnvironment.getTestKeytab());\n                    }\n                    if (SecureTestEnvironment.getHadoopServicePrincipal() != null) {\n                        securityProperties.put(\n                                SecurityOptions.KERBEROS_LOGIN_PRINCIPAL.key(),\n                                SecureTestEnvironment.getHadoopServicePrincipal());\n                    }\n                    runDetachedModeTest(securityProperties);\n                    verifyResultContainsKerberosKeytab();\n                });\n    }\n","realPath":"flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOSecuredITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"3b6af3d348ee854e51a55e58371d0592fbee1cb8","commitMessage":"@@@[hotfix][yarn-tests] Check the applicationId in verifyStringsInNamedLogFiles\n","date":"2021-04-09 17:40:00","modifiedFileCount":"3","status":"M","submitter":"wangyang0918"}]
