[{"authorTime":"2020-11-23 04:41:41","codes":[{"authorDate":"2020-11-23 04:41:41","commitOrder":1,"curCode":"\tpublic void testCheckpointNoSplitRequested() throws Exception {\n\t\tfinal TestingSplitEnumeratorContext<FileSourceSplit> context = new TestingSplitEnumeratorContext<>(4);\n\t\tfinal FileSourceSplit split = createRandomSplit();\n\t\tfinal StaticFileSplitEnumerator enumerator = createEnumerator(context, split);\n\n\t\tfinal PendingSplitsCheckpoint<FileSourceSplit> checkpoint = enumerator.snapshotState();\n\n\t\tassertThat(checkpoint.getSplits(), contains(split));\n\t}\n","date":"2020-11-23 05:10:07","endLine":59,"groupId":"31804","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCheckpointNoSplitRequested","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/77/2a97542261c1b2c9d1ef9a6149f01e78d5926b.src","preCode":"\tpublic void testCheckpointNoSplitRequested() throws Exception {\n\t\tfinal TestingSplitEnumeratorContext<FileSourceSplit> context = new TestingSplitEnumeratorContext<>(4);\n\t\tfinal FileSourceSplit split = createRandomSplit();\n\t\tfinal StaticFileSplitEnumerator enumerator = createEnumerator(context, split);\n\n\t\tfinal PendingSplitsCheckpoint<FileSourceSplit> checkpoint = enumerator.snapshotState();\n\n\t\tassertThat(checkpoint.getSplits(), contains(split));\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/StaticFileSplitEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"},{"authorDate":"2020-11-23 04:41:41","commitOrder":1,"curCode":"\tpublic void testSplitRequestForNonRegisteredReader() throws Exception {\n\t\tfinal TestingSplitEnumeratorContext<FileSourceSplit> context = new TestingSplitEnumeratorContext<>(4);\n\t\tfinal FileSourceSplit split = createRandomSplit();\n\t\tfinal StaticFileSplitEnumerator enumerator = createEnumerator(context, split);\n\n\t\tenumerator.handleSplitRequest(3, \"somehost\");\n\n\t\tassertFalse(context.getSplitAssignments().containsKey(3));\n\t\tassertThat(enumerator.snapshotState().getSplits(), contains(split));\n\t}\n","date":"2020-11-23 05:10:07","endLine":85,"groupId":"31804","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSplitRequestForNonRegisteredReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/77/2a97542261c1b2c9d1ef9a6149f01e78d5926b.src","preCode":"\tpublic void testSplitRequestForNonRegisteredReader() throws Exception {\n\t\tfinal TestingSplitEnumeratorContext<FileSourceSplit> context = new TestingSplitEnumeratorContext<>(4);\n\t\tfinal FileSourceSplit split = createRandomSplit();\n\t\tfinal StaticFileSplitEnumerator enumerator = createEnumerator(context, split);\n\n\t\tenumerator.handleSplitRequest(3, \"somehost\");\n\n\t\tassertFalse(context.getSplitAssignments().containsKey(3));\n\t\tassertThat(enumerator.snapshotState().getSplits(), contains(split));\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/StaticFileSplitEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"75599bca3ecff89c0abf9d9027d1280e1ac812b0","commitMessage":"@@@[FLINK-20261][connector source] Enumerators do not assign splits to unregistered (failed) readers.\n","date":"2020-11-23 05:10:07","modifiedFileCount":"2","status":"B","submitter":"Stephan Ewen"},{"authorTime":"2021-04-19 23:32:00","codes":[{"authorDate":"2021-04-19 23:32:00","commitOrder":2,"curCode":"    public void testCheckpointNoSplitRequested() throws Exception {\n        final TestingSplitEnumeratorContext<FileSourceSplit> context =\n                new TestingSplitEnumeratorContext<>(4);\n        final FileSourceSplit split = createRandomSplit();\n        final StaticFileSplitEnumerator enumerator = createEnumerator(context, split);\n\n        final PendingSplitsCheckpoint<FileSourceSplit> checkpoint = enumerator.snapshotState(1L);\n\n        assertThat(checkpoint.getSplits(), contains(split));\n    }\n","date":"2021-04-20 23:44:58","endLine":58,"groupId":"10991","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testCheckpointNoSplitRequested","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/71/fcf2ab1fc4a8af33bb91a5f787a88c9d530fc7.src","preCode":"    public void testCheckpointNoSplitRequested() throws Exception {\n        final TestingSplitEnumeratorContext<FileSourceSplit> context =\n                new TestingSplitEnumeratorContext<>(4);\n        final FileSourceSplit split = createRandomSplit();\n        final StaticFileSplitEnumerator enumerator = createEnumerator(context, split);\n\n        final PendingSplitsCheckpoint<FileSourceSplit> checkpoint = enumerator.snapshotState();\n\n        assertThat(checkpoint.getSplits(), contains(split));\n    }\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/StaticFileSplitEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2021-04-19 23:32:00","commitOrder":2,"curCode":"    public void testSplitRequestForNonRegisteredReader() throws Exception {\n        final TestingSplitEnumeratorContext<FileSourceSplit> context =\n                new TestingSplitEnumeratorContext<>(4);\n        final FileSourceSplit split = createRandomSplit();\n        final StaticFileSplitEnumerator enumerator = createEnumerator(context, split);\n\n        enumerator.handleSplitRequest(3, \"somehost\");\n\n        assertFalse(context.getSplitAssignments().containsKey(3));\n        assertThat(enumerator.snapshotState(1L).getSplits(), contains(split));\n    }\n","date":"2021-04-20 23:44:58","endLine":86,"groupId":"10991","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testSplitRequestForNonRegisteredReader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/71/fcf2ab1fc4a8af33bb91a5f787a88c9d530fc7.src","preCode":"    public void testSplitRequestForNonRegisteredReader() throws Exception {\n        final TestingSplitEnumeratorContext<FileSourceSplit> context =\n                new TestingSplitEnumeratorContext<>(4);\n        final FileSourceSplit split = createRandomSplit();\n        final StaticFileSplitEnumerator enumerator = createEnumerator(context, split);\n\n        enumerator.handleSplitRequest(3, \"somehost\");\n\n        assertFalse(context.getSplitAssignments().containsKey(3));\n        assertThat(enumerator.snapshotState().getSplits(), contains(split));\n    }\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/src/impl/StaticFileSplitEnumeratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"c4678d874b32cd996da49c39ea33b3420b77e17c","commitMessage":"@@@[FLINK-22133][core] Add checkpointID to 'SplitEnumerator.snapshotState()'\n\nThis closes #15677\n","date":"2021-04-20 23:44:58","modifiedFileCount":"16","status":"M","submitter":"Stephan Ewen"}]
