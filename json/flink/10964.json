[{"authorTime":"2020-10-28 22:05:50","codes":[{"authorDate":"2020-10-28 22:05:50","commitOrder":1,"curCode":"\tprivate FileSinkCommittable serializeAndDeserialize(FileSinkCommittable committable) throws IOException {\n\t\tFileSinkCommittableSerializer serializer = new FileSinkCommittableSerializer(\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestPendingFileRecoverable::new),\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestInProgressFileRecoverable::new));\n\t\tbyte[] data = serializer.serialize(committable);\n\t\treturn serializer.deserialize(serializer.getVersion(), data);\n\t}\n","date":"2020-11-05 17:59:56","endLine":67,"groupId":"43876","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"serializeAndDeserialize","params":"(FileSinkCommittablecommittable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0e/8975ad7934c44d49783c26f398ee345310cb30.src","preCode":"\tprivate FileSinkCommittable serializeAndDeserialize(FileSinkCommittable committable) throws IOException {\n\t\tFileSinkCommittableSerializer serializer = new FileSinkCommittableSerializer(\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestPendingFileRecoverable::new),\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestInProgressFileRecoverable::new));\n\t\tbyte[] data = serializer.serialize(committable);\n\t\treturn serializer.deserialize(serializer.getVersion(), data);\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/sink/FileCommittableSerializerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"},{"authorDate":"2020-10-28 22:05:50","commitOrder":1,"curCode":"\tprivate FileWriterBucketState serializeAndDeserialize(FileWriterBucketState bucketState) throws IOException {\n\t\tFileWriterBucketStateSerializer serializer = new FileWriterBucketStateSerializer(\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestInProgressFileRecoverable::new));\n\t\tbyte[] data = serializer.serialize(bucketState);\n\t\treturn serializer.deserialize(serializer.getVersion(), data);\n\t}\n","date":"2020-11-05 17:59:56","endLine":76,"groupId":"43876","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"serializeAndDeserialize","params":"(FileWriterBucketStatebucketState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/44/5d00b6236782253ff15285975b7b153f0bdec5.src","preCode":"\tprivate FileWriterBucketState serializeAndDeserialize(FileWriterBucketState bucketState) throws IOException {\n\t\tFileWriterBucketStateSerializer serializer = new FileWriterBucketStateSerializer(\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestInProgressFileRecoverable::new));\n\t\tbyte[] data = serializer.serialize(bucketState);\n\t\treturn serializer.deserialize(serializer.getVersion(), data);\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/sink/writer/FileWriterBucketStateSerializerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"1f5055c473c45348b794ff9c9ed8f0759d32a691","commitMessage":"@@@[FLINK-19758] Add unified FileSink based on new Sink API\n","date":"2020-11-05 17:59:56","modifiedFileCount":"0","status":"B","submitter":"Yun Gao"},{"authorTime":"2020-11-25 23:29:38","codes":[{"authorDate":"2020-10-28 22:05:50","commitOrder":2,"curCode":"\tprivate FileSinkCommittable serializeAndDeserialize(FileSinkCommittable committable) throws IOException {\n\t\tFileSinkCommittableSerializer serializer = new FileSinkCommittableSerializer(\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestPendingFileRecoverable::new),\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestInProgressFileRecoverable::new));\n\t\tbyte[] data = serializer.serialize(committable);\n\t\treturn serializer.deserialize(serializer.getVersion(), data);\n\t}\n","date":"2020-11-05 17:59:56","endLine":67,"groupId":"10964","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"serializeAndDeserialize","params":"(FileSinkCommittablecommittable)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0e/8975ad7934c44d49783c26f398ee345310cb30.src","preCode":"\tprivate FileSinkCommittable serializeAndDeserialize(FileSinkCommittable committable) throws IOException {\n\t\tFileSinkCommittableSerializer serializer = new FileSinkCommittableSerializer(\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestPendingFileRecoverable::new),\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestInProgressFileRecoverable::new));\n\t\tbyte[] data = serializer.serialize(committable);\n\t\treturn serializer.deserialize(serializer.getVersion(), data);\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/sink/FileCommittableSerializerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"},{"authorDate":"2020-11-25 23:29:38","commitOrder":2,"curCode":"\tprivate FileWriterBucketState serializeAndDeserialize(FileWriterBucketState bucketState) throws IOException {\n\t\tFileWriterBucketStateSerializer serializer = new FileWriterBucketStateSerializer(\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestInProgressFileRecoverable::new),\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestPendingFileRecoverable::new));\n\t\tbyte[] data = serializer.serialize(bucketState);\n\t\treturn serializer.deserialize(serializer.getVersion(), data);\n\t}\n","date":"2020-11-30 22:18:17","endLine":78,"groupId":"10964","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"serializeAndDeserialize","params":"(FileWriterBucketStatebucketState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d1/73434ddd46940ff165ca5e3d9cb63a7bb3fe0d.src","preCode":"\tprivate FileWriterBucketState serializeAndDeserialize(FileWriterBucketState bucketState) throws IOException {\n\t\tFileWriterBucketStateSerializer serializer = new FileWriterBucketStateSerializer(\n\t\t\t\tnew FileSinkTestUtils.SimpleVersionedWrapperSerializer<>(\n\t\t\t\t\t\tFileSinkTestUtils.TestInProgressFileRecoverable::new));\n\t\tbyte[] data = serializer.serialize(bucketState);\n\t\treturn serializer.deserialize(serializer.getVersion(), data);\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/sink/writer/FileWriterBucketStateSerializerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"da1ad03d68e6c57a95d7375259247053aa8fc24e","commitMessage":"@@@[FLINK-20337] Let FileSink restore state from StreamingFileSink\n\nThe FileWriterBucketStateSerializer is bumped past version 2 to allow it\nto restore the same old versions as BucketStateSerialize (from\nStreamingFileSink).\n","date":"2020-11-30 22:18:17","modifiedFileCount":"7","status":"M","submitter":"Yun Gao"}]
