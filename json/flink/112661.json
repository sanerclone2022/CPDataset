[{"authorTime":"2017-03-21 22:00:24","codes":[{"authorDate":"2017-03-21 22:00:24","commitOrder":1,"curCode":"\tprivate <W extends Window, ACC, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(\n\t\t\tWindowAssigner<Integer, W> assigner,\n\t\t\tTrigger<Integer, W> trigger,\n\t\t\tlong allowedLatenss,\n\t\t\tStateDescriptor<? extends AppendingState<Integer, ACC>, ?> stateDescriptor,\n\t\t\tInternalWindowFunction<ACC, OUT, Integer, W> windowFunction) throws Exception {\n\n\t\tKeySelector<Integer, Integer> keySelector = new KeySelector<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t@Override\n\t\t\tpublic Integer getKey(Integer value) throws Exception {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tWindowOperator<Integer, Integer, ACC, OUT, W> operator = new WindowOperator<>(\n\t\t\t\tassigner,\n\t\t\t\tassigner.getWindowSerializer(new ExecutionConfig()),\n\t\t\t\tkeySelector,\n\t\t\t\tIntSerializer.INSTANCE,\n\t\t\t\tstateDescriptor,\n\t\t\t\twindowFunction,\n\t\t\t\ttrigger,\n\t\t\t\tallowedLatenss,\n\t\t\t\tnull );\n\n\t\treturn new KeyedOneInputStreamOperatorTestHarness<>(\n\t\t\t\toperator,\n\t\t\t\tkeySelector,\n\t\t\t\tBasicTypeInfo.INT_TYPE_INFO);\n\t}\n","date":"2017-03-23 23:29:01","endLine":233,"groupId":"10915","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createWindowOperator","params":"(WindowAssigner<Integer@W>assigner@Trigger<Integer@W>trigger@longallowedLatenss@StateDescriptor<?extendsAppendingState<Integer@ACC>@?>stateDescriptor@InternalWindowFunction<ACC@OUT@Integer@W>windowFunction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/11/508c57db3149273c5503ca2e26857f11e2fdbd.src","preCode":"\tprivate <W extends Window, ACC, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(\n\t\t\tWindowAssigner<Integer, W> assigner,\n\t\t\tTrigger<Integer, W> trigger,\n\t\t\tlong allowedLatenss,\n\t\t\tStateDescriptor<? extends AppendingState<Integer, ACC>, ?> stateDescriptor,\n\t\t\tInternalWindowFunction<ACC, OUT, Integer, W> windowFunction) throws Exception {\n\n\t\tKeySelector<Integer, Integer> keySelector = new KeySelector<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t@Override\n\t\t\tpublic Integer getKey(Integer value) throws Exception {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tWindowOperator<Integer, Integer, ACC, OUT, W> operator = new WindowOperator<>(\n\t\t\t\tassigner,\n\t\t\t\tassigner.getWindowSerializer(new ExecutionConfig()),\n\t\t\t\tkeySelector,\n\t\t\t\tIntSerializer.INSTANCE,\n\t\t\t\tstateDescriptor,\n\t\t\t\twindowFunction,\n\t\t\t\ttrigger,\n\t\t\t\tallowedLatenss,\n\t\t\t\tnull );\n\n\t\treturn new KeyedOneInputStreamOperatorTestHarness<>(\n\t\t\t\toperator,\n\t\t\t\tkeySelector,\n\t\t\t\tBasicTypeInfo.INT_TYPE_INFO);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/operators/windowing/RegularWindowOperatorContractTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"B"},{"authorDate":"2017-03-21 22:00:24","commitOrder":1,"curCode":"\tprotected <W extends Window, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(\n\t\t\tWindowAssigner<Integer, W> assigner,\n\t\t\tTrigger<Integer, W> trigger,\n\t\t\tlong allowedLatenss,\n\t\t\tInternalWindowFunction<Iterable<Integer>, OUT, Integer, W> windowFunction,\n\t\t\tOutputTag<Integer> lateOutputTag) throws Exception {\n\n\t\tKeySelector<Integer, Integer> keySelector = new KeySelector<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t@Override\n\t\t\tpublic Integer getKey(Integer value) throws Exception {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\n\t\tListStateDescriptor<Integer> intListDescriptor =\n\t\t\t\tnew ListStateDescriptor<>(\"int-list\", IntSerializer.INSTANCE);\n\n\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tWindowOperator<Integer, Integer, Iterable<Integer>, OUT, W> operator = new WindowOperator<>(\n\t\t\t\tassigner,\n\t\t\t\tassigner.getWindowSerializer(new ExecutionConfig()),\n\t\t\t\tkeySelector,\n\t\t\t\tIntSerializer.INSTANCE,\n\t\t\t\tintListDescriptor,\n\t\t\t\twindowFunction,\n\t\t\t\ttrigger,\n\t\t\t\tallowedLatenss,\n\t\t\t\tlateOutputTag);\n\n\t\treturn new KeyedOneInputStreamOperatorTestHarness<>(\n\t\t\t\toperator,\n\t\t\t\tkeySelector,\n\t\t\t\tBasicTypeInfo.INT_TYPE_INFO);\n\t}\n","date":"2017-03-23 23:29:01","endLine":272,"groupId":"4483","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createWindowOperator","params":"(WindowAssigner<Integer@W>assigner@Trigger<Integer@W>trigger@longallowedLatenss@InternalWindowFunction<Iterable<Integer>@OUT@Integer@W>windowFunction@OutputTag<Integer>lateOutputTag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/11/508c57db3149273c5503ca2e26857f11e2fdbd.src","preCode":"\tprotected <W extends Window, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(\n\t\t\tWindowAssigner<Integer, W> assigner,\n\t\t\tTrigger<Integer, W> trigger,\n\t\t\tlong allowedLatenss,\n\t\t\tInternalWindowFunction<Iterable<Integer>, OUT, Integer, W> windowFunction,\n\t\t\tOutputTag<Integer> lateOutputTag) throws Exception {\n\n\t\tKeySelector<Integer, Integer> keySelector = new KeySelector<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t@Override\n\t\t\tpublic Integer getKey(Integer value) throws Exception {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\n\t\tListStateDescriptor<Integer> intListDescriptor =\n\t\t\t\tnew ListStateDescriptor<>(\"int-list\", IntSerializer.INSTANCE);\n\n\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tWindowOperator<Integer, Integer, Iterable<Integer>, OUT, W> operator = new WindowOperator<>(\n\t\t\t\tassigner,\n\t\t\t\tassigner.getWindowSerializer(new ExecutionConfig()),\n\t\t\t\tkeySelector,\n\t\t\t\tIntSerializer.INSTANCE,\n\t\t\t\tintListDescriptor,\n\t\t\t\twindowFunction,\n\t\t\t\ttrigger,\n\t\t\t\tallowedLatenss,\n\t\t\t\tlateOutputTag);\n\n\t\treturn new KeyedOneInputStreamOperatorTestHarness<>(\n\t\t\t\toperator,\n\t\t\t\tkeySelector,\n\t\t\t\tBasicTypeInfo.INT_TYPE_INFO);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/operators/windowing/RegularWindowOperatorContractTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"}],"commitId":"3c4b156527e9ca7cb2dafdda706913e91d688133","commitMessage":"@@@[hotfix] Add EvictingWindowOperatorContractTest\n\nThe existing WindowOperatorContractTest is turned into a test base while\nRegularWindowOperatorContract test tests WindowOperator and\nEvictingWindowOperatorTest tests EvictingWindowOperator. For this to\nwork.  the base tests now always use List windows and we have specific\ntests for reducing/folding windows in RegularWindowOperatorContractTest.\n\nThis also patches in the missing side output support for\nEvictingWindowOperator.\n","date":"2017-03-23 23:29:01","modifiedFileCount":"3","status":"B","submitter":"Aljoscha Krettek"},{"authorTime":"2020-12-28 21:30:59","codes":[{"authorDate":"2020-12-28 21:30:59","commitOrder":2,"curCode":"            KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(\n                    WindowAssigner<Integer, W> assigner,\n                    Trigger<Integer, W> trigger,\n                    long allowedLatenss,\n                    StateDescriptor<? extends AppendingState<Integer, ACC>, ?> stateDescriptor,\n                    InternalWindowFunction<ACC, OUT, Integer, W> windowFunction)\n                    throws Exception {\n\n        KeySelector<Integer, Integer> keySelector =\n                new KeySelector<Integer, Integer>() {\n                    private static final long serialVersionUID = 1L;\n\n                    @Override\n                    public Integer getKey(Integer value) throws Exception {\n                        return value;\n                    }\n                };\n\n        @SuppressWarnings(\"unchecked\")\n        WindowOperator<Integer, Integer, ACC, OUT, W> operator =\n                new WindowOperator<>(\n                        assigner,\n                        assigner.getWindowSerializer(new ExecutionConfig()),\n                        keySelector,\n                        IntSerializer.INSTANCE,\n                        stateDescriptor,\n                        windowFunction,\n                        trigger,\n                        allowedLatenss,\n                        null );\n\n        return new KeyedOneInputStreamOperatorTestHarness<>(\n                operator, keySelector, BasicTypeInfo.INT_TYPE_INFO);\n    }\n","date":"2020-12-28 21:35:13","endLine":198,"groupId":"112661","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createWindowOperator","params":"(WindowAssigner<Integer@W>assigner@Trigger<Integer@W>trigger@longallowedLatenss@StateDescriptor<?extendsAppendingState<Integer@ACC>@?>stateDescriptor@InternalWindowFunction<ACC@OUT@Integer@W>windowFunction)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/78/f0960149b894cdc9f1dd5dc3682e2d8c8fba60.src","preCode":"\tprivate <W extends Window, ACC, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(\n\t\t\tWindowAssigner<Integer, W> assigner,\n\t\t\tTrigger<Integer, W> trigger,\n\t\t\tlong allowedLatenss,\n\t\t\tStateDescriptor<? extends AppendingState<Integer, ACC>, ?> stateDescriptor,\n\t\t\tInternalWindowFunction<ACC, OUT, Integer, W> windowFunction) throws Exception {\n\n\t\tKeySelector<Integer, Integer> keySelector = new KeySelector<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t@Override\n\t\t\tpublic Integer getKey(Integer value) throws Exception {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tWindowOperator<Integer, Integer, ACC, OUT, W> operator = new WindowOperator<>(\n\t\t\t\tassigner,\n\t\t\t\tassigner.getWindowSerializer(new ExecutionConfig()),\n\t\t\t\tkeySelector,\n\t\t\t\tIntSerializer.INSTANCE,\n\t\t\t\tstateDescriptor,\n\t\t\t\twindowFunction,\n\t\t\t\ttrigger,\n\t\t\t\tallowedLatenss,\n\t\t\t\tnull );\n\n\t\treturn new KeyedOneInputStreamOperatorTestHarness<>(\n\t\t\t\toperator,\n\t\t\t\tkeySelector,\n\t\t\t\tBasicTypeInfo.INT_TYPE_INFO);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/operators/windowing/RegularWindowOperatorContractTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2020-12-28 21:30:59","commitOrder":2,"curCode":"            KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(\n                    WindowAssigner<Integer, W> assigner,\n                    Trigger<Integer, W> trigger,\n                    long allowedLatenss,\n                    InternalWindowFunction<Iterable<Integer>, OUT, Integer, W> windowFunction,\n                    OutputTag<Integer> lateOutputTag)\n                    throws Exception {\n\n        KeySelector<Integer, Integer> keySelector =\n                new KeySelector<Integer, Integer>() {\n                    private static final long serialVersionUID = 1L;\n\n                    @Override\n                    public Integer getKey(Integer value) throws Exception {\n                        return value;\n                    }\n                };\n\n        ListStateDescriptor<Integer> intListDescriptor =\n                new ListStateDescriptor<>(\"int-list\", IntSerializer.INSTANCE);\n\n        @SuppressWarnings(\"unchecked\")\n        WindowOperator<Integer, Integer, Iterable<Integer>, OUT, W> operator =\n                new WindowOperator<>(\n                        assigner,\n                        assigner.getWindowSerializer(new ExecutionConfig()),\n                        keySelector,\n                        IntSerializer.INSTANCE,\n                        intListDescriptor,\n                        windowFunction,\n                        trigger,\n                        allowedLatenss,\n                        lateOutputTag);\n\n        return new KeyedOneInputStreamOperatorTestHarness<>(\n                operator, keySelector, BasicTypeInfo.INT_TYPE_INFO);\n    }\n","date":"2020-12-28 21:35:13","endLine":238,"groupId":"112661","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"createWindowOperator","params":"(WindowAssigner<Integer@W>assigner@Trigger<Integer@W>trigger@longallowedLatenss@InternalWindowFunction<Iterable<Integer>@OUT@Integer@W>windowFunction@OutputTag<Integer>lateOutputTag)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/78/f0960149b894cdc9f1dd5dc3682e2d8c8fba60.src","preCode":"\tprotected <W extends Window, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(\n\t\t\tWindowAssigner<Integer, W> assigner,\n\t\t\tTrigger<Integer, W> trigger,\n\t\t\tlong allowedLatenss,\n\t\t\tInternalWindowFunction<Iterable<Integer>, OUT, Integer, W> windowFunction,\n\t\t\tOutputTag<Integer> lateOutputTag) throws Exception {\n\n\t\tKeySelector<Integer, Integer> keySelector = new KeySelector<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1L;\n\n\t\t\t@Override\n\t\t\tpublic Integer getKey(Integer value) throws Exception {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\n\t\tListStateDescriptor<Integer> intListDescriptor =\n\t\t\t\tnew ListStateDescriptor<>(\"int-list\", IntSerializer.INSTANCE);\n\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tWindowOperator<Integer, Integer, Iterable<Integer>, OUT, W> operator = new WindowOperator<>(\n\t\t\t\tassigner,\n\t\t\t\tassigner.getWindowSerializer(new ExecutionConfig()),\n\t\t\t\tkeySelector,\n\t\t\t\tIntSerializer.INSTANCE,\n\t\t\t\tintListDescriptor,\n\t\t\t\twindowFunction,\n\t\t\t\ttrigger,\n\t\t\t\tallowedLatenss,\n\t\t\t\tlateOutputTag);\n\n\t\treturn new KeyedOneInputStreamOperatorTestHarness<>(\n\t\t\t\toperator,\n\t\t\t\tkeySelector,\n\t\t\t\tBasicTypeInfo.INT_TYPE_INFO);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/operators/windowing/RegularWindowOperatorContractTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"}],"commitId":"c6997c97c575d334679915c328792b8a3067cfb5","commitMessage":"@@@[FLINK-20651] Format code with Spotless/google-java-format\n","date":"2020-12-28 21:35:13","modifiedFileCount":"11013","status":"M","submitter":"Rufus Refactor"}]
