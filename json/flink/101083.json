[{"authorTime":"2020-06-16 16:50:02","codes":[{"authorDate":"2020-06-16 16:18:47","commitOrder":2,"curCode":"\tpublic void testInsertPartitionWithStarSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n\t\tHiveTestUtils.createTextTableInserter(\n\t\t\t\thiveShell,\n\t\t\t\t\"default\",\n\t\t\t\t\"src\")\n\t\t\t\t.addRow(new Object[]{1, \"a\"})\n\t\t\t\t.commit();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\tTableEnvUtil.execInsertSqlAndWaitResult(tableEnv,\n\t\t\t\t\"insert into dest partition (p1=1) select * from src\");\n\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists src\");\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","date":"2020-06-16 16:18:47","endLine":689,"groupId":"49117","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInsertPartitionWithStarSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f2/a8108a2f9561d777e8446cf2327739408d90b1.src","preCode":"\tpublic void testInsertPartitionWithStarSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n\t\tHiveTestUtils.createTextTableInserter(\n\t\t\t\thiveShell,\n\t\t\t\t\"default\",\n\t\t\t\t\"src\")\n\t\t\t\t.addRow(new Object[]{1, \"a\"})\n\t\t\t\t.commit();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\tTableEnvUtil.execInsertSqlAndWaitResult(tableEnv,\n\t\t\t\t\"insert into dest partition (p1=1) select * from src\");\n\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists src\");\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":673,"status":"NB"},{"authorDate":"2020-06-16 16:50:02","commitOrder":2,"curCode":"\tpublic void testInsertPartitionWithValuesSource() {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\tTableEnvUtil.execInsertSqlAndWaitResult(tableEnv,\n\t\t\t\t\"insert into dest partition (p1=1) values(1, 'a')\");\n\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","date":"2020-06-22 16:10:20","endLine":700,"groupId":"49115","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertPartitionWithValuesSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8c/df001c46c5af4dc128c0cc9a30ee9cec7bd246.src","preCode":"\tpublic void testInsertPartitionWithValuesSource() {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\tTableEnvUtil.execInsertSqlAndWaitResult(tableEnv,\n\t\t\t\t\"insert into dest partition (p1=1) values(1, 'a')\");\n\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":692,"status":"B"}],"commitId":"ce8ad9399f6a36e1197ca090c38cee631097bcc5","commitMessage":"@@@[FLINK-18315][table-planner-blink] Fix INSERT INTO partitioned table with VALUES doesn't work correctly\n\nThe VALUES would be patched up with partition fields.\n\nThis closes #12677\n","date":"2020-06-22 16:10:20","modifiedFileCount":"1","status":"M","submitter":"yuzhao.cyz"},{"authorTime":"2020-06-17 14:23:46","codes":[{"authorDate":"2020-06-17 14:23:46","commitOrder":3,"curCode":"\tpublic void testInsertPartitionWithStarSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n\t\tHiveTestUtils.createTextTableInserter(\n\t\t\t\thiveShell,\n\t\t\t\t\"default\",\n\t\t\t\t\"src\")\n\t\t\t\t.addRow(new Object[]{1, \"a\"})\n\t\t\t\t.commit();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\ttableEnv.executeSql(\"insert into dest partition (p1=1) select * from src\").await();\n\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists src\");\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","date":"2020-09-07 17:35:17","endLine":686,"groupId":"22161","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInsertPartitionWithStarSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3b/b9d5e2a6f7eaf7e890eebeb321955dfc653881.src","preCode":"\tpublic void testInsertPartitionWithStarSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n\t\tHiveTestUtils.createTextTableInserter(\n\t\t\t\thiveShell,\n\t\t\t\t\"default\",\n\t\t\t\t\"src\")\n\t\t\t\t.addRow(new Object[]{1, \"a\"})\n\t\t\t\t.commit();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\tTableEnvUtil.execInsertSqlAndWaitResult(tableEnv,\n\t\t\t\t\"insert into dest partition (p1=1) select * from src\");\n\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists src\");\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":671,"status":"M"},{"authorDate":"2020-06-17 14:23:46","commitOrder":3,"curCode":"\tpublic void testInsertPartitionWithValuesSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\ttableEnv.executeSql(\"insert into dest partition (p1=1) values(1, 'a')\").await();\n\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","date":"2020-09-07 17:35:17","endLine":696,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertPartitionWithValuesSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3b/b9d5e2a6f7eaf7e890eebeb321955dfc653881.src","preCode":"\tpublic void testInsertPartitionWithValuesSource() {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\tTableEnvUtil.execInsertSqlAndWaitResult(tableEnv,\n\t\t\t\t\"insert into dest partition (p1=1) values(1, 'a')\");\n\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":689,"status":"M"}],"commitId":"6f2a0412c0eb00adeb494fcc1d68481bdf2dd7b8","commitMessage":"@@@[FLINK-18337][table] Introduce TableResult#await method to block until data is ready or job finished\n\nThis closes #12688.\n","date":"2020-09-07 17:35:17","modifiedFileCount":"26","status":"M","submitter":"godfreyhe"},{"authorTime":"2020-06-18 11:52:35","codes":[{"authorDate":"2020-06-18 11:52:35","commitOrder":4,"curCode":"\tpublic void testInsertPartitionWithStarSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n\t\tHiveTestUtils.createTextTableInserter(\n\t\t\t\thiveShell,\n\t\t\t\t\"default\",\n\t\t\t\t\"src\")\n\t\t\t\t.addRow(new Object[]{1, \"a\"})\n\t\t\t\t.commit();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\ttableEnv.executeSql(\"insert into dest partition (p1=1) select * from src\").await();\n\t\tList<Row> results = CollectionUtil.iteratorToList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists src\");\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","date":"2020-09-07 17:37:11","endLine":685,"groupId":"22161","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInsertPartitionWithStarSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/eb/a78e46f7d09421f8fc542dc159fc09b0f1d42e.src","preCode":"\tpublic void testInsertPartitionWithStarSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n\t\tHiveTestUtils.createTextTableInserter(\n\t\t\t\thiveShell,\n\t\t\t\t\"default\",\n\t\t\t\t\"src\")\n\t\t\t\t.addRow(new Object[]{1, \"a\"})\n\t\t\t\t.commit();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\ttableEnv.executeSql(\"insert into dest partition (p1=1) select * from src\").await();\n\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists src\");\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":670,"status":"M"},{"authorDate":"2020-06-18 11:52:35","commitOrder":4,"curCode":"\tpublic void testInsertPartitionWithValuesSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\ttableEnv.executeSql(\"insert into dest partition (p1=1) values(1, 'a')\").await();\n\t\tList<Row> results = CollectionUtil.iteratorToList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","date":"2020-09-07 17:37:11","endLine":695,"groupId":"22162","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertPartitionWithValuesSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/eb/a78e46f7d09421f8fc542dc159fc09b0f1d42e.src","preCode":"\tpublic void testInsertPartitionWithValuesSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\ttableEnv.executeSql(\"insert into dest partition (p1=1) values(1, 'a')\").await();\n\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":688,"status":"M"}],"commitId":"91d2b628bfe1a2e7beed5111a6d9a572cc6bc310","commitMessage":"@@@[hotfix][table][connector] Use CollectionUtil#iteratorToList instead of Guava Lists\n","date":"2020-09-07 17:37:11","modifiedFileCount":"18","status":"M","submitter":"godfreyhe"},{"authorTime":"2020-06-18 11:52:35","codes":[{"authorDate":"2020-11-24 10:53:43","commitOrder":5,"curCode":"\tpublic void testInsertPartitionWithStarSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n\t\tHiveTestUtils.createTextTableInserter(\n\t\t\t\thiveCatalog,\n\t\t\t\t\"default\",\n\t\t\t\t\"src\")\n\t\t\t\t.addRow(new Object[]{1, \"a\"})\n\t\t\t\t.commit();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\ttableEnv.executeSql(\"insert into dest partition (p1=1) select * from src\").await();\n\t\tList<Row> results = CollectionUtil.iteratorToList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists src\");\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","date":"2020-11-24 10:53:43","endLine":323,"groupId":"22161","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testInsertPartitionWithStarSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8d/cb8d6ca77f3a83051b12bf71e1bc1978360015.src","preCode":"\tpublic void testInsertPartitionWithStarSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n\t\tHiveTestUtils.createTextTableInserter(\n\t\t\t\thiveShell,\n\t\t\t\t\"default\",\n\t\t\t\t\"src\")\n\t\t\t\t.addRow(new Object[]{1, \"a\"})\n\t\t\t\t.commit();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\ttableEnv.executeSql(\"insert into dest partition (p1=1) select * from src\").await();\n\t\tList<Row> results = CollectionUtil.iteratorToList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists src\");\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"M"},{"authorDate":"2020-06-18 11:52:35","commitOrder":5,"curCode":"\tpublic void testInsertPartitionWithValuesSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\ttableEnv.executeSql(\"insert into dest partition (p1=1) values(1, 'a')\").await();\n\t\tList<Row> results = CollectionUtil.iteratorToList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","date":"2020-09-07 17:37:11","endLine":695,"groupId":"22162","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertPartitionWithValuesSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/eb/a78e46f7d09421f8fc542dc159fc09b0f1d42e.src","preCode":"\tpublic void testInsertPartitionWithValuesSource() throws Exception {\n\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n\t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n\t\ttableEnv.executeSql(\"insert into dest partition (p1=1) values(1, 'a')\").await();\n\t\tList<Row> results = CollectionUtil.iteratorToList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n\t\tassertEquals(\"[1,1,a]\", results.toString());\n\t\ttableEnv.executeSql(\"drop table if exists dest\");\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":688,"status":"N"}],"commitId":"e9b05e723fb02d9a6dae607ef28244eca6e9edc8","commitMessage":"@@@[FLINK-19653][hive] Reduce our dependency on hive runner for tests\n\nThis closes #14123","date":"2020-11-24 10:53:43","modifiedFileCount":"8","status":"M","submitter":"Rui Li"},{"authorTime":"2020-12-18 18:32:55","codes":[{"authorDate":"2020-12-18 18:32:55","commitOrder":6,"curCode":"    public void testInsertPartitionWithStarSource() throws Exception {\n        TableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n        tableEnv.executeSql(\"create table src (x int,y string)\");\n        HiveTestUtils.createTextTableInserter(hiveCatalog, \"default\", \"src\")\n                .addRow(new Object[] {1, \"a\"})\n                .commit();\n        tableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n        tableEnv.executeSql(\"insert into dest partition (p1=1) select * from src\").await();\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n        assertEquals(\"[+I[1, 1, a]]\", results.toString());\n        tableEnv.executeSql(\"drop table if exists src\");\n        tableEnv.executeSql(\"drop table if exists dest\");\n    }\n","date":"2021-01-08 00:17:30","endLine":408,"groupId":"22161","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testInsertPartitionWithStarSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/87/4a34002cdd8daefba0f52f20d0dc4a047cf3ad.src","preCode":"    public void testInsertPartitionWithStarSource() throws Exception {\n        TableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n        tableEnv.executeSql(\"create table src (x int,y string)\");\n        HiveTestUtils.createTextTableInserter(hiveCatalog, \"default\", \"src\")\n                .addRow(new Object[] {1, \"a\"})\n                .commit();\n        tableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n        tableEnv.executeSql(\"insert into dest partition (p1=1) select * from src\").await();\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n        assertEquals(\"[1,1,a]\", results.toString());\n        tableEnv.executeSql(\"drop table if exists src\");\n        tableEnv.executeSql(\"drop table if exists dest\");\n    }\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"M"},{"authorDate":"2020-12-18 18:32:55","commitOrder":6,"curCode":"    public void testInsertPartitionWithValuesSource() throws Exception {\n        TableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n        tableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n        tableEnv.executeSql(\"insert into dest partition (p1=1) values(1, 'a')\").await();\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n        assertEquals(\"[+I[1, 1, a]]\", results.toString());\n        tableEnv.executeSql(\"drop table if exists dest\");\n    }\n","date":"2021-01-08 00:17:30","endLine":420,"groupId":"22162","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertPartitionWithValuesSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/87/4a34002cdd8daefba0f52f20d0dc4a047cf3ad.src","preCode":"    public void testInsertPartitionWithValuesSource() throws Exception {\n        TableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n        tableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n        tableEnv.executeSql(\"insert into dest partition (p1=1) values(1, 'a')\").await();\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n        assertEquals(\"[1,1,a]\", results.toString());\n        tableEnv.executeSql(\"drop table if exists dest\");\n    }\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"M"}],"commitId":"73cdd3d0d9f6a807b3e47c09eef7983c9aa180c7","commitMessage":"@@@[FLINK-18090] Update tests for new Row.toString\n\nAll tests in modules apart from the Blink planner/runtime\nmodule have been updated.\n\nOtherwise we use a JUnit rule to make the migration of\nthe remaining tests incremental.\n\nThis closes #14568.\n","date":"2021-01-08 00:17:30","modifiedFileCount":"34","status":"M","submitter":"Timo Walther"},{"authorTime":"2021-03-30 21:56:18","codes":[{"authorDate":"2021-03-30 21:56:18","commitOrder":7,"curCode":"    public void testInsertPartitionWithStarSource() throws Exception {\n        TableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n        tableEnv.executeSql(\"create table src (x int,y string)\");\n        HiveTestUtils.createTextTableInserter(hiveCatalog, \"default\", \"src\")\n                .addRow(new Object[] {1, \"a\"})\n                .commit();\n        tableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n        tableEnv.executeSql(\"insert into dest partition (p1=1,p2) select * from src\").await();\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n        assertEquals(\"[+I[1, 1, a]]\", results.toString());\n        tableEnv.executeSql(\"drop table if exists src\");\n        tableEnv.executeSql(\"drop table if exists dest\");\n    }\n","date":"2021-04-01 10:31:50","endLine":408,"groupId":"101083","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testInsertPartitionWithStarSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/86/0bc42d1db84f5ce7ce6efdae6c4f50d195936b.src","preCode":"    public void testInsertPartitionWithStarSource() throws Exception {\n        TableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n        tableEnv.executeSql(\"create table src (x int,y string)\");\n        HiveTestUtils.createTextTableInserter(hiveCatalog, \"default\", \"src\")\n                .addRow(new Object[] {1, \"a\"})\n                .commit();\n        tableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n        tableEnv.executeSql(\"insert into dest partition (p1=1) select * from src\").await();\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n        assertEquals(\"[+I[1, 1, a]]\", results.toString());\n        tableEnv.executeSql(\"drop table if exists src\");\n        tableEnv.executeSql(\"drop table if exists dest\");\n    }\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"M"},{"authorDate":"2021-03-30 21:56:18","commitOrder":7,"curCode":"    public void testInsertPartitionWithValuesSource() throws Exception {\n        TableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n        tableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n        tableEnv.executeSql(\"insert into dest partition (p1=1,p2) values(1, 'a')\").await();\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n        assertEquals(\"[+I[1, 1, a]]\", results.toString());\n        tableEnv.executeSql(\"drop table if exists dest\");\n    }\n","date":"2021-04-01 10:31:50","endLine":420,"groupId":"101083","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertPartitionWithValuesSource","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/86/0bc42d1db84f5ce7ce6efdae6c4f50d195936b.src","preCode":"    public void testInsertPartitionWithValuesSource() throws Exception {\n        TableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n        tableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n        tableEnv.executeSql(\"insert into dest partition (p1=1) values(1, 'a')\").await();\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n        assertEquals(\"[+I[1, 1, a]]\", results.toString());\n        tableEnv.executeSql(\"drop table if exists dest\");\n    }\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"M"}],"commitId":"04bbf03a0cdb2f455c1b06569dea95ace6fa7e7c","commitMessage":"@@@[FLINK-21808][hive] Support DQL/DML in HiveParser\n\nThis closes #15253\n","date":"2021-04-01 10:31:50","modifiedFileCount":"21","status":"M","submitter":"Rui Li"}]
