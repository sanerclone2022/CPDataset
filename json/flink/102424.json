[{"authorTime":"2020-10-19 21:09:56","codes":[{"authorDate":"2020-10-19 21:09:56","commitOrder":5,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, KubernetesSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tfinal Configuration dynamicParameters = ClusterEntrypointUtils.parseParametersOrExit(\n\t\t\targs,\n\t\t\tnew DynamicParametersConfigurationParserFactory(),\n\t\t\tKubernetesSessionClusterEntrypoint.class);\n\t\tfinal ClusterEntrypoint entrypoint = new KubernetesSessionClusterEntrypoint(\n\t\t\tKubernetesEntrypointUtils.loadConfiguration(dynamicParameters));\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","date":"2020-11-05 01:07:21","endLine":60,"groupId":"16353","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/44/da5ef2bdffdee2b2b8ae18020eed552dddf53e.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, KubernetesSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tfinal Configuration dynamicParameters = ClusterEntrypointUtils.parseParametersOrExit(\n\t\t\targs,\n\t\t\tnew DynamicParametersConfigurationParserFactory(),\n\t\t\tKubernetesSessionClusterEntrypoint.class);\n\t\tfinal ClusterEntrypoint entrypoint = new KubernetesSessionClusterEntrypoint(\n\t\t\tKubernetesEntrypointUtils.loadConfiguration(dynamicParameters));\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/entrypoint/KubernetesSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"MB"},{"authorDate":"2020-10-19 21:09:56","commitOrder":5,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneApplicationClusterEntryPoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tfinal StandaloneApplicationClusterConfiguration clusterConfiguration = ClusterEntrypointUtils.parseParametersOrExit(\n\t\t\targs,\n\t\t\tnew StandaloneApplicationClusterConfigurationParserFactory(),\n\t\t\tStandaloneApplicationClusterEntryPoint.class);\n\n\t\tPackagedProgram program = null;\n\t\ttry {\n\t\t\tprogram = getPackagedProgram(clusterConfiguration);\n\t\t} catch (Exception e) {\n\t\t\tLOG.error(\"Could not create application program.\", e);\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfigurationFromClusterConfig(clusterConfiguration);\n\t\ttry {\n\t\t\tconfigureExecution(configuration, program);\n\t\t} catch (Exception e) {\n\t\t\tLOG.error(\"Could not apply application configuration.\", e);\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tStandaloneApplicationClusterEntryPoint entrypoint = new StandaloneApplicationClusterEntryPoint(configuration, program);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","date":"2020-11-05 01:07:21","endLine":87,"groupId":"18137","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c1/21ecb27ec42f599d6c494d4b632dadb411d23f.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneApplicationClusterEntryPoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tfinal StandaloneApplicationClusterConfiguration clusterConfiguration = ClusterEntrypointUtils.parseParametersOrExit(\n\t\t\targs,\n\t\t\tnew StandaloneApplicationClusterConfigurationParserFactory(),\n\t\t\tStandaloneApplicationClusterEntryPoint.class);\n\n\t\tPackagedProgram program = null;\n\t\ttry {\n\t\t\tprogram = getPackagedProgram(clusterConfiguration);\n\t\t} catch (Exception e) {\n\t\t\tLOG.error(\"Could not create application program.\", e);\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfigurationFromClusterConfig(clusterConfiguration);\n\t\ttry {\n\t\t\tconfigureExecution(configuration, program);\n\t\t} catch (Exception e) {\n\t\t\tLOG.error(\"Could not apply application configuration.\", e);\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tStandaloneApplicationClusterEntryPoint entrypoint = new StandaloneApplicationClusterEntryPoint(configuration, program);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","realPath":"flink-container/src/main/java/org/apache/flink/container/entrypoint/StandaloneApplicationClusterEntryPoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"MB"}],"commitId":"0a51d85255b9c7480eb5e939d88e9ccc5e98af69","commitMessage":"@@@[FLINK-19662][runtime][kubernetes][yarn][dist] Added dynamic parameters to BashJavaUtils' JobManager argument extraction. Additionally.  the Kubernetes and Yarn deployment were extended accordingly.\n\nThe parameters are returned using the newly introduced global environment variable DYNAMIC_PARAMETERS.\n","date":"2020-11-05 01:07:21","modifiedFileCount":"17","status":"M","submitter":"Matthias Pohl"},{"authorTime":"2021-06-25 15:37:50","codes":[{"authorDate":"2020-10-19 21:09:56","commitOrder":6,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, KubernetesSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tfinal Configuration dynamicParameters = ClusterEntrypointUtils.parseParametersOrExit(\n\t\t\targs,\n\t\t\tnew DynamicParametersConfigurationParserFactory(),\n\t\t\tKubernetesSessionClusterEntrypoint.class);\n\t\tfinal ClusterEntrypoint entrypoint = new KubernetesSessionClusterEntrypoint(\n\t\t\tKubernetesEntrypointUtils.loadConfiguration(dynamicParameters));\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","date":"2020-11-05 01:07:21","endLine":60,"groupId":"102424","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/44/da5ef2bdffdee2b2b8ae18020eed552dddf53e.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, KubernetesSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tfinal Configuration dynamicParameters = ClusterEntrypointUtils.parseParametersOrExit(\n\t\t\targs,\n\t\t\tnew DynamicParametersConfigurationParserFactory(),\n\t\t\tKubernetesSessionClusterEntrypoint.class);\n\t\tfinal ClusterEntrypoint entrypoint = new KubernetesSessionClusterEntrypoint(\n\t\t\tKubernetesEntrypointUtils.loadConfiguration(dynamicParameters));\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/entrypoint/KubernetesSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2021-06-25 15:37:50","commitOrder":6,"curCode":"    public static void main(String[] args) {\n        \r\n        EnvironmentInformation.logEnvironmentInfo(\n                LOG, StandaloneApplicationClusterEntryPoint.class.getSimpleName(), args);\n        SignalHandler.register(LOG);\n        JvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n        final StandaloneApplicationClusterConfiguration clusterConfiguration =\n                ClusterEntrypointUtils.parseParametersOrExit(\n                        args,\n                        new StandaloneApplicationClusterConfigurationParserFactory(),\n                        StandaloneApplicationClusterEntryPoint.class);\n\n        Configuration configuration = loadConfigurationFromClusterConfig(clusterConfiguration);\n        PackagedProgram program = null;\n        try {\n            program = getPackagedProgram(clusterConfiguration, configuration);\n        } catch (Exception e) {\n            LOG.error(\"Could not create application program.\", e);\n            System.exit(1);\n        }\n\n        try {\n            configureExecution(configuration, program);\n        } catch (Exception e) {\n            LOG.error(\"Could not apply application configuration.\", e);\n            System.exit(1);\n        }\n\n        StandaloneApplicationClusterEntryPoint entrypoint =\n                new StandaloneApplicationClusterEntryPoint(configuration, program);\n\n        ClusterEntrypoint.runClusterEntrypoint(entrypoint);\n    }\n","date":"2021-07-06 19:07:43","endLine":83,"groupId":"102424","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/96/7650bda86dd54c311688e67fc4d77167ed5dd2.src","preCode":"    public static void main(String[] args) {\n        \r\n        EnvironmentInformation.logEnvironmentInfo(\n                LOG, StandaloneApplicationClusterEntryPoint.class.getSimpleName(), args);\n        SignalHandler.register(LOG);\n        JvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n        final StandaloneApplicationClusterConfiguration clusterConfiguration =\n                ClusterEntrypointUtils.parseParametersOrExit(\n                        args,\n                        new StandaloneApplicationClusterConfigurationParserFactory(),\n                        StandaloneApplicationClusterEntryPoint.class);\n\n        PackagedProgram program = null;\n        try {\n            program = getPackagedProgram(clusterConfiguration);\n        } catch (Exception e) {\n            LOG.error(\"Could not create application program.\", e);\n            System.exit(1);\n        }\n\n        Configuration configuration = loadConfigurationFromClusterConfig(clusterConfiguration);\n        try {\n            configureExecution(configuration, program);\n        } catch (Exception e) {\n            LOG.error(\"Could not apply application configuration.\", e);\n            System.exit(1);\n        }\n\n        StandaloneApplicationClusterEntryPoint entrypoint =\n                new StandaloneApplicationClusterEntryPoint(configuration, program);\n\n        ClusterEntrypoint.runClusterEntrypoint(entrypoint);\n    }\n","realPath":"flink-container/src/main/java/org/apache/flink/container/entrypoint/StandaloneApplicationClusterEntryPoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"012dc6a9b800bae0cfa5250d38de992ccbabc015","commitMessage":"@@@[FLINK-21445][clients] Adds configuration parameter to DefaultPackagedProgramRetriever\n\nThis is the actual fix for FLINK-21445.\n","date":"2021-07-06 19:07:43","modifiedFileCount":"5","status":"M","submitter":"Matthias Pohl"}]
