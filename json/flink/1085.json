[{"authorTime":"2018-06-12 23:24:20","codes":[{"authorDate":"2018-06-13 16:24:10","commitOrder":3,"curCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tclear();\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\n\t\t\t\tbyte[] premerge = getPreMergedValue(values);\n\t\t\t\tif (premerge != null) {\n\t\t\t\t\tbackend.db.put(columnFamily, writeOptions, key, premerge);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new IOException(\"Failed pre-merge values in update()\");\n\t\t\t\t}\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","date":"2018-06-18 20:41:50","endLine":216,"groupId":"41324","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"updateInternal","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/03/faa44273705baa9064ac169c53573f0155a2db.src","preCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tclear();\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\n\t\t\t\tbyte[] premerge = getPreMergedValue(values);\n\t\t\t\tif (premerge != null) {\n\t\t\t\t\tbackend.db.put(columnFamily, writeOptions, key, premerge);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new IOException(\"Failed pre-merge values in update()\");\n\t\t\t\t}\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"B"},{"authorDate":"2018-06-12 23:24:20","commitOrder":3,"curCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\n\t\t\t\tbyte[] premerge = getPreMergedValue(values);\n\t\t\t\tif (premerge != null) {\n\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, key, premerge);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new IOException(\"Failed pre-merge values in addAll()\");\n\t\t\t\t}\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","date":"2018-06-14 17:40:16","endLine":227,"groupId":"53114","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3b/273166e844eb71362469f1331694f05bef8c16.src","preCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\n\t\t\t\tbyte[] premerge = getPreMergedValue(values);\n\t\t\t\tif (premerge != null) {\n\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, key, premerge);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new IOException(\"Failed pre-merge values in addAll()\");\n\t\t\t\t}\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"NB"}],"commitId":"0bdde8377c254195fe94709d639bf03f9bd77606","commitMessage":"@@@[FLINK-9571] Repace StateBinder with internal backend-specific state factories\n\nThis closes #6173.\n","date":"2018-06-18 20:41:50","modifiedFileCount":"42","status":"M","submitter":"Andrey Zagrebin"},{"authorTime":"2018-08-04 00:18:07","codes":[{"authorDate":"2018-08-04 00:18:07","commitOrder":4,"curCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tclear();\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, keySerializationStream);\n\t\t\t\tif (premerge != null) {\n\t\t\t\t\tbackend.db.put(columnFamily, writeOptions, key, premerge);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new IOException(\"Failed pre-merge values in update()\");\n\t\t\t\t}\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","date":"2018-08-04 01:40:24","endLine":240,"groupId":"41324","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"updateInternal","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/17/6f48cda98668eb5b583aa2c8bfd42886c1e401.src","preCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tclear();\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\n\t\t\t\tbyte[] premerge = getPreMergedValue(values);\n\t\t\t\tif (premerge != null) {\n\t\t\t\t\tbackend.db.put(columnFamily, writeOptions, key, premerge);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new IOException(\"Failed pre-merge values in update()\");\n\t\t\t\t}\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"},{"authorDate":"2018-08-04 00:18:07","commitOrder":4,"curCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, keySerializationStream);\n\t\t\t\tif (premerge != null) {\n\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, key, premerge);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new IOException(\"Failed pre-merge values in addAll()\");\n\t\t\t\t}\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","date":"2018-08-04 01:40:24","endLine":261,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/17/6f48cda98668eb5b583aa2c8bfd42886c1e401.src","preCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\n\t\t\t\tbyte[] premerge = getPreMergedValue(values);\n\t\t\t\tif (premerge != null) {\n\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, key, premerge);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new IOException(\"Failed pre-merge values in addAll()\");\n\t\t\t\t}\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"M"}],"commitId":"ce96c409148d1a9bc40f581e13900818b5f11f6a","commitMessage":"@@@[FLINK-9938][state] Clean up full snapshot from expired state with TTL\n\nThis closes #6460.\n","date":"2018-08-04 01:40:24","modifiedFileCount":"28","status":"M","submitter":"Andrey Zagrebin"},{"authorTime":"2018-08-11 02:06:58","codes":[{"authorDate":"2018-08-11 02:06:58","commitOrder":5,"curCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tclear();\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = dataOutputView.toByteArray();\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, dataOutputView);\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, key, premerge);\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","date":"2018-08-11 02:07:56","endLine":228,"groupId":"42380","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"updateInternal","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/cd/d7afb7d9a22ea09728137c3741e85509156f09.src","preCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tclear();\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, keySerializationStream);\n\t\t\t\tif (premerge != null) {\n\t\t\t\t\tbackend.db.put(columnFamily, writeOptions, key, premerge);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new IOException(\"Failed pre-merge values in update()\");\n\t\t\t\t}\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"M"},{"authorDate":"2018-08-11 02:06:58","commitOrder":5,"curCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = dataOutputView.toByteArray();\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, dataOutputView);\n\t\t\t\tbackend.db.merge(columnFamily, writeOptions, key, premerge);\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","date":"2018-08-11 02:07:56","endLine":244,"groupId":"42379","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/cd/d7afb7d9a22ea09728137c3741e85509156f09.src","preCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = keySerializationStream.toByteArray();\n\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, keySerializationStream);\n\t\t\t\tif (premerge != null) {\n\t\t\t\t\tbackend.db.merge(columnFamily, writeOptions, key, premerge);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new IOException(\"Failed pre-merge values in addAll()\");\n\t\t\t\t}\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"}],"commitId":"18ff4ab8e55d76522f835cc683f57252b3f742bc","commitMessage":"@@@[FLINK-10124][state] Use ByteArrayDataInput/OutputView instead of stream + wrapper\n","date":"2018-08-11 02:07:56","modifiedFileCount":"12","status":"M","submitter":"Stefan Richter"},{"authorTime":"2018-08-22 19:31:49","codes":[{"authorDate":"2018-08-22 19:31:49","commitOrder":6,"curCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tclear();\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = dataOutputView.getCopyOfBuffer();\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, dataOutputView);\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, key, premerge);\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","date":"2018-08-22 19:33:25","endLine":227,"groupId":"42380","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"updateInternal","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f7/0c6a57bad607c2c07f0f347ed31038fb4fcffd.src","preCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tclear();\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = dataOutputView.toByteArray();\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, dataOutputView);\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, key, premerge);\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"M"},{"authorDate":"2018-08-22 19:31:49","commitOrder":6,"curCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = dataOutputView.getCopyOfBuffer();\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, dataOutputView);\n\t\t\t\tbackend.db.merge(columnFamily, writeOptions, key, premerge);\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","date":"2018-08-22 19:33:25","endLine":243,"groupId":"42379","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f7/0c6a57bad607c2c07f0f347ed31038fb4fcffd.src","preCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = dataOutputView.toByteArray();\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, dataOutputView);\n\t\t\t\tbackend.db.merge(columnFamily, writeOptions, key, premerge);\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"}],"commitId":"3fd6587208a16940eab327ed37fa4e23d0b7eb62","commitMessage":"@@@[FLINK-10176][state] Replace ByteArrayData[Input|Output]View with (enhanced) Data[Output|InputDe]Serializer\n\nThis closes #6583.\n","date":"2018-08-22 19:33:25","modifiedFileCount":"20","status":"M","submitter":"Stefan Richter"},{"authorTime":"2018-11-27 13:51:29","codes":[{"authorDate":"2018-11-27 13:51:29","commitOrder":7,"curCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tclear();\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\tbackend.db.put(\n\t\t\t\t\tcolumnFamily,\n\t\t\t\t\twriteOptions,\n\t\t\t\t\tserializeCurrentKeyWithGroupAndNamespace(),\n\t\t\t\t\tserializeValueList(values, elementSerializer, DELIMITER));\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","date":"2019-01-07 19:59:38","endLine":226,"groupId":"5655","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"updateInternal","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/13/f5559405e8bf856830a0009e0434ee3a66dc6e.src","preCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tclear();\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = dataOutputView.getCopyOfBuffer();\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, dataOutputView);\n\t\t\t\tbackend.db.put(columnFamily, writeOptions, key, premerge);\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"},{"authorDate":"2018-11-27 13:51:29","commitOrder":7,"curCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\tbackend.db.merge(\n\t\t\t\t\tcolumnFamily,\n\t\t\t\t\twriteOptions,\n\t\t\t\t\tserializeCurrentKeyWithGroupAndNamespace(),\n\t\t\t\t\tserializeValueList(values, elementSerializer, DELIMITER));\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","date":"2019-01-07 19:59:38","endLine":243,"groupId":"23026","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/13/f5559405e8bf856830a0009e0434ee3a66dc6e.src","preCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\twriteCurrentKeyWithGroupAndNamespace();\n\t\t\t\tbyte[] key = dataOutputView.getCopyOfBuffer();\n\t\t\t\tbyte[] premerge = getPreMergedValue(values, elementSerializer, dataOutputView);\n\t\t\t\tbackend.db.merge(columnFamily, writeOptions, key, premerge);\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"}],"commitId":"54ef382439b1687a645a377a5f6a095746423109","commitMessage":"@@@[FLINK-9702] Improvement in (de)serialization of keys and values for RocksDB state\n\nThis closes #7288.\n\nCo-authored-by: Stefan Richter <s.richter@data-artisans.com>\nCo-authored-by: klion26 <qcx978132955@gmail.com>\n","date":"2019-01-07 19:59:38","modifiedFileCount":"10","status":"M","submitter":"Stefan Richter"},{"authorTime":"2018-11-27 13:51:29","codes":[{"authorDate":"2019-04-29 16:15:49","commitOrder":8,"curCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\tbackend.db.put(\n\t\t\t\t\tcolumnFamily,\n\t\t\t\t\twriteOptions,\n\t\t\t\t\tserializeCurrentKeyWithGroupAndNamespace(),\n\t\t\t\t\tserializeValueList(values, elementSerializer, DELIMITER));\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t} else {\n\t\t\tclear();\n\t\t}\n\t}\n","date":"2019-04-29 16:15:48","endLine":225,"groupId":"5655","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"updateInternal","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/03/a68b23f87c9c196233f94dd7c505c185778e4b.src","preCode":"\tpublic void updateInternal(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tclear();\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\tbackend.db.put(\n\t\t\t\t\tcolumnFamily,\n\t\t\t\t\twriteOptions,\n\t\t\t\t\tserializeCurrentKeyWithGroupAndNamespace(),\n\t\t\t\t\tserializeValueList(values, elementSerializer, DELIMITER));\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"},{"authorDate":"2018-11-27 13:51:29","commitOrder":8,"curCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\tbackend.db.merge(\n\t\t\t\t\tcolumnFamily,\n\t\t\t\t\twriteOptions,\n\t\t\t\t\tserializeCurrentKeyWithGroupAndNamespace(),\n\t\t\t\t\tserializeValueList(values, elementSerializer, DELIMITER));\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","date":"2019-01-07 19:59:38","endLine":243,"groupId":"23026","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/13/f5559405e8bf856830a0009e0434ee3a66dc6e.src","preCode":"\tpublic void addAll(List<V> values) {\n\t\tPreconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n\t\tif (!values.isEmpty()) {\n\t\t\ttry {\n\t\t\t\tbackend.db.merge(\n\t\t\t\t\tcolumnFamily,\n\t\t\t\t\twriteOptions,\n\t\t\t\t\tserializeCurrentKeyWithGroupAndNamespace(),\n\t\t\t\t\tserializeValueList(values, elementSerializer, DELIMITER));\n\t\t\t} catch (IOException | RocksDBException e) {\n\t\t\t\tthrow new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"N"}],"commitId":"03faeb9bfbc388666cf62dc2e972ee21c1370031","commitMessage":"@@@[FLINK-11167] Optimize RocksDBListState#put by removing the clear before every put operation\n\nThis closes #7421.\n\nDifferential Revision: https://aone.alibaba-inc.com/code/D816268","date":"2019-04-29 16:15:48","modifiedFileCount":"1","status":"M","submitter":"Congxian Qiu"},{"authorTime":"2021-01-28 21:04:06","codes":[{"authorDate":"2021-01-28 21:04:06","commitOrder":9,"curCode":"    public void updateInternal(List<V> values) {\n        Preconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n        if (!values.isEmpty()) {\n            try {\n                backend.db.put(\n                        columnFamily,\n                        writeOptions,\n                        serializeCurrentKeyWithGroupAndNamespace(),\n                        listSerializer.serializeList(values, elementSerializer));\n            } catch (IOException | RocksDBException e) {\n                throw new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n            }\n        } else {\n            clear();\n        }\n    }\n","date":"2021-02-06 01:38:46","endLine":193,"groupId":"1085","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"updateInternal","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8b/cecc71a6aef9dd92604e75f484817db6b274c8.src","preCode":"    public void updateInternal(List<V> values) {\n        Preconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n        if (!values.isEmpty()) {\n            try {\n                backend.db.put(\n                        columnFamily,\n                        writeOptions,\n                        serializeCurrentKeyWithGroupAndNamespace(),\n                        serializeValueList(values, elementSerializer, DELIMITER));\n            } catch (IOException | RocksDBException e) {\n                throw new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n            }\n        } else {\n            clear();\n        }\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2021-01-28 21:04:06","commitOrder":9,"curCode":"    public void addAll(List<V> values) {\n        Preconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n        if (!values.isEmpty()) {\n            try {\n                backend.db.merge(\n                        columnFamily,\n                        writeOptions,\n                        serializeCurrentKeyWithGroupAndNamespace(),\n                        listSerializer.serializeList(values, elementSerializer));\n            } catch (IOException | RocksDBException e) {\n                throw new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n            }\n        }\n    }\n","date":"2021-02-06 01:38:46","endLine":210,"groupId":"1085","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(List<V>values)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8b/cecc71a6aef9dd92604e75f484817db6b274c8.src","preCode":"    public void addAll(List<V> values) {\n        Preconditions.checkNotNull(values, \"List of values to add cannot be null.\");\n\n        if (!values.isEmpty()) {\n            try {\n                backend.db.merge(\n                        columnFamily,\n                        writeOptions,\n                        serializeCurrentKeyWithGroupAndNamespace(),\n                        serializeValueList(values, elementSerializer, DELIMITER));\n            } catch (IOException | RocksDBException e) {\n                throw new FlinkRuntimeException(\"Error while updating data to RocksDB\", e);\n            }\n        }\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"aae75bfe3cc16c56aa3a35b21b3698cbf7d7d209","commitMessage":"@@@[refactor] Extract common logic for serializing delimited list\n","date":"2021-02-06 01:38:46","modifiedFileCount":"2","status":"M","submitter":"Dawid Wysakowicz"}]
