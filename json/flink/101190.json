[{"authorTime":"2018-04-26 21:58:09","codes":[{"authorDate":"2017-03-17 00:03:03","commitOrder":3,"curCode":"\tprivate static void runConnectedComponents(ExecutionEnvironment env) throws Exception {\n\t\t\n\t\tenv.setParallelism(PARALLELISM);\n\t\tenv.getConfig().disableSysoutLogging();\n\n\t\t\r\n\t\tDataSet<Long> vertices = ConnectedComponentsData.getDefaultVertexDataSet(env)\n\t\t\t\t.rebalance();\n\n\t\tDataSet<Tuple2<Long, Long>> edges = ConnectedComponentsData.getDefaultEdgeDataSet(env)\n\t\t\t\t.rebalance()\n\t\t\t\t.flatMap(new ConnectedComponents.UndirectEdge());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> verticesWithInitialId = vertices\n\t\t\t\t.map(new ConnectedComponents.DuplicateValue<Long>());\n\n\t\t\r\n\t\tDeltaIteration<Tuple2<Long, Long>, Tuple2<Long, Long>> iteration =\n\t\t\t\tverticesWithInitialId.iterateDelta(verticesWithInitialId, 100, 0);\n\n\t\t\r\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> changes = iteration.getWorkset().join(edges)\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.NeighborWithComponentIDJoin())\n\n\t\t\t\t.groupBy(0).aggregate(Aggregations.MIN, 1)\n\n\t\t\t\t.join(iteration.getSolutionSet())\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.ComponentIdFilter());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> result = iteration.closeWith(changes, changes);\n\n\t\tresult.output(new DiscardingOutputFormat<Tuple2<Long, Long>>());\n\n\t\tenv.execute();\n\t}\n","date":"2017-05-05 17:06:07","endLine":138,"groupId":"10809","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"runConnectedComponents","params":"(ExecutionEnvironmentenv)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a5/103cc22b802e06da722deadf8b05e0342d978c.src","preCode":"\tprivate static void runConnectedComponents(ExecutionEnvironment env) throws Exception {\n\t\t\n\t\tenv.setParallelism(PARALLELISM);\n\t\tenv.getConfig().disableSysoutLogging();\n\n\t\t\r\n\t\tDataSet<Long> vertices = ConnectedComponentsData.getDefaultVertexDataSet(env)\n\t\t\t\t.rebalance();\n\n\t\tDataSet<Tuple2<Long, Long>> edges = ConnectedComponentsData.getDefaultEdgeDataSet(env)\n\t\t\t\t.rebalance()\n\t\t\t\t.flatMap(new ConnectedComponents.UndirectEdge());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> verticesWithInitialId = vertices\n\t\t\t\t.map(new ConnectedComponents.DuplicateValue<Long>());\n\n\t\t\r\n\t\tDeltaIteration<Tuple2<Long, Long>, Tuple2<Long, Long>> iteration =\n\t\t\t\tverticesWithInitialId.iterateDelta(verticesWithInitialId, 100, 0);\n\n\t\t\r\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> changes = iteration.getWorkset().join(edges)\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.NeighborWithComponentIDJoin())\n\n\t\t\t\t.groupBy(0).aggregate(Aggregations.MIN, 1)\n\n\t\t\t\t.join(iteration.getSolutionSet())\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.ComponentIdFilter());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> result = iteration.closeWith(changes, changes);\n\n\t\tresult.output(new DiscardingOutputFormat<Tuple2<Long, Long>>());\n\n\t\tenv.execute();\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/misc/SuccessAfterNetworkBuffersFailureITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"NB"},{"authorDate":"2018-04-26 21:58:09","commitOrder":3,"curCode":"\tpublic static void main(String[] args) throws Exception {\n\t\tExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n\t\tenv.getConfig().disableSysoutLogging();\n\n\t\t\r\n\t\tDataSet<Long> vertices = ConnectedComponentsData.getDefaultVertexDataSet(env)\n\t\t\t\t.rebalance();\n\n\t\tDataSet<Tuple2<Long, Long>> edges = ConnectedComponentsData.getDefaultEdgeDataSet(env)\n\t\t\t\t.rebalance()\n\t\t\t\t.flatMap(new ConnectedComponents.UndirectEdge());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> verticesWithInitialId = vertices\n\t\t\t\t.map(new ConnectedComponents.DuplicateValue<>());\n\n\t\t\r\n\t\tDeltaIteration<Tuple2<Long, Long>, Tuple2<Long, Long>> iteration =\n\t\t\t\tverticesWithInitialId.iterateDelta(verticesWithInitialId, 100, 0);\n\n\t\t\r\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> changes = iteration.getWorkset().join(edges)\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.NeighborWithComponentIDJoin())\n\n\t\t\t\t.groupBy(0).aggregate(Aggregations.MIN, 1)\n\n\t\t\t\t.join(iteration.getSolutionSet())\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.ComponentIdFilter());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> result = iteration.closeWith(changes, changes);\n\n\t\tresult.output(new DiscardingOutputFormat<>());\n\n\t\tenv.execute();\n\t}\n","date":"2018-05-04 21:41:00","endLine":74,"groupId":"10809","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/44/b7b5daa2d7fa6180a885c8f9fb328a720d0285.src","preCode":"\tpublic static void main(String[] args) throws Exception {\n\t\tExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n\t\tenv.getConfig().disableSysoutLogging();\n\n\t\t\r\n\t\tDataSet<Long> vertices = ConnectedComponentsData.getDefaultVertexDataSet(env)\n\t\t\t\t.rebalance();\n\n\t\tDataSet<Tuple2<Long, Long>> edges = ConnectedComponentsData.getDefaultEdgeDataSet(env)\n\t\t\t\t.rebalance()\n\t\t\t\t.flatMap(new ConnectedComponents.UndirectEdge());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> verticesWithInitialId = vertices\n\t\t\t\t.map(new ConnectedComponents.DuplicateValue<>());\n\n\t\t\r\n\t\tDeltaIteration<Tuple2<Long, Long>, Tuple2<Long, Long>> iteration =\n\t\t\t\tverticesWithInitialId.iterateDelta(verticesWithInitialId, 100, 0);\n\n\t\t\r\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> changes = iteration.getWorkset().join(edges)\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.NeighborWithComponentIDJoin())\n\n\t\t\t\t.groupBy(0).aggregate(Aggregations.MIN, 1)\n\n\t\t\t\t.join(iteration.getSolutionSet())\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.ComponentIdFilter());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> result = iteration.closeWith(changes, changes);\n\n\t\tresult.output(new DiscardingOutputFormat<>());\n\n\t\tenv.execute();\n\t}\n","realPath":"flink-end-to-end-tests/flink-high-parallelism-iterations-test/src/main/java/org/apache/flink/batch/HighParallelismIterationsTestProgram.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"}],"commitId":"b50cebb6569b40112f1e2849b1d283a175b1cc3a","commitMessage":"@@@[FLINK-9254] Move NotSoMiniClusterIterations to be an end-to-end test\n\nThis closes #5921.\n","date":"2018-05-04 21:41:00","modifiedFileCount":"0","status":"M","submitter":"Andrey Zagrebin"},{"authorTime":"2019-08-21 16:38:00","codes":[{"authorDate":"2019-08-21 16:38:00","commitOrder":4,"curCode":"\tprivate static void runConnectedComponents(ExecutionEnvironment env) throws Exception {\n\n\t\tenv.setParallelism(PARALLELISM);\n\n\t\t\r\n\t\tDataSet<Long> vertices = ConnectedComponentsData.getDefaultVertexDataSet(env)\n\t\t\t\t.rebalance();\n\n\t\tDataSet<Tuple2<Long, Long>> edges = ConnectedComponentsData.getDefaultEdgeDataSet(env)\n\t\t\t\t.rebalance()\n\t\t\t\t.flatMap(new ConnectedComponents.UndirectEdge());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> verticesWithInitialId = vertices\n\t\t\t\t.map(new ConnectedComponents.DuplicateValue<Long>());\n\n\t\t\r\n\t\tDeltaIteration<Tuple2<Long, Long>, Tuple2<Long, Long>> iteration =\n\t\t\t\tverticesWithInitialId.iterateDelta(verticesWithInitialId, 100, 0);\n\n\t\t\r\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> changes = iteration.getWorkset().join(edges)\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.NeighborWithComponentIDJoin())\n\n\t\t\t\t.groupBy(0).aggregate(Aggregations.MIN, 1)\n\n\t\t\t\t.join(iteration.getSolutionSet())\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.ComponentIdFilter());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> result = iteration.closeWith(changes, changes);\n\n\t\tresult.output(new DiscardingOutputFormat<Tuple2<Long, Long>>());\n\n\t\tenv.execute();\n\t}\n","date":"2019-08-27 20:27:23","endLine":125,"groupId":"101190","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"runConnectedComponents","params":"(ExecutionEnvironmentenv)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c6/1657dc9bafe4f661d94f72148169d52a10c7c2.src","preCode":"\tprivate static void runConnectedComponents(ExecutionEnvironment env) throws Exception {\n\n\t\tenv.setParallelism(PARALLELISM);\n\t\tenv.getConfig().disableSysoutLogging();\n\n\t\t\r\n\t\tDataSet<Long> vertices = ConnectedComponentsData.getDefaultVertexDataSet(env)\n\t\t\t\t.rebalance();\n\n\t\tDataSet<Tuple2<Long, Long>> edges = ConnectedComponentsData.getDefaultEdgeDataSet(env)\n\t\t\t\t.rebalance()\n\t\t\t\t.flatMap(new ConnectedComponents.UndirectEdge());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> verticesWithInitialId = vertices\n\t\t\t\t.map(new ConnectedComponents.DuplicateValue<Long>());\n\n\t\t\r\n\t\tDeltaIteration<Tuple2<Long, Long>, Tuple2<Long, Long>> iteration =\n\t\t\t\tverticesWithInitialId.iterateDelta(verticesWithInitialId, 100, 0);\n\n\t\t\r\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> changes = iteration.getWorkset().join(edges)\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.NeighborWithComponentIDJoin())\n\n\t\t\t\t.groupBy(0).aggregate(Aggregations.MIN, 1)\n\n\t\t\t\t.join(iteration.getSolutionSet())\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.ComponentIdFilter());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> result = iteration.closeWith(changes, changes);\n\n\t\tresult.output(new DiscardingOutputFormat<Tuple2<Long, Long>>());\n\n\t\tenv.execute();\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/misc/SuccessAfterNetworkBuffersFailureITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2019-08-21 16:38:00","commitOrder":4,"curCode":"\tpublic static void main(String[] args) throws Exception {\n\t\tExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n\n\t\t\r\n\t\tDataSet<Long> vertices = ConnectedComponentsData.getDefaultVertexDataSet(env)\n\t\t\t\t.rebalance();\n\n\t\tDataSet<Tuple2<Long, Long>> edges = ConnectedComponentsData.getDefaultEdgeDataSet(env)\n\t\t\t\t.rebalance()\n\t\t\t\t.flatMap(new ConnectedComponents.UndirectEdge());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> verticesWithInitialId = vertices\n\t\t\t\t.map(new ConnectedComponents.DuplicateValue<>());\n\n\t\t\r\n\t\tDeltaIteration<Tuple2<Long, Long>, Tuple2<Long, Long>> iteration =\n\t\t\t\tverticesWithInitialId.iterateDelta(verticesWithInitialId, 100, 0);\n\n\t\t\r\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> changes = iteration.getWorkset().join(edges)\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.NeighborWithComponentIDJoin())\n\n\t\t\t\t.groupBy(0).aggregate(Aggregations.MIN, 1)\n\n\t\t\t\t.join(iteration.getSolutionSet())\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.ComponentIdFilter());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> result = iteration.closeWith(changes, changes);\n\n\t\tresult.output(new DiscardingOutputFormat<>());\n\n\t\tenv.execute();\n\t}\n","date":"2019-08-27 20:27:23","endLine":73,"groupId":"101190","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e4/4ac9d5cd75ef01ca99b7931526011eb024571f.src","preCode":"\tpublic static void main(String[] args) throws Exception {\n\t\tExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();\n\t\tenv.getConfig().disableSysoutLogging();\n\n\t\t\r\n\t\tDataSet<Long> vertices = ConnectedComponentsData.getDefaultVertexDataSet(env)\n\t\t\t\t.rebalance();\n\n\t\tDataSet<Tuple2<Long, Long>> edges = ConnectedComponentsData.getDefaultEdgeDataSet(env)\n\t\t\t\t.rebalance()\n\t\t\t\t.flatMap(new ConnectedComponents.UndirectEdge());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> verticesWithInitialId = vertices\n\t\t\t\t.map(new ConnectedComponents.DuplicateValue<>());\n\n\t\t\r\n\t\tDeltaIteration<Tuple2<Long, Long>, Tuple2<Long, Long>> iteration =\n\t\t\t\tverticesWithInitialId.iterateDelta(verticesWithInitialId, 100, 0);\n\n\t\t\r\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> changes = iteration.getWorkset().join(edges)\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.NeighborWithComponentIDJoin())\n\n\t\t\t\t.groupBy(0).aggregate(Aggregations.MIN, 1)\n\n\t\t\t\t.join(iteration.getSolutionSet())\n\t\t\t\t.where(0).equalTo(0)\n\t\t\t\t.with(new ConnectedComponents.ComponentIdFilter());\n\n\t\t\r\n\t\tDataSet<Tuple2<Long, Long>> result = iteration.closeWith(changes, changes);\n\n\t\tresult.output(new DiscardingOutputFormat<>());\n\n\t\tenv.execute();\n\t}\n","realPath":"flink-end-to-end-tests/flink-high-parallelism-iterations-test/src/main/java/org/apache/flink/batch/HighParallelismIterationsTestProgram.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"}],"commitId":"c30e84fb8df9cb6ab6a38cde40b9c3b83c4e8954","commitMessage":"@@@[FLINK-13794][client] Remove unused logic of printStatusDuringExecution\n","date":"2019-08-27 20:27:23","modifiedFileCount":"67","status":"M","submitter":"tison"}]
