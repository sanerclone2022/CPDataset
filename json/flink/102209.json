[{"authorTime":"2019-03-05 17:45:20","codes":[{"authorDate":"2019-03-05 17:45:20","commitOrder":1,"curCode":"\tprivate Optional<SerializationRuntimeConverter> createContainerConverter(TypeInformation<?> typeInfo) {\n\t\tif (typeInfo instanceof RowTypeInfo) {\n\t\t\treturn Optional.of(createRowConverter((RowTypeInfo) typeInfo));\n\t\t} else if (typeInfo instanceof ObjectArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (typeInfo instanceof BasicArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (isPrimitiveByteArray(typeInfo)) {\n\t\t\treturn Optional.of((mapper, reuse, object) -> mapper.getNodeFactory().binaryNode((byte[]) object));\n\t\t} else {\n\t\t\treturn Optional.empty();\n\t\t}\n\t}\n","date":"2019-07-15 20:55:28","endLine":202,"groupId":"28466","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createContainerConverter","params":"(TypeInformation<?>typeInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0a/a7151fc7447b35c3b6b00ab191be21ff23f367.src","preCode":"\tprivate Optional<SerializationRuntimeConverter> createContainerConverter(TypeInformation<?> typeInfo) {\n\t\tif (typeInfo instanceof RowTypeInfo) {\n\t\t\treturn Optional.of(createRowConverter((RowTypeInfo) typeInfo));\n\t\t} else if (typeInfo instanceof ObjectArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (typeInfo instanceof BasicArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (isPrimitiveByteArray(typeInfo)) {\n\t\t\treturn Optional.of((mapper, reuse, object) -> mapper.getNodeFactory().binaryNode((byte[]) object));\n\t\t} else {\n\t\t\treturn Optional.empty();\n\t\t}\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowSerializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"B"},{"authorDate":"2019-03-05 17:45:20","commitOrder":1,"curCode":"\tprivate Optional<DeserializationRuntimeConverter> createContainerConverter(TypeInformation<?> typeInfo) {\n\t\tif (typeInfo instanceof RowTypeInfo) {\n\t\t\treturn Optional.of(createRowConverter((RowTypeInfo) typeInfo));\n\t\t} else if (typeInfo instanceof ObjectArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (typeInfo instanceof BasicArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (isPrimitiveByteArray(typeInfo)) {\n\t\t\treturn Optional.of(createByteArrayConverter());\n\t\t} else {\n\t\t\treturn Optional.empty();\n\t\t}\n\t}\n","date":"2019-07-15 20:55:28","endLine":248,"groupId":"28466","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createContainerConverter","params":"(TypeInformation<?>typeInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4a/1ff274bd394b6b0ecc3768eefcba77e5cdf800.src","preCode":"\tprivate Optional<DeserializationRuntimeConverter> createContainerConverter(TypeInformation<?> typeInfo) {\n\t\tif (typeInfo instanceof RowTypeInfo) {\n\t\t\treturn Optional.of(createRowConverter((RowTypeInfo) typeInfo));\n\t\t} else if (typeInfo instanceof ObjectArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (typeInfo instanceof BasicArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (isPrimitiveByteArray(typeInfo)) {\n\t\t\treturn Optional.of(createByteArrayConverter());\n\t\t} else {\n\t\t\treturn Optional.empty();\n\t\t}\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"}],"commitId":"38e4e2b8f9bc63a793a2bddef5a578e3f80b7376","commitMessage":"@@@[FLINK-11727][formats] Fixed JSON format issues after serialization\n\nThis commit reworks JSON format to use a runtime converter created based\non given TypeInformation. Pre this commit conversion logic was based on\nreference comparison of TypeInformation which was not working after\nserialization of the format.\n\nThis also introduces a builder pattern for ensuring future immutability\nof schemas.\n\nThis closes #7932.\n","date":"2019-07-15 20:55:28","modifiedFileCount":"6","status":"B","submitter":"Dawid Wysakowicz"},{"authorTime":"2019-11-06 08:49:19","codes":[{"authorDate":"2019-03-05 17:45:20","commitOrder":2,"curCode":"\tprivate Optional<SerializationRuntimeConverter> createContainerConverter(TypeInformation<?> typeInfo) {\n\t\tif (typeInfo instanceof RowTypeInfo) {\n\t\t\treturn Optional.of(createRowConverter((RowTypeInfo) typeInfo));\n\t\t} else if (typeInfo instanceof ObjectArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (typeInfo instanceof BasicArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (isPrimitiveByteArray(typeInfo)) {\n\t\t\treturn Optional.of((mapper, reuse, object) -> mapper.getNodeFactory().binaryNode((byte[]) object));\n\t\t} else {\n\t\t\treturn Optional.empty();\n\t\t}\n\t}\n","date":"2019-07-15 20:55:28","endLine":202,"groupId":"102209","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createContainerConverter","params":"(TypeInformation<?>typeInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0a/a7151fc7447b35c3b6b00ab191be21ff23f367.src","preCode":"\tprivate Optional<SerializationRuntimeConverter> createContainerConverter(TypeInformation<?> typeInfo) {\n\t\tif (typeInfo instanceof RowTypeInfo) {\n\t\t\treturn Optional.of(createRowConverter((RowTypeInfo) typeInfo));\n\t\t} else if (typeInfo instanceof ObjectArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (typeInfo instanceof BasicArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (isPrimitiveByteArray(typeInfo)) {\n\t\t\treturn Optional.of((mapper, reuse, object) -> mapper.getNodeFactory().binaryNode((byte[]) object));\n\t\t} else {\n\t\t\treturn Optional.empty();\n\t\t}\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowSerializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"N"},{"authorDate":"2019-11-06 08:49:19","commitOrder":2,"curCode":"\tprivate Optional<DeserializationRuntimeConverter> createContainerConverter(TypeInformation<?> typeInfo) {\n\t\tif (typeInfo instanceof RowTypeInfo) {\n\t\t\treturn Optional.of(createRowConverter((RowTypeInfo) typeInfo));\n\t\t} else if (typeInfo instanceof ObjectArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (typeInfo instanceof BasicArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (isPrimitiveByteArray(typeInfo)) {\n\t\t\treturn Optional.of(createByteArrayConverter());\n\t\t} else if (typeInfo instanceof MapTypeInfo) {\n\t\t\tMapTypeInfo<?, ?> mapTypeInfo = (MapTypeInfo<?, ?>) typeInfo;\n\t\t\treturn Optional.of(createMapConverter(mapTypeInfo.getKeyTypeInfo(), mapTypeInfo.getValueTypeInfo()));\n\t\t} else {\n\t\t\treturn Optional.empty();\n\t\t}\n\t}\n","date":"2019-11-06 08:49:19","endLine":256,"groupId":"102209","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createContainerConverter","params":"(TypeInformation<?>typeInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/49/fb58850de61e07329253e0f83410d2d50bc864.src","preCode":"\tprivate Optional<DeserializationRuntimeConverter> createContainerConverter(TypeInformation<?> typeInfo) {\n\t\tif (typeInfo instanceof RowTypeInfo) {\n\t\t\treturn Optional.of(createRowConverter((RowTypeInfo) typeInfo));\n\t\t} else if (typeInfo instanceof ObjectArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((ObjectArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (typeInfo instanceof BasicArrayTypeInfo) {\n\t\t\treturn Optional.of(createObjectArrayConverter(((BasicArrayTypeInfo) typeInfo).getComponentInfo()));\n\t\t} else if (isPrimitiveByteArray(typeInfo)) {\n\t\t\treturn Optional.of(createByteArrayConverter());\n\t\t} else {\n\t\t\treturn Optional.empty();\n\t\t}\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"}],"commitId":"2ea14169a1997434d45d6f1da6dfe9acd6bd8da3","commitMessage":"@@@[FLINK-14546][formats] Support map type in JSON format\n\nThis closes #10060","date":"2019-11-06 08:49:19","modifiedFileCount":"2","status":"M","submitter":"Benchao Li"}]
