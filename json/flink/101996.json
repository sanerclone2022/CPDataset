[{"authorTime":"2020-10-10 11:10:15","codes":[{"authorDate":"2020-03-06 09:29:25","commitOrder":2,"curCode":"\tprivate boolean nextBatch() throws IOException {\n\t\tfor (WritableColumnVector v : writableVectors) {\n\t\t\tv.reset();\n\t\t}\n\t\tcolumnarBatch.setNumRows(0);\n\t\tif (rowsReturned >= totalRowCount) {\n\t\t\treturn false;\n\t\t}\n\t\tif (rowsReturned == totalCountLoadedSoFar) {\n\t\t\treadNextRowGroup();\n\t\t}\n\n\t\tint num = (int) Math.min(batchSize, totalCountLoadedSoFar - rowsReturned);\n\t\tfor (int i = 0; i < columnReaders.length; ++i) {\n\t\t\t\r\n\t\t\tcolumnReaders[i].readToVector(num, writableVectors[i]);\n\t\t}\n\t\trowsReturned += num;\n\t\tcolumnarBatch.setNumRows(num);\n\t\trowsInBatch = num;\n\t\treturn true;\n\t}\n","date":"2020-03-06 09:29:25","endLine":273,"groupId":"9081","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"nextBatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e7/bf0a742f2540ecd29037f65bcd452475a352bf.src","preCode":"\tprivate boolean nextBatch() throws IOException {\n\t\tfor (WritableColumnVector v : writableVectors) {\n\t\t\tv.reset();\n\t\t}\n\t\tcolumnarBatch.setNumRows(0);\n\t\tif (rowsReturned >= totalRowCount) {\n\t\t\treturn false;\n\t\t}\n\t\tif (rowsReturned == totalCountLoadedSoFar) {\n\t\t\treadNextRowGroup();\n\t\t}\n\n\t\tint num = (int) Math.min(batchSize, totalCountLoadedSoFar - rowsReturned);\n\t\tfor (int i = 0; i < columnReaders.length; ++i) {\n\t\t\t\r\n\t\t\tcolumnReaders[i].readToVector(num, writableVectors[i]);\n\t\t}\n\t\trowsReturned += num;\n\t\tcolumnarBatch.setNumRows(num);\n\t\trowsInBatch = num;\n\t\treturn true;\n\t}\n","realPath":"flink-formats/flink-parquet/src/main/java/org/apache/flink/formats/parquet/vector/ParquetColumnarRowSplitReader.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"NB"},{"authorDate":"2020-10-10 11:10:15","commitOrder":2,"curCode":"\t\tprivate boolean nextBatch(ParquetReaderBatch<T> batch) throws IOException {\n\t\t\tfor (WritableColumnVector v : batch.writableVectors) {\n\t\t\t\tv.reset();\n\t\t\t}\n\t\t\tbatch.columnarBatch.setNumRows(0);\n\t\t\tif (rowsReturned >= totalRowCount) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (rowsReturned == totalCountLoadedSoFar) {\n\t\t\t\treadNextRowGroup();\n\t\t\t}\n\n\t\t\tint num = (int) Math.min(batchSize, totalCountLoadedSoFar - rowsReturned);\n\t\t\tfor (int i = 0; i < columnReaders.length; ++i) {\n\t\t\t\t\r\n\t\t\t\tcolumnReaders[i].readToVector(num, batch.writableVectors[i]);\n\t\t\t}\n\t\t\trowsReturned += num;\n\t\t\tbatch.columnarBatch.setNumRows(num);\n\t\t\treturn true;\n\t\t}\n","date":"2020-10-13 10:32:07","endLine":365,"groupId":"9081","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"nextBatch","params":"(ParquetReaderBatch<T>batch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/85/ed4621d5d19b4acb371786d3e00eb0c391d4b4.src","preCode":"\t\tprivate boolean nextBatch(ParquetReaderBatch<T> batch) throws IOException {\n\t\t\tfor (WritableColumnVector v : batch.writableVectors) {\n\t\t\t\tv.reset();\n\t\t\t}\n\t\t\tbatch.columnarBatch.setNumRows(0);\n\t\t\tif (rowsReturned >= totalRowCount) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (rowsReturned == totalCountLoadedSoFar) {\n\t\t\t\treadNextRowGroup();\n\t\t\t}\n\n\t\t\tint num = (int) Math.min(batchSize, totalCountLoadedSoFar - rowsReturned);\n\t\t\tfor (int i = 0; i < columnReaders.length; ++i) {\n\t\t\t\t\r\n\t\t\t\tcolumnReaders[i].readToVector(num, batch.writableVectors[i]);\n\t\t\t}\n\t\t\trowsReturned += num;\n\t\t\tbatch.columnarBatch.setNumRows(num);\n\t\t\treturn true;\n\t\t}\n","realPath":"flink-formats/flink-parquet/src/main/java/org/apache/flink/formats/parquet/ParquetVectorizedInputFormat.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"B"}],"commitId":"8da968e8d0b1bb13e79d227236f814db69eb31a7","commitMessage":"@@@[FLINK-19414][parquet] Introduce ParquetColumnarRowInputFormat\n","date":"2020-10-13 10:32:07","modifiedFileCount":"4","status":"M","submitter":"JingsongLi"},{"authorTime":"2021-08-11 16:11:36","codes":[{"authorDate":"2020-03-06 09:29:25","commitOrder":3,"curCode":"\tprivate boolean nextBatch() throws IOException {\n\t\tfor (WritableColumnVector v : writableVectors) {\n\t\t\tv.reset();\n\t\t}\n\t\tcolumnarBatch.setNumRows(0);\n\t\tif (rowsReturned >= totalRowCount) {\n\t\t\treturn false;\n\t\t}\n\t\tif (rowsReturned == totalCountLoadedSoFar) {\n\t\t\treadNextRowGroup();\n\t\t}\n\n\t\tint num = (int) Math.min(batchSize, totalCountLoadedSoFar - rowsReturned);\n\t\tfor (int i = 0; i < columnReaders.length; ++i) {\n\t\t\t\r\n\t\t\tcolumnReaders[i].readToVector(num, writableVectors[i]);\n\t\t}\n\t\trowsReturned += num;\n\t\tcolumnarBatch.setNumRows(num);\n\t\trowsInBatch = num;\n\t\treturn true;\n\t}\n","date":"2020-03-06 09:29:25","endLine":273,"groupId":"101996","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"nextBatch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e7/bf0a742f2540ecd29037f65bcd452475a352bf.src","preCode":"\tprivate boolean nextBatch() throws IOException {\n\t\tfor (WritableColumnVector v : writableVectors) {\n\t\t\tv.reset();\n\t\t}\n\t\tcolumnarBatch.setNumRows(0);\n\t\tif (rowsReturned >= totalRowCount) {\n\t\t\treturn false;\n\t\t}\n\t\tif (rowsReturned == totalCountLoadedSoFar) {\n\t\t\treadNextRowGroup();\n\t\t}\n\n\t\tint num = (int) Math.min(batchSize, totalCountLoadedSoFar - rowsReturned);\n\t\tfor (int i = 0; i < columnReaders.length; ++i) {\n\t\t\t\r\n\t\t\tcolumnReaders[i].readToVector(num, writableVectors[i]);\n\t\t}\n\t\trowsReturned += num;\n\t\tcolumnarBatch.setNumRows(num);\n\t\trowsInBatch = num;\n\t\treturn true;\n\t}\n","realPath":"flink-formats/flink-parquet/src/main/java/org/apache/flink/formats/parquet/vector/ParquetColumnarRowSplitReader.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"N"},{"authorDate":"2021-08-11 16:11:36","commitOrder":3,"curCode":"        private boolean nextBatch(ParquetReaderBatch<T> batch) throws IOException {\n            for (WritableColumnVector v : batch.writableVectors) {\n                v.reset();\n            }\n            batch.columnarBatch.setNumRows(0);\n            if (rowsReturned >= totalRowCount) {\n                return false;\n            }\n            if (rowsReturned == totalCountLoadedSoFar) {\n                readNextRowGroup();\n            }\n\n            int num = (int) Math.min(batchSize, totalCountLoadedSoFar - rowsReturned);\n            for (int i = 0; i < columnReaders.length; ++i) {\n                if (columnReaders[i] == null) {\n                    batch.writableVectors[i].fillWithNulls();\n                } else {\n                    \r\n                    columnReaders[i].readToVector(num, batch.writableVectors[i]);\n                }\n            }\n            rowsReturned += num;\n            batch.columnarBatch.setNumRows(num);\n            return true;\n        }\n","date":"2021-08-31 15:37:04","endLine":396,"groupId":"101996","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"nextBatch","params":"(ParquetReaderBatch<T>batch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/52/463343175b5316f42d03997c18fafd8d6ac17a.src","preCode":"        private boolean nextBatch(ParquetReaderBatch<T> batch) throws IOException {\n            for (WritableColumnVector v : batch.writableVectors) {\n                v.reset();\n            }\n            batch.columnarBatch.setNumRows(0);\n            if (rowsReturned >= totalRowCount) {\n                return false;\n            }\n            if (rowsReturned == totalCountLoadedSoFar) {\n                readNextRowGroup();\n            }\n\n            int num = (int) Math.min(batchSize, totalCountLoadedSoFar - rowsReturned);\n            for (int i = 0; i < columnReaders.length; ++i) {\n                \r\n                columnReaders[i].readToVector(num, batch.writableVectors[i]);\n            }\n            rowsReturned += num;\n            batch.columnarBatch.setNumRows(num);\n            return true;\n        }\n","realPath":"flink-formats/flink-parquet/src/main/java/org/apache/flink/formats/parquet/ParquetVectorizedInputFormat.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"M"}],"commitId":"8abf8c627ca5ceab7a7e4f5b40f89b7ccceb9ceb","commitMessage":"@@@[FLINK-23715][parquet] Support for reading fields that do not exist in Parquet files\n\nThis closes #16778\n","date":"2021-08-31 15:37:04","modifiedFileCount":"3","status":"M","submitter":"Tartarus0zm"}]
