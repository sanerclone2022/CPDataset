[{"authorTime":"2020-05-12 15:50:21","codes":[{"authorDate":"2020-05-12 15:50:21","commitOrder":1,"curCode":"\t\tpublic void testParseError() throws Exception {\n\t\t\tString path = new URI(resultPath()).getPath();\n\t\t\tnew File(path).mkdirs();\n\t\t\tFile file = new File(path, \"test_file\");\n\t\t\tfile.createNewFile();\n\t\t\tFileUtils.writeFileUtf8(file,\n\t\t\t\t\"x5,5,1,1\\n\" +\n\t\t\t\t\t\"x5,5,2,2,2\\n\" +\n\t\t\t\t\t\"x5,5,1,1\");\n\n\t\t\tcheck(\"select * from nonPartitionedTable\",\n\t\t\t\tArrays.asList(\n\t\t\t\t\tRow.of(\"x5,5,1,1\"),\n\t\t\t\t\tRow.of(\"x5,5,1,1\")));\n\t\t}\n","date":"2020-05-12 15:50:21","endLine":85,"groupId":"47552","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/67/1ba1292f61817382d6e73aa50bcf6a029a2e22.src","preCode":"\t\tpublic void testParseError() throws Exception {\n\t\t\tString path = new URI(resultPath()).getPath();\n\t\t\tnew File(path).mkdirs();\n\t\t\tFile file = new File(path, \"test_file\");\n\t\t\tfile.createNewFile();\n\t\t\tFileUtils.writeFileUtf8(file,\n\t\t\t\t\"x5,5,1,1\\n\" +\n\t\t\t\t\t\"x5,5,2,2,2\\n\" +\n\t\t\t\t\t\"x5,5,1,1\");\n\n\t\t\tcheck(\"select * from nonPartitionedTable\",\n\t\t\t\tArrays.asList(\n\t\t\t\t\tRow.of(\"x5,5,1,1\"),\n\t\t\t\t\tRow.of(\"x5,5,1,1\")));\n\t\t}\n","realPath":"flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvFilesystemBatchITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"},{"authorDate":"2020-05-12 15:50:21","commitOrder":1,"curCode":"\t\tpublic void testEscapeChar() throws Exception {\n\t\t\tString path = new URI(resultPath()).getPath();\n\t\t\tnew File(path).mkdirs();\n\t\t\tFile file = new File(path, \"test_file\");\n\t\t\tfile.createNewFile();\n\t\t\tFileUtils.writeFileUtf8(file,\n\t\t\t\t\"x5,\\t\\n5,1,1\\n\" +\n\t\t\t\t\t\"x5,\\t5,2,2\");\n\n\t\t\tcheck(\"select * from nonPartitionedTable\",\n\t\t\t\tArrays.asList(\n\t\t\t\t\tRow.of(\"x5,5,1,1\"),\n\t\t\t\t\tRow.of(\"x5,5,2,2\")));\n\t\t}\n","date":"2020-05-12 15:50:21","endLine":101,"groupId":"47551","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEscapeChar","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/67/1ba1292f61817382d6e73aa50bcf6a029a2e22.src","preCode":"\t\tpublic void testEscapeChar() throws Exception {\n\t\t\tString path = new URI(resultPath()).getPath();\n\t\t\tnew File(path).mkdirs();\n\t\t\tFile file = new File(path, \"test_file\");\n\t\t\tfile.createNewFile();\n\t\t\tFileUtils.writeFileUtf8(file,\n\t\t\t\t\"x5,\\t\\n5,1,1\\n\" +\n\t\t\t\t\t\"x5,\\t5,2,2\");\n\n\t\t\tcheck(\"select * from nonPartitionedTable\",\n\t\t\t\tArrays.asList(\n\t\t\t\t\tRow.of(\"x5,5,1,1\"),\n\t\t\t\t\tRow.of(\"x5,5,2,2\")));\n\t\t}\n","realPath":"flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvFilesystemBatchITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"66308f8c9f899b85d38d893eded0a335cadf3c9b","commitMessage":"@@@[FLINK-14257][table][filesystem] Integrate CSV to FileSystemTableFactory\n\n\nThis closes #11755","date":"2020-05-12 15:50:21","modifiedFileCount":"1","status":"B","submitter":"Leonard Xu"},{"authorTime":"2020-12-18 18:32:55","codes":[{"authorDate":"2020-12-18 18:32:55","commitOrder":2,"curCode":"        public void testParseError() throws Exception {\n            String path = new URI(resultPath()).getPath();\n            new File(path).mkdirs();\n            File file = new File(path, \"test_file\");\n            file.createNewFile();\n            FileUtils.writeFileUtf8(file, \"x5,5,1,1\\n\" + \"x5,5,2,2,2\\n\" + \"x5,5,1,1\");\n\n            check(\n                    \"select * from nonPartitionedTable\",\n                    Arrays.asList(Row.of(\"x5\", 5, 1, 1), Row.of(\"x5\", 5, 1, 1)));\n        }\n","date":"2021-01-08 00:17:30","endLine":78,"groupId":"102218","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testParseError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8d/f8ddb38d74471ba9ff55518e13ea5760c60bde.src","preCode":"        public void testParseError() throws Exception {\n            String path = new URI(resultPath()).getPath();\n            new File(path).mkdirs();\n            File file = new File(path, \"test_file\");\n            file.createNewFile();\n            FileUtils.writeFileUtf8(file, \"x5,5,1,1\\n\" + \"x5,5,2,2,2\\n\" + \"x5,5,1,1\");\n\n            check(\n                    \"select * from nonPartitionedTable\",\n                    Arrays.asList(Row.of(\"x5,5,1,1\"), Row.of(\"x5,5,1,1\")));\n        }\n","realPath":"flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvFilesystemBatchITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2020-12-18 18:32:55","commitOrder":2,"curCode":"        public void testEscapeChar() throws Exception {\n            String path = new URI(resultPath()).getPath();\n            new File(path).mkdirs();\n            File file = new File(path, \"test_file\");\n            file.createNewFile();\n            FileUtils.writeFileUtf8(file, \"x5,\\t\\n5,1,1\\n\" + \"x5,\\t5,2,2\");\n\n            check(\n                    \"select * from nonPartitionedTable\",\n                    Arrays.asList(Row.of(\"x5\", 5, 1, 1), Row.of(\"x5\", 5, 2, 2)));\n        }\n","date":"2021-01-08 00:17:30","endLine":91,"groupId":"102218","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testEscapeChar","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8d/f8ddb38d74471ba9ff55518e13ea5760c60bde.src","preCode":"        public void testEscapeChar() throws Exception {\n            String path = new URI(resultPath()).getPath();\n            new File(path).mkdirs();\n            File file = new File(path, \"test_file\");\n            file.createNewFile();\n            FileUtils.writeFileUtf8(file, \"x5,\\t\\n5,1,1\\n\" + \"x5,\\t5,2,2\");\n\n            check(\n                    \"select * from nonPartitionedTable\",\n                    Arrays.asList(Row.of(\"x5,5,1,1\"), Row.of(\"x5,5,2,2\")));\n        }\n","realPath":"flink-formats/flink-csv/src/test/java/org/apache/flink/formats/csv/CsvFilesystemBatchITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"73cdd3d0d9f6a807b3e47c09eef7983c9aa180c7","commitMessage":"@@@[FLINK-18090] Update tests for new Row.toString\n\nAll tests in modules apart from the Blink planner/runtime\nmodule have been updated.\n\nOtherwise we use a JUnit rule to make the migration of\nthe remaining tests incremental.\n\nThis closes #14568.\n","date":"2021-01-08 00:17:30","modifiedFileCount":"34","status":"M","submitter":"Timo Walther"}]
