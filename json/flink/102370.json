[{"authorTime":"2020-03-07 21:33:17","codes":[{"authorDate":"2020-03-07 21:33:17","commitOrder":1,"curCode":"\tpublic void testHadoopConfDirectoryUnset() throws IOException {\n\t\tassertEquals(0, hadoopConfMountDecorator.buildAccompanyingKubernetesResources().size());\n\n\t\tfinal FlinkPod resultFlinkPod = hadoopConfMountDecorator.decorateFlinkPod(baseFlinkPod);\n\t\tassertEquals(baseFlinkPod.getPod(), resultFlinkPod.getPod());\n\t\tassertEquals(baseFlinkPod.getMainContainer(), resultFlinkPod.getMainContainer());\n\t}\n","date":"2020-03-23 15:03:16","endLine":97,"groupId":"48324","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testHadoopConfDirectoryUnset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8c/7517908e7bbcd69ffeb9a16067b435d8ec969f.src","preCode":"\tpublic void testHadoopConfDirectoryUnset() throws IOException {\n\t\tassertEquals(0, hadoopConfMountDecorator.buildAccompanyingKubernetesResources().size());\n\n\t\tfinal FlinkPod resultFlinkPod = hadoopConfMountDecorator.decorateFlinkPod(baseFlinkPod);\n\t\tassertEquals(baseFlinkPod.getPod(), resultFlinkPod.getPod());\n\t\tassertEquals(baseFlinkPod.getMainContainer(), resultFlinkPod.getMainContainer());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/decorators/HadoopConfMountDecoratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2020-03-07 21:33:17","commitOrder":1,"curCode":"\tpublic void testEmptyHadoopConfDirectory() throws IOException {\n\t\tsetHadoopConfDirEnv();\n\n\t\tassertEquals(0, hadoopConfMountDecorator.buildAccompanyingKubernetesResources().size());\n\n\t\tfinal FlinkPod resultFlinkPod = hadoopConfMountDecorator.decorateFlinkPod(baseFlinkPod);\n\t\tassertEquals(baseFlinkPod.getPod(), resultFlinkPod.getPod());\n\t\tassertEquals(baseFlinkPod.getMainContainer(), resultFlinkPod.getMainContainer());\n\t}\n","date":"2020-03-23 15:03:16","endLine":108,"groupId":"48324","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEmptyHadoopConfDirectory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8c/7517908e7bbcd69ffeb9a16067b435d8ec969f.src","preCode":"\tpublic void testEmptyHadoopConfDirectory() throws IOException {\n\t\tsetHadoopConfDirEnv();\n\n\t\tassertEquals(0, hadoopConfMountDecorator.buildAccompanyingKubernetesResources().size());\n\n\t\tfinal FlinkPod resultFlinkPod = hadoopConfMountDecorator.decorateFlinkPod(baseFlinkPod);\n\t\tassertEquals(baseFlinkPod.getPod(), resultFlinkPod.getPod());\n\t\tassertEquals(baseFlinkPod.getMainContainer(), resultFlinkPod.getMainContainer());\n\t}\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/decorators/HadoopConfMountDecoratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"}],"commitId":"f56a075aa029832b9cbacab51649c900498e18e9","commitMessage":"@@@[FLINK-15667][k8s] Support to mount custom Hadoop Configurations\n\nThis closes #11415 .\n","date":"2020-03-23 15:03:16","modifiedFileCount":"10","status":"B","submitter":"felixzheng"},{"authorTime":"2021-02-20 14:12:05","codes":[{"authorDate":"2021-02-20 14:12:05","commitOrder":2,"curCode":"    public void testHadoopConfDirectoryUnset() throws IOException {\n        assertEquals(0, hadoopConfMountDecorator.buildAccompanyingKubernetesResources().size());\n\n        final FlinkPod resultFlinkPod = hadoopConfMountDecorator.decorateFlinkPod(baseFlinkPod);\n        assertEquals(\n                baseFlinkPod.getPodWithoutMainContainer(),\n                resultFlinkPod.getPodWithoutMainContainer());\n        assertEquals(baseFlinkPod.getMainContainer(), resultFlinkPod.getMainContainer());\n    }\n","date":"2021-03-01 17:38:17","endLine":121,"groupId":"102370","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testHadoopConfDirectoryUnset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/29/3a43113b1f63b66d71e2d269fd4ea0fdef753b.src","preCode":"    public void testHadoopConfDirectoryUnset() throws IOException {\n        assertEquals(0, hadoopConfMountDecorator.buildAccompanyingKubernetesResources().size());\n\n        final FlinkPod resultFlinkPod = hadoopConfMountDecorator.decorateFlinkPod(baseFlinkPod);\n        assertEquals(baseFlinkPod.getPod(), resultFlinkPod.getPod());\n        assertEquals(baseFlinkPod.getMainContainer(), resultFlinkPod.getMainContainer());\n    }\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/decorators/HadoopConfMountDecoratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2021-02-20 14:12:05","commitOrder":2,"curCode":"    public void testEmptyHadoopConfDirectory() throws IOException {\n        setHadoopConfDirEnv();\n\n        assertEquals(0, hadoopConfMountDecorator.buildAccompanyingKubernetesResources().size());\n\n        final FlinkPod resultFlinkPod = hadoopConfMountDecorator.decorateFlinkPod(baseFlinkPod);\n        assertEquals(\n                baseFlinkPod.getPodWithoutMainContainer(),\n                resultFlinkPod.getPodWithoutMainContainer());\n        assertEquals(baseFlinkPod.getMainContainer(), resultFlinkPod.getMainContainer());\n    }\n","date":"2021-03-01 17:38:17","endLine":134,"groupId":"102370","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testEmptyHadoopConfDirectory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/29/3a43113b1f63b66d71e2d269fd4ea0fdef753b.src","preCode":"    public void testEmptyHadoopConfDirectory() throws IOException {\n        setHadoopConfDirEnv();\n\n        assertEquals(0, hadoopConfMountDecorator.buildAccompanyingKubernetesResources().size());\n\n        final FlinkPod resultFlinkPod = hadoopConfMountDecorator.decorateFlinkPod(baseFlinkPod);\n        assertEquals(baseFlinkPod.getPod(), resultFlinkPod.getPod());\n        assertEquals(baseFlinkPod.getMainContainer(), resultFlinkPod.getMainContainer());\n    }\n","realPath":"flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/decorators/HadoopConfMountDecoratorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"4fcc408a8e581b9c796fc59cfcda68a71213795f","commitMessage":"@@@[hotfix][k8s] Rename the implicit variable pod to podWithoutMainContainer\n","date":"2021-03-01 17:38:17","modifiedFileCount":"20","status":"M","submitter":"wangyang0918"}]
