[{"authorTime":"2021-08-16 15:58:23","codes":[{"authorDate":"2021-08-16 15:58:23","commitOrder":1,"curCode":"    private void committedTransaction(int subtaskId, long offset) {\n        submitTransaction(\n                subtaskId,\n                offset,\n                producer -> {\n                    producer.initTransactions();\n                    producer.beginTransaction();\n                    producer.send(new ProducerRecord<>(TOPIC_NAME, 0, null, null, 1));\n                    producer.flush();\n                    producer.commitTransaction();\n                    producer.flush();\n                });\n    }\n","date":"2021-08-17 06:15:36","endLine":150,"groupId":"36850","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"committedTransaction","params":"(intsubtaskId@longoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/13/820fb4ed83cdfdee27ab61f3470ec8835674c7.src","preCode":"    private void committedTransaction(int subtaskId, long offset) {\n        submitTransaction(\n                subtaskId,\n                offset,\n                producer -> {\n                    producer.initTransactions();\n                    producer.beginTransaction();\n                    producer.send(new ProducerRecord<>(TOPIC_NAME, 0, null, null, 1));\n                    producer.flush();\n                    producer.commitTransaction();\n                    producer.flush();\n                });\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/sink/KafkaTransactionLogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"},{"authorDate":"2021-08-16 15:58:23","commitOrder":1,"curCode":"    private void abortedTransaction(int subtaskId, long offset) {\n        submitTransaction(\n                subtaskId,\n                offset,\n                producer -> {\n                    producer.initTransactions();\n                    producer.beginTransaction();\n                    producer.send(new ProducerRecord<>(TOPIC_NAME, 0, null, null, 1));\n                    producer.flush();\n                    producer.abortTransaction();\n                    producer.flush();\n                });\n    }\n","date":"2021-08-17 06:15:36","endLine":176,"groupId":"36850","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"abortedTransaction","params":"(intsubtaskId@longoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/13/820fb4ed83cdfdee27ab61f3470ec8835674c7.src","preCode":"    private void abortedTransaction(int subtaskId, long offset) {\n        submitTransaction(\n                subtaskId,\n                offset,\n                producer -> {\n                    producer.initTransactions();\n                    producer.beginTransaction();\n                    producer.send(new ProducerRecord<>(TOPIC_NAME, 0, null, null, 1));\n                    producer.flush();\n                    producer.abortTransaction();\n                    producer.flush();\n                });\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/sink/KafkaTransactionLogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"}],"commitId":"94da2b587c133621bbdf39d36d55070a64605f56","commitMessage":"@@@[FLINK-23710][connectors/kafka] Move FLIP-143 KafkaSink to org.apache.kafka.connector.kafka.sink\n","date":"2021-08-17 06:15:36","modifiedFileCount":"4","status":"B","submitter":"Fabian Paul"},{"authorTime":"2021-08-27 17:13:08","codes":[{"authorDate":"2021-08-27 17:13:08","commitOrder":2,"curCode":"    private void committedTransaction(long id) {\n        submitTransaction(\n                id,\n                producer -> {\n                    producer.initTransactions();\n                    producer.beginTransaction();\n                    producer.send(new ProducerRecord<>(TOPIC_NAME, 0, null, null, 1));\n                    producer.flush();\n                    producer.commitTransaction();\n                    producer.flush();\n                });\n    }\n","date":"2021-09-01 14:27:59","endLine":118,"groupId":"10294","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"committedTransaction","params":"(longid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4c/9c80262076169333c71bdfc7744336aa2ca1c6.src","preCode":"    private void committedTransaction(int subtaskId, long offset) {\n        submitTransaction(\n                subtaskId,\n                offset,\n                producer -> {\n                    producer.initTransactions();\n                    producer.beginTransaction();\n                    producer.send(new ProducerRecord<>(TOPIC_NAME, 0, null, null, 1));\n                    producer.flush();\n                    producer.commitTransaction();\n                    producer.flush();\n                });\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/sink/KafkaTransactionLogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"},{"authorDate":"2021-08-27 17:13:08","commitOrder":2,"curCode":"    private void abortedTransaction(long id) {\n        submitTransaction(\n                id,\n                producer -> {\n                    producer.initTransactions();\n                    producer.beginTransaction();\n                    producer.send(new ProducerRecord<>(TOPIC_NAME, 0, null, null, 1));\n                    producer.flush();\n                    producer.abortTransaction();\n                    producer.flush();\n                });\n    }\n","date":"2021-09-01 14:27:59","endLine":142,"groupId":"10294","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"abortedTransaction","params":"(longid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4c/9c80262076169333c71bdfc7744336aa2ca1c6.src","preCode":"    private void abortedTransaction(int subtaskId, long offset) {\n        submitTransaction(\n                subtaskId,\n                offset,\n                producer -> {\n                    producer.initTransactions();\n                    producer.beginTransaction();\n                    producer.send(new ProducerRecord<>(TOPIC_NAME, 0, null, null, 1));\n                    producer.flush();\n                    producer.abortTransaction();\n                    producer.flush();\n                });\n    }\n","realPath":"flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/sink/KafkaTransactionLogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"}],"commitId":"b203b499552f23a31092ec6f7c4a1c3e292fd8ea","commitMessage":"@@@[FLINK-23854][connectors/kafka] Reliably abort lingering transactions in Kafka.\n\nThe new approach depends on successively aborting transactions until an unused transaction is ensured. This approach covers all edge cases including failures before first checkpoint and downscaling without checkpoints.\n","date":"2021-09-01 14:27:59","modifiedFileCount":"8","status":"M","submitter":"Arvid Heise"}]
