[{"authorTime":"2015-08-18 17:11:13","codes":[{"authorDate":"2015-08-18 17:11:13","commitOrder":1,"curCode":"\tprivate void checkStandardStrategies(SingleInputPlanNode map, DualInputPlanNode join, SingleInputPlanNode combiner,\n\t\t\tSingleInputPlanNode reducer, SinkPlanNode sink)\n\t{\n\t\t\r\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, map.getInput().getShipStrategy());\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, sink.getInput().getShipStrategy());\n\t\t\n\t\t\r\n\t\tAssert.assertEquals(DriverStrategy.COLLECTOR_MAP, map.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_REDUCE, reducer.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.NONE, sink.getDriverStrategy());\n\t\tif (combiner != null) {\n\t\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_COMBINE, combiner.getDriverStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.NONE, combiner.getInput().getLocalStrategy());\n\t\t}\n\t}\n","date":"2015-08-18 22:37:41","endLine":249,"groupId":"50139","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkStandardStrategies","params":"(SingleInputPlanNodemap@DualInputPlanNodejoin@SingleInputPlanNodecombiner@SingleInputPlanNodereducer@SinkPlanNodesink)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f5/8486bb48e286248c456e97f631ad02d0bc43e1.src","preCode":"\tprivate void checkStandardStrategies(SingleInputPlanNode map, DualInputPlanNode join, SingleInputPlanNode combiner,\n\t\t\tSingleInputPlanNode reducer, SinkPlanNode sink)\n\t{\n\t\t\r\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, map.getInput().getShipStrategy());\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, sink.getInput().getShipStrategy());\n\t\t\n\t\t\r\n\t\tAssert.assertEquals(DriverStrategy.COLLECTOR_MAP, map.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_REDUCE, reducer.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.NONE, sink.getDriverStrategy());\n\t\tif (combiner != null) {\n\t\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_COMBINE, combiner.getDriverStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.NONE, combiner.getInput().getLocalStrategy());\n\t\t}\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/optimizer/examples/RelationalQueryCompilerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"B"},{"authorDate":"2015-08-18 17:11:13","commitOrder":1,"curCode":"\tprivate boolean checkBroadcastMergeJoin(DualInputPlanNode join, SingleInputPlanNode reducer) {\n\t\tif (DriverStrategy.MERGE == join.getDriverStrategy()) {\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput1());\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput2());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput1().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput2().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.COMBININGSORT, reducer.getInput().getLocalStrategy());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getInput1().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set0, join.getInput2().getLocalStrategyKeys());\n\t\t\tAssert.assertTrue(Arrays.equals(join.getInput1().getLocalStrategySortOrder(), join.getInput2().getLocalStrategySortOrder()));\n\t\t\tAssert.assertEquals(set01, reducer.getInput().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set01, reducer.getKeys(0));\n\t\t\tAssert.assertTrue(Arrays.equals(reducer.getInput().getLocalStrategySortOrder(), reducer.getSortOrders(0)));\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n","date":"2015-08-18 22:37:41","endLine":327,"groupId":"11858","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkBroadcastMergeJoin","params":"(DualInputPlanNodejoin@SingleInputPlanNodereducer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f5/8486bb48e286248c456e97f631ad02d0bc43e1.src","preCode":"\tprivate boolean checkBroadcastMergeJoin(DualInputPlanNode join, SingleInputPlanNode reducer) {\n\t\tif (DriverStrategy.MERGE == join.getDriverStrategy()) {\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput1());\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput2());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput1().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput2().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.COMBININGSORT, reducer.getInput().getLocalStrategy());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getInput1().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set0, join.getInput2().getLocalStrategyKeys());\n\t\t\tAssert.assertTrue(Arrays.equals(join.getInput1().getLocalStrategySortOrder(), join.getInput2().getLocalStrategySortOrder()));\n\t\t\tAssert.assertEquals(set01, reducer.getInput().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set01, reducer.getKeys(0));\n\t\t\tAssert.assertTrue(Arrays.equals(reducer.getInput().getLocalStrategySortOrder(), reducer.getSortOrders(0)));\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/optimizer/examples/RelationalQueryCompilerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"B"}],"commitId":"09fdfda7f25cf95426bc43ca33ed7bb39c7d353a","commitMessage":"@@@[tests] Rename 'compiler' tests to 'optimizer' tests for consistent naming\n","date":"2015-08-18 22:37:41","modifiedFileCount":"1","status":"B","submitter":"Stephan Ewen"},{"authorTime":"2015-08-12 03:40:21","codes":[{"authorDate":"2015-08-18 17:11:13","commitOrder":2,"curCode":"\tprivate void checkStandardStrategies(SingleInputPlanNode map, DualInputPlanNode join, SingleInputPlanNode combiner,\n\t\t\tSingleInputPlanNode reducer, SinkPlanNode sink)\n\t{\n\t\t\r\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, map.getInput().getShipStrategy());\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, sink.getInput().getShipStrategy());\n\t\t\n\t\t\r\n\t\tAssert.assertEquals(DriverStrategy.COLLECTOR_MAP, map.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_REDUCE, reducer.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.NONE, sink.getDriverStrategy());\n\t\tif (combiner != null) {\n\t\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_COMBINE, combiner.getDriverStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.NONE, combiner.getInput().getLocalStrategy());\n\t\t}\n\t}\n","date":"2015-08-18 22:37:41","endLine":249,"groupId":"50139","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkStandardStrategies","params":"(SingleInputPlanNodemap@DualInputPlanNodejoin@SingleInputPlanNodecombiner@SingleInputPlanNodereducer@SinkPlanNodesink)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f5/8486bb48e286248c456e97f631ad02d0bc43e1.src","preCode":"\tprivate void checkStandardStrategies(SingleInputPlanNode map, DualInputPlanNode join, SingleInputPlanNode combiner,\n\t\t\tSingleInputPlanNode reducer, SinkPlanNode sink)\n\t{\n\t\t\r\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, map.getInput().getShipStrategy());\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, sink.getInput().getShipStrategy());\n\t\t\n\t\t\r\n\t\tAssert.assertEquals(DriverStrategy.COLLECTOR_MAP, map.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_REDUCE, reducer.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.NONE, sink.getDriverStrategy());\n\t\tif (combiner != null) {\n\t\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_COMBINE, combiner.getDriverStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.NONE, combiner.getInput().getLocalStrategy());\n\t\t}\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/optimizer/examples/RelationalQueryCompilerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"N"},{"authorDate":"2015-08-12 03:40:21","commitOrder":2,"curCode":"\tprivate boolean checkBroadcastMergeJoin(DualInputPlanNode join, SingleInputPlanNode reducer) {\n\t\tif (DriverStrategy.INNER_MERGE == join.getDriverStrategy()) {\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput1());\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput2());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput1().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput2().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.COMBININGSORT, reducer.getInput().getLocalStrategy());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getInput1().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set0, join.getInput2().getLocalStrategyKeys());\n\t\t\tAssert.assertTrue(Arrays.equals(join.getInput1().getLocalStrategySortOrder(), join.getInput2().getLocalStrategySortOrder()));\n\t\t\tAssert.assertEquals(set01, reducer.getInput().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set01, reducer.getKeys(0));\n\t\t\tAssert.assertTrue(Arrays.equals(reducer.getInput().getLocalStrategySortOrder(), reducer.getSortOrders(0)));\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n","date":"2015-09-08 22:57:51","endLine":327,"groupId":"11858","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkBroadcastMergeJoin","params":"(DualInputPlanNodejoin@SingleInputPlanNodereducer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f4/efb8a9abbed14b53419a9380aba79b86bf9bdc.src","preCode":"\tprivate boolean checkBroadcastMergeJoin(DualInputPlanNode join, SingleInputPlanNode reducer) {\n\t\tif (DriverStrategy.MERGE == join.getDriverStrategy()) {\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput1());\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput2());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput1().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput2().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.COMBININGSORT, reducer.getInput().getLocalStrategy());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getInput1().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set0, join.getInput2().getLocalStrategyKeys());\n\t\t\tAssert.assertTrue(Arrays.equals(join.getInput1().getLocalStrategySortOrder(), join.getInput2().getLocalStrategySortOrder()));\n\t\t\tAssert.assertEquals(set01, reducer.getInput().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set01, reducer.getKeys(0));\n\t\t\tAssert.assertTrue(Arrays.equals(reducer.getInput().getLocalStrategySortOrder(), reducer.getSortOrders(0)));\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/optimizer/examples/RelationalQueryCompilerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"M"}],"commitId":"2da82f9154f9563e3fe8454e153d372b4bf18996","commitMessage":"@@@[FLINK-2106] [runtime] Rename DriverStrategy.MERGE to DriverStrategy.INNER_MERGE\n\nThis closes #1052\n","date":"2015-09-08 22:57:51","modifiedFileCount":"10","status":"M","submitter":"r-pogalz"},{"authorTime":"2015-08-12 03:40:21","codes":[{"authorDate":"2015-10-28 04:22:38","commitOrder":3,"curCode":"\tprivate void checkStandardStrategies(SingleInputPlanNode map, DualInputPlanNode join, SingleInputPlanNode combiner,\n\t\t\tSingleInputPlanNode reducer, SinkPlanNode sink)\n\t{\n\t\t\r\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, map.getInput().getShipStrategy());\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, sink.getInput().getShipStrategy());\n\t\t\n\t\t\r\n\t\tAssert.assertEquals(DriverStrategy.FLAT_MAP, map.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_REDUCE, reducer.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.NONE, sink.getDriverStrategy());\n\t\tif (combiner != null) {\n\t\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_COMBINE, combiner.getDriverStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.NONE, combiner.getInput().getLocalStrategy());\n\t\t}\n\t}\n","date":"2015-11-25 01:16:51","endLine":252,"groupId":"101550","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"checkStandardStrategies","params":"(SingleInputPlanNodemap@DualInputPlanNodejoin@SingleInputPlanNodecombiner@SingleInputPlanNodereducer@SinkPlanNodesink)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e9/29913dc0b468509396f22f8da4e664684add44.src","preCode":"\tprivate void checkStandardStrategies(SingleInputPlanNode map, DualInputPlanNode join, SingleInputPlanNode combiner,\n\t\t\tSingleInputPlanNode reducer, SinkPlanNode sink)\n\t{\n\t\t\r\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, map.getInput().getShipStrategy());\n\t\tAssert.assertEquals(ShipStrategyType.FORWARD, sink.getInput().getShipStrategy());\n\t\t\n\t\t\r\n\t\tAssert.assertEquals(DriverStrategy.COLLECTOR_MAP, map.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_REDUCE, reducer.getDriverStrategy());\n\t\tAssert.assertEquals(DriverStrategy.NONE, sink.getDriverStrategy());\n\t\tif (combiner != null) {\n\t\t\tAssert.assertEquals(DriverStrategy.SORTED_GROUP_COMBINE, combiner.getDriverStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.NONE, combiner.getInput().getLocalStrategy());\n\t\t}\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/optimizer/examples/RelationalQueryCompilerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2015-08-12 03:40:21","commitOrder":3,"curCode":"\tprivate boolean checkBroadcastMergeJoin(DualInputPlanNode join, SingleInputPlanNode reducer) {\n\t\tif (DriverStrategy.INNER_MERGE == join.getDriverStrategy()) {\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput1());\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput2());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput1().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput2().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.COMBININGSORT, reducer.getInput().getLocalStrategy());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getInput1().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set0, join.getInput2().getLocalStrategyKeys());\n\t\t\tAssert.assertTrue(Arrays.equals(join.getInput1().getLocalStrategySortOrder(), join.getInput2().getLocalStrategySortOrder()));\n\t\t\tAssert.assertEquals(set01, reducer.getInput().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set01, reducer.getKeys(0));\n\t\t\tAssert.assertTrue(Arrays.equals(reducer.getInput().getLocalStrategySortOrder(), reducer.getSortOrders(0)));\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n","date":"2015-09-08 22:57:51","endLine":327,"groupId":"101550","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"checkBroadcastMergeJoin","params":"(DualInputPlanNodejoin@SingleInputPlanNodereducer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f4/efb8a9abbed14b53419a9380aba79b86bf9bdc.src","preCode":"\tprivate boolean checkBroadcastMergeJoin(DualInputPlanNode join, SingleInputPlanNode reducer) {\n\t\tif (DriverStrategy.INNER_MERGE == join.getDriverStrategy()) {\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput1());\n\t\t\tAssert.assertEquals(set0, join.getKeysForInput2());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput1().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.SORT, join.getInput2().getLocalStrategy());\n\t\t\tAssert.assertEquals(LocalStrategy.COMBININGSORT, reducer.getInput().getLocalStrategy());\n\t\t\t\n\t\t\t\r\n\t\t\tAssert.assertEquals(set0, join.getInput1().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set0, join.getInput2().getLocalStrategyKeys());\n\t\t\tAssert.assertTrue(Arrays.equals(join.getInput1().getLocalStrategySortOrder(), join.getInput2().getLocalStrategySortOrder()));\n\t\t\tAssert.assertEquals(set01, reducer.getInput().getLocalStrategyKeys());\n\t\t\tAssert.assertEquals(set01, reducer.getKeys(0));\n\t\t\tAssert.assertTrue(Arrays.equals(reducer.getInput().getLocalStrategySortOrder(), reducer.getSortOrders(0)));\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/optimizer/examples/RelationalQueryCompilerTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"N"}],"commitId":"8abae2c2f2a0a7b6a39880b90467b5209e65117d","commitMessage":"@@@[FLINK-2901] Remove Record API dependencies from flink-tests #1\n","date":"2015-11-25 01:16:51","modifiedFileCount":"19","status":"M","submitter":"zentol"}]
