[{"authorTime":"2020-07-30 21:09:26","codes":[{"authorDate":"2020-06-17 21:32:10","commitOrder":3,"curCode":"\tprivate Map<String, String> getAllOptions() {\n\t\tfinal Map<String, String> options = new HashMap<>();\n\t\toptions.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n\t\toptions.put(\"target\", \"MyTarget\");\n\t\toptions.put(\"buffer-size\", \"1000\");\n\n\t\toptions.put(\"format\", \"canal-json\");\n\t\toptions.put(\"canal-json.ignore-parse-errors\", \"true\");\n\t\toptions.put(\"canal-json.timestamp-format.standard\", \"ISO-8601\");\n\t\treturn options;\n\t}\n","date":"2020-06-17 21:47:28","endLine":127,"groupId":"26310","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAllOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/44/86a498bee362ec53c89b86251fd0cb097269dd.src","preCode":"\tprivate Map<String, String> getAllOptions() {\n\t\tfinal Map<String, String> options = new HashMap<>();\n\t\toptions.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n\t\toptions.put(\"target\", \"MyTarget\");\n\t\toptions.put(\"buffer-size\", \"1000\");\n\n\t\toptions.put(\"format\", \"canal-json\");\n\t\toptions.put(\"canal-json.ignore-parse-errors\", \"true\");\n\t\toptions.put(\"canal-json.timestamp-format.standard\", \"ISO-8601\");\n\t\treturn options;\n\t}\n","realPath":"flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/canal/CanalJsonFormatFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"NB"},{"authorDate":"2020-07-30 21:09:26","commitOrder":3,"curCode":"\tprivate Map<String, String> getDefaultOptions() {\n\t\tfinal Map<String, String> options = new HashMap<>();\n\t\toptions.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n\t\toptions.put(\"target\", \"MyTarget\");\n\t\toptions.put(\"buffer-size\", \"1000\");\n\n\t\toptions.put(\"format\", RegistryAvroFormatFactory.IDENTIFIER);\n\t\toptions.put(\"avro-confluent.schema-registry.subject\", SUBJECT);\n\t\toptions.put(\"avro-confluent.schema-registry.url\", REGISTRY_URL);\n\t\treturn options;\n\t}\n","date":"2020-07-30 21:09:26","endLine":158,"groupId":"26310","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getDefaultOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/db/fcc794c3eeeeddc7e9585be9984c1d91ae296d.src","preCode":"\tprivate Map<String, String> getDefaultOptions() {\n\t\tfinal Map<String, String> options = new HashMap<>();\n\t\toptions.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n\t\toptions.put(\"target\", \"MyTarget\");\n\t\toptions.put(\"buffer-size\", \"1000\");\n\n\t\toptions.put(\"format\", RegistryAvroFormatFactory.IDENTIFIER);\n\t\toptions.put(\"avro-confluent.schema-registry.subject\", SUBJECT);\n\t\toptions.put(\"avro-confluent.schema-registry.url\", REGISTRY_URL);\n\t\treturn options;\n\t}\n","realPath":"flink-formats/flink-avro-confluent-registry/src/test/java/org/apache/flink/formats/avro/registry/confluent/RegistryAvroFormatFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"}],"commitId":"1c09c23810cf844001dd70d3b78a7a60b49611c7","commitMessage":"@@@[FLINK-16048][avro] Support read/write confluent schema registry avro data from Kafka\n\n","date":"2020-07-30 21:09:26","modifiedFileCount":"11","status":"M","submitter":"Danny Chan"},{"authorTime":"2020-07-30 21:09:26","codes":[{"authorDate":"2020-09-18 15:52:20","commitOrder":4,"curCode":"\tprivate Map<String, String> getAllOptions() {\n\t\tfinal Map<String, String> options = new HashMap<>();\n\t\toptions.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n\t\toptions.put(\"target\", \"MyTarget\");\n\t\toptions.put(\"buffer-size\", \"1000\");\n\t\toptions.put(\"format\", \"canal-json\");\n\t\treturn options;\n\t}\n","date":"2020-09-18 15:52:20","endLine":149,"groupId":"26310","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getAllOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/47/67c99f2c66cec208009eae99c43c1a30e0c9f5.src","preCode":"\tprivate Map<String, String> getAllOptions() {\n\t\tfinal Map<String, String> options = new HashMap<>();\n\t\toptions.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n\t\toptions.put(\"target\", \"MyTarget\");\n\t\toptions.put(\"buffer-size\", \"1000\");\n\n\t\toptions.put(\"format\", \"canal-json\");\n\t\toptions.put(\"canal-json.ignore-parse-errors\", \"true\");\n\t\toptions.put(\"canal-json.timestamp-format.standard\", \"ISO-8601\");\n\t\treturn options;\n\t}\n","realPath":"flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/canal/CanalJsonFormatFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"},{"authorDate":"2020-07-30 21:09:26","commitOrder":4,"curCode":"\tprivate Map<String, String> getDefaultOptions() {\n\t\tfinal Map<String, String> options = new HashMap<>();\n\t\toptions.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n\t\toptions.put(\"target\", \"MyTarget\");\n\t\toptions.put(\"buffer-size\", \"1000\");\n\n\t\toptions.put(\"format\", RegistryAvroFormatFactory.IDENTIFIER);\n\t\toptions.put(\"avro-confluent.schema-registry.subject\", SUBJECT);\n\t\toptions.put(\"avro-confluent.schema-registry.url\", REGISTRY_URL);\n\t\treturn options;\n\t}\n","date":"2020-07-30 21:09:26","endLine":158,"groupId":"26310","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getDefaultOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/db/fcc794c3eeeeddc7e9585be9984c1d91ae296d.src","preCode":"\tprivate Map<String, String> getDefaultOptions() {\n\t\tfinal Map<String, String> options = new HashMap<>();\n\t\toptions.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n\t\toptions.put(\"target\", \"MyTarget\");\n\t\toptions.put(\"buffer-size\", \"1000\");\n\n\t\toptions.put(\"format\", RegistryAvroFormatFactory.IDENTIFIER);\n\t\toptions.put(\"avro-confluent.schema-registry.subject\", SUBJECT);\n\t\toptions.put(\"avro-confluent.schema-registry.url\", REGISTRY_URL);\n\t\treturn options;\n\t}\n","realPath":"flink-formats/flink-avro-confluent-registry/src/test/java/org/apache/flink/formats/avro/registry/confluent/RegistryAvroFormatFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"N"}],"commitId":"a3b4c93f82bb04d7313bd0ab34e584061cf22974","commitMessage":"@@@[FLINK-19002][canal][json] Support to only read changelogs of specific database and table for canal-json format\n\nThis closes  (#13294)","date":"2020-09-18 15:52:20","modifiedFileCount":"4","status":"M","submitter":"Jark Wu"},{"authorTime":"2021-06-22 15:39:40","codes":[{"authorDate":"2020-09-18 15:52:20","commitOrder":5,"curCode":"\tprivate Map<String, String> getAllOptions() {\n\t\tfinal Map<String, String> options = new HashMap<>();\n\t\toptions.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n\t\toptions.put(\"target\", \"MyTarget\");\n\t\toptions.put(\"buffer-size\", \"1000\");\n\t\toptions.put(\"format\", \"canal-json\");\n\t\treturn options;\n\t}\n","date":"2020-09-18 15:52:20","endLine":149,"groupId":"102125","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getAllOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/47/67c99f2c66cec208009eae99c43c1a30e0c9f5.src","preCode":"\tprivate Map<String, String> getAllOptions() {\n\t\tfinal Map<String, String> options = new HashMap<>();\n\t\toptions.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n\t\toptions.put(\"target\", \"MyTarget\");\n\t\toptions.put(\"buffer-size\", \"1000\");\n\t\toptions.put(\"format\", \"canal-json\");\n\t\treturn options;\n\t}\n","realPath":"flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/canal/CanalJsonFormatFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"N"},{"authorDate":"2021-06-22 15:39:40","commitOrder":5,"curCode":"    private Map<String, String> getDefaultOptions() {\n        final Map<String, String> options = new HashMap<>();\n        options.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n        options.put(\"target\", \"MyTarget\");\n        options.put(\"buffer-size\", \"1000\");\n\n        options.put(\"format\", RegistryAvroFormatFactory.IDENTIFIER);\n        options.put(\"avro-confluent.subject\", SUBJECT);\n        options.put(\"avro-confluent.url\", REGISTRY_URL);\n        return options;\n    }\n","date":"2021-06-24 14:48:11","endLine":154,"groupId":"102125","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getDefaultOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d9/23bf8248d8a7fccfac5310510f559f23738d0d.src","preCode":"    private Map<String, String> getDefaultOptions() {\n        final Map<String, String> options = new HashMap<>();\n        options.put(\"connector\", TestDynamicTableFactory.IDENTIFIER);\n        options.put(\"target\", \"MyTarget\");\n        options.put(\"buffer-size\", \"1000\");\n\n        options.put(\"format\", RegistryAvroFormatFactory.IDENTIFIER);\n        options.put(\"avro-confluent.schema-registry.subject\", SUBJECT);\n        options.put(\"avro-confluent.schema-registry.url\", REGISTRY_URL);\n        return options;\n    }\n","realPath":"flink-formats/flink-avro-confluent-registry/src/test/java/org/apache/flink/formats/avro/registry/confluent/RegistryAvroFormatFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"6c70f8805f1c0929eecfe4fd0e0d4912e9576cb6","commitMessage":"@@@[FLINK-21229][avro-confluent-registry] Shorten RegistryAvroOptions\n","date":"2021-06-24 14:48:11","modifiedFileCount":"8","status":"M","submitter":"Timo Walther"}]
