[{"authorTime":"2019-08-20 22:12:01","codes":[{"authorDate":"2019-08-20 22:12:01","commitOrder":1,"curCode":"\tprivate void putKeySpace(KeySpace keySpace, MemorySegment memorySegment, int offset) {\n\t\tSkipListUtils.putLevelAndNodeStatus(memorySegment, offset, keySpace.level, keySpace.status);\n\t\tSkipListUtils.putKeyLen(memorySegment, offset, keySpace.keyData.length);\n\t\tSkipListUtils.putValuePointer(memorySegment, offset, keySpace.valuePointer);\n\t\tSkipListUtils.putNextKeyPointer(memorySegment, offset, keySpace.nextKeyPointer);\n\t\tfor (int i = 1; i <= keySpace.nextIndexNodes.length; i++) {\n\t\t\tSkipListUtils.putNextIndexNode(memorySegment, offset, i, keySpace.nextIndexNodes[i - 1]);\n\t\t}\n\t\tfor (int i = 1; i <= keySpace.prevIndexNodes.length; i++) {\n\t\t\tSkipListUtils.putPrevIndexNode(memorySegment, offset, keySpace.level, i, keySpace.prevIndexNodes[i - 1]);\n\t\t}\n\t\tSkipListUtils.putKeyData(memorySegment, offset, MemorySegmentFactory.wrap(keySpace.keyData),\n\t\t\t0, keySpace.keyData.length, keySpace.level);\n\t}\n","date":"2019-11-08 01:31:48","endLine":98,"groupId":"22606","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"putKeySpace","params":"(KeySpacekeySpace@MemorySegmentmemorySegment@intoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3e/d2d1850f05cd98b61e88e9c48053f99a24cb18.src","preCode":"\tprivate void putKeySpace(KeySpace keySpace, MemorySegment memorySegment, int offset) {\n\t\tSkipListUtils.putLevelAndNodeStatus(memorySegment, offset, keySpace.level, keySpace.status);\n\t\tSkipListUtils.putKeyLen(memorySegment, offset, keySpace.keyData.length);\n\t\tSkipListUtils.putValuePointer(memorySegment, offset, keySpace.valuePointer);\n\t\tSkipListUtils.putNextKeyPointer(memorySegment, offset, keySpace.nextKeyPointer);\n\t\tfor (int i = 1; i <= keySpace.nextIndexNodes.length; i++) {\n\t\t\tSkipListUtils.putNextIndexNode(memorySegment, offset, i, keySpace.nextIndexNodes[i - 1]);\n\t\t}\n\t\tfor (int i = 1; i <= keySpace.prevIndexNodes.length; i++) {\n\t\t\tSkipListUtils.putPrevIndexNode(memorySegment, offset, keySpace.level, i, keySpace.prevIndexNodes[i - 1]);\n\t\t}\n\t\tSkipListUtils.putKeyData(memorySegment, offset, MemorySegmentFactory.wrap(keySpace.keyData),\n\t\t\t0, keySpace.keyData.length, keySpace.level);\n\t}\n","realPath":"flink-state-backends/flink-statebackend-heap-spillable/src/test/java/org/apache/flink/runtime/state/heap/SkipListUtilsTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2019-08-20 22:12:01","commitOrder":1,"curCode":"\tprivate void putValueSpace(ValueSpace valueSpace, MemorySegment memorySegment, int offset) {\n\t\tSkipListUtils.putValueVersion(memorySegment, offset, valueSpace.version);\n\t\tSkipListUtils.putKeyPointer(memorySegment, offset, valueSpace.keyPointer);\n\t\tSkipListUtils.putNextValuePointer(memorySegment, offset, valueSpace.nextValuePointer);\n\t\tSkipListUtils.putValueLen(memorySegment, offset, valueSpace.valueData.length);\n\t\tSkipListUtils.putValueData(memorySegment, offset, valueSpace.valueData);\n\t}\n","date":"2019-11-08 01:31:48","endLine":135,"groupId":"22616","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"putValueSpace","params":"(ValueSpacevalueSpace@MemorySegmentmemorySegment@intoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3e/d2d1850f05cd98b61e88e9c48053f99a24cb18.src","preCode":"\tprivate void putValueSpace(ValueSpace valueSpace, MemorySegment memorySegment, int offset) {\n\t\tSkipListUtils.putValueVersion(memorySegment, offset, valueSpace.version);\n\t\tSkipListUtils.putKeyPointer(memorySegment, offset, valueSpace.keyPointer);\n\t\tSkipListUtils.putNextValuePointer(memorySegment, offset, valueSpace.nextValuePointer);\n\t\tSkipListUtils.putValueLen(memorySegment, offset, valueSpace.valueData.length);\n\t\tSkipListUtils.putValueData(memorySegment, offset, valueSpace.valueData);\n\t}\n","realPath":"flink-state-backends/flink-statebackend-heap-spillable/src/test/java/org/apache/flink/runtime/state/heap/SkipListUtilsTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"}],"commitId":"525f3c9c45f8534f1782986781140473909116a8","commitMessage":"@@@[FLINK-12697][state backends] Support on-disk state storage for spill-able heap backend\n","date":"2019-11-08 01:31:48","modifiedFileCount":"4","status":"B","submitter":"Yu Li"},{"authorTime":"2019-08-20 22:12:01","codes":[{"authorDate":"2021-02-19 17:12:54","commitOrder":2,"curCode":"    private void putKeySpace(KeySpace keySpace, MemorySegment memorySegment, int offset) {\n        SkipListUtils.putLevelAndNodeStatus(memorySegment, offset, keySpace.level, keySpace.status);\n        SkipListUtils.putKeyLen(memorySegment, offset, keySpace.keyData.length);\n        SkipListUtils.putValuePointer(memorySegment, offset, keySpace.valuePointer);\n        SkipListUtils.putNextKeyPointer(memorySegment, offset, keySpace.nextKeyPointer);\n        for (int i = 1; i <= keySpace.nextIndexNodes.length; i++) {\n            SkipListUtils.putNextIndexNode(\n                    memorySegment, offset, i, keySpace.nextIndexNodes[i - 1]);\n        }\n        for (int i = 1; i <= keySpace.prevIndexNodes.length; i++) {\n            SkipListUtils.putPrevIndexNode(\n                    memorySegment, offset, keySpace.level, i, keySpace.prevIndexNodes[i - 1]);\n        }\n        SkipListUtils.putKeyData(\n                memorySegment,\n                offset,\n                MemorySegmentFactory.wrapHeapSegment(keySpace.keyData),\n                0,\n                keySpace.keyData.length,\n                keySpace.level);\n    }\n","date":"2021-02-21 09:12:32","endLine":105,"groupId":"22606","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"putKeySpace","params":"(KeySpacekeySpace@MemorySegmentmemorySegment@intoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/96/acb376440afa5cf1d559319c441fed2a8762d6.src","preCode":"    private void putKeySpace(KeySpace keySpace, MemorySegment memorySegment, int offset) {\n        SkipListUtils.putLevelAndNodeStatus(memorySegment, offset, keySpace.level, keySpace.status);\n        SkipListUtils.putKeyLen(memorySegment, offset, keySpace.keyData.length);\n        SkipListUtils.putValuePointer(memorySegment, offset, keySpace.valuePointer);\n        SkipListUtils.putNextKeyPointer(memorySegment, offset, keySpace.nextKeyPointer);\n        for (int i = 1; i <= keySpace.nextIndexNodes.length; i++) {\n            SkipListUtils.putNextIndexNode(\n                    memorySegment, offset, i, keySpace.nextIndexNodes[i - 1]);\n        }\n        for (int i = 1; i <= keySpace.prevIndexNodes.length; i++) {\n            SkipListUtils.putPrevIndexNode(\n                    memorySegment, offset, keySpace.level, i, keySpace.prevIndexNodes[i - 1]);\n        }\n        SkipListUtils.putKeyData(\n                memorySegment,\n                offset,\n                MemorySegmentFactory.wrap(keySpace.keyData),\n                0,\n                keySpace.keyData.length,\n                keySpace.level);\n    }\n","realPath":"flink-state-backends/flink-statebackend-heap-spillable/src/test/java/org/apache/flink/runtime/state/heap/SkipListUtilsTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2019-08-20 22:12:01","commitOrder":2,"curCode":"\tprivate void putValueSpace(ValueSpace valueSpace, MemorySegment memorySegment, int offset) {\n\t\tSkipListUtils.putValueVersion(memorySegment, offset, valueSpace.version);\n\t\tSkipListUtils.putKeyPointer(memorySegment, offset, valueSpace.keyPointer);\n\t\tSkipListUtils.putNextValuePointer(memorySegment, offset, valueSpace.nextValuePointer);\n\t\tSkipListUtils.putValueLen(memorySegment, offset, valueSpace.valueData.length);\n\t\tSkipListUtils.putValueData(memorySegment, offset, valueSpace.valueData);\n\t}\n","date":"2019-11-08 01:31:48","endLine":135,"groupId":"22616","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"putValueSpace","params":"(ValueSpacevalueSpace@MemorySegmentmemorySegment@intoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3e/d2d1850f05cd98b61e88e9c48053f99a24cb18.src","preCode":"\tprivate void putValueSpace(ValueSpace valueSpace, MemorySegment memorySegment, int offset) {\n\t\tSkipListUtils.putValueVersion(memorySegment, offset, valueSpace.version);\n\t\tSkipListUtils.putKeyPointer(memorySegment, offset, valueSpace.keyPointer);\n\t\tSkipListUtils.putNextValuePointer(memorySegment, offset, valueSpace.nextValuePointer);\n\t\tSkipListUtils.putValueLen(memorySegment, offset, valueSpace.valueData.length);\n\t\tSkipListUtils.putValueData(memorySegment, offset, valueSpace.valueData);\n\t}\n","realPath":"flink-state-backends/flink-statebackend-heap-spillable/src/test/java/org/apache/flink/runtime/state/heap/SkipListUtilsTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"N"}],"commitId":"86015c766ba186f18c2b3b41c3900ea4f809a1c2","commitMessage":"@@@[FLINK-21417][core] Update MemorySegmentFactory with explicit segment types.\n\nThis closes #14966\n","date":"2021-02-21 09:12:32","modifiedFileCount":"118","status":"M","submitter":"Xintong Song"},{"authorTime":"2019-08-20 22:12:01","codes":[{"authorDate":"2021-02-22 14:11:51","commitOrder":3,"curCode":"    private void putKeySpace(KeySpace keySpace, MemorySegment memorySegment, int offset) {\n        SkipListUtils.putLevelAndNodeStatus(memorySegment, offset, keySpace.level, keySpace.status);\n        SkipListUtils.putKeyLen(memorySegment, offset, keySpace.keyData.length);\n        SkipListUtils.putValuePointer(memorySegment, offset, keySpace.valuePointer);\n        SkipListUtils.putNextKeyPointer(memorySegment, offset, keySpace.nextKeyPointer);\n        for (int i = 1; i <= keySpace.nextIndexNodes.length; i++) {\n            SkipListUtils.putNextIndexNode(\n                    memorySegment, offset, i, keySpace.nextIndexNodes[i - 1]);\n        }\n        for (int i = 1; i <= keySpace.prevIndexNodes.length; i++) {\n            SkipListUtils.putPrevIndexNode(\n                    memorySegment, offset, keySpace.level, i, keySpace.prevIndexNodes[i - 1]);\n        }\n        SkipListUtils.putKeyData(\n                memorySegment,\n                offset,\n                MemorySegmentFactory.wrap(keySpace.keyData),\n                0,\n                keySpace.keyData.length,\n                keySpace.level);\n    }\n","date":"2021-02-22 14:18:02","endLine":105,"groupId":"10122","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"putKeySpace","params":"(KeySpacekeySpace@MemorySegmentmemorySegment@intoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/67/9fec0ecef62b84be6c92ccc771f5fb1d7482a0.src","preCode":"    private void putKeySpace(KeySpace keySpace, MemorySegment memorySegment, int offset) {\n        SkipListUtils.putLevelAndNodeStatus(memorySegment, offset, keySpace.level, keySpace.status);\n        SkipListUtils.putKeyLen(memorySegment, offset, keySpace.keyData.length);\n        SkipListUtils.putValuePointer(memorySegment, offset, keySpace.valuePointer);\n        SkipListUtils.putNextKeyPointer(memorySegment, offset, keySpace.nextKeyPointer);\n        for (int i = 1; i <= keySpace.nextIndexNodes.length; i++) {\n            SkipListUtils.putNextIndexNode(\n                    memorySegment, offset, i, keySpace.nextIndexNodes[i - 1]);\n        }\n        for (int i = 1; i <= keySpace.prevIndexNodes.length; i++) {\n            SkipListUtils.putPrevIndexNode(\n                    memorySegment, offset, keySpace.level, i, keySpace.prevIndexNodes[i - 1]);\n        }\n        SkipListUtils.putKeyData(\n                memorySegment,\n                offset,\n                MemorySegmentFactory.wrapHeapSegment(keySpace.keyData),\n                0,\n                keySpace.keyData.length,\n                keySpace.level);\n    }\n","realPath":"flink-state-backends/flink-statebackend-heap-spillable/src/test/java/org/apache/flink/runtime/state/heap/SkipListUtilsTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2019-08-20 22:12:01","commitOrder":3,"curCode":"\tprivate void putValueSpace(ValueSpace valueSpace, MemorySegment memorySegment, int offset) {\n\t\tSkipListUtils.putValueVersion(memorySegment, offset, valueSpace.version);\n\t\tSkipListUtils.putKeyPointer(memorySegment, offset, valueSpace.keyPointer);\n\t\tSkipListUtils.putNextValuePointer(memorySegment, offset, valueSpace.nextValuePointer);\n\t\tSkipListUtils.putValueLen(memorySegment, offset, valueSpace.valueData.length);\n\t\tSkipListUtils.putValueData(memorySegment, offset, valueSpace.valueData);\n\t}\n","date":"2019-11-08 01:31:48","endLine":135,"groupId":"10122","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"putValueSpace","params":"(ValueSpacevalueSpace@MemorySegmentmemorySegment@intoffset)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3e/d2d1850f05cd98b61e88e9c48053f99a24cb18.src","preCode":"\tprivate void putValueSpace(ValueSpace valueSpace, MemorySegment memorySegment, int offset) {\n\t\tSkipListUtils.putValueVersion(memorySegment, offset, valueSpace.version);\n\t\tSkipListUtils.putKeyPointer(memorySegment, offset, valueSpace.keyPointer);\n\t\tSkipListUtils.putNextValuePointer(memorySegment, offset, valueSpace.nextValuePointer);\n\t\tSkipListUtils.putValueLen(memorySegment, offset, valueSpace.valueData.length);\n\t\tSkipListUtils.putValueData(memorySegment, offset, valueSpace.valueData);\n\t}\n","realPath":"flink-state-backends/flink-statebackend-heap-spillable/src/test/java/org/apache/flink/runtime/state/heap/SkipListUtilsTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"N"}],"commitId":"b81392665950c22ed347abcab611050a7fd1ae38","commitMessage":"@@@Revert FLINK-21417 due to performance regression.\n\n- 86015c766ba186f18c2b3b41c3900ea4f809a1c2: \"[FLINK-21417][core] Update MemorySegmentFactory with explicit segment types.\"\n- 1d0f5e5bc4e4926554a2f381b96ee4d569de8af5: \"[FLINK-21417][core] Re-abstract wrapping methods for memory segments.\"\n- 94362fa8917618ea3fa2a46b072abe528034070d: \"[FLINK-21417][core] Seprate OffHeapMemorySegment into DirectMemorySegment and UnsafeMemorySegment.\"\n- 046f950a820b35fde6f411fb90f42ab1b5eaaeff: \"[FLINK-21417][core] Turn HybridMemorySegment into OffHeapMemorySegment.\"\n- 10df8703a24b040481d1f56db5a74a3964c350c9: \"[FLINK-21417][core] Move some access methods from HybridMemorySegment to MemorySegment.\n- 0a664e1869e62005c37de2de0c19148468f1f059: \"[FLINK-21417][core] Migrate on-heap use cases of HybridMemorySegment to HeapMemorySegment.\"\n","date":"2021-02-22 14:18:02","modifiedFileCount":"118","status":"M","submitter":"Xintong Song"}]
