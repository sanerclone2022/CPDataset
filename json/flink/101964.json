[{"authorTime":"2020-09-01 16:33:27","codes":[{"authorDate":"2020-10-19 20:18:46","commitOrder":3,"curCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> rowDataTypeInfo =\n\t\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new AvroRowDataDeserializationSchema(rowType, rowDataTypeInfo);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.insertOnly();\n\t\t\t}\n\t\t};\n\t}\n","date":"2020-10-23 17:46:04","endLine":74,"groupId":"40865","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createDecodingFormat","params":"(DynamicTableFactory.Contextcontext@ReadableConfigformatOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/bb/45beb7f7772c567a9983d796fe58349f0a5999.src","preCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> rowDataTypeInfo =\n\t\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new AvroRowDataDeserializationSchema(rowType, rowDataTypeInfo);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.insertOnly();\n\t\t\t}\n\t\t};\n\t}\n","realPath":"flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/AvroFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"NB"},{"authorDate":"2020-09-01 16:33:27","commitOrder":3,"curCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\t\tString schemaRegistryURL = formatOptions.get(SCHEMA_REGISTRY_URL);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> rowDataTypeInfo =\n\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new DebeziumAvroDeserializationSchema(\n\t\t\t\t\trowType,\n\t\t\t\t\trowDataTypeInfo,\n\t\t\t\t\tschemaRegistryURL);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.newBuilder()\n\t\t\t\t\t.addContainedKind(RowKind.INSERT)\n\t\t\t\t\t.addContainedKind(RowKind.UPDATE_BEFORE)\n\t\t\t\t\t.addContainedKind(RowKind.UPDATE_AFTER)\n\t\t\t\t\t.addContainedKind(RowKind.DELETE)\n\t\t\t\t\t.build();\n\t\t\t}\n\t\t};\n\t}\n","date":"2020-11-08 17:57:22","endLine":88,"groupId":"10171","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createDecodingFormat","params":"(DynamicTableFactory.Contextcontext@ReadableConfigformatOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d5/d522ac023be7f13c885f1445341ed30e0d17a4.src","preCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\t\tString schemaRegistryURL = formatOptions.get(SCHEMA_REGISTRY_URL);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> rowDataTypeInfo =\n\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new DebeziumAvroDeserializationSchema(\n\t\t\t\t\trowType,\n\t\t\t\t\trowDataTypeInfo,\n\t\t\t\t\tschemaRegistryURL);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.newBuilder()\n\t\t\t\t\t.addContainedKind(RowKind.INSERT)\n\t\t\t\t\t.addContainedKind(RowKind.UPDATE_BEFORE)\n\t\t\t\t\t.addContainedKind(RowKind.UPDATE_AFTER)\n\t\t\t\t\t.addContainedKind(RowKind.DELETE)\n\t\t\t\t\t.build();\n\t\t\t}\n\t\t};\n\t}\n","realPath":"flink-formats/flink-avro-confluent-registry/src/main/java/org/apache/flink/formats/avro/registry/confluent/debezium/DebeziumAvroFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"}],"commitId":"edec6aa895568c6dfa47e73d10071cda3b57015a","commitMessage":"@@@[FLINK-18774][debezium-avro] Support debezium avro format\n\nThis closes #13296\n","date":"2020-11-08 17:57:22","modifiedFileCount":"1","status":"M","submitter":"caozhen1937"},{"authorTime":"2020-11-07 14:28:54","codes":[{"authorDate":"2020-10-19 20:18:46","commitOrder":4,"curCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> rowDataTypeInfo =\n\t\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new AvroRowDataDeserializationSchema(rowType, rowDataTypeInfo);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.insertOnly();\n\t\t\t}\n\t\t};\n\t}\n","date":"2020-10-23 17:46:04","endLine":74,"groupId":"40865","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createDecodingFormat","params":"(DynamicTableFactory.Contextcontext@ReadableConfigformatOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/bb/45beb7f7772c567a9983d796fe58349f0a5999.src","preCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> rowDataTypeInfo =\n\t\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new AvroRowDataDeserializationSchema(rowType, rowDataTypeInfo);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.insertOnly();\n\t\t\t}\n\t\t};\n\t}\n","realPath":"flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/AvroFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"NB"},{"authorDate":"2020-11-07 14:28:54","commitOrder":4,"curCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\t\tString schemaRegistryURL = formatOptions.get(SCHEMA_REGISTRY_URL);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> producedTypeInfo =\n\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new DebeziumAvroDeserializationSchema(\n\t\t\t\t\trowType,\n\t\t\t\t\tproducedTypeInfo,\n\t\t\t\t\tschemaRegistryURL);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.newBuilder()\n\t\t\t\t\t.addContainedKind(RowKind.INSERT)\n\t\t\t\t\t.addContainedKind(RowKind.UPDATE_BEFORE)\n\t\t\t\t\t.addContainedKind(RowKind.UPDATE_AFTER)\n\t\t\t\t\t.addContainedKind(RowKind.DELETE)\n\t\t\t\t\t.build();\n\t\t\t}\n\t\t};\n\t}\n","date":"2020-11-08 17:57:22","endLine":87,"groupId":"10171","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createDecodingFormat","params":"(DynamicTableFactory.Contextcontext@ReadableConfigformatOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/49/4108c1861c092d6df1e7cac372c743a5cd4621.src","preCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\t\tString schemaRegistryURL = formatOptions.get(SCHEMA_REGISTRY_URL);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> producedTypeInfo =\n\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new DebeziumAvroDeserializationSchema(\n\t\t\t\t\trowType,\n\t\t\t\t\tproducedTypeInfo,\n\t\t\t\t\tschemaRegistryURL);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.newBuilder()\n\t\t\t\t\t.addContainedKind(RowKind.INSERT)\n\t\t\t\t\t.addContainedKind(RowKind.UPDATE_BEFORE)\n\t\t\t\t\t.addContainedKind(RowKind.UPDATE_AFTER)\n\t\t\t\t\t.addContainedKind(RowKind.DELETE)\n\t\t\t\t\t.build();\n\t\t\t}\n\t\t};\n\t}\n","realPath":"flink-formats/flink-avro-confluent-registry/src/main/java/org/apache/flink/formats/avro/registry/confluent/debezium/DebeziumAvroFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"MB"}],"commitId":"bff7da11cb0148ab6e63acac7844deb922458999","commitMessage":"@@@[FLINK-18774][debezium-avro] Improve debezium-avro format implementation\n","date":"2020-11-08 17:57:22","modifiedFileCount":"13","status":"M","submitter":"Jark Wu"},{"authorTime":"2021-06-22 15:39:40","codes":[{"authorDate":"2020-10-19 20:18:46","commitOrder":5,"curCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> rowDataTypeInfo =\n\t\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new AvroRowDataDeserializationSchema(rowType, rowDataTypeInfo);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.insertOnly();\n\t\t\t}\n\t\t};\n\t}\n","date":"2020-10-23 17:46:04","endLine":74,"groupId":"40865","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createDecodingFormat","params":"(DynamicTableFactory.Contextcontext@ReadableConfigformatOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/bb/45beb7f7772c567a9983d796fe58349f0a5999.src","preCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> rowDataTypeInfo =\n\t\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new AvroRowDataDeserializationSchema(rowType, rowDataTypeInfo);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.insertOnly();\n\t\t\t}\n\t\t};\n\t}\n","realPath":"flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/AvroFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"},{"authorDate":"2021-06-22 15:39:40","commitOrder":5,"curCode":"    public DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n            DynamicTableFactory.Context context, ReadableConfig formatOptions) {\n\n        FactoryUtil.validateFactoryOptions(this, formatOptions);\n        String schemaRegistryURL = formatOptions.get(URL);\n\n        return new DecodingFormat<DeserializationSchema<RowData>>() {\n            @Override\n            public DeserializationSchema<RowData> createRuntimeDecoder(\n                    DynamicTableSource.Context context, DataType producedDataType) {\n                final RowType rowType = (RowType) producedDataType.getLogicalType();\n                final TypeInformation<RowData> producedTypeInfo =\n                        context.createTypeInformation(producedDataType);\n                return new DebeziumAvroDeserializationSchema(\n                        rowType, producedTypeInfo, schemaRegistryURL);\n            }\n\n            @Override\n            public ChangelogMode getChangelogMode() {\n                return ChangelogMode.newBuilder()\n                        .addContainedKind(RowKind.INSERT)\n                        .addContainedKind(RowKind.UPDATE_BEFORE)\n                        .addContainedKind(RowKind.UPDATE_AFTER)\n                        .addContainedKind(RowKind.DELETE)\n                        .build();\n            }\n        };\n    }\n","date":"2021-06-24 14:48:11","endLine":85,"groupId":"10171","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createDecodingFormat","params":"(DynamicTableFactory.Contextcontext@ReadableConfigformatOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f5/66bfbaf4ada270694868842510b252d64384f7.src","preCode":"    public DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n            DynamicTableFactory.Context context, ReadableConfig formatOptions) {\n\n        FactoryUtil.validateFactoryOptions(this, formatOptions);\n        String schemaRegistryURL = formatOptions.get(SCHEMA_REGISTRY_URL);\n\n        return new DecodingFormat<DeserializationSchema<RowData>>() {\n            @Override\n            public DeserializationSchema<RowData> createRuntimeDecoder(\n                    DynamicTableSource.Context context, DataType producedDataType) {\n                final RowType rowType = (RowType) producedDataType.getLogicalType();\n                final TypeInformation<RowData> producedTypeInfo =\n                        context.createTypeInformation(producedDataType);\n                return new DebeziumAvroDeserializationSchema(\n                        rowType, producedTypeInfo, schemaRegistryURL);\n            }\n\n            @Override\n            public ChangelogMode getChangelogMode() {\n                return ChangelogMode.newBuilder()\n                        .addContainedKind(RowKind.INSERT)\n                        .addContainedKind(RowKind.UPDATE_BEFORE)\n                        .addContainedKind(RowKind.UPDATE_AFTER)\n                        .addContainedKind(RowKind.DELETE)\n                        .build();\n            }\n        };\n    }\n","realPath":"flink-formats/flink-avro-confluent-registry/src/main/java/org/apache/flink/formats/avro/registry/confluent/debezium/DebeziumAvroFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"6c70f8805f1c0929eecfe4fd0e0d4912e9576cb6","commitMessage":"@@@[FLINK-21229][avro-confluent-registry] Shorten RegistryAvroOptions\n","date":"2021-06-24 14:48:11","modifiedFileCount":"8","status":"M","submitter":"Timo Walther"},{"authorTime":"2021-07-21 20:39:15","codes":[{"authorDate":"2020-10-19 20:18:46","commitOrder":6,"curCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> rowDataTypeInfo =\n\t\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new AvroRowDataDeserializationSchema(rowType, rowDataTypeInfo);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.insertOnly();\n\t\t\t}\n\t\t};\n\t}\n","date":"2020-10-23 17:46:04","endLine":74,"groupId":"101964","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createDecodingFormat","params":"(DynamicTableFactory.Contextcontext@ReadableConfigformatOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/bb/45beb7f7772c567a9983d796fe58349f0a5999.src","preCode":"\tpublic DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n\t\t\tDynamicTableFactory.Context context,\n\t\t\tReadableConfig formatOptions) {\n\t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n\n\t\treturn new DecodingFormat<DeserializationSchema<RowData>>() {\n\t\t\t@Override\n\t\t\tpublic DeserializationSchema<RowData> createRuntimeDecoder(\n\t\t\t\t\tDynamicTableSource.Context context,\n\t\t\t\t\tDataType producedDataType) {\n\t\t\t\tfinal RowType rowType = (RowType) producedDataType.getLogicalType();\n\t\t\t\tfinal TypeInformation<RowData> rowDataTypeInfo =\n\t\t\t\t\t\tcontext.createTypeInformation(producedDataType);\n\t\t\t\treturn new AvroRowDataDeserializationSchema(rowType, rowDataTypeInfo);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic ChangelogMode getChangelogMode() {\n\t\t\t\treturn ChangelogMode.insertOnly();\n\t\t\t}\n\t\t};\n\t}\n","realPath":"flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/AvroFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"},{"authorDate":"2021-07-21 20:39:15","commitOrder":6,"curCode":"    public DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n            DynamicTableFactory.Context context, ReadableConfig formatOptions) {\n\n        FactoryUtil.validateFactoryOptions(this, formatOptions);\n        String schemaRegistryURL = formatOptions.get(URL);\n        Map<String, ?> optionalPropertiesMap = buildOptionalPropertiesMap(formatOptions);\n\n        return new DecodingFormat<DeserializationSchema<RowData>>() {\n            @Override\n            public DeserializationSchema<RowData> createRuntimeDecoder(\n                    DynamicTableSource.Context context, DataType producedDataType) {\n                final RowType rowType = (RowType) producedDataType.getLogicalType();\n                final TypeInformation<RowData> producedTypeInfo =\n                        context.createTypeInformation(producedDataType);\n                return new DebeziumAvroDeserializationSchema(\n                        rowType, producedTypeInfo, schemaRegistryURL, optionalPropertiesMap);\n            }\n\n            @Override\n            public ChangelogMode getChangelogMode() {\n                return ChangelogMode.newBuilder()\n                        .addContainedKind(RowKind.INSERT)\n                        .addContainedKind(RowKind.UPDATE_BEFORE)\n                        .addContainedKind(RowKind.UPDATE_AFTER)\n                        .addContainedKind(RowKind.DELETE)\n                        .build();\n            }\n        };\n    }\n","date":"2021-08-02 23:08:23","endLine":97,"groupId":"101964","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createDecodingFormat","params":"(DynamicTableFactory.Contextcontext@ReadableConfigformatOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/db/b07904959f55064f0e7bc5330da4eec7906d0c.src","preCode":"    public DecodingFormat<DeserializationSchema<RowData>> createDecodingFormat(\n            DynamicTableFactory.Context context, ReadableConfig formatOptions) {\n\n        FactoryUtil.validateFactoryOptions(this, formatOptions);\n        String schemaRegistryURL = formatOptions.get(URL);\n\n        return new DecodingFormat<DeserializationSchema<RowData>>() {\n            @Override\n            public DeserializationSchema<RowData> createRuntimeDecoder(\n                    DynamicTableSource.Context context, DataType producedDataType) {\n                final RowType rowType = (RowType) producedDataType.getLogicalType();\n                final TypeInformation<RowData> producedTypeInfo =\n                        context.createTypeInformation(producedDataType);\n                return new DebeziumAvroDeserializationSchema(\n                        rowType, producedTypeInfo, schemaRegistryURL);\n            }\n\n            @Override\n            public ChangelogMode getChangelogMode() {\n                return ChangelogMode.newBuilder()\n                        .addContainedKind(RowKind.INSERT)\n                        .addContainedKind(RowKind.UPDATE_BEFORE)\n                        .addContainedKind(RowKind.UPDATE_AFTER)\n                        .addContainedKind(RowKind.DELETE)\n                        .build();\n            }\n        };\n    }\n","realPath":"flink-formats/flink-avro-confluent-registry/src/main/java/org/apache/flink/formats/avro/registry/confluent/debezium/DebeziumAvroFormatFactory.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"78db0e7c50235d7f5ae83225ac11192f5b121f7a","commitMessage":"@@@[FLINK-23450][avro-confluent-registry] Set properties map for DebeziumAvroFormat\n\nThis closes #16565.\n","date":"2021-08-02 23:08:23","modifiedFileCount":"6","status":"M","submitter":"Timo Walther"}]
