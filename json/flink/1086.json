[{"authorTime":"2018-06-13 16:24:10","codes":[{"authorDate":"2018-06-13 16:24:10","commitOrder":1,"curCode":"\tstatic <E, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyedBackendStateMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBListState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<List<E>>) registerResult.f1.getStateSerializer(),\n\t\t\t(List<E>) stateDesc.getDefaultValue(),\n\t\t\t((ListStateDescriptor<E>) stateDesc).getElementSerializer(),\n\t\t\tbackend);\n\t}\n","date":"2018-06-18 20:41:50","endLine":269,"groupId":"5656","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(StateDescriptor<S@SV>stateDesc@Tuple2<ColumnFamilyHandle@RegisteredKeyedBackendStateMetaInfo<N@SV>>registerResult@RocksDBKeyedStateBackend<K>backend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/03/faa44273705baa9064ac169c53573f0155a2db.src","preCode":"\tstatic <E, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyedBackendStateMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBListState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<List<E>>) registerResult.f1.getStateSerializer(),\n\t\t\t(List<E>) stateDesc.getDefaultValue(),\n\t\t\t((ListStateDescriptor<E>) stateDesc).getElementSerializer(),\n\t\t\tbackend);\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"B"},{"authorDate":"2018-06-13 16:24:10","commitOrder":1,"curCode":"\tstatic <UK, UV, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyedBackendStateMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBMapState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<Map<UK, UV>>) registerResult.f1.getStateSerializer(),\n\t\t\t(Map<UK, UV>) stateDesc.getDefaultValue(),\n\t\t\tbackend);\n\t}\n","date":"2018-06-18 20:41:50","endLine":627,"groupId":"5656","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(StateDescriptor<S@SV>stateDesc@Tuple2<ColumnFamilyHandle@RegisteredKeyedBackendStateMetaInfo<N@SV>>registerResult@RocksDBKeyedStateBackend<K>backend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9d/00a6723ae0cb3e94f85be1497c9eac68832718.src","preCode":"\tstatic <UK, UV, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyedBackendStateMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBMapState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<Map<UK, UV>>) registerResult.f1.getStateSerializer(),\n\t\t\t(Map<UK, UV>) stateDesc.getDefaultValue(),\n\t\t\tbackend);\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBMapState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":617,"status":"B"}],"commitId":"0bdde8377c254195fe94709d639bf03f9bd77606","commitMessage":"@@@[FLINK-9571] Repace StateBinder with internal backend-specific state factories\n\nThis closes #6173.\n","date":"2018-06-18 20:41:50","modifiedFileCount":"42","status":"B","submitter":"Andrey Zagrebin"},{"authorTime":"2018-06-13 17:56:16","codes":[{"authorDate":"2018-06-13 17:56:16","commitOrder":2,"curCode":"\tstatic <E, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyValueStateBackendMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBListState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<List<E>>) registerResult.f1.getStateSerializer(),\n\t\t\t(List<E>) stateDesc.getDefaultValue(),\n\t\t\t((ListStateDescriptor<E>) stateDesc).getElementSerializer(),\n\t\t\tbackend);\n\t}\n","date":"2018-07-17 04:11:57","endLine":269,"groupId":"5656","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(StateDescriptor<S@SV>stateDesc@Tuple2<ColumnFamilyHandle@RegisteredKeyValueStateBackendMetaInfo<N@SV>>registerResult@RocksDBKeyedStateBackend<K>backend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/aa/5e93a364cb7dd6360fcedf4d5d7b8a3d499e2c.src","preCode":"\tstatic <E, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyedBackendStateMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBListState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<List<E>>) registerResult.f1.getStateSerializer(),\n\t\t\t(List<E>) stateDesc.getDefaultValue(),\n\t\t\t((ListStateDescriptor<E>) stateDesc).getElementSerializer(),\n\t\t\tbackend);\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"M"},{"authorDate":"2018-06-13 17:56:16","commitOrder":2,"curCode":"\tstatic <UK, UV, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyValueStateBackendMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBMapState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<Map<UK, UV>>) registerResult.f1.getStateSerializer(),\n\t\t\t(Map<UK, UV>) stateDesc.getDefaultValue(),\n\t\t\tbackend);\n\t}\n","date":"2018-07-17 04:11:57","endLine":627,"groupId":"5656","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(StateDescriptor<S@SV>stateDesc@Tuple2<ColumnFamilyHandle@RegisteredKeyValueStateBackendMetaInfo<N@SV>>registerResult@RocksDBKeyedStateBackend<K>backend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4e/c1f77ebe65460db9025ab9495021050e5607bf.src","preCode":"\tstatic <UK, UV, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyedBackendStateMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBMapState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<Map<UK, UV>>) registerResult.f1.getStateSerializer(),\n\t\t\t(Map<UK, UV>) stateDesc.getDefaultValue(),\n\t\t\tbackend);\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBMapState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":617,"status":"M"}],"commitId":"dbddf00b75032c20df6e7aef26814da392347194","commitMessage":"@@@[FLINK-9489] Checkpoint timers as part of managed keyed state instead of raw keyed state\n\nOptimization for relaxed bulk polls\n\nDeactivate optimization for now because it still contains a bug\n\nThis closes #6333.\n","date":"2018-07-17 04:11:57","modifiedFileCount":"47","status":"M","submitter":"Stefan Richter"},{"authorTime":"2018-06-13 17:56:16","codes":[{"authorDate":"2019-01-08 22:02:43","commitOrder":3,"curCode":"\tstatic <E, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyValueStateBackendMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBListState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<List<E>>) registerResult.f1.getStateSerializer(),\n\t\t\t(List<E>) stateDesc.getDefaultValue(),\n\t\t\tbackend);\n\t}\n","date":"2019-01-09 19:54:45","endLine":284,"groupId":"1086","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(StateDescriptor<S@SV>stateDesc@Tuple2<ColumnFamilyHandle@RegisteredKeyValueStateBackendMetaInfo<N@SV>>registerResult@RocksDBKeyedStateBackend<K>backend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/72/a5bc60b20ca64ea6feddb960b759c955193417.src","preCode":"\tstatic <E, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyValueStateBackendMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBListState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<List<E>>) registerResult.f1.getStateSerializer(),\n\t\t\t(List<E>) stateDesc.getDefaultValue(),\n\t\t\t((ListStateDescriptor<E>) stateDesc).getElementSerializer(),\n\t\t\tbackend);\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBListState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"},{"authorDate":"2018-06-13 17:56:16","commitOrder":3,"curCode":"\tstatic <UK, UV, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyValueStateBackendMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBMapState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<Map<UK, UV>>) registerResult.f1.getStateSerializer(),\n\t\t\t(Map<UK, UV>) stateDesc.getDefaultValue(),\n\t\t\tbackend);\n\t}\n","date":"2018-07-17 04:11:57","endLine":627,"groupId":"1086","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"create","params":"(StateDescriptor<S@SV>stateDesc@Tuple2<ColumnFamilyHandle@RegisteredKeyValueStateBackendMetaInfo<N@SV>>registerResult@RocksDBKeyedStateBackend<K>backend)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4e/c1f77ebe65460db9025ab9495021050e5607bf.src","preCode":"\tstatic <UK, UV, K, N, SV, S extends State, IS extends S> IS create(\n\t\tStateDescriptor<S, SV> stateDesc,\n\t\tTuple2<ColumnFamilyHandle, RegisteredKeyValueStateBackendMetaInfo<N, SV>> registerResult,\n\t\tRocksDBKeyedStateBackend<K> backend) {\n\t\treturn (IS) new RocksDBMapState<>(\n\t\t\tregisterResult.f0,\n\t\t\tregisterResult.f1.getNamespaceSerializer(),\n\t\t\t(TypeSerializer<Map<UK, UV>>) registerResult.f1.getStateSerializer(),\n\t\t\t(Map<UK, UV>) stateDesc.getDefaultValue(),\n\t\t\tbackend);\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBMapState.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":617,"status":"N"}],"commitId":"e5ed8c85139d1dfdb4b6a47a63ac36143a7b5c64","commitMessage":"@@@[FLINK-11287] [rocksdb] RocksDBListState should be using registered serializer in state meta infos\n\nThis closes #7434.\n","date":"2019-01-09 19:54:45","modifiedFileCount":"1","status":"M","submitter":"Tzu-Li (Gordon) Tai"}]
