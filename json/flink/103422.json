[{"authorTime":"2017-03-06 12:07:18","codes":[{"authorDate":"2017-03-06 12:07:18","commitOrder":1,"curCode":"\tpublic void process(Byte key, final W window, final InternalWindowContext context, Iterable<T> input, Collector<R> out) throws Exception {\n\t\tfinal ACC acc = aggFunction.createAccumulator();\n\n\t\tfor (T val : input) {\n\t\t\taggFunction.add(val, acc);\n\t\t}\n\n\t\tthis.ctx.window = window;\n\t\tthis.ctx.internalContext = context;\n\t\tProcessAllWindowFunction<V, R, W> wrappedFunction = this.wrappedFunction;\n\t\twrappedFunction.process(ctx, Collections.singletonList(aggFunction.getResult(acc)), out);\n\t}\n","date":"2017-03-25 23:59:17","endLine":77,"groupId":"15343","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(Bytekey@finalWwindow@finalInternalWindowContextcontext@Iterable<T>input@Collector<R>out)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/83/e896d21fdcf91e1796f40b1f6dbf4afd63e7da.src","preCode":"\tpublic void process(Byte key, final W window, final InternalWindowContext context, Iterable<T> input, Collector<R> out) throws Exception {\n\t\tfinal ACC acc = aggFunction.createAccumulator();\n\n\t\tfor (T val : input) {\n\t\t\taggFunction.add(val, acc);\n\t\t}\n\n\t\tthis.ctx.window = window;\n\t\tthis.ctx.internalContext = context;\n\t\tProcessAllWindowFunction<V, R, W> wrappedFunction = this.wrappedFunction;\n\t\twrappedFunction.process(ctx, Collections.singletonList(aggFunction.getResult(acc)), out);\n\t}\n","realPath":"flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/functions/InternalAggregateProcessAllWindowFunction.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"},{"authorDate":"2017-03-06 12:07:18","commitOrder":1,"curCode":"\tpublic void process(K key, final W window, final InternalWindowContext context, Iterable<T> input, Collector<R> out) throws Exception {\n\t\tfinal ACC acc = aggFunction.createAccumulator();\n\n\t\tfor (T val : input) {\n\t\t\taggFunction.add(val, acc);\n\t\t}\n\n\t\tthis.ctx.window = window;\n\t\tthis.ctx.internalContext = context;\n\t\tProcessWindowFunction<V, R, K, W> wrappedFunction = this.wrappedFunction;\n\t\twrappedFunction.process(key, ctx, Collections.singletonList(aggFunction.getResult(acc)), out);\n\t}\n","date":"2017-03-25 23:59:17","endLine":71,"groupId":"19708","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"(Kkey@finalWwindow@finalInternalWindowContextcontext@Iterable<T>input@Collector<R>out)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e1/4c9bd4b161cdb1f2227005af408bd27ff4dc52.src","preCode":"\tpublic void process(K key, final W window, final InternalWindowContext context, Iterable<T> input, Collector<R> out) throws Exception {\n\t\tfinal ACC acc = aggFunction.createAccumulator();\n\n\t\tfor (T val : input) {\n\t\t\taggFunction.add(val, acc);\n\t\t}\n\n\t\tthis.ctx.window = window;\n\t\tthis.ctx.internalContext = context;\n\t\tProcessWindowFunction<V, R, K, W> wrappedFunction = this.wrappedFunction;\n\t\twrappedFunction.process(key, ctx, Collections.singletonList(aggFunction.getResult(acc)), out);\n\t}\n","realPath":"flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/functions/InternalAggregateProcessWindowFunction.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"}],"commitId":"fad201bfb0b1f2757f68f7b3ffaf97a486eb93e8","commitMessage":"@@@[FLINK-5929] Allow Access to Per-Window State in ProcessWindowFunction\n","date":"2017-03-25 23:59:17","modifiedFileCount":"24","status":"B","submitter":"Seth Wiesman"},{"authorTime":"2017-10-14 01:17:01","codes":[{"authorDate":"2017-10-14 01:17:01","commitOrder":2,"curCode":"\tpublic void process(Byte key, final W window, final InternalWindowContext context, Iterable<T> input, Collector<R> out) throws Exception {\n\t\tACC acc = aggFunction.createAccumulator();\n\n\t\tfor (T val : input) {\n\t\t\tacc = aggFunction.add(val, acc);\n\t\t}\n\n\t\tthis.ctx.window = window;\n\t\tthis.ctx.internalContext = context;\n\t\tProcessAllWindowFunction<V, R, W> wrappedFunction = this.wrappedFunction;\n\t\twrappedFunction.process(ctx, Collections.singletonList(aggFunction.getResult(acc)), out);\n\t}\n","date":"2017-10-21 15:33:38","endLine":78,"groupId":"103422","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(Bytekey@finalWwindow@finalInternalWindowContextcontext@Iterable<T>input@Collector<R>out)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e1/7412a2b44482942daf5f794352c9b95739c4b7.src","preCode":"\tpublic void process(Byte key, final W window, final InternalWindowContext context, Iterable<T> input, Collector<R> out) throws Exception {\n\t\tfinal ACC acc = aggFunction.createAccumulator();\n\n\t\tfor (T val : input) {\n\t\t\taggFunction.add(val, acc);\n\t\t}\n\n\t\tthis.ctx.window = window;\n\t\tthis.ctx.internalContext = context;\n\t\tProcessAllWindowFunction<V, R, W> wrappedFunction = this.wrappedFunction;\n\t\twrappedFunction.process(ctx, Collections.singletonList(aggFunction.getResult(acc)), out);\n\t}\n","realPath":"flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/functions/InternalAggregateProcessAllWindowFunction.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2017-10-14 01:17:01","commitOrder":2,"curCode":"\tpublic void process(K key, final W window, final InternalWindowContext context, Iterable<T> input, Collector<R> out) throws Exception {\n\t\tACC acc = aggFunction.createAccumulator();\n\n\t\tfor (T val : input) {\n\t\t\tacc = aggFunction.add(val, acc);\n\t\t}\n\n\t\tthis.ctx.window = window;\n\t\tthis.ctx.internalContext = context;\n\t\tProcessWindowFunction<V, R, K, W> wrappedFunction = this.wrappedFunction;\n\t\twrappedFunction.process(key, ctx, Collections.singletonList(aggFunction.getResult(acc)), out);\n\t}\n","date":"2017-10-21 15:33:38","endLine":72,"groupId":"103422","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"(Kkey@finalWwindow@finalInternalWindowContextcontext@Iterable<T>input@Collector<R>out)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c4/6fa55d9c24dda9a237bf11f17ea51260d51191.src","preCode":"\tpublic void process(K key, final W window, final InternalWindowContext context, Iterable<T> input, Collector<R> out) throws Exception {\n\t\tfinal ACC acc = aggFunction.createAccumulator();\n\n\t\tfor (T val : input) {\n\t\t\taggFunction.add(val, acc);\n\t\t}\n\n\t\tthis.ctx.window = window;\n\t\tthis.ctx.internalContext = context;\n\t\tProcessWindowFunction<V, R, K, W> wrappedFunction = this.wrappedFunction;\n\t\twrappedFunction.process(key, ctx, Collections.singletonList(aggFunction.getResult(acc)), out);\n\t}\n","realPath":"flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/operators/windowing/functions/InternalAggregateProcessWindowFunction.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"f176c917d56fa682c047930be9e579b635d7268b","commitMessage":"@@@[FLINK-7837] Extend AggregateFunction.add() to work with immutable types\n","date":"2017-10-21 15:33:38","modifiedFileCount":"14","status":"M","submitter":"Aljoscha Krettek"}]
