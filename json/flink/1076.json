[{"authorTime":"2019-12-05 21:08:57","codes":[{"authorDate":"2019-12-05 21:08:57","commitOrder":1,"curCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDefaults(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer) {\n\n\t\tfinal DBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\"no-op\",\n\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\tinstanceBasePath,\n\t\t\tdbOptions,\n\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\tkeySerializer,\n\t\t\t2,\n\t\t\tnew KeyGroupRange(0, 1),\n\t\t\tnew ExecutionConfig(),\n\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\tCollections.emptyList(),\n\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\tnew CloseableRegistry());\n\t}\n","date":"2019-12-07 01:00:29","endLine":71,"groupId":"37826","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"builderForTestDefaults","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/7e/dbc7ed402ba50cf3c145e3db696c6f7188109e.src","preCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDefaults(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer) {\n\n\t\tfinal DBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\"no-op\",\n\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\tinstanceBasePath,\n\t\t\tdbOptions,\n\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\tkeySerializer,\n\t\t\t2,\n\t\t\tnew KeyGroupRange(0, 1),\n\t\t\tnew ExecutionConfig(),\n\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\tCollections.emptyList(),\n\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\tnew CloseableRegistry());\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2019-12-05 21:08:57","commitOrder":1,"curCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer,\n\t\t\tRocksDB db,\n\t\t\tColumnFamilyHandle defaultCFHandle,\n\t\t\tColumnFamilyOptions columnFamilyOptions) {\n\n\t\tfinal DBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\tinstanceBasePath,\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\t\tkeySerializer,\n\t\t\t\t2,\n\t\t\t\tnew KeyGroupRange(0, 1),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\t\tdb,\n\t\t\t\tdefaultCFHandle,\n\t\t\t\tnew CloseableRegistry());\n\t}\n","date":"2019-12-07 01:00:29","endLine":103,"groupId":"37829","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"builderForTestDB","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@RocksDBdb@ColumnFamilyHandledefaultCFHandle@ColumnFamilyOptionscolumnFamilyOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/7e/dbc7ed402ba50cf3c145e3db696c6f7188109e.src","preCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer,\n\t\t\tRocksDB db,\n\t\t\tColumnFamilyHandle defaultCFHandle,\n\t\t\tColumnFamilyOptions columnFamilyOptions) {\n\n\t\tfinal DBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\tinstanceBasePath,\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\t\tkeySerializer,\n\t\t\t\t2,\n\t\t\t\tnew KeyGroupRange(0, 1),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\t\tdb,\n\t\t\t\tdefaultCFHandle,\n\t\t\t\tnew CloseableRegistry());\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"9da970f41d55f12e10f5cc7b2778bc5585f0c2ea","commitMessage":"@@@[hotfix][tests] Consolidate the instantiation of the RocksDBKEyesStateBackendBuilder for tests in a utility class.\n","date":"2019-12-07 01:00:29","modifiedFileCount":"2","status":"B","submitter":"Stephan Ewen"},{"authorTime":"2019-11-24 16:20:09","codes":[{"authorDate":"2019-11-24 16:20:09","commitOrder":2,"curCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDefaults(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer) {\n\n\t\tfinal RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\"no-op\",\n\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\tinstanceBasePath,\n\t\t\toptionsContainer,\n\t\t\tstateName -> optionsContainer.getColumnOptions(),\n\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\tkeySerializer,\n\t\t\t2,\n\t\t\tnew KeyGroupRange(0, 1),\n\t\t\tnew ExecutionConfig(),\n\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\tCollections.emptyList(),\n\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\tnew CloseableRegistry());\n\t}\n","date":"2019-12-11 21:01:21","endLine":69,"groupId":"37826","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"builderForTestDefaults","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ed/44a73a7182f60a6bc9b890024d5589a1bd398d.src","preCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDefaults(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer) {\n\n\t\tfinal DBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\"no-op\",\n\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\tinstanceBasePath,\n\t\t\tdbOptions,\n\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\tkeySerializer,\n\t\t\t2,\n\t\t\tnew KeyGroupRange(0, 1),\n\t\t\tnew ExecutionConfig(),\n\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\tCollections.emptyList(),\n\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\tnew CloseableRegistry());\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2019-11-24 16:20:09","commitOrder":2,"curCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer,\n\t\t\tRocksDB db,\n\t\t\tColumnFamilyHandle defaultCFHandle,\n\t\t\tColumnFamilyOptions columnFamilyOptions) {\n\n\t\tfinal RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\tinstanceBasePath,\n\t\t\t\toptionsContainer,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\t\tkeySerializer,\n\t\t\t\t2,\n\t\t\t\tnew KeyGroupRange(0, 1),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\t\tdb,\n\t\t\t\tdefaultCFHandle,\n\t\t\t\tnew CloseableRegistry());\n\t}\n","date":"2019-12-11 21:01:21","endLine":100,"groupId":"37829","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"builderForTestDB","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@RocksDBdb@ColumnFamilyHandledefaultCFHandle@ColumnFamilyOptionscolumnFamilyOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ed/44a73a7182f60a6bc9b890024d5589a1bd398d.src","preCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer,\n\t\t\tRocksDB db,\n\t\t\tColumnFamilyHandle defaultCFHandle,\n\t\t\tColumnFamilyOptions columnFamilyOptions) {\n\n\t\tfinal DBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\tinstanceBasePath,\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\t\tkeySerializer,\n\t\t\t\t2,\n\t\t\t\tnew KeyGroupRange(0, 1),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\t\tdb,\n\t\t\t\tdefaultCFHandle,\n\t\t\t\tnew CloseableRegistry());\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"e05618b427f22cb73694658f5a21fb1767709efa","commitMessage":"@@@[FLINK-14926][state-backend-rocksdb] Ensure that RocksObjects are always closed on backend disposal\n\nThis also ensures that the newly introduces shared resources (shared cache and write buffers)\nare properly closed when the RocksDB state backend is disposed.\n\nThis closes #10300\n","date":"2019-12-11 21:01:21","modifiedFileCount":"10","status":"M","submitter":"Yu Li"},{"authorTime":"2019-11-24 16:20:09","codes":[{"authorDate":"2021-02-09 01:56:27","commitOrder":3,"curCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDefaults(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            RocksDBStateBackend.PriorityQueueStateType queueStateType) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> optionsContainer.getColumnOptions(),\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                queueStateType,\n                TtlTimeProvider.DEFAULT,\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                new CloseableRegistry());\n    }\n","date":"2021-02-25 00:19:42","endLine":77,"groupId":"37826","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"builderForTestDefaults","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@RocksDBStateBackend.PriorityQueueStateTypequeueStateType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/77/02f55747fb90033017ce7926b2a528d9e97e2c.src","preCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDefaults(\n            File instanceBasePath, TypeSerializer<K> keySerializer) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> optionsContainer.getColumnOptions(),\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                RocksDBStateBackend.PriorityQueueStateType.HEAP,\n                TtlTimeProvider.DEFAULT,\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                new CloseableRegistry());\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2019-11-24 16:20:09","commitOrder":3,"curCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer,\n\t\t\tRocksDB db,\n\t\t\tColumnFamilyHandle defaultCFHandle,\n\t\t\tColumnFamilyOptions columnFamilyOptions) {\n\n\t\tfinal RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\tinstanceBasePath,\n\t\t\t\toptionsContainer,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\t\tkeySerializer,\n\t\t\t\t2,\n\t\t\t\tnew KeyGroupRange(0, 1),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\t\tdb,\n\t\t\t\tdefaultCFHandle,\n\t\t\t\tnew CloseableRegistry());\n\t}\n","date":"2019-12-11 21:01:21","endLine":100,"groupId":"37829","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"builderForTestDB","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@RocksDBdb@ColumnFamilyHandledefaultCFHandle@ColumnFamilyOptionscolumnFamilyOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ed/44a73a7182f60a6bc9b890024d5589a1bd398d.src","preCode":"\tpublic static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n\t\t\tFile instanceBasePath,\n\t\t\tTypeSerializer<K> keySerializer,\n\t\t\tRocksDB db,\n\t\t\tColumnFamilyHandle defaultCFHandle,\n\t\t\tColumnFamilyOptions columnFamilyOptions) {\n\n\t\tfinal RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n\t\treturn new RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\tinstanceBasePath,\n\t\t\t\toptionsContainer,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tnew KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n\t\t\t\tkeySerializer,\n\t\t\t\t2,\n\t\t\t\tnew KeyGroupRange(0, 1),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tUncompressedStreamCompressionDecorator.INSTANCE,\n\t\t\t\tdb,\n\t\t\t\tdefaultCFHandle,\n\t\t\t\tnew CloseableRegistry());\n\t}\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"N"}],"commitId":"80066185648a243853b532350393ce93952f49b3","commitMessage":"@@@[FLINK-21344] Do not store heap timers in raw operator state for a\nsavepoint\n\nWe do no longer serialize the heap timers in RocksDB state backend when\ntaking a savepoint. We still do it for checkpoints though.\n\nThere is one gotcha in the PR.  that the StateConfigUtil#isStateImmutableInStateBackend\nassumes the knowledge that checkpoints behave differently for heap\ntimers than savepoints.\n\nThis closes #14913\n","date":"2021-02-25 00:19:42","modifiedFileCount":"10","status":"M","submitter":"Dawid Wysakowicz"},{"authorTime":"2021-01-22 04:15:38","codes":[{"authorDate":"2021-01-22 04:15:38","commitOrder":4,"curCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDefaults(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            EmbeddedRocksDBStateBackend.PriorityQueueStateType queueStateType) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> optionsContainer.getColumnOptions(),\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                queueStateType,\n                TtlTimeProvider.DEFAULT,\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                new CloseableRegistry());\n    }\n","date":"2021-02-25 10:11:27","endLine":79,"groupId":"37826","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"builderForTestDefaults","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@EmbeddedRocksDBStateBackend.PriorityQueueStateTypequeueStateType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/20/66ada6d1678372c84dc82a6e33f1f29d42f62d.src","preCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDefaults(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            RocksDBStateBackend.PriorityQueueStateType queueStateType) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> optionsContainer.getColumnOptions(),\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                queueStateType,\n                TtlTimeProvider.DEFAULT,\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                new CloseableRegistry());\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2021-01-22 04:15:38","commitOrder":4,"curCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            RocksDB db,\n            ColumnFamilyHandle defaultCFHandle,\n            ColumnFamilyOptions columnFamilyOptions) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> columnFamilyOptions,\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                EmbeddedRocksDBStateBackend.PriorityQueueStateType.HEAP,\n                TtlTimeProvider.DEFAULT,\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                db,\n                defaultCFHandle,\n                new CloseableRegistry());\n    }\n","date":"2021-02-25 10:11:27","endLine":110,"groupId":"37829","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"builderForTestDB","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@RocksDBdb@ColumnFamilyHandledefaultCFHandle@ColumnFamilyOptionscolumnFamilyOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/20/66ada6d1678372c84dc82a6e33f1f29d42f62d.src","preCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            RocksDB db,\n            ColumnFamilyHandle defaultCFHandle,\n            ColumnFamilyOptions columnFamilyOptions) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> columnFamilyOptions,\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                RocksDBStateBackend.PriorityQueueStateType.HEAP,\n                TtlTimeProvider.DEFAULT,\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                db,\n                defaultCFHandle,\n                new CloseableRegistry());\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"0a76daba0a428a322f0273d7dc6a70966f62bf26","commitMessage":"@@@[FLINK-19467][runtime / state backends] Implement HashMapStateBackend and EmbeddedRocksDBStateBackend\n","date":"2021-02-25 10:11:27","modifiedFileCount":"32","status":"M","submitter":"Seth Wiesman"},{"authorTime":"2021-03-09 00:44:40","codes":[{"authorDate":"2021-03-09 00:44:40","commitOrder":5,"curCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDefaults(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            EmbeddedRocksDBStateBackend.PriorityQueueStateType queueStateType) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> optionsContainer.getColumnOptions(),\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                queueStateType,\n                TtlTimeProvider.DEFAULT,\n                LatencyTrackingStateConfig.disabled(),\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                new CloseableRegistry());\n    }\n","date":"2021-04-01 14:16:24","endLine":81,"groupId":"1076","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"builderForTestDefaults","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@EmbeddedRocksDBStateBackend.PriorityQueueStateTypequeueStateType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/04/9591211dbc68d23c4df021caa24a138b168a35.src","preCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDefaults(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            EmbeddedRocksDBStateBackend.PriorityQueueStateType queueStateType) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> optionsContainer.getColumnOptions(),\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                queueStateType,\n                TtlTimeProvider.DEFAULT,\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                new CloseableRegistry());\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2021-03-09 00:44:40","commitOrder":5,"curCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            RocksDB db,\n            ColumnFamilyHandle defaultCFHandle,\n            ColumnFamilyOptions columnFamilyOptions) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> columnFamilyOptions,\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                EmbeddedRocksDBStateBackend.PriorityQueueStateType.HEAP,\n                TtlTimeProvider.DEFAULT,\n                LatencyTrackingStateConfig.disabled(),\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                db,\n                defaultCFHandle,\n                new CloseableRegistry());\n    }\n","date":"2021-04-01 14:16:24","endLine":113,"groupId":"1076","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"builderForTestDB","params":"(FileinstanceBasePath@TypeSerializer<K>keySerializer@RocksDBdb@ColumnFamilyHandledefaultCFHandle@ColumnFamilyOptionscolumnFamilyOptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/04/9591211dbc68d23c4df021caa24a138b168a35.src","preCode":"    public static <K> RocksDBKeyedStateBackendBuilder<K> builderForTestDB(\n            File instanceBasePath,\n            TypeSerializer<K> keySerializer,\n            RocksDB db,\n            ColumnFamilyHandle defaultCFHandle,\n            ColumnFamilyOptions columnFamilyOptions) {\n\n        final RocksDBResourceContainer optionsContainer = new RocksDBResourceContainer();\n\n        return new RocksDBKeyedStateBackendBuilder<>(\n                \"no-op\",\n                ClassLoader.getSystemClassLoader(),\n                instanceBasePath,\n                optionsContainer,\n                stateName -> columnFamilyOptions,\n                new KvStateRegistry().createTaskRegistry(new JobID(), new JobVertexID()),\n                keySerializer,\n                2,\n                new KeyGroupRange(0, 1),\n                new ExecutionConfig(),\n                TestLocalRecoveryConfig.disabled(),\n                EmbeddedRocksDBStateBackend.PriorityQueueStateType.HEAP,\n                TtlTimeProvider.DEFAULT,\n                new UnregisteredMetricsGroup(),\n                Collections.emptyList(),\n                UncompressedStreamCompressionDecorator.INSTANCE,\n                db,\n                defaultCFHandle,\n                new CloseableRegistry());\n    }\n","realPath":"flink-state-backends/flink-statebackend-rocksdb/src/test/java/org/apache/flink/contrib/streaming/state/RocksDBTestUtils.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"a402eaec1f71288651a24cf40f08b3f54924a63d","commitMessage":"@@@[FLINK-16444][state] Introduce latency tracking state config and basic classes\n","date":"2021-04-01 14:16:24","modifiedFileCount":"24","status":"M","submitter":"Yun Tang"}]
