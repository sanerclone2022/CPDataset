[{"authorTime":"2020-05-08 18:03:35","codes":[{"authorDate":"2020-05-08 18:03:35","commitOrder":6,"curCode":"\tpublic void testIsAvailableWithBufferedDataInDeserializer() throws Exception {\n\t\tList<BufferOrEvent> buffers = Collections.singletonList(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers, output);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(2, output.getNumberOfEmittedRecords());\n\t}\n","date":"2020-05-09 19:09:41","endLine":88,"groupId":"3481","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsAvailableWithBufferedDataInDeserializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a9/b2ea0ddb5d798f41ba27d5a58bddf291494d01.src","preCode":"\tpublic void testIsAvailableWithBufferedDataInDeserializer() throws Exception {\n\t\tList<BufferOrEvent> buffers = Collections.singletonList(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers, output);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(2, output.getNumberOfEmittedRecords());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"MB"},{"authorDate":"2020-05-08 18:03:35","commitOrder":6,"curCode":"\tpublic void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n\t\tCheckpointBarrier barrier = new CheckpointBarrier(0, 0, CheckpointOptions.forCheckpointWithDefaultLocation());\n\n\t\tList<BufferOrEvent> buffers = new ArrayList<>(2);\n\t\tbuffers.add(new BufferOrEvent(barrier, 0));\n\t\tbuffers.add(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers, output);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(0, output.getNumberOfEmittedRecords());\n\t}\n","date":"2020-05-09 19:09:41","endLine":107,"groupId":"4249","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoDataProcessedAfterCheckpointBarrier","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a9/b2ea0ddb5d798f41ba27d5a58bddf291494d01.src","preCode":"\tpublic void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n\t\tCheckpointBarrier barrier = new CheckpointBarrier(0, 0, CheckpointOptions.forCheckpointWithDefaultLocation());\n\n\t\tList<BufferOrEvent> buffers = new ArrayList<>(2);\n\t\tbuffers.add(new BufferOrEvent(barrier, 0));\n\t\tbuffers.add(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers, output);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(0, output.getNumberOfEmittedRecords());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"}],"commitId":"e6c042fd0e254dd154562d63e37bace4437bc4e1","commitMessage":"@@@[FLINK-17568][checkpointing] Fix the issue that task may consume input data after checkpoint barrier before checkpoint is performed for unaligned checkpoint\n\nFor unaligned checkpoint.  task may consume data after the checkpoint barrier before performing checkpoint which leads to consumption of duplicated data and corruption of data stream. More specifically.  when the Netty thread notifies the checkpoint barrier for the first time and enqueues a checkpointing task in the mailbox.  the task thread may still in data processing loop and if it reads a new checkpoint barrier from a input channel it will not return to the mailbox and instead it will continue to read data until all data is consumed or we have a full record.  meanwhile.  the data after checkpoint barrier may be read and consumed which lead to inconsistency.\n\nThis commit fixes the problem by returning to mailbox each time a checkpoint barrier is processed by the task thread.\n","date":"2020-05-09 19:09:41","modifiedFileCount":"5","status":"M","submitter":"kevin.cyj"},{"authorTime":"2020-06-16 03:43:32","codes":[{"authorDate":"2020-05-08 18:03:35","commitOrder":7,"curCode":"\tpublic void testIsAvailableWithBufferedDataInDeserializer() throws Exception {\n\t\tList<BufferOrEvent> buffers = Collections.singletonList(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers, output);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(2, output.getNumberOfEmittedRecords());\n\t}\n","date":"2020-05-09 19:09:41","endLine":88,"groupId":"3481","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsAvailableWithBufferedDataInDeserializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a9/b2ea0ddb5d798f41ba27d5a58bddf291494d01.src","preCode":"\tpublic void testIsAvailableWithBufferedDataInDeserializer() throws Exception {\n\t\tList<BufferOrEvent> buffers = Collections.singletonList(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers, output);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(2, output.getNumberOfEmittedRecords());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"},{"authorDate":"2020-06-16 03:43:32","commitOrder":7,"curCode":"\tpublic void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n\t\tCheckpointBarrier barrier = new CheckpointBarrier(0, 0, CheckpointOptions.forCheckpointWithDefaultLocation());\n\n\t\tList<BufferOrEvent> buffers = new ArrayList<>(2);\n\t\tbuffers.add(new BufferOrEvent(barrier, new InputChannelInfo(0, 0)));\n\t\tbuffers.add(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers, output);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(0, output.getNumberOfEmittedRecords());\n\t}\n","date":"2020-06-17 21:41:17","endLine":121,"groupId":"14998","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoDataProcessedAfterCheckpointBarrier","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/5f/d2aef0d93fcf4e545e96eda828efd826553c92.src","preCode":"\tpublic void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n\t\tCheckpointBarrier barrier = new CheckpointBarrier(0, 0, CheckpointOptions.forCheckpointWithDefaultLocation());\n\n\t\tList<BufferOrEvent> buffers = new ArrayList<>(2);\n\t\tbuffers.add(new BufferOrEvent(barrier, 0));\n\t\tbuffers.add(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers, output);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(0, output.getNumberOfEmittedRecords());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"1bacaeeef1ac0ee74af9efc5ec3d812e958e49a0","commitMessage":"@@@[FLINK-18094][network] Buffers are only addressed through InputChannelInfo.\n\nThis removes the need to translate the InputChannelInfo back and forth to flattened indexes across all InputGates.\nAll index-based data structures are replaced by maps that associate a certain state to a given InputChannelInfo. For performance reasons.  these maps are fully initialized upon construction.  such that no nodes need to be added/removed during runtime and only values are updated.\nAdditionally.  this commit unifies the creation of BarrierHandlers (similar signature) and removes the error-prone offset handling from CheckpointedInputGate.\n","date":"2020-06-17 21:41:17","modifiedFileCount":"26","status":"M","submitter":"Arvid Heise"},{"authorTime":"2020-09-30 15:41:31","codes":[{"authorDate":"2020-09-30 15:41:31","commitOrder":8,"curCode":"\tpublic void testIsAvailableWithBufferedDataInDeserializer() throws Exception {\n\t\tList<BufferOrEvent> buffers = Collections.singletonList(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(2, output.getNumberOfEmittedRecords());\n\t}\n","date":"2020-10-06 21:29:59","endLine":96,"groupId":"41012","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsAvailableWithBufferedDataInDeserializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ff/9fac7b8491ad2dbef6b7d788483a80fa7af15c.src","preCode":"\tpublic void testIsAvailableWithBufferedDataInDeserializer() throws Exception {\n\t\tList<BufferOrEvent> buffers = Collections.singletonList(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers, output);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(2, output.getNumberOfEmittedRecords());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2020-09-30 15:41:31","commitOrder":8,"curCode":"\tpublic void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n\t\tCheckpointBarrier barrier = new CheckpointBarrier(0, 0, CheckpointOptions.forCheckpointWithDefaultLocation());\n\n\t\tList<BufferOrEvent> buffers = new ArrayList<>(2);\n\t\tbuffers.add(new BufferOrEvent(barrier, new InputChannelInfo(0, 0)));\n\t\tbuffers.add(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(0, output.getNumberOfEmittedRecords());\n\t}\n","date":"2020-10-06 21:29:59","endLine":115,"groupId":"14998","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoDataProcessedAfterCheckpointBarrier","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ff/9fac7b8491ad2dbef6b7d788483a80fa7af15c.src","preCode":"\tpublic void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n\t\tCheckpointBarrier barrier = new CheckpointBarrier(0, 0, CheckpointOptions.forCheckpointWithDefaultLocation());\n\n\t\tList<BufferOrEvent> buffers = new ArrayList<>(2);\n\t\tbuffers.add(new BufferOrEvent(barrier, new InputChannelInfo(0, 0)));\n\t\tbuffers.add(createDataBuffer());\n\n\t\tVerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n\t\tStreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers, output);\n\n\t\tassertHasNextElement(input, output);\n\t\tassertEquals(0, output.getNumberOfEmittedRecords());\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"bd1e1f306d9e8e94421a4a0587182a2e0283adf0","commitMessage":"@@@[hotfix] Do not cache DataOutput in StatusWatermarkValve\n\nStatusWatermarkValve was caching a DataOutput passed in a constructor. From an architecture point of view it is a bug.  because it ignores the DataOutput passed in the DataInput#emitNext(DataOutput). It made and implicit assumption that these two are always equal.  which might not be true.\n\nIn this PR I am passing the DataOutput as a parameter of StatusWatermarkValve methods.\n","date":"2020-10-06 21:29:59","modifiedFileCount":"7","status":"M","submitter":"Dawid Wysakowicz"},{"authorTime":"2021-03-24 16:32:37","codes":[{"authorDate":"2021-03-24 16:32:37","commitOrder":9,"curCode":"    public void testIsAvailableWithBufferedDataInDeserializer() throws Exception {\n        List<BufferOrEvent> buffers = Collections.singletonList(createDataBuffer());\n\n        VerifyRecordsDataOutput<Long> output = new VerifyRecordsDataOutput<>();\n        StreamTaskNetworkInput<Long> input = createStreamTaskNetworkInput(buffers);\n\n        assertHasNextElement(input, output);\n        assertHasNextElement(input, output);\n        assertEquals(2, output.getNumberOfEmittedRecords());\n    }\n","date":"2021-03-25 01:35:56","endLine":102,"groupId":"102875","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsAvailableWithBufferedDataInDeserializer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/fa/7450383aebf133ddccc136fa956a14295e0a86.src","preCode":"    public void testIsAvailableWithBufferedDataInDeserializer() throws Exception {\n        List<BufferOrEvent> buffers = Collections.singletonList(createDataBuffer());\n\n        VerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n        StreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers);\n\n        assertHasNextElement(input, output);\n        assertHasNextElement(input, output);\n        assertEquals(2, output.getNumberOfEmittedRecords());\n    }\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2021-03-24 16:32:37","commitOrder":9,"curCode":"    public void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n        CheckpointBarrier barrier =\n                new CheckpointBarrier(0, 0, CheckpointOptions.forCheckpointWithDefaultLocation());\n\n        List<BufferOrEvent> buffers = new ArrayList<>(2);\n        buffers.add(new BufferOrEvent(barrier, new InputChannelInfo(0, 0)));\n        buffers.add(createDataBuffer());\n\n        VerifyRecordsDataOutput<Long> output = new VerifyRecordsDataOutput<>();\n        StreamTaskNetworkInput<Long> input = createStreamTaskNetworkInput(buffers);\n\n        assertHasNextElement(input, output);\n        assertEquals(0, output.getNumberOfEmittedRecords());\n    }\n","date":"2021-03-25 01:35:56","endLine":123,"groupId":"102875","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoDataProcessedAfterCheckpointBarrier","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/fa/7450383aebf133ddccc136fa956a14295e0a86.src","preCode":"    public void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n        CheckpointBarrier barrier =\n                new CheckpointBarrier(0, 0, CheckpointOptions.forCheckpointWithDefaultLocation());\n\n        List<BufferOrEvent> buffers = new ArrayList<>(2);\n        buffers.add(new BufferOrEvent(barrier, new InputChannelInfo(0, 0)));\n        buffers.add(createDataBuffer());\n\n        VerifyRecordsDataOutput output = new VerifyRecordsDataOutput<>();\n        StreamTaskNetworkInput input = createStreamTaskNetworkInput(buffers);\n\n        assertHasNextElement(input, output);\n        assertEquals(0, output.getNumberOfEmittedRecords());\n    }\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"459ba6608c2f935627b5ec283aa31f0ca83181ed","commitMessage":"@@@[hotfix] Fix raw types in StreamTaskNetworkInputTest\n","date":"2021-03-25 01:35:56","modifiedFileCount":"1","status":"M","submitter":"Dawid Wysakowicz"}]
