[{"authorTime":"2020-05-28 12:12:16","codes":[{"authorDate":"2020-05-21 10:18:15","commitOrder":4,"curCode":"\tpublic void testArrayTypes() {\n\t\tList<Row> results = Lists.newArrayList(\n\t\t\ttEnv.sqlQuery(String.format(\"select * from %s\", TABLE_ARRAY_TYPE)).execute().collect());\n\n\t\tassertEquals(\"[\" +\n\t\t\t\t\"[1, 2, 3],\" +\n\t\t\t\t\"[[92, 120, 51, 50], [92, 120, 51, 51], [92, 120, 51, 52]],\" +\n\t\t\t\t\"[3, 4, 5],\" +\n\t\t\t\t\"[4, 5, 6],\" +\n\t\t\t\t\"[5.5, 6.6, 7.7],\" +\n\t\t\t\t\"[6.6, 7.7, 8.8],\" +\n\t\t\t\t\"[7.70000, 8.80000, 9.90000],\" +\n\t\t\t\t\"[8.800000000000000000, 9.900000000000000000, 10.100000000000000000],\" +\n\t\t\t\t\"[9.90, 10.10, 11.11],\" +\n\t\t\t\t\"[true, false, true],\" +\n\t\t\t\t\"[a, b, c],\" +\n\t\t\t\t\"[b, c, d],\" +\n\t\t\t\t\"[b  , c  , d  ],\" +\n\t\t\t\t\"[b, c, d],\" +\n\t\t\t\t\"[2016-06-22T19:10:25, 2019-06-22T19:10:25],\" +\n\t\t\t\t\"[2015-01-01, 2020-01-01],\" +\n\t\t\t\t\"[00:51:03, 00:59:03]]\",\n\t\t\tresults.toString());\n\t}\n","date":"2020-05-21 21:21:02","endLine":141,"groupId":"6934","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testArrayTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/fe/4a808b617b7d87c04aff6fa79f7646f82f0338.src","preCode":"\tpublic void testArrayTypes() {\n\t\tList<Row> results = Lists.newArrayList(\n\t\t\ttEnv.sqlQuery(String.format(\"select * from %s\", TABLE_ARRAY_TYPE)).execute().collect());\n\n\t\tassertEquals(\"[\" +\n\t\t\t\t\"[1, 2, 3],\" +\n\t\t\t\t\"[[92, 120, 51, 50], [92, 120, 51, 51], [92, 120, 51, 52]],\" +\n\t\t\t\t\"[3, 4, 5],\" +\n\t\t\t\t\"[4, 5, 6],\" +\n\t\t\t\t\"[5.5, 6.6, 7.7],\" +\n\t\t\t\t\"[6.6, 7.7, 8.8],\" +\n\t\t\t\t\"[7.70000, 8.80000, 9.90000],\" +\n\t\t\t\t\"[8.800000000000000000, 9.900000000000000000, 10.100000000000000000],\" +\n\t\t\t\t\"[9.90, 10.10, 11.11],\" +\n\t\t\t\t\"[true, false, true],\" +\n\t\t\t\t\"[a, b, c],\" +\n\t\t\t\t\"[b, c, d],\" +\n\t\t\t\t\"[b  , c  , d  ],\" +\n\t\t\t\t\"[b, c, d],\" +\n\t\t\t\t\"[2016-06-22T19:10:25, 2019-06-22T19:10:25],\" +\n\t\t\t\t\"[2015-01-01, 2020-01-01],\" +\n\t\t\t\t\"[00:51:03, 00:59:03]]\",\n\t\t\tresults.toString());\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"NB"},{"authorDate":"2020-05-28 12:12:16","commitOrder":4,"curCode":"\tpublic void testSerialTypes() {\n\t\tList<Row> results = Lists.newArrayList(\n\t\t\ttEnv.sqlQuery(String.format(\"select * from %s\", TABLE_SERIAL_TYPE)).execute().collect());\n\n\t\tassertEquals(\"[\" +\n\t\t\t\t\"32767,\" +\n\t\t\t\t\"2147483647,\" +\n\t\t\t\t\"32767,\" +\n\t\t\t\t\"2147483647,\" +\n\t\t\t\t\"9223372036854775807,\" +\n\t\t\t\t\"9223372036854775807]\",\n\t\t\tresults.toString());\n\t}\n","date":"2020-05-28 12:12:16","endLine":156,"groupId":"6934","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/cd/f0065514d92f237aef1a2a6bc4401bc52780b5.src","preCode":"\tpublic void testSerialTypes() {\n\t\tList<Row> results = Lists.newArrayList(\n\t\t\ttEnv.sqlQuery(String.format(\"select * from %s\", TABLE_SERIAL_TYPE)).execute().collect());\n\n\t\tassertEquals(\"[\" +\n\t\t\t\t\"32767,\" +\n\t\t\t\t\"2147483647,\" +\n\t\t\t\t\"32767,\" +\n\t\t\t\t\"2147483647,\" +\n\t\t\t\t\"9223372036854775807,\" +\n\t\t\t\t\"9223372036854775807]\",\n\t\t\tresults.toString());\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"}],"commitId":"b0dd0aa639ef973db0341ade7d2fe73384cf2ed3","commitMessage":"@@@[FLINK-17284][jdbc][postgres] Fix serial type columns not work in Postgres catalog\n\nThis closes #11900","date":"2020-05-28 12:12:16","modifiedFileCount":"4","status":"M","submitter":"Flavio Pompermaier"},{"authorTime":"2020-06-18 11:52:35","codes":[{"authorDate":"2020-06-18 11:52:35","commitOrder":5,"curCode":"\tpublic void testArrayTypes() {\n\t\tList<Row> results = CollectionUtil.iteratorToList(\n\t\t\ttEnv.sqlQuery(String.format(\"select * from %s\", TABLE_ARRAY_TYPE)).execute().collect());\n\n\t\tassertEquals(\"[\" +\n\t\t\t\t\"[1, 2, 3],\" +\n\t\t\t\t\"[[92, 120, 51, 50], [92, 120, 51, 51], [92, 120, 51, 52]],\" +\n\t\t\t\t\"[3, 4, 5],\" +\n\t\t\t\t\"[4, 5, 6],\" +\n\t\t\t\t\"[5.5, 6.6, 7.7],\" +\n\t\t\t\t\"[6.6, 7.7, 8.8],\" +\n\t\t\t\t\"[7.70000, 8.80000, 9.90000],\" +\n\t\t\t\t\"[8.800000000000000000, 9.900000000000000000, 10.100000000000000000],\" +\n\t\t\t\t\"[9.90, 10.10, 11.11],\" +\n\t\t\t\t\"[true, false, true],\" +\n\t\t\t\t\"[a, b, c],\" +\n\t\t\t\t\"[b, c, d],\" +\n\t\t\t\t\"[b  , c  , d  ],\" +\n\t\t\t\t\"[b, c, d],\" +\n\t\t\t\t\"[2016-06-22T19:10:25, 2019-06-22T19:10:25],\" +\n\t\t\t\t\"[2015-01-01, 2020-01-01],\" +\n\t\t\t\t\"[00:51:03, 00:59:03]]\",\n\t\t\tresults.toString());\n\t}\n","date":"2020-09-07 17:37:11","endLine":144,"groupId":"6934","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testArrayTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9c/bdce1249a0a7139fe9d614f42941af49b6c684.src","preCode":"\tpublic void testArrayTypes() {\n\t\tList<Row> results = Lists.newArrayList(\n\t\t\ttEnv.sqlQuery(String.format(\"select * from %s\", TABLE_ARRAY_TYPE)).execute().collect());\n\n\t\tassertEquals(\"[\" +\n\t\t\t\t\"[1, 2, 3],\" +\n\t\t\t\t\"[[92, 120, 51, 50], [92, 120, 51, 51], [92, 120, 51, 52]],\" +\n\t\t\t\t\"[3, 4, 5],\" +\n\t\t\t\t\"[4, 5, 6],\" +\n\t\t\t\t\"[5.5, 6.6, 7.7],\" +\n\t\t\t\t\"[6.6, 7.7, 8.8],\" +\n\t\t\t\t\"[7.70000, 8.80000, 9.90000],\" +\n\t\t\t\t\"[8.800000000000000000, 9.900000000000000000, 10.100000000000000000],\" +\n\t\t\t\t\"[9.90, 10.10, 11.11],\" +\n\t\t\t\t\"[true, false, true],\" +\n\t\t\t\t\"[a, b, c],\" +\n\t\t\t\t\"[b, c, d],\" +\n\t\t\t\t\"[b  , c  , d  ],\" +\n\t\t\t\t\"[b, c, d],\" +\n\t\t\t\t\"[2016-06-22T19:10:25, 2019-06-22T19:10:25],\" +\n\t\t\t\t\"[2015-01-01, 2020-01-01],\" +\n\t\t\t\t\"[00:51:03, 00:59:03]]\",\n\t\t\tresults.toString());\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2020-06-18 11:52:35","commitOrder":5,"curCode":"\tpublic void testSerialTypes() {\n\t\tList<Row> results = CollectionUtil.iteratorToList(\n\t\t\ttEnv.sqlQuery(String.format(\"select * from %s\", TABLE_SERIAL_TYPE)).execute().collect());\n\n\t\tassertEquals(\"[\" +\n\t\t\t\t\"32767,\" +\n\t\t\t\t\"2147483647,\" +\n\t\t\t\t\"32767,\" +\n\t\t\t\t\"2147483647,\" +\n\t\t\t\t\"9223372036854775807,\" +\n\t\t\t\t\"9223372036854775807]\",\n\t\t\tresults.toString());\n\t}\n","date":"2020-09-07 17:37:11","endLine":159,"groupId":"6934","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9c/bdce1249a0a7139fe9d614f42941af49b6c684.src","preCode":"\tpublic void testSerialTypes() {\n\t\tList<Row> results = Lists.newArrayList(\n\t\t\ttEnv.sqlQuery(String.format(\"select * from %s\", TABLE_SERIAL_TYPE)).execute().collect());\n\n\t\tassertEquals(\"[\" +\n\t\t\t\t\"32767,\" +\n\t\t\t\t\"2147483647,\" +\n\t\t\t\t\"32767,\" +\n\t\t\t\t\"2147483647,\" +\n\t\t\t\t\"9223372036854775807,\" +\n\t\t\t\t\"9223372036854775807]\",\n\t\t\tresults.toString());\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"}],"commitId":"91d2b628bfe1a2e7beed5111a6d9a572cc6bc310","commitMessage":"@@@[hotfix][table][connector] Use CollectionUtil#iteratorToList instead of Guava Lists\n","date":"2020-09-07 17:37:11","modifiedFileCount":"18","status":"M","submitter":"godfreyhe"},{"authorTime":"2020-12-18 18:32:55","codes":[{"authorDate":"2020-12-18 18:32:55","commitOrder":6,"curCode":"    public void testArrayTypes() {\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tEnv.sqlQuery(String.format(\"select * from %s\", TABLE_ARRAY_TYPE))\n                                .execute()\n                                .collect());\n\n        assertEquals(\n                \"[+I[\"\n                        + \"[1, 2, 3], \"\n                        + \"[[92, 120, 51, 50], [92, 120, 51, 51], [92, 120, 51, 52]], \"\n                        + \"[3, 4, 5], \"\n                        + \"[4, 5, 6], \"\n                        + \"[5.5, 6.6, 7.7], \"\n                        + \"[6.6, 7.7, 8.8], \"\n                        + \"[7.70000, 8.80000, 9.90000], \"\n                        + \"[8.800000000000000000, 9.900000000000000000, 10.100000000000000000], \"\n                        + \"[9.90, 10.10, 11.11], \"\n                        + \"[true, false, true], \"\n                        + \"[a, b, c], \"\n                        + \"[b, c, d], \"\n                        + \"[b  , c  , d  ], \"\n                        + \"[b, c, d], \"\n                        + \"[2016-06-22T19:10:25, 2019-06-22T19:10:25], \"\n                        + \"[2015-01-01, 2020-01-01], \"\n                        + \"[00:51:03, 00:59:03]]]\",\n                results.toString());\n    }\n","date":"2021-01-08 00:17:30","endLine":178,"groupId":"314","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testArrayTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/31/429ffbbb8d75466ef6e23b3a37d8ac669350ca.src","preCode":"    public void testArrayTypes() {\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tEnv.sqlQuery(String.format(\"select * from %s\", TABLE_ARRAY_TYPE))\n                                .execute()\n                                .collect());\n\n        assertEquals(\n                \"[\"\n                        + \"[1, 2, 3],\"\n                        + \"[[92, 120, 51, 50], [92, 120, 51, 51], [92, 120, 51, 52]],\"\n                        + \"[3, 4, 5],\"\n                        + \"[4, 5, 6],\"\n                        + \"[5.5, 6.6, 7.7],\"\n                        + \"[6.6, 7.7, 8.8],\"\n                        + \"[7.70000, 8.80000, 9.90000],\"\n                        + \"[8.800000000000000000, 9.900000000000000000, 10.100000000000000000],\"\n                        + \"[9.90, 10.10, 11.11],\"\n                        + \"[true, false, true],\"\n                        + \"[a, b, c],\"\n                        + \"[b, c, d],\"\n                        + \"[b  , c  , d  ],\"\n                        + \"[b, c, d],\"\n                        + \"[2016-06-22T19:10:25, 2019-06-22T19:10:25],\"\n                        + \"[2015-01-01, 2020-01-01],\"\n                        + \"[00:51:03, 00:59:03]]\",\n                results.toString());\n    }\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"},{"authorDate":"2020-12-18 18:32:55","commitOrder":6,"curCode":"    public void testSerialTypes() {\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tEnv.sqlQuery(String.format(\"select * from %s\", TABLE_SERIAL_TYPE))\n                                .execute()\n                                .collect());\n\n        assertEquals(\n                \"[+I[\"\n                        + \"32767, \"\n                        + \"2147483647, \"\n                        + \"32767, \"\n                        + \"2147483647, \"\n                        + \"9223372036854775807, \"\n                        + \"9223372036854775807]]\",\n                results.toString());\n    }\n","date":"2021-01-08 00:17:30","endLine":197,"groupId":"314","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/31/429ffbbb8d75466ef6e23b3a37d8ac669350ca.src","preCode":"    public void testSerialTypes() {\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tEnv.sqlQuery(String.format(\"select * from %s\", TABLE_SERIAL_TYPE))\n                                .execute()\n                                .collect());\n\n        assertEquals(\n                \"[\"\n                        + \"32767,\"\n                        + \"2147483647,\"\n                        + \"32767,\"\n                        + \"2147483647,\"\n                        + \"9223372036854775807,\"\n                        + \"9223372036854775807]\",\n                results.toString());\n    }\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"73cdd3d0d9f6a807b3e47c09eef7983c9aa180c7","commitMessage":"@@@[FLINK-18090] Update tests for new Row.toString\n\nAll tests in modules apart from the Blink planner/runtime\nmodule have been updated.\n\nOtherwise we use a JUnit rule to make the migration of\nthe remaining tests incremental.\n\nThis closes #14568.\n","date":"2021-01-08 00:17:30","modifiedFileCount":"34","status":"M","submitter":"Timo Walther"},{"authorTime":"2020-12-18 18:32:55","codes":[{"authorDate":"2020-10-26 08:01:36","commitOrder":7,"curCode":"    public void testArrayTypes() {\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tEnv.sqlQuery(String.format(\"select * from %s\", TABLE_ARRAY_TYPE))\n                                .execute()\n                                .collect());\n\n        assertEquals(\n                \"[+I[\"\n                        + \"[1, 2, 3], \"\n                        + \"[[92, 120, 51, 50], [92, 120, 51, 51], [92, 120, 51, 52]], \"\n                        + \"[3, 4, 5], \"\n                        + \"[4, 5, 6], \"\n                        + \"[5.5, 6.6, 7.7], \"\n                        + \"[6.6, 7.7, 8.8], \"\n                        + \"[7.70000, 8.80000, 9.90000], \"\n                        + \"[8.800000000000000000, 9.900000000000000000, 10.100000000000000000], \"\n                        + \"[9.90, 10.10, 11.11], \"\n                        + \"[true, false, true], \"\n                        + \"[a, b, c], \"\n                        + \"[b, c, d], \"\n                        + \"[b  , c  , d  ], \"\n                        + \"[b, c, d], \"\n                        + \"[2016-06-22T19:10:25, 2019-06-22T19:10:25], \"\n                        + \"[2015-01-01, 2020-01-01], \"\n                        + \"[00:51:03, 00:59:03], \"\n                        + \"null, \"\n                        + \"null]]\",\n                results.toString());\n    }\n","date":"2021-01-22 16:45:02","endLine":180,"groupId":"10488","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testArrayTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b1/43b9c0b66390d0850447f66727c53b6ddad9f9.src","preCode":"    public void testArrayTypes() {\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tEnv.sqlQuery(String.format(\"select * from %s\", TABLE_ARRAY_TYPE))\n                                .execute()\n                                .collect());\n\n        assertEquals(\n                \"[+I[\"\n                        + \"[1, 2, 3], \"\n                        + \"[[92, 120, 51, 50], [92, 120, 51, 51], [92, 120, 51, 52]], \"\n                        + \"[3, 4, 5], \"\n                        + \"[4, 5, 6], \"\n                        + \"[5.5, 6.6, 7.7], \"\n                        + \"[6.6, 7.7, 8.8], \"\n                        + \"[7.70000, 8.80000, 9.90000], \"\n                        + \"[8.800000000000000000, 9.900000000000000000, 10.100000000000000000], \"\n                        + \"[9.90, 10.10, 11.11], \"\n                        + \"[true, false, true], \"\n                        + \"[a, b, c], \"\n                        + \"[b, c, d], \"\n                        + \"[b  , c  , d  ], \"\n                        + \"[b, c, d], \"\n                        + \"[2016-06-22T19:10:25, 2019-06-22T19:10:25], \"\n                        + \"[2015-01-01, 2020-01-01], \"\n                        + \"[00:51:03, 00:59:03]]]\",\n                results.toString());\n    }\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"},{"authorDate":"2020-12-18 18:32:55","commitOrder":7,"curCode":"    public void testSerialTypes() {\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tEnv.sqlQuery(String.format(\"select * from %s\", TABLE_SERIAL_TYPE))\n                                .execute()\n                                .collect());\n\n        assertEquals(\n                \"[+I[\"\n                        + \"32767, \"\n                        + \"2147483647, \"\n                        + \"32767, \"\n                        + \"2147483647, \"\n                        + \"9223372036854775807, \"\n                        + \"9223372036854775807]]\",\n                results.toString());\n    }\n","date":"2021-01-08 00:17:30","endLine":197,"groupId":"10488","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSerialTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/31/429ffbbb8d75466ef6e23b3a37d8ac669350ca.src","preCode":"    public void testSerialTypes() {\n        List<Row> results =\n                CollectionUtil.iteratorToList(\n                        tEnv.sqlQuery(String.format(\"select * from %s\", TABLE_SERIAL_TYPE))\n                                .execute()\n                                .collect());\n\n        assertEquals(\n                \"[+I[\"\n                        + \"32767, \"\n                        + \"2147483647, \"\n                        + \"32767, \"\n                        + \"2147483647, \"\n                        + \"9223372036854775807, \"\n                        + \"9223372036854775807]]\",\n                results.toString());\n    }\n","realPath":"flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"N"}],"commitId":"2bbac78b9eaa812b113cfc34f57c14ef3a3c35bc","commitMessage":"@@@[FLINK-19771][connector-jdbc] Fix NPE when accessing array using postgres\n\nSwitching to handle arrays in createInternalConverter rather than\ncreateNullableInternalConverter.  so nulls are handled properly.\n\nThis closes #13787.\n","date":"2021-01-22 16:45:02","modifiedFileCount":"3","status":"M","submitter":"Dylan Forciea"}]
