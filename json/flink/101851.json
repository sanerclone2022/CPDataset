[{"authorTime":"2018-01-03 20:25:09","codes":[{"authorDate":"2018-01-03 20:25:09","commitOrder":2,"curCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\n\t\tfinal String clusterId = flinkYarnSessionCli.getClusterId(commandLine);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID.toString(), clusterId);\n\t}\n","date":"2018-01-12 23:14:02","endLine":185,"groupId":"31065","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testResumeFromYarnPropertiesFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2f/6c1576b2f9381706566d1d2ee8f5a03298b4cb.src","preCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\n\t\tfinal String clusterId = flinkYarnSessionCli.getClusterId(commandLine);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID.toString(), clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"MB"},{"authorDate":"2018-01-03 20:25:09","commitOrder":2,"curCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal Configuration configuration = new Configuration();\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\n\t\tfinal String clusterId = flinkYarnSessionCli.getClusterId(commandLine);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID.toString(), clusterId);\n\t}\n","date":"2018-01-12 23:14:02","endLine":220,"groupId":"23916","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testResumeFromYarnID","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2f/6c1576b2f9381706566d1d2ee8f5a03298b4cb.src","preCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal Configuration configuration = new Configuration();\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\n\t\tfinal String clusterId = flinkYarnSessionCli.getClusterId(commandLine);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID.toString(), clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"MB"}],"commitId":"30011b9b110aad0e1c28e7e0a025b73986781a72","commitMessage":"@@@[FLINK-8340] [flip6] Remove passing of Configuration to CustomCommandLine\n\nSince the Configuration does not change over the lifetime of a CustomCommandLine. \nwe can safely pass it as a constructor argument instead of method argument.\n\nThis closes #5226.\n","date":"2018-01-12 23:14:02","modifiedFileCount":"22","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2018-01-12 06:46:33","codes":[{"authorDate":"2018-01-12 06:46:33","commitOrder":3,"curCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\n\t\tfinal ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","date":"2018-01-12 23:14:04","endLine":185,"groupId":"31065","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testResumeFromYarnPropertiesFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9b/e9cb59b0b15813094c197d0f6ca2e277eefdbd.src","preCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\n\t\tfinal String clusterId = flinkYarnSessionCli.getClusterId(commandLine);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID.toString(), clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2018-01-12 06:46:33","commitOrder":3,"curCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal Configuration configuration = new Configuration();\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\n\t\tfinal ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","date":"2018-01-12 23:14:04","endLine":220,"groupId":"48990","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testResumeFromYarnID","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9b/e9cb59b0b15813094c197d0f6ca2e277eefdbd.src","preCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal Configuration configuration = new Configuration();\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\n\t\tfinal String clusterId = flinkYarnSessionCli.getClusterId(commandLine);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID.toString(), clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"38d3720863c6187153174d0df57fc414b0cf8e96","commitMessage":"@@@[FLINK-8347] [flip6] Make cluster id used by ClusterDescriptor typesafe\n\nThe ClusterDescriptor uses a typed cluster id for the ClusterClient retrieval.\nMoreover.  the ClusterClient and the CustomCommandLine are typed accordingly.\n\nThis closes #5232.\n","date":"2018-01-12 23:14:04","modifiedFileCount":"39","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2019-10-14 03:09:15","codes":[{"authorDate":"2019-10-14 03:09:15","commitOrder":4,"curCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\n\t\tfinal ApplicationId clusterId = flinkYarnSessionCli.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","date":"2019-11-01 02:42:44","endLine":206,"groupId":"31065","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testResumeFromYarnPropertiesFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ae/566b4b2c0622892172791789ade0dcdf595e63.src","preCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\n\t\tfinal ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"},{"authorDate":"2019-10-14 03:09:15","commitOrder":4,"curCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal Configuration configuration = new Configuration();\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\n\t\tfinal ApplicationId clusterId = flinkYarnSessionCli.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","date":"2019-11-01 02:42:44","endLine":242,"groupId":"23916","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testResumeFromYarnID","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ae/566b4b2c0622892172791789ade0dcdf595e63.src","preCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal Configuration configuration = new Configuration();\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\n\t\tfinal ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"M"}],"commitId":"d00fe06d8f548892a7f8c95dfda43c70224464c7","commitMessage":"@@@[FLINK-14502] Change CustomCommandLine cluster client methods to get a configuration\n","date":"2019-11-01 02:42:44","modifiedFileCount":"19","status":"M","submitter":"Kostas Kloudas"},{"authorTime":"2019-10-23 04:37:11","codes":[{"authorDate":"2019-10-23 04:37:11","commitOrder":5,"curCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tfinal ApplicationId clusterId = clientFactory.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","date":"2019-11-01 02:42:44","endLine":214,"groupId":"31065","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testResumeFromYarnPropertiesFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a3/57126d972dfeed35cca0a874eb42730b1e9aaa.src","preCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\n\t\tfinal ApplicationId clusterId = flinkYarnSessionCli.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"},{"authorDate":"2019-10-23 04:37:11","commitOrder":5,"curCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal Configuration configuration = new Configuration();\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tfinal ApplicationId clusterId = clientFactory.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","date":"2019-11-01 02:42:44","endLine":251,"groupId":"48990","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testResumeFromYarnID","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a3/57126d972dfeed35cca0a874eb42730b1e9aaa.src","preCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal Configuration configuration = new Configuration();\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\n\t\tfinal ApplicationId clusterId = flinkYarnSessionCli.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"}],"commitId":"e4448748f33474d153da7579f249b9ed452bfae2","commitMessage":"@@@[FLINK-14501] Wired ClusterClientFactories to production code\n","date":"2019-11-01 02:42:44","modifiedFileCount":"20","status":"M","submitter":"Kostas Kloudas"},{"authorTime":"2019-11-23 14:43:03","codes":[{"authorDate":"2019-11-23 14:43:03","commitOrder":6,"curCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli(configuration);\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tfinal ApplicationId clusterId = clientFactory.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","date":"2019-12-03 23:29:31","endLine":189,"groupId":"19488","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testResumeFromYarnPropertiesFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f3/717a6d677f413d5708a78807c5514895435067.src","preCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tfinal ApplicationId clusterId = clientFactory.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"},{"authorDate":"2019-11-23 14:43:03","commitOrder":6,"curCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli();\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tfinal ApplicationId clusterId = clientFactory.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","date":"2019-12-03 23:29:31","endLine":217,"groupId":"48990","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testResumeFromYarnID","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f3/717a6d677f413d5708a78807c5514895435067.src","preCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal Configuration configuration = new Configuration();\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(\n\t\t\tconfiguration,\n\t\t\ttmp.getRoot().getAbsolutePath(),\n\t\t\t\"y\",\n\t\t\t\"yarn\");\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tfinal ApplicationId clusterId = clientFactory.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"9d1256ccbf8eb1556016b6805c3a91e2787d298a","commitMessage":"@@@[FLINK-13983][runtime][yarn/mesos][dist] Launch task executor with new memory calculation logics\n\n    - TM startup scripts calls java code to set flip49 TM resource configs and JVM parameters\n    - Launches TaskExecutors on Yarn/Mesos with JVM parameters and dynamic configs generated from TaskExecutorResourceSpec\n    - Use TaskExecutorResourceSpec to calculate memory for ShuffleEnvironment and MemoryManager in TM\n","date":"2019-12-03 23:29:31","modifiedFileCount":"41","status":"M","submitter":"Xintong Song"},{"authorTime":"2020-10-07 18:50:45","codes":[{"authorDate":"2020-10-07 18:50:45","commitOrder":7,"curCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli(configuration);\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.toConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tfinal ApplicationId clusterId = clientFactory.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","date":"2020-10-27 23:07:18","endLine":231,"groupId":"101851","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testResumeFromYarnPropertiesFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/95/25fc7ad8fd18e6a5bfd3043977a6d576585284.src","preCode":"\tpublic void testResumeFromYarnPropertiesFile() throws Exception {\n\n\t\tFile directoryPath = writeYarnPropertiesFile(validPropertiesFile);\n\n\t\tfinal Configuration configuration = new Configuration();\n\t\tconfiguration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath());\n\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli(configuration);\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tfinal ApplicationId clusterId = clientFactory.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"},{"authorDate":"2020-10-07 18:50:45","commitOrder":7,"curCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli();\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.toConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tfinal ApplicationId clusterId = clientFactory.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","date":"2020-10-27 23:07:18","endLine":259,"groupId":"101851","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testResumeFromYarnID","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/95/25fc7ad8fd18e6a5bfd3043977a6d576585284.src","preCode":"\tpublic void testResumeFromYarnID() throws Exception {\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli();\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {\"-yid\", TEST_YARN_APPLICATION_ID.toString()}, true);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tfinal ApplicationId clusterId = clientFactory.getClusterId(executorConfig);\n\n\t\tassertEquals(TEST_YARN_APPLICATION_ID, clusterId);\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"}],"commitId":"15f3844f1a325f898540a5c1b70928c3688787a6","commitMessage":"@@@[FLINK-19493] In CliFrontend.  make flow of Configuration more obvious\n\nBefore.  it was up to the CustomCommandLine implementation whether any\nConfiguration was passed through from the flink-conf.yaml or wherever\nthe base Configuration came from.\n\nNow.  we make the flow of the Configuration explicit in\nCliFrontend.getEffectiveConfiguration(). Instead of relying on the\nConfiguration we get from the CustomCommandLine we ask the\nCustomCommandLine to materialize its settings and add them manually to\nan effective Configuration that the CliFrontend controls.\n\nThis removes the Configuration parameter from CustomCommandLines that\ndon't need it anymore.  such as DefaultCLI.  which means we also have to\ntouch tests.\n\nThis adds a new integration test in CliFrontendITCase that verifies\ncorrect parameter passing and also verifies that command line arguments\noverride base settings.\n","date":"2020-10-27 23:07:18","modifiedFileCount":"25","status":"M","submitter":"Aljoscha Krettek"}]
