[{"authorTime":"2020-04-09 13:22:49","codes":[{"authorDate":"2020-03-26 15:37:22","commitOrder":5,"curCode":"\tpublic void testGetTmResourceParamsConfigs() throws Exception {\n\t\tint expectedResultLines = 2;\n\t\tString[] commands = {RUN_BASH_JAVA_UTILS_CMD_SCRIPT, BashJavaUtils.Command.GET_TM_RESOURCE_PARAMS.toString(), String.valueOf(expectedResultLines)};\n\t\tList<String> lines = Arrays.asList(executeScript(commands).split(System.lineSeparator()));\n\n\t\tassertThat(lines.size(), is(expectedResultLines));\n\t\tConfigurationUtils.parseJvmArgString(lines.get(0));\n\t\tConfigurationUtils.parseTmResourceDynamicConfigs(lines.get(1));\n\t}\n","date":"2020-04-27 15:11:38","endLine":54,"groupId":"7621","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetTmResourceParamsConfigs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8a/afb235823a7de85efae561ad0db79ddd3bca82.src","preCode":"\tpublic void testGetTmResourceParamsConfigs() throws Exception {\n\t\tint expectedResultLines = 2;\n\t\tString[] commands = {RUN_BASH_JAVA_UTILS_CMD_SCRIPT, BashJavaUtils.Command.GET_TM_RESOURCE_PARAMS.toString(), String.valueOf(expectedResultLines)};\n\t\tList<String> lines = Arrays.asList(executeScript(commands).split(System.lineSeparator()));\n\n\t\tassertThat(lines.size(), is(expectedResultLines));\n\t\tConfigurationUtils.parseJvmArgString(lines.get(0));\n\t\tConfigurationUtils.parseTmResourceDynamicConfigs(lines.get(1));\n\t}\n","realPath":"flink-dist/src/test/java/org/apache/flink/dist/BashJavaUtilsITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"NB"},{"authorDate":"2020-04-09 13:22:49","commitOrder":5,"curCode":"\tpublic void testGetJmResourceParamsWithDynamicProperties() throws Exception {\n\t\tint expectedResultLines = 1;\n\t\tlong metaspace = 123456789L;\n\t\tString[] commands = {\n\t\t\tRUN_BASH_JAVA_UTILS_CMD_SCRIPT,\n\t\t\tBashJavaUtils.Command.GET_JM_RESOURCE_PARAMS.toString(),\n\t\t\tString.valueOf(expectedResultLines),\n\t\t\t\"-D\" + JobManagerOptions.JVM_METASPACE.key() + \"=\" + metaspace + \"b\"};\n\t\tList<String> lines = Arrays.asList(executeScript(commands).split(System.lineSeparator()));\n\n\t\tassertThat(lines.size(), is(expectedResultLines));\n\t\tMap<String, String> params = ConfigurationUtils.parseJvmArgString(lines.get(0));\n\t\tassertThat(Long.valueOf(params.get(\"-XX:MaxMetaspaceSize=\")), is(metaspace));\n\t}\n","date":"2020-04-27 15:11:38","endLine":100,"groupId":"7621","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetJmResourceParamsWithDynamicProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/46/04697dff0f7be8bff8d4d70b431cd260304bfd.src","preCode":"\tpublic void testGetJmResourceParamsWithDynamicProperties() throws Exception {\n\t\tint expectedResultLines = 1;\n\t\tlong metaspace = 123456789L;\n\t\tString[] commands = {\n\t\t\tRUN_BASH_JAVA_UTILS_CMD_SCRIPT,\n\t\t\tBashJavaUtils.Command.GET_JM_RESOURCE_PARAMS.toString(),\n\t\t\tString.valueOf(expectedResultLines),\n\t\t\t\"-D\" + JobManagerOptions.JVM_METASPACE.key() + \"=\" + metaspace + \"b\"};\n\t\tList<String> lines = Arrays.asList(executeScript(commands).split(System.lineSeparator()));\n\n\t\tassertThat(lines.size(), is(expectedResultLines));\n\t\tMap<String, String> params = ConfigurationUtils.parseJvmArgString(lines.get(0));\n\t\tassertThat(Long.valueOf(params.get(\"-XX:MaxMetaspaceSize=\")), is(metaspace));\n\t}\n","realPath":"flink-dist/src/test/java/org/apache/flink/dist/BashJavaUtilsITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"}],"commitId":"70b0a73c1fbad7b0fe094e5019f3a212631bca21","commitMessage":"@@@[FLINK-16742][dist] Extend and use BashJavaUtils for JM memory configuration in start-up scripts.\n\nThis closes #11545.\n","date":"2020-04-27 15:11:38","modifiedFileCount":"2","status":"M","submitter":"Xintong Song"},{"authorTime":"2020-10-19 21:09:56","codes":[{"authorDate":"2020-03-26 15:37:22","commitOrder":6,"curCode":"\tpublic void testGetTmResourceParamsConfigs() throws Exception {\n\t\tint expectedResultLines = 2;\n\t\tString[] commands = {RUN_BASH_JAVA_UTILS_CMD_SCRIPT, BashJavaUtils.Command.GET_TM_RESOURCE_PARAMS.toString(), String.valueOf(expectedResultLines)};\n\t\tList<String> lines = Arrays.asList(executeScript(commands).split(System.lineSeparator()));\n\n\t\tassertThat(lines.size(), is(expectedResultLines));\n\t\tConfigurationUtils.parseJvmArgString(lines.get(0));\n\t\tConfigurationUtils.parseTmResourceDynamicConfigs(lines.get(1));\n\t}\n","date":"2020-04-27 15:11:38","endLine":54,"groupId":"101677","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetTmResourceParamsConfigs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8a/afb235823a7de85efae561ad0db79ddd3bca82.src","preCode":"\tpublic void testGetTmResourceParamsConfigs() throws Exception {\n\t\tint expectedResultLines = 2;\n\t\tString[] commands = {RUN_BASH_JAVA_UTILS_CMD_SCRIPT, BashJavaUtils.Command.GET_TM_RESOURCE_PARAMS.toString(), String.valueOf(expectedResultLines)};\n\t\tList<String> lines = Arrays.asList(executeScript(commands).split(System.lineSeparator()));\n\n\t\tassertThat(lines.size(), is(expectedResultLines));\n\t\tConfigurationUtils.parseJvmArgString(lines.get(0));\n\t\tConfigurationUtils.parseTmResourceDynamicConfigs(lines.get(1));\n\t}\n","realPath":"flink-dist/src/test/java/org/apache/flink/dist/BashJavaUtilsITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"N"},{"authorDate":"2020-10-19 21:09:56","commitOrder":6,"curCode":"\tpublic void testGetJmResourceParamsWithDynamicProperties() throws Exception {\n\t\tint expectedResultLines = 2;\n\t\tlong metaspace = 123456789L;\n\t\tString[] commands = {\n\t\t\tRUN_BASH_JAVA_UTILS_CMD_SCRIPT,\n\t\t\tBashJavaUtils.Command.GET_JM_RESOURCE_PARAMS.toString(),\n\t\t\tString.valueOf(expectedResultLines),\n\t\t\t\"-D\" + JobManagerOptions.JVM_METASPACE.key() + \"=\" + metaspace + \"b\"};\n\t\tList<String> lines = Arrays.asList(executeScript(commands).split(System.lineSeparator()));\n\n\t\tassertThat(lines.size(), is(expectedResultLines));\n\n\t\tMap<String, String> jvmParams = ConfigurationUtils.parseJvmArgString(lines.get(0));\n\t\tMap<String, String> dynamicParams = parseAndAssertDynamicParameters(lines.get(1));\n\t\tassertJvmAndDynamicParametersMatch(jvmParams, dynamicParams);\n\t\tassertThat(Long.valueOf(jvmParams.get(\"-XX:MaxMetaspaceSize=\")), is(metaspace));\n\t}\n","date":"2020-11-05 01:07:21","endLine":113,"groupId":"101677","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetJmResourceParamsWithDynamicProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c8/a72cd4a8179387f0c23d0bd7eb530245061a55.src","preCode":"\tpublic void testGetJmResourceParamsWithDynamicProperties() throws Exception {\n\t\tint expectedResultLines = 1;\n\t\tlong metaspace = 123456789L;\n\t\tString[] commands = {\n\t\t\tRUN_BASH_JAVA_UTILS_CMD_SCRIPT,\n\t\t\tBashJavaUtils.Command.GET_JM_RESOURCE_PARAMS.toString(),\n\t\t\tString.valueOf(expectedResultLines),\n\t\t\t\"-D\" + JobManagerOptions.JVM_METASPACE.key() + \"=\" + metaspace + \"b\"};\n\t\tList<String> lines = Arrays.asList(executeScript(commands).split(System.lineSeparator()));\n\n\t\tassertThat(lines.size(), is(expectedResultLines));\n\t\tMap<String, String> params = ConfigurationUtils.parseJvmArgString(lines.get(0));\n\t\tassertThat(Long.valueOf(params.get(\"-XX:MaxMetaspaceSize=\")), is(metaspace));\n\t}\n","realPath":"flink-dist/src/test/java/org/apache/flink/dist/BashJavaUtilsITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"0a51d85255b9c7480eb5e939d88e9ccc5e98af69","commitMessage":"@@@[FLINK-19662][runtime][kubernetes][yarn][dist] Added dynamic parameters to BashJavaUtils' JobManager argument extraction. Additionally.  the Kubernetes and Yarn deployment were extended accordingly.\n\nThe parameters are returned using the newly introduced global environment variable DYNAMIC_PARAMETERS.\n","date":"2020-11-05 01:07:21","modifiedFileCount":"17","status":"M","submitter":"Matthias Pohl"}]
