[{"authorTime":"2017-04-29 01:40:20","codes":[{"authorDate":"2015-12-02 00:31:32","commitOrder":2,"curCode":"\tpublic void testNodeHashAfterIntermediateUnchaining() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t.map(new NoOpMapFunction()).name(\"map\")\n\t\t\t\t.startNewChain()\n\t\t\t\t.filter(new NoOpFilterFunction())\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tJobGraph jobGraph = env.getStreamGraph().getJobGraph();\n\n\t\tJobVertex chainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1);\n\t\tassertTrue(chainedMap.getName().startsWith(\"map\"));\n\t\tJobVertexID chainedMapId = chainedMap.getID();\n\n\t\tenv = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t.map(new NoOpMapFunction()).name(\"map\")\n\t\t\t\t.startNewChain()\n\t\t\t\t.filter(new NoOpFilterFunction())\n\t\t\t\t.startNewChain()\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tjobGraph = env.getStreamGraph().getJobGraph();\n\n\t\tJobVertex unchainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1);\n\t\tassertEquals(\"map\", unchainedMap.getName());\n\t\tJobVertexID unchainedMapId = unchainedMap.getID();\n\n\t\tassertNotEquals(chainedMapId, unchainedMapId);\n\t}\n","date":"2016-01-11 23:30:42","endLine":291,"groupId":"33563","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNodeHashAfterIntermediateUnchaining","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/98/750d098f67c84bb1cde91f5a2fd44270bf3c98.src","preCode":"\tpublic void testNodeHashAfterIntermediateUnchaining() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t.map(new NoOpMapFunction()).name(\"map\")\n\t\t\t\t.startNewChain()\n\t\t\t\t.filter(new NoOpFilterFunction())\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tJobGraph jobGraph = env.getStreamGraph().getJobGraph();\n\n\t\tJobVertex chainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1);\n\t\tassertTrue(chainedMap.getName().startsWith(\"map\"));\n\t\tJobVertexID chainedMapId = chainedMap.getID();\n\n\t\tenv = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t.map(new NoOpMapFunction()).name(\"map\")\n\t\t\t\t.startNewChain()\n\t\t\t\t.filter(new NoOpFilterFunction())\n\t\t\t\t.startNewChain()\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tjobGraph = env.getStreamGraph().getJobGraph();\n\n\t\tJobVertex unchainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1);\n\t\tassertEquals(\"map\", unchainedMap.getName());\n\t\tJobVertexID unchainedMapId = unchainedMap.getID();\n\n\t\tassertNotEquals(chainedMapId, unchainedMapId);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/graph/StreamingJobGraphGeneratorNodeHashTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"NB"},{"authorDate":"2017-04-29 01:40:20","commitOrder":2,"curCode":"\tpublic void testManualHashAssignmentForIntermediateNodeInChain() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t\r\n\t\t\t\t.map(new NoOpMapFunction()).uid(\"map\")\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","date":"2017-04-29 02:11:35","endLine":407,"groupId":"33563","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testManualHashAssignmentForIntermediateNodeInChain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a8/976744d9dd7ae7a817bd9d46886030d325cd2b.src","preCode":"\tpublic void testManualHashAssignmentForIntermediateNodeInChain() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t\r\n\t\t\t\t.map(new NoOpMapFunction()).uid(\"map\")\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/graph/StreamingJobGraphGeneratorNodeHashTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":397,"status":"B"}],"commitId":"f7980a7e29457753eb3c5b975f3bb4b59d2014f8","commitMessage":"@@@[Flink-5892] Restore state on operator level\n","date":"2017-04-29 02:11:35","modifiedFileCount":"39","status":"M","submitter":"zentol"},{"authorTime":"2019-07-30 17:35:06","codes":[{"authorDate":"2019-07-30 17:35:06","commitOrder":3,"curCode":"\tpublic void testNodeHashAfterIntermediateUnchaining() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t.map(new NoOpMapFunction()).name(\"map\")\n\t\t\t\t.startNewChain()\n\t\t\t\t.filter(new NoOpFilterFunction())\n\t\t\t\t.addSink(new DiscardingSink<>());\n\n\t\tJobGraph jobGraph = env.getStreamGraph().getJobGraph();\n\n\t\tJobVertex chainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1);\n\t\tassertTrue(chainedMap.getName().startsWith(\"map\"));\n\t\tJobVertexID chainedMapId = chainedMap.getID();\n\n\t\tenv = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t.map(new NoOpMapFunction()).name(\"map\")\n\t\t\t\t.startNewChain()\n\t\t\t\t.filter(new NoOpFilterFunction())\n\t\t\t\t.startNewChain()\n\t\t\t\t.addSink(new DiscardingSink<>());\n\n\t\tjobGraph = env.getStreamGraph().getJobGraph();\n\n\t\tJobVertex unchainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1);\n\t\tassertEquals(\"map\", unchainedMap.getName());\n\t\tJobVertexID unchainedMapId = unchainedMap.getID();\n\n\t\tassertNotEquals(chainedMapId, unchainedMapId);\n\t}\n","date":"2019-08-01 18:12:28","endLine":248,"groupId":"102988","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNodeHashAfterIntermediateUnchaining","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/92/a67c9bab82c09e433bedfd51c341d16b7ce4b6.src","preCode":"\tpublic void testNodeHashAfterIntermediateUnchaining() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t.map(new NoOpMapFunction()).name(\"map\")\n\t\t\t\t.startNewChain()\n\t\t\t\t.filter(new NoOpFilterFunction())\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tJobGraph jobGraph = env.getStreamGraph().getJobGraph();\n\n\t\tJobVertex chainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1);\n\t\tassertTrue(chainedMap.getName().startsWith(\"map\"));\n\t\tJobVertexID chainedMapId = chainedMap.getID();\n\n\t\tenv = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t.map(new NoOpMapFunction()).name(\"map\")\n\t\t\t\t.startNewChain()\n\t\t\t\t.filter(new NoOpFilterFunction())\n\t\t\t\t.startNewChain()\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tjobGraph = env.getStreamGraph().getJobGraph();\n\n\t\tJobVertex unchainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1);\n\t\tassertEquals(\"map\", unchainedMap.getName());\n\t\tJobVertexID unchainedMapId = unchainedMap.getID();\n\n\t\tassertNotEquals(chainedMapId, unchainedMapId);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/graph/StreamingJobGraphGeneratorNodeHashTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"},{"authorDate":"2019-07-30 17:35:06","commitOrder":3,"curCode":"\tpublic void testManualHashAssignmentForIntermediateNodeInChain() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t\r\n\t\t\t\t.map(new NoOpMapFunction()).uid(\"map\")\n\t\t\t\t.addSink(new DiscardingSink<>());\n\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","date":"2019-08-01 18:12:28","endLine":408,"groupId":"102988","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testManualHashAssignmentForIntermediateNodeInChain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/92/a67c9bab82c09e433bedfd51c341d16b7ce4b6.src","preCode":"\tpublic void testManualHashAssignmentForIntermediateNodeInChain() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction())\n\t\t\t\t\r\n\t\t\t\t.map(new NoOpMapFunction()).uid(\"map\")\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/graph/StreamingJobGraphGeneratorNodeHashTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":398,"status":"M"}],"commitId":"bd4328dbcea908191b669e53b57b790a4e627ecd","commitMessage":"@@@[FLINK-13376][datastream] Unify all no operation sinks with DiscardingSink\n","date":"2019-08-01 18:12:28","modifiedFileCount":"6","status":"M","submitter":"ifndef-SleePy"}]
