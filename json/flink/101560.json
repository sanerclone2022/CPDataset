[{"authorTime":"2021-03-03 15:48:53","codes":[{"authorDate":"2021-03-03 15:48:53","commitOrder":1,"curCode":"    public void testScaleUpOnAdditionalTaskManager() throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        final DataStream<String> input = env.addSource(new ParallelismTrackingSource());\n        input.addSink(new ParallelismTrackingSink<>());\n\n        ParallelismTrackingSource.expectInstances(\n                NUMBER_SLOTS_PER_TASK_MANAGER * INITIAL_NUMBER_TASK_MANAGERS);\n        ParallelismTrackingSink.expectInstances(\n                NUMBER_SLOTS_PER_TASK_MANAGER * INITIAL_NUMBER_TASK_MANAGERS);\n\n        env.executeAsync();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n\n        \r\n        ParallelismTrackingSource.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n        ParallelismTrackingSink.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n\n        miniClusterResource.getMiniCluster().startTaskManager();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n    }\n","date":"2021-03-12 02:30:39","endLine":130,"groupId":"13675","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testScaleUpOnAdditionalTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/19/a02c2c80e998f40433903540c1806faebec65d.src","preCode":"    public void testScaleUpOnAdditionalTaskManager() throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        final DataStream<String> input = env.addSource(new ParallelismTrackingSource());\n        input.addSink(new ParallelismTrackingSink<>());\n\n        ParallelismTrackingSource.expectInstances(\n                NUMBER_SLOTS_PER_TASK_MANAGER * INITIAL_NUMBER_TASK_MANAGERS);\n        ParallelismTrackingSink.expectInstances(\n                NUMBER_SLOTS_PER_TASK_MANAGER * INITIAL_NUMBER_TASK_MANAGERS);\n\n        env.executeAsync();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n\n        \r\n        ParallelismTrackingSource.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n        ParallelismTrackingSink.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n\n        miniClusterResource.getMiniCluster().startTaskManager();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n    }\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/scheduling/ReactiveModeITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"B"},{"authorDate":"2021-03-03 15:48:53","commitOrder":1,"curCode":"    public void testScaleDownOnTaskManagerLoss() throws Exception {\n        \r\n        startAdditionalTaskManager();\n\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        env.setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE, 0L));\n        final DataStream<String> input = env.addSource(new ParallelismTrackingSource());\n        input.addSink(new ParallelismTrackingSink<>());\n\n        ParallelismTrackingSource.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n        ParallelismTrackingSink.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n\n        env.executeAsync();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n\n        \r\n        ParallelismTrackingSource.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER);\n        ParallelismTrackingSink.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER);\n\n        miniClusterResource.getMiniCluster().terminateTaskManager(0).get();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n    }\n","date":"2021-03-12 02:30:39","endLine":158,"groupId":"13677","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testScaleDownOnTaskManagerLoss","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/19/a02c2c80e998f40433903540c1806faebec65d.src","preCode":"    public void testScaleDownOnTaskManagerLoss() throws Exception {\n        \r\n        startAdditionalTaskManager();\n\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        env.setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE, 0L));\n        final DataStream<String> input = env.addSource(new ParallelismTrackingSource());\n        input.addSink(new ParallelismTrackingSink<>());\n\n        ParallelismTrackingSource.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n        ParallelismTrackingSink.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n\n        env.executeAsync();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n\n        \r\n        ParallelismTrackingSource.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER);\n        ParallelismTrackingSink.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER);\n\n        miniClusterResource.getMiniCluster().terminateTaskManager(0).get();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n    }\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/scheduling/ReactiveModeITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"}],"commitId":"bc08cff1620e65cde64bb1b5158749aa652fd393","commitMessage":"@@@[FLINK-21135][coord] Adjust parallelism of job for reactive mode\n\nThis closes #15071\n","date":"2021-03-12 02:30:39","modifiedFileCount":"12","status":"B","submitter":"Robert Metzger"},{"authorTime":"2021-03-29 21:26:50","codes":[{"authorDate":"2021-03-29 21:26:50","commitOrder":2,"curCode":"    public void testScaleUpOnAdditionalTaskManager() throws Exception {\n        ParallelismTrackingSource.resetParallelismTracker();\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        final DataStream<String> input = env.addSource(new ParallelismTrackingSource());\n        input.addSink(new DiscardingSink<>());\n\n        env.executeAsync();\n\n        ParallelismTrackingSource.waitForScaleUpToParallelism(\n                NUMBER_SLOTS_PER_TASK_MANAGER * INITIAL_NUMBER_TASK_MANAGERS);\n\n        \r\n        miniClusterResource.getMiniCluster().startTaskManager();\n        ParallelismTrackingSource.waitForScaleUpToParallelism(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n    }\n","date":"2021-04-02 17:15:31","endLine":109,"groupId":"20788","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testScaleUpOnAdditionalTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d0/ca6e0cdbcf7da68112b5a2ffd02730835ff5d5.src","preCode":"    public void testScaleUpOnAdditionalTaskManager() throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        final DataStream<String> input = env.addSource(new ParallelismTrackingSource());\n        input.addSink(new ParallelismTrackingSink<>());\n\n        ParallelismTrackingSource.expectInstances(\n                NUMBER_SLOTS_PER_TASK_MANAGER * INITIAL_NUMBER_TASK_MANAGERS);\n        ParallelismTrackingSink.expectInstances(\n                NUMBER_SLOTS_PER_TASK_MANAGER * INITIAL_NUMBER_TASK_MANAGERS);\n\n        env.executeAsync();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n\n        \r\n        ParallelismTrackingSource.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n        ParallelismTrackingSink.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n\n        miniClusterResource.getMiniCluster().startTaskManager();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n    }\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/scheduling/ReactiveModeITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2021-03-29 21:26:50","commitOrder":2,"curCode":"    public void testScaleDownOnTaskManagerLoss() throws Exception {\n        ParallelismTrackingSource.resetParallelismTracker();\n        \r\n        startAdditionalTaskManager();\n\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        \r\n        env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1, 0L));\n        final DataStream<String> input = env.addSource(new ParallelismTrackingSource());\n        input.addSink(new DiscardingSink<>());\n\n        env.executeAsync();\n\n        ParallelismTrackingSource.waitForScaleUpToParallelism(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n\n        \r\n        miniClusterResource.getMiniCluster().terminateTaskManager(0).get();\n\n        ParallelismTrackingSource.waitForScaleUpToParallelism(NUMBER_SLOTS_PER_TASK_MANAGER);\n    }\n","date":"2021-04-02 17:15:31","endLine":131,"groupId":"33470","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testScaleDownOnTaskManagerLoss","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d0/ca6e0cdbcf7da68112b5a2ffd02730835ff5d5.src","preCode":"    public void testScaleDownOnTaskManagerLoss() throws Exception {\n        \r\n        startAdditionalTaskManager();\n\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        env.setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE, 0L));\n        final DataStream<String> input = env.addSource(new ParallelismTrackingSource());\n        input.addSink(new ParallelismTrackingSink<>());\n\n        ParallelismTrackingSource.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n        ParallelismTrackingSink.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n\n        env.executeAsync();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n\n        \r\n        ParallelismTrackingSource.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER);\n        ParallelismTrackingSink.expectInstances(NUMBER_SLOTS_PER_TASK_MANAGER);\n\n        miniClusterResource.getMiniCluster().terminateTaskManager(0).get();\n\n        ParallelismTrackingSource.waitForInstances();\n        ParallelismTrackingSink.waitForInstances();\n    }\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/scheduling/ReactiveModeITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"ac6317fd5bcaf90a88dee74e0171a55933395907","commitMessage":"@@@[FLINK-21963] Harden ReactiveModeITCase\n\nThis commit fixes a test instability in ReactiveModeITCase.testScaleDownOnTaskManagerLoss() where a CountDownLatch was counted down on an execution of the test source that got cancelled for a scale up event (despite its name.  a scale up can happen in the test as well). This test instability only happens if there is enough time between the notification of new slots so that the source can start in between. On fast machines.  the execution gets cancelled during scheduling.  because the slots arrive together.\n\nWith this commit.  we are not using a latch.  but counting the number of running instances explicitly.\n\nThis closes #15417.\n","date":"2021-04-02 17:15:31","modifiedFileCount":"1","status":"M","submitter":"Robert Metzger"},{"authorTime":"2021-04-23 15:55:25","codes":[{"authorDate":"2021-04-23 15:55:25","commitOrder":3,"curCode":"    public void testScaleUpOnAdditionalTaskManager() throws Exception {\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        final DataStream<String> input = env.addSource(new DummySource());\n        input.addSink(new DiscardingSink<>());\n\n        final JobClient jobClient = env.executeAsync();\n\n        waitUntilParallelismForVertexReached(\n                miniClusterResource.getRestClusterClient(),\n                jobClient.getJobID(),\n                NUMBER_SLOTS_PER_TASK_MANAGER * INITIAL_NUMBER_TASK_MANAGERS);\n\n        \r\n        miniClusterResource.getMiniCluster().startTaskManager();\n\n        waitUntilParallelismForVertexReached(\n                miniClusterResource.getRestClusterClient(),\n                jobClient.getJobID(),\n                NUMBER_SLOTS_PER_TASK_MANAGER * (INITIAL_NUMBER_TASK_MANAGERS + 1));\n    }\n","date":"2021-05-07 15:53:16","endLine":110,"groupId":"101560","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testScaleUpOnAdditionalTaskManager","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/98/59a87a7bf83b46649ce66199f313c7efcb9855.src","preCode":"    public void testScaleUpOnAdditionalTaskManager() throws Exception {\n        ParallelismTrackingSource.resetParallelismTracker();\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        final DataStream<String> input = env.addSource(new ParallelismTrackingSource());\n        input.addSink(new DiscardingSink<>());\n\n        env.executeAsync();\n\n        ParallelismTrackingSource.waitForScaleUpToParallelism(\n                NUMBER_SLOTS_PER_TASK_MANAGER * INITIAL_NUMBER_TASK_MANAGERS);\n\n        \r\n        miniClusterResource.getMiniCluster().startTaskManager();\n        ParallelismTrackingSource.waitForScaleUpToParallelism(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n    }\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/scheduling/ReactiveModeITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-04-23 15:55:25","commitOrder":3,"curCode":"    public void testScaleDownOnTaskManagerLoss() throws Exception {\n        \r\n        startAdditionalTaskManager();\n\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        \r\n        env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1, 0L));\n        final DataStream<String> input = env.addSource(new DummySource());\n        input.addSink(new DiscardingSink<>());\n\n        final JobClient jobClient = env.executeAsync();\n\n        waitUntilParallelismForVertexReached(\n                miniClusterResource.getRestClusterClient(),\n                jobClient.getJobID(),\n                NUMBER_SLOTS_PER_TASK_MANAGER * (INITIAL_NUMBER_TASK_MANAGERS + 1));\n\n        \r\n        miniClusterResource.getMiniCluster().terminateTaskManager(0).get();\n\n        waitUntilParallelismForVertexReached(\n                miniClusterResource.getRestClusterClient(),\n                jobClient.getJobID(),\n                NUMBER_SLOTS_PER_TASK_MANAGER * NUMBER_SLOTS_PER_TASK_MANAGER);\n    }\n","date":"2021-05-07 15:53:16","endLine":137,"groupId":"101560","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testScaleDownOnTaskManagerLoss","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/98/59a87a7bf83b46649ce66199f313c7efcb9855.src","preCode":"    public void testScaleDownOnTaskManagerLoss() throws Exception {\n        ParallelismTrackingSource.resetParallelismTracker();\n        \r\n        startAdditionalTaskManager();\n\n        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n        \r\n        env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1, 0L));\n        final DataStream<String> input = env.addSource(new ParallelismTrackingSource());\n        input.addSink(new DiscardingSink<>());\n\n        env.executeAsync();\n\n        ParallelismTrackingSource.waitForScaleUpToParallelism(NUMBER_SLOTS_PER_TASK_MANAGER * 2);\n\n        \r\n        miniClusterResource.getMiniCluster().terminateTaskManager(0).get();\n\n        ParallelismTrackingSource.waitForScaleUpToParallelism(NUMBER_SLOTS_PER_TASK_MANAGER);\n    }\n","realPath":"flink-tests/src/test/java/org/apache/flink/test/scheduling/ReactiveModeITCase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"271ac1b8bac100b613c313e11773109db15015e5","commitMessage":"@@@[FLINK-22406][coordination][tests] Stabilize ReactiveModeITCase\n","date":"2021-05-07 15:53:16","modifiedFileCount":"1","status":"M","submitter":"Chesnay Schepler"}]
