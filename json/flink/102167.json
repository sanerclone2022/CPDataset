[{"authorTime":"2020-09-10 16:22:59","codes":[{"authorDate":"2020-05-15 23:07:58","commitOrder":2,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tCanalJsonDeserializationSchema that = (CanalJsonDeserializationSchema) o;\n\t\treturn ignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tfieldCount == that.fieldCount &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","date":"2020-05-15 23:07:58","endLine":173,"groupId":"35190","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4c/03d041e2a9d8220c6d34b1f2ce9159dd511bbb.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tCanalJsonDeserializationSchema that = (CanalJsonDeserializationSchema) o;\n\t\treturn ignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tfieldCount == that.fieldCount &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"NB"},{"authorDate":"2020-09-10 16:22:59","commitOrder":2,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumJsonSerializationSchema that = (DebeziumJsonSerializationSchema) o;\n\t\treturn Objects.equals(jsonSerializer, that.jsonSerializer);\n\t}\n","date":"2020-09-10 16:22:59","endLine":97,"groupId":"38966","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f9/4c8137190bdf8e6410236def13cdcfa357a834.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumJsonSerializationSchema that = (DebeziumJsonSerializationSchema) o;\n\t\treturn Objects.equals(jsonSerializer, that.jsonSerializer);\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/debezium/DebeziumJsonSerializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"db378c11c750b0fd92099d870575b00941857872","commitMessage":"@@@[FLINK-18823][format] Support serialization for debezium-json format\n\nThis closes #13333","date":"2020-09-10 16:22:59","modifiedFileCount":"4","status":"M","submitter":"SteNicholas"},{"authorTime":"2020-09-10 16:22:59","codes":[{"authorDate":"2020-12-31 10:34:00","commitOrder":3,"curCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        CanalJsonDeserializationSchema that = (CanalJsonDeserializationSchema) o;\n        return Objects.equals(jsonDeserializer, that.jsonDeserializer)\n                && hasMetadata == that.hasMetadata\n                && Objects.equals(producedTypeInfo, that.producedTypeInfo)\n                && Objects.equals(database, that.database)\n                && Objects.equals(table, that.table)\n                && ignoreParseErrors == that.ignoreParseErrors\n                && fieldCount == that.fieldCount;\n    }\n","date":"2020-12-31 10:34:00","endLine":313,"groupId":"102167","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/00/bb7483b435b978b51cda05a1bb141f68f2e0f9.src","preCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        CanalJsonDeserializationSchema that = (CanalJsonDeserializationSchema) o;\n        return ignoreParseErrors == that.ignoreParseErrors\n                && fieldCount == that.fieldCount\n                && Objects.equals(jsonDeserializer, that.jsonDeserializer)\n                && Objects.equals(resultTypeInfo, that.resultTypeInfo);\n    }\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"M"},{"authorDate":"2020-09-10 16:22:59","commitOrder":3,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumJsonSerializationSchema that = (DebeziumJsonSerializationSchema) o;\n\t\treturn Objects.equals(jsonSerializer, that.jsonSerializer);\n\t}\n","date":"2020-09-10 16:22:59","endLine":97,"groupId":"102167","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f9/4c8137190bdf8e6410236def13cdcfa357a834.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumJsonSerializationSchema that = (DebeziumJsonSerializationSchema) o;\n\t\treturn Objects.equals(jsonSerializer, that.jsonSerializer);\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/debezium/DebeziumJsonSerializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"N"}],"commitId":"814fe0eb06f1941247742de27e8150b7c9274b43","commitMessage":"@@@[FLINK-20385][canal-json] Allow to read metadata for canal-json format\n\n\nThis closes #14464","date":"2020-12-31 10:34:00","modifiedFileCount":"5","status":"M","submitter":"SteNicholas"}]
