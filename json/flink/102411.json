[{"authorTime":"2017-10-19 18:32:26","codes":[{"authorDate":"2017-10-19 18:32:26","commitOrder":2,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","date":"2017-10-20 20:39:36","endLine":148,"groupId":"40384","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e1/efb54f706a56844740abce9078dcb361f50952.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"MB"},{"authorDate":"2017-10-19 18:32:26","commitOrder":2,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tConfiguration configuration = loadConfiguration(parseArguments(args));\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tentrypoint.startCluster();\n\t}\n","date":"2017-10-20 20:39:36","endLine":87,"groupId":"28773","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e7/c981687a7a46cedb9a97f2b985f155c39a2784.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tConfiguration configuration = loadConfiguration(parseArguments(args));\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tentrypoint.startCluster();\n\t}\n","realPath":"flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/StandaloneSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"a5801d058dc955200d726131f98a6f0f883ed4dc","commitMessage":"@@@[FLINK-7874] Add logging to the ClusterEntrypoints\n\nThis closes #4860.\n","date":"2017-10-20 20:39:36","modifiedFileCount":"5","status":"M","submitter":"Till"},{"authorTime":"2017-10-19 18:32:26","codes":[{"authorDate":"2018-01-02 23:52:16","commitOrder":3,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","date":"2018-01-18 16:45:59","endLine":152,"groupId":"40384","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d2/7e2075e4e69759fd9bf1dbddefeea0ab401550.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2017-10-19 18:32:26","commitOrder":3,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tConfiguration configuration = loadConfiguration(parseArguments(args));\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tentrypoint.startCluster();\n\t}\n","date":"2017-10-20 20:39:36","endLine":87,"groupId":"28773","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e7/c981687a7a46cedb9a97f2b985f155c39a2784.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tConfiguration configuration = loadConfiguration(parseArguments(args));\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tentrypoint.startCluster();\n\t}\n","realPath":"flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/StandaloneSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"}],"commitId":"76abcaa55d0d6ab704b7ab8164718e8e2dcae2c4","commitMessage":"@@@[FLINK-8350][config] replace \"taskmanager.tmp.dirs\" with \"io.tmp.dirs\"\n\nThis replaces \"taskmanager.tmp.dirs\" with the new \"io.tmp.dirs\"\nconfiguration parameter to define temporary directories in (cluster)\nenvironments for all components.  i.e. JobManager.  JobMaster.  Dispatcher. ...\n\nPlease note that this (kind of internal and thus undocumented) configuration\nparameter is set by our YARN and Mesos integrations.\n\n[FLINK-8350][cluster] initialise \"io.tmp.dirs\" for JobManager as well\n\nIn a YARN and Mesos environment.  this initialises Flink's temporary directory\nconfiguration with YARN/Mesos application-specific paths for JobManager. \nJobMaster.  Dispatcher.  etc. components as well (Mesos integration actually still\nlacks a proper integration of this.  but once done.  the new hooks fall in place\njust fine).\n","date":"2018-01-18 16:45:59","modifiedFileCount":"20","status":"M","submitter":"Nico Kruber"},{"authorTime":"2018-07-11 23:41:27","codes":[{"authorDate":"2018-01-02 23:52:16","commitOrder":4,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","date":"2018-01-18 16:45:59","endLine":152,"groupId":"40384","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d2/7e2075e4e69759fd9bf1dbddefeea0ab401550.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2018-07-11 23:41:27","commitOrder":4,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tEntrypointClusterConfiguration entrypointClusterConfiguration = null;\n\t\tfinal CommandLineParser<EntrypointClusterConfiguration> commandLineParser = new CommandLineParser<>(new EntrypointClusterConfigurationParserFactory());\n\n\t\ttry {\n\t\t\tentrypointClusterConfiguration = commandLineParser.parse(args);\n\t\t} catch (FlinkParseException e) {\n\t\t\tLOG.error(\"Could not parse command line arguments {}.\", args, e);\n\t\t\tcommandLineParser.printHelp();\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfiguration(entrypointClusterConfiguration);\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tentrypoint.startCluster();\n\t}\n","date":"2018-07-14 00:01:01","endLine":104,"groupId":"27981","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d5/6725c5bf0236b2e50b0b4e4e2e294d34f46444.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tConfiguration configuration = loadConfiguration(parseArguments(args));\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tentrypoint.startCluster();\n\t}\n","realPath":"flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/StandaloneSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"ab9bd87e521d19db7c7d783268a3532d2e876a5d","commitMessage":"@@@[FLINK-9818] Add cluster component command line parser\n\nThe cluster component command line parser is responsible for parsing the common command line\narguments with which the cluster components are started. These include the configDir.  webui-port\nand dynamic properties.\n\nThis closes #6314.\n","date":"2018-07-14 00:01:01","modifiedFileCount":"3","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2018-08-17 01:33:21","codes":[{"authorDate":"2018-01-02 23:52:16","commitOrder":5,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","date":"2018-01-18 16:45:59","endLine":152,"groupId":"40384","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d2/7e2075e4e69759fd9bf1dbddefeea0ab401550.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2018-08-17 01:33:21","commitOrder":5,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tEntrypointClusterConfiguration entrypointClusterConfiguration = null;\n\t\tfinal CommandLineParser<EntrypointClusterConfiguration> commandLineParser = new CommandLineParser<>(new EntrypointClusterConfigurationParserFactory());\n\n\t\ttry {\n\t\t\tentrypointClusterConfiguration = commandLineParser.parse(args);\n\t\t} catch (FlinkParseException e) {\n\t\t\tLOG.error(\"Could not parse command line arguments {}.\", args, e);\n\t\t\tcommandLineParser.printHelp(StandaloneSessionClusterEntrypoint.class.getSimpleName());\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfiguration(entrypointClusterConfiguration);\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tentrypoint.startCluster();\n\t}\n","date":"2018-08-22 21:40:33","endLine":101,"groupId":"27981","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ed/ff87b783d1a971e56c769593ef609695aee13a.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tEntrypointClusterConfiguration entrypointClusterConfiguration = null;\n\t\tfinal CommandLineParser<EntrypointClusterConfiguration> commandLineParser = new CommandLineParser<>(new EntrypointClusterConfigurationParserFactory());\n\n\t\ttry {\n\t\t\tentrypointClusterConfiguration = commandLineParser.parse(args);\n\t\t} catch (FlinkParseException e) {\n\t\t\tLOG.error(\"Could not parse command line arguments {}.\", args, e);\n\t\t\tcommandLineParser.printHelp();\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfiguration(entrypointClusterConfiguration);\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tentrypoint.startCluster();\n\t}\n","realPath":"flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/StandaloneSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"fa3fba5cd3ab0acaed2537090e549e7ab70d8613","commitMessage":"@@@[hotfix] Improve StandaloneJobClusterEntrypoint command line help\n\nProperly print the CLI help if the command line options could not be parsed.\n","date":"2018-08-22 21:40:33","modifiedFileCount":"4","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2018-09-24 15:27:34","codes":[{"authorDate":"2018-09-24 15:27:34","commitOrder":6,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","date":"2018-09-28 17:42:39","endLine":103,"groupId":"40384","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/17/33f49d93889e00f0679361eeb3b7adb0f66e8a.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tyarnJobClusterEntrypoint.startCluster();\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2018-09-24 15:27:34","commitOrder":6,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tEntrypointClusterConfiguration entrypointClusterConfiguration = null;\n\t\tfinal CommandLineParser<EntrypointClusterConfiguration> commandLineParser = new CommandLineParser<>(new EntrypointClusterConfigurationParserFactory());\n\n\t\ttry {\n\t\t\tentrypointClusterConfiguration = commandLineParser.parse(args);\n\t\t} catch (FlinkParseException e) {\n\t\t\tLOG.error(\"Could not parse command line arguments {}.\", args, e);\n\t\t\tcommandLineParser.printHelp(StandaloneSessionClusterEntrypoint.class.getSimpleName());\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfiguration(entrypointClusterConfiguration);\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","date":"2018-09-28 17:42:39","endLine":64,"groupId":"27981","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/16/752359992a8e947acc23fd2c5598754caeec4f.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tEntrypointClusterConfiguration entrypointClusterConfiguration = null;\n\t\tfinal CommandLineParser<EntrypointClusterConfiguration> commandLineParser = new CommandLineParser<>(new EntrypointClusterConfigurationParserFactory());\n\n\t\ttry {\n\t\t\tentrypointClusterConfiguration = commandLineParser.parse(args);\n\t\t} catch (FlinkParseException e) {\n\t\t\tLOG.error(\"Could not parse command line arguments {}.\", args, e);\n\t\t\tcommandLineParser.printHelp(StandaloneSessionClusterEntrypoint.class.getSimpleName());\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfiguration(entrypointClusterConfiguration);\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tentrypoint.startCluster();\n\t}\n","realPath":"flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/StandaloneSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"}],"commitId":"b9ebf421c8979d99f2ae960075b76796ba0b6ac4","commitMessage":"@@@[FLINK-10411] Move System.exit out of ClusterEntrypoint\n\nMove the logic of when to exit the JVM process out of the ClusterEntrypoint\nso that the caller is now responsible to make this call. This improves the\nusage of the ClusterEntrypoint for testing purposes.\n","date":"2018-09-28 17:42:39","modifiedFileCount":"7","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2018-09-24 15:27:34","codes":[{"authorDate":"2020-01-02 18:20:49","commitOrder":7,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","date":"2020-01-03 10:58:45","endLine":120,"groupId":"40384","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a3/60d940335a34b095690bf035bddb7df1212940.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration,\n\t\t\tworkingDirectory);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2018-09-24 15:27:34","commitOrder":7,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tEntrypointClusterConfiguration entrypointClusterConfiguration = null;\n\t\tfinal CommandLineParser<EntrypointClusterConfiguration> commandLineParser = new CommandLineParser<>(new EntrypointClusterConfigurationParserFactory());\n\n\t\ttry {\n\t\t\tentrypointClusterConfiguration = commandLineParser.parse(args);\n\t\t} catch (FlinkParseException e) {\n\t\t\tLOG.error(\"Could not parse command line arguments {}.\", args, e);\n\t\t\tcommandLineParser.printHelp(StandaloneSessionClusterEntrypoint.class.getSimpleName());\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfiguration(entrypointClusterConfiguration);\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","date":"2018-09-28 17:42:39","endLine":64,"groupId":"27981","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/16/752359992a8e947acc23fd2c5598754caeec4f.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tEntrypointClusterConfiguration entrypointClusterConfiguration = null;\n\t\tfinal CommandLineParser<EntrypointClusterConfiguration> commandLineParser = new CommandLineParser<>(new EntrypointClusterConfigurationParserFactory());\n\n\t\ttry {\n\t\t\tentrypointClusterConfiguration = commandLineParser.parse(args);\n\t\t} catch (FlinkParseException e) {\n\t\t\tLOG.error(\"Could not parse command line arguments {}.\", args, e);\n\t\t\tcommandLineParser.printHelp(StandaloneSessionClusterEntrypoint.class.getSimpleName());\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfiguration(entrypointClusterConfiguration);\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","realPath":"flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/StandaloneSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"}],"commitId":"d82828d8c8fffcc5afd3a7c79bfdb7e018908546","commitMessage":"@@@[hotfix][yarn] Remove unused argument workingDirectory for YarnEntrypointUtils#installSecurityContext.\n","date":"2020-01-03 10:58:45","modifiedFileCount":"4","status":"M","submitter":"Xintong Song"},{"authorTime":"2018-09-24 15:27:34","codes":[{"authorDate":"2020-01-02 18:24:00","commitOrder":8,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","date":"2020-01-03 10:58:45","endLine":120,"groupId":"40384","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/da/df92da2e3ad9b4a3d4e31470fe841ee6be45d6.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(\n\t\t\tconfiguration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2018-09-24 15:27:34","commitOrder":8,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tEntrypointClusterConfiguration entrypointClusterConfiguration = null;\n\t\tfinal CommandLineParser<EntrypointClusterConfiguration> commandLineParser = new CommandLineParser<>(new EntrypointClusterConfigurationParserFactory());\n\n\t\ttry {\n\t\t\tentrypointClusterConfiguration = commandLineParser.parse(args);\n\t\t} catch (FlinkParseException e) {\n\t\t\tLOG.error(\"Could not parse command line arguments {}.\", args, e);\n\t\t\tcommandLineParser.printHelp(StandaloneSessionClusterEntrypoint.class.getSimpleName());\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfiguration(entrypointClusterConfiguration);\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","date":"2018-09-28 17:42:39","endLine":64,"groupId":"27981","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/16/752359992a8e947acc23fd2c5598754caeec4f.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tEntrypointClusterConfiguration entrypointClusterConfiguration = null;\n\t\tfinal CommandLineParser<EntrypointClusterConfiguration> commandLineParser = new CommandLineParser<>(new EntrypointClusterConfigurationParserFactory());\n\n\t\ttry {\n\t\t\tentrypointClusterConfiguration = commandLineParser.parse(args);\n\t\t} catch (FlinkParseException e) {\n\t\t\tLOG.error(\"Could not parse command line arguments {}.\", args, e);\n\t\t\tcommandLineParser.printHelp(StandaloneSessionClusterEntrypoint.class.getSimpleName());\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfiguration(entrypointClusterConfiguration);\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","realPath":"flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/StandaloneSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"}],"commitId":"267f59017bf14a30bf5f70a94d85f800def92109","commitMessage":"@@@[hotfix][yarn] Remove unused argument logger for YarnEntrypointUtils#loadConfiguration.\n","date":"2020-01-03 10:58:45","modifiedFileCount":"4","status":"M","submitter":"Xintong Song"},{"authorTime":"2020-10-19 21:09:56","codes":[{"authorDate":"2020-10-19 21:09:56","commitOrder":9,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tfinal Configuration dynamicParameters = ClusterEntrypointUtils.parseParametersOrExit(\n\t\t\targs,\n\t\t\tnew DynamicParametersConfigurationParserFactory(),\n\t\t\tYarnJobClusterEntrypoint.class);\n\t\tfinal Configuration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, dynamicParameters, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","date":"2020-11-05 01:07:21","endLine":96,"groupId":"102411","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c7/6b8d23ce5376bb2aeec1bb9eee0fe073608682.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tMap<String, String> env = System.getenv();\n\n\t\tfinal String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key());\n\t\tPreconditions.checkArgument(\n\t\t\tworkingDirectory != null,\n\t\t\t\"Working directory variable (%s) not set\",\n\t\t\tApplicationConstants.Environment.PWD.key());\n\n\t\ttry {\n\t\t\tYarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG);\n\t\t} catch (IOException e) {\n\t\t\tLOG.warn(\"Could not log YARN environment information.\", e);\n\t\t}\n\n\t\tConfiguration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env);\n\n\t\tYarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint);\n\t}\n","realPath":"flink-yarn/src/main/java/org/apache/flink/yarn/entrypoint/YarnJobClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2020-10-19 21:09:56","commitOrder":9,"curCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tfinal EntrypointClusterConfiguration entrypointClusterConfiguration = ClusterEntrypointUtils.parseParametersOrExit(\n\t\t\targs,\n\t\t\tnew EntrypointClusterConfigurationParserFactory(),\n\t\t\tStandaloneSessionClusterEntrypoint.class);\n\t\tConfiguration configuration = loadConfiguration(entrypointClusterConfiguration);\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","date":"2020-11-05 01:07:21","endLine":58,"groupId":"102411","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3c/444abee62010e40dfba73a61992ba5a8116a5e.src","preCode":"\tpublic static void main(String[] args) {\n\t\t\r\n\t\tEnvironmentInformation.logEnvironmentInfo(LOG, StandaloneSessionClusterEntrypoint.class.getSimpleName(), args);\n\t\tSignalHandler.register(LOG);\n\t\tJvmShutdownSafeguard.installAsShutdownHook(LOG);\n\n\t\tEntrypointClusterConfiguration entrypointClusterConfiguration = null;\n\t\tfinal CommandLineParser<EntrypointClusterConfiguration> commandLineParser = new CommandLineParser<>(new EntrypointClusterConfigurationParserFactory());\n\n\t\ttry {\n\t\t\tentrypointClusterConfiguration = commandLineParser.parse(args);\n\t\t} catch (FlinkParseException e) {\n\t\t\tLOG.error(\"Could not parse command line arguments {}.\", args, e);\n\t\t\tcommandLineParser.printHelp(StandaloneSessionClusterEntrypoint.class.getSimpleName());\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tConfiguration configuration = loadConfiguration(entrypointClusterConfiguration);\n\n\t\tStandaloneSessionClusterEntrypoint entrypoint = new StandaloneSessionClusterEntrypoint(configuration);\n\n\t\tClusterEntrypoint.runClusterEntrypoint(entrypoint);\n\t}\n","realPath":"flink-runtime/src/main/java/org/apache/flink/runtime/entrypoint/StandaloneSessionClusterEntrypoint.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"0a51d85255b9c7480eb5e939d88e9ccc5e98af69","commitMessage":"@@@[FLINK-19662][runtime][kubernetes][yarn][dist] Added dynamic parameters to BashJavaUtils' JobManager argument extraction. Additionally.  the Kubernetes and Yarn deployment were extended accordingly.\n\nThe parameters are returned using the newly introduced global environment variable DYNAMIC_PARAMETERS.\n","date":"2020-11-05 01:07:21","modifiedFileCount":"17","status":"M","submitter":"Matthias Pohl"}]
