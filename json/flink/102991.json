[{"authorTime":"2015-12-02 00:31:32","codes":[{"authorDate":"2015-12-02 00:31:32","commitOrder":1,"curCode":"\tpublic void testManualHashAssignmentCollisionThrowsException() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\t\tenv.disableOperatorChaining();\n\n\t\tenv.addSource(new NoOpSourceFunction()).uid(\"source\")\n\t\t\t\t.map(new NoOpMapFunction()).uid(\"source\") \r\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\t\r\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","date":"2016-01-11 23:30:42","endLine":415,"groupId":"21390","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testManualHashAssignmentCollisionThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/98/750d098f67c84bb1cde91f5a2fd44270bf3c98.src","preCode":"\tpublic void testManualHashAssignmentCollisionThrowsException() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\t\tenv.disableOperatorChaining();\n\n\t\tenv.addSource(new NoOpSourceFunction()).uid(\"source\")\n\t\t\t\t.map(new NoOpMapFunction()).uid(\"source\") \r\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\t\r\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/graph/StreamingJobGraphGeneratorNodeHashTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":404,"status":"B"},{"authorDate":"2015-12-02 00:31:32","commitOrder":1,"curCode":"\tpublic void testManualHashAssignmentForStartNodeInInChain() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction()).uid(\"source\")\n\t\t\t\t.map(new NoOpMapFunction())\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","date":"2016-01-11 23:30:42","endLine":449,"groupId":"21391","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testManualHashAssignmentForStartNodeInInChain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/98/750d098f67c84bb1cde91f5a2fd44270bf3c98.src","preCode":"\tpublic void testManualHashAssignmentForStartNodeInInChain() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction()).uid(\"source\")\n\t\t\t\t.map(new NoOpMapFunction())\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/graph/StreamingJobGraphGeneratorNodeHashTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":440,"status":"B"}],"commitId":"ad7b21b8de28133d43076c889f7afae5c27cba29","commitMessage":"@@@[FLINK-2976] [streaming-java.  streaming-scala] Set JobVertexID based on stream node hash\n\n[comments] Remove unused argument to method\n\n[comments] Add more comments to stream node hashing\n\nAdd name to hash in order to detect swapped nodes when they have names\n\nImprove error message on non-unique user-specified IDs\n\n[comments] Add comment to stream node hashing\n","date":"2016-01-11 23:30:42","modifiedFileCount":"9","status":"B","submitter":"Ufuk Celebi"},{"authorTime":"2019-07-30 17:35:06","codes":[{"authorDate":"2019-07-30 17:35:06","commitOrder":2,"curCode":"\tpublic void testManualHashAssignmentCollisionThrowsException() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\t\tenv.disableOperatorChaining();\n\n\t\tenv.addSource(new NoOpSourceFunction()).uid(\"source\")\n\t\t\t\t.map(new NoOpMapFunction()).uid(\"source\") \r\n\t\t\t\t.addSink(new DiscardingSink<>());\n\n\t\t\r\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","date":"2019-08-01 18:12:28","endLine":392,"groupId":"102991","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testManualHashAssignmentCollisionThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/92/a67c9bab82c09e433bedfd51c341d16b7ce4b6.src","preCode":"\tpublic void testManualHashAssignmentCollisionThrowsException() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\t\tenv.disableOperatorChaining();\n\n\t\tenv.addSource(new NoOpSourceFunction()).uid(\"source\")\n\t\t\t\t.map(new NoOpMapFunction()).uid(\"source\") \r\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\t\r\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/graph/StreamingJobGraphGeneratorNodeHashTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":381,"status":"M"},{"authorDate":"2019-07-30 17:35:06","commitOrder":2,"curCode":"\tpublic void testManualHashAssignmentForStartNodeInInChain() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction()).uid(\"source\")\n\t\t\t\t.map(new NoOpMapFunction())\n\t\t\t\t.addSink(new DiscardingSink<>());\n\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","date":"2019-08-01 18:12:28","endLine":423,"groupId":"102991","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testManualHashAssignmentForStartNodeInInChain","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/92/a67c9bab82c09e433bedfd51c341d16b7ce4b6.src","preCode":"\tpublic void testManualHashAssignmentForStartNodeInInChain() throws Exception {\n\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment();\n\t\tenv.setParallelism(4);\n\n\t\tenv.addSource(new NoOpSourceFunction()).uid(\"source\")\n\t\t\t\t.map(new NoOpMapFunction())\n\t\t\t\t.addSink(new NoOpSinkFunction());\n\n\t\tenv.getStreamGraph().getJobGraph();\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/graph/StreamingJobGraphGeneratorNodeHashTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":414,"status":"M"}],"commitId":"bd4328dbcea908191b669e53b57b790a4e627ecd","commitMessage":"@@@[FLINK-13376][datastream] Unify all no operation sinks with DiscardingSink\n","date":"2019-08-01 18:12:28","modifiedFileCount":"6","status":"M","submitter":"ifndef-SleePy"}]
