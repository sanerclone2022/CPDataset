[{"authorTime":"2020-06-04 20:01:47","codes":[{"authorDate":"2020-06-04 20:01:47","commitOrder":1,"curCode":"\tpublic void testInvalidRawTypeAvroSchemaConversion() {\n\t\tRowType rowType = (RowType) TableSchema.builder()\n\t\t\t.field(\"a\", DataTypes.STRING())\n\t\t\t.field(\"b\", DataTypes.RAW(Types.GENERIC(AvroSchemaConverterTest.class)))\n\t\t\t.build().toRowDataType().getLogicalType();\n\t\tthrown.expect(UnsupportedOperationException.class);\n\t\tthrown.expectMessage(\"Unsupported to derive Schema for type: RAW\");\n\t\tAvroSchemaConverter.convertToSchema(rowType);\n\t}\n","date":"2020-06-08 10:03:09","endLine":65,"groupId":"33881","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidRawTypeAvroSchemaConversion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/fa/499b79c4a6984ad99d8b393f5c4e76ee73233a.src","preCode":"\tpublic void testInvalidRawTypeAvroSchemaConversion() {\n\t\tRowType rowType = (RowType) TableSchema.builder()\n\t\t\t.field(\"a\", DataTypes.STRING())\n\t\t\t.field(\"b\", DataTypes.RAW(Types.GENERIC(AvroSchemaConverterTest.class)))\n\t\t\t.build().toRowDataType().getLogicalType();\n\t\tthrown.expect(UnsupportedOperationException.class);\n\t\tthrown.expectMessage(\"Unsupported to derive Schema for type: RAW\");\n\t\tAvroSchemaConverter.convertToSchema(rowType);\n\t}\n","realPath":"flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2020-06-04 20:01:47","commitOrder":1,"curCode":"\tpublic void testInvalidTimestampTypeAvroSchemaConversion() {\n\t\tRowType rowType = (RowType) TableSchema.builder()\n\t\t\t.field(\"a\", DataTypes.STRING())\n\t\t\t.field(\"b\", DataTypes.TIMESTAMP(9))\n\t\t\t.build().toRowDataType().getLogicalType();\n\t\tthrown.expect(IllegalArgumentException.class);\n\t\tthrown.expectMessage(\"Avro does not support TIMESTAMP type with precision: 9, \" +\n\t\t\t\"it only supports precision less than 3.\");\n\t\tAvroSchemaConverter.convertToSchema(rowType);\n\t}\n","date":"2020-06-08 10:03:09","endLine":77,"groupId":"33884","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidTimestampTypeAvroSchemaConversion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/fa/499b79c4a6984ad99d8b393f5c4e76ee73233a.src","preCode":"\tpublic void testInvalidTimestampTypeAvroSchemaConversion() {\n\t\tRowType rowType = (RowType) TableSchema.builder()\n\t\t\t.field(\"a\", DataTypes.STRING())\n\t\t\t.field(\"b\", DataTypes.TIMESTAMP(9))\n\t\t\t.build().toRowDataType().getLogicalType();\n\t\tthrown.expect(IllegalArgumentException.class);\n\t\tthrown.expectMessage(\"Avro does not support TIMESTAMP type with precision: 9, \" +\n\t\t\t\"it only supports precision less than 3.\");\n\t\tAvroSchemaConverter.convertToSchema(rowType);\n\t}\n","realPath":"flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"8f858f398de3c47fe5045fbe0f1497022bfb1c15","commitMessage":"@@@[FLINK-18073][avro] Fix AvroRowDataSerializationSchema is not serializable\n\nThis closes #12471\n","date":"2020-06-08 10:03:09","modifiedFileCount":"4","status":"B","submitter":"Jark Wu"},{"authorTime":"2020-06-04 20:01:47","codes":[{"authorDate":"2021-01-12 17:13:24","commitOrder":2,"curCode":"    public void testInvalidRawTypeAvroSchemaConversion() {\n        RowType rowType =\n                (RowType)\n                        TableSchema.builder()\n                                .field(\"a\", DataTypes.STRING())\n                                .field(\"b\", DataTypes.RAW(Void.class, VoidSerializer.INSTANCE))\n                                .build()\n                                .toRowDataType()\n                                .getLogicalType();\n        thrown.expect(UnsupportedOperationException.class);\n        thrown.expectMessage(\"Unsupported to derive Schema for type: RAW\");\n        AvroSchemaConverter.convertToSchema(rowType);\n    }\n","date":"2021-01-18 21:32:17","endLine":130,"groupId":"101912","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testInvalidRawTypeAvroSchemaConversion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0f/c451fe56646b4d0e5266beee8c92fbff6582fa.src","preCode":"    public void testInvalidRawTypeAvroSchemaConversion() {\n        RowType rowType =\n                (RowType)\n                        TableSchema.builder()\n                                .field(\"a\", DataTypes.STRING())\n                                .field(\n                                        \"b\",\n                                        DataTypes.RAW(Types.GENERIC(AvroSchemaConverterTest.class)))\n                                .build()\n                                .toRowDataType()\n                                .getLogicalType();\n        thrown.expect(UnsupportedOperationException.class);\n        thrown.expectMessage(\"Unsupported to derive Schema for type: RAW\");\n        AvroSchemaConverter.convertToSchema(rowType);\n    }\n","realPath":"flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2020-06-04 20:01:47","commitOrder":2,"curCode":"\tpublic void testInvalidTimestampTypeAvroSchemaConversion() {\n\t\tRowType rowType = (RowType) TableSchema.builder()\n\t\t\t.field(\"a\", DataTypes.STRING())\n\t\t\t.field(\"b\", DataTypes.TIMESTAMP(9))\n\t\t\t.build().toRowDataType().getLogicalType();\n\t\tthrown.expect(IllegalArgumentException.class);\n\t\tthrown.expectMessage(\"Avro does not support TIMESTAMP type with precision: 9, \" +\n\t\t\t\"it only supports precision less than 3.\");\n\t\tAvroSchemaConverter.convertToSchema(rowType);\n\t}\n","date":"2020-06-08 10:03:09","endLine":77,"groupId":"101912","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidTimestampTypeAvroSchemaConversion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/fa/499b79c4a6984ad99d8b393f5c4e76ee73233a.src","preCode":"\tpublic void testInvalidTimestampTypeAvroSchemaConversion() {\n\t\tRowType rowType = (RowType) TableSchema.builder()\n\t\t\t.field(\"a\", DataTypes.STRING())\n\t\t\t.field(\"b\", DataTypes.TIMESTAMP(9))\n\t\t\t.build().toRowDataType().getLogicalType();\n\t\tthrown.expect(IllegalArgumentException.class);\n\t\tthrown.expectMessage(\"Avro does not support TIMESTAMP type with precision: 9, \" +\n\t\t\t\"it only supports precision less than 3.\");\n\t\tAvroSchemaConverter.convertToSchema(rowType);\n\t}\n","realPath":"flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"}],"commitId":"2e8b6eab19df6e53b6031dc4535988b3254e19dc","commitMessage":"@@@[FLINK-20862] Make raw types of TypeInformation resolvable\n\nThis closes #14619.\n","date":"2021-01-18 21:32:17","modifiedFileCount":"13","status":"M","submitter":"Timo Walther"}]
