[{"authorTime":"2016-03-10 01:20:43","codes":[{"authorDate":"2016-03-10 01:20:43","commitOrder":1,"curCode":"\tprotected void verifyResultsIdealCircumstances(\n\t\tOneInputStreamTaskTestHarness<Tuple1<Integer>, Tuple1<Integer>> harness,\n\t\tOneInputStreamTask<Tuple1<Integer>, Tuple1<Integer>> task, ListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 60), sink.values.size() == 60);\n\t}\n","date":"2016-06-16 22:58:04","endLine":70,"groupId":"22241","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyResultsIdealCircumstances","params":"(OneInputStreamTaskTestHarness<Tuple1<Integer>@Tuple1<Integer>>harness@OneInputStreamTask<Tuple1<Integer>@Tuple1<Integer>>task@ListSinksink)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/61/5fabb76a7b31b2f526f14fdd8734edee34d38b.src","preCode":"\tprotected void verifyResultsIdealCircumstances(\n\t\tOneInputStreamTaskTestHarness<Tuple1<Integer>, Tuple1<Integer>> harness,\n\t\tOneInputStreamTask<Tuple1<Integer>, Tuple1<Integer>> task, ListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 60), sink.values.size() == 60);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/operators/GenericWriteAheadSinkTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2016-03-10 01:20:43","commitOrder":1,"curCode":"\tprotected void verifyResultsDataDiscardingUponRestore(\n\t\tOneInputStreamTaskTestHarness<Tuple1<Integer>, Tuple1<Integer>> harness,\n\t\tOneInputStreamTask<Tuple1<Integer>, Tuple1<Integer>> task, ListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 20; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\t\tfor (int x = 41; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 40), sink.values.size() == 40);\n\t}\n","date":"2016-06-16 22:58:04","endLine":107,"groupId":"22241","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyResultsDataDiscardingUponRestore","params":"(OneInputStreamTaskTestHarness<Tuple1<Integer>@Tuple1<Integer>>harness@OneInputStreamTask<Tuple1<Integer>@Tuple1<Integer>>task@ListSinksink)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/61/5fabb76a7b31b2f526f14fdd8734edee34d38b.src","preCode":"\tprotected void verifyResultsDataDiscardingUponRestore(\n\t\tOneInputStreamTaskTestHarness<Tuple1<Integer>, Tuple1<Integer>> harness,\n\t\tOneInputStreamTask<Tuple1<Integer>, Tuple1<Integer>> task, ListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 20; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\t\tfor (int x = 41; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 40), sink.values.size() == 40);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/operators/GenericWriteAheadSinkTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"B"}],"commitId":"b63e19b090cd9a1558db4c68c385e0ce947789e9","commitMessage":"@@@[FLINK-3332] Address pull request review comments\n\nThis closes #1771\n","date":"2016-06-16 22:58:04","modifiedFileCount":"9","status":"B","submitter":"zentol"},{"authorTime":"2016-08-11 17:59:07","codes":[{"authorDate":"2016-08-11 17:59:07","commitOrder":2,"curCode":"\tprotected void verifyResultsIdealCircumstances(\n\t\tOneInputStreamOperatorTestHarness<Tuple1<Integer>, Tuple1<Integer>> harness,\n\t\tListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 60), sink.values.size() == 60);\n\t}\n","date":"2016-09-01 01:10:01","endLine":72,"groupId":"22241","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyResultsIdealCircumstances","params":"(OneInputStreamOperatorTestHarness<Tuple1<Integer>@Tuple1<Integer>>harness@ListSinksink)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d1/ba4898bcbd8002e14d901af8f065f2d2ef3c54.src","preCode":"\tprotected void verifyResultsIdealCircumstances(\n\t\tOneInputStreamTaskTestHarness<Tuple1<Integer>, Tuple1<Integer>> harness,\n\t\tOneInputStreamTask<Tuple1<Integer>, Tuple1<Integer>> task, ListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 60), sink.values.size() == 60);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/operators/GenericWriteAheadSinkTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2016-08-11 17:59:07","commitOrder":2,"curCode":"\tprotected void verifyResultsDataDiscardingUponRestore(\n\t\tOneInputStreamOperatorTestHarness<Tuple1<Integer>, Tuple1<Integer>> harness,\n\t\tListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 20; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\t\tfor (int x = 41; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 40), sink.values.size() == 40);\n\t}\n","date":"2016-09-01 01:10:01","endLine":109,"groupId":"22241","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyResultsDataDiscardingUponRestore","params":"(OneInputStreamOperatorTestHarness<Tuple1<Integer>@Tuple1<Integer>>harness@ListSinksink)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d1/ba4898bcbd8002e14d901af8f065f2d2ef3c54.src","preCode":"\tprotected void verifyResultsDataDiscardingUponRestore(\n\t\tOneInputStreamTaskTestHarness<Tuple1<Integer>, Tuple1<Integer>> harness,\n\t\tOneInputStreamTask<Tuple1<Integer>, Tuple1<Integer>> task, ListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 20; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\t\tfor (int x = 41; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 40), sink.values.size() == 40);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/operators/GenericWriteAheadSinkTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"847ead01f2f0aaf318b2b1ba8501bc697d245900","commitMessage":"@@@[FLINK-4381] Refactor State to Prepare For Key-Group State Backends\n","date":"2016-09-01 01:10:01","modifiedFileCount":"99","status":"M","submitter":"Stefan Richter"},{"authorTime":"2016-10-26 23:19:12","codes":[{"authorDate":"2016-10-26 23:19:12","commitOrder":3,"curCode":"\tprotected void verifyResultsIdealCircumstances(ListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 60), sink.values.size() == 60);\n\t}\n","date":"2016-12-08 19:27:14","endLine":67,"groupId":"102555","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyResultsIdealCircumstances","params":"(ListSinksink)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9b/cd2e60096f97a4906fb98d98c5a8ba4a7e194b.src","preCode":"\tprotected void verifyResultsIdealCircumstances(\n\t\tOneInputStreamOperatorTestHarness<Tuple1<Integer>, Tuple1<Integer>> harness,\n\t\tListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 60), sink.values.size() == 60);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/operators/GenericWriteAheadSinkTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2016-10-26 23:19:12","commitOrder":3,"curCode":"\tprotected void verifyResultsDataDiscardingUponRestore(ListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 20; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\t\tfor (int x = 41; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 40), sink.values.size() == 40);\n\t}\n","date":"2016-12-08 19:27:14","endLine":100,"groupId":"102555","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyResultsDataDiscardingUponRestore","params":"(ListSinksink)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9b/cd2e60096f97a4906fb98d98c5a8ba4a7e194b.src","preCode":"\tprotected void verifyResultsDataDiscardingUponRestore(\n\t\tOneInputStreamOperatorTestHarness<Tuple1<Integer>, Tuple1<Integer>> harness,\n\t\tListSink sink) {\n\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int x = 1; x <= 20; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\t\tfor (int x = 41; x <= 60; x++) {\n\t\t\tlist.add(x);\n\t\t}\n\n\t\tfor (Integer i : sink.values) {\n\t\t\tlist.remove(i);\n\t\t}\n\t\tAssert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(), list.isEmpty());\n\t\tAssert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 40), sink.values.size() == 40);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/operators/GenericWriteAheadSinkTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"4eb71927bc4f0832eb08a79394ad6864a3c2e142","commitMessage":"@@@[FLINK-5020] Make the GenericWriteAheadSink rescalable.\n\nIntegrates the new state abstractions with the GenericWriteAheadSink\nso that the latter can change its parallelism when resuming execution\nfrom a savepoint.  without geopardizing the provided guarantees.\n\nThis closes #2759\n","date":"2016-12-08 19:27:14","modifiedFileCount":"5","status":"M","submitter":"kl0u"}]
