[{"authorTime":"2018-01-02 14:42:18","codes":[{"authorDate":"2018-01-02 14:42:18","commitOrder":1,"curCode":"\tpublic void testCancel() throws Exception {\n\n\t\t\r\n\t\t{\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { jid.toString() };\n\t\t\tCancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false);\n\n\t\t\tint retCode = testFrontend.cancel(parameters);\n\t\t\tassertEquals(0, retCode);\n\n\t\t\tMockito.verify(testFrontend.client, times(1)).cancel(any(JobID.class));\n\t\t}\n\n\t\t\r\n\t\t{\n\t\t\tString[] parameters =\n\t\t\t\t{\"-flip6\", String.valueOf(new JobID())};\n\t\t\tCancelOptions options = CliFrontendParser.parseCancelCommand(parameters);\n\t\t\tassertTrue(options.getCommandLine().hasOption(Flip6DefaultCLI.FLIP_6.getOpt()));\n\t\t}\n\t}\n","date":"2018-01-12 03:39:41","endLine":72,"groupId":"16939","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/06/ac70996d9231529415987a61fc27563c958465.src","preCode":"\tpublic void testCancel() throws Exception {\n\n\t\t\r\n\t\t{\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { jid.toString() };\n\t\t\tCancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false);\n\n\t\t\tint retCode = testFrontend.cancel(parameters);\n\t\t\tassertEquals(0, retCode);\n\n\t\t\tMockito.verify(testFrontend.client, times(1)).cancel(any(JobID.class));\n\t\t}\n\n\t\t\r\n\t\t{\n\t\t\tString[] parameters =\n\t\t\t\t{\"-flip6\", String.valueOf(new JobID())};\n\t\t\tCancelOptions options = CliFrontendParser.parseCancelCommand(parameters);\n\t\t\tassertTrue(options.getCommandLine().hasOption(Flip6DefaultCLI.FLIP_6.getOpt()));\n\t\t}\n\t}\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/cli/CliFrontendCancelTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2018-01-02 14:42:18","commitOrder":1,"curCode":"\tpublic void testCancelWithSavepoint() throws Exception {\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", jid.toString() };\n\t\t\tCancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false);\n\t\t\tassertEquals(0, testFrontend.cancel(parameters));\n\n\t\t\tMockito.verify(testFrontend.client, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), isNull(String.class));\n\t\t}\n\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", \"targetDirectory\", jid.toString() };\n\t\t\tCancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false);\n\t\t\tassertEquals(0, testFrontend.cancel(parameters));\n\n\t\t\tMockito.verify(testFrontend.client, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), notNull(String.class));\n\t\t}\n\t}\n","date":"2018-01-12 03:39:41","endLine":120,"groupId":"32358","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCancelWithSavepoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/06/ac70996d9231529415987a61fc27563c958465.src","preCode":"\tpublic void testCancelWithSavepoint() throws Exception {\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", jid.toString() };\n\t\t\tCancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false);\n\t\t\tassertEquals(0, testFrontend.cancel(parameters));\n\n\t\t\tMockito.verify(testFrontend.client, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), isNull(String.class));\n\t\t}\n\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", \"targetDirectory\", jid.toString() };\n\t\t\tCancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false);\n\t\t\tassertEquals(0, testFrontend.cancel(parameters));\n\n\t\t\tMockito.verify(testFrontend.client, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), notNull(String.class));\n\t\t}\n\t}\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/cli/CliFrontendCancelTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"}],"commitId":"12396f19851e74310c9b5f28870a8de9794511fc","commitMessage":"@@@[FLINK-8333] [flip6] Separate deployment options from command options\n\nThis commit separates the parsing of command options and deployment options into two\nsteps. This makes it easier to make the CustomCommandLines non-static.\n\nMoreover.  this commit moves the CliFrontend into the cli sub package.\n\nThis closes #5220.\n","date":"2018-01-12 03:39:41","modifiedFileCount":"10","status":"B","submitter":"Till Rohrmann"},{"authorTime":"2018-01-11 20:55:16","codes":[{"authorDate":"2018-01-11 20:55:16","commitOrder":2,"curCode":"\tpublic void testCancel() throws Exception {\n\t\t\r\n\t\tJobID jid = new JobID();\n\n\t\tString[] parameters = { jid.toString() };\n\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\n\t\tint retCode = testFrontend.cancel(parameters);\n\t\tassertEquals(0, retCode);\n\n\t\tMockito.verify(clusterClient, times(1)).cancel(any(JobID.class));\n\t}\n","date":"2018-01-12 03:39:57","endLine":64,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1c/1f4f4f8ef41440b7631e6c559bb6e2a86d135f.src","preCode":"\tpublic void testCancel() throws Exception {\n\n\t\t\r\n\t\t{\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { jid.toString() };\n\t\t\tCancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false);\n\n\t\t\tint retCode = testFrontend.cancel(parameters);\n\t\t\tassertEquals(0, retCode);\n\n\t\t\tMockito.verify(testFrontend.client, times(1)).cancel(any(JobID.class));\n\t\t}\n\n\t\t\r\n\t\t{\n\t\t\tString[] parameters =\n\t\t\t\t{\"-flip6\", String.valueOf(new JobID())};\n\t\t\tCancelOptions options = CliFrontendParser.parseCancelCommand(parameters);\n\t\t\tassertTrue(options.getCommandLine().hasOption(Flip6DefaultCLI.FLIP_6.getOpt()));\n\t\t}\n\t}\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/cli/CliFrontendCancelTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2018-01-11 20:55:16","commitOrder":2,"curCode":"\tpublic void testCancelWithSavepoint() throws Exception {\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", jid.toString() };\n\t\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\tassertEquals(0, testFrontend.cancel(parameters));\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), isNull(String.class));\n\t\t}\n\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", \"targetDirectory\", jid.toString() };\n\t\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\tassertEquals(0, testFrontend.cancel(parameters));\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), notNull(String.class));\n\t\t}\n\t}\n","date":"2018-01-12 03:39:57","endLine":120,"groupId":"1606","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCancelWithSavepoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1c/1f4f4f8ef41440b7631e6c559bb6e2a86d135f.src","preCode":"\tpublic void testCancelWithSavepoint() throws Exception {\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", jid.toString() };\n\t\t\tCancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false);\n\t\t\tassertEquals(0, testFrontend.cancel(parameters));\n\n\t\t\tMockito.verify(testFrontend.client, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), isNull(String.class));\n\t\t}\n\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", \"targetDirectory\", jid.toString() };\n\t\t\tCancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false);\n\t\t\tassertEquals(0, testFrontend.cancel(parameters));\n\n\t\t\tMockito.verify(testFrontend.client, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), notNull(String.class));\n\t\t}\n\t}\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/cli/CliFrontendCancelTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"aff43768f3285a5f2bc5593369a7fec3ed77a2af","commitMessage":"@@@[FLINK-8338] [flip6] Make CustomCommandLines non static in CliFrontend\n\nThis commit changes how CustomCommandLines are registered at the CliFrontend.\nHenceforth.  the CliFrontend is initialized with the set of CustomCommandLines\ninstead of registering them statically. This improves maintainability and\ntestability.\n\nThis closes #5224.\n","date":"2018-01-12 03:39:57","modifiedFileCount":"14","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2018-01-11 23:17:42","codes":[{"authorDate":"2018-01-11 23:17:42","commitOrder":3,"curCode":"\tpublic void testCancel() throws Exception {\n\t\t\r\n\t\tJobID jid = new JobID();\n\n\t\tString[] parameters = { jid.toString() };\n\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\n\t\ttestFrontend.cancel(parameters);\n\n\t\tMockito.verify(clusterClient, times(1)).cancel(any(JobID.class));\n\t}\n","date":"2018-01-12 03:40:06","endLine":61,"groupId":"1605","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b0/a308d82d7a494c412737831a56250914535ae8.src","preCode":"\tpublic void testCancel() throws Exception {\n\t\t\r\n\t\tJobID jid = new JobID();\n\n\t\tString[] parameters = { jid.toString() };\n\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\n\t\tint retCode = testFrontend.cancel(parameters);\n\t\tassertEquals(0, retCode);\n\n\t\tMockito.verify(clusterClient, times(1)).cancel(any(JobID.class));\n\t}\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/cli/CliFrontendCancelTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2018-01-11 23:17:42","commitOrder":3,"curCode":"\tpublic void testCancelWithSavepoint() throws Exception {\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", jid.toString() };\n\t\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\ttestFrontend.cancel(parameters);\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), isNull(String.class));\n\t\t}\n\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", \"targetDirectory\", jid.toString() };\n\t\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\ttestFrontend.cancel(parameters);\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), notNull(String.class));\n\t\t}\n\t}\n","date":"2018-01-12 03:40:06","endLine":113,"groupId":"1606","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCancelWithSavepoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b0/a308d82d7a494c412737831a56250914535ae8.src","preCode":"\tpublic void testCancelWithSavepoint() throws Exception {\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", jid.toString() };\n\t\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\tassertEquals(0, testFrontend.cancel(parameters));\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), isNull(String.class));\n\t\t}\n\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", \"targetDirectory\", jid.toString() };\n\t\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\tassertEquals(0, testFrontend.cancel(parameters));\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), notNull(String.class));\n\t\t}\n\t}\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/cli/CliFrontendCancelTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"e2f1ba92decdb27f3aea4e21a7cad7dcc98cea1a","commitMessage":"@@@[FLINK-8339] [flip6] Let CustomCommandLine return ClusterDescriptor\n\nInstead of directly retrieving or deploying a Flink cluster.  the\nCustomCommandLine now only returns a ClusterDescriptor which can be used\nfor these operations. This disentangles the ClusterDescriptor and the\nCustomCommandLine a bit better supporting a proper lifecycle management\nof the former.\n\nThis closes #5225.\n","date":"2018-01-12 03:40:06","modifiedFileCount":"21","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2018-01-12 06:46:33","codes":[{"authorDate":"2018-01-12 06:46:33","commitOrder":4,"curCode":"\tpublic void testCancel() throws Exception {\n\t\t\r\n\t\tJobID jid = new JobID();\n\n\t\tString[] parameters = { jid.toString() };\n\t\tfinal ClusterClient<String> clusterClient = createClusterClient();\n\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\n\t\ttestFrontend.cancel(parameters);\n\n\t\tMockito.verify(clusterClient, times(1)).cancel(any(JobID.class));\n\t}\n","date":"2018-01-12 23:14:04","endLine":61,"groupId":"34958","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b2/fa003bcb9e11e8f185c6f66409f26347b0e3a5.src","preCode":"\tpublic void testCancel() throws Exception {\n\t\t\r\n\t\tJobID jid = new JobID();\n\n\t\tString[] parameters = { jid.toString() };\n\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\n\t\ttestFrontend.cancel(parameters);\n\n\t\tMockito.verify(clusterClient, times(1)).cancel(any(JobID.class));\n\t}\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/cli/CliFrontendCancelTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2018-01-12 06:46:33","commitOrder":4,"curCode":"\tpublic void testCancelWithSavepoint() throws Exception {\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", jid.toString() };\n\t\t\tfinal ClusterClient<String> clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\ttestFrontend.cancel(parameters);\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), isNull(String.class));\n\t\t}\n\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", \"targetDirectory\", jid.toString() };\n\t\t\tfinal ClusterClient<String> clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\ttestFrontend.cancel(parameters);\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), notNull(String.class));\n\t\t}\n\t}\n","date":"2018-01-12 23:14:04","endLine":113,"groupId":"1606","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCancelWithSavepoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b2/fa003bcb9e11e8f185c6f66409f26347b0e3a5.src","preCode":"\tpublic void testCancelWithSavepoint() throws Exception {\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", jid.toString() };\n\t\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\ttestFrontend.cancel(parameters);\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), isNull(String.class));\n\t\t}\n\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", \"targetDirectory\", jid.toString() };\n\t\t\tfinal ClusterClient clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\ttestFrontend.cancel(parameters);\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), notNull(String.class));\n\t\t}\n\t}\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/cli/CliFrontendCancelTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"38d3720863c6187153174d0df57fc414b0cf8e96","commitMessage":"@@@[FLINK-8347] [flip6] Make cluster id used by ClusterDescriptor typesafe\n\nThe ClusterDescriptor uses a typed cluster id for the ClusterClient retrieval.\nMoreover.  the ClusterClient and the CustomCommandLine are typed accordingly.\n\nThis closes #5232.\n","date":"2018-01-12 23:14:04","modifiedFileCount":"39","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2019-11-08 10:23:59","codes":[{"authorDate":"2019-11-08 10:23:59","commitOrder":5,"curCode":"\tpublic void testCancel() throws Exception {\n\t\t\r\n\t\tJobID jid = new JobID();\n\n\t\tOneShotLatch cancelLatch = new OneShotLatch();\n\n\t\tString[] parameters = { jid.toString() };\n\n\t\tTestingClusterClient<String> clusterClient = new TestingClusterClient<>();\n\n\t\tclusterClient.setCancelFunction(jobID -> {\n\t\t\tcancelLatch.trigger();\n\t\t\treturn CompletableFuture.completedFuture(Acknowledge.get());\n\t\t});\n\n\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\ttestFrontend.cancel(parameters);\n\t\tcancelLatch.await();\n\t}\n","date":"2019-11-08 10:23:59","endLine":72,"groupId":"101691","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ff/c3689810b729f259ccef3614ffc40e13142b40.src","preCode":"\tpublic void testCancel() throws Exception {\n\t\t\r\n\t\tJobID jid = new JobID();\n\n\t\tString[] parameters = { jid.toString() };\n\t\tfinal ClusterClient<String> clusterClient = createClusterClient();\n\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\n\t\ttestFrontend.cancel(parameters);\n\n\t\tMockito.verify(clusterClient, times(1)).cancel(any(JobID.class));\n\t}\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/cli/CliFrontendCancelTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2019-11-08 10:23:59","commitOrder":5,"curCode":"\tpublic void testCancelWithSavepoint() throws Exception {\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tOneShotLatch cancelWithSavepointLatch = new OneShotLatch();\n\n\t\t\tString[] parameters = { \"-s\", jid.toString() };\n\t\t\tTestingClusterClient<String> clusterClient = new TestingClusterClient<>();\n\t\t\tclusterClient.setCancelWithSavepointFunction((jobID, savepointDirectory) -> {\n\t\t\t\tassertNull(savepointDirectory);\n\t\t\t\tcancelWithSavepointLatch.trigger();\n\t\t\t\treturn CompletableFuture.completedFuture(savepointDirectory);\n\t\t\t});\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\ttestFrontend.cancel(parameters);\n\t\t\tcancelWithSavepointLatch.await();\n\t\t}\n\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tOneShotLatch cancelWithSavepointLatch = new OneShotLatch();\n\n\t\t\tString[] parameters = { \"-s\", \"targetDirectory\", jid.toString() };\n\t\t\tTestingClusterClient<String> clusterClient = new TestingClusterClient<>();\n\t\t\tclusterClient.setCancelWithSavepointFunction((jobID, savepointDirectory) -> {\n\t\t\t\tassertNotNull(savepointDirectory);\n\t\t\t\tcancelWithSavepointLatch.trigger();\n\t\t\t\treturn CompletableFuture.completedFuture(savepointDirectory);\n\t\t\t});\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\ttestFrontend.cancel(parameters);\n\t\t\tcancelWithSavepointLatch.await();\n\t\t}\n\t}\n","date":"2019-11-08 10:23:59","endLine":134,"groupId":"101691","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCancelWithSavepoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ff/c3689810b729f259ccef3614ffc40e13142b40.src","preCode":"\tpublic void testCancelWithSavepoint() throws Exception {\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", jid.toString() };\n\t\t\tfinal ClusterClient<String> clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\ttestFrontend.cancel(parameters);\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), isNull(String.class));\n\t\t}\n\n\t\t{\n\t\t\t\r\n\t\t\tJobID jid = new JobID();\n\n\t\t\tString[] parameters = { \"-s\", \"targetDirectory\", jid.toString() };\n\t\t\tfinal ClusterClient<String> clusterClient = createClusterClient();\n\t\t\tMockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient);\n\t\t\ttestFrontend.cancel(parameters);\n\n\t\t\tMockito.verify(clusterClient, times(1))\n\t\t\t\t.cancelWithSavepoint(any(JobID.class), notNull(String.class));\n\t\t}\n\t}\n","realPath":"flink-clients/src/test/java/org/apache/flink/client/cli/CliFrontendCancelTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"d938c19480c220344827271ff8da729cd91735b3","commitMessage":"@@@[FLINK-14593][client] Port ClusterClient to asynchronous interface version\n\nThis closes #10069 .\n","date":"2019-11-08 10:23:59","modifiedFileCount":"27","status":"M","submitter":"tison"}]
