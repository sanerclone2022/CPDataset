[{"authorTime":"2020-08-25 19:19:04","codes":[{"authorDate":"2020-08-25 19:19:04","commitOrder":1,"curCode":"\tprivate static void createHBaseTable1() throws IOException {\n\t\t\r\n\t\tTableName tableName = TableName.valueOf(TEST_TABLE_1);\n\t\tcreateTable(tableName, FAMILIES, SPLIT_KEYS);\n\n\t\t\r\n\t\tHTable table = openTable(tableName);\n\t\tList<Put> puts = new ArrayList<>();\n\t\t\r\n\t\tputs.add(putRow(1, 10, \"Hello-1\", 100L, 1.01, false, \"Welt-1\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:00:00\"), Date.valueOf(\"2019-08-18\"),\n\t\t\tTime.valueOf(\"19:00:00\"), new BigDecimal(12345678.0001)));\n\t\tputs.add(putRow(2, 20, \"Hello-2\", 200L, 2.02, true, \"Welt-2\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:01:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:01:00\"),\n\t\t\tnew BigDecimal(12345678.0002)));\n\t\tputs.add(putRow(3, 30, \"Hello-3\", 300L, 3.03, false, \"Welt-3\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:02:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:02:00\"),\n\t\t\tnew BigDecimal(12345678.0003)));\n\t\tputs.add(putRow(4, 40, null, 400L, 4.04, true, \"Welt-4\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:03:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:03:00\"),\n\t\t\tnew BigDecimal(12345678.0004)));\n\t\tputs.add(putRow(5, 50, \"Hello-5\", 500L, 5.05, false, \"Welt-5\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:10:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:10:00\"),\n\t\t\tnew BigDecimal(12345678.0005)));\n\t\tputs.add(putRow(6, 60, \"Hello-6\", 600L, 6.06, true, \"Welt-6\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:20:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:20:00\"),\n\t\t\tnew BigDecimal(12345678.0006)));\n\t\tputs.add(putRow(7, 70, \"Hello-7\", 700L, 7.07, false, \"Welt-7\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:30:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:30:00\"),\n\t\t\tnew BigDecimal(12345678.0007)));\n\t\tputs.add(putRow(8, 80, null, 800L, 8.08, true, \"Welt-8\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:40:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:40:00\"),\n\t\t\tnew BigDecimal(12345678.0008)));\n\n\t\t\r\n\t\ttable.put(puts);\n\t\ttable.close();\n\t}\n","date":"2020-09-28 22:08:46","endLine":153,"groupId":"14763","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createHBaseTable1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/5e/d790f273a1533d4d6a7e96a385162ef37255bd.src","preCode":"\tprivate static void createHBaseTable1() throws IOException {\n\t\t\r\n\t\tTableName tableName = TableName.valueOf(TEST_TABLE_1);\n\t\tcreateTable(tableName, FAMILIES, SPLIT_KEYS);\n\n\t\t\r\n\t\tHTable table = openTable(tableName);\n\t\tList<Put> puts = new ArrayList<>();\n\t\t\r\n\t\tputs.add(putRow(1, 10, \"Hello-1\", 100L, 1.01, false, \"Welt-1\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:00:00\"), Date.valueOf(\"2019-08-18\"),\n\t\t\tTime.valueOf(\"19:00:00\"), new BigDecimal(12345678.0001)));\n\t\tputs.add(putRow(2, 20, \"Hello-2\", 200L, 2.02, true, \"Welt-2\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:01:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:01:00\"),\n\t\t\tnew BigDecimal(12345678.0002)));\n\t\tputs.add(putRow(3, 30, \"Hello-3\", 300L, 3.03, false, \"Welt-3\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:02:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:02:00\"),\n\t\t\tnew BigDecimal(12345678.0003)));\n\t\tputs.add(putRow(4, 40, null, 400L, 4.04, true, \"Welt-4\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:03:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:03:00\"),\n\t\t\tnew BigDecimal(12345678.0004)));\n\t\tputs.add(putRow(5, 50, \"Hello-5\", 500L, 5.05, false, \"Welt-5\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:10:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:10:00\"),\n\t\t\tnew BigDecimal(12345678.0005)));\n\t\tputs.add(putRow(6, 60, \"Hello-6\", 600L, 6.06, true, \"Welt-6\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:20:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:20:00\"),\n\t\t\tnew BigDecimal(12345678.0006)));\n\t\tputs.add(putRow(7, 70, \"Hello-7\", 700L, 7.07, false, \"Welt-7\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:30:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:30:00\"),\n\t\t\tnew BigDecimal(12345678.0007)));\n\t\tputs.add(putRow(8, 80, null, 800L, 8.08, true, \"Welt-8\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:40:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:40:00\"),\n\t\t\tnew BigDecimal(12345678.0008)));\n\n\t\t\r\n\t\ttable.put(puts);\n\t\ttable.close();\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-1.4/src/test/java/org/apache/flink/connector/hbase1/util/HBaseTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"},{"authorDate":"2020-08-25 19:19:04","commitOrder":1,"curCode":"\tprivate static void createHBaseTable1() throws IOException {\n\t\t\r\n\t\tTableName tableName = TableName.valueOf(TEST_TABLE_1);\n\t\tcreateTable(tableName, FAMILIES, SPLIT_KEYS);\n\n\t\t\r\n\t\tTable table = openTable(tableName);\n\t\tList<Put> puts = new ArrayList<>();\n\t\t\r\n\t\tputs.add(putRow(1, 10, \"Hello-1\", 100L, 1.01, false, \"Welt-1\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:00:00\"), Date.valueOf(\"2019-08-18\"),\n\t\t\tTime.valueOf(\"19:00:00\"), new BigDecimal(12345678.0001)));\n\t\tputs.add(putRow(2, 20, \"Hello-2\", 200L, 2.02, true, \"Welt-2\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:01:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:01:00\"),\n\t\t\tnew BigDecimal(12345678.0002)));\n\t\tputs.add(putRow(3, 30, \"Hello-3\", 300L, 3.03, false, \"Welt-3\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:02:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:02:00\"),\n\t\t\tnew BigDecimal(12345678.0003)));\n\t\tputs.add(putRow(4, 40, null, 400L, 4.04, true, \"Welt-4\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:03:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:03:00\"),\n\t\t\tnew BigDecimal(12345678.0004)));\n\t\tputs.add(putRow(5, 50, \"Hello-5\", 500L, 5.05, false, \"Welt-5\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:10:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:10:00\"),\n\t\t\tnew BigDecimal(12345678.0005)));\n\t\tputs.add(putRow(6, 60, \"Hello-6\", 600L, 6.06, true, \"Welt-6\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:20:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:20:00\"),\n\t\t\tnew BigDecimal(12345678.0006)));\n\t\tputs.add(putRow(7, 70, \"Hello-7\", 700L, 7.07, false, \"Welt-7\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:30:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:30:00\"),\n\t\t\tnew BigDecimal(12345678.0007)));\n\t\tputs.add(putRow(8, 80, null, 800L, 8.08, true, \"Welt-8\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:40:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:40:00\"),\n\t\t\tnew BigDecimal(12345678.0008)));\n\n\t\t\r\n\t\ttable.put(puts);\n\t\ttable.close();\n\t}\n","date":"2020-09-28 22:08:46","endLine":153,"groupId":"14763","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createHBaseTable1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/eb/9559c946bb94cb4e5fe76ae87585e9a2344b67.src","preCode":"\tprivate static void createHBaseTable1() throws IOException {\n\t\t\r\n\t\tTableName tableName = TableName.valueOf(TEST_TABLE_1);\n\t\tcreateTable(tableName, FAMILIES, SPLIT_KEYS);\n\n\t\t\r\n\t\tTable table = openTable(tableName);\n\t\tList<Put> puts = new ArrayList<>();\n\t\t\r\n\t\tputs.add(putRow(1, 10, \"Hello-1\", 100L, 1.01, false, \"Welt-1\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:00:00\"), Date.valueOf(\"2019-08-18\"),\n\t\t\tTime.valueOf(\"19:00:00\"), new BigDecimal(12345678.0001)));\n\t\tputs.add(putRow(2, 20, \"Hello-2\", 200L, 2.02, true, \"Welt-2\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:01:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:01:00\"),\n\t\t\tnew BigDecimal(12345678.0002)));\n\t\tputs.add(putRow(3, 30, \"Hello-3\", 300L, 3.03, false, \"Welt-3\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:02:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:02:00\"),\n\t\t\tnew BigDecimal(12345678.0003)));\n\t\tputs.add(putRow(4, 40, null, 400L, 4.04, true, \"Welt-4\",\n\t\t\tTimestamp.valueOf(\"2019-08-18 19:03:00\"), Date.valueOf(\"2019-08-18\"), Time.valueOf(\"19:03:00\"),\n\t\t\tnew BigDecimal(12345678.0004)));\n\t\tputs.add(putRow(5, 50, \"Hello-5\", 500L, 5.05, false, \"Welt-5\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:10:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:10:00\"),\n\t\t\tnew BigDecimal(12345678.0005)));\n\t\tputs.add(putRow(6, 60, \"Hello-6\", 600L, 6.06, true, \"Welt-6\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:20:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:20:00\"),\n\t\t\tnew BigDecimal(12345678.0006)));\n\t\tputs.add(putRow(7, 70, \"Hello-7\", 700L, 7.07, false, \"Welt-7\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:30:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:30:00\"),\n\t\t\tnew BigDecimal(12345678.0007)));\n\t\tputs.add(putRow(8, 80, null, 800L, 8.08, true, \"Welt-8\",\n\t\t\tTimestamp.valueOf(\"2019-08-19 19:40:00\"), Date.valueOf(\"2019-08-19\"), Time.valueOf(\"19:40:00\"),\n\t\t\tnew BigDecimal(12345678.0008)));\n\n\t\t\r\n\t\ttable.put(puts);\n\t\ttable.close();\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-2.2/src/test/java/org/apache/flink/connector/hbase2/util/HBaseTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"}],"commitId":"16c97c8db718219ed036218faf3519541f24b430","commitMessage":"@@@[FLINK-18795][hbase] Support for HBase 2\n\nThis closes #13128\n","date":"2020-09-28 22:08:46","modifiedFileCount":"5","status":"B","submitter":"Miklos Gergely"},{"authorTime":"2021-05-18 15:53:19","codes":[{"authorDate":"2021-05-18 15:53:19","commitOrder":2,"curCode":"    private static void createHBaseTable1() throws IOException {\n        \r\n        TableName tableName = TableName.valueOf(TEST_TABLE_1);\n        createTable(tableName, FAMILIES, SPLIT_KEYS);\n\n        \r\n        HTable table = openTable(tableName);\n        List<Put> puts = new ArrayList<>();\n        \r\n        puts.add(\n                putRow(\n                        1,\n                        10,\n                        \"Hello-1\",\n                        100L,\n                        1.01,\n                        false,\n                        \"Welt-1\",\n                        Timestamp.valueOf(\"2019-08-18 19:00:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:00:00\"),\n                        new BigDecimal(\"12345678.0001\")));\n        puts.add(\n                putRow(\n                        2,\n                        20,\n                        \"Hello-2\",\n                        200L,\n                        2.02,\n                        true,\n                        \"Welt-2\",\n                        Timestamp.valueOf(\"2019-08-18 19:01:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:01:00\"),\n                        new BigDecimal(\"12345678.0002\")));\n        puts.add(\n                putRow(\n                        3,\n                        30,\n                        \"Hello-3\",\n                        300L,\n                        3.03,\n                        false,\n                        \"Welt-3\",\n                        Timestamp.valueOf(\"2019-08-18 19:02:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:02:00\"),\n                        new BigDecimal(\"12345678.0003\")));\n        puts.add(\n                putRow(\n                        4,\n                        40,\n                        null,\n                        400L,\n                        4.04,\n                        true,\n                        \"Welt-4\",\n                        Timestamp.valueOf(\"2019-08-18 19:03:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:03:00\"),\n                        new BigDecimal(\"12345678.0004\")));\n        puts.add(\n                putRow(\n                        5,\n                        50,\n                        \"Hello-5\",\n                        500L,\n                        5.05,\n                        false,\n                        \"Welt-5\",\n                        Timestamp.valueOf(\"2019-08-19 19:10:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:10:00\"),\n                        new BigDecimal(\"12345678.0005\")));\n        puts.add(\n                putRow(\n                        6,\n                        60,\n                        \"Hello-6\",\n                        600L,\n                        6.06,\n                        true,\n                        \"Welt-6\",\n                        Timestamp.valueOf(\"2019-08-19 19:20:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:20:00\"),\n                        new BigDecimal(\"12345678.0006\")));\n        puts.add(\n                putRow(\n                        7,\n                        70,\n                        \"Hello-7\",\n                        700L,\n                        7.07,\n                        false,\n                        \"Welt-7\",\n                        Timestamp.valueOf(\"2019-08-19 19:30:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:30:00\"),\n                        new BigDecimal(\"12345678.0007\")));\n        puts.add(\n                putRow(\n                        8,\n                        80,\n                        null,\n                        800L,\n                        8.08,\n                        true,\n                        \"Welt-8\",\n                        Timestamp.valueOf(\"2019-08-19 19:40:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:40:00\"),\n                        new BigDecimal(\"12345678.0008\")));\n\n        \r\n        table.put(puts);\n        table.close();\n    }\n","date":"2021-05-18 19:59:43","endLine":219,"groupId":"10785","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createHBaseTable1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1a/3dee1456757f320c9f5f67f56b51cc2a7d2d32.src","preCode":"    private static void createHBaseTable1() throws IOException {\n        \r\n        TableName tableName = TableName.valueOf(TEST_TABLE_1);\n        createTable(tableName, FAMILIES, SPLIT_KEYS);\n\n        \r\n        HTable table = openTable(tableName);\n        List<Put> puts = new ArrayList<>();\n        \r\n        puts.add(\n                putRow(\n                        1,\n                        10,\n                        \"Hello-1\",\n                        100L,\n                        1.01,\n                        false,\n                        \"Welt-1\",\n                        Timestamp.valueOf(\"2019-08-18 19:00:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:00:00\"),\n                        new BigDecimal(12345678.0001)));\n        puts.add(\n                putRow(\n                        2,\n                        20,\n                        \"Hello-2\",\n                        200L,\n                        2.02,\n                        true,\n                        \"Welt-2\",\n                        Timestamp.valueOf(\"2019-08-18 19:01:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:01:00\"),\n                        new BigDecimal(12345678.0002)));\n        puts.add(\n                putRow(\n                        3,\n                        30,\n                        \"Hello-3\",\n                        300L,\n                        3.03,\n                        false,\n                        \"Welt-3\",\n                        Timestamp.valueOf(\"2019-08-18 19:02:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:02:00\"),\n                        new BigDecimal(12345678.0003)));\n        puts.add(\n                putRow(\n                        4,\n                        40,\n                        null,\n                        400L,\n                        4.04,\n                        true,\n                        \"Welt-4\",\n                        Timestamp.valueOf(\"2019-08-18 19:03:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:03:00\"),\n                        new BigDecimal(12345678.0004)));\n        puts.add(\n                putRow(\n                        5,\n                        50,\n                        \"Hello-5\",\n                        500L,\n                        5.05,\n                        false,\n                        \"Welt-5\",\n                        Timestamp.valueOf(\"2019-08-19 19:10:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:10:00\"),\n                        new BigDecimal(12345678.0005)));\n        puts.add(\n                putRow(\n                        6,\n                        60,\n                        \"Hello-6\",\n                        600L,\n                        6.06,\n                        true,\n                        \"Welt-6\",\n                        Timestamp.valueOf(\"2019-08-19 19:20:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:20:00\"),\n                        new BigDecimal(12345678.0006)));\n        puts.add(\n                putRow(\n                        7,\n                        70,\n                        \"Hello-7\",\n                        700L,\n                        7.07,\n                        false,\n                        \"Welt-7\",\n                        Timestamp.valueOf(\"2019-08-19 19:30:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:30:00\"),\n                        new BigDecimal(12345678.0007)));\n        puts.add(\n                putRow(\n                        8,\n                        80,\n                        null,\n                        800L,\n                        8.08,\n                        true,\n                        \"Welt-8\",\n                        Timestamp.valueOf(\"2019-08-19 19:40:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:40:00\"),\n                        new BigDecimal(12345678.0008)));\n\n        \r\n        table.put(puts);\n        table.close();\n    }\n","realPath":"flink-connectors/flink-connector-hbase-1.4/src/test/java/org/apache/flink/connector/hbase1/util/HBaseTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2021-05-18 15:53:19","commitOrder":2,"curCode":"    private static void createHBaseTable1() throws IOException {\n        \r\n        TableName tableName = TableName.valueOf(TEST_TABLE_1);\n        createTable(tableName, FAMILIES, SPLIT_KEYS);\n\n        \r\n        Table table = openTable(tableName);\n        List<Put> puts = new ArrayList<>();\n        \r\n        puts.add(\n                putRow(\n                        1,\n                        10,\n                        \"Hello-1\",\n                        100L,\n                        1.01,\n                        false,\n                        \"Welt-1\",\n                        Timestamp.valueOf(\"2019-08-18 19:00:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:00:00\"),\n                        new BigDecimal(\"12345678.0001\")));\n        puts.add(\n                putRow(\n                        2,\n                        20,\n                        \"Hello-2\",\n                        200L,\n                        2.02,\n                        true,\n                        \"Welt-2\",\n                        Timestamp.valueOf(\"2019-08-18 19:01:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:01:00\"),\n                        new BigDecimal(\"12345678.0002\")));\n        puts.add(\n                putRow(\n                        3,\n                        30,\n                        \"Hello-3\",\n                        300L,\n                        3.03,\n                        false,\n                        \"Welt-3\",\n                        Timestamp.valueOf(\"2019-08-18 19:02:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:02:00\"),\n                        new BigDecimal(\"12345678.0003\")));\n        puts.add(\n                putRow(\n                        4,\n                        40,\n                        null,\n                        400L,\n                        4.04,\n                        true,\n                        \"Welt-4\",\n                        Timestamp.valueOf(\"2019-08-18 19:03:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:03:00\"),\n                        new BigDecimal(\"12345678.0004\")));\n        puts.add(\n                putRow(\n                        5,\n                        50,\n                        \"Hello-5\",\n                        500L,\n                        5.05,\n                        false,\n                        \"Welt-5\",\n                        Timestamp.valueOf(\"2019-08-19 19:10:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:10:00\"),\n                        new BigDecimal(\"12345678.0005\")));\n        puts.add(\n                putRow(\n                        6,\n                        60,\n                        \"Hello-6\",\n                        600L,\n                        6.06,\n                        true,\n                        \"Welt-6\",\n                        Timestamp.valueOf(\"2019-08-19 19:20:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:20:00\"),\n                        new BigDecimal(\"12345678.0006\")));\n        puts.add(\n                putRow(\n                        7,\n                        70,\n                        \"Hello-7\",\n                        700L,\n                        7.07,\n                        false,\n                        \"Welt-7\",\n                        Timestamp.valueOf(\"2019-08-19 19:30:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:30:00\"),\n                        new BigDecimal(\"12345678.0007\")));\n        puts.add(\n                putRow(\n                        8,\n                        80,\n                        null,\n                        800L,\n                        8.08,\n                        true,\n                        \"Welt-8\",\n                        Timestamp.valueOf(\"2019-08-19 19:40:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:40:00\"),\n                        new BigDecimal(\"12345678.0008\")));\n\n        \r\n        table.put(puts);\n        table.close();\n    }\n","date":"2021-05-18 19:59:43","endLine":219,"groupId":"10785","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createHBaseTable1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/09/7042ee2ce685dd559deb7796f633b5f5421535.src","preCode":"    private static void createHBaseTable1() throws IOException {\n        \r\n        TableName tableName = TableName.valueOf(TEST_TABLE_1);\n        createTable(tableName, FAMILIES, SPLIT_KEYS);\n\n        \r\n        Table table = openTable(tableName);\n        List<Put> puts = new ArrayList<>();\n        \r\n        puts.add(\n                putRow(\n                        1,\n                        10,\n                        \"Hello-1\",\n                        100L,\n                        1.01,\n                        false,\n                        \"Welt-1\",\n                        Timestamp.valueOf(\"2019-08-18 19:00:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:00:00\"),\n                        new BigDecimal(12345678.0001)));\n        puts.add(\n                putRow(\n                        2,\n                        20,\n                        \"Hello-2\",\n                        200L,\n                        2.02,\n                        true,\n                        \"Welt-2\",\n                        Timestamp.valueOf(\"2019-08-18 19:01:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:01:00\"),\n                        new BigDecimal(12345678.0002)));\n        puts.add(\n                putRow(\n                        3,\n                        30,\n                        \"Hello-3\",\n                        300L,\n                        3.03,\n                        false,\n                        \"Welt-3\",\n                        Timestamp.valueOf(\"2019-08-18 19:02:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:02:00\"),\n                        new BigDecimal(12345678.0003)));\n        puts.add(\n                putRow(\n                        4,\n                        40,\n                        null,\n                        400L,\n                        4.04,\n                        true,\n                        \"Welt-4\",\n                        Timestamp.valueOf(\"2019-08-18 19:03:00\"),\n                        Date.valueOf(\"2019-08-18\"),\n                        Time.valueOf(\"19:03:00\"),\n                        new BigDecimal(12345678.0004)));\n        puts.add(\n                putRow(\n                        5,\n                        50,\n                        \"Hello-5\",\n                        500L,\n                        5.05,\n                        false,\n                        \"Welt-5\",\n                        Timestamp.valueOf(\"2019-08-19 19:10:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:10:00\"),\n                        new BigDecimal(12345678.0005)));\n        puts.add(\n                putRow(\n                        6,\n                        60,\n                        \"Hello-6\",\n                        600L,\n                        6.06,\n                        true,\n                        \"Welt-6\",\n                        Timestamp.valueOf(\"2019-08-19 19:20:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:20:00\"),\n                        new BigDecimal(12345678.0006)));\n        puts.add(\n                putRow(\n                        7,\n                        70,\n                        \"Hello-7\",\n                        700L,\n                        7.07,\n                        false,\n                        \"Welt-7\",\n                        Timestamp.valueOf(\"2019-08-19 19:30:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:30:00\"),\n                        new BigDecimal(12345678.0007)));\n        puts.add(\n                putRow(\n                        8,\n                        80,\n                        null,\n                        800L,\n                        8.08,\n                        true,\n                        \"Welt-8\",\n                        Timestamp.valueOf(\"2019-08-19 19:40:00\"),\n                        Date.valueOf(\"2019-08-19\"),\n                        Time.valueOf(\"19:40:00\"),\n                        new BigDecimal(12345678.0008)));\n\n        \r\n        table.put(puts);\n        table.close();\n    }\n","realPath":"flink-connectors/flink-connector-hbase-2.2/src/test/java/org/apache/flink/connector/hbase2/util/HBaseTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"927a21c42602c7d6068013236ea81e7a90dc37a6","commitMessage":"@@@[hotfix][hbase] Fix warnings around decimals in HBaseTestBase\n","date":"2021-05-18 19:59:43","modifiedFileCount":"2","status":"M","submitter":"Timo Walther"}]
