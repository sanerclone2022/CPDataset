[{"authorTime":"2016-11-23 19:13:05","codes":[{"authorDate":"2016-11-23 19:13:05","commitOrder":1,"curCode":"\tpublic void testReducingStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tReducingStateDescriptor<String> kvId = new ReducingStateDescriptor<>(\"id\", new AppendingReduce(), String.class);\n\t\tkvId.initializeSerializerUnlessSet(new ExecutionConfig());\n\n\t\tReducingState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.add(\"Ciao\");\n\t\tassertEquals(\"Ciao\", state.get());\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","date":"2016-11-29 00:59:02","endLine":730,"groupId":"15098","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReducingStateDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0a/3a0923077c189a3d1dbfc2d50708ac50b29161.src","preCode":"\tpublic void testReducingStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tReducingStateDescriptor<String> kvId = new ReducingStateDescriptor<>(\"id\", new AppendingReduce(), String.class);\n\t\tkvId.initializeSerializerUnlessSet(new ExecutionConfig());\n\n\t\tReducingState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.add(\"Ciao\");\n\t\tassertEquals(\"Ciao\", state.get());\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/state/StateBackendTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":710,"status":"B"},{"authorDate":"2016-11-23 19:13:05","commitOrder":1,"curCode":"\tpublic void testListStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tListStateDescriptor<String> kvId = new ListStateDescriptor<>(\"id\", String.class);\n\t\tkvId.initializeSerializerUnlessSet(new ExecutionConfig());\n\n\t\tListState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.add(\"Ciao\");\n\t\tstate.add(\"Bello\");\n\t\tassertThat(state.get(), containsInAnyOrder(\"Ciao\", \"Bello\"));\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","date":"2016-11-29 00:59:02","endLine":787,"groupId":"26530","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testListStateDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0a/3a0923077c189a3d1dbfc2d50708ac50b29161.src","preCode":"\tpublic void testListStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tListStateDescriptor<String> kvId = new ListStateDescriptor<>(\"id\", String.class);\n\t\tkvId.initializeSerializerUnlessSet(new ExecutionConfig());\n\n\t\tListState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.add(\"Ciao\");\n\t\tstate.add(\"Bello\");\n\t\tassertThat(state.get(), containsInAnyOrder(\"Ciao\", \"Bello\"));\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/state/StateBackendTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":766,"status":"B"}],"commitId":"60a4ab32e1662310da4633a97e02dca62431952e","commitMessage":"@@@[FLINK-5181] Add Tests in StateBackendTestBase that verify Default-Value Behaviour\n","date":"2016-11-29 00:59:02","modifiedFileCount":"1","status":"B","submitter":"Aljoscha Krettek"},{"authorTime":"2017-03-16 22:17:05","codes":[{"authorDate":"2017-03-16 22:17:05","commitOrder":2,"curCode":"\tpublic void testReducingStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tReducingStateDescriptor<String> kvId = new ReducingStateDescriptor<>(\"id\", new AppendingReduce(), String.class);\n\n\t\tReducingState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.add(\"Ciao\");\n\t\tassertEquals(\"Ciao\", state.get());\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","date":"2017-03-24 12:34:03","endLine":1478,"groupId":"15098","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReducingStateDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/22/bb7153dd3ac65e5444c13debb7978182282c0b.src","preCode":"\tpublic void testReducingStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tReducingStateDescriptor<String> kvId = new ReducingStateDescriptor<>(\"id\", new AppendingReduce(), String.class);\n\t\tkvId.initializeSerializerUnlessSet(new ExecutionConfig());\n\n\t\tReducingState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.add(\"Ciao\");\n\t\tassertEquals(\"Ciao\", state.get());\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/state/StateBackendTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":1459,"status":"M"},{"authorDate":"2017-03-16 22:17:05","commitOrder":2,"curCode":"\tpublic void testListStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tListStateDescriptor<String> kvId = new ListStateDescriptor<>(\"id\", String.class);\n\n\t\tListState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.add(\"Ciao\");\n\t\tstate.add(\"Bello\");\n\t\tassertThat(state.get(), containsInAnyOrder(\"Ciao\", \"Bello\"));\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","date":"2017-03-24 12:34:03","endLine":1532,"groupId":"26530","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testListStateDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/22/bb7153dd3ac65e5444c13debb7978182282c0b.src","preCode":"\tpublic void testListStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tListStateDescriptor<String> kvId = new ListStateDescriptor<>(\"id\", String.class);\n\t\tkvId.initializeSerializerUnlessSet(new ExecutionConfig());\n\n\t\tListState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.add(\"Ciao\");\n\t\tstate.add(\"Bello\");\n\t\tassertThat(state.get(), containsInAnyOrder(\"Ciao\", \"Bello\"));\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/state/StateBackendTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":1512,"status":"M"}],"commitId":"09164cf2388888bc2f92f0ca63bb1f15283e895c","commitMessage":"@@@[FLINK-6018] Add tests for KryoSerializer restore with registered types\n\nThis commit also renames isCompatibleWith() to canRestoreFrom() to make\nthe method asymetric because in the case of KryoSerializer we\ncan restore from state that was stored using no registed\ntypes/serializers while the other way around is not possible.\n\nThis closes #3534.\nThis closes #3603.\n","date":"2017-03-24 12:34:03","modifiedFileCount":"9","status":"M","submitter":"Aljoscha Krettek"},{"authorTime":"2017-10-27 16:21:20","codes":[{"authorDate":"2017-03-16 22:17:05","commitOrder":3,"curCode":"\tpublic void testReducingStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tReducingStateDescriptor<String> kvId = new ReducingStateDescriptor<>(\"id\", new AppendingReduce(), String.class);\n\n\t\tReducingState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.add(\"Ciao\");\n\t\tassertEquals(\"Ciao\", state.get());\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","date":"2017-03-24 12:34:03","endLine":1478,"groupId":"15098","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testReducingStateDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/22/bb7153dd3ac65e5444c13debb7978182282c0b.src","preCode":"\tpublic void testReducingStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tReducingStateDescriptor<String> kvId = new ReducingStateDescriptor<>(\"id\", new AppendingReduce(), String.class);\n\n\t\tReducingState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.add(\"Ciao\");\n\t\tassertEquals(\"Ciao\", state.get());\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/state/StateBackendTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":1459,"status":"N"},{"authorDate":"2017-10-27 16:21:20","commitOrder":3,"curCode":"\tpublic void testListStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tListStateDescriptor<String> kvId = new ListStateDescriptor<>(\"id\", String.class);\n\n\t\tListState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.update(Arrays.asList(\"Ciao\", \"Bello\"));\n\t\tassertThat(state.get(), containsInAnyOrder(\"Ciao\", \"Bello\"));\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","date":"2018-01-10 23:35:28","endLine":2453,"groupId":"24425","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testListStateDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2b/4de54553d9ab53855fa04dde2f71707301f67b.src","preCode":"\tpublic void testListStateDefaultValue() throws Exception {\n\t\tAbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n\t\tListStateDescriptor<String> kvId = new ListStateDescriptor<>(\"id\", String.class);\n\n\t\tListState<String> state = backend.getPartitionedState(\n\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\tVoidNamespaceSerializer.INSTANCE, kvId);\n\n\t\tbackend.setCurrentKey(1);\n\t\tassertNull(state.get());\n\n\t\tstate.add(\"Ciao\");\n\t\tstate.add(\"Bello\");\n\t\tassertThat(state.get(), containsInAnyOrder(\"Ciao\", \"Bello\"));\n\n\t\tstate.clear();\n\t\tassertNull(state.get());\n\n\t\tbackend.dispose();\n\t}\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/state/StateBackendTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":2434,"status":"M"}],"commitId":"438e4e37425688e2689fcb35488f819d729903cc","commitMessage":"@@@[FLINK-7475] [state] Introduce ListState#update()\n\nThis closes #4963.\n","date":"2018-01-10 23:35:28","modifiedFileCount":"10","status":"M","submitter":"Bowen Li"},{"authorTime":"2021-03-11 14:14:07","codes":[{"authorDate":"2021-03-11 14:14:07","commitOrder":4,"curCode":"    public void testReducingStateDefaultValue() throws Exception {\n        CheckpointableKeyedStateBackend<Integer> backend =\n                createKeyedBackend(IntSerializer.INSTANCE);\n\n        ReducingStateDescriptor<String> kvId =\n                new ReducingStateDescriptor<>(\"id\", new AppendingReduce(), String.class);\n\n        ReducingState<String> state =\n                backend.getPartitionedState(\n                        VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, kvId);\n\n        backend.setCurrentKey(1);\n        assertNull(state.get());\n\n        state.add(\"Ciao\");\n        assertEquals(\"Ciao\", state.get());\n\n        state.clear();\n        assertNull(state.get());\n\n        backend.dispose();\n    }\n","date":"2021-03-15 16:07:03","endLine":3508,"groupId":"15098","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testReducingStateDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/43/44e582a588850b1b47ba821f2ef66fa63f52b6.src","preCode":"    public void testReducingStateDefaultValue() throws Exception {\n        AbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n        ReducingStateDescriptor<String> kvId =\n                new ReducingStateDescriptor<>(\"id\", new AppendingReduce(), String.class);\n\n        ReducingState<String> state =\n                backend.getPartitionedState(\n                        VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, kvId);\n\n        backend.setCurrentKey(1);\n        assertNull(state.get());\n\n        state.add(\"Ciao\");\n        assertEquals(\"Ciao\", state.get());\n\n        state.clear();\n        assertNull(state.get());\n\n        backend.dispose();\n    }\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/state/StateBackendTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":3487,"status":"M"},{"authorDate":"2021-03-11 14:14:07","commitOrder":4,"curCode":"    public void testListStateDefaultValue() throws Exception {\n        CheckpointableKeyedStateBackend<Integer> backend =\n                createKeyedBackend(IntSerializer.INSTANCE);\n\n        ListStateDescriptor<String> kvId = new ListStateDescriptor<>(\"id\", String.class);\n\n        ListState<String> state =\n                backend.getPartitionedState(\n                        VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, kvId);\n\n        backend.setCurrentKey(1);\n        assertNull(state.get());\n\n        state.update(Arrays.asList(\"Ciao\", \"Bello\"));\n        assertThat(state.get(), containsInAnyOrder(\"Ciao\", \"Bello\"));\n\n        state.clear();\n        assertNull(state.get());\n\n        backend.dispose();\n    }\n","date":"2021-03-15 16:07:03","endLine":3532,"groupId":"24425","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testListStateDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/43/44e582a588850b1b47ba821f2ef66fa63f52b6.src","preCode":"    public void testListStateDefaultValue() throws Exception {\n        AbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE);\n\n        ListStateDescriptor<String> kvId = new ListStateDescriptor<>(\"id\", String.class);\n\n        ListState<String> state =\n                backend.getPartitionedState(\n                        VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, kvId);\n\n        backend.setCurrentKey(1);\n        assertNull(state.get());\n\n        state.update(Arrays.asList(\"Ciao\", \"Bello\"));\n        assertThat(state.get(), containsInAnyOrder(\"Ciao\", \"Bello\"));\n\n        state.clear();\n        assertNull(state.get());\n\n        backend.dispose();\n    }\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/state/StateBackendTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":3512,"status":"M"}],"commitId":"d72fa2ea588fc0f52ebd33d583187eb27972a483","commitMessage":"@@@[FLINK-21354] Introduce ChangelogStateBackend to delegate state access\n\nThis change is to wrap the existing prod state backend (Rocksdb.  Fs.  Mem) to delegate\nstate access for these state backends. In the future.  we can forward state changes to\nStateChangeLog when states are updated. In this PR.  we only support keyed-state access.\n\nThe changes include:\n1. Introduce `DelegatingStateBackend` interface for state backend delegation\n   (in the flink-runtime module)\n2. Introduce `ChangelogStateBackend` and related delegating states for\n   state delegation (in flink-state-backends module)\n3. Implement `ChangelogStateBackend`'s Loader in `StateBackendLoader`.\n   (in the flink-runtime module)\n","date":"2021-03-15 16:07:03","modifiedFileCount":"12","status":"M","submitter":"Yuan Mei"},{"authorTime":"2021-03-26 12:16:51","codes":[{"authorDate":"2021-03-26 12:16:51","commitOrder":5,"curCode":"    public void testReducingStateDefaultValue() throws Exception {\n        ReducingStateDescriptor<String> kvId =\n                new ReducingStateDescriptor<>(\"id\", new AppendingReduce(), String.class);\n\n        CheckpointableKeyedStateBackend<Integer> backend =\n                createKeyedBackend(IntSerializer.INSTANCE);\n        try {\n            ReducingState<String> state =\n                    backend.getPartitionedState(\n                            VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, kvId);\n\n            backend.setCurrentKey(1);\n            assertNull(state.get());\n\n            state.add(\"Ciao\");\n            assertEquals(\"Ciao\", state.get());\n\n            state.clear();\n            assertNull(state.get());\n        } finally {\n            IOUtils.closeQuietly(backend);\n            backend.dispose();\n        }\n    }\n","date":"2021-03-26 17:39:33","endLine":3614,"groupId":"103366","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testReducingStateDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/87/0383a381a0b12ce0e4863477d9a99d55c99806.src","preCode":"    public void testReducingStateDefaultValue() throws Exception {\n        CheckpointableKeyedStateBackend<Integer> backend =\n                createKeyedBackend(IntSerializer.INSTANCE);\n\n        ReducingStateDescriptor<String> kvId =\n                new ReducingStateDescriptor<>(\"id\", new AppendingReduce(), String.class);\n\n        ReducingState<String> state =\n                backend.getPartitionedState(\n                        VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, kvId);\n\n        backend.setCurrentKey(1);\n        assertNull(state.get());\n\n        state.add(\"Ciao\");\n        assertEquals(\"Ciao\", state.get());\n\n        state.clear();\n        assertNull(state.get());\n\n        backend.dispose();\n    }\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/state/StateBackendTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":3591,"status":"M"},{"authorDate":"2021-03-26 12:16:51","commitOrder":5,"curCode":"    public void testListStateDefaultValue() throws Exception {\n        ListStateDescriptor<String> kvId = new ListStateDescriptor<>(\"id\", String.class);\n\n        CheckpointableKeyedStateBackend<Integer> backend =\n                createKeyedBackend(IntSerializer.INSTANCE);\n        try {\n            ListState<String> state =\n                    backend.getPartitionedState(\n                            VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, kvId);\n\n            backend.setCurrentKey(1);\n            assertNull(state.get());\n\n            state.update(Arrays.asList(\"Ciao\", \"Bello\"));\n            assertThat(state.get(), containsInAnyOrder(\"Ciao\", \"Bello\"));\n\n            state.clear();\n            assertNull(state.get());\n        } finally {\n            IOUtils.closeQuietly(backend);\n            backend.dispose();\n        }\n    }\n","date":"2021-03-26 17:39:33","endLine":3640,"groupId":"103366","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testListStateDefaultValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/87/0383a381a0b12ce0e4863477d9a99d55c99806.src","preCode":"    public void testListStateDefaultValue() throws Exception {\n        CheckpointableKeyedStateBackend<Integer> backend =\n                createKeyedBackend(IntSerializer.INSTANCE);\n\n        ListStateDescriptor<String> kvId = new ListStateDescriptor<>(\"id\", String.class);\n\n        ListState<String> state =\n                backend.getPartitionedState(\n                        VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, kvId);\n\n        backend.setCurrentKey(1);\n        assertNull(state.get());\n\n        state.update(Arrays.asList(\"Ciao\", \"Bello\"));\n        assertThat(state.get(), containsInAnyOrder(\"Ciao\", \"Bello\"));\n\n        state.clear();\n        assertNull(state.get());\n\n        backend.dispose();\n    }\n","realPath":"flink-runtime/src/test/java/org/apache/flink/runtime/state/StateBackendTestBase.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":3618,"status":"M"}],"commitId":"97f257e46824772728a1a595edb57e5633903a55","commitMessage":"@@@[FLINK-21929][statebackend][tests] Refactor StateBackendTestBase to ensure created keyed state backend could be disposed finally\n","date":"2021-03-26 17:39:33","modifiedFileCount":"1","status":"M","submitter":"Yun Tang"}]
