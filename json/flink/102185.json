[{"authorTime":"2020-09-01 16:33:27","codes":[{"authorDate":"2020-08-12 11:11:58","commitOrder":2,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tMaxwellJsonDeserializationSchema that = (MaxwellJsonDeserializationSchema) o;\n\t\treturn ignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tfieldCount == that.fieldCount &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","date":"2020-08-12 11:11:58","endLine":164,"groupId":"35190","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c3/4ab559762eefc0163dfbc761c4abb5299f2fcb.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tMaxwellJsonDeserializationSchema that = (MaxwellJsonDeserializationSchema) o;\n\t\treturn ignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tfieldCount == that.fieldCount &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/maxwell/MaxwellJsonDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"NB"},{"authorDate":"2020-09-01 16:33:27","commitOrder":2,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumAvroDeserializationSchema that = (DebeziumAvroDeserializationSchema) o;\n\t\treturn Objects.equals(avroDeserializer, that.avroDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","date":"2020-11-08 17:57:22","endLine":185,"groupId":"38966","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/5c/21a62a5bb25aaaef8584c2ec800ba4b9c1bf66.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumAvroDeserializationSchema that = (DebeziumAvroDeserializationSchema) o;\n\t\treturn Objects.equals(avroDeserializer, that.avroDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","realPath":"flink-formats/flink-avro-confluent-registry/src/main/java/org/apache/flink/formats/avro/registry/confluent/debezium/DebeziumAvroDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"B"}],"commitId":"edec6aa895568c6dfa47e73d10071cda3b57015a","commitMessage":"@@@[FLINK-18774][debezium-avro] Support debezium avro format\n\nThis closes #13296\n","date":"2020-11-08 17:57:22","modifiedFileCount":"1","status":"M","submitter":"caozhen1937"},{"authorTime":"2020-11-07 14:28:54","codes":[{"authorDate":"2020-08-12 11:11:58","commitOrder":3,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tMaxwellJsonDeserializationSchema that = (MaxwellJsonDeserializationSchema) o;\n\t\treturn ignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tfieldCount == that.fieldCount &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","date":"2020-08-12 11:11:58","endLine":164,"groupId":"35190","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c3/4ab559762eefc0163dfbc761c4abb5299f2fcb.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tMaxwellJsonDeserializationSchema that = (MaxwellJsonDeserializationSchema) o;\n\t\treturn ignoreParseErrors == that.ignoreParseErrors &&\n\t\t\tfieldCount == that.fieldCount &&\n\t\t\tObjects.equals(jsonDeserializer, that.jsonDeserializer) &&\n\t\t\tObjects.equals(resultTypeInfo, that.resultTypeInfo);\n\t}\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/maxwell/MaxwellJsonDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"NB"},{"authorDate":"2020-11-07 14:28:54","commitOrder":3,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumAvroDeserializationSchema that = (DebeziumAvroDeserializationSchema) o;\n\t\treturn Objects.equals(avroDeserializer, that.avroDeserializer) &&\n\t\t\tObjects.equals(producedTypeInfo, that.producedTypeInfo);\n\t}\n","date":"2020-11-08 17:57:22","endLine":184,"groupId":"38966","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a4/93b7983b975e28b768b54c93976137a94c79ea.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumAvroDeserializationSchema that = (DebeziumAvroDeserializationSchema) o;\n\t\treturn Objects.equals(avroDeserializer, that.avroDeserializer) &&\n\t\t\tObjects.equals(producedTypeInfo, that.producedTypeInfo);\n\t}\n","realPath":"flink-formats/flink-avro-confluent-registry/src/main/java/org/apache/flink/formats/avro/registry/confluent/debezium/DebeziumAvroDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"MB"}],"commitId":"bff7da11cb0148ab6e63acac7844deb922458999","commitMessage":"@@@[FLINK-18774][debezium-avro] Improve debezium-avro format implementation\n","date":"2020-11-08 17:57:22","modifiedFileCount":"13","status":"M","submitter":"Jark Wu"},{"authorTime":"2020-11-07 14:28:54","codes":[{"authorDate":"2021-06-01 16:32:22","commitOrder":4,"curCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        MaxwellJsonDeserializationSchema that = (MaxwellJsonDeserializationSchema) o;\n        return Objects.equals(jsonDeserializer, that.jsonDeserializer)\n                && hasMetadata == that.hasMetadata\n                && Objects.equals(producedTypeInfo, that.producedTypeInfo)\n                && ignoreParseErrors == that.ignoreParseErrors\n                && fieldCount == that.fieldCount;\n    }\n","date":"2021-06-10 12:37:00","endLine":217,"groupId":"102185","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/86/3620fd90885eac908ba566244da6f76dbe2b88.src","preCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        MaxwellJsonDeserializationSchema that = (MaxwellJsonDeserializationSchema) o;\n        return ignoreParseErrors == that.ignoreParseErrors\n                && fieldCount == that.fieldCount\n                && Objects.equals(jsonDeserializer, that.jsonDeserializer)\n                && Objects.equals(resultTypeInfo, that.resultTypeInfo);\n    }\n","realPath":"flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/maxwell/MaxwellJsonDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"},{"authorDate":"2020-11-07 14:28:54","commitOrder":4,"curCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumAvroDeserializationSchema that = (DebeziumAvroDeserializationSchema) o;\n\t\treturn Objects.equals(avroDeserializer, that.avroDeserializer) &&\n\t\t\tObjects.equals(producedTypeInfo, that.producedTypeInfo);\n\t}\n","date":"2020-11-08 17:57:22","endLine":184,"groupId":"102185","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a4/93b7983b975e28b768b54c93976137a94c79ea.src","preCode":"\tpublic boolean equals(Object o) {\n\t\tif (this == o) {\n\t\t\treturn true;\n\t\t}\n\t\tif (o == null || getClass() != o.getClass()) {\n\t\t\treturn false;\n\t\t}\n\t\tDebeziumAvroDeserializationSchema that = (DebeziumAvroDeserializationSchema) o;\n\t\treturn Objects.equals(avroDeserializer, that.avroDeserializer) &&\n\t\t\tObjects.equals(producedTypeInfo, that.producedTypeInfo);\n\t}\n","realPath":"flink-formats/flink-avro-confluent-registry/src/main/java/org/apache/flink/formats/avro/registry/confluent/debezium/DebeziumAvroDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"N"}],"commitId":"410b8c4d6fb1e4af1d00b54e96a44cb540a66f99","commitMessage":"@@@[FLINK-20926][maxwell][json] Allow to read metadata for maxwell-json format\n\nThis closes #16040\n","date":"2021-06-10 12:37:00","modifiedFileCount":"5","status":"M","submitter":"SteNicholas"}]
