[{"authorTime":"2020-05-13 20:55:49","codes":[{"authorDate":"2020-05-15 21:49:36","commitOrder":2,"curCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\tdbConn = new SimpleJdbcConnectionProvider(connectionOptions).getConnection();\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","date":"2020-05-18 12:30:38","endLine":123,"groupId":"24004","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"openInputFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/06/820d1007aa7e3ed665b5911abd6ab748d7efc8.src","preCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\tdbConn = new SimpleJdbcConnectionProvider(connectionOptions).getConnection();\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/table/JdbcRowDataInputFormat.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"},{"authorDate":"2020-05-13 20:55:49","commitOrder":2,"curCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\tClass.forName(drivername);\n\t\t\tif (username == null) {\n\t\t\t\tdbConn = DriverManager.getConnection(dbURL);\n\t\t\t} else {\n\t\t\t\tdbConn = DriverManager.getConnection(dbURL, username, password);\n\t\t\t}\n\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","date":"2020-05-13 20:55:49","endLine":168,"groupId":"24004","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"openInputFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/7a/6895ee0147e659b590e088e4ba73a7ba2e4442.src","preCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\tClass.forName(drivername);\n\t\t\tif (username == null) {\n\t\t\t\tdbConn = DriverManager.getConnection(dbURL);\n\t\t\t} else {\n\t\t\t\tdbConn = DriverManager.getConnection(dbURL, username, password);\n\t\t\t}\n\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/JdbcInputFormat.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"NB"}],"commitId":"ce843a2e601cbc2ddba8d3feacaa930aea810877","commitMessage":"@@@[FLINK-17029][jdbc] Introduce a new JDBC connector with new property keys\n\nThis closes #12176\n","date":"2020-05-18 12:30:38","modifiedFileCount":"29","status":"M","submitter":"Leonard Xu"},{"authorTime":"2020-12-10 21:05:33","codes":[{"authorDate":"2020-05-15 21:49:36","commitOrder":3,"curCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\tdbConn = new SimpleJdbcConnectionProvider(connectionOptions).getConnection();\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","date":"2020-05-18 12:30:38","endLine":123,"groupId":"24004","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"openInputFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/06/820d1007aa7e3ed665b5911abd6ab748d7efc8.src","preCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\tdbConn = new SimpleJdbcConnectionProvider(connectionOptions).getConnection();\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/table/JdbcRowDataInputFormat.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"N"},{"authorDate":"2020-12-10 21:05:33","commitOrder":3,"curCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tDriverManager.getDrivers();\n\t\t\tClass.forName(drivername);\n\t\t\tif (username == null) {\n\t\t\t\tdbConn = DriverManager.getConnection(dbURL);\n\t\t\t} else {\n\t\t\t\tdbConn = DriverManager.getConnection(dbURL, username, password);\n\t\t\t}\n\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","date":"2020-12-21 10:42:26","endLine":172,"groupId":"24004","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"openInputFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/09/82a84f6b6f6ab8ba76cd422018bda2e628eee1.src","preCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\tClass.forName(drivername);\n\t\t\tif (username == null) {\n\t\t\t\tdbConn = DriverManager.getConnection(dbURL);\n\t\t\t} else {\n\t\t\t\tdbConn = DriverManager.getConnection(dbURL, username, password);\n\t\t\t}\n\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/JdbcInputFormat.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"}],"commitId":"84ed65356fe61e6ba74a7e4c4aef0dbd3c63f44a","commitMessage":"@@@[FLINK-19435][connectors/jdbc] Fix deadlock when loading different sql driver classes concurrently using Class.forName\n\nThis closes #14361\n","date":"2020-12-21 10:42:26","modifiedFileCount":"4","status":"M","submitter":"Kezhu Wang"},{"authorTime":"2020-12-27 13:52:54","codes":[{"authorDate":"2020-12-27 13:52:54","commitOrder":4,"curCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\tConnection dbConn = connectionProvider.getOrEstablishConnection();\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","date":"2020-12-27 13:52:54","endLine":123,"groupId":"10509","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"openInputFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b4/7f75ea27285681e5b1f58338c8248f9223f133.src","preCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\tdbConn = new SimpleJdbcConnectionProvider(connectionOptions).getConnection();\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/table/JdbcRowDataInputFormat.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2020-12-27 13:52:54","commitOrder":4,"curCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\tConnection dbConn = connectionProvider.getOrEstablishConnection();\n\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","date":"2020-12-27 13:52:54","endLine":159,"groupId":"10509","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"openInputFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/50/01bbec031063760b125694d21ee222b44b4b22.src","preCode":"\tpublic void openInputFormat() {\n\t\t\r\n\t\ttry {\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tDriverManager.getDrivers();\n\t\t\tClass.forName(drivername);\n\t\t\tif (username == null) {\n\t\t\t\tdbConn = DriverManager.getConnection(dbURL);\n\t\t\t} else {\n\t\t\t\tdbConn = DriverManager.getConnection(dbURL, username, password);\n\t\t\t}\n\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (autoCommit != null) {\n\t\t\t\tdbConn.setAutoCommit(autoCommit);\n\t\t\t}\n\n\t\t\tstatement = dbConn.prepareStatement(queryTemplate, resultSetType, resultSetConcurrency);\n\t\t\tif (fetchSize == Integer.MIN_VALUE || fetchSize > 0) {\n\t\t\t\tstatement.setFetchSize(fetchSize);\n\t\t\t}\n\t\t} catch (SQLException se) {\n\t\t\tthrow new IllegalArgumentException(\"open() failed.\" + se.getMessage(), se);\n\t\t} catch (ClassNotFoundException cnfe) {\n\t\t\tthrow new IllegalArgumentException(\"JDBC-Class not found. - \" + cnfe.getMessage(), cnfe);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/JdbcInputFormat.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"0c36b666094c01a96d341d2b0ee0b6863a6484e8","commitMessage":"@@@[FLINK-20657][connectors/jdbc] Migrate jdbc InputFormat/LookupFunction to SimpleJdbcConnectionProvider for connection establishment\n\nThis closes #14466","date":"2020-12-27 13:52:54","modifiedFileCount":"12","status":"M","submitter":"Kezhu Wang"}]
