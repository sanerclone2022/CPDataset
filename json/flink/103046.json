[{"authorTime":"2018-12-18 16:35:40","codes":[{"authorDate":"2017-12-06 21:39:15","commitOrder":8,"curCode":"\tpublic void testRuntimeContext() throws Exception {\n\t\tRichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1707630162838967972L;\n\n\t\t\t@Override\n\t\t\tpublic void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {\n\t\t\t\t\r\n\t\t\t}\n\t\t};\n\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\n\t\tfunction.setRuntimeContext(mockedRuntimeContext);\n\n\t\tRuntimeContext runtimeContext = function.getRuntimeContext();\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\n\t\ttry {\n\t\t\truntimeContext.getDistributedCache();\n\t\t\tfail(\"Expected getDistributedCached to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\"foobar\", new ReduceFunction<Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = 2136425961884441050L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer reduce(Integer value1, Integer value2) throws Exception {\n\t\t\t\t\treturn value1;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\"foobar\", new AggregateFunction<Integer, Integer, Integer>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer createAccumulator() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer add(Integer value, Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getResult(Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer merge(Integer a, Integer b) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getFoldingState(new FoldingStateDescriptor<>(\"foobar\", 0, new FoldFunction<Integer, Integer>() {\n\t\t\t\t@Override\n\t\t\t\tpublic Integer fold(Integer accumulator, Integer value) throws Exception {\n\t\t\t\t\treturn accumulator;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", new Accumulator<Integer, Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = -4673320336846482358L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic void add(Integer value) {\n\t\t\t\t\t\r\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getLocalValue() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void resetLocal() {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void merge(Accumulator<Integer, Integer> other) {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Accumulator<Integer, Integer> clone() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAllAccumulators();\n\t\t\tfail(\"Expected getAllAccumulators to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\"foobar\", new BroadcastVariableInitializer<Object, Object>() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object initializeBroadcastVariable(Iterable<Object> data) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","date":"2017-12-13 02:09:16","endLine":317,"groupId":"11303","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRuntimeContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/26/18e5329cc30906e2eac7d2c2197e8166f3213a.src","preCode":"\tpublic void testRuntimeContext() throws Exception {\n\t\tRichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1707630162838967972L;\n\n\t\t\t@Override\n\t\t\tpublic void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {\n\t\t\t\t\r\n\t\t\t}\n\t\t};\n\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\n\t\tfunction.setRuntimeContext(mockedRuntimeContext);\n\n\t\tRuntimeContext runtimeContext = function.getRuntimeContext();\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\n\t\ttry {\n\t\t\truntimeContext.getDistributedCache();\n\t\t\tfail(\"Expected getDistributedCached to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\"foobar\", new ReduceFunction<Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = 2136425961884441050L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer reduce(Integer value1, Integer value2) throws Exception {\n\t\t\t\t\treturn value1;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\"foobar\", new AggregateFunction<Integer, Integer, Integer>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer createAccumulator() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer add(Integer value, Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getResult(Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer merge(Integer a, Integer b) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getFoldingState(new FoldingStateDescriptor<>(\"foobar\", 0, new FoldFunction<Integer, Integer>() {\n\t\t\t\t@Override\n\t\t\t\tpublic Integer fold(Integer accumulator, Integer value) throws Exception {\n\t\t\t\t\treturn accumulator;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", new Accumulator<Integer, Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = -4673320336846482358L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic void add(Integer value) {\n\t\t\t\t\t\r\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getLocalValue() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void resetLocal() {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void merge(Accumulator<Integer, Integer> other) {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Accumulator<Integer, Integer> clone() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAllAccumulators();\n\t\t\tfail(\"Expected getAllAccumulators to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\"foobar\", new BroadcastVariableInitializer<Object, Object>() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object initializeBroadcastVariable(Iterable<Object> data) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/async/RichAsyncFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"NB"},{"authorDate":"2018-12-18 16:35:40","commitOrder":8,"curCode":"\tpublic void testCepRuntimeContext() {\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\t\tfinal DistributedCache distributedCache = mock(DistributedCache.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\t\twhen(mockedRuntimeContext.getDistributedCache()).thenReturn(distributedCache);\n\n\t\tRuntimeContext runtimeContext = new CepRuntimeContext(mockedRuntimeContext);\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\t\tassertEquals(distributedCache, runtimeContext.getDistributedCache());\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(ReduceFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(AggregateFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getAggregatingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getFoldingState(new FoldingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\t0,\n\t\t\t\tmock(FoldFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getFoldingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t\tfail(\"Expected getMapState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", mock(Accumulator.class));\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAllAccumulators();\n\t\t\tfail(\"Expected getAllAccumulators to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(BroadcastVariableInitializer.class));\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","date":"2018-12-30 22:16:17","endLine":270,"groupId":"32126","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCepRuntimeContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b7/7dd947cf16883f725f4493a42836bcd8944e6e.src","preCode":"\tpublic void testCepRuntimeContext() {\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\t\tfinal DistributedCache distributedCache = mock(DistributedCache.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\t\twhen(mockedRuntimeContext.getDistributedCache()).thenReturn(distributedCache);\n\n\t\tRuntimeContext runtimeContext = new CepRuntimeContext(mockedRuntimeContext);\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\t\tassertEquals(distributedCache, runtimeContext.getDistributedCache());\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(ReduceFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(AggregateFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getAggregatingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getFoldingState(new FoldingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\t0,\n\t\t\t\tmock(FoldFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getFoldingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t\tfail(\"Expected getMapState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", mock(Accumulator.class));\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAllAccumulators();\n\t\t\tfail(\"Expected getAllAccumulators to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(BroadcastVariableInitializer.class));\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","realPath":"flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CepRuntimeContextTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"B"}],"commitId":"bec4a2885102687fd947a31870e5e1a1efb37ba8","commitMessage":"@@@[hotfix][cep] Fixed passing runtime context\n","date":"2018-12-30 22:16:17","modifiedFileCount":"6","status":"M","submitter":"Dawid Wysakowicz"},{"authorTime":"2020-05-16 19:18:38","codes":[{"authorDate":"2020-05-16 19:18:38","commitOrder":9,"curCode":"\tpublic void testRuntimeContext() throws Exception {\n\t\tRichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1707630162838967972L;\n\n\t\t\t@Override\n\t\t\tpublic void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {\n\t\t\t\t\r\n\t\t\t}\n\t\t};\n\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\n\t\tfunction.setRuntimeContext(mockedRuntimeContext);\n\n\t\tRuntimeContext runtimeContext = function.getRuntimeContext();\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\n\t\ttry {\n\t\t\truntimeContext.getDistributedCache();\n\t\t\tfail(\"Expected getDistributedCached to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\"foobar\", new ReduceFunction<Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = 2136425961884441050L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer reduce(Integer value1, Integer value2) throws Exception {\n\t\t\t\t\treturn value1;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\"foobar\", new AggregateFunction<Integer, Integer, Integer>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer createAccumulator() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer add(Integer value, Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getResult(Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer merge(Integer a, Integer b) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", new Accumulator<Integer, Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = -4673320336846482358L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic void add(Integer value) {\n\t\t\t\t\t\r\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getLocalValue() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void resetLocal() {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void merge(Accumulator<Integer, Integer> other) {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Accumulator<Integer, Integer> clone() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAllAccumulators();\n\t\t\tfail(\"Expected getAllAccumulators to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\"foobar\", new BroadcastVariableInitializer<Object, Object>() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object initializeBroadcastVariable(Iterable<Object> data) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","date":"2020-06-03 20:47:21","endLine":304,"groupId":"11303","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRuntimeContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/45/c535dea0677919627abd9f30f48d54c5e766cc.src","preCode":"\tpublic void testRuntimeContext() throws Exception {\n\t\tRichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1707630162838967972L;\n\n\t\t\t@Override\n\t\t\tpublic void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {\n\t\t\t\t\r\n\t\t\t}\n\t\t};\n\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\n\t\tfunction.setRuntimeContext(mockedRuntimeContext);\n\n\t\tRuntimeContext runtimeContext = function.getRuntimeContext();\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\n\t\ttry {\n\t\t\truntimeContext.getDistributedCache();\n\t\t\tfail(\"Expected getDistributedCached to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\"foobar\", new ReduceFunction<Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = 2136425961884441050L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer reduce(Integer value1, Integer value2) throws Exception {\n\t\t\t\t\treturn value1;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\"foobar\", new AggregateFunction<Integer, Integer, Integer>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer createAccumulator() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer add(Integer value, Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getResult(Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer merge(Integer a, Integer b) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getFoldingState(new FoldingStateDescriptor<>(\"foobar\", 0, new FoldFunction<Integer, Integer>() {\n\t\t\t\t@Override\n\t\t\t\tpublic Integer fold(Integer accumulator, Integer value) throws Exception {\n\t\t\t\t\treturn accumulator;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", new Accumulator<Integer, Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = -4673320336846482358L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic void add(Integer value) {\n\t\t\t\t\t\r\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getLocalValue() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void resetLocal() {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void merge(Accumulator<Integer, Integer> other) {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Accumulator<Integer, Integer> clone() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAllAccumulators();\n\t\t\tfail(\"Expected getAllAccumulators to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\"foobar\", new BroadcastVariableInitializer<Object, Object>() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object initializeBroadcastVariable(Iterable<Object> data) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/async/RichAsyncFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2020-05-16 19:18:38","commitOrder":9,"curCode":"\tpublic void testCepRuntimeContext() {\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\t\tfinal DistributedCache distributedCache = mock(DistributedCache.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\t\twhen(mockedRuntimeContext.getDistributedCache()).thenReturn(distributedCache);\n\n\t\tRuntimeContext runtimeContext = new CepRuntimeContext(mockedRuntimeContext);\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\t\tassertEquals(distributedCache, runtimeContext.getDistributedCache());\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(ReduceFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(AggregateFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getAggregatingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t\tfail(\"Expected getMapState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", mock(Accumulator.class));\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAllAccumulators();\n\t\t\tfail(\"Expected getAllAccumulators to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(BroadcastVariableInitializer.class));\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","date":"2020-06-03 20:47:21","endLine":257,"groupId":"32126","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCepRuntimeContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c4/5f8a06d3c2d58cf505c366246a6fc83b9d76dc.src","preCode":"\tpublic void testCepRuntimeContext() {\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\t\tfinal DistributedCache distributedCache = mock(DistributedCache.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\t\twhen(mockedRuntimeContext.getDistributedCache()).thenReturn(distributedCache);\n\n\t\tRuntimeContext runtimeContext = new CepRuntimeContext(mockedRuntimeContext);\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\t\tassertEquals(distributedCache, runtimeContext.getDistributedCache());\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(ReduceFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(AggregateFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getAggregatingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getFoldingState(new FoldingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\t0,\n\t\t\t\tmock(FoldFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getFoldingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t\tfail(\"Expected getMapState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", mock(Accumulator.class));\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAllAccumulators();\n\t\t\tfail(\"Expected getAllAccumulators to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(BroadcastVariableInitializer.class));\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","realPath":"flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CepRuntimeContextTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"276332e11277e7e50789e4eaed0f11ae59a0f8d1","commitMessage":"@@@[FLINK-17376] Remove deprecated state access methods\n","date":"2020-06-03 20:47:21","modifiedFileCount":"15","status":"M","submitter":"Ghildiyal"},{"authorTime":"2020-08-17 14:27:12","codes":[{"authorDate":"2020-08-17 14:27:12","commitOrder":10,"curCode":"\tpublic void testRuntimeContext() throws Exception {\n\t\tRichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1707630162838967972L;\n\n\t\t\t@Override\n\t\t\tpublic void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {\n\t\t\t\t\r\n\t\t\t}\n\t\t};\n\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\n\t\tfunction.setRuntimeContext(mockedRuntimeContext);\n\n\t\tRuntimeContext runtimeContext = function.getRuntimeContext();\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\n\t\ttry {\n\t\t\truntimeContext.getDistributedCache();\n\t\t\tfail(\"Expected getDistributedCached to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\"foobar\", new ReduceFunction<Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = 2136425961884441050L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer reduce(Integer value1, Integer value2) throws Exception {\n\t\t\t\t\treturn value1;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\"foobar\", new AggregateFunction<Integer, Integer, Integer>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer createAccumulator() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer add(Integer value, Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getResult(Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer merge(Integer a, Integer b) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", new Accumulator<Integer, Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = -4673320336846482358L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic void add(Integer value) {\n\t\t\t\t\t\r\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getLocalValue() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void resetLocal() {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void merge(Accumulator<Integer, Integer> other) {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Accumulator<Integer, Integer> clone() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\"foobar\", new BroadcastVariableInitializer<Object, Object>() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object initializeBroadcastVariable(Iterable<Object> data) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","date":"2020-08-26 18:29:24","endLine":297,"groupId":"11303","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRuntimeContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/29/4ddd1a7f7af1560f10b0734351411bfa73e85e.src","preCode":"\tpublic void testRuntimeContext() throws Exception {\n\t\tRichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {\n\t\t\tprivate static final long serialVersionUID = 1707630162838967972L;\n\n\t\t\t@Override\n\t\t\tpublic void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {\n\t\t\t\t\r\n\t\t\t}\n\t\t};\n\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\n\t\tfunction.setRuntimeContext(mockedRuntimeContext);\n\n\t\tRuntimeContext runtimeContext = function.getRuntimeContext();\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\n\t\ttry {\n\t\t\truntimeContext.getDistributedCache();\n\t\t\tfail(\"Expected getDistributedCached to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\"foobar\", new ReduceFunction<Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = 2136425961884441050L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer reduce(Integer value1, Integer value2) throws Exception {\n\t\t\t\t\treturn value1;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\"foobar\", new AggregateFunction<Integer, Integer, Integer>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer createAccumulator() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer add(Integer value, Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getResult(Integer accumulator) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer merge(Integer a, Integer b) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}, Integer.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", new Accumulator<Integer, Integer>() {\n\t\t\t\tprivate static final long serialVersionUID = -4673320336846482358L;\n\n\t\t\t\t@Override\n\t\t\t\tpublic void add(Integer value) {\n\t\t\t\t\t\r\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Integer getLocalValue() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void resetLocal() {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void merge(Accumulator<Integer, Integer> other) {\n\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic Accumulator<Integer, Integer> clone() {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAllAccumulators();\n\t\t\tfail(\"Expected getAllAccumulators to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\"foobar\", new BroadcastVariableInitializer<Object, Object>() {\n\t\t\t\t@Override\n\t\t\t\tpublic Object initializeBroadcastVariable(Iterable<Object> data) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/async/RichAsyncFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2020-08-17 14:27:12","commitOrder":10,"curCode":"\tpublic void testCepRuntimeContext() {\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\t\tfinal DistributedCache distributedCache = mock(DistributedCache.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\t\twhen(mockedRuntimeContext.getDistributedCache()).thenReturn(distributedCache);\n\n\t\tRuntimeContext runtimeContext = new CepRuntimeContext(mockedRuntimeContext);\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\t\tassertEquals(distributedCache, runtimeContext.getDistributedCache());\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(ReduceFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(AggregateFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getAggregatingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t\tfail(\"Expected getMapState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", mock(Accumulator.class));\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(BroadcastVariableInitializer.class));\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","date":"2020-08-26 18:29:24","endLine":250,"groupId":"32126","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCepRuntimeContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ec/0d224e465b8443a19782f4c73b8df3498e41ba.src","preCode":"\tpublic void testCepRuntimeContext() {\n\t\tfinal String taskName = \"foobarTask\";\n\t\tfinal MetricGroup metricGroup = new UnregisteredMetricsGroup();\n\t\tfinal int numberOfParallelSubtasks = 42;\n\t\tfinal int indexOfSubtask = 43;\n\t\tfinal int attemptNumber = 1337;\n\t\tfinal String taskNameWithSubtask = \"barfoo\";\n\t\tfinal ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n\t\tfinal ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\t\tfinal DistributedCache distributedCache = mock(DistributedCache.class);\n\n\t\tRuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n\t\twhen(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n\t\twhen(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n\t\twhen(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks);\n\t\twhen(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n\t\twhen(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n\t\twhen(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n\t\twhen(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n\t\twhen(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\t\twhen(mockedRuntimeContext.getDistributedCache()).thenReturn(distributedCache);\n\n\t\tRuntimeContext runtimeContext = new CepRuntimeContext(mockedRuntimeContext);\n\n\t\tassertEquals(taskName, runtimeContext.getTaskName());\n\t\tassertEquals(metricGroup, runtimeContext.getMetricGroup());\n\t\tassertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n\t\tassertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n\t\tassertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n\t\tassertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n\t\tassertEquals(executionConfig, runtimeContext.getExecutionConfig());\n\t\tassertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\t\tassertEquals(distributedCache, runtimeContext.getDistributedCache());\n\n\t\ttry {\n\t\t\truntimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n\t\t\tfail(\"Expected getState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n\t\t\tfail(\"Expected getListState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getReducingState(new ReducingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(ReduceFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getReducingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAggregatingState(new AggregatingStateDescriptor<>(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(AggregateFunction.class),\n\t\t\t\tInteger.class));\n\t\t\tfail(\"Expected getAggregatingState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getMapState(new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n\t\t\tfail(\"Expected getMapState to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.addAccumulator(\"foobar\", mock(Accumulator.class));\n\t\t\tfail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAccumulator(\"foobar\");\n\t\t\tfail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getAllAccumulators();\n\t\t\tfail(\"Expected getAllAccumulators to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getIntCounter(\"foobar\");\n\t\t\tfail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getLongCounter(\"foobar\");\n\t\t\tfail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getDoubleCounter(\"foobar\");\n\t\t\tfail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getHistogram(\"foobar\");\n\t\t\tfail(\"Expected getHistogram to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.hasBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariable(\"foobar\");\n\t\t\tfail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\n\t\ttry {\n\t\t\truntimeContext.getBroadcastVariableWithInitializer(\n\t\t\t\t\"foobar\",\n\t\t\t\tmock(BroadcastVariableInitializer.class));\n\t\t\tfail(\"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n\t\t} catch (UnsupportedOperationException e) {\n\t\t\t\r\n\t\t}\n\t}\n","realPath":"flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CepRuntimeContextTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"53617135f07d77c6f3e7c01a6c4f51bb4c8761b5","commitMessage":"@@@[FLINK-19032] Remove deprecated RuntimeContext#getAllAcumullators\n","date":"2020-08-26 18:29:24","modifiedFileCount":"7","status":"M","submitter":"Dawid Wysakowicz"},{"authorTime":"2021-05-19 20:29:24","codes":[{"authorDate":"2021-05-19 20:29:24","commitOrder":11,"curCode":"    public void testRuntimeContext() throws Exception {\n        RichAsyncFunction<Integer, Integer> function =\n                new RichAsyncFunction<Integer, Integer>() {\n                    private static final long serialVersionUID = 1707630162838967972L;\n\n                    @Override\n                    public void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture)\n                            throws Exception {\n                        \r\n                    }\n                };\n\n        final String taskName = \"foobarTask\";\n        final OperatorMetricGroup metricGroup =\n                UnregisteredMetricsGroup.createOperatorMetricGroup();\n        final int numberOfParallelSubtasks = 42;\n        final int indexOfSubtask = 43;\n        final int attemptNumber = 1337;\n        final String taskNameWithSubtask = \"barfoo\";\n        final ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n        final ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\n        RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n        when(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n        when(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n        when(mockedRuntimeContext.getNumberOfParallelSubtasks())\n                .thenReturn(numberOfParallelSubtasks);\n        when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n        when(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n        when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n        when(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n        when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\n        function.setRuntimeContext(mockedRuntimeContext);\n\n        RuntimeContext runtimeContext = function.getRuntimeContext();\n\n        assertEquals(taskName, runtimeContext.getTaskName());\n        assertEquals(metricGroup, runtimeContext.getMetricGroup());\n        assertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n        assertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n        assertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n        assertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n        assertEquals(executionConfig, runtimeContext.getExecutionConfig());\n        assertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\n        try {\n            runtimeContext.getDistributedCache();\n            fail(\"Expected getDistributedCached to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n            fail(\"Expected getState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n            fail(\"Expected getListState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getReducingState(\n                    new ReducingStateDescriptor<>(\n                            \"foobar\",\n                            new ReduceFunction<Integer>() {\n                                private static final long serialVersionUID = 2136425961884441050L;\n\n                                @Override\n                                public Integer reduce(Integer value1, Integer value2)\n                                        throws Exception {\n                                    return value1;\n                                }\n                            },\n                            Integer.class));\n            fail(\"Expected getReducingState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getAggregatingState(\n                    new AggregatingStateDescriptor<>(\n                            \"foobar\",\n                            new AggregateFunction<Integer, Integer, Integer>() {\n\n                                @Override\n                                public Integer createAccumulator() {\n                                    return null;\n                                }\n\n                                @Override\n                                public Integer add(Integer value, Integer accumulator) {\n                                    return null;\n                                }\n\n                                @Override\n                                public Integer getResult(Integer accumulator) {\n                                    return null;\n                                }\n\n                                @Override\n                                public Integer merge(Integer a, Integer b) {\n                                    return null;\n                                }\n                            },\n                            Integer.class));\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getMapState(\n                    new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.addAccumulator(\n                    \"foobar\",\n                    new Accumulator<Integer, Integer>() {\n                        private static final long serialVersionUID = -4673320336846482358L;\n\n                        @Override\n                        public void add(Integer value) {\n                            \r\n                        }\n\n                        @Override\n                        public Integer getLocalValue() {\n                            return null;\n                        }\n\n                        @Override\n                        public void resetLocal() {}\n\n                        @Override\n                        public void merge(Accumulator<Integer, Integer> other) {}\n\n                        @Override\n                        public Accumulator<Integer, Integer> clone() {\n                            return null;\n                        }\n                    });\n            fail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getAccumulator(\"foobar\");\n            fail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getIntCounter(\"foobar\");\n            fail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getLongCounter(\"foobar\");\n            fail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getDoubleCounter(\"foobar\");\n            fail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getHistogram(\"foobar\");\n            fail(\"Expected getHistogram to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.hasBroadcastVariable(\"foobar\");\n            fail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getBroadcastVariable(\"foobar\");\n            fail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getBroadcastVariableWithInitializer(\n                    \"foobar\",\n                    new BroadcastVariableInitializer<Object, Object>() {\n                        @Override\n                        public Object initializeBroadcastVariable(Iterable<Object> data) {\n                            return null;\n                        }\n                    });\n            fail(\n                    \"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n    }\n","date":"2021-08-14 22:42:46","endLine":311,"groupId":"103046","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testRuntimeContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/30/732f9babb1aa4f12397ce6dad1e05e3cd7fa28.src","preCode":"    public void testRuntimeContext() throws Exception {\n        RichAsyncFunction<Integer, Integer> function =\n                new RichAsyncFunction<Integer, Integer>() {\n                    private static final long serialVersionUID = 1707630162838967972L;\n\n                    @Override\n                    public void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture)\n                            throws Exception {\n                        \r\n                    }\n                };\n\n        final String taskName = \"foobarTask\";\n        final MetricGroup metricGroup = new UnregisteredMetricsGroup();\n        final int numberOfParallelSubtasks = 42;\n        final int indexOfSubtask = 43;\n        final int attemptNumber = 1337;\n        final String taskNameWithSubtask = \"barfoo\";\n        final ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n        final ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n\n        RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n        when(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n        when(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n        when(mockedRuntimeContext.getNumberOfParallelSubtasks())\n                .thenReturn(numberOfParallelSubtasks);\n        when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n        when(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n        when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n        when(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n        when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n\n        function.setRuntimeContext(mockedRuntimeContext);\n\n        RuntimeContext runtimeContext = function.getRuntimeContext();\n\n        assertEquals(taskName, runtimeContext.getTaskName());\n        assertEquals(metricGroup, runtimeContext.getMetricGroup());\n        assertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n        assertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n        assertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n        assertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n        assertEquals(executionConfig, runtimeContext.getExecutionConfig());\n        assertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n\n        try {\n            runtimeContext.getDistributedCache();\n            fail(\"Expected getDistributedCached to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n            fail(\"Expected getState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n            fail(\"Expected getListState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getReducingState(\n                    new ReducingStateDescriptor<>(\n                            \"foobar\",\n                            new ReduceFunction<Integer>() {\n                                private static final long serialVersionUID = 2136425961884441050L;\n\n                                @Override\n                                public Integer reduce(Integer value1, Integer value2)\n                                        throws Exception {\n                                    return value1;\n                                }\n                            },\n                            Integer.class));\n            fail(\"Expected getReducingState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getAggregatingState(\n                    new AggregatingStateDescriptor<>(\n                            \"foobar\",\n                            new AggregateFunction<Integer, Integer, Integer>() {\n\n                                @Override\n                                public Integer createAccumulator() {\n                                    return null;\n                                }\n\n                                @Override\n                                public Integer add(Integer value, Integer accumulator) {\n                                    return null;\n                                }\n\n                                @Override\n                                public Integer getResult(Integer accumulator) {\n                                    return null;\n                                }\n\n                                @Override\n                                public Integer merge(Integer a, Integer b) {\n                                    return null;\n                                }\n                            },\n                            Integer.class));\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getMapState(\n                    new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.addAccumulator(\n                    \"foobar\",\n                    new Accumulator<Integer, Integer>() {\n                        private static final long serialVersionUID = -4673320336846482358L;\n\n                        @Override\n                        public void add(Integer value) {\n                            \r\n                        }\n\n                        @Override\n                        public Integer getLocalValue() {\n                            return null;\n                        }\n\n                        @Override\n                        public void resetLocal() {}\n\n                        @Override\n                        public void merge(Accumulator<Integer, Integer> other) {}\n\n                        @Override\n                        public Accumulator<Integer, Integer> clone() {\n                            return null;\n                        }\n                    });\n            fail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getAccumulator(\"foobar\");\n            fail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getIntCounter(\"foobar\");\n            fail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getLongCounter(\"foobar\");\n            fail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getDoubleCounter(\"foobar\");\n            fail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getHistogram(\"foobar\");\n            fail(\"Expected getHistogram to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.hasBroadcastVariable(\"foobar\");\n            fail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getBroadcastVariable(\"foobar\");\n            fail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getBroadcastVariableWithInitializer(\n                    \"foobar\",\n                    new BroadcastVariableInitializer<Object, Object>() {\n                        @Override\n                        public Object initializeBroadcastVariable(Iterable<Object> data) {\n                            return null;\n                        }\n                    });\n            fail(\n                    \"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n    }\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/async/RichAsyncFunctionTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-05-19 20:29:24","commitOrder":11,"curCode":"    public void testCepRuntimeContext() {\n        final String taskName = \"foobarTask\";\n        final OperatorMetricGroup metricGroup =\n                UnregisteredMetricsGroup.createOperatorMetricGroup();\n        final int numberOfParallelSubtasks = 42;\n        final int indexOfSubtask = 43;\n        final int attemptNumber = 1337;\n        final String taskNameWithSubtask = \"barfoo\";\n        final ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n        final ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n        final DistributedCache distributedCache = mock(DistributedCache.class);\n\n        RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n        when(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n        when(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n        when(mockedRuntimeContext.getNumberOfParallelSubtasks())\n                .thenReturn(numberOfParallelSubtasks);\n        when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n        when(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n        when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n        when(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n        when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n        when(mockedRuntimeContext.getDistributedCache()).thenReturn(distributedCache);\n\n        RuntimeContext runtimeContext = new CepRuntimeContext(mockedRuntimeContext);\n\n        assertEquals(taskName, runtimeContext.getTaskName());\n        assertEquals(metricGroup, runtimeContext.getMetricGroup());\n        assertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n        assertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n        assertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n        assertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n        assertEquals(executionConfig, runtimeContext.getExecutionConfig());\n        assertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n        assertEquals(distributedCache, runtimeContext.getDistributedCache());\n\n        try {\n            runtimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n            fail(\"Expected getState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n            fail(\"Expected getListState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getReducingState(\n                    new ReducingStateDescriptor<>(\n                            \"foobar\", mock(ReduceFunction.class), Integer.class));\n            fail(\"Expected getReducingState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getAggregatingState(\n                    new AggregatingStateDescriptor<>(\n                            \"foobar\", mock(AggregateFunction.class), Integer.class));\n            fail(\"Expected getAggregatingState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getMapState(\n                    new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n            fail(\"Expected getMapState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.addAccumulator(\"foobar\", mock(Accumulator.class));\n            fail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getAccumulator(\"foobar\");\n            fail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getIntCounter(\"foobar\");\n            fail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getLongCounter(\"foobar\");\n            fail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getDoubleCounter(\"foobar\");\n            fail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getHistogram(\"foobar\");\n            fail(\"Expected getHistogram to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.hasBroadcastVariable(\"foobar\");\n            fail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getBroadcastVariable(\"foobar\");\n            fail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getBroadcastVariableWithInitializer(\n                    \"foobar\", mock(BroadcastVariableInitializer.class));\n            fail(\n                    \"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n    }\n","date":"2021-08-14 22:42:46","endLine":249,"groupId":"103046","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testCepRuntimeContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b7/58e25afe01ff46eb52edcd61966cc8ffc5dfc9.src","preCode":"    public void testCepRuntimeContext() {\n        final String taskName = \"foobarTask\";\n        final MetricGroup metricGroup = new UnregisteredMetricsGroup();\n        final int numberOfParallelSubtasks = 42;\n        final int indexOfSubtask = 43;\n        final int attemptNumber = 1337;\n        final String taskNameWithSubtask = \"barfoo\";\n        final ExecutionConfig executionConfig = mock(ExecutionConfig.class);\n        final ClassLoader userCodeClassLoader = mock(ClassLoader.class);\n        final DistributedCache distributedCache = mock(DistributedCache.class);\n\n        RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class);\n\n        when(mockedRuntimeContext.getTaskName()).thenReturn(taskName);\n        when(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup);\n        when(mockedRuntimeContext.getNumberOfParallelSubtasks())\n                .thenReturn(numberOfParallelSubtasks);\n        when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask);\n        when(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber);\n        when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask);\n        when(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig);\n        when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader);\n        when(mockedRuntimeContext.getDistributedCache()).thenReturn(distributedCache);\n\n        RuntimeContext runtimeContext = new CepRuntimeContext(mockedRuntimeContext);\n\n        assertEquals(taskName, runtimeContext.getTaskName());\n        assertEquals(metricGroup, runtimeContext.getMetricGroup());\n        assertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks());\n        assertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask());\n        assertEquals(attemptNumber, runtimeContext.getAttemptNumber());\n        assertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks());\n        assertEquals(executionConfig, runtimeContext.getExecutionConfig());\n        assertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader());\n        assertEquals(distributedCache, runtimeContext.getDistributedCache());\n\n        try {\n            runtimeContext.getState(new ValueStateDescriptor<>(\"foobar\", Integer.class, 42));\n            fail(\"Expected getState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getListState(new ListStateDescriptor<>(\"foobar\", Integer.class));\n            fail(\"Expected getListState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getReducingState(\n                    new ReducingStateDescriptor<>(\n                            \"foobar\", mock(ReduceFunction.class), Integer.class));\n            fail(\"Expected getReducingState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getAggregatingState(\n                    new AggregatingStateDescriptor<>(\n                            \"foobar\", mock(AggregateFunction.class), Integer.class));\n            fail(\"Expected getAggregatingState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getMapState(\n                    new MapStateDescriptor<>(\"foobar\", Integer.class, String.class));\n            fail(\"Expected getMapState to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.addAccumulator(\"foobar\", mock(Accumulator.class));\n            fail(\"Expected addAccumulator to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getAccumulator(\"foobar\");\n            fail(\"Expected getAccumulator to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getIntCounter(\"foobar\");\n            fail(\"Expected getIntCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getLongCounter(\"foobar\");\n            fail(\"Expected getLongCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getDoubleCounter(\"foobar\");\n            fail(\"Expected getDoubleCounter to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getHistogram(\"foobar\");\n            fail(\"Expected getHistogram to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.hasBroadcastVariable(\"foobar\");\n            fail(\"Expected hasBroadcastVariable to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getBroadcastVariable(\"foobar\");\n            fail(\"Expected getBroadcastVariable to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n\n        try {\n            runtimeContext.getBroadcastVariableWithInitializer(\n                    \"foobar\", mock(BroadcastVariableInitializer.class));\n            fail(\n                    \"Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.\");\n        } catch (UnsupportedOperationException e) {\n            \r\n        }\n    }\n","realPath":"flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/operator/CepRuntimeContextTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"63ee60859cac64f2bc6cfe2c5015ceb1199cea9c","commitMessage":"@@@[FLINK-23652][core/metrics] Extract Operator(IO)MetricGroup interfaces and expose them in RuntimeContext\n","date":"2021-08-14 22:42:46","modifiedFileCount":"66","status":"M","submitter":"Arvid Heise"}]
