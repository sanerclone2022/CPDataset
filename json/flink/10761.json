[{"authorTime":"2020-08-25 19:19:04","codes":[{"authorDate":"2020-08-25 19:19:04","commitOrder":1,"curCode":"\tpublic void testUnknownOption() {\n\t\tMap<String, String> options = getAllOptions();\n\t\toptions.put(\"sink.unknown.key\", \"unknown-value\");\n\t\tTableSchema schema = TableSchema.builder()\n\t\t\t.field(ROWKEY, STRING())\n\t\t\t.field(FAMILY1, ROW(\n\t\t\t\tFIELD(COL1, DOUBLE()),\n\t\t\t\tFIELD(COL2, INT())))\n\t\t\t.build();\n\n\t\ttry {\n\t\t\tcreateTableSource(schema, options);\n\t\t\tfail(\"Should fail\");\n\t\t} catch (Exception e) {\n\t\t\tassertTrue(ExceptionUtils\n\t\t\t\t.findThrowableWithMessage(e, \"Unsupported options:\\n\\nsink.unknown.key\")\n\t\t\t\t.isPresent());\n\t\t}\n\n\t\ttry {\n\t\t\tcreateTableSink(schema, options);\n\t\t\tfail(\"Should fail\");\n\t\t} catch (Exception e) {\n\t\t\tassertTrue(ExceptionUtils\n\t\t\t\t.findThrowableWithMessage(e, \"Unsupported options:\\n\\nsink.unknown.key\")\n\t\t\t\t.isPresent());\n\t\t}\n\t}\n","date":"2020-09-28 22:08:46","endLine":262,"groupId":"43658","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnknownOption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9a/901c3d05395f562737a683b679f849a884387d.src","preCode":"\tpublic void testUnknownOption() {\n\t\tMap<String, String> options = getAllOptions();\n\t\toptions.put(\"sink.unknown.key\", \"unknown-value\");\n\t\tTableSchema schema = TableSchema.builder()\n\t\t\t.field(ROWKEY, STRING())\n\t\t\t.field(FAMILY1, ROW(\n\t\t\t\tFIELD(COL1, DOUBLE()),\n\t\t\t\tFIELD(COL2, INT())))\n\t\t\t.build();\n\n\t\ttry {\n\t\t\tcreateTableSource(schema, options);\n\t\t\tfail(\"Should fail\");\n\t\t} catch (Exception e) {\n\t\t\tassertTrue(ExceptionUtils\n\t\t\t\t.findThrowableWithMessage(e, \"Unsupported options:\\n\\nsink.unknown.key\")\n\t\t\t\t.isPresent());\n\t\t}\n\n\t\ttry {\n\t\t\tcreateTableSink(schema, options);\n\t\t\tfail(\"Should fail\");\n\t\t} catch (Exception e) {\n\t\t\tassertTrue(ExceptionUtils\n\t\t\t\t.findThrowableWithMessage(e, \"Unsupported options:\\n\\nsink.unknown.key\")\n\t\t\t\t.isPresent());\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-1.4/src/test/java/org/apache/flink/connector/hbase1/HBaseDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"B"},{"authorDate":"2020-08-25 19:19:04","commitOrder":1,"curCode":"\tpublic void testUnknownOption() {\n\t\tMap<String, String> options = getAllOptions();\n\t\toptions.put(\"sink.unknown.key\", \"unknown-value\");\n\t\tTableSchema schema = TableSchema.builder()\n\t\t\t.field(ROWKEY, STRING())\n\t\t\t.field(FAMILY1, ROW(\n\t\t\t\tFIELD(COL1, DOUBLE()),\n\t\t\t\tFIELD(COL2, INT())))\n\t\t\t.build();\n\n\t\ttry {\n\t\t\tcreateTableSource(schema, options);\n\t\t\tfail(\"Should fail\");\n\t\t} catch (Exception e) {\n\t\t\tassertTrue(ExceptionUtils\n\t\t\t\t.findThrowableWithMessage(e, \"Unsupported options:\\n\\nsink.unknown.key\")\n\t\t\t\t.isPresent());\n\t\t}\n\n\t\ttry {\n\t\t\tcreateTableSink(schema, options);\n\t\t\tfail(\"Should fail\");\n\t\t} catch (Exception e) {\n\t\t\tassertTrue(ExceptionUtils\n\t\t\t\t.findThrowableWithMessage(e, \"Unsupported options:\\n\\nsink.unknown.key\")\n\t\t\t\t.isPresent());\n\t\t}\n\t}\n","date":"2020-09-28 22:08:46","endLine":253,"groupId":"43658","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownOption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/94/530b5007173ea1185e43fbaa19f41ce2bb880b.src","preCode":"\tpublic void testUnknownOption() {\n\t\tMap<String, String> options = getAllOptions();\n\t\toptions.put(\"sink.unknown.key\", \"unknown-value\");\n\t\tTableSchema schema = TableSchema.builder()\n\t\t\t.field(ROWKEY, STRING())\n\t\t\t.field(FAMILY1, ROW(\n\t\t\t\tFIELD(COL1, DOUBLE()),\n\t\t\t\tFIELD(COL2, INT())))\n\t\t\t.build();\n\n\t\ttry {\n\t\t\tcreateTableSource(schema, options);\n\t\t\tfail(\"Should fail\");\n\t\t} catch (Exception e) {\n\t\t\tassertTrue(ExceptionUtils\n\t\t\t\t.findThrowableWithMessage(e, \"Unsupported options:\\n\\nsink.unknown.key\")\n\t\t\t\t.isPresent());\n\t\t}\n\n\t\ttry {\n\t\t\tcreateTableSink(schema, options);\n\t\t\tfail(\"Should fail\");\n\t\t} catch (Exception e) {\n\t\t\tassertTrue(ExceptionUtils\n\t\t\t\t.findThrowableWithMessage(e, \"Unsupported options:\\n\\nsink.unknown.key\")\n\t\t\t\t.isPresent());\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-2.2/src/test/java/org/apache/flink/connector/hbase2/HBaseDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"B"}],"commitId":"16c97c8db718219ed036218faf3519541f24b430","commitMessage":"@@@[FLINK-18795][hbase] Support for HBase 2\n\nThis closes #13128\n","date":"2020-09-28 22:08:46","modifiedFileCount":"5","status":"B","submitter":"Miklos Gergely"},{"authorTime":"2021-03-18 19:13:17","codes":[{"authorDate":"2021-03-18 19:13:17","commitOrder":2,"curCode":"    public void testUnknownOption() {\n        Map<String, String> options = getAllOptions();\n        options.put(\"sink.unknown.key\", \"unknown-value\");\n        ResolvedSchema schema =\n                ResolvedSchema.of(\n                        Column.physical(ROWKEY, STRING()),\n                        Column.physical(FAMILY1, ROW(FIELD(COL1, DOUBLE()), FIELD(COL2, INT()))));\n\n        try {\n            createTableSource(schema, options);\n            fail(\"Should fail\");\n        } catch (Exception e) {\n            assertTrue(\n                    ExceptionUtils.findThrowableWithMessage(\n                                    e, \"Unsupported options:\\n\\nsink.unknown.key\")\n                            .isPresent());\n        }\n\n        try {\n            createTableSink(schema, options);\n            fail(\"Should fail\");\n        } catch (Exception e) {\n            assertTrue(\n                    ExceptionUtils.findThrowableWithMessage(\n                                    e, \"Unsupported options:\\n\\nsink.unknown.key\")\n                            .isPresent());\n        }\n    }\n","date":"2021-03-24 04:35:35","endLine":317,"groupId":"10761","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testUnknownOption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/b4/e30b0ef9f731868cb04af619ced127647ee4a9.src","preCode":"    public void testUnknownOption() {\n        Map<String, String> options = getAllOptions();\n        options.put(\"sink.unknown.key\", \"unknown-value\");\n        TableSchema schema =\n                TableSchema.builder()\n                        .field(ROWKEY, STRING())\n                        .field(FAMILY1, ROW(FIELD(COL1, DOUBLE()), FIELD(COL2, INT())))\n                        .build();\n\n        try {\n            createTableSource(schema, options);\n            fail(\"Should fail\");\n        } catch (Exception e) {\n            assertTrue(\n                    ExceptionUtils.findThrowableWithMessage(\n                                    e, \"Unsupported options:\\n\\nsink.unknown.key\")\n                            .isPresent());\n        }\n\n        try {\n            createTableSink(schema, options);\n            fail(\"Should fail\");\n        } catch (Exception e) {\n            assertTrue(\n                    ExceptionUtils.findThrowableWithMessage(\n                                    e, \"Unsupported options:\\n\\nsink.unknown.key\")\n                            .isPresent());\n        }\n    }\n","realPath":"flink-connectors/flink-connector-hbase-1.4/src/test/java/org/apache/flink/connector/hbase1/HBaseDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"},{"authorDate":"2021-03-18 19:13:17","commitOrder":2,"curCode":"    public void testUnknownOption() {\n        Map<String, String> options = getAllOptions();\n        options.put(\"sink.unknown.key\", \"unknown-value\");\n        ResolvedSchema schema =\n                ResolvedSchema.of(\n                        Column.physical(ROWKEY, STRING()),\n                        Column.physical(FAMILY1, ROW(FIELD(COL1, DOUBLE()), FIELD(COL2, INT()))));\n\n        try {\n            createTableSource(schema, options);\n            fail(\"Should fail\");\n        } catch (Exception e) {\n            assertTrue(\n                    ExceptionUtils.findThrowableWithMessage(\n                                    e, \"Unsupported options:\\n\\nsink.unknown.key\")\n                            .isPresent());\n        }\n\n        try {\n            createTableSink(schema, options);\n            fail(\"Should fail\");\n        } catch (Exception e) {\n            assertTrue(\n                    ExceptionUtils.findThrowableWithMessage(\n                                    e, \"Unsupported options:\\n\\nsink.unknown.key\")\n                            .isPresent());\n        }\n    }\n","date":"2021-03-24 04:35:35","endLine":345,"groupId":"10761","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testUnknownOption","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/7d/0f900ab3c93f31c066c5e1f6e33610e2919d10.src","preCode":"    public void testUnknownOption() {\n        Map<String, String> options = getAllOptions();\n        options.put(\"sink.unknown.key\", \"unknown-value\");\n        TableSchema schema =\n                TableSchema.builder()\n                        .field(ROWKEY, STRING())\n                        .field(FAMILY1, ROW(FIELD(COL1, DOUBLE()), FIELD(COL2, INT())))\n                        .build();\n\n        try {\n            createTableSource(schema, options);\n            fail(\"Should fail\");\n        } catch (Exception e) {\n            assertTrue(\n                    ExceptionUtils.findThrowableWithMessage(\n                                    e, \"Unsupported options:\\n\\nsink.unknown.key\")\n                            .isPresent());\n        }\n\n        try {\n            createTableSink(schema, options);\n            fail(\"Should fail\");\n        } catch (Exception e) {\n            assertTrue(\n                    ExceptionUtils.findThrowableWithMessage(\n                                    e, \"Unsupported options:\\n\\nsink.unknown.key\")\n                            .isPresent());\n        }\n    }\n","realPath":"flink-connectors/flink-connector-hbase-2.2/src/test/java/org/apache/flink/connector/hbase2/HBaseDynamicTableFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"M"}],"commitId":"73338e22bd0567169ce2636c8f9e3b87df783385","commitMessage":"@@@[FLINK-21913][table][connectors] Update DynamicTableFactory.Context to use ResolvedCatalogTable\n\nThis closes #15316.\n","date":"2021-03-24 04:35:35","modifiedFileCount":"45","status":"M","submitter":"Timo Walther"}]
