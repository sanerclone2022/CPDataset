[{"authorTime":"2020-07-29 16:06:42","codes":[{"authorDate":"2019-11-23 14:43:03","commitOrder":7,"curCode":"\tpublic void testMultipleYarnShipOptions() throws Exception {\n\t\tfinal String[] args = new String[]{\"run\", \"--yarnship\", tmp.newFolder().getAbsolutePath(), \"--yarnship\", tmp.newFolder().getAbsolutePath()};\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli();\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tYarnClusterDescriptor flinkYarnDescriptor = (YarnClusterDescriptor) clientFactory.createClusterDescriptor(executorConfig);\n\n\t\tassertEquals(2, flinkYarnDescriptor.getShipFiles().size());\n\n\t}\n","date":"2019-12-03 23:29:31","endLine":430,"groupId":"50198","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultipleYarnShipOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f3/717a6d677f413d5708a78807c5514895435067.src","preCode":"\tpublic void testMultipleYarnShipOptions() throws Exception {\n\t\tfinal String[] args = new String[]{\"run\", \"--yarnship\", tmp.newFolder().getAbsolutePath(), \"--yarnship\", tmp.newFolder().getAbsolutePath()};\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli();\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tYarnClusterDescriptor flinkYarnDescriptor = (YarnClusterDescriptor) clientFactory.createClusterDescriptor(executorConfig);\n\n\t\tassertEquals(2, flinkYarnDescriptor.getShipFiles().size());\n\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":418,"status":"NB"},{"authorDate":"2020-07-29 16:06:42","commitOrder":7,"curCode":"\tpublic void testShipFiles() throws Exception {\n\t\tFile tmpFile = tmp.newFile();\n\t\tfinal String[] args = new String[]{\"run\", \"--yarnship\", tmpFile.toString()};\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli();\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tYarnClusterDescriptor flinkYarnDescriptor = (YarnClusterDescriptor) clientFactory.createClusterDescriptor(executorConfig);\n\n\t\tassertEquals(Lists.newArrayList(tmpFile), flinkYarnDescriptor.getShipFiles());\n\t}\n","date":"2020-08-18 15:43:44","endLine":486,"groupId":"7700","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testShipFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a0/ab312c70295746df7d56a1251b9e2c9b2dfb54.src","preCode":"\tpublic void testShipFiles() throws Exception {\n\t\tFile tmpFile = tmp.newFile();\n\t\tfinal String[] args = new String[]{\"run\", \"--yarnship\", tmpFile.toString()};\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli();\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tYarnClusterDescriptor flinkYarnDescriptor = (YarnClusterDescriptor) clientFactory.createClusterDescriptor(executorConfig);\n\n\t\tassertEquals(Lists.newArrayList(tmpFile), flinkYarnDescriptor.getShipFiles());\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":474,"status":"B"}],"commitId":"8e663c4a1f08e8d0223441a897932ce5a1acdcc9","commitMessage":"@@@[FLINK-18752][yarn] Allow shipping single files for yarn execution\n\nThis closes #13103.\n","date":"2020-08-18 15:43:44","modifiedFileCount":"4","status":"M","submitter":"Gyula Fora"},{"authorTime":"2020-10-07 18:50:45","codes":[{"authorDate":"2020-10-07 18:50:45","commitOrder":8,"curCode":"\tpublic void testMultipleYarnShipOptions() throws Exception {\n\t\tfinal String[] args = new String[]{\"run\", \"--yarnship\", tmp.newFolder().getAbsolutePath(), \"--yarnship\", tmp.newFolder().getAbsolutePath()};\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli();\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.toConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tYarnClusterDescriptor flinkYarnDescriptor = (YarnClusterDescriptor) clientFactory.createClusterDescriptor(executorConfig);\n\n\t\tassertEquals(2, flinkYarnDescriptor.getShipFiles().size());\n\n\t}\n","date":"2020-10-27 23:07:18","endLine":476,"groupId":"101865","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultipleYarnShipOptions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/95/25fc7ad8fd18e6a5bfd3043977a6d576585284.src","preCode":"\tpublic void testMultipleYarnShipOptions() throws Exception {\n\t\tfinal String[] args = new String[]{\"run\", \"--yarnship\", tmp.newFolder().getAbsolutePath(), \"--yarnship\", tmp.newFolder().getAbsolutePath()};\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli();\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tYarnClusterDescriptor flinkYarnDescriptor = (YarnClusterDescriptor) clientFactory.createClusterDescriptor(executorConfig);\n\n\t\tassertEquals(2, flinkYarnDescriptor.getShipFiles().size());\n\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":464,"status":"M"},{"authorDate":"2020-10-07 18:50:45","commitOrder":8,"curCode":"\tpublic void testShipFiles() throws Exception {\n\t\tFile tmpFile = tmp.newFile();\n\t\tfinal String[] args = new String[]{\"run\", \"--yarnship\", tmpFile.toString()};\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli();\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.toConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tYarnClusterDescriptor flinkYarnDescriptor = (YarnClusterDescriptor) clientFactory.createClusterDescriptor(executorConfig);\n\n\t\tassertEquals(Lists.newArrayList(tmpFile), flinkYarnDescriptor.getShipFiles());\n\t}\n","date":"2020-10-27 23:07:18","endLine":491,"groupId":"101865","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testShipFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/95/25fc7ad8fd18e6a5bfd3043977a6d576585284.src","preCode":"\tpublic void testShipFiles() throws Exception {\n\t\tFile tmpFile = tmp.newFile();\n\t\tfinal String[] args = new String[]{\"run\", \"--yarnship\", tmpFile.toString()};\n\t\tfinal FlinkYarnSessionCli flinkYarnSessionCli = createFlinkYarnSessionCli();\n\n\t\tfinal CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false);\n\n\t\tfinal Configuration executorConfig = flinkYarnSessionCli.applyCommandLineOptionsToConfiguration(commandLine);\n\t\tfinal ClusterClientFactory<ApplicationId> clientFactory = getClusterClientFactory(executorConfig);\n\t\tYarnClusterDescriptor flinkYarnDescriptor = (YarnClusterDescriptor) clientFactory.createClusterDescriptor(executorConfig);\n\n\t\tassertEquals(Lists.newArrayList(tmpFile), flinkYarnDescriptor.getShipFiles());\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/FlinkYarnSessionCliTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":479,"status":"M"}],"commitId":"15f3844f1a325f898540a5c1b70928c3688787a6","commitMessage":"@@@[FLINK-19493] In CliFrontend.  make flow of Configuration more obvious\n\nBefore.  it was up to the CustomCommandLine implementation whether any\nConfiguration was passed through from the flink-conf.yaml or wherever\nthe base Configuration came from.\n\nNow.  we make the flow of the Configuration explicit in\nCliFrontend.getEffectiveConfiguration(). Instead of relying on the\nConfiguration we get from the CustomCommandLine we ask the\nCustomCommandLine to materialize its settings and add them manually to\nan effective Configuration that the CliFrontend controls.\n\nThis removes the Configuration parameter from CustomCommandLines that\ndon't need it anymore.  such as DefaultCLI.  which means we also have to\ntouch tests.\n\nThis adds a new integration test in CliFrontendITCase that verifies\ncorrect parameter passing and also verifies that command line arguments\noverride base settings.\n","date":"2020-10-27 23:07:18","modifiedFileCount":"25","status":"M","submitter":"Aljoscha Krettek"}]
