[{"authorTime":"2020-02-23 15:03:30","codes":[{"authorDate":"2020-02-23 15:03:30","commitOrder":1,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-03-05 09:17:39","endLine":75,"groupId":"31086","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/be/f6b24b1b187f7ca0f93d9ce234770ac62261d3.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2020-02-23 15:03:30","commitOrder":1,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-03-05 09:17:39","endLine":70,"groupId":"1898","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/66/0e005e3c83b566de01ce999a67d3cc0d2f0b51.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitTaskManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"}],"commitId":"a50435d443395141fc526c6584ec9841e5968713","commitMessage":"@@@[FLINK-16194][k8s] Introduce the monadic step decorator design and the InitJobManagerDecorator and the TaskManagerDecorator\n","date":"2020-03-05 09:17:39","modifiedFileCount":"2","status":"B","submitter":"felixzheng"},{"authorTime":"2020-03-21 15:16:24","codes":[{"authorDate":"2020-03-21 15:16:24","commitOrder":2,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-03-24 22:35:36","endLine":77,"groupId":"31086","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ea/c4283ea6dc6c77fc02ee6398a9b9eaec4dd60a.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2020-03-21 15:16:24","commitOrder":2,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-03-24 22:35:36","endLine":71,"groupId":"49718","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/88/1733927071813893d5e0b23c63376c37f911a4.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitTaskManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"3df0eb78ad73db1a428fc50ed3d0804e7114d68b","commitMessage":"@@@[FLINK-15647][k8s] Support user-specified annotations for the JM/TM pods\n","date":"2020-03-24 22:35:36","modifiedFileCount":"11","status":"M","submitter":"felixzheng"},{"authorTime":"2020-03-25 15:25:07","codes":[{"authorDate":"2020-03-25 15:25:07","commitOrder":3,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesJobManagerParameters.getNodeSelector())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-04-07 16:06:15","endLine":78,"groupId":"31086","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/45/fa10d2d7e532bd909c47c898076f6951d18b35.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2020-03-25 15:25:07","commitOrder":3,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesTaskManagerParameters.getNodeSelector())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-04-07 16:06:15","endLine":72,"groupId":"49718","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e7/89b60dcf2b89686fa51b3086cc5ebb6148e4e4.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitTaskManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"5b54a2580172a7f3c518211c1bfc5f987ebbadba","commitMessage":"@@@[FLINK-16749][k8s] Support to set node selector for jobmanager and taskmanager pod\n\nThe node-selector is a collection of key/value pairs to constrain a pod to only be able to run on particular node(s). Since affinity and anti-affinity are uncommon use case for Flink.  so we leave the support in pod template.\n\nThis closes #11500 .\n","date":"2020-04-07 16:06:15","modifiedFileCount":"10","status":"M","submitter":"wangyang0918"},{"authorTime":"2020-04-07 20:10:40","codes":[{"authorDate":"2020-04-07 20:10:40","commitOrder":4,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesJobManagerParameters.getNodeSelector())\n\t\t\t\t.withTolerations(kubernetesJobManagerParameters.getTolerations().stream()\n\t\t\t\t\t.map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n\t\t\t\t\t.collect(Collectors.toList()))\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-04-13 18:47:31","endLine":82,"groupId":"31086","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ad/54d71dd53a2c5cc5eb67d403e635ee01730abd.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesJobManagerParameters.getNodeSelector())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-04-07 20:10:40","commitOrder":4,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesTaskManagerParameters.getNodeSelector())\n\t\t\t\t.withTolerations(kubernetesTaskManagerParameters.getTolerations().stream()\n\t\t\t\t\t.map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n\t\t\t\t\t.collect(Collectors.toList()))\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-04-13 18:47:31","endLine":76,"groupId":"49718","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f9/68b750ad1fa5b5b606ae04aa43d08553f59b3f.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesTaskManagerParameters.getNodeSelector())\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitTaskManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"30311ecdf470db4bb6d23c7883aed6aad901a898","commitMessage":"@@@[FLINK-15639][k8s] Support to set tolerations for jobmanager and taskmanger pod\n\nTaints and tolerations work together to ensure that pods are not scheduled onto inappropriate nodes. One or more taints are applied to a node; this marks that the node should not accept any pods that do not tolerate the taints. Tolerations are applied to pods.  and allow (but do not require) the pods to schedule onto nodes with matching taints.\n\nThis closes #11606 .\n","date":"2020-04-13 18:47:31","modifiedFileCount":"8","status":"M","submitter":"wangyang0918"},{"authorTime":"2020-04-29 20:00:40","codes":[{"authorDate":"2020-04-07 20:10:40","commitOrder":5,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesJobManagerParameters.getNodeSelector())\n\t\t\t\t.withTolerations(kubernetesJobManagerParameters.getTolerations().stream()\n\t\t\t\t\t.map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n\t\t\t\t\t.collect(Collectors.toList()))\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-04-13 18:47:31","endLine":82,"groupId":"31086","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ad/54d71dd53a2c5cc5eb67d403e635ee01730abd.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesJobManagerParameters.getNodeSelector())\n\t\t\t\t.withTolerations(kubernetesJobManagerParameters.getTolerations().stream()\n\t\t\t\t\t.map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n\t\t\t\t\t.collect(Collectors.toList()))\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"},{"authorDate":"2020-04-29 20:00:40","commitOrder":5,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withRestartPolicy(Constants.RESTART_POLICY_OF_NEVER)\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesTaskManagerParameters.getNodeSelector())\n\t\t\t\t.withTolerations(kubernetesTaskManagerParameters.getTolerations().stream()\n\t\t\t\t\t.map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n\t\t\t\t\t.collect(Collectors.toList()))\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-05-06 10:56:46","endLine":77,"groupId":"49718","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f7/814bbefb612085a852ae13bc6d307b8a3dba94.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesTaskManagerParameters.getNodeSelector())\n\t\t\t\t.withTolerations(kubernetesTaskManagerParameters.getTolerations().stream()\n\t\t\t\t\t.map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n\t\t\t\t\t.collect(Collectors.toList()))\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitTaskManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"04ab8d236254777e16bdabfceb217190e3b2cfde","commitMessage":"@@@[FLINK-17332][k8s] Fix restart policy not equals to Never for native task manager pods\n\nThis closes #11949 .\n","date":"2020-05-06 10:56:46","modifiedFileCount":"3","status":"M","submitter":"felixzheng"},{"authorTime":"2020-12-21 22:39:35","codes":[{"authorDate":"2020-04-07 20:10:40","commitOrder":6,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesJobManagerParameters.getNodeSelector())\n\t\t\t\t.withTolerations(kubernetesJobManagerParameters.getTolerations().stream()\n\t\t\t\t\t.map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n\t\t\t\t\t.collect(Collectors.toList()))\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-04-13 18:47:31","endLine":82,"groupId":"31086","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ad/54d71dd53a2c5cc5eb67d403e635ee01730abd.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withLabels(kubernetesJobManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n\t\t\t\t.withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesJobManagerParameters.getNodeSelector())\n\t\t\t\t.withTolerations(kubernetesJobManagerParameters.getTolerations().stream()\n\t\t\t\t\t.map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n\t\t\t\t\t.collect(Collectors.toList()))\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"},{"authorDate":"2020-12-21 22:39:35","commitOrder":6,"curCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withServiceAccountName(kubernetesTaskManagerParameters.getServiceAccount())\n\t\t\t\t.withRestartPolicy(Constants.RESTART_POLICY_OF_NEVER)\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesTaskManagerParameters.getNodeSelector())\n\t\t\t\t.withTolerations(kubernetesTaskManagerParameters.getTolerations().stream()\n\t\t\t\t\t.map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n\t\t\t\t\t.collect(Collectors.toList()))\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","date":"2020-12-25 16:58:11","endLine":77,"groupId":"30907","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ee/6202d2be4b61197219bb9bf4565163527216bd.src","preCode":"\tpublic FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n\t\tfinal Pod basicPod = new PodBuilder(flinkPod.getPod())\n\t\t\t.withApiVersion(Constants.API_VERSION)\n\t\t\t.editOrNewMetadata()\n\t\t\t\t.withName(kubernetesTaskManagerParameters.getPodName())\n\t\t\t\t.withLabels(kubernetesTaskManagerParameters.getLabels())\n\t\t\t\t.withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n\t\t\t\t.endMetadata()\n\t\t\t.editOrNewSpec()\n\t\t\t\t.withRestartPolicy(Constants.RESTART_POLICY_OF_NEVER)\n\t\t\t\t.withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n\t\t\t\t.withNodeSelector(kubernetesTaskManagerParameters.getNodeSelector())\n\t\t\t\t.withTolerations(kubernetesTaskManagerParameters.getTolerations().stream()\n\t\t\t\t\t.map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n\t\t\t\t\t.collect(Collectors.toList()))\n\t\t\t\t.endSpec()\n\t\t\t.build();\n\n\t\tfinal Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n\t\treturn new FlinkPod.Builder(flinkPod)\n\t\t\t.withPod(basicPod)\n\t\t\t.withMainContainer(basicMainContainer)\n\t\t\t.build();\n\t}\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitTaskManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"fb4286f366c38e0b288dc204e4db9bac943bbe8a","commitMessage":"@@@[FLINK-20664][k8s] Support setting service account for TaskManager pod.\n","date":"2020-12-25 16:58:11","modifiedFileCount":"6","status":"M","submitter":"blublinsky"},{"authorTime":"2021-02-20 14:12:05","codes":[{"authorDate":"2021-02-20 14:12:05","commitOrder":7,"curCode":"    public FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n        final Pod basicPod =\n                new PodBuilder(flinkPod.getPodWithoutMainContainer())\n                        .withApiVersion(API_VERSION)\n                        .editOrNewMetadata()\n                        .withLabels(kubernetesJobManagerParameters.getLabels())\n                        .withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n                        .endMetadata()\n                        .editOrNewSpec()\n                        .withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n                        .withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n                        .withNodeSelector(kubernetesJobManagerParameters.getNodeSelector())\n                        .withTolerations(\n                                kubernetesJobManagerParameters.getTolerations().stream()\n                                        .map(\n                                                e ->\n                                                        KubernetesToleration.fromMap(e)\n                                                                .getInternalResource())\n                                        .collect(Collectors.toList()))\n                        .endSpec()\n                        .build();\n\n        final Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n        return new FlinkPod.Builder(flinkPod)\n                .withPod(basicPod)\n                .withMainContainer(basicMainContainer)\n                .build();\n    }\n","date":"2021-03-01 17:38:17","endLine":86,"groupId":"31086","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/d8/e352063a965c9cacf4ee8df4eba955cb15847c.src","preCode":"    public FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n        final Pod basicPod =\n                new PodBuilder(flinkPod.getPod())\n                        .withApiVersion(API_VERSION)\n                        .editOrNewMetadata()\n                        .withLabels(kubernetesJobManagerParameters.getLabels())\n                        .withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n                        .endMetadata()\n                        .editOrNewSpec()\n                        .withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n                        .withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n                        .withNodeSelector(kubernetesJobManagerParameters.getNodeSelector())\n                        .withTolerations(\n                                kubernetesJobManagerParameters.getTolerations().stream()\n                                        .map(\n                                                e ->\n                                                        KubernetesToleration.fromMap(e)\n                                                                .getInternalResource())\n                                        .collect(Collectors.toList()))\n                        .endSpec()\n                        .build();\n\n        final Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n        return new FlinkPod.Builder(flinkPod)\n                .withPod(basicPod)\n                .withMainContainer(basicMainContainer)\n                .build();\n    }\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2021-02-20 14:12:05","commitOrder":7,"curCode":"    public FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n        final Pod basicPod =\n                new PodBuilder(flinkPod.getPodWithoutMainContainer())\n                        .withApiVersion(Constants.API_VERSION)\n                        .editOrNewMetadata()\n                        .withName(kubernetesTaskManagerParameters.getPodName())\n                        .withLabels(kubernetesTaskManagerParameters.getLabels())\n                        .withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n                        .endMetadata()\n                        .editOrNewSpec()\n                        .withServiceAccountName(kubernetesTaskManagerParameters.getServiceAccount())\n                        .withRestartPolicy(Constants.RESTART_POLICY_OF_NEVER)\n                        .withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n                        .withNodeSelector(kubernetesTaskManagerParameters.getNodeSelector())\n                        .withTolerations(\n                                kubernetesTaskManagerParameters.getTolerations().stream()\n                                        .map(\n                                                e ->\n                                                        KubernetesToleration.fromMap(e)\n                                                                .getInternalResource())\n                                        .collect(Collectors.toList()))\n                        .endSpec()\n                        .build();\n\n        final Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n        return new FlinkPod.Builder(flinkPod)\n                .withPod(basicPod)\n                .withMainContainer(basicMainContainer)\n                .build();\n    }\n","date":"2021-03-01 17:38:17","endLine":81,"groupId":"30907","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f5/a059de871980a4291ca5c94cee25f2f64e8846.src","preCode":"    public FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n        final Pod basicPod =\n                new PodBuilder(flinkPod.getPod())\n                        .withApiVersion(Constants.API_VERSION)\n                        .editOrNewMetadata()\n                        .withName(kubernetesTaskManagerParameters.getPodName())\n                        .withLabels(kubernetesTaskManagerParameters.getLabels())\n                        .withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n                        .endMetadata()\n                        .editOrNewSpec()\n                        .withServiceAccountName(kubernetesTaskManagerParameters.getServiceAccount())\n                        .withRestartPolicy(Constants.RESTART_POLICY_OF_NEVER)\n                        .withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n                        .withNodeSelector(kubernetesTaskManagerParameters.getNodeSelector())\n                        .withTolerations(\n                                kubernetesTaskManagerParameters.getTolerations().stream()\n                                        .map(\n                                                e ->\n                                                        KubernetesToleration.fromMap(e)\n                                                                .getInternalResource())\n                                        .collect(Collectors.toList()))\n                        .endSpec()\n                        .build();\n\n        final Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n        return new FlinkPod.Builder(flinkPod)\n                .withPod(basicPod)\n                .withMainContainer(basicMainContainer)\n                .build();\n    }\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitTaskManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"4fcc408a8e581b9c796fc59cfcda68a71213795f","commitMessage":"@@@[hotfix][k8s] Rename the implicit variable pod to podWithoutMainContainer\n","date":"2021-03-01 17:38:17","modifiedFileCount":"20","status":"M","submitter":"wangyang0918"},{"authorTime":"2021-02-20 15:45:20","codes":[{"authorDate":"2021-02-20 15:45:20","commitOrder":8,"curCode":"    public FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n        final PodBuilder basicPodBuilder = new PodBuilder(flinkPod.getPodWithoutMainContainer());\n\n        \r\n        final String serviceAccountName =\n                KubernetesUtils.resolveUserDefinedValue(\n                        flinkConfig,\n                        KubernetesConfigOptions.JOB_MANAGER_SERVICE_ACCOUNT,\n                        kubernetesJobManagerParameters.getServiceAccount(),\n                        KubernetesUtils.getServiceAccount(flinkPod),\n                        \"service account\");\n        if (flinkPod.getPodWithoutMainContainer().getSpec().getRestartPolicy() != null) {\n            logger.info(\n                    \"The restart policy of JobManager pod will be overwritten to 'always' \"\n                            + \"since it is controlled by the Kubernetes deployment.\");\n        }\n        basicPodBuilder\n                .withApiVersion(API_VERSION)\n                .editOrNewSpec()\n                .withServiceAccount(serviceAccountName)\n                .withServiceAccountName(serviceAccountName)\n                .endSpec();\n\n        \r\n        basicPodBuilder\n                .editOrNewMetadata()\n                .addToLabels(kubernetesJobManagerParameters.getLabels())\n                .addToAnnotations(kubernetesJobManagerParameters.getAnnotations())\n                .endMetadata()\n                .editOrNewSpec()\n                .addToImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n                .addToNodeSelector(kubernetesJobManagerParameters.getNodeSelector())\n                .addAllToTolerations(\n                        kubernetesJobManagerParameters.getTolerations().stream()\n                                .map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n                                .collect(Collectors.toList()))\n                .endSpec();\n\n        final Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n        return new FlinkPod.Builder(flinkPod)\n                .withPod(basicPodBuilder.build())\n                .withMainContainer(basicMainContainer)\n                .build();\n    }\n","date":"2021-03-01 17:38:18","endLine":105,"groupId":"102401","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/df/59f97905b6a353ca5fa4f75b0f99ef25a62f77.src","preCode":"    public FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n        final Pod basicPod =\n                new PodBuilder(flinkPod.getPodWithoutMainContainer())\n                        .withApiVersion(API_VERSION)\n                        .editOrNewMetadata()\n                        .withLabels(kubernetesJobManagerParameters.getLabels())\n                        .withAnnotations(kubernetesJobManagerParameters.getAnnotations())\n                        .endMetadata()\n                        .editOrNewSpec()\n                        .withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount())\n                        .withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets())\n                        .withNodeSelector(kubernetesJobManagerParameters.getNodeSelector())\n                        .withTolerations(\n                                kubernetesJobManagerParameters.getTolerations().stream()\n                                        .map(\n                                                e ->\n                                                        KubernetesToleration.fromMap(e)\n                                                                .getInternalResource())\n                                        .collect(Collectors.toList()))\n                        .endSpec()\n                        .build();\n\n        final Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n        return new FlinkPod.Builder(flinkPod)\n                .withPod(basicPod)\n                .withMainContainer(basicMainContainer)\n                .build();\n    }\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitJobManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2021-02-20 15:45:20","commitOrder":8,"curCode":"    public FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n        final PodBuilder basicPodBuilder = new PodBuilder(flinkPod.getPodWithoutMainContainer());\n\n        \r\n        final String serviceAccountName =\n                KubernetesUtils.resolveUserDefinedValue(\n                        flinkConfig,\n                        KubernetesConfigOptions.TASK_MANAGER_SERVICE_ACCOUNT,\n                        kubernetesTaskManagerParameters.getServiceAccount(),\n                        KubernetesUtils.getServiceAccount(flinkPod),\n                        \"service account\");\n        if (flinkPod.getPodWithoutMainContainer().getSpec().getRestartPolicy() != null) {\n            logger.info(\n                    \"The restart policy of TaskManager pod will be overwritten to 'never' \"\n                            + \"since it should not be restarted.\");\n        }\n        basicPodBuilder\n                .withApiVersion(Constants.API_VERSION)\n                .editOrNewMetadata()\n                .withName(kubernetesTaskManagerParameters.getPodName())\n                .endMetadata()\n                .editOrNewSpec()\n                .withServiceAccount(serviceAccountName)\n                .withServiceAccountName(serviceAccountName)\n                .withRestartPolicy(Constants.RESTART_POLICY_OF_NEVER)\n                .endSpec();\n\n        \r\n        basicPodBuilder\n                .editOrNewMetadata()\n                .addToLabels(kubernetesTaskManagerParameters.getLabels())\n                .addToAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n                .endMetadata()\n                .editOrNewSpec()\n                .addToImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n                .addToNodeSelector(kubernetesTaskManagerParameters.getNodeSelector())\n                .addAllToTolerations(\n                        kubernetesTaskManagerParameters.getTolerations().stream()\n                                .map(e -> KubernetesToleration.fromMap(e).getInternalResource())\n                                .collect(Collectors.toList()))\n                .endSpec();\n\n        final Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n        return new FlinkPod.Builder(flinkPod)\n                .withPod(basicPodBuilder.build())\n                .withMainContainer(basicMainContainer)\n                .build();\n    }\n","date":"2021-03-01 17:38:18","endLine":102,"groupId":"102401","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"decorateFlinkPod","params":"(FlinkPodflinkPod)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/34/c317d2209b244ca22b44e9ab3543054a68df48.src","preCode":"    public FlinkPod decorateFlinkPod(FlinkPod flinkPod) {\n        final Pod basicPod =\n                new PodBuilder(flinkPod.getPodWithoutMainContainer())\n                        .withApiVersion(Constants.API_VERSION)\n                        .editOrNewMetadata()\n                        .withName(kubernetesTaskManagerParameters.getPodName())\n                        .withLabels(kubernetesTaskManagerParameters.getLabels())\n                        .withAnnotations(kubernetesTaskManagerParameters.getAnnotations())\n                        .endMetadata()\n                        .editOrNewSpec()\n                        .withServiceAccountName(kubernetesTaskManagerParameters.getServiceAccount())\n                        .withRestartPolicy(Constants.RESTART_POLICY_OF_NEVER)\n                        .withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets())\n                        .withNodeSelector(kubernetesTaskManagerParameters.getNodeSelector())\n                        .withTolerations(\n                                kubernetesTaskManagerParameters.getTolerations().stream()\n                                        .map(\n                                                e ->\n                                                        KubernetesToleration.fromMap(e)\n                                                                .getInternalResource())\n                                        .collect(Collectors.toList()))\n                        .endSpec()\n                        .build();\n\n        final Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer());\n\n        return new FlinkPod.Builder(flinkPod)\n                .withPod(basicPod)\n                .withMainContainer(basicMainContainer)\n                .build();\n    }\n","realPath":"flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InitTaskManagerDecorator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"1552131f76538ab8b09d84c8a12a9a5729432616","commitMessage":"@@@[FLINK-15656][k8s] Support to overwrite and merge some K8s fields from pod template and config options\n","date":"2021-03-01 17:38:18","modifiedFileCount":"12","status":"M","submitter":"wangyang0918"}]
