[{"authorTime":"2016-11-21 19:46:51","codes":[{"authorDate":"2016-10-27 23:37:56","commitOrder":2,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(new Configuration());\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(Integer.MAX_VALUE);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploy();\n\t\t} catch (Exception e) {\n\t\t\tAssert.assertTrue(e.getCause() instanceof IllegalConfigurationException);\n\t\t}\n\t}\n","date":"2016-11-05 03:07:37","endLine":66,"groupId":"31329","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/17/ce7be720e85451bb1a9c5979985efbbe872c4b.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(new Configuration());\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(Integer.MAX_VALUE);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploy();\n\t\t} catch (Exception e) {\n\t\t\tAssert.assertTrue(e.getCause() instanceof IllegalConfigurationException);\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"NB"},{"authorDate":"2016-11-21 19:46:51","commitOrder":2,"curCode":"\tpublic void testConfigOverwrite() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(ConfigConstants.YARN_VCORES, Integer.MAX_VALUE);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(configuration);\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(1);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploy();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tAssert.assertTrue(e.getCause() instanceof IllegalConfigurationException);\n\t\t}\n\t}\n","date":"2016-11-22 00:49:44","endLine":91,"groupId":"31332","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/98/38e6dd56d976087d1657e7c598e2965fa610e6.src","preCode":"\tpublic void testConfigOverwrite() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(ConfigConstants.YARN_VCORES, Integer.MAX_VALUE);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(configuration);\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(1);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploy();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tAssert.assertTrue(e.getCause() instanceof IllegalConfigurationException);\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"5836f7eddb4849b95d4860cf20045bc61d061918","commitMessage":"@@@[FLINK-5071][yarn] adjust vcore validation check\n\nThe check didn't take the virtual core settings configured in the Flink\nconfiguration into account.\n\n- improve error reporting\n- add test case\n\nThis closes #2839.\n","date":"2016-11-22 00:49:44","modifiedFileCount":"2","status":"M","submitter":"Maximilian Michels"},{"authorTime":"2017-02-16 00:51:02","codes":[{"authorDate":"2017-02-16 00:51:02","commitOrder":3,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(new Configuration());\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(Integer.MAX_VALUE);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploy();\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","date":"2017-02-17 00:13:44","endLine":75,"groupId":"31329","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/70/ccae8cbc39c01af43e0bb568ecf71b2a9fd09a.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(new Configuration());\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(Integer.MAX_VALUE);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploy();\n\t\t} catch (Exception e) {\n\t\t\tAssert.assertTrue(e.getCause() instanceof IllegalConfigurationException);\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2017-02-16 00:51:02","commitOrder":3,"curCode":"\tpublic void testConfigOverwrite() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(ConfigConstants.YARN_VCORES, Integer.MAX_VALUE);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(configuration);\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(1);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploy();\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","date":"2017-02-17 00:13:44","endLine":104,"groupId":"31332","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/70/ccae8cbc39c01af43e0bb568ecf71b2a9fd09a.src","preCode":"\tpublic void testConfigOverwrite() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(ConfigConstants.YARN_VCORES, Integer.MAX_VALUE);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(configuration);\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(1);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploy();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tAssert.assertTrue(e.getCause() instanceof IllegalConfigurationException);\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"494edb041b5e8474c84eed563e9dfa4406240bb5","commitMessage":"@@@[FLINK-5811] [tests] Harden YarnClusterDescriptorTest\n\nAdd fail call after method which is supposed to fail. Remove stack trace printing\nto stdout.\n\nThis closes #3326.\n","date":"2017-02-17 00:13:44","modifiedFileCount":"1","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2017-07-06 15:33:18","codes":[{"authorDate":"2017-07-06 15:33:18","commitOrder":4,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(new Configuration());\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(Integer.MAX_VALUE);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster();\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","date":"2017-07-26 23:39:52","endLine":81,"groupId":"31329","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/14/738e6e5d5ebbedc799026a68e031f46a1d8742.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(new Configuration());\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(Integer.MAX_VALUE);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploy();\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2017-07-06 15:33:18","commitOrder":4,"curCode":"\tpublic void testConfigOverwrite() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(ConfigConstants.YARN_VCORES, Integer.MAX_VALUE);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(configuration);\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(1);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster();\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","date":"2017-07-26 23:39:52","endLine":110,"groupId":"31332","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/14/738e6e5d5ebbedc799026a68e031f46a1d8742.src","preCode":"\tpublic void testConfigOverwrite() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(ConfigConstants.YARN_VCORES, Integer.MAX_VALUE);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(configuration);\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(1);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploy();\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"ee16ee5a2d18413f00bf4bc3702e010c864e0e74","commitMessage":"@@@[FLINK-7110] [client] Add per-job cluster deployment interface\n\nRename deploySession to deploySessionCluster.  deployJob to deployJobCluster; Add ClusterDeploymentDescription to deployJobCluster method\n\nThis closes #4270.\n","date":"2017-07-26 23:39:52","modifiedFileCount":"11","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2017-07-06 20:00:21","codes":[{"authorDate":"2017-07-06 20:00:21","commitOrder":5,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(new Configuration());\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","date":"2017-07-27 00:55:10","endLine":87,"groupId":"11927","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a8/62b50a20535f56286807f6f4037020b36e7b6f.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(new Configuration());\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(Integer.MAX_VALUE);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster();\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2017-07-06 20:00:21","commitOrder":5,"curCode":"\tpublic void testConfigOverwrite() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(ConfigConstants.YARN_VCORES, Integer.MAX_VALUE);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(configuration);\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","date":"2017-07-27 00:55:10","endLine":121,"groupId":"11927","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a8/62b50a20535f56286807f6f4037020b36e7b6f.src","preCode":"\tpublic void testConfigOverwrite() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(ConfigConstants.YARN_VCORES, Integer.MAX_VALUE);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(configuration);\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tclusterDescriptor.setTaskManagerSlots(1);\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster();\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"7cf997d16bbf8c7a6bbb3522aeba0d9e7c9af6b6","commitMessage":"@@@[FLINK-7113] Make ClusterDescriptor independent of cluster size\n\nThe deploySession method now is given a ClusterSpecification which specifies the\nsize of the cluster which it is supposed to deploy.\n\nRemove 2 line breaks.  unnecessary parameters for YarnTestBase#Runner.  add builder for ClusterSpecification\n\nThis closes #4271.\n","date":"2017-07-27 00:55:10","modifiedFileCount":"15","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2017-07-07 19:40:29","codes":[{"authorDate":"2017-07-07 19:40:29","commitOrder":6,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tnew Configuration(),\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath());\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","date":"2017-07-28 18:16:58","endLine":84,"groupId":"11927","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/86/122d6c7730ff9dcf36c3bb770b5417b53085bf.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(new Configuration());\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2017-07-07 19:40:29","commitOrder":6,"curCode":"\tpublic void testConfigOverwrite() {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(ConfigConstants.YARN_VCORES, Integer.MAX_VALUE);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath());\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","date":"2017-07-28 18:16:58","endLine":116,"groupId":"14124","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/86/122d6c7730ff9dcf36c3bb770b5417b53085bf.src","preCode":"\tpublic void testConfigOverwrite() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor();\n\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(ConfigConstants.YARN_VCORES, Integer.MAX_VALUE);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\t\tclusterDescriptor.setFlinkConfiguration(configuration);\n\t\tclusterDescriptor.setConfigurationDirectory(temporaryFolder.getRoot().getAbsolutePath());\n\t\tclusterDescriptor.setConfigurationFilePath(new Path(flinkConf.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"e9751409033870658a12a8edb4cf11a84fd04e3d","commitMessage":"@@@[FLINK-7125] [yarn] Remove Configuration loading from AbstractYarnClusterDescriptor\n\nInstead the AbstractYarnClusterDescriptor is passed in a Configuration instance which\nis sent to the started application master.\n\nPass in configuration directory manually\n\nRemove configurationDirectory resolution from AbstractYarnClusterDescriptor\n\nAddress PR comments\n\nThis closes #4280.\n","date":"2017-07-28 18:16:58","modifiedFileCount":"16","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2017-06-08 11:38:56","codes":[{"authorDate":"2017-07-07 19:40:29","commitOrder":7,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tnew Configuration(),\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath());\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","date":"2017-07-28 18:16:58","endLine":84,"groupId":"11927","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/86/122d6c7730ff9dcf36c3bb770b5417b53085bf.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tnew Configuration(),\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath());\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"},{"authorDate":"2017-06-08 11:38:56","commitOrder":7,"curCode":"\tpublic void testConfigOverwrite() {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath());\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","date":"2017-08-10 17:36:30","endLine":117,"groupId":"14124","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/19/d1af5a38d559105aba993343b2e860c771b1c5.src","preCode":"\tpublic void testConfigOverwrite() {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(ConfigConstants.YARN_VCORES, Integer.MAX_VALUE);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath());\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"d63d704efb2bc28dd7a33ee9027f4d447acbd209","commitMessage":"@@@[FLINK-6494] [RM][Yarn][Mesos] Migrate ResourceManager/Yarn/Mesos configuration options\n\nThis closes #4075.\n","date":"2017-08-10 17:36:30","modifiedFileCount":"18","status":"M","submitter":"zjureel"},{"authorTime":"2017-12-20 23:43:21","codes":[{"authorDate":"2017-12-20 23:43:21","commitOrder":8,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tfinal YarnClient yarnClient = YarnClient.createYarnClient();\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tnew Configuration(),\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-01-11 23:59:29","endLine":91,"groupId":"11927","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0d/1bf6586aecc55a3ee2c444b0f3935a2875c764.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tnew Configuration(),\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath());\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2017-12-20 23:43:21","commitOrder":8,"curCode":"\tpublic void testConfigOverwrite() {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\n\t\tfinal YarnClient yarnClient = YarnClient.createYarnClient();\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-01-11 23:59:29","endLine":128,"groupId":"16487","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0d/1bf6586aecc55a3ee2c444b0f3935a2875c764.src","preCode":"\tpublic void testConfigOverwrite() {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath());\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"156b8935ef76eb53456cea1d40fd528ccefa21d8","commitMessage":"@@@[FLINK-8329] [flip6] Move YarnClient to AbstractYarnClusterDescriptor\n\nMoves the YarnClient from the YarnClusterClient to the AbstractYarnClusterDescriptor.\nThis makes the latter responsible for the lifecycle management of the client and gives\na better separation of concerns.\n\nThis closes #5216.\n","date":"2018-01-11 23:59:29","modifiedFileCount":"15","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2018-01-12 06:46:33","codes":[{"authorDate":"2018-01-12 06:46:33","commitOrder":9,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\n\t\tfinal YarnClient yarnClient = YarnClient.createYarnClient();\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tnew Configuration(),\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-01-12 23:14:04","endLine":100,"groupId":"11927","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e0/f69cb808be7bc478d6db381c720c3adee7ba66.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() {\n\n\t\tfinal YarnClient yarnClient = YarnClient.createYarnClient();\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tnew Configuration(),\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2018-01-12 06:46:33","commitOrder":9,"curCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\n\t\tfinal YarnClient yarnClient = YarnClient.createYarnClient();\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-01-12 23:14:04","endLine":137,"groupId":"16487","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e0/f69cb808be7bc478d6db381c720c3adee7ba66.src","preCode":"\tpublic void testConfigOverwrite() {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\n\t\tfinal YarnClient yarnClient = YarnClient.createYarnClient();\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (RuntimeException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"38d3720863c6187153174d0df57fc414b0cf8e96","commitMessage":"@@@[FLINK-8347] [flip6] Make cluster id used by ClusterDescriptor typesafe\n\nThe ClusterDescriptor uses a typed cluster id for the ClusterClient retrieval.\nMoreover.  the ClusterClient and the CustomCommandLine are typed accordingly.\n\nThis closes #5232.\n","date":"2018-01-12 23:14:04","modifiedFileCount":"39","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2018-03-02 22:27:13","codes":[{"authorDate":"2018-03-02 22:27:13","commitOrder":10,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tnew Configuration(),\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-03-03 06:45:50","endLine":122,"groupId":"11927","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/dd/8b62536c2604f47af5b200eb6ca17bcbe941f2.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\n\t\tfinal YarnClient yarnClient = YarnClient.createYarnClient();\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tnew Configuration(),\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2018-03-02 22:27:13","commitOrder":10,"curCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-03-03 06:45:50","endLine":159,"groupId":"0","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/dd/8b62536c2604f47af5b200eb6ca17bcbe941f2.src","preCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\n\t\tfinal YarnClient yarnClient = YarnClient.createYarnClient();\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"193386bcd5d0e2003a831138d6282af1880e1ab8","commitMessage":"@@@[FLINK-8840] [yarn] Pull YarnClient and YarnConfiguration instantiation out of AbstractYarnClusterClient\n\nFor better testability.  this commit moves the YarnClient and YarnConfiguration out of\nthe AbstractYarnClusterDescriptor.\n","date":"2018-03-03 06:45:50","modifiedFileCount":"11","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2018-03-20 15:59:33","codes":[{"authorDate":"2018-03-20 15:59:33","commitOrder":11,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\t\tflinkConfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tflinkConfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-03-21 17:56:54","endLine":126,"groupId":"8360","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/52/bf8bb1a6a833d6611286c3372f3fb0d9c142b9.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tnew Configuration(),\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2018-03-20 15:59:33","commitOrder":11,"curCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\t\tconfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-03-21 17:56:54","endLine":164,"groupId":"13897","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/52/bf8bb1a6a833d6611286c3372f3fb0d9c142b9.src","preCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(-1)\n\t\t\t.setTaskManagerMemoryMB(-1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"}],"commitId":"38aa863d5a710b283b5c9b2eb9225d6fb9cc0c70","commitMessage":"@@@[FLINK-9028] [yarn] Perform parameters checking before Yarn starting cluster\n\nThis closes #5726.\n","date":"2018-03-21 17:56:54","modifiedFileCount":"8","status":"M","submitter":"sihuazhou"},{"authorTime":"2018-04-02 17:13:57","codes":[{"authorDate":"2018-04-02 17:13:57","commitOrder":12,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\t\tflinkConfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tLegacyYarnClusterDescriptor clusterDescriptor = new LegacyYarnClusterDescriptor(\n\t\t\tflinkConfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-04-02 22:59:40","endLine":126,"groupId":"8360","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f2/06b6678cf1e7f9f1f50f153ade82ae9891b021.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\t\tflinkConfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tflinkConfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2018-04-02 17:13:57","commitOrder":12,"curCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\t\tconfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tLegacyYarnClusterDescriptor clusterDescriptor = new LegacyYarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-04-02 22:59:40","endLine":164,"groupId":"13897","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f2/06b6678cf1e7f9f1f50f153ade82ae9891b021.src","preCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\t\tconfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"}],"commitId":"af5279e9bd3dec18512a54c59982e3dc1f253cd2","commitMessage":"@@@[FLINK-9121] [flip6] Remove Flip6 prefixes and other references\n\nRemove Flip6 prefixes and references to make Flip-6 the proper default:\n\nRename categories Flip6 -> New and OldAndFlip6 -> LegacyAndNew\n\nRemove Flip-6 from documentation\n\nRemove Flip-6 from start up scripts\n\nThis closes #5801.\n","date":"2018-04-02 22:59:40","modifiedFileCount":"105","status":"M","submitter":"Till Rohrmann"},{"authorTime":"2018-11-19 15:59:49","codes":[{"authorDate":"2018-11-19 15:59:49","commitOrder":13,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\t\tflinkConfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tflinkConfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-11-19 15:59:49","endLine":125,"groupId":"8360","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/16/b3586900018911d2980821c4e1933473d69028.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\t\tflinkConfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tLegacyYarnClusterDescriptor clusterDescriptor = new LegacyYarnClusterDescriptor(\n\t\t\tflinkConfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2018-11-19 15:59:49","commitOrder":13,"curCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\t\tconfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2018-11-19 15:59:49","endLine":163,"groupId":"13897","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/16/b3586900018911d2980821c4e1933473d69028.src","preCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\t\tconfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tLegacyYarnClusterDescriptor clusterDescriptor = new LegacyYarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"9f486941ea4ab4d302e42f258c83531583438f64","commitMessage":"@@@[FLINK-10666] [tests] Port YarnClusterDescriptorTest to new codebase\n\n","date":"2018-11-19 15:59:49","modifiedFileCount":"1","status":"M","submitter":"Tzu-Li Chen"},{"authorTime":"2019-06-17 15:32:29","codes":[{"authorDate":"2019-06-17 15:32:29","commitOrder":14,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\t\tflinkConfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(flinkConfiguration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2019-06-21 22:01:57","endLine":138,"groupId":"8360","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4a/c983918efc162936cb460ac2d2ebc7eac4cd70.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\t\tflinkConfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tflinkConfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2019-06-17 15:32:29","commitOrder":14,"curCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\t\tconfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(configuration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2019-06-21 22:01:57","endLine":171,"groupId":"8361","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4a/c983918efc162936cb460ac2d2ebc7eac4cd70.src","preCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\t\tconfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = new YarnClusterDescriptor(\n\t\t\tconfiguration,\n\t\t\tyarnConfiguration,\n\t\t\ttemporaryFolder.getRoot().getAbsolutePath(),\n\t\t\tyarnClient,\n\t\t\ttrue);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"}],"commitId":"9beb72b09759029d474c52e1ee628c7eee025333","commitMessage":"@@@[hotfix][yarn. test] Deduplicate YarnClusterDescriptor construction in YarnClusterDescriptorTest\n","date":"2019-06-21 22:01:57","modifiedFileCount":"1","status":"M","submitter":"Piotr Nowojski"},{"authorTime":"2020-01-13 19:18:58","codes":[{"authorDate":"2020-01-13 19:18:58","commitOrder":15,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\t\tflinkConfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(flinkConfiguration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2020-01-16 23:50:00","endLine":122,"groupId":"2927","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1b/323803ffa3f7a99ebb713f7905c7306b15c348.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\t\tflinkConfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(flinkConfiguration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2020-01-13 19:18:58","commitOrder":15,"curCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\t\tconfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(configuration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2020-01-16 23:50:00","endLine":151,"groupId":"13897","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1b/323803ffa3f7a99ebb713f7905c7306b15c348.src","preCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\t\tconfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(configuration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setMasterMemoryMB(1)\n\t\t\t.setTaskManagerMemoryMB(1)\n\t\t\t.setNumberTaskManagers(1)\n\t\t\t.setSlotsPerTaskManager(1)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"e3acccd5f495ed8313c17ef597377dfb4d14ca75","commitMessage":"@@@[FLINK-15564][yarn][test] Fix that YarnClusterDescriptorTest#testFailIfTaskSlotsHigherThanMaxVcores and #testConfigOverwrite not validating the original intended behaviors.\n","date":"2020-01-16 23:50:00","modifiedFileCount":"4","status":"M","submitter":"Xintong Song"},{"authorTime":"2020-04-09 00:43:33","codes":[{"authorDate":"2020-04-09 00:43:33","commitOrder":16,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(flinkConfiguration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2020-04-27 15:11:39","endLine":124,"groupId":"2927","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/66/1e0d35e4cf0142b9f74fe3a4bd6cce637f1261.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\t\tflinkConfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(flinkConfiguration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2020-04-09 00:43:33","commitOrder":16,"curCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(configuration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2020-04-27 15:11:39","endLine":152,"groupId":"13897","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/66/1e0d35e4cf0142b9f74fe3a4bd6cce637f1261.src","preCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\t\tconfiguration.setInteger(ResourceManagerOptions.CONTAINERIZED_HEAP_CUTOFF_MIN, 0);\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(configuration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"679cd0fca45e24ca85a5d51069d3aac655aa1da9","commitMessage":"@@@[FLINK-16745][coordination] Remove unused container cutoff\n","date":"2020-04-27 15:11:39","modifiedFileCount":"9","status":"M","submitter":"Andrey Zagrebin"},{"authorTime":"2020-04-09 00:43:33","codes":[{"authorDate":"2020-05-14 10:34:15","commitOrder":17,"curCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(flinkConfiguration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2020-05-16 02:08:57","endLine":132,"groupId":"101841","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailIfTaskSlotsHigherThanMaxVcores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9f/845ee326735e44e59d675939bc6888381ea105.src","preCode":"\tpublic void testFailIfTaskSlotsHigherThanMaxVcores() throws ClusterDeploymentException {\n\t\tfinal Configuration flinkConfiguration = new Configuration();\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(flinkConfiguration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.setSlotsPerTaskManager(Integer.MAX_VALUE)\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2020-04-09 00:43:33","commitOrder":17,"curCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(configuration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","date":"2020-04-27 15:11:39","endLine":152,"groupId":"101841","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfigOverwrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/66/1e0d35e4cf0142b9f74fe3a4bd6cce637f1261.src","preCode":"\tpublic void testConfigOverwrite() throws ClusterDeploymentException {\n\t\tConfiguration configuration = new Configuration();\n\t\t\r\n\t\tconfiguration.setInteger(YarnConfigOptions.VCORES, Integer.MAX_VALUE);\n\n\t\tYarnClusterDescriptor clusterDescriptor = createYarnClusterDescriptor(configuration);\n\n\t\tclusterDescriptor.setLocalJarPath(new Path(flinkJar.getPath()));\n\n\t\t\r\n\t\tClusterSpecification clusterSpecification = new ClusterSpecification.ClusterSpecificationBuilder()\n\t\t\t.createClusterSpecification();\n\n\t\ttry {\n\t\t\tclusterDescriptor.deploySessionCluster(clusterSpecification);\n\n\t\t\tfail(\"The deploy call should have failed.\");\n\t\t} catch (ClusterDeploymentException e) {\n\t\t\t\r\n\t\t\tif (!(e.getCause() instanceof IllegalConfigurationException)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} finally {\n\t\t\tclusterDescriptor.close();\n\t\t}\n\t}\n","realPath":"flink-yarn/src/test/java/org/apache/flink/yarn/YarnClusterDescriptorTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"N"}],"commitId":"04bcc252d5f54a078b864e2adc1e79d9c8b09bf9","commitMessage":"@@@[FLINK-17632][yarn] Always build the packaged program in the cluster for application mode\n","date":"2020-05-16 02:08:57","modifiedFileCount":"4","status":"M","submitter":"wangyang0918"}]
