[{"authorTime":"2020-11-08 21:13:37","codes":[{"authorDate":"2020-06-29 17:00:59","commitOrder":2,"curCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\n\t\twhile (awaitingReader.hasNext()) {\n\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\tcontext.assignSplit(nextSplit.get(), awaitingSubtask);\n\t\t\t\tawaitingReader.remove();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n","date":"2020-09-22 00:04:52","endLine":161,"groupId":"22660","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assignSplits","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/72/fa0ad7b11e10871af31a168b952c66f55937d8.src","preCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\n\t\twhile (awaitingReader.hasNext()) {\n\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\tcontext.assignSplit(nextSplit.get(), awaitingSubtask);\n\t\t\t\tawaitingReader.remove();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/main/java/org/apache/flink/connector/file/src/impl/ContinuousFileSplitEnumerator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"NB"},{"authorDate":"2020-11-08 21:13:37","commitOrder":2,"curCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\n\t\tstateLock.writeLock().lock();\n\t\ttry {\n\t\t\twhile (awaitingReader.hasNext()) {\n\t\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\t\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\t\tenumeratorContext.assignSplit((HiveSourceSplit) nextSplit.get(), awaitingSubtask);\n\t\t\t\t\tawaitingReader.remove();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tstateLock.writeLock().unlock();\n\t\t}\n\t}\n","date":"2020-11-08 21:13:37","endLine":229,"groupId":"22660","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assignSplits","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/62/8203f5619e14b795d6d81b7221d132915904b3.src","preCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\n\t\tstateLock.writeLock().lock();\n\t\ttry {\n\t\t\twhile (awaitingReader.hasNext()) {\n\t\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\t\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\t\tenumeratorContext.assignSplit((HiveSourceSplit) nextSplit.get(), awaitingSubtask);\n\t\t\t\t\tawaitingReader.remove();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tstateLock.writeLock().unlock();\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/ContinuousHiveSplitEnumerator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"B"}],"commitId":"fc581da73fcb9bbaa443604d36498c9a5dbdf0cd","commitMessage":"@@@[FLINK-19888][hive] Migrate Hive source to FLIP-27 source interface for streaming\n\nThis closes #13963","date":"2020-11-08 21:13:37","modifiedFileCount":"8","status":"M","submitter":"Rui Li"},{"authorTime":"2020-11-19 10:19:12","codes":[{"authorDate":"2020-06-29 17:00:59","commitOrder":3,"curCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\n\t\twhile (awaitingReader.hasNext()) {\n\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\tcontext.assignSplit(nextSplit.get(), awaitingSubtask);\n\t\t\t\tawaitingReader.remove();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n","date":"2020-09-22 00:04:52","endLine":161,"groupId":"22660","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assignSplits","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/72/fa0ad7b11e10871af31a168b952c66f55937d8.src","preCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\n\t\twhile (awaitingReader.hasNext()) {\n\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\tcontext.assignSplit(nextSplit.get(), awaitingSubtask);\n\t\t\t\tawaitingReader.remove();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/main/java/org/apache/flink/connector/file/src/impl/ContinuousFileSplitEnumerator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"N"},{"authorDate":"2020-11-19 10:19:12","commitOrder":3,"curCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\t\twhile (awaitingReader.hasNext()) {\n\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\tenumeratorContext.assignSplit((HiveSourceSplit) nextSplit.get(), awaitingSubtask);\n\t\t\t\tawaitingReader.remove();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n","date":"2020-11-19 10:19:12","endLine":170,"groupId":"22660","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assignSplits","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/38/e91d54ee161ce1537ebc52eb9e5dd4605df3ca.src","preCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\n\t\tstateLock.writeLock().lock();\n\t\ttry {\n\t\t\twhile (awaitingReader.hasNext()) {\n\t\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\t\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\t\tenumeratorContext.assignSplit((HiveSourceSplit) nextSplit.get(), awaitingSubtask);\n\t\t\t\t\tawaitingReader.remove();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tstateLock.writeLock().unlock();\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/ContinuousHiveSplitEnumerator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"}],"commitId":"cd833c2584810102723c49e6f0c5eb3b3f79311f","commitMessage":"@@@[FLINK-20062][hive] ContinuousHiveSplitEnumerator should be lock-free\n\nThis closes #13998","date":"2020-11-19 10:19:12","modifiedFileCount":"1","status":"M","submitter":"Rui Li"},{"authorTime":"2020-11-19 10:19:12","codes":[{"authorDate":"2020-11-23 04:41:41","commitOrder":4,"curCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\n\t\twhile (awaitingReader.hasNext()) {\n\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (!context.registeredReaders().containsKey(nextAwaiting.getKey())) {\n\t\t\t\tawaitingReader.remove();\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\tcontext.assignSplit(nextSplit.get(), awaitingSubtask);\n\t\t\t\tawaitingReader.remove();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n","date":"2020-11-23 05:10:07","endLine":170,"groupId":"101015","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assignSplits","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e5/c4ff99fce6450eb5fe93c1cc745fe52df4d988.src","preCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\n\t\twhile (awaitingReader.hasNext()) {\n\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\tcontext.assignSplit(nextSplit.get(), awaitingSubtask);\n\t\t\t\tawaitingReader.remove();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-files/src/main/java/org/apache/flink/connector/file/src/impl/ContinuousFileSplitEnumerator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2020-11-19 10:19:12","commitOrder":4,"curCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\t\twhile (awaitingReader.hasNext()) {\n\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\tenumeratorContext.assignSplit((HiveSourceSplit) nextSplit.get(), awaitingSubtask);\n\t\t\t\tawaitingReader.remove();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n","date":"2020-11-19 10:19:12","endLine":170,"groupId":"101015","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assignSplits","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/38/e91d54ee161ce1537ebc52eb9e5dd4605df3ca.src","preCode":"\tprivate void assignSplits() {\n\t\tfinal Iterator<Map.Entry<Integer, String>> awaitingReader = readersAwaitingSplit.entrySet().iterator();\n\t\twhile (awaitingReader.hasNext()) {\n\t\t\tfinal Map.Entry<Integer, String> nextAwaiting = awaitingReader.next();\n\t\t\tfinal String hostname = nextAwaiting.getValue();\n\t\t\tfinal int awaitingSubtask = nextAwaiting.getKey();\n\t\t\tfinal Optional<FileSourceSplit> nextSplit = splitAssigner.getNext(hostname);\n\t\t\tif (nextSplit.isPresent()) {\n\t\t\t\tenumeratorContext.assignSplit((HiveSourceSplit) nextSplit.get(), awaitingSubtask);\n\t\t\t\tawaitingReader.remove();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/ContinuousHiveSplitEnumerator.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"}],"commitId":"75599bca3ecff89c0abf9d9027d1280e1ac812b0","commitMessage":"@@@[FLINK-20261][connector source] Enumerators do not assign splits to unregistered (failed) readers.\n","date":"2020-11-23 05:10:07","modifiedFileCount":"2","status":"M","submitter":"Stephan Ewen"}]
