[{"authorTime":"2019-08-02 14:59:14","codes":[{"authorDate":"2019-08-02 14:59:14","commitOrder":3,"curCode":"\tpublic void testCustomBulkWriter() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>())\n\t\t) {\n\t\t\ttestPartFiles(testHarness, outDir, \".part-0-0.inprogress\", \".part-0-1.inprogress\");\n\t\t}\n\t}\n","date":"2019-08-07 15:46:36","endLine":66,"groupId":"30360","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCustomBulkWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3c/1b9badc8ad8dda5d157cdf0d4e937fff6821b1.src","preCode":"\tpublic void testCustomBulkWriter() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>())\n\t\t) {\n\t\t\ttestPartFiles(testHarness, outDir, \".part-0-0.inprogress\", \".part-0-1.inprogress\");\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BulkWriterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"MB"},{"authorDate":"2019-08-02 14:59:14","commitOrder":3,"curCode":"\tpublic void testCustomBulkWriterWithPartConfig() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>(),\n\t\t\t\t\t\t\t\"prefix\",\n\t\t\t\t\t\t\t\".ext\")\n\t\t) {\n\t\t\ttestPartFiles(testHarness, outDir, \".prefix-0-0.ext.inprogress\", \".prefix-0-1.ext.inprogress\");\n\t\t}\n\t}\n","date":"2019-08-07 15:46:36","endLine":88,"groupId":"30360","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCustomBulkWriterWithPartConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3c/1b9badc8ad8dda5d157cdf0d4e937fff6821b1.src","preCode":"\tpublic void testCustomBulkWriterWithPartConfig() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>(),\n\t\t\t\t\t\t\t\"prefix\",\n\t\t\t\t\t\t\t\".ext\")\n\t\t) {\n\t\t\ttestPartFiles(testHarness, outDir, \".prefix-0-0.ext.inprogress\", \".prefix-0-1.ext.inprogress\");\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BulkWriterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"e9d3d58eff5c9a3727b1d5b2b3dfaec136267951","commitMessage":"@@@[FLINK-13428][fs-connector] Make part file name configurable\n\nThis closes #9228\n","date":"2019-08-07 15:46:36","modifiedFileCount":"11","status":"M","submitter":"eskabetxe"},{"authorTime":"2019-08-30 15:44:27","codes":[{"authorDate":"2019-08-30 15:44:27","commitOrder":4,"curCode":"\tpublic void testCustomBulkWriter() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>())\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".part-0-0.inprogress\", \".part-0-1.inprogress\");\n\t\t}\n\t}\n","date":"2019-09-23 17:43:14","endLine":66,"groupId":"30360","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCustomBulkWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ba/b18aac3b0536b35dbf4db3fc4eec213710064a.src","preCode":"\tpublic void testCustomBulkWriter() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>())\n\t\t) {\n\t\t\ttestPartFiles(testHarness, outDir, \".part-0-0.inprogress\", \".part-0-1.inprogress\");\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BulkWriterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2019-08-30 15:44:27","commitOrder":4,"curCode":"\tpublic void testCustomBulkWriterWithPartConfig() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>(),\n\t\t\t\t\t\t\t\"prefix\",\n\t\t\t\t\t\t\t\".ext\")\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".prefix-0-0.ext.inprogress\", \".prefix-0-1.ext.inprogress\");\n\t\t}\n\t}\n","date":"2019-09-23 17:43:14","endLine":109,"groupId":"30360","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCustomBulkWriterWithPartConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ba/b18aac3b0536b35dbf4db3fc4eec213710064a.src","preCode":"\tpublic void testCustomBulkWriterWithPartConfig() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>(),\n\t\t\t\t\t\t\t\"prefix\",\n\t\t\t\t\t\t\t\".ext\")\n\t\t) {\n\t\t\ttestPartFiles(testHarness, outDir, \".prefix-0-0.ext.inprogress\", \".prefix-0-1.ext.inprogress\");\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BulkWriterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"adfe011bc6fed36e30b3078bd3b6dbc0953f2ddf","commitMessage":"@@@[FLINK-13864][fs-connector] Make StreamingFileSink extensible\n\nThis PR makes the StreamingFileSink protected and the builders\nmutable so that they can be subclassed. In order for the user\nto subclass the StreamingFileSink.  he has to override the\nforRowFormat/forBulkFormat depending on his needs and the\ncorresponding builder so its the build() method returns the\nsubclass and not the original StreamingFileSink.\n","date":"2019-09-23 17:43:14","modifiedFileCount":"4","status":"M","submitter":"Ying"},{"authorTime":"2019-11-15 03:14:02","codes":[{"authorDate":"2019-08-30 15:44:27","commitOrder":5,"curCode":"\tpublic void testCustomBulkWriter() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>())\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".part-0-0.inprogress\", \".part-0-1.inprogress\");\n\t\t}\n\t}\n","date":"2019-09-23 17:43:14","endLine":66,"groupId":"30360","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCustomBulkWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ba/b18aac3b0536b35dbf4db3fc4eec213710064a.src","preCode":"\tpublic void testCustomBulkWriter() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>())\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".part-0-0.inprogress\", \".part-0-1.inprogress\");\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BulkWriterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2019-11-15 03:14:02","commitOrder":5,"curCode":"\tpublic void testCustomBulkWriterWithPartConfig() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>(),\n\t\t\t\t\t\t\tPartFileConfig.builder().withPartPrefix(\"prefix\").withPartSuffix(\".ext\").build())\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".prefix-0-0.ext.inprogress\", \".prefix-0-1.ext.inprogress\");\n\t\t}\n\t}\n","date":"2019-11-15 20:39:28","endLine":108,"groupId":"30360","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCustomBulkWriterWithPartConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/f4/16d8af56ef6e67a46fb9048570c4a307abdaf9.src","preCode":"\tpublic void testCustomBulkWriterWithPartConfig() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>(),\n\t\t\t\t\t\t\t\"prefix\",\n\t\t\t\t\t\t\t\".ext\")\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".prefix-0-0.ext.inprogress\", \".prefix-0-1.ext.inprogress\");\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BulkWriterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"22b2a8856307c310b4c75b32eeed33ba66c0206e","commitMessage":"@@@[FLINK-13850] refactor part file configurations into a single method\n\nCloses #9533\n","date":"2019-11-15 20:39:28","modifiedFileCount":"11","status":"M","submitter":"Joao Boto"},{"authorTime":"2019-11-15 21:44:06","codes":[{"authorDate":"2019-08-30 15:44:27","commitOrder":6,"curCode":"\tpublic void testCustomBulkWriter() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>())\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".part-0-0.inprogress\", \".part-0-1.inprogress\");\n\t\t}\n\t}\n","date":"2019-09-23 17:43:14","endLine":66,"groupId":"30360","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCustomBulkWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ba/b18aac3b0536b35dbf4db3fc4eec213710064a.src","preCode":"\tpublic void testCustomBulkWriter() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>())\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".part-0-0.inprogress\", \".part-0-1.inprogress\");\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BulkWriterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2019-11-15 21:44:06","commitOrder":6,"curCode":"\tpublic void testCustomBulkWriterWithPartConfig() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>(),\n\t\t\t\t\t\t\t\"prefix\",\n\t\t\t\t\t\t\t\".ext\")\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".prefix-0-0.ext.inprogress\", \".prefix-0-1.ext.inprogress\");\n\t\t}\n\t}\n","date":"2019-11-15 21:44:06","endLine":109,"groupId":"30360","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCustomBulkWriterWithPartConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ba/b18aac3b0536b35dbf4db3fc4eec213710064a.src","preCode":"\tpublic void testCustomBulkWriterWithPartConfig() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>(),\n\t\t\t\t\t\t\tPartFileConfig.builder().withPartPrefix(\"prefix\").withPartSuffix(\".ext\").build())\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".prefix-0-0.ext.inprogress\", \".prefix-0-1.ext.inprogress\");\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BulkWriterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"fdc2555c7d417ddd62a700b2ea67b59193ea720e","commitMessage":"@@@Revert \"[FLINK-13850] refactor part file configurations into a single method\"\n\nThis reverts commit 22b2a8856307c310b4c75b32eeed33ba66c0206e.\n","date":"2019-11-15 21:44:06","modifiedFileCount":"11","status":"M","submitter":"Chesnay Schepler"},{"authorTime":"2019-11-15 22:44:16","codes":[{"authorDate":"2019-08-30 15:44:27","commitOrder":7,"curCode":"\tpublic void testCustomBulkWriter() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>())\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".part-0-0.inprogress\", \".part-0-1.inprogress\");\n\t\t}\n\t}\n","date":"2019-09-23 17:43:14","endLine":66,"groupId":"103073","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCustomBulkWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ba/b18aac3b0536b35dbf4db3fc4eec213710064a.src","preCode":"\tpublic void testCustomBulkWriter() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>())\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".part-0-0.inprogress\", \".part-0-1.inprogress\");\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BulkWriterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2019-11-15 22:44:16","commitOrder":7,"curCode":"\tpublic void testCustomBulkWriterWithPartConfig() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>(),\n\t\t\t\t\t\t\tOutputFileConfig.builder().withPartPrefix(\"prefix\").withPartSuffix(\".ext\").build())\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".prefix-0-0.ext.inprogress\", \".prefix-0-1.ext.inprogress\");\n\t\t}\n\t}\n","date":"2019-11-17 19:53:50","endLine":108,"groupId":"103073","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCustomBulkWriterWithPartConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/04/49e1d247a57060f52b2a1c753129d0dd4e1e48.src","preCode":"\tpublic void testCustomBulkWriterWithPartConfig() throws Exception {\n\t\tfinal File outDir = TEMP_FOLDER.newFolder();\n\n\t\t\r\n\t\ttry (\n\t\t\tOneInputStreamOperatorTestHarness<Tuple2<String, Integer>, Object> testHarness =\n\t\t\t\t\tTestUtils.createTestSinkWithBulkEncoder(\n\t\t\t\t\t\t\toutDir,\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t10L,\n\t\t\t\t\t\t\tnew TestUtils.TupleToStringBucketer(),\n\t\t\t\t\t\t\tnew TestBulkWriterFactory(),\n\t\t\t\t\t\t\tnew DefaultBucketFactoryImpl<>(),\n\t\t\t\t\t\t\t\"prefix\",\n\t\t\t\t\t\t\t\".ext\")\n\t\t) {\n\t\t\ttestPartFilesWithStringBucketer(testHarness, outDir, \".prefix-0-0.ext.inprogress\", \".prefix-0-1.ext.inprogress\");\n\t\t}\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/sink/filesystem/BulkWriterTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"901438b65bfbf3874cec60ea17b0c3b05bdd8477","commitMessage":"@@@[FLINK-13850] refactor part file configurations into a single method\nCloses #10225\n","date":"2019-11-17 19:53:50","modifiedFileCount":"11","status":"M","submitter":"eskabetxe"}]
