[{"authorTime":"2020-08-25 19:19:04","codes":[{"authorDate":"2020-08-25 19:19:04","commitOrder":1,"curCode":"\tpublic SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n\t\tConfiguration hbaseClientConf = HBaseConfigurationUtil.getHBaseConfiguration();\n\t\thbaseClientConf.set(HConstants.ZOOKEEPER_QUORUM, hbaseOptions.getZkQuorum());\n\t\thbaseOptions.getZkNodeParent().ifPresent(v -> hbaseClientConf.set(HConstants.ZOOKEEPER_ZNODE_PARENT, v));\n\t\tHBaseSinkFunction<RowData> sinkFunction = new HBaseSinkFunction<>(\n\t\t\thbaseOptions.getTableName(),\n\t\t\thbaseClientConf,\n\t\t\tnew RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n\t\t\twriteOptions.getBufferFlushMaxSizeInBytes(),\n\t\t\twriteOptions.getBufferFlushMaxRows(),\n\t\t\twriteOptions.getBufferFlushIntervalMillis());\n\t\treturn SinkFunctionProvider.of(sinkFunction);\n\t}\n","date":"2020-09-28 22:08:46","endLine":73,"groupId":"15120","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getSinkRuntimeProvider","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0c/2e8ee5dbd7e017b4ddcf6ed8af434c3c8ec848.src","preCode":"\tpublic SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n\t\tConfiguration hbaseClientConf = HBaseConfigurationUtil.getHBaseConfiguration();\n\t\thbaseClientConf.set(HConstants.ZOOKEEPER_QUORUM, hbaseOptions.getZkQuorum());\n\t\thbaseOptions.getZkNodeParent().ifPresent(v -> hbaseClientConf.set(HConstants.ZOOKEEPER_ZNODE_PARENT, v));\n\t\tHBaseSinkFunction<RowData> sinkFunction = new HBaseSinkFunction<>(\n\t\t\thbaseOptions.getTableName(),\n\t\t\thbaseClientConf,\n\t\t\tnew RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n\t\t\twriteOptions.getBufferFlushMaxSizeInBytes(),\n\t\t\twriteOptions.getBufferFlushMaxRows(),\n\t\t\twriteOptions.getBufferFlushIntervalMillis());\n\t\treturn SinkFunctionProvider.of(sinkFunction);\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-1.4/src/main/java/org/apache/flink/connector/hbase1/sink/HBaseDynamicTableSink.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2020-08-25 19:19:04","commitOrder":1,"curCode":"\tpublic SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n\t\tHBaseSinkFunction<RowData> sinkFunction = new HBaseSinkFunction<>(\n\t\t\thbaseTableName,\n\t\t\thbaseConf,\n\t\t\tnew RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n\t\t\twriteOptions.getBufferFlushMaxSizeInBytes(),\n\t\t\twriteOptions.getBufferFlushMaxRows(),\n\t\t\twriteOptions.getBufferFlushIntervalMillis());\n\t\treturn SinkFunctionProvider.of(sinkFunction);\n\t}\n","date":"2020-09-28 22:08:46","endLine":71,"groupId":"15120","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getSinkRuntimeProvider","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/30/e1b793aa6be209f785e433cf9175a4038e126b.src","preCode":"\tpublic SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n\t\tHBaseSinkFunction<RowData> sinkFunction = new HBaseSinkFunction<>(\n\t\t\thbaseTableName,\n\t\t\thbaseConf,\n\t\t\tnew RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n\t\t\twriteOptions.getBufferFlushMaxSizeInBytes(),\n\t\t\twriteOptions.getBufferFlushMaxRows(),\n\t\t\twriteOptions.getBufferFlushIntervalMillis());\n\t\treturn SinkFunctionProvider.of(sinkFunction);\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-2.2/src/main/java/org/apache/flink/connector/hbase2/sink/HBaseDynamicTableSink.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"}],"commitId":"16c97c8db718219ed036218faf3519541f24b430","commitMessage":"@@@[FLINK-18795][hbase] Support for HBase 2\n\nThis closes #13128\n","date":"2020-09-28 22:08:46","modifiedFileCount":"5","status":"B","submitter":"Miklos Gergely"},{"authorTime":"2020-11-05 15:18:31","codes":[{"authorDate":"2020-11-05 15:18:31","commitOrder":2,"curCode":"\tpublic SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n\t\tConfiguration hbaseClientConf = HBaseConfigurationUtil.getHBaseConfiguration();\n\t\thbaseClientConf.set(HConstants.ZOOKEEPER_QUORUM, hbaseOptions.getZkQuorum());\n\t\thbaseOptions.getZkNodeParent().ifPresent(v -> hbaseClientConf.set(HConstants.ZOOKEEPER_ZNODE_PARENT, v));\n\t\tHBaseSinkFunction<RowData> sinkFunction = new HBaseSinkFunction<>(\n\t\t\thbaseOptions.getTableName(),\n\t\t\thbaseClientConf,\n\t\t\tnew RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n\t\t\twriteOptions.getBufferFlushMaxSizeInBytes(),\n\t\t\twriteOptions.getBufferFlushMaxRows(),\n\t\t\twriteOptions.getBufferFlushIntervalMillis());\n\t\treturn SinkFunctionProvider.of(sinkFunction, writeOptions.getParallelism());\n\t}\n","date":"2020-11-18 22:41:48","endLine":73,"groupId":"15120","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getSinkRuntimeProvider","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/54/a32e3df2db92705949d768aaa13f5da1692b0e.src","preCode":"\tpublic SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n\t\tConfiguration hbaseClientConf = HBaseConfigurationUtil.getHBaseConfiguration();\n\t\thbaseClientConf.set(HConstants.ZOOKEEPER_QUORUM, hbaseOptions.getZkQuorum());\n\t\thbaseOptions.getZkNodeParent().ifPresent(v -> hbaseClientConf.set(HConstants.ZOOKEEPER_ZNODE_PARENT, v));\n\t\tHBaseSinkFunction<RowData> sinkFunction = new HBaseSinkFunction<>(\n\t\t\thbaseOptions.getTableName(),\n\t\t\thbaseClientConf,\n\t\t\tnew RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n\t\t\twriteOptions.getBufferFlushMaxSizeInBytes(),\n\t\t\twriteOptions.getBufferFlushMaxRows(),\n\t\t\twriteOptions.getBufferFlushIntervalMillis());\n\t\treturn SinkFunctionProvider.of(sinkFunction);\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-1.4/src/main/java/org/apache/flink/connector/hbase1/sink/HBaseDynamicTableSink.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2020-11-05 15:18:31","commitOrder":2,"curCode":"\tpublic SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n\t\tHBaseSinkFunction<RowData> sinkFunction = new HBaseSinkFunction<>(\n\t\t\thbaseTableName,\n\t\t\thbaseConf,\n\t\t\tnew RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n\t\t\twriteOptions.getBufferFlushMaxSizeInBytes(),\n\t\t\twriteOptions.getBufferFlushMaxRows(),\n\t\t\twriteOptions.getBufferFlushIntervalMillis());\n\t\treturn SinkFunctionProvider.of(sinkFunction, writeOptions.getParallelism());\n\t}\n","date":"2020-11-18 22:41:48","endLine":71,"groupId":"15120","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getSinkRuntimeProvider","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e8/4f447faa2bd1e943e54a11bc6172a8fab97755.src","preCode":"\tpublic SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n\t\tHBaseSinkFunction<RowData> sinkFunction = new HBaseSinkFunction<>(\n\t\t\thbaseTableName,\n\t\t\thbaseConf,\n\t\t\tnew RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n\t\t\twriteOptions.getBufferFlushMaxSizeInBytes(),\n\t\t\twriteOptions.getBufferFlushMaxRows(),\n\t\t\twriteOptions.getBufferFlushIntervalMillis());\n\t\treturn SinkFunctionProvider.of(sinkFunction);\n\t}\n","realPath":"flink-connectors/flink-connector-hbase-2.2/src/main/java/org/apache/flink/connector/hbase2/sink/HBaseDynamicTableSink.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"a0398ff138351280e605e0abde3310bb19033676","commitMessage":"@@@[FLINK-19946][hbase] Add sink parallelism option for HBase connector\n\nThis closes #13933\n","date":"2020-11-18 22:41:48","modifiedFileCount":"7","status":"M","submitter":"zhuxiaoshang"},{"authorTime":"2021-01-14 20:26:32","codes":[{"authorDate":"2021-01-14 20:26:32","commitOrder":3,"curCode":"    public SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n        HBaseSinkFunction<RowData> sinkFunction =\n                new HBaseSinkFunction<>(\n                        tableName,\n                        hbaseConf,\n                        new RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n                        writeOptions.getBufferFlushMaxSizeInBytes(),\n                        writeOptions.getBufferFlushMaxRows(),\n                        writeOptions.getBufferFlushIntervalMillis());\n        return SinkFunctionProvider.of(sinkFunction, writeOptions.getParallelism());\n    }\n","date":"2021-01-14 20:26:32","endLine":69,"groupId":"10788","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"getSinkRuntimeProvider","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2b/9e87c5d1ec0bed5be323a8638ee1b245cdf488.src","preCode":"    public SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n        Configuration hbaseClientConf = HBaseConfigurationUtil.getHBaseConfiguration();\n        hbaseClientConf.set(HConstants.ZOOKEEPER_QUORUM, hbaseOptions.getZkQuorum());\n        hbaseOptions\n                .getZkNodeParent()\n                .ifPresent(v -> hbaseClientConf.set(HConstants.ZOOKEEPER_ZNODE_PARENT, v));\n        HBaseSinkFunction<RowData> sinkFunction =\n                new HBaseSinkFunction<>(\n                        hbaseOptions.getTableName(),\n                        hbaseClientConf,\n                        new RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n                        writeOptions.getBufferFlushMaxSizeInBytes(),\n                        writeOptions.getBufferFlushMaxRows(),\n                        writeOptions.getBufferFlushIntervalMillis());\n        return SinkFunctionProvider.of(sinkFunction, writeOptions.getParallelism());\n    }\n","realPath":"flink-connectors/flink-connector-hbase-1.4/src/main/java/org/apache/flink/connector/hbase1/sink/HBaseDynamicTableSink.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2021-01-14 20:26:32","commitOrder":3,"curCode":"    public SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n        HBaseSinkFunction<RowData> sinkFunction =\n                new HBaseSinkFunction<>(\n                        tableName,\n                        hbaseConf,\n                        new RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n                        writeOptions.getBufferFlushMaxSizeInBytes(),\n                        writeOptions.getBufferFlushMaxRows(),\n                        writeOptions.getBufferFlushIntervalMillis());\n        return SinkFunctionProvider.of(sinkFunction, writeOptions.getParallelism());\n    }\n","date":"2021-01-14 20:26:32","endLine":70,"groupId":"10788","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"getSinkRuntimeProvider","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/6e/a9ba3ebc18898ce780ab12c6a37eb8a65cf6a0.src","preCode":"    public SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n        HBaseSinkFunction<RowData> sinkFunction =\n                new HBaseSinkFunction<>(\n                        hbaseTableName,\n                        hbaseConf,\n                        new RowDataToMutationConverter(hbaseTableSchema, nullStringLiteral),\n                        writeOptions.getBufferFlushMaxSizeInBytes(),\n                        writeOptions.getBufferFlushMaxRows(),\n                        writeOptions.getBufferFlushIntervalMillis());\n        return SinkFunctionProvider.of(sinkFunction, writeOptions.getParallelism());\n    }\n","realPath":"flink-connectors/flink-connector-hbase-2.2/src/main/java/org/apache/flink/connector/hbase2/sink/HBaseDynamicTableSink.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"39dbd75b1c7e063ca4f6bb771e21f909e3fd15ff","commitMessage":"@@@[FLINK-20812][hbase] Support 'properties.*' option to pass through all the HBase properties\n\nThis closes #14536","date":"2021-01-14 20:26:32","modifiedFileCount":"14","status":"M","submitter":"zhaown"}]
