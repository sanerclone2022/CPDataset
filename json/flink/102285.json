[{"authorTime":"2018-11-26 23:11:04","codes":[{"authorDate":"2020-05-06 11:40:18","commitOrder":2,"curCode":"\tpublic RowData deserialize(byte[] message) throws IOException {\n\t\ttry {\n\t\t\tfinal JsonNode root = objectReader.readValue(message);\n\t\t\treturn (RowData) runtimeConverter.convert(root);\n\t\t} catch (Throwable t) {\n\t\t\tif (ignoreParseErrors) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthrow new IOException(\"Failed to deserialize CSV row '\" + new String(message) + \"'.\", t);\n\t\t}\n\t}\n","date":"2020-05-06 11:40:18","endLine":174,"groupId":"15972","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deserialize","params":"(byte[]message)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/7e/b9fe03c248806b4119f475636b47af12e52a6d.src","preCode":"\tpublic RowData deserialize(byte[] message) throws IOException {\n\t\ttry {\n\t\t\tfinal JsonNode root = objectReader.readValue(message);\n\t\t\treturn (RowData) runtimeConverter.convert(root);\n\t\t} catch (Throwable t) {\n\t\t\tif (ignoreParseErrors) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthrow new IOException(\"Failed to deserialize CSV row '\" + new String(message) + \"'.\", t);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvRowDataDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"},{"authorDate":"2018-11-26 23:11:04","commitOrder":2,"curCode":"\tpublic Row deserialize(byte[] message) throws IOException {\n\t\ttry {\n\t\t\tfinal JsonNode root = objectReader.readValue(message);\n\t\t\treturn (Row) runtimeConverter.convert(root);\n\t\t} catch (Throwable t) {\n\t\t\tif (ignoreParseErrors) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthrow new IOException(\"Failed to deserialize CSV row '\" + new String(message) + \"'.\", t);\n\t\t}\n\t}\n","date":"2019-02-23 01:34:13","endLine":168,"groupId":"15972","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deserialize","params":"(byte[]message)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8c/fcab26a8d54fb6f37a0941eea45daad6c3a58a.src","preCode":"\tpublic Row deserialize(byte[] message) throws IOException {\n\t\ttry {\n\t\t\tfinal JsonNode root = objectReader.readValue(message);\n\t\t\treturn (Row) runtimeConverter.convert(root);\n\t\t} catch (Throwable t) {\n\t\t\tif (ignoreParseErrors) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthrow new IOException(\"Failed to deserialize CSV row '\" + new String(message) + \"'.\", t);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvRowDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"NB"}],"commitId":"b1e436a109c6473b794f02ec0a853d1ae6df6c83","commitMessage":"@@@[FLINK-17462][format][csv] Support CSV serialization and deseriazation schema for RowData type\n\nThis closes #11962","date":"2020-05-06 11:40:18","modifiedFileCount":"1","status":"M","submitter":"Jark Wu"},{"authorTime":"2018-11-26 23:11:04","codes":[{"authorDate":"2021-01-08 22:31:32","commitOrder":3,"curCode":"    public RowData deserialize(@Nullable byte[] message) throws IOException {\n        if (message == null) {\n            return null;\n        }\n        try {\n            final JsonNode root = objectReader.readValue(message);\n            return (RowData) runtimeConverter.convert(root);\n        } catch (Throwable t) {\n            if (ignoreParseErrors) {\n                return null;\n            }\n            throw new IOException(\n                    \"Failed to deserialize CSV row '\" + new String(message) + \"'.\", t);\n        }\n    }\n","date":"2021-01-08 22:31:32","endLine":159,"groupId":"15972","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"deserialize","params":"(@Nullablebyte[]message)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/aa/b4dd50a0a91decc77269ada34bfaa5d6d22a34.src","preCode":"    public RowData deserialize(byte[] message) throws IOException {\n        try {\n            final JsonNode root = objectReader.readValue(message);\n            return (RowData) runtimeConverter.convert(root);\n        } catch (Throwable t) {\n            if (ignoreParseErrors) {\n                return null;\n            }\n            throw new IOException(\n                    \"Failed to deserialize CSV row '\" + new String(message) + \"'.\", t);\n        }\n    }\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvRowDataDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2018-11-26 23:11:04","commitOrder":3,"curCode":"\tpublic Row deserialize(byte[] message) throws IOException {\n\t\ttry {\n\t\t\tfinal JsonNode root = objectReader.readValue(message);\n\t\t\treturn (Row) runtimeConverter.convert(root);\n\t\t} catch (Throwable t) {\n\t\t\tif (ignoreParseErrors) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthrow new IOException(\"Failed to deserialize CSV row '\" + new String(message) + \"'.\", t);\n\t\t}\n\t}\n","date":"2019-02-23 01:34:13","endLine":168,"groupId":"15972","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deserialize","params":"(byte[]message)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8c/fcab26a8d54fb6f37a0941eea45daad6c3a58a.src","preCode":"\tpublic Row deserialize(byte[] message) throws IOException {\n\t\ttry {\n\t\t\tfinal JsonNode root = objectReader.readValue(message);\n\t\t\treturn (Row) runtimeConverter.convert(root);\n\t\t} catch (Throwable t) {\n\t\t\tif (ignoreParseErrors) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthrow new IOException(\"Failed to deserialize CSV row '\" + new String(message) + \"'.\", t);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvRowDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"N"}],"commitId":"241185a40118cfe3087eb4f7fc14203afe4073cc","commitMessage":"@@@[FLINK-20321][formats] Fix NPE when using Avro/Json/Csv formats to deserialize null input (#14539)\n\nThis closes #14539\n\nCo-authored-by: Alex Wang <alex.wang.dev@gmail.com>","date":"2021-01-08 22:31:32","modifiedFileCount":"12","status":"M","submitter":"Xue Wang"},{"authorTime":"2018-11-26 23:11:04","codes":[{"authorDate":"2021-06-03 15:26:39","commitOrder":4,"curCode":"    public RowData deserialize(@Nullable byte[] message) throws IOException {\n        if (message == null) {\n            return null;\n        }\n        try {\n            final JsonNode root = objectReader.readValue(message);\n            return (RowData) runtimeConverter.convert(root);\n        } catch (Throwable t) {\n            if (ignoreParseErrors) {\n                return null;\n            }\n            throw new IOException(\n                    String.format(\"Failed to deserialize CSV row '%s'.\", new String(message)), t);\n        }\n    }\n","date":"2021-06-08 15:03:38","endLine":164,"groupId":"102285","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"deserialize","params":"(@Nullablebyte[]message)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/2d/58007a0b0e68f9d002b4317f45ebbbcfd0d96e.src","preCode":"    public RowData deserialize(@Nullable byte[] message) throws IOException {\n        if (message == null) {\n            return null;\n        }\n        try {\n            final JsonNode root = objectReader.readValue(message);\n            return (RowData) runtimeConverter.convert(root);\n        } catch (Throwable t) {\n            if (ignoreParseErrors) {\n                return null;\n            }\n            throw new IOException(\n                    \"Failed to deserialize CSV row '\" + new String(message) + \"'.\", t);\n        }\n    }\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvRowDataDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2018-11-26 23:11:04","commitOrder":4,"curCode":"\tpublic Row deserialize(byte[] message) throws IOException {\n\t\ttry {\n\t\t\tfinal JsonNode root = objectReader.readValue(message);\n\t\t\treturn (Row) runtimeConverter.convert(root);\n\t\t} catch (Throwable t) {\n\t\t\tif (ignoreParseErrors) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthrow new IOException(\"Failed to deserialize CSV row '\" + new String(message) + \"'.\", t);\n\t\t}\n\t}\n","date":"2019-02-23 01:34:13","endLine":168,"groupId":"102285","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"deserialize","params":"(byte[]message)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/8c/fcab26a8d54fb6f37a0941eea45daad6c3a58a.src","preCode":"\tpublic Row deserialize(byte[] message) throws IOException {\n\t\ttry {\n\t\t\tfinal JsonNode root = objectReader.readValue(message);\n\t\t\treturn (Row) runtimeConverter.convert(root);\n\t\t} catch (Throwable t) {\n\t\t\tif (ignoreParseErrors) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthrow new IOException(\"Failed to deserialize CSV row '\" + new String(message) + \"'.\", t);\n\t\t}\n\t}\n","realPath":"flink-formats/flink-csv/src/main/java/org/apache/flink/formats/csv/CsvRowDeserializationSchema.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"N"}],"commitId":"16452fbb57c11418796912251152947601572106","commitMessage":"@@@[FLINK-13538][formats] Figure out wrong field name when serializer/deserializer throw exceptions while doing serializing/deserializing for json and csv format.\n\nThis closes #16068\n","date":"2021-06-08 15:03:38","modifiedFileCount":"12","status":"M","submitter":"??"}]
