[{"authorTime":"2019-12-14 03:52:03","codes":[{"authorDate":"2019-12-14 03:52:03","commitOrder":1,"curCode":"\tpublic void testCreateGenericTable() {\n\t\tTable hiveTable = HiveCatalog.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tnew FileSystem().path(\"/test_path\").toProperties(),\n\t\t\t\tnull\n\t\t\t));\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(\"true\"));\n\t\tassertTrue(prop.keySet().stream().allMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","date":"2019-12-14 12:09:47","endLine":60,"groupId":"39271","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateGenericTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/23/ccb4545d07db27f1ba4a70b4ddf684f2b83ce9.src","preCode":"\tpublic void testCreateGenericTable() {\n\t\tTable hiveTable = HiveCatalog.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tnew FileSystem().path(\"/test_path\").toProperties(),\n\t\t\t\tnull\n\t\t\t));\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(\"true\"));\n\t\tassertTrue(prop.keySet().stream().allMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2019-12-14 03:52:03","commitOrder":1,"curCode":"\tpublic void testCreateHiveTable() {\n\t\tMap<String, String> map = new HashMap<>(new FileSystem().path(\"/test_path\").toProperties());\n\n\t\tmap.put(CatalogConfig.IS_GENERIC, String.valueOf(false));\n\n\t\tTable hiveTable = HiveCatalog.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tmap,\n\t\t\t\tnull\n\t\t\t));\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(false));\n\t\tassertTrue(prop.keySet().stream().noneMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","date":"2019-12-14 12:09:47","endLine":79,"groupId":"43720","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateHiveTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/23/ccb4545d07db27f1ba4a70b4ddf684f2b83ce9.src","preCode":"\tpublic void testCreateHiveTable() {\n\t\tMap<String, String> map = new HashMap<>(new FileSystem().path(\"/test_path\").toProperties());\n\n\t\tmap.put(CatalogConfig.IS_GENERIC, String.valueOf(false));\n\n\t\tTable hiveTable = HiveCatalog.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tmap,\n\t\t\t\tnull\n\t\t\t));\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(false));\n\t\tassertTrue(prop.keySet().stream().noneMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"}],"commitId":"940bdfc41a2d78ba972541c537925d102ccdc87f","commitMessage":"@@@[FLINK-15234][table][hive] hive table created from flink catalog table cannot have null properties in parameters\n","date":"2019-12-14 12:09:47","modifiedFileCount":"2","status":"B","submitter":"bowen.li"},{"authorTime":"2020-05-13 11:00:13","codes":[{"authorDate":"2020-05-13 11:00:13","commitOrder":2,"curCode":"\tpublic void testCreateGenericTable() {\n\t\tTable hiveTable = HiveCatalog.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tnew FileSystem().path(\"/test_path\").toProperties(),\n\t\t\t\tnull\n\t\t\t),\n\t\t\tHiveTestUtils.createHiveConf());\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(\"true\"));\n\t\tassertTrue(prop.keySet().stream().allMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","date":"2020-05-13 11:00:13","endLine":61,"groupId":"39271","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateGenericTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/44/a5e5e51e8b9776914aca3c4f15bef4fe926574.src","preCode":"\tpublic void testCreateGenericTable() {\n\t\tTable hiveTable = HiveCatalog.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tnew FileSystem().path(\"/test_path\").toProperties(),\n\t\t\t\tnull\n\t\t\t));\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(\"true\"));\n\t\tassertTrue(prop.keySet().stream().allMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2020-05-13 11:00:13","commitOrder":2,"curCode":"\tpublic void testCreateHiveTable() {\n\t\tMap<String, String> map = new HashMap<>(new FileSystem().path(\"/test_path\").toProperties());\n\n\t\tmap.put(CatalogConfig.IS_GENERIC, String.valueOf(false));\n\n\t\tTable hiveTable = HiveCatalog.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tmap,\n\t\t\t\tnull\n\t\t\t),\n\t\t\tHiveTestUtils.createHiveConf());\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(false));\n\t\tassertTrue(prop.keySet().stream().noneMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","date":"2020-05-13 11:00:13","endLine":81,"groupId":"43720","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateHiveTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/44/a5e5e51e8b9776914aca3c4f15bef4fe926574.src","preCode":"\tpublic void testCreateHiveTable() {\n\t\tMap<String, String> map = new HashMap<>(new FileSystem().path(\"/test_path\").toProperties());\n\n\t\tmap.put(CatalogConfig.IS_GENERIC, String.valueOf(false));\n\n\t\tTable hiveTable = HiveCatalog.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tmap,\n\t\t\t\tnull\n\t\t\t));\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(false));\n\t\tassertTrue(prop.keySet().stream().noneMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"78b516ca366e303a0e541aa69bebe1a15ad7a3c8","commitMessage":"@@@[FLINK-17431][sql-parser-hive][hive] Implement table DDLs for Hive di? (#11935)\n\n* [FLINK-17431][sql-parser-hive][hive] Implement table DDLs for Hive dialect part 1\n\n* address comments and fix collection delim\n\n* renaming\n\n* rebase\n\n* remove unused property\n\n* don't support bytes\n\n* add enums for hive constraint traits\n\n* store NN col names and add test\n\n* disallow varchar w/o precision\n\n* fix unparse for describe table\n\n* fix unparse row format\n\n* fix col type unparse\n\n* address comments","date":"2020-05-13 11:00:13","modifiedFileCount":"14","status":"M","submitter":"Rui Li"},{"authorTime":"2020-05-17 10:10:27","codes":[{"authorDate":"2020-05-17 10:10:27","commitOrder":3,"curCode":"\tpublic void testCreateGenericTable() {\n\t\tTable hiveTable = HiveTableUtil.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tnew FileSystem().path(\"/test_path\").toProperties(),\n\t\t\t\tnull\n\t\t\t),\n\t\t\tHiveTestUtils.createHiveConf());\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(\"true\"));\n\t\tassertTrue(prop.keySet().stream().allMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","date":"2020-05-17 10:10:27","endLine":62,"groupId":"39271","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateGenericTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e6/7655e9e7fd72059210d3487d8026f939f1592a.src","preCode":"\tpublic void testCreateGenericTable() {\n\t\tTable hiveTable = HiveCatalog.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tnew FileSystem().path(\"/test_path\").toProperties(),\n\t\t\t\tnull\n\t\t\t),\n\t\t\tHiveTestUtils.createHiveConf());\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(\"true\"));\n\t\tassertTrue(prop.keySet().stream().allMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2020-05-17 10:10:27","commitOrder":3,"curCode":"\tpublic void testCreateHiveTable() {\n\t\tMap<String, String> map = new HashMap<>(new FileSystem().path(\"/test_path\").toProperties());\n\n\t\tmap.put(CatalogConfig.IS_GENERIC, String.valueOf(false));\n\n\t\tTable hiveTable = HiveTableUtil.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tmap,\n\t\t\t\tnull\n\t\t\t),\n\t\t\tHiveTestUtils.createHiveConf());\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(false));\n\t\tassertTrue(prop.keySet().stream().noneMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","date":"2020-05-17 10:10:27","endLine":82,"groupId":"43720","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateHiveTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/e6/7655e9e7fd72059210d3487d8026f939f1592a.src","preCode":"\tpublic void testCreateHiveTable() {\n\t\tMap<String, String> map = new HashMap<>(new FileSystem().path(\"/test_path\").toProperties());\n\n\t\tmap.put(CatalogConfig.IS_GENERIC, String.valueOf(false));\n\n\t\tTable hiveTable = HiveCatalog.instantiateHiveTable(\n\t\t\tnew ObjectPath(\"test\", \"test\"),\n\t\t\tnew CatalogTableImpl(\n\t\t\t\tschema,\n\t\t\t\tmap,\n\t\t\t\tnull\n\t\t\t),\n\t\t\tHiveTestUtils.createHiveConf());\n\n\t\tMap<String, String> prop = hiveTable.getParameters();\n\t\tassertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(false));\n\t\tassertTrue(prop.keySet().stream().noneMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"2bbf8ed32a7fc29dd5f0c941f451bd3a7a6d0d1b","commitMessage":"@@@[FLINK-17448][sql-parser-hive] Implement alter DDL for Hive dialect\n\n\nThis closes #12108","date":"2020-05-17 10:10:27","modifiedFileCount":"13","status":"M","submitter":"Rui Li"},{"authorTime":"2021-03-05 18:21:03","codes":[{"authorDate":"2021-03-05 18:21:03","commitOrder":4,"curCode":"    public void testCreateGenericTable() {\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(\n                                schema, new FileSystem().path(\"/test_path\").toProperties(), null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertEquals(prop.remove(CatalogPropertiesUtil.IS_GENERIC), String.valueOf(\"true\"));\n        assertTrue(\n                prop.keySet().stream()\n                        .allMatch(k -> k.startsWith(CatalogPropertiesUtil.FLINK_PROPERTY_PREFIX)));\n    }\n","date":"2021-03-11 17:29:27","endLine":61,"groupId":"39271","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateGenericTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0c/69c5b36e1cdb3abb9ca7f697ec463c8f44830e.src","preCode":"    public void testCreateGenericTable() {\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(\n                                schema, new FileSystem().path(\"/test_path\").toProperties(), null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(\"true\"));\n        assertTrue(\n                prop.keySet().stream()\n                        .allMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n    }\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2021-03-05 18:21:03","commitOrder":4,"curCode":"    public void testCreateHiveTable() {\n        Map<String, String> map = new HashMap<>(new FileSystem().path(\"/test_path\").toProperties());\n\n        map.put(CatalogPropertiesUtil.IS_GENERIC, String.valueOf(false));\n\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(schema, map, null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertEquals(prop.remove(CatalogPropertiesUtil.IS_GENERIC), String.valueOf(false));\n        assertTrue(\n                prop.keySet().stream()\n                        .noneMatch(k -> k.startsWith(CatalogPropertiesUtil.FLINK_PROPERTY_PREFIX)));\n    }\n","date":"2021-03-11 17:29:27","endLine":80,"groupId":"25781","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateHiveTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0c/69c5b36e1cdb3abb9ca7f697ec463c8f44830e.src","preCode":"    public void testCreateHiveTable() {\n        Map<String, String> map = new HashMap<>(new FileSystem().path(\"/test_path\").toProperties());\n\n        map.put(CatalogConfig.IS_GENERIC, String.valueOf(false));\n\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(schema, map, null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertEquals(prop.remove(CatalogConfig.IS_GENERIC), String.valueOf(false));\n        assertTrue(\n                prop.keySet().stream()\n                        .noneMatch(k -> k.startsWith(CatalogConfig.FLINK_PROPERTY_PREFIX)));\n    }\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"9035273e2cbde2296fbe3e8e03565d50594a641e","commitMessage":"@@@[hotfix][table-common] Move CatalogConfig to CatalogPropertiesUtil\n","date":"2021-03-11 17:29:27","modifiedFileCount":"19","status":"M","submitter":"Timo Walther"},{"authorTime":"2021-04-15 09:12:16","codes":[{"authorDate":"2021-04-15 09:12:16","commitOrder":5,"curCode":"    public void testCreateGenericTable() {\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(\n                                schema, new FileSystem().path(\"/test_path\").toProperties(), null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertFalse(HiveCatalog.isHiveTable(prop));\n        assertTrue(\n                prop.keySet().stream()\n                        .allMatch(k -> k.startsWith(CatalogPropertiesUtil.FLINK_PROPERTY_PREFIX)));\n    }\n","date":"2021-04-15 09:12:16","endLine":82,"groupId":"43150","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateGenericTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/05/6036427ba27dfbfb2080479bf6ae3375169153.src","preCode":"    public void testCreateGenericTable() {\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(\n                                schema, new FileSystem().path(\"/test_path\").toProperties(), null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertEquals(prop.remove(CatalogPropertiesUtil.IS_GENERIC), String.valueOf(\"true\"));\n        assertTrue(\n                prop.keySet().stream()\n                        .allMatch(k -> k.startsWith(CatalogPropertiesUtil.FLINK_PROPERTY_PREFIX)));\n    }\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2021-04-15 09:12:16","commitOrder":5,"curCode":"    public void testCreateHiveTable() {\n        Map<String, String> map = new HashMap<>(new FileSystem().path(\"/test_path\").toProperties());\n\n        map.put(FactoryUtil.CONNECTOR.key(), SqlCreateHiveTable.IDENTIFIER);\n\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(schema, map, null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertTrue(HiveCatalog.isHiveTable(prop));\n        assertTrue(\n                prop.keySet().stream()\n                        .noneMatch(k -> k.startsWith(CatalogPropertiesUtil.FLINK_PROPERTY_PREFIX)));\n    }\n","date":"2021-04-15 09:12:16","endLine":101,"groupId":"43150","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateHiveTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/05/6036427ba27dfbfb2080479bf6ae3375169153.src","preCode":"    public void testCreateHiveTable() {\n        Map<String, String> map = new HashMap<>(new FileSystem().path(\"/test_path\").toProperties());\n\n        map.put(CatalogPropertiesUtil.IS_GENERIC, String.valueOf(false));\n\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(schema, map, null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertEquals(prop.remove(CatalogPropertiesUtil.IS_GENERIC), String.valueOf(false));\n        assertTrue(\n                prop.keySet().stream()\n                        .noneMatch(k -> k.startsWith(CatalogPropertiesUtil.FLINK_PROPERTY_PREFIX)));\n    }\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"5b9e7882207357120717966d8bf7efd53c53ede5","commitMessage":"@@@[FLINK-21660][hive] Stop using is_generic to differentiate hive and flink tables (#15155)\n\n","date":"2021-04-15 09:12:16","modifiedFileCount":"24","status":"M","submitter":"Rui Li"},{"authorTime":"2021-07-29 16:10:31","codes":[{"authorDate":"2021-07-29 16:10:31","commitOrder":6,"curCode":"    public void testCreateGenericTable() {\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(\n                                schema, getLegacyFileSystemConnectorOptions(\"/test_path\"), null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertFalse(HiveCatalog.isHiveTable(prop));\n        assertTrue(\n                prop.keySet().stream()\n                        .allMatch(k -> k.startsWith(CatalogPropertiesUtil.FLINK_PROPERTY_PREFIX)));\n    }\n","date":"2021-08-04 19:42:24","endLine":83,"groupId":"101034","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"testCreateGenericTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/66/eb1bd08689279aa33ec9cf53332cb479d07aa7.src","preCode":"    public void testCreateGenericTable() {\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(\n                                schema, new FileSystem().path(\"/test_path\").toProperties(), null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertFalse(HiveCatalog.isHiveTable(prop));\n        assertTrue(\n                prop.keySet().stream()\n                        .allMatch(k -> k.startsWith(CatalogPropertiesUtil.FLINK_PROPERTY_PREFIX)));\n    }\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2021-07-29 16:10:31","commitOrder":6,"curCode":"    public void testCreateHiveTable() {\n        Map<String, String> options = getLegacyFileSystemConnectorOptions(\"/test_path\");\n        options.put(FactoryUtil.CONNECTOR.key(), SqlCreateHiveTable.IDENTIFIER);\n\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(schema, options, null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertTrue(HiveCatalog.isHiveTable(prop));\n        assertTrue(\n                prop.keySet().stream()\n                        .noneMatch(k -> k.startsWith(CatalogPropertiesUtil.FLINK_PROPERTY_PREFIX)));\n    }\n","date":"2021-08-04 19:42:24","endLine":101,"groupId":"101034","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"testCreateHiveTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/66/eb1bd08689279aa33ec9cf53332cb479d07aa7.src","preCode":"    public void testCreateHiveTable() {\n        Map<String, String> map = new HashMap<>(new FileSystem().path(\"/test_path\").toProperties());\n\n        map.put(FactoryUtil.CONNECTOR.key(), SqlCreateHiveTable.IDENTIFIER);\n\n        Table hiveTable =\n                HiveTableUtil.instantiateHiveTable(\n                        new ObjectPath(\"test\", \"test\"),\n                        new CatalogTableImpl(schema, map, null),\n                        HiveTestUtils.createHiveConf());\n\n        Map<String, String> prop = hiveTable.getParameters();\n        assertTrue(HiveCatalog.isHiveTable(prop));\n        assertTrue(\n                prop.keySet().stream()\n                        .noneMatch(k -> k.startsWith(CatalogPropertiesUtil.FLINK_PROPERTY_PREFIX)));\n    }\n","realPath":"flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"716b9f76dc68d1ad0c8b71ec1723913597d3011b","commitMessage":"@@@[FLINK-23513] Deprecate legacy CSV connector\n\nWe don't remove the connector itself as it is still used in tests.\nHowever.  we can remove the descriptors and mark it deprecated.\n","date":"2021-08-04 19:42:24","modifiedFileCount":"10","status":"M","submitter":"Ingo B?rk"}]
