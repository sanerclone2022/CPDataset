[{"authorTime":"2017-10-27 01:11:03","codes":[{"authorDate":"2017-10-27 01:11:03","commitOrder":1,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend2<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend2<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<VoidNamespace, Long> listState = longHeapKeyedStateBackend\n\t\t\t.createListState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2017-10-29 23:10:32","endLine":127,"groupId":"25719","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/07/517ab0c0375a5a04b9a19a66cad58525f09394.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend2<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend2<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<VoidNamespace, Long> listState = longHeapKeyedStateBackend\n\t\t\t.createListState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"},{"authorDate":"2017-10-27 01:11:03","commitOrder":1,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<VoidNamespace, Long, String> mapState = (InternalMapState<VoidNamespace, Long, String>)\n\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2017-10-29 23:10:32","endLine":167,"groupId":"25717","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/07/517ab0c0375a5a04b9a19a66cad58525f09394.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<VoidNamespace, Long, String> mapState = (InternalMapState<VoidNamespace, Long, String>)\n\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"B"}],"commitId":"6b8f7dc2d818cbe87bdfbe8852cfec5507f77a5a","commitMessage":"@@@[FLINK-7880][QS] Fix QS test instabilities.\n","date":"2017-10-29 23:10:32","modifiedFileCount":"2","status":"B","submitter":"kkloudas"},{"authorTime":"2018-02-06 21:44:01","codes":[{"authorDate":"2017-10-27 01:11:03","commitOrder":2,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend2<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend2<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<VoidNamespace, Long> listState = longHeapKeyedStateBackend\n\t\t\t.createListState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2017-10-29 23:10:32","endLine":127,"groupId":"25719","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/07/517ab0c0375a5a04b9a19a66cad58525f09394.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend2<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend2<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<VoidNamespace, Long> listState = longHeapKeyedStateBackend\n\t\t\t.createListState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"},{"authorDate":"2018-02-06 21:44:01","commitOrder":2,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled());\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<VoidNamespace, Long, String> mapState = (InternalMapState<VoidNamespace, Long, String>)\n\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-02-25 22:14:21","endLine":170,"groupId":"41144","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/dd/75dd6ed34fd5cfbfe475348aa64fa75072ba9e.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<VoidNamespace, Long, String> mapState = (InternalMapState<VoidNamespace, Long, String>)\n\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"df3e6bb7627db03635febd48eff4c10032b668ef","commitMessage":"@@@[FLINK-8360][checkpointing] Implement state storage for local recovery and integrate with task lifecycle\n","date":"2018-02-25 22:14:21","modifiedFileCount":"107","status":"M","submitter":"Stefan Richter"},{"authorTime":"2018-03-10 05:47:35","codes":[{"authorDate":"2018-03-10 05:47:35","commitOrder":3,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend2<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend2<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend\n\t\t\t.createListState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-03-29 23:35:39","endLine":130,"groupId":"25719","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/49/85bf35293fd03755887f0cfa70eaccb4e27693.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend2<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend2<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<VoidNamespace, Long> listState = longHeapKeyedStateBackend\n\t\t\t.createListState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2018-03-10 05:47:35","commitOrder":3,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled());\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String, Map<Long, String>> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String, Map<Long, String>>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-03-29 23:35:39","endLine":172,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/49/85bf35293fd03755887f0cfa70eaccb4e27693.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled());\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<VoidNamespace, Long, String> mapState = (InternalMapState<VoidNamespace, Long, String>)\n\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"}],"commitId":"db8e1f09bd7dcd9f392bf987e96cddcb34665b6c","commitMessage":"@@@[FLINK-8802] [QS] Fix concurrent access to non-duplicated serializers.\n\nThis closes #5691.\n","date":"2018-03-29 23:35:39","modifiedFileCount":"42","status":"M","submitter":"kkloudas"},{"authorTime":"2018-04-24 20:48:34","codes":[{"authorDate":"2018-03-10 05:47:35","commitOrder":4,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend2<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend2<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend\n\t\t\t.createListState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-03-29 23:35:39","endLine":130,"groupId":"25719","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/49/85bf35293fd03755887f0cfa70eaccb4e27693.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend2<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend2<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend\n\t\t\t.createListState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"},{"authorDate":"2018-04-24 20:48:34","commitOrder":4,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled());\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-04-27 00:27:25","endLine":171,"groupId":"41144","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/6e/e7631aa4524f6383fec98647b7c6c743dc57f7.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled());\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String, Map<Long, String>> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String, Map<Long, String>>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"3ac282322a3940da9d69f81b9bc189b6d0c0463f","commitMessage":"@@@[FLINK-8841] Remove HashMapSerializer and use MapSerializer instead.\n\nThis closes #5910.\n","date":"2018-04-27 00:27:25","modifiedFileCount":"10","status":"M","submitter":"kkloudas"},{"authorTime":"2018-04-24 20:48:34","codes":[{"authorDate":"2018-06-13 16:24:10","commitOrder":5,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(), false,\n\t\t\t\tTestLocalRecoveryConfig.disabled()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-06-18 20:41:50","endLine":89,"groupId":"41144","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a4/9fdd26ff79ce724264a02723fd7c6dbf952078.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend2<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend2<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend\n\t\t\t.createListState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2018-04-24 20:48:34","commitOrder":5,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled());\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-04-27 00:27:25","endLine":171,"groupId":"41144","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/6e/e7631aa4524f6383fec98647b7c6c743dc57f7.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled());\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"N"}],"commitId":"0bdde8377c254195fe94709d639bf03f9bd77606","commitMessage":"@@@[FLINK-9571] Repace StateBinder with internal backend-specific state factories\n\nThis closes #6173.\n","date":"2018-06-18 20:41:50","modifiedFileCount":"42","status":"M","submitter":"Andrey Zagrebin"},{"authorTime":"2018-07-04 19:43:49","codes":[{"authorDate":"2018-07-04 19:43:49","commitOrder":6,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-07-09 22:12:51","endLine":93,"groupId":"34301","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9e/a3198a147f0376b0cd8935c27e0b0430b49b6e.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(), false,\n\t\t\t\tTestLocalRecoveryConfig.disabled()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2018-07-04 19:43:49","commitOrder":6,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-07-09 22:12:51","endLine":137,"groupId":"34301","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/9e/a3198a147f0376b0cd8935c27e0b0430b49b6e.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1, new KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled());\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"79b38f8f9a79b917d525842cf46087c5b8c40f3d","commitMessage":"@@@[FLINK-9486][state] Introduce InternalPriorityQueue as state in keyed state backends\n\nThis commit does not include the integration with checkpointing.\n\nThis closes #6276.\n","date":"2018-07-09 22:12:51","modifiedFileCount":"32","status":"M","submitter":"Stefan Richter"},{"authorTime":"2018-07-04 01:23:41","codes":[{"authorDate":"2018-07-04 01:23:41","commitOrder":7,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-07-13 02:18:23","endLine":95,"groupId":"51897","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/17/6e55a7d8c3df1b811814e15d52bc4256a9f89d.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2018-07-04 01:23:41","commitOrder":7,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-07-13 02:18:23","endLine":140,"groupId":"51897","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/17/6e55a7d8c3df1b811814e15d52bc4256a9f89d.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"f45b7f7ff27df019e9045895e718fa112d12139c","commitMessage":"@@@[FLINK-9701] Introduce TTL configuration in state descriptors\n\nThis closes #6313.\n","date":"2018-07-13 02:18:23","modifiedFileCount":"35","status":"M","submitter":"Andrey Zagrebin"},{"authorTime":"2018-10-19 17:01:03","codes":[{"authorDate":"2018-10-19 17:01:03","commitOrder":8,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-10-19 17:01:03","endLine":99,"groupId":"41144","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ff/f8f02285f481c54f76d1230eed9f9dab8b9848.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2018-10-19 17:01:03","commitOrder":8,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-10-19 17:01:03","endLine":147,"groupId":"41144","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ff/f8f02285f481c54f76d1230eed9f9dab8b9848.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"e62a7eabe34da42e4cb56d1b14905a3b9e9c9bd4","commitMessage":"@@@[FLINK-10423][rocksdb][metrics] Expose Rocksdb native metrics\n\n","date":"2018-10-19 17:01:03","modifiedFileCount":"22","status":"M","submitter":"Seth Wiesman"},{"authorTime":"2018-09-24 15:13:48","codes":[{"authorDate":"2018-09-24 15:13:48","commitOrder":9,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\t1,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-12-20 18:04:38","endLine":100,"groupId":"22601","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/96/a28903792a8dd994d578eaa3a6dbb6a86f5f40.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2018-09-24 15:13:48","commitOrder":9,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\t1,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2018-12-20 18:04:38","endLine":149,"groupId":"22601","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/96/a28903792a8dd994d578eaa3a6dbb6a86f5f40.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"6431b7e2ebd7f9eb770de54fc853970845586e44","commitMessage":"@@@[FLINK-10461][rocksdb] Support multiple threads for downloading restored state\n","date":"2018-12-20 18:04:38","modifiedFileCount":"5","status":"M","submitter":"klion26"},{"authorTime":"2019-02-19 21:05:11","codes":[{"authorDate":"2019-02-19 21:05:11","commitOrder":10,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\t1,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tfalse,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2019-02-19 21:05:11","endLine":101,"groupId":"0","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3c/4d224c3fdb8f7ea37756f87e4380e41f4877b5.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\t1,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2019-02-19 21:05:11","commitOrder":10,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<Long>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\t1,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tfalse,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2019-02-19 21:05:11","endLine":151,"groupId":"0","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/3c/4d224c3fdb8f7ea37756f87e4380e41f4877b5.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tcolumnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\t1,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"735b5141f14bc56a0c88d792b8413bcad42f0ce3","commitMessage":"@@@[FLINK-10471][State TTL] State TTL cleanup using RocksDb compaction filter\n\nThis closes #7163.","date":"2019-02-19 21:05:11","modifiedFileCount":"33","status":"M","submitter":"azagrebin"},{"authorTime":"2019-02-23 03:16:41","codes":[{"authorDate":"2019-02-23 03:16:41","commitOrder":11,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tRocksDBStateBackend.getCompressionDecorator(executionConfig)\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2019-02-23 03:16:41","endLine":99,"groupId":"17467","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/de/86340ff1382ef7ae19bf71b706deaa0e4249ab.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\t1,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tfalse,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2019-02-23 03:16:41","commitOrder":11,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tRocksDBStateBackend.getCompressionDecorator(executionConfig)\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2019-02-23 03:16:41","endLine":146,"groupId":"17467","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/de/86340ff1382ef7ae19bf71b706deaa0e4249ab.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tColumnFamilyOptions columnFamilyOptions = PredefinedOptions.DEFAULT.createColumnOptions();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackend<Long>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> columnFamilyOptions,\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\tnew ExecutionConfig(),\n\t\t\t\tfalse,\n\t\t\t\t1,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tfalse,\n\t\t\t\tnew RocksDBNativeMetricOptions(),\n\t\t\t\tnew UnregisteredMetricsGroup()\n\t\t\t);\n\t\tlongHeapKeyedStateBackend.restore(null);\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"3bf06b9dd3dc66dcfdeccaaa591ace41ea51e343","commitMessage":"@@@[FLINK-10043] [State Backends] Refactor RocksDBKeyedStateBackend object construction/initialization/restore code\n\nThis closes #7674.\n","date":"2019-02-23 03:16:41","modifiedFileCount":"36","status":"M","submitter":"Yu Li"},{"authorTime":"2019-03-01 11:52:14","codes":[{"authorDate":"2019-03-01 11:52:14","commitOrder":12,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tRocksDBStateBackend.getCompressionDecorator(executionConfig),\n\t\t\t\tnew CloseableRegistry()\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2019-03-05 03:27:50","endLine":101,"groupId":"41144","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/34/3119934176c2c75f4ba1bbe7edfbcfc0434ae5.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tRocksDBStateBackend.getCompressionDecorator(executionConfig)\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2019-03-01 11:52:14","commitOrder":12,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tRocksDBStateBackend.getCompressionDecorator(executionConfig),\n\t\t\t\tnew CloseableRegistry()\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2019-03-05 03:27:50","endLine":149,"groupId":"41144","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/34/3119934176c2c75f4ba1bbe7edfbcfc0434ae5.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tRocksDBStateBackend.getCompressionDecorator(executionConfig)\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"eada52be5194a018a41e7ea51ea86e0273df2073","commitMessage":"@@@[FLINK-11804] [State Backends] Make sure the CloseableRegistry used in backend builder is registered with task\n\nWe need to make sure each stream constructed in restore could also be closed in case of task cancel. \nfor example the data input stream opened for serDe during restore.\n\nAlso removed close of CloseableRegistry in RocksDBKeyedStateBackendBuilder.\n","date":"2019-03-05 03:27:50","modifiedFileCount":"23","status":"M","submitter":"Yu Li"},{"authorTime":"2019-03-01 03:02:35","codes":[{"authorDate":"2019-03-01 03:02:35","commitOrder":13,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tAbstractStateBackend.getCompressionDecorator(executionConfig),\n\t\t\t\tnew CloseableRegistry()\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2019-03-05 03:27:50","endLine":102,"groupId":"41144","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a5/df958bba41fa9b17f922cfae464a19af0d1ab5.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tRocksDBStateBackend.getCompressionDecorator(executionConfig),\n\t\t\t\tnew CloseableRegistry()\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2019-03-01 03:02:35","commitOrder":13,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tAbstractStateBackend.getCompressionDecorator(executionConfig),\n\t\t\t\tnew CloseableRegistry()\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2019-03-05 03:27:50","endLine":150,"groupId":"41144","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a5/df958bba41fa9b17f922cfae464a19af0d1ab5.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tRocksDBStateBackend.getCompressionDecorator(executionConfig),\n\t\t\t\tnew CloseableRegistry()\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"237d07c76b51c171f0f41f9f82d777df26da1dd4","commitMessage":"@@@[FLINK-11730] [State Backends] Make HeapKeyedStateBackend follow the builder pattern\n\nThis closes #7866.\n","date":"2019-03-05 03:27:50","modifiedFileCount":"18","status":"M","submitter":"Yu Li"},{"authorTime":"2019-12-05 21:08:57","codes":[{"authorDate":"2019-12-05 21:08:57","commitOrder":14,"curCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend = RocksDBTestUtils\n\t\t\t.builderForTestDefaults(temporaryFolder.getRoot(), LongSerializer.INSTANCE)\n\t\t\t.build();\n\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2019-12-07 01:00:29","endLine":67,"groupId":"102456","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"testListSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a7/28052e34aee940edc506c9d35eb5a1300ccc1b.src","preCode":"\tpublic void testListSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tAbstractStateBackend.getCompressionDecorator(executionConfig),\n\t\t\t\tnew CloseableRegistry()\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalListState<Long, VoidNamespace, Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,\n\t\t\t\tnew ListStateDescriptor<>(\"test\", LongSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testListSerialization(key, listState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2019-12-05 21:08:57","commitOrder":14,"curCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend = RocksDBTestUtils\n\t\t\t.builderForTestDefaults(temporaryFolder.getRoot(), LongSerializer.INSTANCE)\n\t\t\t.build();\n\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","date":"2019-12-07 01:00:29","endLine":96,"groupId":"102456","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"testMapSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/a7/28052e34aee940edc506c9d35eb5a1300ccc1b.src","preCode":"\tpublic void testMapSerialization() throws Exception {\n\t\tfinal long key = 0L;\n\n\t\t\r\n\t\tDBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions();\n\t\tdbOptions.setCreateIfMissing(true);\n\t\tExecutionConfig executionConfig = new ExecutionConfig();\n\t\tfinal RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend =\n\t\t\tnew RocksDBKeyedStateBackendBuilder<>(\n\t\t\t\t\"no-op\",\n\t\t\t\tClassLoader.getSystemClassLoader(),\n\t\t\t\ttemporaryFolder.getRoot(),\n\t\t\t\tdbOptions,\n\t\t\t\tstateName -> PredefinedOptions.DEFAULT.createColumnOptions(),\n\t\t\t\tmock(TaskKvStateRegistry.class),\n\t\t\t\tLongSerializer.INSTANCE,\n\t\t\t\t1,\n\t\t\t\tnew KeyGroupRange(0, 0),\n\t\t\t\texecutionConfig,\n\t\t\t\tTestLocalRecoveryConfig.disabled(),\n\t\t\t\tRocksDBStateBackend.PriorityQueueStateType.HEAP,\n\t\t\t\tTtlTimeProvider.DEFAULT,\n\t\t\t\tnew UnregisteredMetricsGroup(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tAbstractStateBackend.getCompressionDecorator(executionConfig),\n\t\t\t\tnew CloseableRegistry()\n\t\t\t).build();\n\t\tlongHeapKeyedStateBackend.setCurrentKey(key);\n\n\t\tfinal InternalMapState<Long, VoidNamespace, Long, String> mapState =\n\t\t\t\t(InternalMapState<Long, VoidNamespace, Long, String>)\n\t\t\t\t\t\tlongHeapKeyedStateBackend.getPartitionedState(\n\t\t\t\t\t\t\t\tVoidNamespace.INSTANCE,\n\t\t\t\t\t\t\t\tVoidNamespaceSerializer.INSTANCE,\n\t\t\t\t\t\t\t\tnew MapStateDescriptor<>(\"test\", LongSerializer.INSTANCE, StringSerializer.INSTANCE));\n\n\t\tKvStateRequestSerializerTest.testMapSerialization(key, mapState);\n\t\tlongHeapKeyedStateBackend.dispose();\n\t}\n","realPath":"flink-queryable-state/flink-queryable-state-runtime/src/test/java/org/apache/flink/queryablestate/network/KVStateRequestSerializerRocksDBTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"9da970f41d55f12e10f5cc7b2778bc5585f0c2ea","commitMessage":"@@@[hotfix][tests] Consolidate the instantiation of the RocksDBKEyesStateBackendBuilder for tests in a utility class.\n","date":"2019-12-07 01:00:29","modifiedFileCount":"2","status":"M","submitter":"Stephan Ewen"}]
