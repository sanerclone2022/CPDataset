[{"authorTime":"2016-10-13 17:32:19","codes":[{"authorDate":"2016-10-13 17:32:19","commitOrder":1,"curCode":"\tpublic void testLifeCycleFull() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource(srcFun, true));\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.FINISHED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_FULL, ACTUAL_ORDER_TRACKING);\n\t}\n","date":"2016-10-20 22:14:21","endLine":141,"groupId":"1784","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLifeCycleFull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/cb/b833bc5c29ed23ca3dce612e228e66749b5746.src","preCode":"\tpublic void testLifeCycleFull() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource(srcFun, true));\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.FINISHED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_FULL, ACTUAL_ORDER_TRACKING);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperatorLifecycleTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2016-10-13 17:32:19","commitOrder":1,"curCode":"\tpublic void testLifeCycleCancel() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource(srcFun, false));\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.cancelExecution();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_CANCEL_RUNNING, ACTUAL_ORDER_TRACKING);\n\t}\n","date":"2016-10-20 22:14:21","endLine":165,"groupId":"51376","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLifeCycleCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/cb/b833bc5c29ed23ca3dce612e228e66749b5746.src","preCode":"\tpublic void testLifeCycleCancel() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource(srcFun, false));\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.cancelExecution();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_CANCEL_RUNNING, ACTUAL_ORDER_TRACKING);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperatorLifecycleTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"}],"commitId":"1e475c768ae0d7e13746a3ca6aa258141016d419","commitMessage":"@@@[FLINK-4842] Introduce test to enforce order of operator / udf lifecycles\n","date":"2016-10-20 22:14:21","modifiedFileCount":"1","status":"B","submitter":"Stefan Richter"},{"authorTime":"2017-06-27 00:07:59","codes":[{"authorDate":"2017-06-27 00:07:59","commitOrder":2,"curCode":"\tpublic void testLifeCycleFull() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource(srcFun, true));\n\t\tcfg.setOperatorID(new OperatorID());\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.FINISHED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_FULL, ACTUAL_ORDER_TRACKING);\n\t}\n","date":"2017-08-15 20:56:54","endLine":149,"groupId":"1784","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLifeCycleFull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ff/5f589302f064f0fbd706d6be8d2da0e00a23f3.src","preCode":"\tpublic void testLifeCycleFull() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource(srcFun, true));\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.FINISHED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_FULL, ACTUAL_ORDER_TRACKING);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperatorLifecycleTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2017-06-27 00:07:59","commitOrder":2,"curCode":"\tpublic void testLifeCycleCancel() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource(srcFun, false));\n\t\tcfg.setOperatorID(new OperatorID());\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.cancelExecution();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_CANCEL_RUNNING, ACTUAL_ORDER_TRACKING);\n\t}\n","date":"2017-08-15 20:56:54","endLine":174,"groupId":"1786","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testLifeCycleCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/ff/5f589302f064f0fbd706d6be8d2da0e00a23f3.src","preCode":"\tpublic void testLifeCycleCancel() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource(srcFun, false));\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.cancelExecution();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_CANCEL_RUNNING, ACTUAL_ORDER_TRACKING);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperatorLifecycleTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"}],"commitId":"b71154a734ea9f4489dffe1be6761efbb90cff41","commitMessage":"@@@[FLINK-7213] Introduce state management by OperatorID in TaskManager\n","date":"2017-08-15 20:56:54","modifiedFileCount":"61","status":"M","submitter":"Stefan Richter"},{"authorTime":"2018-05-23 23:24:40","codes":[{"authorDate":"2018-05-23 23:24:40","commitOrder":3,"curCode":"\tpublic void testLifeCycleFull() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource<>(srcFun, true));\n\t\tcfg.setOperatorID(new OperatorID());\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.FINISHED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_FULL, ACTUAL_ORDER_TRACKING);\n\t}\n","date":"2018-05-24 19:14:13","endLine":154,"groupId":"25983","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testLifeCycleFull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4f/cc813cc8a5adee134fd3470deb5e7b36cf7bc5.src","preCode":"\tpublic void testLifeCycleFull() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource(srcFun, true));\n\t\tcfg.setOperatorID(new OperatorID());\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.FINISHED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_FULL, ACTUAL_ORDER_TRACKING);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperatorLifecycleTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2018-05-23 23:24:40","commitOrder":3,"curCode":"\tpublic void testLifeCycleCancel() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource<>(srcFun, false));\n\t\tcfg.setOperatorID(new OperatorID());\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.cancelExecution();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_CANCEL_RUNNING, ACTUAL_ORDER_TRACKING);\n\t}\n","date":"2018-05-24 19:14:13","endLine":179,"groupId":"25980","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testLifeCycleCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4f/cc813cc8a5adee134fd3470deb5e7b36cf7bc5.src","preCode":"\tpublic void testLifeCycleCancel() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource(srcFun, false));\n\t\tcfg.setOperatorID(new OperatorID());\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.cancelExecution();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_CANCEL_RUNNING, ACTUAL_ORDER_TRACKING);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperatorLifecycleTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"e1d1234477c731fe3f398c7f3f12123f73764242","commitMessage":"@@@[FLINK-9428] [runtime] Add a 'pre-barrier-emit' checkpoint notification to stream operators.\n\nThis allows operators with small transient unmanaged state (for example pre-aggregates) to\nflush the state prior to the checkpoint barrier.\n","date":"2018-05-24 19:14:13","modifiedFileCount":"5","status":"M","submitter":"Stephan Ewen"},{"authorTime":"2020-03-20 13:14:35","codes":[{"authorDate":"2020-03-20 13:14:35","commitOrder":4,"curCode":"\tpublic void testLifeCycleFull() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource<>(srcFun, true));\n\t\tcfg.setOperatorID(new OperatorID());\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\ttry (ShuffleEnvironment shuffleEnvironment = new NettyShuffleEnvironmentBuilder().build()) {\n\t\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, shuffleEnvironment, cfg, taskManagerConfig);\n\n\t\t\ttask.startTaskThread();\n\n\t\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\t\r\n\t\t\ttask.getExecutingThread().join();\n\t\t\tassertEquals(ExecutionState.FINISHED, task.getExecutionState());\n\t\t\tassertEquals(EXPECTED_CALL_ORDER_FULL, ACTUAL_ORDER_TRACKING);\n\t\t}\n\t}\n","date":"2020-03-21 22:10:58","endLine":158,"groupId":"103309","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testLifeCycleFull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1c/2240e70e390ea31f0314b36db47def164d5afa.src","preCode":"\tpublic void testLifeCycleFull() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource<>(srcFun, true));\n\t\tcfg.setOperatorID(new OperatorID());\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.FINISHED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_FULL, ACTUAL_ORDER_TRACKING);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperatorLifecycleTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"},{"authorDate":"2020-03-20 13:14:35","commitOrder":4,"curCode":"\tpublic void testLifeCycleCancel() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource<>(srcFun, false));\n\t\tcfg.setOperatorID(new OperatorID());\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\ttry (ShuffleEnvironment shuffleEnvironment = new NettyShuffleEnvironmentBuilder().build()) {\n\t\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, shuffleEnvironment, cfg, taskManagerConfig);\n\n\t\t\ttask.startTaskThread();\n\t\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\t\r\n\t\t\ttask.cancelExecution();\n\n\t\t\t\r\n\t\t\ttask.getExecutingThread().join();\n\t\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t\t\tassertEquals(EXPECTED_CALL_ORDER_CANCEL_RUNNING, ACTUAL_ORDER_TRACKING);\n\t\t}\n\t}\n","date":"2020-03-21 22:10:58","endLine":185,"groupId":"103309","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testLifeCycleCancel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/1c/2240e70e390ea31f0314b36db47def164d5afa.src","preCode":"\tpublic void testLifeCycleCancel() throws Exception {\n\t\tACTUAL_ORDER_TRACKING.clear();\n\n\t\tConfiguration taskManagerConfig = new Configuration();\n\t\tStreamConfig cfg = new StreamConfig(new Configuration());\n\t\tMockSourceFunction srcFun = new MockSourceFunction();\n\t\tcfg.setStreamOperator(new LifecycleTrackingStreamSource<>(srcFun, false));\n\t\tcfg.setOperatorID(new OperatorID());\n\t\tcfg.setTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\t\tTask task = StreamTaskTest.createTask(SourceStreamTask.class, cfg, taskManagerConfig);\n\n\t\ttask.startTaskThread();\n\t\tLifecycleTrackingStreamSource.runStarted.await();\n\n\t\t\r\n\t\ttask.cancelExecution();\n\n\t\t\r\n\t\ttask.getExecutingThread().join();\n\t\tassertEquals(ExecutionState.CANCELED, task.getExecutionState());\n\t\tassertEquals(EXPECTED_CALL_ORDER_CANCEL_RUNNING, ACTUAL_ORDER_TRACKING);\n\t}\n","realPath":"flink-streaming-java/src/test/java/org/apache/flink/streaming/api/operators/AbstractUdfStreamOperatorLifecycleTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"7dafd1cd65ba8977d923482a810c907ed7d37b59","commitMessage":"@@@[FLINK-16690][tests] Refactor StreamTaskTest to reuse TestTaskBuilder and MockStreamTaskBuilder\n\nThis closes #11459\n","date":"2020-03-21 22:10:58","modifiedFileCount":"5","status":"M","submitter":"Zhijiang"}]
