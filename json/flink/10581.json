[{"authorTime":"2020-07-11 05:12:23","codes":[{"authorDate":"2020-07-11 05:12:23","commitOrder":1,"curCode":"\tpublic void testBuildPollingRecordPublisher() throws Exception {\n\t\tRecordPublisher recordPublisher = factory.create(\n\t\t\tStartingPosition.restartFromSequenceNumber(SENTINEL_LATEST_SEQUENCE_NUM.get()),\n\t\t\tnew Properties(),\n\t\t\tmock(MetricGroup.class),\n\t\t\tmock(StreamShardHandle.class));\n\n\t\tassertTrue(recordPublisher instanceof PollingRecordPublisher);\n\t\tassertFalse(recordPublisher instanceof AdaptivePollingRecordPublisher);\n\t}\n","date":"2020-08-24 14:38:54","endLine":53,"groupId":"20568","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBuildPollingRecordPublisher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c2/49db7787a8b7484474b6f0360d441c0ea06f0f.src","preCode":"\tpublic void testBuildPollingRecordPublisher() throws Exception {\n\t\tRecordPublisher recordPublisher = factory.create(\n\t\t\tStartingPosition.restartFromSequenceNumber(SENTINEL_LATEST_SEQUENCE_NUM.get()),\n\t\t\tnew Properties(),\n\t\t\tmock(MetricGroup.class),\n\t\t\tmock(StreamShardHandle.class));\n\n\t\tassertTrue(recordPublisher instanceof PollingRecordPublisher);\n\t\tassertFalse(recordPublisher instanceof AdaptivePollingRecordPublisher);\n\t}\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/publisher/polling/PollingRecordPublisherFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2020-07-11 05:12:23","commitOrder":1,"curCode":"\tpublic void testBuildAdaptivePollingRecordPublisher() throws Exception {\n\t\tProperties properties = new Properties();\n\t\tproperties.setProperty(SHARD_USE_ADAPTIVE_READS, \"true\");\n\n\t\tRecordPublisher recordPublisher = factory.create(\n\t\t\tStartingPosition.restartFromSequenceNumber(SENTINEL_LATEST_SEQUENCE_NUM.get()),\n\t\t\tproperties,\n\t\t\tmock(MetricGroup.class),\n\t\t\tmock(StreamShardHandle.class));\n\n\t\tassertTrue(recordPublisher instanceof PollingRecordPublisher);\n\t\tassertTrue(recordPublisher instanceof AdaptivePollingRecordPublisher);\n\t}\n","date":"2020-08-24 14:38:54","endLine":68,"groupId":"20570","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBuildAdaptivePollingRecordPublisher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/c2/49db7787a8b7484474b6f0360d441c0ea06f0f.src","preCode":"\tpublic void testBuildAdaptivePollingRecordPublisher() throws Exception {\n\t\tProperties properties = new Properties();\n\t\tproperties.setProperty(SHARD_USE_ADAPTIVE_READS, \"true\");\n\n\t\tRecordPublisher recordPublisher = factory.create(\n\t\t\tStartingPosition.restartFromSequenceNumber(SENTINEL_LATEST_SEQUENCE_NUM.get()),\n\t\t\tproperties,\n\t\t\tmock(MetricGroup.class),\n\t\t\tmock(StreamShardHandle.class));\n\n\t\tassertTrue(recordPublisher instanceof PollingRecordPublisher);\n\t\tassertTrue(recordPublisher instanceof AdaptivePollingRecordPublisher);\n\t}\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/publisher/polling/PollingRecordPublisherFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"}],"commitId":"5487fcf2c3451e8ec4a21160f370226a2f4dc1f5","commitMessage":"@@@[FLINK-18512][kinesis] Introducing RecordPublisher. Refactor ShardConsumer to use PollingRecordPublisher\n\nThis closes #12881.\n","date":"2020-08-24 14:38:54","modifiedFileCount":"12","status":"B","submitter":"Danny Cranmer"},{"authorTime":"2021-08-13 00:46:29","codes":[{"authorDate":"2021-08-13 00:46:29","commitOrder":2,"curCode":"    public void testBuildPollingRecordPublisher() throws Exception {\n        RecordPublisher recordPublisher =\n                factory.create(\n                        StartingPosition.restartFromSequenceNumber(\n                                SENTINEL_LATEST_SEQUENCE_NUM.get()),\n                        new Properties(),\n                        createFakeShardConsumerMetricGroup(),\n                        mock(StreamShardHandle.class));\n\n        assertTrue(recordPublisher instanceof PollingRecordPublisher);\n        assertFalse(recordPublisher instanceof AdaptivePollingRecordPublisher);\n    }\n","date":"2021-08-13 23:47:14","endLine":54,"groupId":"10581","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testBuildPollingRecordPublisher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0b/f56886dec89c955deed9bd912848c44dc6ef3c.src","preCode":"    public void testBuildPollingRecordPublisher() throws Exception {\n        RecordPublisher recordPublisher =\n                factory.create(\n                        StartingPosition.restartFromSequenceNumber(\n                                SENTINEL_LATEST_SEQUENCE_NUM.get()),\n                        new Properties(),\n                        mock(MetricGroup.class),\n                        mock(StreamShardHandle.class));\n\n        assertTrue(recordPublisher instanceof PollingRecordPublisher);\n        assertFalse(recordPublisher instanceof AdaptivePollingRecordPublisher);\n    }\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/publisher/polling/PollingRecordPublisherFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2021-08-13 00:46:29","commitOrder":2,"curCode":"    public void testBuildAdaptivePollingRecordPublisher() throws Exception {\n        Properties properties = new Properties();\n        properties.setProperty(SHARD_USE_ADAPTIVE_READS, \"true\");\n\n        RecordPublisher recordPublisher =\n                factory.create(\n                        StartingPosition.restartFromSequenceNumber(\n                                SENTINEL_LATEST_SEQUENCE_NUM.get()),\n                        properties,\n                        createFakeShardConsumerMetricGroup(),\n                        mock(StreamShardHandle.class));\n\n        assertTrue(recordPublisher instanceof PollingRecordPublisher);\n        assertTrue(recordPublisher instanceof AdaptivePollingRecordPublisher);\n    }\n","date":"2021-08-13 23:47:14","endLine":71,"groupId":"10581","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testBuildAdaptivePollingRecordPublisher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/0b/f56886dec89c955deed9bd912848c44dc6ef3c.src","preCode":"    public void testBuildAdaptivePollingRecordPublisher() throws Exception {\n        Properties properties = new Properties();\n        properties.setProperty(SHARD_USE_ADAPTIVE_READS, \"true\");\n\n        RecordPublisher recordPublisher =\n                factory.create(\n                        StartingPosition.restartFromSequenceNumber(\n                                SENTINEL_LATEST_SEQUENCE_NUM.get()),\n                        properties,\n                        mock(MetricGroup.class),\n                        mock(StreamShardHandle.class));\n\n        assertTrue(recordPublisher instanceof PollingRecordPublisher);\n        assertTrue(recordPublisher instanceof AdaptivePollingRecordPublisher);\n    }\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/internals/publisher/polling/PollingRecordPublisherFactoryTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"b48607bbae176f40ce0ae4fe3bf77afa2c2ee300","commitMessage":"@@@[FLINK-23705][connectors/kinesis] Unregistering metric reporting for closed shards\n","date":"2021-08-13 23:47:14","modifiedFileCount":"9","status":"M","submitter":"Elphas Toringepi"}]
