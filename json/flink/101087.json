[{"authorTime":"2019-06-20 07:43:26","codes":[{"authorDate":"2019-06-18 05:42:27","commitOrder":3,"curCode":"\tpublic Object evalInternal(Object[] args) {\n\t\tcheckArgument(args.length == conversions.length);\n\n\t\tif (!allIdentityConverter) {\n\t\t\tfor (int i = 0; i < args.length; i++) {\n\t\t\t\targs[i] = conversions[i].toHiveObject(args[i]);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tObject result = FunctionRegistry.invoke(method, function, conversionHelper.convertIfNecessary(args));\n\t\t\treturn HiveInspectors.toFlinkObject(returnInspector, result);\n\t\t} catch (HiveException e) {\n\t\t\tthrow new FlinkHiveUDFException(e);\n\t\t}\n\t}\n","date":"2019-06-19 04:03:00","endLine":117,"groupId":"51502","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"evalInternal","params":"(Object[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/31/4f4a999056b91d3ce5fc5b1cfe22d41c721a57.src","preCode":"\tpublic Object evalInternal(Object[] args) {\n\t\tcheckArgument(args.length == conversions.length);\n\n\t\tif (!allIdentityConverter) {\n\t\t\tfor (int i = 0; i < args.length; i++) {\n\t\t\t\targs[i] = conversions[i].toHiveObject(args[i]);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tObject result = FunctionRegistry.invoke(method, function, conversionHelper.convertIfNecessary(args));\n\t\t\treturn HiveInspectors.toFlinkObject(returnInspector, result);\n\t\t} catch (HiveException e) {\n\t\t\tthrow new FlinkHiveUDFException(e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/functions/hive/HiveSimpleUDF.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"NB"},{"authorDate":"2019-06-20 07:43:26","commitOrder":3,"curCode":"\tpublic void eval(Object... args) throws HiveException {\n\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif (isArgsSingleArray) {\n\t\t\targs = new Object[] {args};\n\t\t}\n\n\t\tcheckArgument(args.length == conversions.length);\n\n\t\tif (!allIdentityConverter) {\n\t\t\tfor (int i = 0; i < args.length; i++) {\n\t\t\t\targs[i] = conversions[i].toHiveObject(args[i]);\n\t\t\t}\n\t\t}\n\n\t\tfunction.process(args);\n\t}\n","date":"2019-06-21 03:11:18","endLine":119,"groupId":"51502","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"eval","params":"(Object...args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/46/cad68d945c0cda4349197574eaf862dc46b44a.src","preCode":"\tpublic void eval(Object... args) throws HiveException {\n\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif (isArgsSingleArray) {\n\t\t\targs = new Object[] {args};\n\t\t}\n\n\t\tcheckArgument(args.length == conversions.length);\n\n\t\tif (!allIdentityConverter) {\n\t\t\tfor (int i = 0; i < args.length; i++) {\n\t\t\t\targs[i] = conversions[i].toHiveObject(args[i]);\n\t\t\t}\n\t\t}\n\n\t\tfunction.process(args);\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/functions/hive/HiveGenericUDTF.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"}],"commitId":"ae5bd203dd5952657ca6e1ddeff6befab06345bd","commitMessage":"@@@[FLINK-12659][hive] Integrate Flink with Hive GenericUDTF\n\nThis PR integrates Flink with Hive GenericUDTF.\n\nThis closes #8798.\n","date":"2019-06-21 03:11:18","modifiedFileCount":"3","status":"M","submitter":"bowen.li"},{"authorTime":"2019-06-20 07:43:26","codes":[{"authorDate":"2019-12-03 20:58:32","commitOrder":4,"curCode":"\tpublic Object evalInternal(Object[] args) {\n\t\tcheckArgument(args.length == conversions.length);\n\n\t\tif (!allIdentityConverter) {\n\t\t\tfor (int i = 0; i < args.length; i++) {\n\t\t\t\targs[i] = conversions[i].toHiveObject(args[i]);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tObject result = FunctionRegistry.invoke(method, function, conversionHelper.convertIfNecessary(args));\n\t\t\treturn HiveInspectors.toFlinkObject(returnInspector, result, hiveShim);\n\t\t} catch (HiveException e) {\n\t\t\tthrow new FlinkHiveUDFException(e);\n\t\t}\n\t}\n","date":"2019-12-08 15:04:17","endLine":120,"groupId":"101087","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"evalInternal","params":"(Object[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/97/f9a453a039915d32d61322866481e26d5a217a.src","preCode":"\tpublic Object evalInternal(Object[] args) {\n\t\tcheckArgument(args.length == conversions.length);\n\n\t\tif (!allIdentityConverter) {\n\t\t\tfor (int i = 0; i < args.length; i++) {\n\t\t\t\targs[i] = conversions[i].toHiveObject(args[i]);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tObject result = FunctionRegistry.invoke(method, function, conversionHelper.convertIfNecessary(args));\n\t\t\treturn HiveInspectors.toFlinkObject(returnInspector, result);\n\t\t} catch (HiveException e) {\n\t\t\tthrow new FlinkHiveUDFException(e);\n\t\t}\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/functions/hive/HiveSimpleUDF.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2019-06-20 07:43:26","commitOrder":4,"curCode":"\tpublic void eval(Object... args) throws HiveException {\n\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif (isArgsSingleArray) {\n\t\t\targs = new Object[] {args};\n\t\t}\n\n\t\tcheckArgument(args.length == conversions.length);\n\n\t\tif (!allIdentityConverter) {\n\t\t\tfor (int i = 0; i < args.length; i++) {\n\t\t\t\targs[i] = conversions[i].toHiveObject(args[i]);\n\t\t\t}\n\t\t}\n\n\t\tfunction.process(args);\n\t}\n","date":"2019-06-21 03:11:18","endLine":119,"groupId":"101087","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"eval","params":"(Object...args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/46/cad68d945c0cda4349197574eaf862dc46b44a.src","preCode":"\tpublic void eval(Object... args) throws HiveException {\n\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tif (isArgsSingleArray) {\n\t\t\targs = new Object[] {args};\n\t\t}\n\n\t\tcheckArgument(args.length == conversions.length);\n\n\t\tif (!allIdentityConverter) {\n\t\t\tfor (int i = 0; i < args.length; i++) {\n\t\t\t\targs[i] = conversions[i].toHiveObject(args[i]);\n\t\t\t}\n\t\t}\n\n\t\tfunction.process(args);\n\t}\n","realPath":"flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/functions/hive/HiveGenericUDTF.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"N"}],"commitId":"57bb952e3a1732caa5acb640a1712bcdd55d813d","commitMessage":"@@@[FLINK-15020][hive] Support timestamp type in hive\n\nThis closes #10401\n","date":"2019-12-08 15:04:17","modifiedFileCount":"23","status":"M","submitter":"Rui Li"}]
