[{"authorTime":"2020-07-21 16:40:22","codes":[{"authorDate":"2020-07-21 16:40:22","commitOrder":1,"curCode":"\tprivate NettyNioAsyncHttpClient.Builder mockHttpClientBuilder() {\n\t\tNettyNioAsyncHttpClient.Builder builder = mock(NettyNioAsyncHttpClient.Builder.class);\n\t\twhen(builder.maxConcurrency(anyInt())).thenReturn(builder);\n\t\twhen(builder.connectionTimeout(any())).thenReturn(builder);\n\t\twhen(builder.writeTimeout(any())).thenReturn(builder);\n\t\twhen(builder.connectionMaxIdleTime(any())).thenReturn(builder);\n\t\twhen(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder);\n\n\t\treturn builder;\n\t}\n","date":"2020-09-03 21:16:18","endLine":388,"groupId":"2184","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mockHttpClientBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/08/62ec2edf2477e8daaa9dae424a3296e430b6ea.src","preCode":"\tprivate NettyNioAsyncHttpClient.Builder mockHttpClientBuilder() {\n\t\tNettyNioAsyncHttpClient.Builder builder = mock(NettyNioAsyncHttpClient.Builder.class);\n\t\twhen(builder.maxConcurrency(anyInt())).thenReturn(builder);\n\t\twhen(builder.connectionTimeout(any())).thenReturn(builder);\n\t\twhen(builder.writeTimeout(any())).thenReturn(builder);\n\t\twhen(builder.connectionMaxIdleTime(any())).thenReturn(builder);\n\t\twhen(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder);\n\n\t\treturn builder;\n\t}\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/AwsV2UtilTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":379,"status":"B"},{"authorDate":"2020-07-21 16:40:22","commitOrder":1,"curCode":"\tprivate WebIdentityTokenFileCredentialsProvider.Builder mockWebIdentityTokenFileCredentialsProviderBuilder() {\n\t\tWebIdentityTokenFileCredentialsProvider.Builder builder = mock(WebIdentityTokenFileCredentialsProvider.Builder.class);\n\t\twhen(builder.roleArn(any())).thenReturn(builder);\n\t\twhen(builder.roleSessionName(any())).thenReturn(builder);\n\t\twhen(builder.webIdentityTokenFile(any())).thenReturn(builder);\n\n\t\treturn builder;\n\t}\n","date":"2020-09-03 21:16:18","endLine":406,"groupId":"2186","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mockWebIdentityTokenFileCredentialsProviderBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/08/62ec2edf2477e8daaa9dae424a3296e430b6ea.src","preCode":"\tprivate WebIdentityTokenFileCredentialsProvider.Builder mockWebIdentityTokenFileCredentialsProviderBuilder() {\n\t\tWebIdentityTokenFileCredentialsProvider.Builder builder = mock(WebIdentityTokenFileCredentialsProvider.Builder.class);\n\t\twhen(builder.roleArn(any())).thenReturn(builder);\n\t\twhen(builder.roleSessionName(any())).thenReturn(builder);\n\t\twhen(builder.webIdentityTokenFile(any())).thenReturn(builder);\n\n\t\treturn builder;\n\t}\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/AwsV2UtilTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"B"}],"commitId":"2967414a14d37a10d354ae00e3e84e035e3a7e4e","commitMessage":"@@@[FLINK-18513][Kinesis] Add AWS SDK v2.x dependency and KinesisProxyV2\n","date":"2020-09-03 21:16:18","modifiedFileCount":"2","status":"B","submitter":"Danny Cranmer"},{"authorTime":"2020-07-21 16:40:22","codes":[{"authorDate":"2020-09-04 17:35:35","commitOrder":2,"curCode":"\tprivate NettyNioAsyncHttpClient.Builder mockHttpClientBuilder() {\n\t\tNettyNioAsyncHttpClient.Builder builder = mock(NettyNioAsyncHttpClient.Builder.class);\n\t\twhen(builder.maxConcurrency(anyInt())).thenReturn(builder);\n\t\twhen(builder.connectionTimeout(any())).thenReturn(builder);\n\t\twhen(builder.writeTimeout(any())).thenReturn(builder);\n\t\twhen(builder.connectionMaxIdleTime(any())).thenReturn(builder);\n\t\twhen(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder);\n\t\twhen(builder.connectionAcquisitionTimeout(any())).thenReturn(builder);\n\t\twhen(builder.protocol(any())).thenReturn(builder);\n\t\twhen(builder.http2Configuration(any(Http2Configuration.class))).thenReturn(builder);\n\n\t\treturn builder;\n\t}\n","date":"2020-09-21 13:36:37","endLine":396,"groupId":"2184","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mockHttpClientBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4d/96ab8dd5389eb67d1121d92c85f82b03826693.src","preCode":"\tprivate NettyNioAsyncHttpClient.Builder mockHttpClientBuilder() {\n\t\tNettyNioAsyncHttpClient.Builder builder = mock(NettyNioAsyncHttpClient.Builder.class);\n\t\twhen(builder.maxConcurrency(anyInt())).thenReturn(builder);\n\t\twhen(builder.connectionTimeout(any())).thenReturn(builder);\n\t\twhen(builder.writeTimeout(any())).thenReturn(builder);\n\t\twhen(builder.connectionMaxIdleTime(any())).thenReturn(builder);\n\t\twhen(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder);\n\n\t\treturn builder;\n\t}\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/AwsV2UtilTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"M"},{"authorDate":"2020-07-21 16:40:22","commitOrder":2,"curCode":"\tprivate WebIdentityTokenFileCredentialsProvider.Builder mockWebIdentityTokenFileCredentialsProviderBuilder() {\n\t\tWebIdentityTokenFileCredentialsProvider.Builder builder = mock(WebIdentityTokenFileCredentialsProvider.Builder.class);\n\t\twhen(builder.roleArn(any())).thenReturn(builder);\n\t\twhen(builder.roleSessionName(any())).thenReturn(builder);\n\t\twhen(builder.webIdentityTokenFile(any())).thenReturn(builder);\n\n\t\treturn builder;\n\t}\n","date":"2020-09-03 21:16:18","endLine":406,"groupId":"2186","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mockWebIdentityTokenFileCredentialsProviderBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/08/62ec2edf2477e8daaa9dae424a3296e430b6ea.src","preCode":"\tprivate WebIdentityTokenFileCredentialsProvider.Builder mockWebIdentityTokenFileCredentialsProviderBuilder() {\n\t\tWebIdentityTokenFileCredentialsProvider.Builder builder = mock(WebIdentityTokenFileCredentialsProvider.Builder.class);\n\t\twhen(builder.roleArn(any())).thenReturn(builder);\n\t\twhen(builder.roleSessionName(any())).thenReturn(builder);\n\t\twhen(builder.webIdentityTokenFile(any())).thenReturn(builder);\n\n\t\treturn builder;\n\t}\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/AwsV2UtilTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"N"}],"commitId":"bbcd0c791371c2c6b3e477a83adfbd78dbee2602","commitMessage":"@@@[FLINK-18515][Kinesis] Adding FanOutRecordPublisher for Kinesis EFO support\n\nThis closes #13189.\n","date":"2020-09-21 13:36:37","modifiedFileCount":"26","status":"M","submitter":"Danny Cranmer"},{"authorTime":"2020-12-28 21:30:59","codes":[{"authorDate":"2020-09-04 17:35:35","commitOrder":3,"curCode":"\tprivate NettyNioAsyncHttpClient.Builder mockHttpClientBuilder() {\n\t\tNettyNioAsyncHttpClient.Builder builder = mock(NettyNioAsyncHttpClient.Builder.class);\n\t\twhen(builder.maxConcurrency(anyInt())).thenReturn(builder);\n\t\twhen(builder.connectionTimeout(any())).thenReturn(builder);\n\t\twhen(builder.writeTimeout(any())).thenReturn(builder);\n\t\twhen(builder.connectionMaxIdleTime(any())).thenReturn(builder);\n\t\twhen(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder);\n\t\twhen(builder.connectionAcquisitionTimeout(any())).thenReturn(builder);\n\t\twhen(builder.protocol(any())).thenReturn(builder);\n\t\twhen(builder.http2Configuration(any(Http2Configuration.class))).thenReturn(builder);\n\n\t\treturn builder;\n\t}\n","date":"2020-09-21 13:36:37","endLine":396,"groupId":"2184","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"mockHttpClientBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/4d/96ab8dd5389eb67d1121d92c85f82b03826693.src","preCode":"\tprivate NettyNioAsyncHttpClient.Builder mockHttpClientBuilder() {\n\t\tNettyNioAsyncHttpClient.Builder builder = mock(NettyNioAsyncHttpClient.Builder.class);\n\t\twhen(builder.maxConcurrency(anyInt())).thenReturn(builder);\n\t\twhen(builder.connectionTimeout(any())).thenReturn(builder);\n\t\twhen(builder.writeTimeout(any())).thenReturn(builder);\n\t\twhen(builder.connectionMaxIdleTime(any())).thenReturn(builder);\n\t\twhen(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder);\n\t\twhen(builder.connectionAcquisitionTimeout(any())).thenReturn(builder);\n\t\twhen(builder.protocol(any())).thenReturn(builder);\n\t\twhen(builder.http2Configuration(any(Http2Configuration.class))).thenReturn(builder);\n\n\t\treturn builder;\n\t}\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/AwsV2UtilTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"N"},{"authorDate":"2020-12-28 21:30:59","commitOrder":3,"curCode":"            mockWebIdentityTokenFileCredentialsProviderBuilder() {\n        WebIdentityTokenFileCredentialsProvider.Builder builder =\n                mock(WebIdentityTokenFileCredentialsProvider.Builder.class);\n        when(builder.roleArn(any())).thenReturn(builder);\n        when(builder.roleSessionName(any())).thenReturn(builder);\n        when(builder.webIdentityTokenFile(any())).thenReturn(builder);\n\n        return builder;\n    }\n","date":"2020-12-28 21:35:13","endLine":445,"groupId":"2186","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"mockWebIdentityTokenFileCredentialsProviderBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/18/5817acaf1bb524914cbd8ab02c4402e23ee815.src","preCode":"\tprivate WebIdentityTokenFileCredentialsProvider.Builder mockWebIdentityTokenFileCredentialsProviderBuilder() {\n\t\tWebIdentityTokenFileCredentialsProvider.Builder builder = mock(WebIdentityTokenFileCredentialsProvider.Builder.class);\n\t\twhen(builder.roleArn(any())).thenReturn(builder);\n\t\twhen(builder.roleSessionName(any())).thenReturn(builder);\n\t\twhen(builder.webIdentityTokenFile(any())).thenReturn(builder);\n\n\t\treturn builder;\n\t}\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/AwsV2UtilTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"M"}],"commitId":"c6997c97c575d334679915c328792b8a3067cfb5","commitMessage":"@@@[FLINK-20651] Format code with Spotless/google-java-format\n","date":"2020-12-28 21:35:13","modifiedFileCount":"11013","status":"M","submitter":"Rufus Refactor"},{"authorTime":"2020-12-28 21:30:59","codes":[{"authorDate":"2021-08-16 16:37:55","commitOrder":4,"curCode":"    private NettyNioAsyncHttpClient.Builder mockHttpClientBuilder() {\n        NettyNioAsyncHttpClient.Builder builder = mock(NettyNioAsyncHttpClient.Builder.class);\n        when(builder.maxConcurrency(anyInt())).thenReturn(builder);\n        when(builder.connectionTimeout(any())).thenReturn(builder);\n        when(builder.writeTimeout(any())).thenReturn(builder);\n        when(builder.connectionMaxIdleTime(any())).thenReturn(builder);\n        when(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder);\n        when(builder.connectionAcquisitionTimeout(any())).thenReturn(builder);\n        when(builder.protocol(any())).thenReturn(builder);\n        when(builder.http2Configuration(any(Http2Configuration.class))).thenReturn(builder);\n        when(builder.tcpKeepAlive(anyBoolean())).thenReturn(builder);\n        when(builder.readTimeout(any())).thenReturn(builder);\n\n        return builder;\n    }\n","date":"2021-08-16 23:00:02","endLine":453,"groupId":"10670","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"mockHttpClientBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/42/cea41b67dd9d372e81d982f7510ee1000d2eec.src","preCode":"    private NettyNioAsyncHttpClient.Builder mockHttpClientBuilder() {\n        NettyNioAsyncHttpClient.Builder builder = mock(NettyNioAsyncHttpClient.Builder.class);\n        when(builder.maxConcurrency(anyInt())).thenReturn(builder);\n        when(builder.connectionTimeout(any())).thenReturn(builder);\n        when(builder.writeTimeout(any())).thenReturn(builder);\n        when(builder.connectionMaxIdleTime(any())).thenReturn(builder);\n        when(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder);\n        when(builder.connectionAcquisitionTimeout(any())).thenReturn(builder);\n        when(builder.protocol(any())).thenReturn(builder);\n        when(builder.http2Configuration(any(Http2Configuration.class))).thenReturn(builder);\n\n        return builder;\n    }\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/AwsV2UtilTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":439,"status":"M"},{"authorDate":"2020-12-28 21:30:59","commitOrder":4,"curCode":"            mockWebIdentityTokenFileCredentialsProviderBuilder() {\n        WebIdentityTokenFileCredentialsProvider.Builder builder =\n                mock(WebIdentityTokenFileCredentialsProvider.Builder.class);\n        when(builder.roleArn(any())).thenReturn(builder);\n        when(builder.roleSessionName(any())).thenReturn(builder);\n        when(builder.webIdentityTokenFile(any())).thenReturn(builder);\n\n        return builder;\n    }\n","date":"2020-12-28 21:35:13","endLine":445,"groupId":"10670","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"mockWebIdentityTokenFileCredentialsProviderBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-flink-10-0.7/blobInfo/CC_OUT/blobs/18/5817acaf1bb524914cbd8ab02c4402e23ee815.src","preCode":"            mockWebIdentityTokenFileCredentialsProviderBuilder() {\n        WebIdentityTokenFileCredentialsProvider.Builder builder =\n                mock(WebIdentityTokenFileCredentialsProvider.Builder.class);\n        when(builder.roleArn(any())).thenReturn(builder);\n        when(builder.roleSessionName(any())).thenReturn(builder);\n        when(builder.webIdentityTokenFile(any())).thenReturn(builder);\n\n        return builder;\n    }\n","realPath":"flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/util/AwsV2UtilTest.java","repoName":"flink","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"}],"commitId":"ac8c5a2f5551f36f794b144e1a449a56c00acb08","commitMessage":"@@@[FLINK-23802][kinesis][efo] Request next record from the Flink source thread rather than the AWS SDK response thread. Increase Read Timeout to 6m.  higher than the maximum Shard subscription duration (5m) and enable TCP keep alive.\n","date":"2021-08-16 23:00:02","modifiedFileCount":"8","status":"M","submitter":"Danny Cranmer"}]
