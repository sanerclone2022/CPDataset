[{"authorTime":"2008-09-26 22:19:58","codes":[{"authorDate":"2009-08-27 18:14:07","commitOrder":12,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.equals(\"\")) {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !file.getName().equals(\".\")\n                        && !file.getName().equals(\"..\")) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2009-08-27 18:14:07","endLine":452,"groupId":"2135","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3a/490e4782ed37f2c31e237802fb6132e360acca.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.equals(\"\")) {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !file.getName().equals(\".\")\n                        && !file.getName().equals(\"..\")) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":390,"status":"B"},{"authorDate":"2008-09-26 22:19:58","commitOrder":12,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.equals(\"\")) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !file.getName().equals(\".\")\n                        && !file.getName().equals(\"..\")) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2008-09-26 22:19:58","endLine":546,"groupId":"2135","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/cd/243b09db73d3c80684824a031e52086763e091.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.equals(\"\")) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !file.getName().equals(\".\")\n                        && !file.getName().equals(\"..\")) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":484,"status":"NB"}],"commitId":"d72413184949c04015b452cf9cdf36bf2107061f","commitMessage":"@@@refactored <ftp> so commons-net may be loaded via a separate classloader.  Based on patch by Greg Roodt in PR 45860.  Not really tested.  yet.  therefore I haven't changed defaults.properties so far\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@808350 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-08-27 18:14:07","modifiedFileCount":"3","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2008-09-26 22:19:58","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":13,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (!\"\".equals(vpath)) {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !\".\".equals(file.getName())\n                        && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2017-04-13 23:15:22","endLine":454,"groupId":"1869","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f5/46b230ba9f5fd9068433aa8620bc9d58b1f599.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.equals(\"\")) {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !file.getName().equals(\".\")\n                        && !file.getName().equals(\"..\")) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"M"},{"authorDate":"2008-09-26 22:19:58","commitOrder":13,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.equals(\"\")) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !file.getName().equals(\".\")\n                        && !file.getName().equals(\"..\")) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2008-09-26 22:19:58","endLine":546,"groupId":"2135","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/cd/243b09db73d3c80684824a031e52086763e091.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.equals(\"\")) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !file.getName().equals(\".\")\n                        && !file.getName().equals(\"..\")) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":484,"status":"N"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"},{"authorTime":"2018-02-02 01:03:19","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":14,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (!\"\".equals(vpath)) {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !\".\".equals(file.getName())\n                        && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2017-04-13 23:15:22","endLine":454,"groupId":"1869","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f5/46b230ba9f5fd9068433aa8620bc9d58b1f599.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (!\"\".equals(vpath)) {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !\".\".equals(file.getName())\n                        && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":392,"status":"N"},{"authorDate":"2018-02-02 01:03:19","commitOrder":14,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !\".\".equals(file.getName())\n                        && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2018-02-02 13:10:43","endLine":561,"groupId":"1869","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/9a/a1b491be11e275a4de22664a323e010eb2ffbf.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.equals(\"\")) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !file.getName().equals(\".\")\n                        && !file.getName().equals(\"..\")) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":499,"status":"M"}],"commitId":"02e32f76ca0730eb46649d4e0c59c1945355221f","commitMessage":"@@@Use equals method of a string literal to prevent NPE and isEmpty() method instead of comparing a String object with an empty string.\n","date":"2018-02-02 13:10:43","modifiedFileCount":"4","status":"M","submitter":"reudismam"},{"authorTime":"2018-04-01 16:26:49","codes":[{"authorDate":"2018-04-01 16:26:49","commitOrder":15,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (!\"\".equals(vpath)) {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2018-04-01 16:26:49","endLine":456,"groupId":"1869","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/b6/0bf9514bc2eea0c6093ef137060e37d84b79e9.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (!\"\".equals(vpath)) {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !\".\".equals(file.getName())\n                        && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":395,"status":"M"},{"authorDate":"2018-04-01 16:26:49","commitOrder":15,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2018-04-01 16:26:49","endLine":563,"groupId":"1869","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/81/54a1ddc8b4d4f09f6aa355cde822bf57b434d4.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (int i = 0; i < newfiles.length; i++) {\n                    FTPFile file = newfiles[i];\n                    if (file != null\n                        && !\".\".equals(file.getName())\n                        && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                                      new AntFTPFile(ftp, file, completePath) , fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"M"}],"commitId":"1c80d507f496dde98869890e671edf635bef8dec","commitMessage":"@@@Use foreach loops","date":"2018-04-01 16:26:49","modifiedFileCount":"123","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-01 16:26:49","codes":[{"authorDate":"2018-04-07 02:40:04","commitOrder":16,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (vpath.isEmpty()) {\n                    completePath = rootPath;\n                } else {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2018-04-07 02:40:04","endLine":449,"groupId":"1869","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/f38780229658234a5e780603d8b6140922116f.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (!\"\".equals(vpath)) {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":388,"status":"M"},{"authorDate":"2018-04-01 16:26:49","commitOrder":16,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2018-04-01 16:26:49","endLine":563,"groupId":"1869","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/81/54a1ddc8b4d4f09f6aa355cde822bf57b434d4.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"N"}],"commitId":"73bda1fb1795335156e6fc9dc8a539ab805bf20c","commitMessage":"@@@Use isEmpty() in tasks","date":"2018-04-07 02:40:04","modifiedFileCount":"13","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2019-05-17 12:21:46","codes":[{"authorDate":"2018-04-07 02:40:04","commitOrder":17,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (vpath.isEmpty()) {\n                    completePath = rootPath;\n                } else {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2018-04-07 02:40:04","endLine":449,"groupId":"1869","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/f38780229658234a5e780603d8b6140922116f.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (vpath.isEmpty()) {\n                    completePath = rootPath;\n                } else {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":388,"status":"N"},{"authorDate":"2019-05-17 12:21:46","commitOrder":17,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else {\n                                \r\n                                \r\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2019-05-17 12:25:35","endLine":553,"groupId":"1869","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/58/38e1e3198598034726e4bb273ade38fd929adb.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":490,"status":"M"}],"commitId":"0259c0b981e997a67a926c5303e8906250b30bb6","commitMessage":"@@@bz-63259 Don't check the FTP file for being a symlink.  more than once\n\nPatch contributed by Eug?ne Adell.  as an attachment in the bugzilla issue.\n\nSigned-off-by: Jaikiran Pai <jaikiran@apache.org>\n","date":"2019-05-17 12:25:35","modifiedFileCount":"1","status":"M","submitter":"Jaikiran Pai"},{"authorTime":"2019-06-01 20:18:52","codes":[{"authorDate":"2018-04-07 02:40:04","commitOrder":18,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (vpath.isEmpty()) {\n                    completePath = rootPath;\n                } else {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2018-04-07 02:40:04","endLine":449,"groupId":"1869","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/f38780229658234a5e780603d8b6140922116f.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (vpath.isEmpty()) {\n                    completePath = rootPath;\n                } else {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":388,"status":"N"},{"authorDate":"2019-06-01 20:18:52","commitOrder":18,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else {\n                                \r\n                                \r\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (FTPConnectionClosedException ftpcce) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", ftpcce);\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2019-06-01 20:18:52","endLine":557,"groupId":"1869","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ee/3d30ba2eab030619f08f05c3310096841a834c.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else {\n                                \r\n                                \r\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":491,"status":"M"}],"commitId":"382edda47687bf2eec6f65f0f17e29e81b7cf847","commitMessage":"@@@Patch improving FTP Connection Closed error handling and reporting by\nEugene Adell","date":"2019-06-01 20:18:52","modifiedFileCount":"1","status":"M","submitter":"jkf"},{"authorTime":"2019-07-12 22:24:54","codes":[{"authorDate":"2018-04-07 02:40:04","commitOrder":19,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (vpath.isEmpty()) {\n                    completePath = rootPath;\n                } else {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2018-04-07 02:40:04","endLine":449,"groupId":"1869","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/f38780229658234a5e780603d8b6140922116f.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (vpath.isEmpty()) {\n                    completePath = rootPath;\n                } else {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":388,"status":"N"},{"authorDate":"2019-07-12 22:24:54","commitOrder":19,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else {\n                                \r\n                                \r\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                    if(wakeUpTransferInterval > 0) {\n                        if(wakeUpTransferIntervalExpired()) {\n                            getProject().log(\"wakeUpTransferInterval is reached, trigger a data connection \" , Project.MSG_DEBUG);\n                            \r\n                            ftp.listFiles(file.getName());\n                        }\n                    }\n\n                }\n                ftp.changeToParentDirectory();\n            } catch (FTPConnectionClosedException ftpcce) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", ftpcce);\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2019-07-12 22:24:54","endLine":570,"groupId":"1869","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/33/d27ecf8f1495f8802cbac08e2d3fdfdde5e152.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else {\n                                \r\n                                \r\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (FTPConnectionClosedException ftpcce) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", ftpcce);\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"M"}],"commitId":"b719dcff3d6cd3e79705dcbcb9357579ae8ff711","commitMessage":"@@@Bugzilla 63252 FTP prevent No Transfer Timeout during long listings by Eugene Adell\n","date":"2019-07-12 22:24:54","modifiedFileCount":"1","status":"M","submitter":"jkf"},{"authorTime":"2019-07-14 17:40:34","codes":[{"authorDate":"2018-04-07 02:40:04","commitOrder":20,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (vpath.isEmpty()) {\n                    completePath = rootPath;\n                } else {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2018-04-07 02:40:04","endLine":449,"groupId":"1869","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/f38780229658234a5e780603d8b6140922116f.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (vpath.isEmpty()) {\n                    completePath = rootPath;\n                } else {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":388,"status":"N"},{"authorDate":"2019-07-14 17:40:34","commitOrder":20,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else {\n                                \r\n                                \r\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                    if (wakeUpTransferInterval > 0) {\n                        if (wakeUpTransferIntervalExpired()) {\n                            getProject().log(\"wakeUpTransferInterval is reached,\"\n                                    + \" trigger a data connection \", Project.MSG_DEBUG);\n                            \r\n                            ftp.listFiles(file.getName());\n                        }\n                    }\n\n                }\n                ftp.changeToParentDirectory();\n            } catch (FTPConnectionClosedException ftpcce) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", ftpcce);\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2019-07-14 17:40:34","endLine":571,"groupId":"1869","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/04/2768a3e622957583acddc644449711fef0a4bc.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else {\n                                \r\n                                \r\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                    if(wakeUpTransferInterval > 0) {\n                        if(wakeUpTransferIntervalExpired()) {\n                            getProject().log(\"wakeUpTransferInterval is reached, trigger a data connection \" , Project.MSG_DEBUG);\n                            \r\n                            ftp.listFiles(file.getName());\n                        }\n                    }\n\n                }\n                ftp.changeToParentDirectory();\n            } catch (FTPConnectionClosedException ftpcce) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", ftpcce);\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"M"}],"commitId":"bd7934edef401bedd9c0c6a672aba28a004e4143","commitMessage":"@@@FTP checkstyle fixed + removed spurious part from ftp.html\n","date":"2019-07-14 17:40:34","modifiedFileCount":"1","status":"M","submitter":"jkf"},{"authorTime":"2020-07-29 21:39:47","codes":[{"authorDate":"2018-04-07 02:40:04","commitOrder":21,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (vpath.isEmpty()) {\n                    completePath = rootPath;\n                } else {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2018-04-07 02:40:04","endLine":449,"groupId":"10478","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/f38780229658234a5e780603d8b6140922116f.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath;\n                if (vpath.isEmpty()) {\n                    completePath = rootPath;\n                } else {\n                    completePath = rootPath + task.getSeparator()\n                        + vpath.replace(File.separatorChar, task.getSeparator().charAt(0));\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else if (isFunctioningAsFile(ftp, dir, file)) {\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":388,"status":"N"},{"authorDate":"2020-07-29 21:39:47","commitOrder":21,"curCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else {\n                                \r\n                                \r\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                    if (wakeUpTransferInterval > 0) {\n                        if (wakeUpTransferIntervalExpired()) {\n                            getProject().log(\"wakeUpTransferInterval is reached,\"\n                                    + \" trigger a data connection \", Project.MSG_DEBUG);\n                            \r\n                            ftp.listFiles(file.getName());\n                        }\n                    }\n\n                }\n                ftp.changeToParentDirectory();\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","date":"2020-07-29 21:39:47","endLine":568,"groupId":"10478","id":20,"instanceNumber":2,"isCurCommit":1,"methodName":"scandir","params":"(Stringdir@Stringvpath@booleanfast)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/5e/2c9358d1be0297d75708b80bf66ea6f6a87c23.src","preCode":"        protected void scandir(String dir, String vpath, boolean fast) {\n            \r\n            if (fast && hasBeenScanned(vpath)) {\n                return;\n            }\n            try {\n                if (!ftp.changeWorkingDirectory(dir)) {\n                    return;\n                }\n                String completePath = null;\n                if (!vpath.isEmpty()) {\n                    completePath = rootPath + remoteFileSep\n                        + vpath.replace(File.separatorChar, remoteFileSep.charAt(0));\n                } else {\n                    completePath = rootPath;\n                }\n                FTPFile[] newfiles = listFiles(completePath, false);\n\n                if (newfiles == null) {\n                    ftp.changeToParentDirectory();\n                    return;\n                }\n                for (FTPFile file : newfiles) {\n                    if (file != null\n                            && !\".\".equals(file.getName())\n                            && !\"..\".equals(file.getName())) {\n                        String name = vpath + file.getName();\n                        scannedDirs.put(name, new FTPFileProxy(file));\n                        if (isFunctioningAsDirectory(ftp, dir, file)) {\n                            boolean slowScanAllowed = true;\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                dirsExcluded.addElement(name);\n                                slowScanAllowed = false;\n                            } else if (isIncluded(name)) {\n                                accountForIncludedDir(name,\n                                        new AntFTPFile(ftp, file, completePath), fast);\n                            } else {\n                                dirsNotIncluded.addElement(name);\n                                if (fast && couldHoldIncluded(name)) {\n                                    scandir(file.getName(),\n                                            name + File.separator, fast);\n                                }\n                            }\n                            if (!fast && slowScanAllowed) {\n                                scandir(file.getName(),\n                                        name + File.separator, fast);\n                            }\n                        } else {\n                            if (!isFollowSymlinks() && file.isSymbolicLink()) {\n                                filesExcluded.addElement(name);\n                            } else {\n                                \r\n                                \r\n                                accountForIncludedFile(name);\n                            }\n                        }\n                    }\n                    if (wakeUpTransferInterval > 0) {\n                        if (wakeUpTransferIntervalExpired()) {\n                            getProject().log(\"wakeUpTransferInterval is reached,\"\n                                    + \" trigger a data connection \", Project.MSG_DEBUG);\n                            \r\n                            ftp.listFiles(file.getName());\n                        }\n                    }\n\n                }\n                ftp.changeToParentDirectory();\n            } catch (FTPConnectionClosedException ftpcce) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", ftpcce);\n            } catch (IOException e) {\n                throw new BuildException(\"Error while communicating with FTP \"\n                                         + \"server: \", e);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":496,"status":"M"}],"commitId":"40d9c2b28eed3a2a6196b6ed4ee4bbcbdd58fa27","commitMessage":"@@@Merge pull request #115 from twogee/duplications\n\nRemove duplicated code","date":"2020-07-29 21:39:47","modifiedFileCount":"11","status":"M","submitter":"Stefan Bodewig"}]
