[{"authorTime":"2001-10-25 23:03:39","codes":[{"authorDate":"2001-10-26 17:36:40","commitOrder":4,"curCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = (String) p.getProperties().get(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n    }\n","date":"2001-10-26 17:36:40","endLine":111,"groupId":"6979","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newRegexp","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/75/b180abb96e2631d3706007dde9ef9cec6e00d8.src","preCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = (String) p.getProperties().get(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"MB"},{"authorDate":"2001-10-25 23:03:39","commitOrder":4,"curCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = (String) p.getProperties().get(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n   }\n","date":"2001-10-25 23:03:39","endLine":115,"groupId":"3968","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newRegexpMatcher","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e6/bc34a8326c1aadab7a2120c2776687b25a0c68.src","preCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = (String) p.getProperties().get(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n   }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"NB"}],"commitId":"be53ecfdc2ff0f8e955eada253ea8d3db38addeb","commitMessage":"@@@Add testcases for the substitution methods (and make them work 8-)\n\nAdd testcase for <replaceregexp>.  this task now works with ORO. \nJakarta Regexp and JDK 1.4 if you use \\1 to refer to parens in the\nregular expression.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@269822 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2001-10-26 17:36:40","modifiedFileCount":"7","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2002-01-31 05:28:10","codes":[{"authorDate":"2002-01-31 05:28:10","commitOrder":5,"curCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n    }\n","date":"2002-01-31 05:28:10","endLine":112,"groupId":"295","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newRegexp","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c9/24c552dd7b172f7770e85233c34f7b9f8f1cab.src","preCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = (String) p.getProperties().get(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2002-01-31 05:28:10","commitOrder":5,"curCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n   }\n","date":"2002-01-31 05:28:10","endLine":115,"groupId":"3968","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newRegexpMatcher","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6e/f638c909ba116abfba2dc14057931bdcc1a19b.src","preCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = (String) p.getProperties().get(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n   }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"ea5618017b70e85098751a10bc241a44131fa2bc","commitMessage":"@@@Remove inefficient property access\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@271012 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2002-01-31 05:28:10","modifiedFileCount":"2","status":"M","submitter":"Conor MacNeill"},{"authorTime":"2003-01-06 21:51:26","codes":[{"authorDate":"2003-01-06 21:51:26","commitOrder":6,"curCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n    }\n","date":"2003-01-06 21:51:26","endLine":113,"groupId":"2099","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"newRegexp","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/38/e6e6d94f0334ee8c98c20bdfd689a64f5dfc2e.src","preCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2003-01-06 21:51:26","commitOrder":6,"curCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n   }\n","date":"2003-01-06 21:51:26","endLine":118,"groupId":"2099","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newRegexpMatcher","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/9e/ab16b580f83dfc55030eb816f2c7188a5c2dc9.src","preCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {}\n        \n        try {\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n   }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"c41bb8f6a3276daa0852274efd805820df3403b0","commitMessage":"@@@Deal with lazy class verification.\n\nPR: 15377\nSubmitted by:\tDavid Konecny <david.konecny at volny.cz>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@273760 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-01-06 21:51:26","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2005-10-06 23:48:23","codes":[{"authorDate":"2003-01-06 21:51:26","commitOrder":7,"curCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n    }\n","date":"2003-01-06 21:51:26","endLine":113,"groupId":"2099","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"newRegexp","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/38/e6e6d94f0334ee8c98c20bdfd689a64f5dfc2e.src","preCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n        \n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {}\n        \n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {}\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"N"},{"authorDate":"2005-10-06 23:48:23","commitOrder":7,"curCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n   }\n","date":"2005-10-06 23:48:23","endLine":94,"groupId":"2099","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"newRegexpMatcher","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/27/69fea1fa397f0700b02c11366878522fda05cf.src","preCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n   }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"3f1d4561b6f5dce04f3896ed1c86fdb50e57d862","commitMessage":"@@@magic name\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@306781 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2005-10-06 23:48:23","modifiedFileCount":"2","status":"M","submitter":"Matthew Jason Benson"},{"authorTime":"2006-08-19 05:21:54","codes":[{"authorDate":"2006-08-19 05:21:54","commitOrder":8,"curCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n\n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, JavaEnvUtils.getJavaVersionNumber() < 14);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        throw new BuildException(\"No supported regular expression matcher found\" +\n                (cause != null ? \": \" + cause : \"\"), cause);\n    }\n","date":"2006-08-19 05:21:54","endLine":90,"groupId":"2167","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"newRegexp","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f0/b758afa64d3da8a04eb9d6214394db039218a4.src","preCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n\n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2006-08-19 05:21:54","commitOrder":8,"curCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, JavaEnvUtils.getJavaVersionNumber() < 14);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        throw new BuildException(\"No supported regular expression matcher found\" +\n                (cause != null ? \": \" + cause : \"\"), cause);\n   }\n","date":"2006-08-19 05:21:54","endLine":98,"groupId":"7084","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"newRegexpMatcher","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/1c/2ff166229bc3552916a85fc00be0e9ec3a24c2.src","preCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {\n            \r\n        }\n\n        throw new BuildException(\"No supported regular expression matcher found\");\n   }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"136c2556ccb76f1c72452d7b1318e25251455c6a","commitMessage":"@@@Providing more information in case a regexp impl is unavailable for unexpected reasons.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@432728 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-08-19 05:21:54","modifiedFileCount":"2","status":"M","submitter":"Jesse N. Glick"},{"authorTime":"2006-08-19 05:21:54","codes":[{"authorDate":"2007-06-30 02:14:51","commitOrder":9,"curCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, JavaEnvUtils.getJavaVersionNumber() < 14);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n        throw new BuildException(\"No supported regular expression matcher found\"\n                + (cause != null ? \": \" + cause : \"\"), cause);\n    }\n","date":"2007-06-30 02:14:51","endLine":92,"groupId":"2167","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"newRegexp","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/9d/f1cdb426e56cc463379cc543c381fa84df9736.src","preCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");\n        } else {\n            systemDefault = p.getProperty(\"ant.regexp.regexpimpl\");\n        }\n\n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, JavaEnvUtils.getJavaVersionNumber() < 14);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        throw new BuildException(\n            \"No supported regular expression matcher found\"\n            + (cause != null ? \": \" + cause : \"\"), cause);\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2006-08-19 05:21:54","commitOrder":9,"curCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, JavaEnvUtils.getJavaVersionNumber() < 14);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        throw new BuildException(\"No supported regular expression matcher found\" +\n                (cause != null ? \": \" + cause : \"\"), cause);\n   }\n","date":"2006-08-19 05:21:54","endLine":98,"groupId":"7084","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"newRegexpMatcher","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/1c/2ff166229bc3552916a85fc00be0e9ec3a24c2.src","preCode":"    public RegexpMatcher newRegexpMatcher(Project p)\n        throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, JavaEnvUtils.getJavaVersionNumber() < 14);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        throw new BuildException(\"No supported regular expression matcher found\" +\n                (cause != null ? \": \" + cause : \"\"), cause);\n   }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"}],"commitId":"c64fafb60c841a1c7f014340167a84b32c0d19e3","commitMessage":"@@@fmting/refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@551986 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-06-30 02:14:51","modifiedFileCount":"2","status":"M","submitter":"Matthew Jason Benson"},{"authorTime":"2007-08-23 01:09:55","codes":[{"authorDate":"2007-08-23 01:09:55","commitOrder":10,"curCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(\n                cause, be,\n                JavaEnvUtils.getJavaVersionNumber() < JavaEnvUtils.VERSION_1_4);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n        throw new BuildException(\"No supported regular expression matcher found\"\n                + (cause != null ? \": \" + cause : \"\"), cause);\n    }\n","date":"2007-08-23 01:09:55","endLine":94,"groupId":"2167","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"newRegexp","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/50/4621f59f7a616d02007f967911ccbfeb8b37cc.src","preCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, JavaEnvUtils.getJavaVersionNumber() < 14);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n        throw new BuildException(\"No supported regular expression matcher found\"\n                + (cause != null ? \": \" + cause : \"\"), cause);\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2007-08-23 01:09:55","commitOrder":10,"curCode":"    public RegexpMatcher newRegexpMatcher(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(\n                cause, be,\n                JavaEnvUtils.getJavaVersionNumber() < JavaEnvUtils.VERSION_1_4);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n        throw new BuildException(\"No supported regular expression matcher found\"\n                + (cause != null ? \": \" + cause : \"\"), cause);\n    }\n","date":"2007-08-23 01:09:55","endLine":97,"groupId":"7084","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"newRegexpMatcher","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/b7/8a27bfffb7c0ea9bfccf6acd5689ed57573475.src","preCode":"    public RegexpMatcher newRegexpMatcher(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, JavaEnvUtils.getJavaVersionNumber() < 14);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n        throw new BuildException(\"No supported regular expression matcher found\"\n                + (cause != null ? \": \" + cause : \"\"), cause);\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"ddd5fc4276489cf7fd8c5cefa8e048864fc424b1","commitMessage":"@@@remove some magic numbers\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@568704 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-08-23 01:09:55","modifiedFileCount":"4","status":"M","submitter":"Peter Reilly"},{"authorTime":"2009-08-27 03:42:25","codes":[{"authorDate":"2009-08-27 03:42:25","commitOrder":11,"curCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        return new Jdk14RegexpRegexp();\n    }\n","date":"2009-08-27 03:42:25","endLine":68,"groupId":"2099","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"newRegexp","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/03/5cf712393038423b38ee97eeb4d629cf1a8b07.src","preCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(\n                cause, be,\n                JavaEnvUtils.getJavaVersionNumber() < JavaEnvUtils.VERSION_1_4);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n        throw new BuildException(\"No supported regular expression matcher found\"\n                + (cause != null ? \": \" + cause : \"\"), cause);\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2009-08-27 03:42:25","commitOrder":11,"curCode":"    public RegexpMatcher newRegexpMatcher(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        return new Jdk14RegexpMatcher();\n    }\n","date":"2009-08-27 03:42:25","endLine":71,"groupId":"2099","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"newRegexpMatcher","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/d6/9888e42a144ce05d3ecea09e1f99391c9c2e30.src","preCode":"    public RegexpMatcher newRegexpMatcher(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        Throwable cause = null;\n\n        try {\n            testAvailability(\"java.util.regex.Matcher\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(\n                cause, be,\n                JavaEnvUtils.getJavaVersionNumber() < JavaEnvUtils.VERSION_1_4);\n        }\n\n        try {\n            testAvailability(\"org.apache.oro.text.regex.Pattern\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n\n        try {\n            testAvailability(\"org.apache.regexp.RE\");\n            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");\n        } catch (BuildException be) {\n            cause = orCause(cause, be, true);\n        }\n        throw new BuildException(\"No supported regular expression matcher found\"\n                + (cause != null ? \": \" + cause : \"\"), cause);\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"efd287b871106edf3efb9e1b96aeea16b85f0549","commitMessage":"@@@More cleanup of pre-1.4 code and docs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@808163 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-08-27 03:42:25","modifiedFileCount":"15","status":"M","submitter":"Jesse N. Glick"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":12,"curCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        return new Jdk14RegexpRegexp();\n    }\n","date":"2017-04-13 23:15:22","endLine":64,"groupId":"10588","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"newRegexp","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8e/1ee0ae8b3ac625d7f6ebd1ad3a54aa510f79d7.src","preCode":"    public Regexp newRegexp(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createRegexpInstance(systemDefault);\n            \r\n            \r\n        }\n\n        return new Jdk14RegexpRegexp();\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":12,"curCode":"    public RegexpMatcher newRegexpMatcher(Project p) throws BuildException {\n        String systemDefault;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        return new Jdk14RegexpMatcher();\n    }\n","date":"2017-04-13 23:15:22","endLine":67,"groupId":"10588","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"newRegexpMatcher","params":"(Projectp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/22/d58886c92c91b06b31a4b28ff7f730863561da.src","preCode":"    public RegexpMatcher newRegexpMatcher(Project p) throws BuildException {\n        String systemDefault = null;\n        if (p == null) {\n            systemDefault = System.getProperty(MagicNames.REGEXP_IMPL);\n        } else {\n            systemDefault = p.getProperty(MagicNames.REGEXP_IMPL);\n        }\n\n        if (systemDefault != null) {\n            return createInstance(systemDefault);\n            \r\n            \r\n        }\n\n        return new Jdk14RegexpMatcher();\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"}]
