[{"authorTime":"2016-05-23 12:01:03","codes":[{"authorDate":"2016-05-23 12:01:03","commitOrder":5,"curCode":"    private void upload(final List<ResourceCollection> rcs, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            final List<Directory> list = new ArrayList<Directory>(rcs.size());\n            for (final Iterator<ResourceCollection> i = rcs.iterator(); i.hasNext();) {\n                final ResourceCollection rc = (ResourceCollection) i.next();\n                if (rc instanceof FileSet && rc.isFilesystemOnly()) {\n                    FileSet fs = (FileSet) rc;\n                    final Directory d = createDirectory(fs);\n                    if (d != null) {\n                        list.add(d);\n                    }\n                } else {\n                       List<Directory> ds = createDirectoryCollection(rc);\n                       if (ds !=null) {\n                               list.addAll(ds);\n                       }\n                }\n            }\n            if (!list.isEmpty()) {\n                session = openSession();\n                ScpToMessage message = null;\n                if (!isSftp) {\n                    message = new ScpToMessage(getVerbose(), compressed, session,\n                                               list, file, preserveLastModified);\n                } else {\n                    message = new ScpToMessageBySftp(getVerbose(), session,\n                                                     list, file);\n                }\n                message.setLogListener(this);\n                if (fileMode != null) {\n                    message.setFileMode(fileMode.intValue());\n                }\n                if (dirMode != null) {\n                    message.setDirMode(dirMode.intValue());\n                }\n                message.execute();\n            }\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","date":"2016-05-23 12:01:03","endLine":373,"groupId":"272","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"upload","params":"(finalList<ResourceCollection>rcs@finalStringtoSshUri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/d2/a09bc6860cefa2ef0e4fe3208fafce573259ab.src","preCode":"    private void upload(final List<ResourceCollection> rcs, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            final List<Directory> list = new ArrayList<Directory>(rcs.size());\n            for (final Iterator<ResourceCollection> i = rcs.iterator(); i.hasNext();) {\n                final ResourceCollection rc = (ResourceCollection) i.next();\n                if (rc instanceof FileSet && rc.isFilesystemOnly()) {\n                    FileSet fs = (FileSet) rc;\n                    final Directory d = createDirectory(fs);\n                    if (d != null) {\n                        list.add(d);\n                    }\n                } else {\n                       List<Directory> ds = createDirectoryCollection(rc);\n                       if (ds !=null) {\n                               list.addAll(ds);\n                       }\n                }\n            }\n            if (!list.isEmpty()) {\n                session = openSession();\n                ScpToMessage message = null;\n                if (!isSftp) {\n                    message = new ScpToMessage(getVerbose(), compressed, session,\n                                               list, file, preserveLastModified);\n                } else {\n                    message = new ScpToMessageBySftp(getVerbose(), session,\n                                                     list, file);\n                }\n                message.setLogListener(this);\n                if (fileMode != null) {\n                    message.setFileMode(fileMode.intValue());\n                }\n                if (dirMode != null) {\n                    message.setDirMode(dirMode.intValue());\n                }\n                message.execute();\n            }\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"MB"},{"authorDate":"2016-05-23 12:01:03","commitOrder":5,"curCode":"    private void upload(final String fromPath, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            session = openSession();\n            ScpToMessage message = null;\n            if (!isSftp) {\n                message =\n                    new ScpToMessage(getVerbose(), compressed, session,\n                                     getProject().resolveFile(fromPath), file,\n                                     preserveLastModified);\n            } else {\n                message =\n                    new ScpToMessageBySftp(getVerbose(), session,\n                                           getProject().resolveFile(fromPath),\n                                           file);\n            }\n            message.setLogListener(this);\n            if (fileMode != null) {\n                message.setFileMode(fileMode.intValue());\n            }\n            if (dirMode != null) {\n                message.setDirMode(dirMode.intValue());\n            }\n            message.execute();\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","date":"2016-05-23 12:01:03","endLine":407,"groupId":"275","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"upload","params":"(finalStringfromPath@finalStringtoSshUri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/d2/a09bc6860cefa2ef0e4fe3208fafce573259ab.src","preCode":"    private void upload(final String fromPath, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            session = openSession();\n            ScpToMessage message = null;\n            if (!isSftp) {\n                message =\n                    new ScpToMessage(getVerbose(), compressed, session,\n                                     getProject().resolveFile(fromPath), file,\n                                     preserveLastModified);\n            } else {\n                message =\n                    new ScpToMessageBySftp(getVerbose(), session,\n                                           getProject().resolveFile(fromPath),\n                                           file);\n            }\n            message.setLogListener(this);\n            if (fileMode != null) {\n                message.setFileMode(fileMode.intValue());\n            }\n            if (dirMode != null) {\n                message.setDirMode(dirMode.intValue());\n            }\n            message.execute();\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":375,"status":"MB"}],"commitId":"5c13bb8417c6d45c261c74e6af6e4844c916a154","commitMessage":"@@@Merge branch '1.9.x'\n","date":"2016-05-23 12:01:03","modifiedFileCount":"4","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2016-05-23 12:01:03","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":6,"curCode":"    private void upload(final List<ResourceCollection> rcs, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            final List<Directory> list = new ArrayList<>(rcs.size());\n            for (ResourceCollection rc : rcs) {\n                if (rc instanceof FileSet && rc.isFilesystemOnly()) {\n                    FileSet fs = (FileSet) rc;\n                    final Directory d = createDirectory(fs);\n                    if (d != null) {\n                        list.add(d);\n                    }\n                } else {\n                    List<Directory> ds = createDirectoryCollection(rc);\n                    if (ds != null) {\n                        list.addAll(ds);\n                    }\n                }\n            }\n            if (!list.isEmpty()) {\n                session = openSession();\n                ScpToMessage message;\n                if (!isSftp) {\n                    message = new ScpToMessage(getVerbose(), compressed, session,\n                                               list, file, preserveLastModified);\n                } else {\n                    message = new ScpToMessageBySftp(getVerbose(), session,\n                                                     list, file);\n                }\n                message.setLogListener(this);\n                if (fileMode != null) {\n                    message.setFileMode(fileMode.intValue());\n                }\n                if (dirMode != null) {\n                    message.setDirMode(dirMode.intValue());\n                }\n                message.execute();\n            }\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":368,"groupId":"912","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"upload","params":"(finalList<ResourceCollection>rcs@finalStringtoSshUri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e6/8f38d0f85e55e458ede0070f1964b27d9a546f.src","preCode":"    private void upload(final List<ResourceCollection> rcs, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            final List<Directory> list = new ArrayList<Directory>(rcs.size());\n            for (final Iterator<ResourceCollection> i = rcs.iterator(); i.hasNext();) {\n                final ResourceCollection rc = (ResourceCollection) i.next();\n                if (rc instanceof FileSet && rc.isFilesystemOnly()) {\n                    FileSet fs = (FileSet) rc;\n                    final Directory d = createDirectory(fs);\n                    if (d != null) {\n                        list.add(d);\n                    }\n                } else {\n                       List<Directory> ds = createDirectoryCollection(rc);\n                       if (ds !=null) {\n                               list.addAll(ds);\n                       }\n                }\n            }\n            if (!list.isEmpty()) {\n                session = openSession();\n                ScpToMessage message = null;\n                if (!isSftp) {\n                    message = new ScpToMessage(getVerbose(), compressed, session,\n                                               list, file, preserveLastModified);\n                } else {\n                    message = new ScpToMessageBySftp(getVerbose(), session,\n                                                     list, file);\n                }\n                message.setLogListener(this);\n                if (fileMode != null) {\n                    message.setFileMode(fileMode.intValue());\n                }\n                if (dirMode != null) {\n                    message.setDirMode(dirMode.intValue());\n                }\n                message.execute();\n            }\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"M"},{"authorDate":"2016-05-23 12:01:03","commitOrder":6,"curCode":"    private void upload(final String fromPath, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            session = openSession();\n            ScpToMessage message = null;\n            if (!isSftp) {\n                message =\n                    new ScpToMessage(getVerbose(), compressed, session,\n                                     getProject().resolveFile(fromPath), file,\n                                     preserveLastModified);\n            } else {\n                message =\n                    new ScpToMessageBySftp(getVerbose(), session,\n                                           getProject().resolveFile(fromPath),\n                                           file);\n            }\n            message.setLogListener(this);\n            if (fileMode != null) {\n                message.setFileMode(fileMode.intValue());\n            }\n            if (dirMode != null) {\n                message.setDirMode(dirMode.intValue());\n            }\n            message.execute();\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","date":"2016-05-23 12:01:03","endLine":407,"groupId":"275","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"upload","params":"(finalStringfromPath@finalStringtoSshUri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/d2/a09bc6860cefa2ef0e4fe3208fafce573259ab.src","preCode":"    private void upload(final String fromPath, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            session = openSession();\n            ScpToMessage message = null;\n            if (!isSftp) {\n                message =\n                    new ScpToMessage(getVerbose(), compressed, session,\n                                     getProject().resolveFile(fromPath), file,\n                                     preserveLastModified);\n            } else {\n                message =\n                    new ScpToMessageBySftp(getVerbose(), session,\n                                           getProject().resolveFile(fromPath),\n                                           file);\n            }\n            message.setLogListener(this);\n            if (fileMode != null) {\n                message.setFileMode(fileMode.intValue());\n            }\n            if (dirMode != null) {\n                message.setDirMode(dirMode.intValue());\n            }\n            message.execute();\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":375,"status":"N"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"},{"authorTime":"2017-09-25 12:52:52","codes":[{"authorDate":"2017-09-25 12:52:52","commitOrder":7,"curCode":"    private void upload(final List<ResourceCollection> rcs, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            final List<Directory> list = new ArrayList<>(rcs.size());\n            for (ResourceCollection rc : rcs) {\n                if (rc instanceof FileSet && rc.isFilesystemOnly()) {\n                    FileSet fs = (FileSet) rc;\n                    final Directory d = createDirectory(fs);\n                    if (d != null) {\n                        list.add(d);\n                    }\n                } else {\n                    List<Directory> ds = createDirectoryCollection(rc);\n                    if (ds != null) {\n                        list.addAll(ds);\n                    }\n                }\n            }\n            if (!list.isEmpty()) {\n                session = openSession();\n                ScpToMessage message;\n                if (!isSftp) {\n                    message = new ScpToMessage(getVerbose(), compressed, session,\n                                               list, file, preserveLastModified);\n                } else {\n                    message = new ScpToMessageBySftp(getVerbose(), session,\n                                                     list, file, preserveLastModified);\n                }\n                message.setLogListener(this);\n                if (fileMode != null) {\n                    message.setFileMode(fileMode.intValue());\n                }\n                if (dirMode != null) {\n                    message.setDirMode(dirMode.intValue());\n                }\n                message.execute();\n            }\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","date":"2017-09-25 12:52:52","endLine":368,"groupId":"912","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"upload","params":"(finalList<ResourceCollection>rcs@finalStringtoSshUri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/71/ea26d338c0c0b8b1a4e5015d30d648d0e310ff.src","preCode":"    private void upload(final List<ResourceCollection> rcs, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            final List<Directory> list = new ArrayList<>(rcs.size());\n            for (ResourceCollection rc : rcs) {\n                if (rc instanceof FileSet && rc.isFilesystemOnly()) {\n                    FileSet fs = (FileSet) rc;\n                    final Directory d = createDirectory(fs);\n                    if (d != null) {\n                        list.add(d);\n                    }\n                } else {\n                    List<Directory> ds = createDirectoryCollection(rc);\n                    if (ds != null) {\n                        list.addAll(ds);\n                    }\n                }\n            }\n            if (!list.isEmpty()) {\n                session = openSession();\n                ScpToMessage message;\n                if (!isSftp) {\n                    message = new ScpToMessage(getVerbose(), compressed, session,\n                                               list, file, preserveLastModified);\n                } else {\n                    message = new ScpToMessageBySftp(getVerbose(), session,\n                                                     list, file);\n                }\n                message.setLogListener(this);\n                if (fileMode != null) {\n                    message.setFileMode(fileMode.intValue());\n                }\n                if (dirMode != null) {\n                    message.setDirMode(dirMode.intValue());\n                }\n                message.execute();\n            }\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"M"},{"authorDate":"2017-09-25 12:52:52","commitOrder":7,"curCode":"    private void upload(final String fromPath, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            session = openSession();\n            ScpToMessage message = null;\n            if (!isSftp) {\n                message =\n                    new ScpToMessage(getVerbose(), compressed, session,\n                                     getProject().resolveFile(fromPath), file,\n                                     preserveLastModified);\n            } else {\n                message =\n                    new ScpToMessageBySftp(getVerbose(), session,\n                                           getProject().resolveFile(fromPath),\n                                           file, preserveLastModified);\n            }\n            message.setLogListener(this);\n            if (fileMode != null) {\n                message.setFileMode(fileMode.intValue());\n            }\n            if (dirMode != null) {\n                message.setDirMode(dirMode.intValue());\n            }\n            message.execute();\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","date":"2017-09-25 12:52:52","endLine":402,"groupId":"9231","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"upload","params":"(finalStringfromPath@finalStringtoSshUri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/71/ea26d338c0c0b8b1a4e5015d30d648d0e310ff.src","preCode":"    private void upload(final String fromPath, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            session = openSession();\n            ScpToMessage message = null;\n            if (!isSftp) {\n                message =\n                    new ScpToMessage(getVerbose(), compressed, session,\n                                     getProject().resolveFile(fromPath), file,\n                                     preserveLastModified);\n            } else {\n                message =\n                    new ScpToMessageBySftp(getVerbose(), session,\n                                           getProject().resolveFile(fromPath),\n                                           file);\n            }\n            message.setLogListener(this);\n            if (fileMode != null) {\n                message.setFileMode(fileMode.intValue());\n            }\n            if (dirMode != null) {\n                message.setDirMode(dirMode.intValue());\n            }\n            message.execute();\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"M"}],"commitId":"1012dd6e2a4937943dd0c6a0245564cf4199f68e","commitMessage":"@@@Merge pull request #39. This closes #39 pull request on github/apache/ant\n","date":"2017-09-25 12:52:52","modifiedFileCount":"2","status":"M","submitter":"Jaikiran Pai"},{"authorTime":"2018-04-02 02:07:39","codes":[{"authorDate":"2018-04-02 02:07:39","commitOrder":8,"curCode":"    private void upload(final List<ResourceCollection> rcs, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            final List<Directory> list = new ArrayList<>(rcs.size());\n            for (ResourceCollection rc : rcs) {\n                if (rc instanceof FileSet && rc.isFilesystemOnly()) {\n                    FileSet fs = (FileSet) rc;\n                    final Directory d = createDirectory(fs);\n                    if (d != null) {\n                        list.add(d);\n                    }\n                } else {\n                    List<Directory> ds = createDirectoryCollection(rc);\n                    if (ds != null) {\n                        list.addAll(ds);\n                    }\n                }\n            }\n            if (!list.isEmpty()) {\n                session = openSession();\n                ScpToMessage message;\n                if (!isSftp) {\n                    message = new ScpToMessage(getVerbose(), compressed, session,\n                                               list, file, preserveLastModified);\n                } else {\n                    message = new ScpToMessageBySftp(getVerbose(), session,\n                                                     list, file, preserveLastModified);\n                }\n                message.setLogListener(this);\n                if (fileMode != null) {\n                    message.setFileMode(fileMode);\n                }\n                if (dirMode != null) {\n                    message.setDirMode(dirMode);\n                }\n                message.execute();\n            }\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","date":"2018-04-02 02:07:39","endLine":379,"groupId":"11438","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"upload","params":"(finalList<ResourceCollection>rcs@finalStringtoSshUri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6d/f9903aef8861e504264a1cbcfde77c385c820e.src","preCode":"    private void upload(final List<ResourceCollection> rcs, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            final List<Directory> list = new ArrayList<>(rcs.size());\n            for (ResourceCollection rc : rcs) {\n                if (rc instanceof FileSet && rc.isFilesystemOnly()) {\n                    FileSet fs = (FileSet) rc;\n                    final Directory d = createDirectory(fs);\n                    if (d != null) {\n                        list.add(d);\n                    }\n                } else {\n                    List<Directory> ds = createDirectoryCollection(rc);\n                    if (ds != null) {\n                        list.addAll(ds);\n                    }\n                }\n            }\n            if (!list.isEmpty()) {\n                session = openSession();\n                ScpToMessage message;\n                if (!isSftp) {\n                    message = new ScpToMessage(getVerbose(), compressed, session,\n                                               list, file, preserveLastModified);\n                } else {\n                    message = new ScpToMessageBySftp(getVerbose(), session,\n                                                     list, file, preserveLastModified);\n                }\n                message.setLogListener(this);\n                if (fileMode != null) {\n                    message.setFileMode(fileMode.intValue());\n                }\n                if (dirMode != null) {\n                    message.setDirMode(dirMode.intValue());\n                }\n                message.execute();\n            }\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":334,"status":"M"},{"authorDate":"2018-04-02 02:07:39","commitOrder":8,"curCode":"    private void upload(final String fromPath, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            session = openSession();\n            ScpToMessage message = null;\n            if (!isSftp) {\n                message =\n                    new ScpToMessage(getVerbose(), compressed, session,\n                                     getProject().resolveFile(fromPath), file,\n                                     preserveLastModified);\n            } else {\n                message =\n                    new ScpToMessageBySftp(getVerbose(), session,\n                                           getProject().resolveFile(fromPath),\n                                           file, preserveLastModified);\n            }\n            message.setLogListener(this);\n            if (fileMode != null) {\n                message.setFileMode(fileMode);\n            }\n            if (dirMode != null) {\n                message.setDirMode(dirMode);\n            }\n            message.execute();\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","date":"2018-04-02 02:07:39","endLine":413,"groupId":"11438","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"upload","params":"(finalStringfromPath@finalStringtoSshUri)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6d/f9903aef8861e504264a1cbcfde77c385c820e.src","preCode":"    private void upload(final String fromPath, final String toSshUri)\n        throws IOException, JSchException {\n        final String file = parseUri(toSshUri);\n\n        Session session = null;\n        try {\n            session = openSession();\n            ScpToMessage message = null;\n            if (!isSftp) {\n                message =\n                    new ScpToMessage(getVerbose(), compressed, session,\n                                     getProject().resolveFile(fromPath), file,\n                                     preserveLastModified);\n            } else {\n                message =\n                    new ScpToMessageBySftp(getVerbose(), session,\n                                           getProject().resolveFile(fromPath),\n                                           file, preserveLastModified);\n            }\n            message.setLogListener(this);\n            if (fileMode != null) {\n                message.setFileMode(fileMode.intValue());\n            }\n            if (dirMode != null) {\n                message.setDirMode(dirMode.intValue());\n            }\n            message.execute();\n        } finally {\n            if (session != null) {\n                session.disconnect();\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":381,"status":"M"}],"commitId":"95495d57aa5cca8fc350ebfb10f6d390f40290cb","commitMessage":"@@@Remove extraneous casts and (un)boxing.  tersify logic","date":"2018-04-02 02:07:39","modifiedFileCount":"178","status":"M","submitter":"Gintas Grigelionis"}]
