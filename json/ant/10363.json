[{"authorTime":"2018-02-28 13:06:58","codes":[{"authorDate":"2018-02-28 13:06:58","commitOrder":1,"curCode":"    public void execute() {\n        validate();\n        for(Iterator itPaths = paths.iterator(); itPaths.hasNext(); ) {\n            Path path = (Path)itPaths.next();\n            String[] includedFiles = path.list();\n            for(int i=0; i<includedFiles.length; i++) {\n                String filename = includedFiles[i].replace('\\\\','/');\n                filename = filename.substring(filename.lastIndexOf(\"/\")+1);\n                if (file.equals(filename) && !foundFiles.contains(includedFiles[i])) {\n                    foundFiles.add(includedFiles[i]);\n                }\n            }\n        }\n        String rv = null;\n        if (foundFiles.size() > 0) {\n            if (delimiter==null) {\n                \r\n                    rv = (String)foundFiles.elementAt(0);\n            } else {\n                \r\n                StringBuffer list = new StringBuffer();\n                for(Iterator it=foundFiles.iterator(); it.hasNext(); ) {\n                    list.append(it.next());\n                    if (it.hasNext()) list.append(delimiter);\n                }\n                rv = list.toString();\n            }\n        }\n\n\n        if (rv!=null)\n            getProject().setNewProperty(location, rv);\n    }\n","date":"2018-02-28 14:59:42","endLine":79,"groupId":"3714","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c6/08af9e3d65250227605951e025b1d4101f7928.src","preCode":"    public void execute() {\n        validate();\n        for(Iterator itPaths = paths.iterator(); itPaths.hasNext(); ) {\n            Path path = (Path)itPaths.next();\n            String[] includedFiles = path.list();\n            for(int i=0; i<includedFiles.length; i++) {\n                String filename = includedFiles[i].replace('\\\\','/');\n                filename = filename.substring(filename.lastIndexOf(\"/\")+1);\n                if (file.equals(filename) && !foundFiles.contains(includedFiles[i])) {\n                    foundFiles.add(includedFiles[i]);\n                }\n            }\n        }\n        String rv = null;\n        if (foundFiles.size() > 0) {\n            if (delimiter==null) {\n                \r\n                    rv = (String)foundFiles.elementAt(0);\n            } else {\n                \r\n                StringBuffer list = new StringBuffer();\n                for(Iterator it=foundFiles.iterator(); it.hasNext(); ) {\n                    list.append(it.next());\n                    if (it.hasNext()) list.append(delimiter);\n                }\n                rv = list.toString();\n            }\n        }\n\n\n        if (rv!=null)\n            getProject().setNewProperty(location, rv);\n    }\n","realPath":"src/tutorial/tasks-filesets-properties/04-lists/src/Find.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2018-02-28 13:06:58","commitOrder":1,"curCode":"    public void execute() {\n        validate();\n        \r\n        for(Iterator itPaths = paths.iterator(); itPaths.hasNext(); ) {\n            Path path = (Path)itPaths.next();\n            String[] includedFiles = path.list();\n            for(int i=0; i<includedFiles.length; i++) {\n                String filename = includedFiles[i].replace('\\\\','/');\n                filename = filename.substring(filename.lastIndexOf(\"/\")+1);\n                if (file.equals(filename) && !foundFiles.contains(includedFiles[i])) {\n                    foundFiles.add(includedFiles[i]);\n                }\n            }\n        }\n\n        \r\n        String rv = null;\n        if (foundFiles.size() > 0) {\n            if (delimiter==null) {\n                \r\n                    rv = (String)foundFiles.elementAt(0);\n            } else {\n                \r\n                StringBuffer list = new StringBuffer();\n                for(Iterator it=foundFiles.iterator(); it.hasNext(); ) {\n                    list.append(it.next());\n                    if (it.hasNext()) list.append(delimiter);\n                }\n                rv = list.toString();\n            }\n        }\n\n        \r\n        if (rv!=null)\n            getProject().setNewProperty(location, rv);\n    }\n","date":"2018-02-28 14:59:42","endLine":139,"groupId":"3714","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/96/fc06f02dacf17e2da88533eed766a74e3985ad.src","preCode":"    public void execute() {\n        validate();\n        \r\n        for(Iterator itPaths = paths.iterator(); itPaths.hasNext(); ) {\n            Path path = (Path)itPaths.next();\n            String[] includedFiles = path.list();\n            for(int i=0; i<includedFiles.length; i++) {\n                String filename = includedFiles[i].replace('\\\\','/');\n                filename = filename.substring(filename.lastIndexOf(\"/\")+1);\n                if (file.equals(filename) && !foundFiles.contains(includedFiles[i])) {\n                    foundFiles.add(includedFiles[i]);\n                }\n            }\n        }\n\n        \r\n        String rv = null;\n        if (foundFiles.size() > 0) {\n            if (delimiter==null) {\n                \r\n                    rv = (String)foundFiles.elementAt(0);\n            } else {\n                \r\n                StringBuffer list = new StringBuffer();\n                for(Iterator it=foundFiles.iterator(); it.hasNext(); ) {\n                    list.append(it.next());\n                    if (it.hasNext()) list.append(delimiter);\n                }\n                rv = list.toString();\n            }\n        }\n\n        \r\n        if (rv!=null)\n            getProject().setNewProperty(location, rv);\n    }\n","realPath":"src/tutorial/tasks-filesets-properties/final/src/Find.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"}],"commitId":"d5f4b681c48ca7b74fdd6ce13dae39f6684aa010","commitMessage":"@@@Add tutorial sources","date":"2018-02-28 14:59:42","modifiedFileCount":"0","status":"B","submitter":"Gintas Grigelionis"},{"authorTime":"2018-02-28 14:55:51","codes":[{"authorDate":"2018-02-28 14:55:51","commitOrder":2,"curCode":"    public void execute() {\n        validate();\n        for (Path path : paths) {\n            for (String includedFile : path.list()) {\n                String filename = includedFile.replace('\\\\','/');\n                filename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n                if (file.equals(filename) && !foundFiles.contains(includedFile)) {\n                    foundFiles.add(includedFile);\n                }\n            }\n        }\n        String rv = null;\n        if (!foundFiles.isEmpty()) {\n            if (delimiter == null) {\n                \r\n                rv = foundFiles.get(0);\n            } else {\n                \r\n                StringBuilder list = new StringBuilder();\n                for (String file : foundFiles) {\n                    if (list.length() > 0) list.append(delimiter);\n                    list.append(file);\n                }\n                rv = list.toString();\n            }\n        }\n\n\n        if (rv != null)\n            getProject().setNewProperty(location, rv);\n    }\n","date":"2018-02-28 14:59:42","endLine":92,"groupId":"4514","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/68/8c8de34366598fb240381cd5890849bae98ebe.src","preCode":"    public void execute() {\n        validate();\n        for (Path path : paths) {\n            for (String includedFile : path.list()) {\n                String filename = includedFile.replace('\\\\','/');\n                filename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n                if (file.equals(filename) && !foundFiles.contains(includedFile)) {\n                    foundFiles.add(includedFile);\n                }\n            }\n        }\n        String rv = null;\n        if (!foundFiles.isEmpty()) {\n            if (delimiter == null) {\n                \r\n                rv = foundFiles.get(0);\n            } else {\n                \r\n                StringBuilder list = new StringBuilder();\n                for (String file : foundFiles) {\n                    if (list.length() > 0) list.append(delimiter);\n                    list.append(file);\n                }\n                rv = list.toString();\n            }\n        }\n\n\n        if (rv != null)\n            getProject().setNewProperty(location, rv);\n    }\n","realPath":"src/tutorial/tasks-filesets-properties/04-lists/src/Find.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"MB"},{"authorDate":"2018-02-28 14:55:51","commitOrder":2,"curCode":"    public void execute() {\n        validate();\n        \r\n        for (Path path : paths) {\n            for (String includedFile : path.list()) {\n                String filename = includedFile.replace('\\\\', '/');\n                filename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n                if (file.equals(filename) && !foundFiles.contains(includedFile)) {\n                    foundFiles.add(includedFile);\n                }\n            }\n        }\n\n        \r\n        String rv = null;\n        if (!foundFiles.isEmpty()) {\n            if (delimiter == null) {\n                \r\n                rv = foundFiles.get(0);\n            } else {\n                \r\n                StringBuilder list = new StringBuilder();\n                for (String file : foundFiles) {\n                    if (list.length() > 0) list.append(delimiter);\n                    list.append(file);\n                }\n                rv = list.toString();\n            }\n        }\n\n        \r\n        if (rv != null)\n            getProject().setNewProperty(location, rv);\n    }\n","date":"2018-02-28 14:59:42","endLine":97,"groupId":"4514","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/81/96c36d889f099410216969a3f40499dca7d6de.src","preCode":"    public void execute() {\n        validate();\n        \r\n        for (Path path : paths) {\n            for (String includedFile : path.list()) {\n                String filename = includedFile.replace('\\\\', '/');\n                filename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n                if (file.equals(filename) && !foundFiles.contains(includedFile)) {\n                    foundFiles.add(includedFile);\n                }\n            }\n        }\n\n        \r\n        String rv = null;\n        if (!foundFiles.isEmpty()) {\n            if (delimiter == null) {\n                \r\n                rv = foundFiles.get(0);\n            } else {\n                \r\n                StringBuilder list = new StringBuilder();\n                for (String file : foundFiles) {\n                    if (list.length() > 0) list.append(delimiter);\n                    list.append(file);\n                }\n                rv = list.toString();\n            }\n        }\n\n        \r\n        if (rv != null)\n            getProject().setNewProperty(location, rv);\n    }\n","realPath":"src/tutorial/tasks-filesets-properties/final/src/Find.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"MB"}],"commitId":"fb75550cdc6378f32e0b7aa7f6aa0a452b6fd6ca","commitMessage":"@@@Modernize tutorials","date":"2018-02-28 14:59:42","modifiedFileCount":"12","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-06 18:26:59","codes":[{"authorDate":"2018-04-06 18:26:59","commitOrder":3,"curCode":"    public void execute() {\n        validate();\n        for (Path path : paths) {\n            for (String includedFile : path.list()) {\n                String filename = includedFile.replace('\\\\','/');\n                filename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n                if (file.equals(filename) && !foundFiles.contains(includedFile)) {\n                    foundFiles.add(includedFile);\n                }\n            }\n        }\n        String rv = null;\n        if (!foundFiles.isEmpty()) {\n            if (delimiter == null) {\n                \r\n                rv = foundFiles.get(0);\n            } else {\n                \r\n                StringBuilder list = new StringBuilder();\n                for (String file : foundFiles) {\n                    if (list.length() > 0) {\n                        list.append(delimiter);\n                    }\n                    list.append(file);\n                }\n                rv = list.toString();\n            }\n        }\n\n\n        if (rv != null)\n            getProject().setNewProperty(location, rv);\n    }\n","date":"2018-04-06 20:26:54","endLine":94,"groupId":"10363","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/84/cda58939efb4af924d5513a6443ab900b8341c.src","preCode":"    public void execute() {\n        validate();\n        for (Path path : paths) {\n            for (String includedFile : path.list()) {\n                String filename = includedFile.replace('\\\\','/');\n                filename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n                if (file.equals(filename) && !foundFiles.contains(includedFile)) {\n                    foundFiles.add(includedFile);\n                }\n            }\n        }\n        String rv = null;\n        if (!foundFiles.isEmpty()) {\n            if (delimiter == null) {\n                \r\n                rv = foundFiles.get(0);\n            } else {\n                \r\n                StringBuilder list = new StringBuilder();\n                for (String file : foundFiles) {\n                    if (list.length() > 0) list.append(delimiter);\n                    list.append(file);\n                }\n                rv = list.toString();\n            }\n        }\n\n\n        if (rv != null)\n            getProject().setNewProperty(location, rv);\n    }\n","realPath":"src/tutorial/tasks-filesets-properties/04-lists/src/Find.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2018-04-06 18:26:59","commitOrder":3,"curCode":"    public void execute() {\n        validate();\n        \r\n        for (Path path : paths) {\n            for (String includedFile : path.list()) {\n                String filename = includedFile.replace('\\\\', '/');\n                filename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n                if (file.equals(filename) && !foundFiles.contains(includedFile)) {\n                    foundFiles.add(includedFile);\n                }\n            }\n        }\n\n        \r\n        String rv = null;\n        if (!foundFiles.isEmpty()) {\n            if (delimiter == null) {\n                \r\n                rv = foundFiles.get(0);\n            } else {\n                \r\n                StringBuilder list = new StringBuilder();\n                for (String file : foundFiles) {\n                    if (list.length() > 0) {\n                        list.append(delimiter);\n                    }\n                    list.append(file);\n                }\n                rv = list.toString();\n            }\n        }\n\n        \r\n        if (rv != null)\n            getProject().setNewProperty(location, rv);\n    }\n","date":"2018-04-06 20:26:54","endLine":99,"groupId":"10363","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/77/59c74db76a1f1e15907d4e8d74ff23159852d0.src","preCode":"    public void execute() {\n        validate();\n        \r\n        for (Path path : paths) {\n            for (String includedFile : path.list()) {\n                String filename = includedFile.replace('\\\\', '/');\n                filename = filename.substring(filename.lastIndexOf(\"/\") + 1);\n                if (file.equals(filename) && !foundFiles.contains(includedFile)) {\n                    foundFiles.add(includedFile);\n                }\n            }\n        }\n\n        \r\n        String rv = null;\n        if (!foundFiles.isEmpty()) {\n            if (delimiter == null) {\n                \r\n                rv = foundFiles.get(0);\n            } else {\n                \r\n                StringBuilder list = new StringBuilder();\n                for (String file : foundFiles) {\n                    if (list.length() > 0) list.append(delimiter);\n                    list.append(file);\n                }\n                rv = list.toString();\n            }\n        }\n\n        \r\n        if (rv != null)\n            getProject().setNewProperty(location, rv);\n    }\n","realPath":"src/tutorial/tasks-filesets-properties/final/src/Find.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"cda6c91cf800ba7be7fb479ce8e3264c7ca7c232","commitMessage":"@@@Unwrap some logic; uniform checks of StringBuilder size","date":"2018-04-06 20:26:54","modifiedFileCount":"11","status":"M","submitter":"Gintas Grigelionis"}]
