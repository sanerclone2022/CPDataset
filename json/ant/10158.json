[{"authorTime":"2008-09-19 23:53:20","codes":[{"authorDate":"2008-09-16 17:47:47","commitOrder":2,"curCode":"    public void testSigFile() {\n        executeTarget(\"sigfile\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"testonly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        File jar = new File(getProject().getProperty(\"test.jar\"));\n        sj.setJar(jar);\n        assertFalse(\"mustn't find signature without sigfile attribute\",\n                    sj.isSigned());\n        sj.setSigfile(\"TEST\");\n        assertTrue(\"must find signature with sigfile attribute\",\n                   sj.isSigned());\n    }\n","date":"2008-09-16 17:47:47","endLine":71,"groupId":"9031","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ec/e8eeadbc9dfdda1db2055511dfbd16221878da.src","preCode":"    public void testSigFile() {\n        executeTarget(\"sigfile\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"testonly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        File jar = new File(getProject().getProperty(\"test.jar\"));\n        sj.setJar(jar);\n        assertFalse(\"mustn't find signature without sigfile attribute\",\n                    sj.isSigned());\n        sj.setSigfile(\"TEST\");\n        assertTrue(\"must find signature with sigfile attribute\",\n                   sj.isSigned());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/SignJarTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"NB"},{"authorDate":"2008-09-19 23:53:20","commitOrder":2,"curCode":"    public void testInvalidChars() {\n        executeTarget(\"invalidchars\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"test@nly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        File jar = new File(getProject().getProperty(\"test.jar\"));\n        sj.setJar(jar);\n        assertTrue(sj.isSigned());\n    }\n","date":"2008-09-19 23:53:20","endLine":82,"groupId":"9031","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidChars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a3/5bfc2de367fc2df668729b5ac60591e08cccd3.src","preCode":"    public void testInvalidChars() {\n        executeTarget(\"invalidchars\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"test@nly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        File jar = new File(getProject().getProperty(\"test.jar\"));\n        sj.setJar(jar);\n        assertTrue(sj.isSigned());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/SignJarTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"15de83a00f84033922a6024e141907d35a0cdad6","commitMessage":"@@@properly handle non-standard chars in key alias.  PR 45820.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@697139 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2008-09-19 23:53:20","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2014-04-19 05:00:38","codes":[{"authorDate":"2014-04-19 05:00:38","commitOrder":3,"curCode":"    public void testSigFile() {\n        buildRule.executeTarget(\"sigfile\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"testonly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        File jar = new File(buildRule.getProject().getProperty(\"test.jar\"));\n        sj.setJar(jar);\n        assertFalse(\"mustn't find signature without sigfile attribute\",\n                    sj.isSigned());\n        sj.setSigfile(\"TEST\");\n        assertTrue(\"must find signature with sigfile attribute\",\n                   sj.isSigned());\n    }\n","date":"2014-04-19 05:00:38","endLine":72,"groupId":"325","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/95/585fde6cbff1bcc4abb820308257971f886efa.src","preCode":"    public void testSigFile() {\n        executeTarget(\"sigfile\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"testonly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        File jar = new File(getProject().getProperty(\"test.jar\"));\n        sj.setJar(jar);\n        assertFalse(\"mustn't find signature without sigfile attribute\",\n                    sj.isSigned());\n        sj.setSigfile(\"TEST\");\n        assertTrue(\"must find signature with sigfile attribute\",\n                   sj.isSigned());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/SignJarTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2014-04-19 05:00:38","commitOrder":3,"curCode":"    public void testInvalidChars() {\n        buildRule.executeTarget(\"invalidchars\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"test@nly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        File jar = new File(buildRule.getProject().getProperty(\"test.jar\"));\n        sj.setJar(jar);\n        assertTrue(sj.isSigned());\n    }\n","date":"2014-04-19 05:00:38","endLine":84,"groupId":"325","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidChars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/95/585fde6cbff1bcc4abb820308257971f886efa.src","preCode":"    public void testInvalidChars() {\n        executeTarget(\"invalidchars\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"test@nly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        File jar = new File(getProject().getProperty(\"test.jar\"));\n        sj.setJar(jar);\n        assertTrue(sj.isSigned());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/SignJarTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"b61c80746dd5df73899390826e197d2656784f91","commitMessage":"@@@Test improvements: convert to JUnit4.  improved error testing and remove sleeps\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1588563 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-19 05:00:38","modifiedFileCount":"268","status":"M","submitter":"mclarke"},{"authorTime":"2018-04-30 04:42:22","codes":[{"authorDate":"2018-04-30 04:42:22","commitOrder":4,"curCode":"    public void testSigFile() {\n        buildRule.executeTarget(\"sigfile\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"testonly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        sj.setJar(new File(buildRule.getProject().getProperty(\"test.jar\")));\n        assertFalse(\"mustn't find signature without sigfile attribute\",\n                    sj.isSigned());\n        sj.setSigfile(\"TEST\");\n        assertTrue(\"must find signature with sigfile attribute\",\n                   sj.isSigned());\n    }\n","date":"2018-04-30 04:42:22","endLine":74,"groupId":"10158","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSigFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/53/6645f2641841afdebbad526b8e7ec28d2c2612.src","preCode":"    public void testSigFile() {\n        buildRule.executeTarget(\"sigfile\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"testonly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        File jar = new File(buildRule.getProject().getProperty(\"test.jar\"));\n        sj.setJar(jar);\n        assertFalse(\"mustn't find signature without sigfile attribute\",\n                    sj.isSigned());\n        sj.setSigfile(\"TEST\");\n        assertTrue(\"must find signature with sigfile attribute\",\n                   sj.isSigned());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/SignJarTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2018-04-30 04:42:22","commitOrder":4,"curCode":"    public void testInvalidChars() {\n        buildRule.executeTarget(\"invalidchars\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"test@nly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        sj.setJar(new File(buildRule.getProject().getProperty(\"test.jar\")));\n        assertTrue(sj.isSigned());\n    }\n","date":"2018-04-30 04:42:22","endLine":85,"groupId":"10158","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidChars","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/53/6645f2641841afdebbad526b8e7ec28d2c2612.src","preCode":"    public void testInvalidChars() {\n        buildRule.executeTarget(\"invalidchars\");\n        SignJarChild sj = new SignJarChild();\n        sj.setAlias(\"test@nly\");\n        sj.setKeystore(\"testkeystore\");\n        sj.setStorepass(\"apacheant\");\n        File jar = new File(buildRule.getProject().getProperty(\"test.jar\"));\n        sj.setJar(jar);\n        assertTrue(sj.isSigned());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/SignJarTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"ab2d99a565162500aadbaea9a0ebd7cc9183f8aa","commitMessage":"@@@Checkstyle (whitespace.  line length.  etc)","date":"2018-04-30 04:42:22","modifiedFileCount":"24","status":"M","submitter":"Gintas Grigelionis"}]
