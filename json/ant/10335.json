[{"authorTime":"2016-04-17 17:58:40","codes":[{"authorDate":"2016-04-17 17:58:40","commitOrder":1,"curCode":"    public void getSetPermissionsWorksForZipResources() throws IOException {\n        File f = File.createTempFile(\"ant\", \".zip\");\n        f.deleteOnExit();\n        try (ZipOutputStream os = new ZipOutputStream(f)) {\n            ZipEntry e = new ZipEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        ZipResource r = new ZipResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s);\n        assertEquals(s, PermissionUtils.getPermissions(r));\n    }\n","date":"2016-04-17 17:58:40","endLine":132,"groupId":"9890","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getSetPermissionsWorksForZipResources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ee/d265de36ba9963402a82ec3d6b1ea1850924b4.src","preCode":"    public void getSetPermissionsWorksForZipResources() throws IOException {\n        File f = File.createTempFile(\"ant\", \".zip\");\n        f.deleteOnExit();\n        try (ZipOutputStream os = new ZipOutputStream(f)) {\n            ZipEntry e = new ZipEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        ZipResource r = new ZipResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s);\n        assertEquals(s, PermissionUtils.getPermissions(r));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/PermissionUtilsTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"},{"authorDate":"2016-04-17 17:58:40","commitOrder":1,"curCode":"    public void getSetPermissionsWorksForTarResources() throws IOException {\n        File f = File.createTempFile(\"ant\", \".zip\");\n        f.deleteOnExit();\n        try (TarOutputStream os = new TarOutputStream(new FileOutputStream(f))) {\n            TarEntry e = new TarEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        TarResource r = new TarResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s);\n        assertEquals(s, PermissionUtils.getPermissions(r));\n    }\n","date":"2016-04-17 17:58:40","endLine":154,"groupId":"9890","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getSetPermissionsWorksForTarResources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ee/d265de36ba9963402a82ec3d6b1ea1850924b4.src","preCode":"    public void getSetPermissionsWorksForTarResources() throws IOException {\n        File f = File.createTempFile(\"ant\", \".zip\");\n        f.deleteOnExit();\n        try (TarOutputStream os = new TarOutputStream(new FileOutputStream(f))) {\n            TarEntry e = new TarEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        TarResource r = new TarResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s);\n        assertEquals(s, PermissionUtils.getPermissions(r));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/PermissionUtilsTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"}],"commitId":"97a0b26c7e3aa1df286f2c318d6433f7b3d2023f","commitMessage":"@@@helper class for dealing with file permissions\n","date":"2016-04-17 17:58:40","modifiedFileCount":"0","status":"B","submitter":"Stefan Bodewig"},{"authorTime":"2016-05-16 16:58:42","codes":[{"authorDate":"2016-05-16 16:58:42","commitOrder":2,"curCode":"    public void getSetPermissionsWorksForZipResources() throws IOException {\n        File f = File.createTempFile(\"ant\", \".zip\");\n        f.deleteOnExit();\n        try (ZipOutputStream os = new ZipOutputStream(f)) {\n            ZipEntry e = new ZipEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        ZipResource r = new ZipResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s, null);\n        assertEquals(s, PermissionUtils.getPermissions(r, null));\n    }\n","date":"2016-05-16 16:58:42","endLine":132,"groupId":"9890","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getSetPermissionsWorksForZipResources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6e/c486a615284973b15747175dc2009e1ab0cbd8.src","preCode":"    public void getSetPermissionsWorksForZipResources() throws IOException {\n        File f = File.createTempFile(\"ant\", \".zip\");\n        f.deleteOnExit();\n        try (ZipOutputStream os = new ZipOutputStream(f)) {\n            ZipEntry e = new ZipEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        ZipResource r = new ZipResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s);\n        assertEquals(s, PermissionUtils.getPermissions(r));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/PermissionUtilsTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2016-05-16 16:58:42","commitOrder":2,"curCode":"    public void getSetPermissionsWorksForTarResources() throws IOException {\n        File f = File.createTempFile(\"ant\", \".zip\");\n        f.deleteOnExit();\n        try (TarOutputStream os = new TarOutputStream(new FileOutputStream(f))) {\n            TarEntry e = new TarEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        TarResource r = new TarResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s, null);\n        assertEquals(s, PermissionUtils.getPermissions(r, null));\n    }\n","date":"2016-05-16 16:58:42","endLine":154,"groupId":"9890","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getSetPermissionsWorksForTarResources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6e/c486a615284973b15747175dc2009e1ab0cbd8.src","preCode":"    public void getSetPermissionsWorksForTarResources() throws IOException {\n        File f = File.createTempFile(\"ant\", \".zip\");\n        f.deleteOnExit();\n        try (TarOutputStream os = new TarOutputStream(new FileOutputStream(f))) {\n            TarEntry e = new TarEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        TarResource r = new TarResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s);\n        assertEquals(s, PermissionUtils.getPermissions(r));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/PermissionUtilsTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"}],"commitId":"6ab698cf9ae4fd3fb1aaf33fdce7dccbcf857247","commitMessage":"@@@optional callbacks for non-POSIX file systems\n","date":"2016-05-16 16:58:42","modifiedFileCount":"3","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2018-11-11 20:39:01","codes":[{"authorDate":"2018-11-11 20:39:01","commitOrder":3,"curCode":"    public void getSetPermissionsWorksForZipResources() throws IOException {\n        File f = folder.newFile(\"ant.zip\");\n        try (ZipOutputStream os = new ZipOutputStream(f)) {\n            ZipEntry e = new ZipEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        ZipResource r = new ZipResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s, null);\n        assertEquals(s, PermissionUtils.getPermissions(r, null));\n    }\n","date":"2018-11-11 20:39:01","endLine":128,"groupId":"10335","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getSetPermissionsWorksForZipResources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/5f/c2a1ad01ab3468f6e587a97031344441a24e14.src","preCode":"    public void getSetPermissionsWorksForZipResources() throws IOException {\n        File f = File.createTempFile(\"ant\", \".zip\");\n        f.deleteOnExit();\n        try (ZipOutputStream os = new ZipOutputStream(f)) {\n            ZipEntry e = new ZipEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        ZipResource r = new ZipResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s, null);\n        assertEquals(s, PermissionUtils.getPermissions(r, null));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/PermissionUtilsTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2018-11-11 20:39:01","commitOrder":3,"curCode":"    public void getSetPermissionsWorksForTarResources() throws IOException {\n        File f = folder.newFile(\"ant.tar\");\n        try (TarOutputStream os = new TarOutputStream(new FileOutputStream(f))) {\n            TarEntry e = new TarEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        TarResource r = new TarResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s, null);\n        assertEquals(s, PermissionUtils.getPermissions(r, null));\n    }\n","date":"2018-11-11 20:39:01","endLine":149,"groupId":"10335","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getSetPermissionsWorksForTarResources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/5f/c2a1ad01ab3468f6e587a97031344441a24e14.src","preCode":"    public void getSetPermissionsWorksForTarResources() throws IOException {\n        File f = File.createTempFile(\"ant\", \".zip\");\n        f.deleteOnExit();\n        try (TarOutputStream os = new TarOutputStream(new FileOutputStream(f))) {\n            TarEntry e = new TarEntry(\"foo\");\n            os.putNextEntry(e);\n            os.closeEntry();\n        }\n\n        TarResource r = new TarResource();\n        r.setName(\"foo\");\n        r.setArchive(f);\n        Set<PosixFilePermission> s =\n            EnumSet.of(PosixFilePermission.OWNER_READ,\n                       PosixFilePermission.OWNER_WRITE,\n                       PosixFilePermission.OWNER_EXECUTE,\n                       PosixFilePermission.GROUP_READ);\n        PermissionUtils.setPermissions(r, s, null);\n        assertEquals(s, PermissionUtils.getPermissions(r, null));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/PermissionUtilsTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"}],"commitId":"2165dd22552a80620c20b3df2c938cc945e5e3e8","commitMessage":"@@@Simplify tests.  use Rule and/or try with resources","date":"2018-11-11 20:39:01","modifiedFileCount":"6","status":"M","submitter":"Gintas Grigelionis"}]
