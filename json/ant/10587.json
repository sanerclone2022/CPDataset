[{"authorTime":"2001-10-26 17:36:40","codes":[{"authorDate":"2001-10-26 17:36:40","commitOrder":2,"curCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException\n    {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i=0; i<argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        \n\n        \r\n        Substitution s = \n            new Perl5Substitution(subst.toString(), \n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","date":"2001-10-26 17:36:40","endLine":110,"groupId":"8665","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"substitute","params":"(Stringinput@Stringargument@intoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/65/34fba4a221f623ceba8b8a53e7db8354a5e83e.src","preCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException\n    {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i=0; i<argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        \n\n        \r\n        Substitution s = \n            new Perl5Substitution(subst.toString(), \n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"},{"authorDate":"2001-10-26 17:36:40","commitOrder":2,"curCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException\n    {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i=0; i<argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$(\").append(value).append(\")\");\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        argument = subst.toString();\n        \n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL))\n        {\n            sb.append(m.replaceAll(argument));\n        }\n        else\n        {\n            boolean res = m.find();\n            if (res) {\n                m.appendReplacement(sb, argument);\n                m.appendTail(sb);\n            } else {\n                sb.append(input);\n            }\n        }\n\n        return sb.toString();\n    }    \n","date":"2001-10-26 17:36:40","endLine":130,"groupId":"7675","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"substitute","params":"(Stringinput@Stringargument@intoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/4f/0893d24311583a8cda8b527393f12a9930cd4f.src","preCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException\n    {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i=0; i<argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$(\").append(value).append(\")\");\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        argument = subst.toString();\n        \n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL))\n        {\n            sb.append(m.replaceAll(argument));\n        }\n        else\n        {\n            boolean res = m.find();\n            if (res) {\n                m.appendReplacement(sb, argument);\n                m.appendTail(sb);\n            } else {\n                sb.append(input);\n            }\n        }\n\n        return sb.toString();\n    }    \n","realPath":"src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"MB"}],"commitId":"be53ecfdc2ff0f8e955eada253ea8d3db38addeb","commitMessage":"@@@Add testcases for the substitution methods (and make them work 8-)\n\nAdd testcase for <replaceregexp>.  this task now works with ORO. \nJakarta Regexp and JDK 1.4 if you use \\1 to refer to parens in the\nregular expression.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@269822 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2001-10-26 17:36:40","modifiedFileCount":"7","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2001-11-06 21:55:54","codes":[{"authorDate":"2001-10-26 17:36:40","commitOrder":3,"curCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException\n    {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i=0; i<argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        \n\n        \r\n        Substitution s = \n            new Perl5Substitution(subst.toString(), \n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","date":"2001-10-26 17:36:40","endLine":110,"groupId":"8665","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"substitute","params":"(Stringinput@Stringargument@intoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/65/34fba4a221f623ceba8b8a53e7db8354a5e83e.src","preCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException\n    {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i=0; i<argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        \n\n        \r\n        Substitution s = \n            new Perl5Substitution(subst.toString(), \n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"},{"authorDate":"2001-11-06 21:55:54","commitOrder":3,"curCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException\n    {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i=0; i<argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        argument = subst.toString();\n        \n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL))\n        {\n            sb.append(m.replaceAll(argument));\n        }\n        else\n        {\n            boolean res = m.find();\n            if (res) {\n                m.appendReplacement(sb, argument);\n                m.appendTail(sb);\n            } else {\n                sb.append(input);\n            }\n        }\n\n        return sb.toString();\n    }    \n","date":"2001-11-06 21:55:54","endLine":130,"groupId":"8665","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"substitute","params":"(Stringinput@Stringargument@intoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e3/4af9c7d2fbf2199c438135fa35a3839ecfa62e.src","preCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException\n    {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i=0; i<argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$(\").append(value).append(\")\");\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        argument = subst.toString();\n        \n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL))\n        {\n            sb.append(m.replaceAll(argument));\n        }\n        else\n        {\n            boolean res = m.find();\n            if (res) {\n                m.appendReplacement(sb, argument);\n                m.appendTail(sb);\n            } else {\n                sb.append(input);\n            }\n        }\n\n        return sb.toString();\n    }    \n","realPath":"src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"87fc3af5ca35cb833d143be5814d7ed31c0ca1dc","commitMessage":"@@@Group refernces don't want parens any longer in JDK 1.4beta3.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@269881 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2001-11-06 21:55:54","modifiedFileCount":"1","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2003-05-28 23:31:07","codes":[{"authorDate":"2003-05-28 23:31:07","commitOrder":4,"curCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        \n\n        \r\n        Substitution s = \n            new Perl5Substitution(subst.toString(), \n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","date":"2003-05-28 23:31:07","endLine":110,"groupId":"8665","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"substitute","params":"(Stringinput@Stringargument@intoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/84/b19898dc728b292650dcc03b12b79008d3bc64.src","preCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        \n\n        \r\n        Substitution s = \n            new Perl5Substitution(subst.toString(), \n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2003-05-28 23:31:07","commitOrder":4,"curCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        argument = subst.toString();\n        \n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL)) {\n            sb.append(m.replaceAll(argument));\n        } else {\n            boolean res = m.find();\n            if (res) {\n                m.appendReplacement(sb, argument);\n                m.appendTail(sb);\n            } else {\n                sb.append(input);\n            }\n        }\n\n        return sb.toString();\n    }    \n","date":"2003-05-28 23:31:07","endLine":126,"groupId":"8665","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"substitute","params":"(Stringinput@Stringargument@intoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a5/8a73cf985d328c6c79293e137fe32b862c67b5.src","preCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        argument = subst.toString();\n        \n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL)) {\n            sb.append(m.replaceAll(argument));\n        } else {\n            boolean res = m.find();\n            if (res) {\n                m.appendReplacement(sb, argument);\n                m.appendTail(sb);\n            } else {\n                sb.append(input);\n            }\n        }\n\n        return sb.toString();\n    }    \n","realPath":"src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"4e2a4f9c9507b19b248548ec6333698af3c1a4b8","commitMessage":"@@@fix for bug 20306 - regex handling of $ in replace string\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274633 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-05-28 23:31:07","modifiedFileCount":"3","status":"M","submitter":"Peter Reilly"},{"authorTime":"2007-09-25 22:44:48","codes":[{"authorDate":"2007-09-25 22:44:48","commitOrder":5,"curCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, DECIMAL);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n\n        \r\n        Substitution s =\n            new Perl5Substitution(subst.toString(),\n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","date":"2007-09-25 22:44:48","endLine":81,"groupId":"10062","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"substitute","params":"(Stringinput@Stringargument@intoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/45/d00e4482af61198946c3a83398e3f5c7e5293d.src","preCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n\n        \r\n        Substitution s =\n            new Perl5Substitution(subst.toString(),\n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2007-09-25 22:44:48","commitOrder":5,"curCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, DECIMAL);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        argument = subst.toString();\n\n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL)) {\n            sb.append(m.replaceAll(argument));\n        } else {\n            boolean res = m.find();\n            if (res) {\n                m.appendReplacement(sb, argument);\n                m.appendTail(sb);\n            } else {\n                sb.append(input);\n            }\n        }\n        return sb.toString();\n    }\n","date":"2007-09-25 22:44:48","endLine":103,"groupId":"10062","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"substitute","params":"(Stringinput@Stringargument@intoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/bd/0faa86cb5c55c0d7d5a12581e9432d82ccda8d.src","preCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, 10);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        argument = subst.toString();\n\n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL)) {\n            sb.append(m.replaceAll(argument));\n        } else {\n            boolean res = m.find();\n            if (res) {\n                m.appendReplacement(sb, argument);\n                m.appendTail(sb);\n            } else {\n                sb.append(input);\n            }\n        }\n        return sb.toString();\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"753902eb4d63764792a26c2ef3e0d262975d5054","commitMessage":"@@@magic numbers\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@579270 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-09-25 22:44:48","modifiedFileCount":"6","status":"M","submitter":"Peter Reilly"},{"authorTime":"2007-09-25 22:44:48","codes":[{"authorDate":"2014-07-04 21:05:12","commitOrder":6,"curCode":"    public String substitute(final String input, final String argument, final int options)\n        throws BuildException {\n        \r\n        final StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    final int value = Character.digit(c, DECIMAL);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n\n        \r\n        final Substitution s =\n            new Perl5Substitution(subst.toString(),\n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","date":"2014-07-04 21:05:12","endLine":81,"groupId":"10062","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"substitute","params":"(finalStringinput@finalStringargument@finalintoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/52/9a78ae60de658ed3a1789b203d85caff62499d.src","preCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, DECIMAL);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n\n        \r\n        Substitution s =\n            new Perl5Substitution(subst.toString(),\n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2007-09-25 22:44:48","commitOrder":6,"curCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, DECIMAL);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        argument = subst.toString();\n\n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL)) {\n            sb.append(m.replaceAll(argument));\n        } else {\n            boolean res = m.find();\n            if (res) {\n                m.appendReplacement(sb, argument);\n                m.appendTail(sb);\n            } else {\n                sb.append(input);\n            }\n        }\n        return sb.toString();\n    }\n","date":"2007-09-25 22:44:48","endLine":103,"groupId":"10062","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"substitute","params":"(Stringinput@Stringargument@intoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/bd/0faa86cb5c55c0d7d5a12581e9432d82ccda8d.src","preCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, DECIMAL);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        argument = subst.toString();\n\n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL)) {\n            sb.append(m.replaceAll(argument));\n        } else {\n            boolean res = m.find();\n            if (res) {\n                m.appendReplacement(sb, argument);\n                m.appendTail(sb);\n            } else {\n                sb.append(input);\n            }\n        }\n        return sb.toString();\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"}],"commitId":"789422e131b6c2c003d94f394169a64297e986c6","commitMessage":"@@@oops - make it compile under Java5 again","date":"2014-07-04 21:05:12","modifiedFileCount":"20","status":"M","submitter":"Jan Mat?rne"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":7,"curCode":"    public String substitute(final String input, final String argument, final int options)\n        throws BuildException {\n        \r\n        final StringBuilder subst = new StringBuilder();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    final int value = Character.digit(c, DECIMAL);\n                    if (value > -1) {\n                        subst.append('$').append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n\n        \r\n        final Substitution s =\n            new Perl5Substitution(subst.toString(),\n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","date":"2017-04-13 23:15:22","endLine":76,"groupId":"10587","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"substitute","params":"(finalStringinput@finalStringargument@finalintoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/92/8939f9b97cc1d875f06ac4d2b4a5e939b3c390.src","preCode":"    public String substitute(final String input, final String argument, final int options)\n        throws BuildException {\n        \r\n        final StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    final int value = Character.digit(c, DECIMAL);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n\n        \r\n        final Substitution s =\n            new Perl5Substitution(subst.toString(),\n                                  Perl5Substitution.INTERPOLATE_ALL);\n        return Util.substitute(matcher,\n                               getCompiledPattern(options),\n                               s,\n                               input,\n                               getSubsOptions(options));\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":7,"curCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuilder subst = new StringBuilder();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, DECIMAL);\n                    if (value > -1) {\n                        subst.append('$').append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n\n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL)) {\n            sb.append(m.replaceAll(subst.toString()));\n        } else if (m.find()) {\n            m.appendReplacement(sb, subst.toString());\n            m.appendTail(sb);\n        } else {\n            sb.append(input);\n        }\n        return sb.toString();\n    }\n","date":"2017-04-13 23:15:22","endLine":96,"groupId":"10587","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"substitute","params":"(Stringinput@Stringargument@intoptions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/76/d2789af85b7496b3476247f13fd1a5f46539a8.src","preCode":"    public String substitute(String input, String argument, int options)\n        throws BuildException {\n        \r\n        StringBuffer subst = new StringBuffer();\n        for (int i = 0; i < argument.length(); i++) {\n            char c = argument.charAt(i);\n            if (c == '$') {\n                subst.append('\\\\');\n                subst.append('$');\n            } else if (c == '\\\\') {\n                if (++i < argument.length()) {\n                    c = argument.charAt(i);\n                    int value = Character.digit(c, DECIMAL);\n                    if (value > -1) {\n                        subst.append(\"$\").append(value);\n                    } else {\n                        subst.append(c);\n                    }\n                } else {\n                    \r\n                    subst.append('\\\\');\n                }\n            } else {\n                subst.append(c);\n            }\n        }\n        argument = subst.toString();\n\n        int sOptions = getSubsOptions(options);\n        Pattern p = getCompiledPattern(options);\n        StringBuffer sb = new StringBuffer();\n\n        Matcher m = p.matcher(input);\n        if (RegexpUtil.hasFlag(sOptions, REPLACE_ALL)) {\n            sb.append(m.replaceAll(argument));\n        } else {\n            boolean res = m.find();\n            if (res) {\n                m.appendReplacement(sb, argument);\n                m.appendTail(sb);\n            } else {\n                sb.append(input);\n            }\n        }\n        return sb.toString();\n    }\n","realPath":"src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"}]
