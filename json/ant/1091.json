[{"authorTime":"2016-09-04 22:25:14","codes":[{"authorDate":"2016-09-04 22:25:14","commitOrder":1,"curCode":"    public void testXalan2RedirectViaJDKFactory() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            Assume.assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        ((TraXLiaison) liaison)\n            .setFeature(\"http://www.oracle.com/xml/jaxp/properties/enableExtensionFunctions\", true);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        ClassLoader orig = Thread.currentThread().getContextClassLoader();\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            \r\n            Thread.currentThread().setContextClassLoader(new ClassLoader(ClassLoader.getSystemClassLoader().getParent()) {\n                public InputStream getResourceAsStream(String name) {\n                    if (name.startsWith(\"META-INF/services/\")) {\n                        \r\n                        return new ByteArrayInputStream(new byte[0]);\n                    }\n                    return super.getResourceAsStream(name);\n                }\n            });\n            \r\n            System.setSecurityManager(new SecurityManager() {public void checkPermission(Permission perm) {}});\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            Thread.currentThread().setContextClassLoader(orig);\n            System.setSecurityManager(null);\n        }\n    }\n","date":"2016-09-04 22:25:14","endLine":95,"groupId":"9041","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testXalan2RedirectViaJDKFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f3/6a4db0cc9e193041c782f5d5aa272e6abba937.src","preCode":"    public void testXalan2RedirectViaJDKFactory() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            Assume.assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        ((TraXLiaison) liaison)\n            .setFeature(\"http://www.oracle.com/xml/jaxp/properties/enableExtensionFunctions\", true);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        ClassLoader orig = Thread.currentThread().getContextClassLoader();\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            \r\n            Thread.currentThread().setContextClassLoader(new ClassLoader(ClassLoader.getSystemClassLoader().getParent()) {\n                public InputStream getResourceAsStream(String name) {\n                    if (name.startsWith(\"META-INF/services/\")) {\n                        \r\n                        return new ByteArrayInputStream(new byte[0]);\n                    }\n                    return super.getResourceAsStream(name);\n                }\n            });\n            \r\n            System.setSecurityManager(new SecurityManager() {public void checkPermission(Permission perm) {}});\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            Thread.currentThread().setContextClassLoader(orig);\n            System.setSecurityManager(null);\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/TraXLiaisonTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2016-09-04 22:25:14","commitOrder":1,"curCode":"    public void testXalan2RedirectViaXalan() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            Assume.assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        try {\n            String factoryName = TransformerFactory.newInstance().getClass().getName();\n            Assume.assumeTrue(\"TraxFactory is \" + factoryName + \" and not Xalan\",\n                              \"org.apache.xalan.processor.TransformerFactoryImpl\"\n                              .equals(factoryName));\n        } catch (TransformerFactoryConfigurationError exc) {\n            throw new RuntimeException(exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            System.setSecurityManager(new SecurityManager() {public void checkPermission(Permission perm) {}});\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            System.setSecurityManager(null);\n        }\n    }\n","date":"2016-09-04 22:25:14","endLine":124,"groupId":"9041","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testXalan2RedirectViaXalan","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f3/6a4db0cc9e193041c782f5d5aa272e6abba937.src","preCode":"    public void testXalan2RedirectViaXalan() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            Assume.assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        try {\n            String factoryName = TransformerFactory.newInstance().getClass().getName();\n            Assume.assumeTrue(\"TraxFactory is \" + factoryName + \" and not Xalan\",\n                              \"org.apache.xalan.processor.TransformerFactoryImpl\"\n                              .equals(factoryName));\n        } catch (TransformerFactoryConfigurationError exc) {\n            throw new RuntimeException(exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            System.setSecurityManager(new SecurityManager() {public void checkPermission(Permission perm) {}});\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            System.setSecurityManager(null);\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/TraXLiaisonTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"}],"commitId":"703aceddb6c444728107d47ceb5458154e6e39db","commitMessage":"@@@Merge branch '1.9.x'\n","date":"2016-09-04 22:25:14","modifiedFileCount":"5","status":"B","submitter":"Stefan Bodewig"},{"authorTime":"2016-09-04 22:25:14","codes":[{"authorDate":"2016-10-23 23:48:10","commitOrder":2,"curCode":"    public void testXalan2RedirectViaJDKFactory() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            Assume.assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        try {\n            String factoryName = TransformerFactory.newInstance().getClass().getName();\n            Assume.assumeFalse(\"TraxFactory is Xalan\",\n                              \"org.apache.xalan.processor.TransformerFactoryImpl\"\n                              .equals(factoryName));\n        } catch (TransformerFactoryConfigurationError exc) {\n            throw new RuntimeException(exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        ((TraXLiaison) liaison)\n            .setFeature(\"http://www.oracle.com/xml/jaxp/properties/enableExtensionFunctions\", true);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        ClassLoader orig = Thread.currentThread().getContextClassLoader();\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            \r\n            Thread.currentThread().setContextClassLoader(new ClassLoader(ClassLoader.getSystemClassLoader().getParent()) {\n                public InputStream getResourceAsStream(String name) {\n                    if (name.startsWith(\"META-INF/services/\")) {\n                        \r\n                        return new ByteArrayInputStream(new byte[0]);\n                    }\n                    return super.getResourceAsStream(name);\n                }\n            });\n            \r\n            System.setSecurityManager(new SecurityManager() {public void checkPermission(Permission perm) {}});\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            Thread.currentThread().setContextClassLoader(orig);\n            System.setSecurityManager(null);\n        }\n    }\n","date":"2016-10-23 23:48:10","endLine":103,"groupId":"9041","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testXalan2RedirectViaJDKFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/64/8e6440ee41a2d9f8c610818431991a8f01b513.src","preCode":"    public void testXalan2RedirectViaJDKFactory() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            Assume.assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        ((TraXLiaison) liaison)\n            .setFeature(\"http://www.oracle.com/xml/jaxp/properties/enableExtensionFunctions\", true);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        ClassLoader orig = Thread.currentThread().getContextClassLoader();\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            \r\n            Thread.currentThread().setContextClassLoader(new ClassLoader(ClassLoader.getSystemClassLoader().getParent()) {\n                public InputStream getResourceAsStream(String name) {\n                    if (name.startsWith(\"META-INF/services/\")) {\n                        \r\n                        return new ByteArrayInputStream(new byte[0]);\n                    }\n                    return super.getResourceAsStream(name);\n                }\n            });\n            \r\n            System.setSecurityManager(new SecurityManager() {public void checkPermission(Permission perm) {}});\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            Thread.currentThread().setContextClassLoader(orig);\n            System.setSecurityManager(null);\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/TraXLiaisonTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2016-09-04 22:25:14","commitOrder":2,"curCode":"    public void testXalan2RedirectViaXalan() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            Assume.assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        try {\n            String factoryName = TransformerFactory.newInstance().getClass().getName();\n            Assume.assumeTrue(\"TraxFactory is \" + factoryName + \" and not Xalan\",\n                              \"org.apache.xalan.processor.TransformerFactoryImpl\"\n                              .equals(factoryName));\n        } catch (TransformerFactoryConfigurationError exc) {\n            throw new RuntimeException(exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            System.setSecurityManager(new SecurityManager() {public void checkPermission(Permission perm) {}});\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            System.setSecurityManager(null);\n        }\n    }\n","date":"2016-09-04 22:25:14","endLine":124,"groupId":"9041","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testXalan2RedirectViaXalan","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f3/6a4db0cc9e193041c782f5d5aa272e6abba937.src","preCode":"    public void testXalan2RedirectViaXalan() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            Assume.assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        try {\n            String factoryName = TransformerFactory.newInstance().getClass().getName();\n            Assume.assumeTrue(\"TraxFactory is \" + factoryName + \" and not Xalan\",\n                              \"org.apache.xalan.processor.TransformerFactoryImpl\"\n                              .equals(factoryName));\n        } catch (TransformerFactoryConfigurationError exc) {\n            throw new RuntimeException(exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            System.setSecurityManager(new SecurityManager() {public void checkPermission(Permission perm) {}});\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            System.setSecurityManager(null);\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/TraXLiaisonTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"N"}],"commitId":"b923f8f9f4d0c2f2d60c67e61aca5df1fe6f49de","commitMessage":"@@@Merge branch '1.9.x'\n","date":"2016-10-23 23:48:10","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2018-04-03 02:11:31","codes":[{"authorDate":"2018-04-03 02:11:31","commitOrder":3,"curCode":"    public void testXalan2RedirectViaJDKFactory() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        try {\n            String factoryName = TransformerFactory.newInstance().getClass().getName();\n            assumeFalse(\"TraxFactory is Xalan\",\n                    \"org.apache.xalan.processor.TransformerFactoryImpl\".equals(factoryName));\n        } catch (TransformerFactoryConfigurationError exc) {\n            throw new RuntimeException(exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        ((TraXLiaison) liaison)\n            .setFeature(\"http://www.oracle.com/xml/jaxp/properties/enableExtensionFunctions\", true);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        ClassLoader orig = Thread.currentThread().getContextClassLoader();\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            \r\n            Thread.currentThread().setContextClassLoader(new ClassLoader(ClassLoader.getSystemClassLoader().getParent()) {\n                public InputStream getResourceAsStream(String name) {\n                    if (name.startsWith(\"META-INF/services/\")) {\n                        \r\n                        return new ByteArrayInputStream(new byte[0]);\n                    }\n                    return super.getResourceAsStream(name);\n                }\n            });\n            \r\n            System.setSecurityManager(new SecurityManager() {\n                public void checkPermission(Permission perm) {\n                }\n            });\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            Thread.currentThread().setContextClassLoader(orig);\n            System.setSecurityManager(null);\n        }\n    }\n","date":"2018-04-03 02:11:31","endLine":103,"groupId":"1091","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testXalan2RedirectViaJDKFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/24/85ac470787569ada59304701c80d0713610a59.src","preCode":"    public void testXalan2RedirectViaJDKFactory() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            Assume.assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        try {\n            String factoryName = TransformerFactory.newInstance().getClass().getName();\n            Assume.assumeFalse(\"TraxFactory is Xalan\",\n                              \"org.apache.xalan.processor.TransformerFactoryImpl\"\n                              .equals(factoryName));\n        } catch (TransformerFactoryConfigurationError exc) {\n            throw new RuntimeException(exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        ((TraXLiaison) liaison)\n            .setFeature(\"http://www.oracle.com/xml/jaxp/properties/enableExtensionFunctions\", true);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        ClassLoader orig = Thread.currentThread().getContextClassLoader();\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            \r\n            Thread.currentThread().setContextClassLoader(new ClassLoader(ClassLoader.getSystemClassLoader().getParent()) {\n                public InputStream getResourceAsStream(String name) {\n                    if (name.startsWith(\"META-INF/services/\")) {\n                        \r\n                        return new ByteArrayInputStream(new byte[0]);\n                    }\n                    return super.getResourceAsStream(name);\n                }\n            });\n            \r\n            System.setSecurityManager(new SecurityManager() {\n                public void checkPermission(Permission perm) {\n                }\n            });\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            Thread.currentThread().setContextClassLoader(orig);\n            System.setSecurityManager(null);\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/TraXLiaisonTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2018-04-03 02:11:31","commitOrder":3,"curCode":"    public void testXalan2RedirectViaXalan() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        try {\n            String factoryName = TransformerFactory.newInstance().getClass().getName();\n            assumeTrue(\"TraxFactory is \" + factoryName + \" and not Xalan\",\n                    \"org.apache.xalan.processor.TransformerFactoryImpl\".equals(factoryName));\n        } catch (TransformerFactoryConfigurationError exc) {\n            throw new RuntimeException(exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            System.setSecurityManager(new SecurityManager() {\n                public void checkPermission(Permission perm) {\n                }\n            });\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            System.setSecurityManager(null);\n        }\n    }\n","date":"2018-04-03 02:11:31","endLine":134,"groupId":"1091","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testXalan2RedirectViaXalan","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/24/85ac470787569ada59304701c80d0713610a59.src","preCode":"    public void testXalan2RedirectViaXalan() throws Exception {\n        try {\n            getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");\n        } catch (Exception exc) {\n            Assume.assumeNoException(\"xalan redirect is not on the classpath\", exc);\n        }\n        try {\n            String factoryName = TransformerFactory.newInstance().getClass().getName();\n            Assume.assumeTrue(\"TraxFactory is \" + factoryName + \" and not Xalan\",\n                              \"org.apache.xalan.processor.TransformerFactoryImpl\"\n                              .equals(factoryName));\n        } catch (TransformerFactoryConfigurationError exc) {\n            throw new RuntimeException(exc);\n        }\n        File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\");\n        liaison.setStylesheet(xsl);\n        File out = new File(\"xalan2-redirect-out-dummy.tmp\");\n        File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\");\n        try {\n            liaison.addParam(\"xalan-version\", \"2\");\n            System.setSecurityManager(new SecurityManager() {\n                public void checkPermission(Permission perm) {\n                }\n            });\n            liaison.transform(in, out);\n        } finally {\n            out.delete();\n            System.setSecurityManager(null);\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/TraXLiaisonTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"805b6eb058e79a6013c970034fe9cbf98e398ddf","commitMessage":"@@@Import assumptions statically","date":"2018-04-03 02:11:31","modifiedFileCount":"24","status":"M","submitter":"Gintas Grigelionis"}]
