[{"authorTime":"2006-09-22 03:10:48","codes":[{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testJarWithManifestInDirWithSpace() {\n        String mainjarstring = getProject().getProperty(\"main.jar\");\n        String extjarstring = getProject().getProperty(\"ext.jar\");\n        Path myPath = new Path(getProject());\n        myPath.setLocation(new File(mainjarstring));\n        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        AntClassLoader myLoader = getProject().createClassLoader(myPath);\n        String path = myLoader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","date":"2006-09-22 03:10:48","endLine":56,"groupId":"10816","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testJarWithManifestInDirWithSpace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/10/649da41f88a1da20e3b540c4ad5f8962089aad.src","preCode":"    public void testJarWithManifestInDirWithSpace() {\n        String mainjarstring = getProject().getProperty(\"main.jar\");\n        String extjarstring = getProject().getProperty(\"ext.jar\");\n        Path myPath = new Path(getProject());\n        myPath.setLocation(new File(mainjarstring));\n        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        AntClassLoader myLoader = getProject().createClassLoader(myPath);\n        String path = myLoader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testJarWithManifestInNonAsciiDir() {\n        String mainjarstring = getProject().getProperty(\"main.jar.nonascii\");\n        String extjarstring = getProject().getProperty(\"ext.jar.nonascii\");\n        Path myPath = new Path(getProject());\n        myPath.setLocation(new File(mainjarstring));\n        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        AntClassLoader myLoader = getProject().createClassLoader(myPath);\n        String path = myLoader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","date":"2006-09-22 03:10:48","endLine":66,"groupId":"10816","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJarWithManifestInNonAsciiDir","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/10/649da41f88a1da20e3b540c4ad5f8962089aad.src","preCode":"    public void testJarWithManifestInNonAsciiDir() {\n        String mainjarstring = getProject().getProperty(\"main.jar.nonascii\");\n        String extjarstring = getProject().getProperty(\"ext.jar.nonascii\");\n        Path myPath = new Path(getProject());\n        myPath.setLocation(new File(mainjarstring));\n        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        AntClassLoader myLoader = getProject().createClassLoader(myPath);\n        String path = myLoader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"}],"commitId":"73d66d2c6d6e0384fd66eba1f20ef97469c49b18","commitMessage":"@@@Restructuring to allow junit and antunit tests both.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@448636 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-09-22 03:10:48","modifiedFileCount":"0","status":"B","submitter":"Matthew Jason Benson"},{"authorTime":"2009-07-22 21:17:16","codes":[{"authorDate":"2009-07-22 21:17:16","commitOrder":2,"curCode":"    public void testJarWithManifestInDirWithSpace() {\n        String mainjarstring = getProject().getProperty(\"main.jar\");\n        String extjarstring = getProject().getProperty(\"ext.jar\");\n        Path myPath = new Path(getProject());\n        myPath.setLocation(new File(mainjarstring));\n        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        loader = getProject().createClassLoader(myPath);\n        String path = loader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","date":"2009-07-22 21:17:16","endLine":60,"groupId":"10816","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testJarWithManifestInDirWithSpace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/7a/414d06921c779c0da7a7bd77204753040f14d7.src","preCode":"    public void testJarWithManifestInDirWithSpace() {\n        String mainjarstring = getProject().getProperty(\"main.jar\");\n        String extjarstring = getProject().getProperty(\"ext.jar\");\n        Path myPath = new Path(getProject());\n        myPath.setLocation(new File(mainjarstring));\n        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        AntClassLoader myLoader = getProject().createClassLoader(myPath);\n        String path = myLoader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2009-07-22 21:17:16","commitOrder":2,"curCode":"    public void testJarWithManifestInNonAsciiDir() {\n        String mainjarstring = getProject().getProperty(\"main.jar.nonascii\");\n        String extjarstring = getProject().getProperty(\"ext.jar.nonascii\");\n        Path myPath = new Path(getProject());\n        myPath.setLocation(new File(mainjarstring));\n        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        loader = getProject().createClassLoader(myPath);\n        String path = loader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","date":"2009-07-22 21:17:16","endLine":70,"groupId":"10816","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testJarWithManifestInNonAsciiDir","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/7a/414d06921c779c0da7a7bd77204753040f14d7.src","preCode":"    public void testJarWithManifestInNonAsciiDir() {\n        String mainjarstring = getProject().getProperty(\"main.jar.nonascii\");\n        String extjarstring = getProject().getProperty(\"ext.jar.nonascii\");\n        Path myPath = new Path(getProject());\n        myPath.setLocation(new File(mainjarstring));\n        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        AntClassLoader myLoader = getProject().createClassLoader(myPath);\n        String path = myLoader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"c8e91147e37e34c4024c33ecf454e7c46639baa2","commitMessage":"@@@properly set CodeSource when loading classes.  PR 20174\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@796702 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-07-22 21:17:16","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2014-04-19 05:00:38","codes":[{"authorDate":"2014-04-19 05:00:38","commitOrder":3,"curCode":"    public void testJarWithManifestInDirWithSpace() {\n        String mainjarstring = buildRule.getProject().getProperty(\"main.jar\");\n        String extjarstring = buildRule.getProject().getProperty(\"ext.jar\");\n        Path myPath = new Path(buildRule.getProject());\n        myPath.setLocation(new File(mainjarstring));\n        buildRule.getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        loader = buildRule.getProject().createClassLoader(myPath);\n        String path = loader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","date":"2014-04-19 05:00:38","endLine":72,"groupId":"10172","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testJarWithManifestInDirWithSpace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/84/19037e15204d057285a7c7399c8fdb22e49460.src","preCode":"    public void testJarWithManifestInDirWithSpace() {\n        String mainjarstring = getProject().getProperty(\"main.jar\");\n        String extjarstring = getProject().getProperty(\"ext.jar\");\n        Path myPath = new Path(getProject());\n        myPath.setLocation(new File(mainjarstring));\n        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        loader = getProject().createClassLoader(myPath);\n        String path = loader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2014-04-19 05:00:38","commitOrder":3,"curCode":"    public void testJarWithManifestInNonAsciiDir() {\n        String mainjarstring = buildRule.getProject().getProperty(\"main.jar.nonascii\");\n        String extjarstring = buildRule.getProject().getProperty(\"ext.jar.nonascii\");\n        Path myPath = new Path(buildRule.getProject());\n        myPath.setLocation(new File(mainjarstring));\n        buildRule.getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        loader = buildRule.getProject().createClassLoader(myPath);\n        String path = loader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","date":"2014-04-19 05:00:38","endLine":84,"groupId":"10172","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testJarWithManifestInNonAsciiDir","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/84/19037e15204d057285a7c7399c8fdb22e49460.src","preCode":"    public void testJarWithManifestInNonAsciiDir() {\n        String mainjarstring = getProject().getProperty(\"main.jar.nonascii\");\n        String extjarstring = getProject().getProperty(\"ext.jar.nonascii\");\n        Path myPath = new Path(getProject());\n        myPath.setLocation(new File(mainjarstring));\n        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");\n        loader = getProject().createClassLoader(myPath);\n        String path = loader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"b61c80746dd5df73899390826e197d2656784f91","commitMessage":"@@@Test improvements: convert to JUnit4.  improved error testing and remove sleeps\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1588563 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-19 05:00:38","modifiedFileCount":"268","status":"M","submitter":"mclarke"},{"authorTime":"2020-03-08 18:11:53","codes":[{"authorDate":"2020-03-08 18:11:53","commitOrder":4,"curCode":"    public void testJarWithManifestInDirWithSpace() {\n        String mainjarstring = buildRule.getProject().getProperty(\"main.jar\");\n        String extjarstring = buildRule.getProject().getProperty(\"ext.jar\");\n        Path myPath = new Path(buildRule.getProject());\n        myPath.setLocation(new File(mainjarstring));\n        buildRule.getProject().setUserProperty(MagicNames.BUILD_SYSCLASSPATH, \"ignore\");\n        loader = buildRule.getProject().createClassLoader(myPath);\n        String path = loader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","date":"2020-03-08 18:11:53","endLine":82,"groupId":"10313","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testJarWithManifestInDirWithSpace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ce/deed0aac0772100ce3829c997a5bc78883b588.src","preCode":"    public void testJarWithManifestInDirWithSpace() {\n        String mainjarstring = buildRule.getProject().getProperty(\"main.jar\");\n        String extjarstring = buildRule.getProject().getProperty(\"ext.jar\");\n        Path myPath = new Path(buildRule.getProject());\n        myPath.setLocation(new File(mainjarstring));\n        buildRule.getProject().setUserProperty(\"build.sysclasspath\", \"ignore\");\n        loader = buildRule.getProject().createClassLoader(myPath);\n        String path = loader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2020-03-08 18:11:53","commitOrder":4,"curCode":"    public void testJarWithManifestInNonAsciiDir() {\n        String mainjarstring = buildRule.getProject().getProperty(\"main.jar.nonascii\");\n        String extjarstring = buildRule.getProject().getProperty(\"ext.jar.nonascii\");\n        Path myPath = new Path(buildRule.getProject());\n        myPath.setLocation(new File(mainjarstring));\n        buildRule.getProject().setUserProperty(MagicNames.BUILD_SYSCLASSPATH, \"ignore\");\n        loader = buildRule.getProject().createClassLoader(myPath);\n        String path = loader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","date":"2020-03-08 18:11:53","endLine":94,"groupId":"10313","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testJarWithManifestInNonAsciiDir","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ce/deed0aac0772100ce3829c997a5bc78883b588.src","preCode":"    public void testJarWithManifestInNonAsciiDir() {\n        String mainjarstring = buildRule.getProject().getProperty(\"main.jar.nonascii\");\n        String extjarstring = buildRule.getProject().getProperty(\"ext.jar.nonascii\");\n        Path myPath = new Path(buildRule.getProject());\n        myPath.setLocation(new File(mainjarstring));\n        buildRule.getProject().setUserProperty(\"build.sysclasspath\", \"ignore\");\n        loader = buildRule.getProject().createClassLoader(myPath);\n        String path = loader.getClasspath();\n        assertEquals(mainjarstring + File.pathSeparator + extjarstring, path);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"c37f13d42278c21de032ddbfb93676d6318b9f71","commitMessage":"@@@Merge pull request #111 from twogee/magic-names\n\nbuild.sysclasspath is a magic name","date":"2020-03-08 18:11:53","modifiedFileCount":"11","status":"M","submitter":"Stefan Bodewig"}]
