[{"authorTime":"2018-05-23 12:38:49","codes":[{"authorDate":"2018-05-23 12:38:49","commitOrder":1,"curCode":"        public void test() throws Exception {\n            \r\n            File target = new File(folder.getRoot(), \"link\");\n            Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n            s.setPermissions(argument);\n            assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n            s.setFollowLinks(\"yes\");\n            assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n        }\n","date":"2018-05-23 12:38:49","endLine":130,"groupId":"273","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/1d/de9c4821935f3b8b911a541dcf79e3dd79e8de.src","preCode":"        public void test() throws Exception {\n            \r\n            File target = new File(folder.getRoot(), \"link\");\n            Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n            s.setPermissions(argument);\n            assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n            s.setFollowLinks(\"yes\");\n            assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n        }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/selectors/PosixPermissionsSelectorTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2018-05-23 12:38:49","commitOrder":1,"curCode":"    public void ownedByFollowSymlinks() throws IOException {\n        File target = new File(folder.getRoot(), \"link\");\n        Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n        UserPrincipal root = Files.getOwner(symbolicLink);\n        assertEquals(ROOT, root.getName());\n\n        UserPrincipal user = Files.getOwner(symbolicLink, LinkOption.NOFOLLOW_LINKS);\n        assertEquals(SELF, user.getName());\n\n        s.setOwner(SELF);\n        assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n        s.setFollowLinks(\"yes\");\n        assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n    }\n","date":"2018-05-23 12:38:49","endLine":85,"groupId":"10852","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ownedByFollowSymlinks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e8/619e4ed78e8091ae5858345f2c9b4347ab6099.src","preCode":"    public void ownedByFollowSymlinks() throws IOException {\n        File target = new File(folder.getRoot(), \"link\");\n        Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n        UserPrincipal root = Files.getOwner(symbolicLink);\n        assertEquals(ROOT, root.getName());\n\n        UserPrincipal user = Files.getOwner(symbolicLink, LinkOption.NOFOLLOW_LINKS);\n        assertEquals(SELF, user.getName());\n\n        s.setOwner(SELF);\n        assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n        s.setFollowLinks(\"yes\");\n        assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/selectors/OwnedBySelectorTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"}],"commitId":"35a84fea1a9f73e54de0207a04c12f764ac8821c","commitMessage":"@@@Bz 22370: followlinks attribute","date":"2018-05-23 12:38:49","modifiedFileCount":"6","status":"B","submitter":"Gintas Grigelionis"},{"authorTime":"2018-05-24 01:09:18","codes":[{"authorDate":"2018-05-24 01:09:18","commitOrder":2,"curCode":"        public void test() throws Exception {\n            \r\n            File target = new File(folder.getRoot(), \"link\");\n            Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n            s.setPermissions(argument);\n            assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n            s.setFollowSymlinks(\"yes\");\n            assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n        }\n","date":"2018-05-24 01:09:18","endLine":130,"groupId":"273","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/9a/ff3b5e439ab5b1b640c202a42780279fb91624.src","preCode":"        public void test() throws Exception {\n            \r\n            File target = new File(folder.getRoot(), \"link\");\n            Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n            s.setPermissions(argument);\n            assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n            s.setFollowLinks(\"yes\");\n            assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n        }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/selectors/PosixPermissionsSelectorTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2018-05-24 01:09:18","commitOrder":2,"curCode":"    public void ownedByFollowSymlinks() throws IOException {\n        File target = new File(folder.getRoot(), \"link\");\n        Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n        UserPrincipal root = Files.getOwner(symbolicLink);\n        assertEquals(ROOT, root.getName());\n\n        UserPrincipal user = Files.getOwner(symbolicLink, LinkOption.NOFOLLOW_LINKS);\n        assertEquals(SELF, user.getName());\n\n        s.setOwner(SELF);\n        assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n        s.setFollowSymlinks(\"yes\");\n        assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n    }\n","date":"2018-05-24 01:09:18","endLine":85,"groupId":"10852","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ownedByFollowSymlinks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/77/b31ddfa8b40b7540ac8d4c18eb151f4fad1b8f.src","preCode":"    public void ownedByFollowSymlinks() throws IOException {\n        File target = new File(folder.getRoot(), \"link\");\n        Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n        UserPrincipal root = Files.getOwner(symbolicLink);\n        assertEquals(ROOT, root.getName());\n\n        UserPrincipal user = Files.getOwner(symbolicLink, LinkOption.NOFOLLOW_LINKS);\n        assertEquals(SELF, user.getName());\n\n        s.setOwner(SELF);\n        assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n        s.setFollowLinks(\"yes\");\n        assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/selectors/OwnedBySelectorTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"cd1ce377dc769671b46ca6e68adb604b0453b4a3","commitMessage":"@@@Change followlinks to followsymlinks for consistency with fileset","date":"2018-05-24 01:09:18","modifiedFileCount":"7","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-06-01 22:08:42","codes":[{"authorDate":"2018-06-01 22:08:42","commitOrder":3,"curCode":"        public void test() throws Exception {\n            \r\n            File target = new File(folder.getRoot(), \"link\");\n            Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n            s.setPermissions(argument);\n            assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n            s.setFollowSymlinks(false);\n            assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n        }\n","date":"2018-06-01 22:08:42","endLine":130,"groupId":"273","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/88/7c34db0beea888847c0c1042a1564f055fd48f.src","preCode":"        public void test() throws Exception {\n            \r\n            File target = new File(folder.getRoot(), \"link\");\n            Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n            s.setPermissions(argument);\n            assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n            s.setFollowSymlinks(\"yes\");\n            assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n        }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/selectors/PosixPermissionsSelectorTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2018-06-01 22:08:42","commitOrder":3,"curCode":"    public void ownedByFollowSymlinks() throws IOException {\n        File target = new File(folder.getRoot(), \"link\");\n        Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n        UserPrincipal root = Files.getOwner(symbolicLink);\n        assertEquals(ROOT, root.getName());\n\n        UserPrincipal user = Files.getOwner(symbolicLink, LinkOption.NOFOLLOW_LINKS);\n        assertEquals(SELF, user.getName());\n\n        s.setOwner(SELF);\n        assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n        s.setFollowSymlinks(false);\n        assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n    }\n","date":"2018-06-01 22:08:42","endLine":85,"groupId":"10852","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"ownedByFollowSymlinks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/be/0d71f6f0a48eff15db58e436077117aec67aa5.src","preCode":"    public void ownedByFollowSymlinks() throws IOException {\n        File target = new File(folder.getRoot(), \"link\");\n        Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n        UserPrincipal root = Files.getOwner(symbolicLink);\n        assertEquals(ROOT, root.getName());\n\n        UserPrincipal user = Files.getOwner(symbolicLink, LinkOption.NOFOLLOW_LINKS);\n        assertEquals(SELF, user.getName());\n\n        s.setOwner(SELF);\n        assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n        s.setFollowSymlinks(\"yes\");\n        assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/selectors/OwnedBySelectorTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"f71d39da3cdb277271095145102630f3a97372f1","commitMessage":"@@@Bz 22370: followsymlinks must default to true for consistency","date":"2018-06-01 22:08:42","modifiedFileCount":"6","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-10-24 02:16:24","codes":[{"authorDate":"2018-06-01 22:08:42","commitOrder":4,"curCode":"        public void test() throws Exception {\n            \r\n            File target = new File(folder.getRoot(), \"link\");\n            Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n            s.setPermissions(argument);\n            assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n            s.setFollowSymlinks(false);\n            assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n        }\n","date":"2018-06-01 22:08:42","endLine":130,"groupId":"12233","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/88/7c34db0beea888847c0c1042a1564f055fd48f.src","preCode":"        public void test() throws Exception {\n            \r\n            File target = new File(folder.getRoot(), \"link\");\n            Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n            s.setPermissions(argument);\n            assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n            s.setFollowSymlinks(false);\n            assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n        }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/selectors/PosixPermissionsSelectorTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"},{"authorDate":"2018-10-24 02:16:24","commitOrder":4,"curCode":"    public void ownedByFollowSymlinks() throws IOException {\n        File target = new File(folder.getRoot(), \"link\");\n        Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n        UserPrincipal root = Files.getOwner(symbolicLink);\n        assertEquals(ROOT_USER, root.getName());\n\n        UserPrincipal user = Files.getOwner(symbolicLink, LinkOption.NOFOLLOW_LINKS);\n        assertEquals(SELF, user.getName());\n\n        s.setOwner(SELF);\n        assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n        s.setFollowSymlinks(false);\n        assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n    }\n","date":"2018-10-24 02:17:28","endLine":85,"groupId":"12233","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"ownedByFollowSymlinks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/1e/a26c7c4e442f240cf2d10329f42079ae8288de.src","preCode":"    public void ownedByFollowSymlinks() throws IOException {\n        File target = new File(folder.getRoot(), \"link\");\n        Path symbolicLink = Files.createSymbolicLink(target.toPath(), TEST_FILE.toPath());\n\n        UserPrincipal root = Files.getOwner(symbolicLink);\n        assertEquals(ROOT, root.getName());\n\n        UserPrincipal user = Files.getOwner(symbolicLink, LinkOption.NOFOLLOW_LINKS);\n        assertEquals(SELF, user.getName());\n\n        s.setOwner(SELF);\n        assertFalse(s.isSelected(null, null, symbolicLink.toFile()));\n        s.setFollowSymlinks(false);\n        assertTrue(s.isSelected(null, null, symbolicLink.toFile()));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/selectors/OwnedBySelectorTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"679a94224de0c57c777f6ecca5c33207c11e500b","commitMessage":"@@@Add magic names for tests.  run more tests in Surefire","date":"2018-10-24 02:17:28","modifiedFileCount":"16","status":"M","submitter":"Gintas Grigelionis"}]
