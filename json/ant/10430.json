[{"authorTime":"2001-01-21 08:37:25","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":12,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"B"},{"authorDate":"2001-01-21 08:37:25","commitOrder":12,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -quiet                 be extra quiet\" + lSep);\n        msg.append(\"  -verbose               be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","date":"2001-01-21 08:37:25","endLine":510,"groupId":"7746","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/43/a5007d41dd33d2b4c73a61f24b75910bab2387.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -quiet                 be extra quiet\" + lSep);\n        msg.append(\"  -verbose               be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":490,"status":"NB"}],"commitId":"a80cf0dfece4c5bd7a1dd24b05a8d30bf441abf5","commitMessage":"@@@iplanet-ejbc task for EJB stubs and skeletons for the iPlanet\nApplication Server 6.0\nNested element to support iPlanet in ejbjar task\n\n\nSubmitted by:\tGreg Nelson <greg@netscape.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@268990 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2001-05-01 18:31:48","modifiedFileCount":"2","status":"M","submitter":"Conor MacNeill"},{"authorTime":"2002-02-02 06:29:21","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":13,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2002-02-02 06:29:21","commitOrder":13,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -quiet                 be extra quiet\" + lSep);\n        msg.append(\"  -verbose               be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","date":"2002-02-02 06:29:21","endLine":622,"groupId":"7746","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/1e/867f157367c074da69503dd06fff057c6b70c3.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -quiet                 be extra quiet\" + lSep);\n        msg.append(\"  -verbose               be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":600,"status":"M"}],"commitId":"b57651f539a20ca5b1e4bb50eb2737eac648d622","commitMessage":"@@@Add -propertyfile command-line option.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@271043 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2002-02-02 06:29:21","modifiedFileCount":"1","status":"M","submitter":"Erik Hatcher"},{"authorTime":"2002-04-22 21:22:57","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":14,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2002-04-22 21:22:57","commitOrder":14,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -quiet                 be extra quiet\" + lSep);\n        msg.append(\"  -verbose               be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","date":"2002-04-22 21:22:57","endLine":747,"groupId":"7746","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ab/dadf5d14b0049bf600991499211b2bed58392e.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -quiet                 be extra quiet\" + lSep);\n        msg.append(\"  -verbose               be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":724,"status":"M"}],"commitId":"150545be2fb2f82b5fe56dbe108049a1501c03e6","commitMessage":"@@@Add documentation for new input stuff.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272545 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2002-04-22 21:22:57","modifiedFileCount":"1","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2002-06-23 07:38:38","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":15,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2002-06-23 07:38:38","commitOrder":15,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","date":"2002-06-23 07:38:38","endLine":753,"groupId":"7746","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/10/696a58ce1b2efec77284e7b28fd9f5feecd76e.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -quiet                 be extra quiet\" + lSep);\n        msg.append(\"  -verbose               be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":727,"status":"M"}],"commitId":"6bd8d6e938a45868902ecd1092858e8372933c7c","commitMessage":"@@@Merge changes made to 1.5 Beta2.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272967 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2002-06-23 07:38:38","modifiedFileCount":"127","status":"M","submitter":"Magesh Umasankar"},{"authorTime":"2002-07-10 05:06:15","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":16,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2002-07-10 05:06:15","commitOrder":16,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","date":"2002-07-10 05:06:15","endLine":759,"groupId":"7746","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/1b/8d3f850ffdea9da5d3aec0dd9d388c52ccae80.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":731,"status":"M"}],"commitId":"da5a13f8e4e0e4475f942b5ae5670271b711d423","commitMessage":"@@@Merge differences between the ANT_15_FINAL branch and the trunk into the trunk.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@273081 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2002-07-10 05:06:15","modifiedFileCount":"162","status":"M","submitter":"Magesh Umasankar"},{"authorTime":"2003-06-10 21:29:56","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":17,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2003-06-10 21:29:56","commitOrder":17,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","date":"2003-06-10 21:29:56","endLine":772,"groupId":"7795","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/80/2cde583edd899e917ac9be7a436f0e38632ebc.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":743,"status":"M"}],"commitId":"539d2cdb764e134a6d74ee8b2b50e3d7aba1e882","commitMessage":"@@@Various I/O fixes to support input from java tasks.\nAddition of a -noinput flag to indicate input is not allowed\nto prevent locking up non-interactive builds.\n\nPR:\t18133\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274657 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-06-10 21:29:56","modifiedFileCount":"5","status":"M","submitter":"Conor MacNeill"},{"authorTime":"2003-07-16 22:14:38","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":18,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2003-07-16 22:14:38","commitOrder":18,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","date":"2003-07-16 22:14:38","endLine":818,"groupId":"7795","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/48/d0d911f41ccc0224f2e32a9f5ac926d410b164.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":787,"status":"M"}],"commitId":"b7c2f5f6435c50ce21b758e0f070add9cabae1fb","commitMessage":"@@@Add make's keep-going feature into ANT.\nPR: 21144\nObtained from: Alexey Solofnenko\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274834 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-07-16 22:14:38","modifiedFileCount":"3","status":"M","submitter":"Peter Reilly"},{"authorTime":"2003-09-03 22:19:07","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":19,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2003-09-03 22:19:07","commitOrder":19,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","date":"2003-09-03 22:19:07","endLine":825,"groupId":"7795","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e2/442021e52f608a452f8c600805d7c103198d9b.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help                  print this message\" + lSep);\n        msg.append(\"  -projecthelp           print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug                 print debugging information\" + lSep);\n        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);\n        msg.append(\"                         filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":794,"status":"M"}],"commitId":"1fcc1b616775491d69f96edadb3a1ec62a7eb73f","commitMessage":"@@@New shortcuts for ant options:\n-d  -->  -debug\n-e  -->  -emacs\n-h  -->  -help\n-p  -->  -projecthelp\n-s  -->  -find\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275178 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-09-03 22:19:07","modifiedFileCount":"1","status":"M","submitter":"Jan Materne"},{"authorTime":"2003-10-02 14:44:27","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":20,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2003-10-02 14:44:27","commitOrder":20,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\" + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","date":"2003-10-02 14:44:27","endLine":830,"groupId":"6657","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/b5/492dd203b4139a2981b14fcf727898672726a9.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":798,"status":"M"}],"commitId":"3e4dcc0c430eb1332771ae34a4d03631be6a0f3c","commitMessage":"@@@merge\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275404 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-10-02 14:44:27","modifiedFileCount":"2","status":"M","submitter":"Conor MacNeill"},{"authorTime":"2003-10-03 09:40:48","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":21,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2003-10-03 09:40:48","commitOrder":21,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\" + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep +\n                   \"                         1 (lowest) to 10 (highest); 5 is the default\" + lSep);\n        System.out.println(msg.toString());\n    }\n","date":"2003-10-03 09:40:48","endLine":868,"groupId":"6657","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e5/fc197800843dfd383ef033cb2798f146925985.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\" + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":834,"status":"M"}],"commitId":"3fd5393e99cef2d28ced46f804a3ae53f915bf3c","commitMessage":"@@@This is the first visible divergence ofAnt1.7 from 1.6...ant 1.7 has a -nice option that lets you lessen or increase the priority of the main thread. Useful for background builds.  though since it doesnt propagate into forked code.  not as useful as it could be.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275412 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-10-03 09:40:48","modifiedFileCount":"1","status":"M","submitter":"Steve Loughran"},{"authorTime":"2004-09-24 16:13:25","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":22,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2004-09-24 16:13:25","commitOrder":22,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\" + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep +\n                   \"                         1 (lowest) to 10 (highest); 5 is the default\" + lSep);\n        msg.append(\"  -nouserlib             Run ant within using the jar files from ${user.home}/\"\n                   + \".ant/lib\");\n        System.out.println(msg.toString());\n    }\n","date":"2004-09-24 16:13:25","endLine":840,"groupId":"6657","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/fb/227674912630843bbb244aa9ef43365167682a.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\" + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\" + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\" + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep +\n                   \"                         1 (lowest) to 10 (highest); 5 is the default\" + lSep);\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":804,"status":"M"}],"commitId":"acd0bcd1e0a30b0dca49c4ae0ad3055e97273c66","commitMessage":"@@@Add a new option -nouserlib to the ant command.\nThis allows running ant without loading the jars from ${user.home}/.ant/lib.\nThis is useful for building ant.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276880 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2004-09-24 16:13:25","modifiedFileCount":"2","status":"M","submitter":"Peter Reilly"},{"authorTime":"2004-10-05 16:09:31","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":23,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2004-10-05 16:09:31","commitOrder":23,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from ${user.home}/\"\n                   + \".ant/lib\");\n        System.out.println(msg.toString());\n    }\n","date":"2004-10-05 16:09:31","endLine":844,"groupId":"6657","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/99/8d6e039bec4e8489f757966368e0f68d106852.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant within using the jar files from ${user.home}/\"\n                   + \".ant/lib\");\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":804,"status":"M"}],"commitId":"f6c27e5849c51b841f64a946447a3c171b18d9fc","commitMessage":"@@@typo\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276911 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2004-10-05 16:09:31","modifiedFileCount":"1","status":"M","submitter":"Peter Reilly"},{"authorTime":"2004-10-05 16:37:01","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":24,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2004-10-05 16:37:01","commitOrder":24,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from ${user.home}/\"\n                   + \".ant/lib\");\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(msg.toString());\n    }\n","date":"2004-10-05 16:37:01","endLine":845,"groupId":"6657","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/34/b803144df236f0f0f2628aeb10aa5b3ce57c7a.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from ${user.home}/\"\n                   + \".ant/lib\");\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":804,"status":"M"}],"commitId":"d84de6b84688e0235a43fdf08ec0212239b0c159","commitMessage":"@@@-noclasspath option\n  Added -noclasspath option to allow running ant WITHOUT using CLASSPATH env\n  variable. Modified ant.bat to do this so that %CLASSPATH% is not looked at.\n  Modified build.sh and build.bat to use the option.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276912 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2004-10-05 16:37:01","modifiedFileCount":"2","status":"M","submitter":"Peter Reilly"},{"authorTime":"2005-01-11 04:18:27","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":25,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2005-01-11 04:18:27","commitOrder":25,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from\" + lSep\n                   + \"                         ${user.home}/.ant/lib\" + lSep);\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(msg.toString());\n    }\n","date":"2005-01-11 04:18:27","endLine":845,"groupId":"6657","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/77/09529d0831b2c0c3eca4c4d94ff9a1bda49571.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from ${user.home}/\"\n                   + \".ant/lib\");\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":804,"status":"M"}],"commitId":"ff04e875ee2a99514bbea79b677968a63befff72","commitMessage":"@@@Minor update in ant help. description for -nouserlib and -noclasspath were on one line.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277331 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2005-01-11 04:18:27","modifiedFileCount":"1","status":"M","submitter":"Jacobus Martinus Kruithof"},{"authorTime":"2005-08-17 21:59:28","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":26,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2005-08-17 21:59:28","commitOrder":26,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from\" + lSep\n                   + \"                         ${user.home}/.ant/lib\" + lSep);\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\" + lSep);\n        msg.append(\"  -noproxy               Java 1.5 only: do not use the OS proxies\");\n        System.out.println(msg.toString());\n    }\n","date":"2005-08-17 21:59:28","endLine":830,"groupId":"6657","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/97/aa852a9d2852c349c8bd1b78db0b39106fa939.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from\" + lSep\n                   + \"                         ${user.home}/.ant/lib\" + lSep);\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":788,"status":"M"}],"commitId":"b31c3d79f047cc3a19eca9c174860145b5ab723e","commitMessage":"@@@Add java1.5 system proxy support.  as per bug 36174.\nI do not see any evidence of this working on my kde/linux system; I will check out and test on Windows.Other tests on other platforms welcome.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278520 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2005-08-17 21:59:28","modifiedFileCount":"1","status":"M","submitter":"Steve Loughran"},{"authorTime":"2006-07-13 19:11:21","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":27,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2006-07-13 19:11:21","commitOrder":27,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from\" + lSep\n                   + \"                         ${user.home}/.ant/lib\" + lSep);\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\" + lSep);\n        msg.append(\"  -noproxy               Java 1.5 only: do not use the OS proxies\" +\n                lSep);\n        msg.append(\"  -main <class>          override Ant's normal entry point\");\n        System.out.println(msg.toString());\n    }\n","date":"2006-07-13 19:11:21","endLine":853,"groupId":"6657","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/9d/e15e7b81603987fb0aa42879502eadde2bfffa.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from\" + lSep\n                   + \"                         ${user.home}/.ant/lib\" + lSep);\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\" + lSep);\n        msg.append(\"  -noproxy               Java 1.5 only: do not use the OS proxies\");\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":809,"status":"M"}],"commitId":"91ee1ced95e8b60187ccaaa4f032015605c26e07","commitMessage":"@@@This is a little bit of fun; something asked for on the mail list. You can now use -main to specify a new entry point for ant.  so if you override ant.Main with a subclass.  you can switch to that.\n\nIt has a side effect of making ant a generic launcher of things; anything that implements AntMain.startAnt.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@421588 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-07-13 19:11:21","modifiedFileCount":"2","status":"M","submitter":"Steve Loughran"},{"authorTime":"2006-12-12 06:25:29","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":28,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2006-12-12 06:25:29","commitOrder":28,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from\" + lSep\n                   + \"                         ${user.home}/.ant/lib\" + lSep);\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\" + lSep);\n        msg.append(\"  -autoproxy             Java1.5+: use the OS proxy settings\"\n                + lSep);\n        msg.append(\"  -main <class>          override Ant's normal entry point\");\n        System.out.println(msg.toString());\n    }\n","date":"2006-12-12 06:25:29","endLine":854,"groupId":"6657","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0b/cf2462dfd369441f6d6e5315d5befb6e4deca4.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from\" + lSep\n                   + \"                         ${user.home}/.ant/lib\" + lSep);\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\" + lSep);\n        msg.append(\"  -noproxy               Java 1.5 only: do not use the OS proxies\"\n                   + lSep);\n        msg.append(\"  -main <class>          override Ant's normal entry point\");\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":810,"status":"M"}],"commitId":"a0023f48522108306b5803f6d358196ed1a9b79a","commitMessage":"@@@automatic proxy handling is only there if -autoproxy is set; marked as such in the docs. -noproxy is removed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@485920 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-12-12 06:25:29","modifiedFileCount":"1","status":"M","submitter":"Steve Loughran"},{"authorTime":"2012-08-15 19:13:15","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":29,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2012-08-15 19:13:15","commitOrder":29,"curCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -silent, -S            print nothing but task outputs and build failures\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from\" + lSep\n                   + \"                         ${user.home}/.ant/lib\" + lSep);\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\" + lSep);\n        msg.append(\"  -autoproxy             Java1.5+: use the OS proxy settings\"\n                + lSep);\n        msg.append(\"  -main <class>          override Ant's normal entry point\");\n        System.out.println(msg.toString());\n    }\n","date":"2012-08-15 19:13:15","endLine":1007,"groupId":"6657","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/fa/826006a398448fe82a5f055185c430443ea13a.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from\" + lSep\n                   + \"                         ${user.home}/.ant/lib\" + lSep);\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\" + lSep);\n        msg.append(\"  -autoproxy             Java1.5+: use the OS proxy settings\"\n                + lSep);\n        msg.append(\"  -main <class>          override Ant's normal entry point\");\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":962,"status":"M"}],"commitId":"38688e7583ed218343cc26e35591cf25966f2aa7","commitMessage":"@@@Add a log mode which logs nothing but ant task output and build failures; useful for using ant output in scripts.  like for cacti for instance\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1373334 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-15 19:13:15","modifiedFileCount":"1","status":"M","submitter":"Nicolas Lalevee"},{"authorTime":"2012-09-16 21:42:41","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":30,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":37,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2012-09-16 21:42:41","commitOrder":30,"curCode":"    private static void printUsage() {\n        System.out.println(\"ant [options] [target [target2 [target3] ...]]\");\n        System.out.println(\"Options: \");\n        System.out.println(\"  -help, -h              print this message\");\n        System.out.println(\"  -projecthelp, -p       print project help information\");\n        System.out.println(\"  -version               print the version information and exit\");\n        System.out.println(\"  -diagnostics           print information that might be helpful to\");\n        System.out.println(\"                         diagnose or report problems.\");\n        System.out.println(\"  -quiet, -q             be extra quiet\");\n        System.out.println(\"  -silent, -S            print nothing but task outputs and build failures\");\n        System.out.println(\"  -verbose, -v           be extra verbose\");\n        System.out.println(\"  -debug, -d             print debugging information\");\n        System.out.println(\"  -emacs, -e             produce logging information without adornments\");\n        System.out.println(\"  -lib <path>            specifies a path to search for jars and classes\");\n        System.out.println(\"  -logfile <file>        use given file for log\");\n        System.out.println(\"    -l     <file>                ''\");\n        System.out.println(\"  -logger <classname>    the class which is to perform logging\");\n        System.out.println(\"  -listener <classname>  add an instance of class as a project listener\");\n        System.out.println(\"  -noinput               do not allow interactive input\");\n        System.out.println(\"  -buildfile <file>      use given buildfile\");\n        System.out.println(\"    -file    <file>              ''\");\n        System.out.println(\"    -f       <file>              ''\");\n        System.out.println(\"  -D<property>=<value>   use value for given property\");\n        System.out.println(\"  -keep-going, -k        execute all targets that do not depend\");\n        System.out.println(\"                         on failed target(s)\");\n        System.out.println(\"  -propertyfile <name>   load all properties from file with -D\");\n        System.out.println(\"                         properties taking precedence\");\n        System.out.println(\"  -inputhandler <class>  the class which will handle input requests\");\n        System.out.println(\"  -find <file>           (s)earch for buildfile towards the root of\");\n        System.out.println(\"    -s  <file>           the filesystem and use it\");\n        System.out.println(\"  -nice  number          A niceness value for the main thread:\"\n                + \"                         1 (lowest) to 10 (highest); 5 is the default\");\n        System.out.println(\"  -nouserlib             Run ant without using the jar files from\"\n                + \"                         ${user.home}/.ant/lib\");\n        System.out.println(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(\"  -autoproxy             Java1.5+: use the OS proxy settings\");\n        System.out.println(\"  -main <class>          override Ant's normal entry point\");\n        for (ArgumentProcessor processor : ArgumentProcessorRegistry.getInstance().getProcessors()) {\n            processor.printUsage(System.out);\n        }\n    }\n","date":"2012-09-16 21:42:41","endLine":1047,"groupId":"5892","id":38,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/32/0bfd82a977f420ee5afacef37d2d2efa5bf85f.src","preCode":"    private static void printUsage() {\n        String lSep = System.getProperty(\"line.separator\");\n        StringBuffer msg = new StringBuffer();\n        msg.append(\"ant [options] [target [target2 [target3] ...]]\" + lSep);\n        msg.append(\"Options: \" + lSep);\n        msg.append(\"  -help, -h              print this message\" + lSep);\n        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);\n        msg.append(\"  -version               print the version information and exit\" + lSep);\n        msg.append(\"  -diagnostics           print information that might be helpful to\" + lSep);\n        msg.append(\"                         diagnose or report problems.\" + lSep);\n        msg.append(\"  -quiet, -q             be extra quiet\" + lSep);\n        msg.append(\"  -silent, -S            print nothing but task outputs and build failures\" + lSep);\n        msg.append(\"  -verbose, -v           be extra verbose\" + lSep);\n        msg.append(\"  -debug, -d             print debugging information\" + lSep);\n        msg.append(\"  -emacs, -e             produce logging information without adornments\"\n                   + lSep);\n        msg.append(\"  -lib <path>            specifies a path to search for jars and classes\"\n                   + lSep);\n        msg.append(\"  -logfile <file>        use given file for log\" + lSep);\n        msg.append(\"    -l     <file>                ''\" + lSep);\n        msg.append(\"  -logger <classname>    the class which is to perform logging\" + lSep);\n        msg.append(\"  -listener <classname>  add an instance of class as a project listener\"\n                   + lSep);\n        msg.append(\"  -noinput               do not allow interactive input\" + lSep);\n        msg.append(\"  -buildfile <file>      use given buildfile\" + lSep);\n        msg.append(\"    -file    <file>              ''\" + lSep);\n        msg.append(\"    -f       <file>              ''\" + lSep);\n        msg.append(\"  -D<property>=<value>   use value for given property\" + lSep);\n        msg.append(\"  -keep-going, -k        execute all targets that do not depend\" + lSep);\n        msg.append(\"                         on failed target(s)\" + lSep);\n        msg.append(\"  -propertyfile <name>   load all properties from file with -D\" + lSep);\n        msg.append(\"                         properties taking precedence\" + lSep);\n        msg.append(\"  -inputhandler <class>  the class which will handle input requests\" + lSep);\n        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);\n        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);\n        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep\n                   + \"                         1 (lowest) to 10 (highest); 5 is the default\"\n                   + lSep);\n        msg.append(\"  -nouserlib             Run ant without using the jar files from\" + lSep\n                   + \"                         ${user.home}/.ant/lib\" + lSep);\n        msg.append(\"  -noclasspath           Run ant without using CLASSPATH\" + lSep);\n        msg.append(\"  -autoproxy             Java1.5+: use the OS proxy settings\"\n                + lSep);\n        msg.append(\"  -main <class>          override Ant's normal entry point\");\n        System.out.println(msg.toString());\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1007,"status":"M"}],"commitId":"eb08ea9fd094b675617320ddf8b66940644a8364","commitMessage":"@@@Add the possibility to register a custom command line argument processor\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1385262 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-09-16 21:42:41","modifiedFileCount":"1","status":"M","submitter":"Nicolas Lalevee"},{"authorTime":"2014-07-04 15:14:00","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":31,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":39,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2014-07-04 15:14:00","commitOrder":31,"curCode":"    private static void printUsage() {\n        System.out.println(\"ant [options] [target [target2 [target3] ...]]\");\n        System.out.println(\"Options: \");\n        System.out.println(\"  -help, -h              print this message\");\n        System.out.println(\"  -projecthelp, -p       print project help information\");\n        System.out.println(\"  -version               print the version information and exit\");\n        System.out.println(\"  -diagnostics           print information that might be helpful to\");\n        System.out.println(\"                         diagnose or report problems.\");\n        System.out.println(\"  -quiet, -q             be extra quiet\");\n        System.out.println(\"  -silent, -S            print nothing but task outputs and build failures\");\n        System.out.println(\"  -verbose, -v           be extra verbose\");\n        System.out.println(\"  -debug, -d             print debugging information\");\n        System.out.println(\"  -emacs, -e             produce logging information without adornments\");\n        System.out.println(\"  -lib <path>            specifies a path to search for jars and classes\");\n        System.out.println(\"  -logfile <file>        use given file for log\");\n        System.out.println(\"    -l     <file>                ''\");\n        System.out.println(\"  -logger <classname>    the class which is to perform logging\");\n        System.out.println(\"  -listener <classname>  add an instance of class as a project listener\");\n        System.out.println(\"  -noinput               do not allow interactive input\");\n        System.out.println(\"  -buildfile <file>      use given buildfile\");\n        System.out.println(\"    -file    <file>              ''\");\n        System.out.println(\"    -f       <file>              ''\");\n        System.out.println(\"  -D<property>=<value>   use value for given property\");\n        System.out.println(\"  -keep-going, -k        execute all targets that do not depend\");\n        System.out.println(\"                         on failed target(s)\");\n        System.out.println(\"  -propertyfile <name>   load all properties from file with -D\");\n        System.out.println(\"                         properties taking precedence\");\n        System.out.println(\"  -inputhandler <class>  the class which will handle input requests\");\n        System.out.println(\"  -find <file>           (s)earch for buildfile towards the root of\");\n        System.out.println(\"    -s  <file>           the filesystem and use it\");\n        System.out.println(\"  -nice  number          A niceness value for the main thread:\"\n                + \"                         1 (lowest) to 10 (highest); 5 is the default\");\n        System.out.println(\"  -nouserlib             Run ant without using the jar files from\"\n                + \"                         ${user.home}/.ant/lib\");\n        System.out.println(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(\"  -autoproxy             Java1.5+: use the OS proxy settings\");\n        System.out.println(\"  -main <class>          override Ant's normal entry point\");\n        for (final ArgumentProcessor processor : ArgumentProcessorRegistry.getInstance().getProcessors()) {\n            processor.printUsage(System.out);\n        }\n    }\n","date":"2014-07-04 15:14:00","endLine":1053,"groupId":"5892","id":40,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6c/f4718a9f236322a5026984f8b60e56eb3e3089.src","preCode":"    private static void printUsage() {\n        System.out.println(\"ant [options] [target [target2 [target3] ...]]\");\n        System.out.println(\"Options: \");\n        System.out.println(\"  -help, -h              print this message\");\n        System.out.println(\"  -projecthelp, -p       print project help information\");\n        System.out.println(\"  -version               print the version information and exit\");\n        System.out.println(\"  -diagnostics           print information that might be helpful to\");\n        System.out.println(\"                         diagnose or report problems.\");\n        System.out.println(\"  -quiet, -q             be extra quiet\");\n        System.out.println(\"  -silent, -S            print nothing but task outputs and build failures\");\n        System.out.println(\"  -verbose, -v           be extra verbose\");\n        System.out.println(\"  -debug, -d             print debugging information\");\n        System.out.println(\"  -emacs, -e             produce logging information without adornments\");\n        System.out.println(\"  -lib <path>            specifies a path to search for jars and classes\");\n        System.out.println(\"  -logfile <file>        use given file for log\");\n        System.out.println(\"    -l     <file>                ''\");\n        System.out.println(\"  -logger <classname>    the class which is to perform logging\");\n        System.out.println(\"  -listener <classname>  add an instance of class as a project listener\");\n        System.out.println(\"  -noinput               do not allow interactive input\");\n        System.out.println(\"  -buildfile <file>      use given buildfile\");\n        System.out.println(\"    -file    <file>              ''\");\n        System.out.println(\"    -f       <file>              ''\");\n        System.out.println(\"  -D<property>=<value>   use value for given property\");\n        System.out.println(\"  -keep-going, -k        execute all targets that do not depend\");\n        System.out.println(\"                         on failed target(s)\");\n        System.out.println(\"  -propertyfile <name>   load all properties from file with -D\");\n        System.out.println(\"                         properties taking precedence\");\n        System.out.println(\"  -inputhandler <class>  the class which will handle input requests\");\n        System.out.println(\"  -find <file>           (s)earch for buildfile towards the root of\");\n        System.out.println(\"    -s  <file>           the filesystem and use it\");\n        System.out.println(\"  -nice  number          A niceness value for the main thread:\"\n                + \"                         1 (lowest) to 10 (highest); 5 is the default\");\n        System.out.println(\"  -nouserlib             Run ant without using the jar files from\"\n                + \"                         ${user.home}/.ant/lib\");\n        System.out.println(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(\"  -autoproxy             Java1.5+: use the OS proxy settings\");\n        System.out.println(\"  -main <class>          override Ant's normal entry point\");\n        for (ArgumentProcessor processor : ArgumentProcessorRegistry.getInstance().getProcessors()) {\n            processor.printUsage(System.out);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1013,"status":"M"}],"commitId":"1b76f1b6dae88a7a158e50222bb19f6f5ca26d70","commitMessage":"@@@checkstyle","date":"2014-07-04 15:14:00","modifiedFileCount":"117","status":"M","submitter":"Jan Mat?rne"},{"authorTime":"2014-07-20 15:17:46","codes":[{"authorDate":"2001-05-01 18:31:48","commitOrder":32,"curCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","date":"2001-05-01 18:31:48","endLine":392,"groupId":"9802","id":41,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/da156236f79961f26d0ca694e1fcc777aa5035.src","preCode":"\tprivate static void usage() {\n\t\tSystem.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n\t\tSystem.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"Where OPTIONS are:\");\n\t\tSystem.out.println(\"  -debug -- for additional debugging output\");\n\t\tSystem.out.println(\"  -keepsource -- to retain Java source files generated\");\n\t\tSystem.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n\t\tSystem.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"If a classpath is not specified, the system classpath\");\n\t\tSystem.out.println(\"will be used.  If a destination directory is not specified,\");\n\t\tSystem.out.println(\"the current working directory will be used (classes will\");\n\t\tSystem.out.println(\"still be placed in subfolders which correspond to their\");\n\t\tSystem.out.println(\"package name).\");\n\t\tSystem.out.println(\"\");\n\t\tSystem.out.println(\"The EJB home interface, remote interface, and implementation\");\n\t\tSystem.out.println(\"class must be found in the destination directory.  In\");\n\t\tSystem.out.println(\"addition, the destination will look for the stubs and skeletons\");\n\t\tSystem.out.println(\"in the destination directory to ensure they are up to date.\");\n\t}\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"N"},{"authorDate":"2014-07-20 15:17:46","commitOrder":32,"curCode":"    private static void printUsage() {\n        System.out.println(\"ant [options] [target [target2 [target3] ...]]\");\n        System.out.println(\"Options: \");\n        System.out.println(\"  -help, -h              print this message and exit\");\n        System.out.println(\"  -projecthelp, -p       print project help information and exit\");\n        System.out.println(\"  -version               print the version information and exit\");\n        System.out.println(\"  -diagnostics           print information that might be helpful to\");\n        System.out.println(\"                         diagnose or report problems and exit\");\n        System.out.println(\"  -quiet, -q             be extra quiet\");\n        System.out.println(\"  -silent, -S            print nothing but task outputs and build failures\");\n        System.out.println(\"  -verbose, -v           be extra verbose\");\n        System.out.println(\"  -debug, -d             print debugging information\");\n        System.out.println(\"  -emacs, -e             produce logging information without adornments\");\n        System.out.println(\"  -lib <path>            specifies a path to search for jars and classes\");\n        System.out.println(\"  -logfile <file>        use given file for log\");\n        System.out.println(\"    -l     <file>                ''\");\n        System.out.println(\"  -logger <classname>    the class which is to perform logging\");\n        System.out.println(\"  -listener <classname>  add an instance of class as a project listener\");\n        System.out.println(\"  -noinput               do not allow interactive input\");\n        System.out.println(\"  -buildfile <file>      use given buildfile\");\n        System.out.println(\"    -file    <file>              ''\");\n        System.out.println(\"    -f       <file>              ''\");\n        System.out.println(\"  -D<property>=<value>   use value for given property\");\n        System.out.println(\"  -keep-going, -k        execute all targets that do not depend\");\n        System.out.println(\"                         on failed target(s)\");\n        System.out.println(\"  -propertyfile <name>   load all properties from file with -D\");\n        System.out.println(\"                         properties taking precedence\");\n        System.out.println(\"  -inputhandler <class>  the class which will handle input requests\");\n        System.out.println(\"  -find <file>           (s)earch for buildfile towards the root of\");\n        System.out.println(\"    -s  <file>           the filesystem and use it\");\n        System.out.println(\"  -nice  number          A niceness value for the main thread:\"\n                + \"                         1 (lowest) to 10 (highest); 5 is the default\");\n        System.out.println(\"  -nouserlib             Run ant without using the jar files from\"\n                + \"                         ${user.home}/.ant/lib\");\n        System.out.println(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(\"  -autoproxy             Java1.5+: use the OS proxy settings\");\n        System.out.println(\"  -main <class>          override Ant's normal entry point\");\n        for (final ArgumentProcessor processor : ArgumentProcessorRegistry.getInstance().getProcessors()) {\n            processor.printUsage(System.out);\n        }\n    }\n","date":"2014-07-21 12:56:27","endLine":1049,"groupId":"5892","id":42,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a9/c23a53a7f7d9a2b04e8ed1f9b03550071c6f5c.src","preCode":"    private static void printUsage() {\n        System.out.println(\"ant [options] [target [target2 [target3] ...]]\");\n        System.out.println(\"Options: \");\n        System.out.println(\"  -help, -h              print this message\");\n        System.out.println(\"  -projecthelp, -p       print project help information\");\n        System.out.println(\"  -version               print the version information and exit\");\n        System.out.println(\"  -diagnostics           print information that might be helpful to\");\n        System.out.println(\"                         diagnose or report problems.\");\n        System.out.println(\"  -quiet, -q             be extra quiet\");\n        System.out.println(\"  -silent, -S            print nothing but task outputs and build failures\");\n        System.out.println(\"  -verbose, -v           be extra verbose\");\n        System.out.println(\"  -debug, -d             print debugging information\");\n        System.out.println(\"  -emacs, -e             produce logging information without adornments\");\n        System.out.println(\"  -lib <path>            specifies a path to search for jars and classes\");\n        System.out.println(\"  -logfile <file>        use given file for log\");\n        System.out.println(\"    -l     <file>                ''\");\n        System.out.println(\"  -logger <classname>    the class which is to perform logging\");\n        System.out.println(\"  -listener <classname>  add an instance of class as a project listener\");\n        System.out.println(\"  -noinput               do not allow interactive input\");\n        System.out.println(\"  -buildfile <file>      use given buildfile\");\n        System.out.println(\"    -file    <file>              ''\");\n        System.out.println(\"    -f       <file>              ''\");\n        System.out.println(\"  -D<property>=<value>   use value for given property\");\n        System.out.println(\"  -keep-going, -k        execute all targets that do not depend\");\n        System.out.println(\"                         on failed target(s)\");\n        System.out.println(\"  -propertyfile <name>   load all properties from file with -D\");\n        System.out.println(\"                         properties taking precedence\");\n        System.out.println(\"  -inputhandler <class>  the class which will handle input requests\");\n        System.out.println(\"  -find <file>           (s)earch for buildfile towards the root of\");\n        System.out.println(\"    -s  <file>           the filesystem and use it\");\n        System.out.println(\"  -nice  number          A niceness value for the main thread:\"\n                + \"                         1 (lowest) to 10 (highest); 5 is the default\");\n        System.out.println(\"  -nouserlib             Run ant without using the jar files from\"\n                + \"                         ${user.home}/.ant/lib\");\n        System.out.println(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(\"  -autoproxy             Java1.5+: use the OS proxy settings\");\n        System.out.println(\"  -main <class>          override Ant's normal entry point\");\n        for (final ArgumentProcessor processor : ArgumentProcessorRegistry.getInstance().getProcessors()) {\n            processor.printUsage(System.out);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1009,"status":"M"}],"commitId":"47a3b5144e994be76379c2fef3acd1c9ab15e059","commitMessage":"@@@PR 56747 Document which options exit in help output.  submitted by Ville Skytt?\n","date":"2014-07-21 12:56:27","modifiedFileCount":"1","status":"M","submitter":"Ville Skytt?"},{"authorTime":"2014-07-20 15:17:46","codes":[{"authorDate":"2018-04-02 02:07:39","commitOrder":33,"curCode":"    private static void usage() {\n        System.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n        System.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n        System.out.println();\n        System.out.println(\"Where OPTIONS are:\");\n        System.out.println(\"  -debug -- for additional debugging output\");\n        System.out.println(\"  -keepsource -- to retain Java source files generated\");\n        System.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n        System.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n        System.out.println();\n        System.out.println(\"If a classpath is not specified, the system classpath\");\n        System.out.println(\"will be used.  If a destination directory is not specified,\");\n        System.out.println(\"the current working directory will be used (classes will\");\n        System.out.println(\"still be placed in subfolders which correspond to their\");\n        System.out.println(\"package name).\");\n        System.out.println();\n        System.out.println(\"The EJB home interface, remote interface, and implementation\");\n        System.out.println(\"class must be found in the destination directory.  In\");\n        System.out.println(\"addition, the destination will look for the stubs and skeletons\");\n        System.out.println(\"in the destination directory to ensure they are up to date.\");\n    }\n","date":"2018-04-02 02:07:39","endLine":350,"groupId":"9802","id":43,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/2e/26d85740b015f04eedab0589c57720c9e882c5.src","preCode":"    private static void usage() {\n        System.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n        System.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n        System.out.println(\"\");\n        System.out.println(\"Where OPTIONS are:\");\n        System.out.println(\"  -debug -- for additional debugging output\");\n        System.out.println(\"  -keepsource -- to retain Java source files generated\");\n        System.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n        System.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n        System.out.println(\"\");\n        System.out.println(\"If a classpath is not specified, the system classpath\");\n        System.out.println(\"will be used.  If a destination directory is not specified,\");\n        System.out.println(\"the current working directory will be used (classes will\");\n        System.out.println(\"still be placed in subfolders which correspond to their\");\n        System.out.println(\"package name).\");\n        System.out.println(\"\");\n        System.out.println(\"The EJB home interface, remote interface, and implementation\");\n        System.out.println(\"class must be found in the destination directory.  In\");\n        System.out.println(\"addition, the destination will look for the stubs and skeletons\");\n        System.out.println(\"in the destination directory to ensure they are up to date.\");\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":330,"status":"M"},{"authorDate":"2014-07-20 15:17:46","commitOrder":33,"curCode":"    private static void printUsage() {\n        System.out.println(\"ant [options] [target [target2 [target3] ...]]\");\n        System.out.println(\"Options: \");\n        System.out.println(\"  -help, -h              print this message and exit\");\n        System.out.println(\"  -projecthelp, -p       print project help information and exit\");\n        System.out.println(\"  -version               print the version information and exit\");\n        System.out.println(\"  -diagnostics           print information that might be helpful to\");\n        System.out.println(\"                         diagnose or report problems and exit\");\n        System.out.println(\"  -quiet, -q             be extra quiet\");\n        System.out.println(\"  -silent, -S            print nothing but task outputs and build failures\");\n        System.out.println(\"  -verbose, -v           be extra verbose\");\n        System.out.println(\"  -debug, -d             print debugging information\");\n        System.out.println(\"  -emacs, -e             produce logging information without adornments\");\n        System.out.println(\"  -lib <path>            specifies a path to search for jars and classes\");\n        System.out.println(\"  -logfile <file>        use given file for log\");\n        System.out.println(\"    -l     <file>                ''\");\n        System.out.println(\"  -logger <classname>    the class which is to perform logging\");\n        System.out.println(\"  -listener <classname>  add an instance of class as a project listener\");\n        System.out.println(\"  -noinput               do not allow interactive input\");\n        System.out.println(\"  -buildfile <file>      use given buildfile\");\n        System.out.println(\"    -file    <file>              ''\");\n        System.out.println(\"    -f       <file>              ''\");\n        System.out.println(\"  -D<property>=<value>   use value for given property\");\n        System.out.println(\"  -keep-going, -k        execute all targets that do not depend\");\n        System.out.println(\"                         on failed target(s)\");\n        System.out.println(\"  -propertyfile <name>   load all properties from file with -D\");\n        System.out.println(\"                         properties taking precedence\");\n        System.out.println(\"  -inputhandler <class>  the class which will handle input requests\");\n        System.out.println(\"  -find <file>           (s)earch for buildfile towards the root of\");\n        System.out.println(\"    -s  <file>           the filesystem and use it\");\n        System.out.println(\"  -nice  number          A niceness value for the main thread:\"\n                + \"                         1 (lowest) to 10 (highest); 5 is the default\");\n        System.out.println(\"  -nouserlib             Run ant without using the jar files from\"\n                + \"                         ${user.home}/.ant/lib\");\n        System.out.println(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(\"  -autoproxy             Java1.5+: use the OS proxy settings\");\n        System.out.println(\"  -main <class>          override Ant's normal entry point\");\n        for (final ArgumentProcessor processor : ArgumentProcessorRegistry.getInstance().getProcessors()) {\n            processor.printUsage(System.out);\n        }\n    }\n","date":"2014-07-21 12:56:27","endLine":1049,"groupId":"5892","id":44,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a9/c23a53a7f7d9a2b04e8ed1f9b03550071c6f5c.src","preCode":"    private static void printUsage() {\n        System.out.println(\"ant [options] [target [target2 [target3] ...]]\");\n        System.out.println(\"Options: \");\n        System.out.println(\"  -help, -h              print this message and exit\");\n        System.out.println(\"  -projecthelp, -p       print project help information and exit\");\n        System.out.println(\"  -version               print the version information and exit\");\n        System.out.println(\"  -diagnostics           print information that might be helpful to\");\n        System.out.println(\"                         diagnose or report problems and exit\");\n        System.out.println(\"  -quiet, -q             be extra quiet\");\n        System.out.println(\"  -silent, -S            print nothing but task outputs and build failures\");\n        System.out.println(\"  -verbose, -v           be extra verbose\");\n        System.out.println(\"  -debug, -d             print debugging information\");\n        System.out.println(\"  -emacs, -e             produce logging information without adornments\");\n        System.out.println(\"  -lib <path>            specifies a path to search for jars and classes\");\n        System.out.println(\"  -logfile <file>        use given file for log\");\n        System.out.println(\"    -l     <file>                ''\");\n        System.out.println(\"  -logger <classname>    the class which is to perform logging\");\n        System.out.println(\"  -listener <classname>  add an instance of class as a project listener\");\n        System.out.println(\"  -noinput               do not allow interactive input\");\n        System.out.println(\"  -buildfile <file>      use given buildfile\");\n        System.out.println(\"    -file    <file>              ''\");\n        System.out.println(\"    -f       <file>              ''\");\n        System.out.println(\"  -D<property>=<value>   use value for given property\");\n        System.out.println(\"  -keep-going, -k        execute all targets that do not depend\");\n        System.out.println(\"                         on failed target(s)\");\n        System.out.println(\"  -propertyfile <name>   load all properties from file with -D\");\n        System.out.println(\"                         properties taking precedence\");\n        System.out.println(\"  -inputhandler <class>  the class which will handle input requests\");\n        System.out.println(\"  -find <file>           (s)earch for buildfile towards the root of\");\n        System.out.println(\"    -s  <file>           the filesystem and use it\");\n        System.out.println(\"  -nice  number          A niceness value for the main thread:\"\n                + \"                         1 (lowest) to 10 (highest); 5 is the default\");\n        System.out.println(\"  -nouserlib             Run ant without using the jar files from\"\n                + \"                         ${user.home}/.ant/lib\");\n        System.out.println(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(\"  -autoproxy             Java1.5+: use the OS proxy settings\");\n        System.out.println(\"  -main <class>          override Ant's normal entry point\");\n        for (final ArgumentProcessor processor : ArgumentProcessorRegistry.getInstance().getProcessors()) {\n            processor.printUsage(System.out);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1009,"status":"N"}],"commitId":"95495d57aa5cca8fc350ebfb10f6d390f40290cb","commitMessage":"@@@Remove extraneous casts and (un)boxing.  tersify logic","date":"2018-04-02 02:07:39","modifiedFileCount":"178","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-09-20 03:23:17","codes":[{"authorDate":"2018-04-02 02:07:39","commitOrder":34,"curCode":"    private static void usage() {\n        System.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n        System.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n        System.out.println();\n        System.out.println(\"Where OPTIONS are:\");\n        System.out.println(\"  -debug -- for additional debugging output\");\n        System.out.println(\"  -keepsource -- to retain Java source files generated\");\n        System.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n        System.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n        System.out.println();\n        System.out.println(\"If a classpath is not specified, the system classpath\");\n        System.out.println(\"will be used.  If a destination directory is not specified,\");\n        System.out.println(\"the current working directory will be used (classes will\");\n        System.out.println(\"still be placed in subfolders which correspond to their\");\n        System.out.println(\"package name).\");\n        System.out.println();\n        System.out.println(\"The EJB home interface, remote interface, and implementation\");\n        System.out.println(\"class must be found in the destination directory.  In\");\n        System.out.println(\"addition, the destination will look for the stubs and skeletons\");\n        System.out.println(\"in the destination directory to ensure they are up to date.\");\n    }\n","date":"2018-04-02 02:07:39","endLine":350,"groupId":"10430","id":45,"instanceNumber":1,"isCurCommit":0,"methodName":"usage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/2e/26d85740b015f04eedab0589c57720c9e882c5.src","preCode":"    private static void usage() {\n        System.out.println(\"java org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc \\\\\");\n        System.out.println(\"  [OPTIONS] [EJB 1.1 descriptor] [iAS EJB descriptor]\");\n        System.out.println();\n        System.out.println(\"Where OPTIONS are:\");\n        System.out.println(\"  -debug -- for additional debugging output\");\n        System.out.println(\"  -keepsource -- to retain Java source files generated\");\n        System.out.println(\"  -classpath [classpath] -- classpath used for compilation\");\n        System.out.println(\"  -d [destination directory] -- directory for compiled classes\");\n        System.out.println();\n        System.out.println(\"If a classpath is not specified, the system classpath\");\n        System.out.println(\"will be used.  If a destination directory is not specified,\");\n        System.out.println(\"the current working directory will be used (classes will\");\n        System.out.println(\"still be placed in subfolders which correspond to their\");\n        System.out.println(\"package name).\");\n        System.out.println();\n        System.out.println(\"The EJB home interface, remote interface, and implementation\");\n        System.out.println(\"class must be found in the destination directory.  In\");\n        System.out.println(\"addition, the destination will look for the stubs and skeletons\");\n        System.out.println(\"in the destination directory to ensure they are up to date.\");\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":330,"status":"N"},{"authorDate":"2018-09-20 03:23:17","commitOrder":34,"curCode":"    private static void printUsage() {\n        System.out.println(\"ant [options] [target [target2 [target3] ...]]\");\n        System.out.println(\"Options: \");\n        System.out.println(\"  -help, -h              print this message and exit\");\n        System.out.println(\"  -projecthelp, -p       print project help information and exit\");\n        System.out.println(\"  -version               print the version information and exit\");\n        System.out.println(\"  -diagnostics           print information that might be helpful to\");\n        System.out.println(\"                         diagnose or report problems and exit\");\n        System.out.println(\"  -quiet, -q             be extra quiet\");\n        System.out.println(\"  -silent, -S            print nothing but task outputs and build failures\");\n        System.out.println(\"  -verbose, -v           be extra verbose\");\n        System.out.println(\"  -debug, -d             print debugging information\");\n        System.out.println(\"  -emacs, -e             produce logging information without adornments\");\n        System.out.println(\"  -lib <path>            specifies a path to search for jars and classes\");\n        System.out.println(\"  -logfile <file>        use given file for log\");\n        System.out.println(\"    -l     <file>                ''\");\n        System.out.println(\"  -logger <classname>    the class which is to perform logging\");\n        System.out.println(\"  -listener <classname>  add an instance of class as a project listener\");\n        System.out.println(\"  -noinput               do not allow interactive input\");\n        System.out.println(\"  -buildfile <file>      use given buildfile\");\n        System.out.println(\"    -file    <file>              ''\");\n        System.out.println(\"    -f       <file>              ''\");\n        System.out.println(\"  -D<property>=<value>   use value for given property\");\n        System.out.println(\"  -keep-going, -k        execute all targets that do not depend\");\n        System.out.println(\"                         on failed target(s)\");\n        System.out.println(\"  -propertyfile <name>   load all properties from file with -D\");\n        System.out.println(\"                         properties taking precedence\");\n        System.out.println(\"  -inputhandler <class>  the class which will handle input requests\");\n        System.out.println(\"  -find <file>           (s)earch for buildfile towards the root of\");\n        System.out.println(\"    -s  <file>           the filesystem and use it\");\n        System.out.println(\"  -nice  number          A niceness value for the main thread:\");\n        System.out.println(\"                         1 (lowest) to 10 (highest); 5 is the default\");\n        System.out.println(\"  -nouserlib             Run ant without using the jar files from\");\n        System.out.println(\"                         ${user.home}/.ant/lib\");\n        System.out.println(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(\"  -autoproxy             Java1.5+: use the OS proxy settings\");\n        System.out.println(\"  -main <class>          override Ant's normal entry point\");\n        for (final ArgumentProcessor processor : ArgumentProcessorRegistry.getInstance().getProcessors()) {\n            processor.printUsage(System.out);\n        }\n    }\n","date":"2018-09-20 03:23:17","endLine":1029,"groupId":"10430","id":46,"instanceNumber":2,"isCurCommit":0,"methodName":"printUsage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/4e/078e0ab1c0a4e4dd8c89d3eaa9691ebab3554b.src","preCode":"    private static void printUsage() {\n        System.out.println(\"ant [options] [target [target2 [target3] ...]]\");\n        System.out.println(\"Options: \");\n        System.out.println(\"  -help, -h              print this message and exit\");\n        System.out.println(\"  -projecthelp, -p       print project help information and exit\");\n        System.out.println(\"  -version               print the version information and exit\");\n        System.out.println(\"  -diagnostics           print information that might be helpful to\");\n        System.out.println(\"                         diagnose or report problems and exit\");\n        System.out.println(\"  -quiet, -q             be extra quiet\");\n        System.out.println(\"  -silent, -S            print nothing but task outputs and build failures\");\n        System.out.println(\"  -verbose, -v           be extra verbose\");\n        System.out.println(\"  -debug, -d             print debugging information\");\n        System.out.println(\"  -emacs, -e             produce logging information without adornments\");\n        System.out.println(\"  -lib <path>            specifies a path to search for jars and classes\");\n        System.out.println(\"  -logfile <file>        use given file for log\");\n        System.out.println(\"    -l     <file>                ''\");\n        System.out.println(\"  -logger <classname>    the class which is to perform logging\");\n        System.out.println(\"  -listener <classname>  add an instance of class as a project listener\");\n        System.out.println(\"  -noinput               do not allow interactive input\");\n        System.out.println(\"  -buildfile <file>      use given buildfile\");\n        System.out.println(\"    -file    <file>              ''\");\n        System.out.println(\"    -f       <file>              ''\");\n        System.out.println(\"  -D<property>=<value>   use value for given property\");\n        System.out.println(\"  -keep-going, -k        execute all targets that do not depend\");\n        System.out.println(\"                         on failed target(s)\");\n        System.out.println(\"  -propertyfile <name>   load all properties from file with -D\");\n        System.out.println(\"                         properties taking precedence\");\n        System.out.println(\"  -inputhandler <class>  the class which will handle input requests\");\n        System.out.println(\"  -find <file>           (s)earch for buildfile towards the root of\");\n        System.out.println(\"    -s  <file>           the filesystem and use it\");\n        System.out.println(\"  -nice  number          A niceness value for the main thread:\"\n                + \"                         1 (lowest) to 10 (highest); 5 is the default\");\n        System.out.println(\"  -nouserlib             Run ant without using the jar files from\"\n                + \"                         ${user.home}/.ant/lib\");\n        System.out.println(\"  -noclasspath           Run ant without using CLASSPATH\");\n        System.out.println(\"  -autoproxy             Java1.5+: use the OS proxy settings\");\n        System.out.println(\"  -main <class>          override Ant's normal entry point\");\n        for (final ArgumentProcessor processor : ArgumentProcessorRegistry.getInstance().getProcessors()) {\n            processor.printUsage(System.out);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/Main.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":989,"status":"M"}],"commitId":"ec5b55d52c671a196bc92ac74f1f2bfc5c53e9f8","commitMessage":"@@@Merge 1.9.x branch into master\n","date":"2018-09-20 03:23:17","modifiedFileCount":"1","status":"M","submitter":"Maarten Coene"}]
