[{"authorTime":"2009-08-27 18:14:07","codes":[{"authorDate":"2006-07-04 04:21:44","commitOrder":3,"curCode":"    private static JUnitTaskMirror createMirror(JUnitTask task, ClassLoader loader) {\n        try {\n            loader.loadClass(\"junit.framework.Test\"); \r\n        } catch (ClassNotFoundException e) {\n            throw new BuildException(\n                    \"The <classpath> for <junit> must include junit.jar \"\n                    + \"if not in Ant's own classpath\",\n                    e, task.getLocation());\n        }\n        try {\n            Class c = loader.loadClass(JUnitTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\", task.getLocation());\n            }\n            Constructor cons = c.getConstructor(new Class[] {JUnitTask.class});\n            return (JUnitTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","date":"2006-07-04 04:21:44","endLine":661,"groupId":"7984","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createMirror","params":"(JUnitTasktask@ClassLoaderloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/14/5f4af4171c9e7814ede39e0252e06bbae96c4e.src","preCode":"    private static JUnitTaskMirror createMirror(JUnitTask task, ClassLoader loader) {\n        try {\n            loader.loadClass(\"junit.framework.Test\"); \r\n        } catch (ClassNotFoundException e) {\n            throw new BuildException(\n                    \"The <classpath> for <junit> must include junit.jar \"\n                    + \"if not in Ant's own classpath\",\n                    e, task.getLocation());\n        }\n        try {\n            Class c = loader.loadClass(JUnitTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\", task.getLocation());\n            }\n            Constructor cons = c.getConstructor(new Class[] {JUnitTask.class});\n            return (JUnitTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":642,"status":"NB"},{"authorDate":"2009-08-27 18:14:07","commitOrder":3,"curCode":"    private static FTPTaskMirror createMirror(FTPTask task,\n                                              ClassLoader loader) {\n        try {\n            loader.loadClass(\"org.apache.commons.net.ftp.FTP\"); \r\n        } catch (ClassNotFoundException e) {\n            throw new BuildException(\"The <classpath> for <ftp> must include\"\n                                     + \" commons-net.jar if not in Ant's own \"\n                                     + \" classpath\", e, task.getLocation());\n        }\n        try {\n            Class c = loader.loadClass(FTPTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\",\n                                         task.getLocation());\n            }\n            Constructor cons = c.getConstructor(new Class[] {FTPTask.class});\n            return (FTPTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","date":"2009-08-27 18:14:07","endLine":834,"groupId":"7984","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createMirror","params":"(FTPTasktask@ClassLoaderloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/42/23fd9126e1ce135661ffb2c1867e01a91fb3be.src","preCode":"    private static FTPTaskMirror createMirror(FTPTask task,\n                                              ClassLoader loader) {\n        try {\n            loader.loadClass(\"org.apache.commons.net.ftp.FTP\"); \r\n        } catch (ClassNotFoundException e) {\n            throw new BuildException(\"The <classpath> for <ftp> must include\"\n                                     + \" commons-net.jar if not in Ant's own \"\n                                     + \" classpath\", e, task.getLocation());\n        }\n        try {\n            Class c = loader.loadClass(FTPTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\",\n                                         task.getLocation());\n            }\n            Constructor cons = c.getConstructor(new Class[] {FTPTask.class});\n            return (FTPTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":814,"status":"B"}],"commitId":"d72413184949c04015b452cf9cdf36bf2107061f","commitMessage":"@@@refactored <ftp> so commons-net may be loaded via a separate classloader.  Based on patch by Greg Roodt in PR 45860.  Not really tested.  yet.  therefore I haven't changed defaults.properties so far\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@808350 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-08-27 18:14:07","modifiedFileCount":"3","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2009-08-27 18:14:07","codes":[{"authorDate":"2014-07-04 19:56:55","commitOrder":4,"curCode":"    private static JUnitTaskMirror createMirror(final JUnitTask task, final ClassLoader loader) {\n        try {\n            loader.loadClass(\"junit.framework.Test\"); \r\n        } catch (final ClassNotFoundException e) {\n            throw new BuildException(\n                    \"The <classpath> for <junit> must include junit.jar \"\n                    + \"if not in Ant's own classpath\",\n                    e, task.getLocation());\n        }\n        try {\n            final Class c = loader.loadClass(JUnitTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\", task.getLocation());\n            }\n            final Constructor cons = c.getConstructor(new Class[] {JUnitTask.class});\n            return (JUnitTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (final Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","date":"2014-07-04 19:56:55","endLine":766,"groupId":"7984","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createMirror","params":"(finalJUnitTasktask@finalClassLoaderloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/ce6327d8a370b87c6a81be137bdf766f426dc8.src","preCode":"    private static JUnitTaskMirror createMirror(JUnitTask task, ClassLoader loader) {\n        try {\n            loader.loadClass(\"junit.framework.Test\"); \r\n        } catch (ClassNotFoundException e) {\n            throw new BuildException(\n                    \"The <classpath> for <junit> must include junit.jar \"\n                    + \"if not in Ant's own classpath\",\n                    e, task.getLocation());\n        }\n        try {\n            Class c = loader.loadClass(JUnitTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\", task.getLocation());\n            }\n            Constructor cons = c.getConstructor(new Class[] {JUnitTask.class});\n            return (JUnitTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":747,"status":"M"},{"authorDate":"2009-08-27 18:14:07","commitOrder":4,"curCode":"    private static FTPTaskMirror createMirror(FTPTask task,\n                                              ClassLoader loader) {\n        try {\n            loader.loadClass(\"org.apache.commons.net.ftp.FTP\"); \r\n        } catch (ClassNotFoundException e) {\n            throw new BuildException(\"The <classpath> for <ftp> must include\"\n                                     + \" commons-net.jar if not in Ant's own \"\n                                     + \" classpath\", e, task.getLocation());\n        }\n        try {\n            Class c = loader.loadClass(FTPTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\",\n                                         task.getLocation());\n            }\n            Constructor cons = c.getConstructor(new Class[] {FTPTask.class});\n            return (FTPTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","date":"2009-08-27 18:14:07","endLine":834,"groupId":"7984","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createMirror","params":"(FTPTasktask@ClassLoaderloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/42/23fd9126e1ce135661ffb2c1867e01a91fb3be.src","preCode":"    private static FTPTaskMirror createMirror(FTPTask task,\n                                              ClassLoader loader) {\n        try {\n            loader.loadClass(\"org.apache.commons.net.ftp.FTP\"); \r\n        } catch (ClassNotFoundException e) {\n            throw new BuildException(\"The <classpath> for <ftp> must include\"\n                                     + \" commons-net.jar if not in Ant's own \"\n                                     + \" classpath\", e, task.getLocation());\n        }\n        try {\n            Class c = loader.loadClass(FTPTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\",\n                                         task.getLocation());\n            }\n            Constructor cons = c.getConstructor(new Class[] {FTPTask.class});\n            return (FTPTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":814,"status":"N"}],"commitId":"13f6d98c9de38c6c53d4d855157c3fad620c3303","commitMessage":"@@@make it compile under Java5 (1.5.0_22-b03)","date":"2014-07-04 19:56:55","modifiedFileCount":"37","status":"M","submitter":"Jan Mat?rne"},{"authorTime":"2009-08-27 18:14:07","codes":[{"authorDate":"2016-07-14 02:28:32","commitOrder":5,"curCode":"    private static JUnitTaskMirror createMirror(final JUnitTask task, final ClassLoader loader) {\n        try {\n            loader.loadClass(\"junit.framework.Test\"); \r\n        } catch (final ClassNotFoundException e) {\n            throw new BuildException(\n                    \"The <classpath> or <modulepath> for <junit> must include junit.jar \"\n                    + \"if not in Ant's own classpath\",\n                    e, task.getLocation());\n        }\n        try {\n            final Class c = loader.loadClass(JUnitTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\", task.getLocation());\n            }\n            final Constructor cons = c.getConstructor(new Class[] {JUnitTask.class});\n            return (JUnitTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (final Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","date":"2016-07-14 02:28:32","endLine":787,"groupId":"7984","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createMirror","params":"(finalJUnitTasktask@finalClassLoaderloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/5a/888054f25b64e1d015c9668907b9c6692df35b.src","preCode":"    private static JUnitTaskMirror createMirror(final JUnitTask task, final ClassLoader loader) {\n        try {\n            loader.loadClass(\"junit.framework.Test\"); \r\n        } catch (final ClassNotFoundException e) {\n            throw new BuildException(\n                    \"The <classpath> for <junit> must include junit.jar \"\n                    + \"if not in Ant's own classpath\",\n                    e, task.getLocation());\n        }\n        try {\n            final Class c = loader.loadClass(JUnitTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\", task.getLocation());\n            }\n            final Constructor cons = c.getConstructor(new Class[] {JUnitTask.class});\n            return (JUnitTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (final Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":768,"status":"M"},{"authorDate":"2009-08-27 18:14:07","commitOrder":5,"curCode":"    private static FTPTaskMirror createMirror(FTPTask task,\n                                              ClassLoader loader) {\n        try {\n            loader.loadClass(\"org.apache.commons.net.ftp.FTP\"); \r\n        } catch (ClassNotFoundException e) {\n            throw new BuildException(\"The <classpath> for <ftp> must include\"\n                                     + \" commons-net.jar if not in Ant's own \"\n                                     + \" classpath\", e, task.getLocation());\n        }\n        try {\n            Class c = loader.loadClass(FTPTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\",\n                                         task.getLocation());\n            }\n            Constructor cons = c.getConstructor(new Class[] {FTPTask.class});\n            return (FTPTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","date":"2009-08-27 18:14:07","endLine":834,"groupId":"7984","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createMirror","params":"(FTPTasktask@ClassLoaderloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/42/23fd9126e1ce135661ffb2c1867e01a91fb3be.src","preCode":"    private static FTPTaskMirror createMirror(FTPTask task,\n                                              ClassLoader loader) {\n        try {\n            loader.loadClass(\"org.apache.commons.net.ftp.FTP\"); \r\n        } catch (ClassNotFoundException e) {\n            throw new BuildException(\"The <classpath> for <ftp> must include\"\n                                     + \" commons-net.jar if not in Ant's own \"\n                                     + \" classpath\", e, task.getLocation());\n        }\n        try {\n            Class c = loader.loadClass(FTPTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\",\n                                         task.getLocation());\n            }\n            Constructor cons = c.getConstructor(new Class[] {FTPTask.class});\n            return (FTPTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":814,"status":"N"}],"commitId":"5c85c44601c38541572b756406edbc8d08d11fe0","commitMessage":"@@@JDK9 modules support for JUnit by Tom?? Zezula\n\nthis is the combined patch or #18 which couldn't be applied via `git am`\n","date":"2016-07-14 02:28:32","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":6,"curCode":"    private static JUnitTaskMirror createMirror(final JUnitTask task, final ClassLoader loader) {\n        try {\n            loader.loadClass(\"junit.framework.Test\"); \r\n        } catch (final ClassNotFoundException e) {\n            throw new BuildException(\n                    \"The <classpath> or <modulepath> for <junit> must include junit.jar \"\n                    + \"if not in Ant's own classpath\",\n                    e, task.getLocation());\n        }\n        try {\n            final Class<? extends JUnitTaskMirror> c = loader.loadClass(JUnitTaskMirror.class.getName() + \"Impl\").asSubclass(JUnitTaskMirror.class);\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\", task.getLocation());\n            }\n            final Constructor<? extends JUnitTaskMirror> cons = c.getConstructor(JUnitTask.class);\n            return cons.newInstance(task);\n        } catch (final Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":788,"groupId":"10397","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createMirror","params":"(finalJUnitTasktask@finalClassLoaderloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e3/2403c4b573b7510dffe9040af1008e886c4826.src","preCode":"    private static JUnitTaskMirror createMirror(final JUnitTask task, final ClassLoader loader) {\n        try {\n            loader.loadClass(\"junit.framework.Test\"); \r\n        } catch (final ClassNotFoundException e) {\n            throw new BuildException(\n                    \"The <classpath> or <modulepath> for <junit> must include junit.jar \"\n                    + \"if not in Ant's own classpath\",\n                    e, task.getLocation());\n        }\n        try {\n            final Class c = loader.loadClass(JUnitTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\", task.getLocation());\n            }\n            final Constructor cons = c.getConstructor(new Class[] {JUnitTask.class});\n            return (JUnitTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (final Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":769,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":6,"curCode":"    private static FTPTaskMirror createMirror(FTPTask task,\n                                              ClassLoader loader) {\n        try {\n            loader.loadClass(\"org.apache.commons.net.ftp.FTP\"); \r\n        } catch (ClassNotFoundException e) {\n            throw new BuildException(\n                \"The <classpath> for <ftp> must include commons-net.jar if not in Ant's own classpath\",\n                e, task.getLocation());\n        }\n        try {\n            Class<? extends FTPTaskMirror> c =\n                loader.loadClass(FTPTaskMirror.class.getName() + \"Impl\")\n                    .asSubclass(FTPTaskMirror.class);\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\",\n                    task.getLocation());\n            }\n            Constructor<? extends FTPTaskMirror> cons =\n                c.getConstructor(FTPTask.class);\n            return cons.newInstance(task);\n        } catch (Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":847,"groupId":"10397","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createMirror","params":"(FTPTasktask@ClassLoaderloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/2e/5228d9b205c65d6fa6324bf45bc955a592bae4.src","preCode":"    private static FTPTaskMirror createMirror(FTPTask task,\n                                              ClassLoader loader) {\n        try {\n            loader.loadClass(\"org.apache.commons.net.ftp.FTP\"); \r\n        } catch (ClassNotFoundException e) {\n            throw new BuildException(\"The <classpath> for <ftp> must include\"\n                                     + \" commons-net.jar if not in Ant's own \"\n                                     + \" classpath\", e, task.getLocation());\n        }\n        try {\n            Class c = loader.loadClass(FTPTaskMirror.class.getName() + \"Impl\");\n            if (c.getClassLoader() != loader) {\n                throw new BuildException(\"Overdelegating loader\",\n                                         task.getLocation());\n            }\n            Constructor cons = c.getConstructor(new Class[] {FTPTask.class});\n            return (FTPTaskMirror) cons.newInstance(new Object[] {task});\n        } catch (Exception e) {\n            throw new BuildException(e, task.getLocation());\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":824,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"}]
