[{"authorTime":"2009-08-27 18:14:07","codes":[{"authorDate":"2009-08-27 18:14:07","commitOrder":1,"curCode":"    protected void sendFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        InputStream instream = null;\n\n        try {\n            \r\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + file.getAbsolutePath());\n            }\n\n            instream = new BufferedInputStream(new FileInputStream(file));\n\n            createParents(ftp, filename);\n\n            ftp.storeFile(resolveFile(filename), instream);\n\n            boolean success = FTPReply.isPositiveCompletion(ftp.getReplyCode());\n\n            if (!success) {\n                String s = \"could not put file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                \r\n                if (task.getChmod() != null) {\n                    doSiteCommand(ftp, \"chmod \" + task.getChmod() + \" \"\n                                  + resolveFile(filename));\n                }\n                task.log(\"File \" + file.getAbsolutePath() + \" copied to \" + task.getServer(),\n                         Project.MSG_VERBOSE);\n                transferred++;\n            }\n        } finally {\n            if (instream != null) {\n                try {\n                    instream.close();\n                } catch (IOException ex) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2009-08-27 18:14:07","endLine":1557,"groupId":"4382","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFile","params":"(FTPClientftp@Stringdir@Stringfilename)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3a/490e4782ed37f2c31e237802fb6132e360acca.src","preCode":"    protected void sendFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        InputStream instream = null;\n\n        try {\n            \r\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + file.getAbsolutePath());\n            }\n\n            instream = new BufferedInputStream(new FileInputStream(file));\n\n            createParents(ftp, filename);\n\n            ftp.storeFile(resolveFile(filename), instream);\n\n            boolean success = FTPReply.isPositiveCompletion(ftp.getReplyCode());\n\n            if (!success) {\n                String s = \"could not put file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                \r\n                if (task.getChmod() != null) {\n                    doSiteCommand(ftp, \"chmod \" + task.getChmod() + \" \"\n                                  + resolveFile(filename));\n                }\n                task.log(\"File \" + file.getAbsolutePath() + \" copied to \" + task.getServer(),\n                         Project.MSG_VERBOSE);\n                transferred++;\n            }\n        } finally {\n            if (instream != null) {\n                try {\n                    instream.close();\n                } catch (IOException ex) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1504,"status":"B"},{"authorDate":"2009-08-27 18:14:07","commitOrder":1,"curCode":"    protected void getFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        OutputStream outstream = null;\n        try {\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + filename + \" to \"\n                         + file.getAbsolutePath());\n            }\n\n            File pdir = file.getParentFile();\n\n            if (!pdir.exists()) {\n                pdir.mkdirs();\n            }\n            outstream = new BufferedOutputStream(new FileOutputStream(file));\n            ftp.retrieveFile(resolveFile(filename), outstream);\n\n            if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {\n                String s = \"could not get file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                task.log(\n                         \"File \" + file.getAbsolutePath() + \" copied from \"\n                         + task.getServer(), Project.MSG_VERBOSE);\n                transferred++;\n                if (task.isPreserveLastModified()) {\n                    outstream.close();\n                    outstream = null;\n                    FTPFile[] remote = ftp.listFiles(resolveFile(filename));\n                    if (remote.length > 0) {\n                        FILE_UTILS.setFileLastModified(file,\n                                                       remote[0].getTimestamp()\n                                                       .getTime().getTime());\n                    }\n                }\n            }\n        } finally {\n            if (outstream != null) {\n                try {\n                    outstream.close();\n                } catch (IOException ex) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2009-08-27 18:14:07","endLine":1695,"groupId":"7764","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getFile","params":"(FTPClientftp@Stringdir@Stringfilename)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3a/490e4782ed37f2c31e237802fb6132e360acca.src","preCode":"    protected void getFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        OutputStream outstream = null;\n        try {\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + filename + \" to \"\n                         + file.getAbsolutePath());\n            }\n\n            File pdir = file.getParentFile();\n\n            if (!pdir.exists()) {\n                pdir.mkdirs();\n            }\n            outstream = new BufferedOutputStream(new FileOutputStream(file));\n            ftp.retrieveFile(resolveFile(filename), outstream);\n\n            if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {\n                String s = \"could not get file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                task.log(\n                         \"File \" + file.getAbsolutePath() + \" copied from \"\n                         + task.getServer(), Project.MSG_VERBOSE);\n                transferred++;\n                if (task.isPreserveLastModified()) {\n                    outstream.close();\n                    outstream = null;\n                    FTPFile[] remote = ftp.listFiles(resolveFile(filename));\n                    if (remote.length > 0) {\n                        FILE_UTILS.setFileLastModified(file,\n                                                       remote[0].getTimestamp()\n                                                       .getTime().getTime());\n                    }\n                }\n            }\n        } finally {\n            if (outstream != null) {\n                try {\n                    outstream.close();\n                } catch (IOException ex) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1637,"status":"B"}],"commitId":"d72413184949c04015b452cf9cdf36bf2107061f","commitMessage":"@@@refactored <ftp> so commons-net may be loaded via a separate classloader.  Based on patch by Greg Roodt in PR 45860.  Not really tested.  yet.  therefore I haven't changed defaults.properties so far\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@808350 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-08-27 18:14:07","modifiedFileCount":"3","status":"B","submitter":"Stefan Bodewig"},{"authorTime":"2016-03-28 20:08:39","codes":[{"authorDate":"2016-03-28 20:08:39","commitOrder":2,"curCode":"    protected void sendFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        InputStream instream = null;\n\n        try {\n            \r\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + file.getAbsolutePath());\n            }\n\n            instream = new BufferedInputStream(new FileInputStream(file));\n\n            createParents(ftp, filename);\n\n            ftp.storeFile(resolveFile(filename), instream);\n\n            boolean success = FTPReply.isPositiveCompletion(ftp.getReplyCode());\n\n            if (!success) {\n                String s = \"could not put file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                \r\n                if (task.getChmod() != null) {\n                    doSiteCommand(ftp, \"chmod \" + task.getChmod() + \" \"\n                                  + resolveFile(filename));\n                }\n                task.log(\"File \" + file.getAbsolutePath() + \" copied to \" + task.getServer(),\n                         Project.MSG_VERBOSE);\n                transferred++;\n            }\n        } finally {\n            FileUtils.close(instream);\n        }\n    }\n","date":"2016-03-28 20:09:25","endLine":1569,"groupId":"4382","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFile","params":"(FTPClientftp@Stringdir@Stringfilename)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/81/752b35221665d8fd03cc1ef973bcb5a734df5b.src","preCode":"    protected void sendFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        InputStream instream = null;\n\n        try {\n            \r\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + file.getAbsolutePath());\n            }\n\n            instream = new BufferedInputStream(new FileInputStream(file));\n\n            createParents(ftp, filename);\n\n            ftp.storeFile(resolveFile(filename), instream);\n\n            boolean success = FTPReply.isPositiveCompletion(ftp.getReplyCode());\n\n            if (!success) {\n                String s = \"could not put file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                \r\n                if (task.getChmod() != null) {\n                    doSiteCommand(ftp, \"chmod \" + task.getChmod() + \" \"\n                                  + resolveFile(filename));\n                }\n                task.log(\"File \" + file.getAbsolutePath() + \" copied to \" + task.getServer(),\n                         Project.MSG_VERBOSE);\n                transferred++;\n            }\n        } finally {\n            if (instream != null) {\n                try {\n                    instream.close();\n                } catch (IOException ex) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1522,"status":"M"},{"authorDate":"2016-03-28 20:08:39","commitOrder":2,"curCode":"    protected void getFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        OutputStream outstream = null;\n        try {\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + filename + \" to \"\n                         + file.getAbsolutePath());\n            }\n\n            File pdir = file.getParentFile();\n\n            if (!pdir.exists()) {\n                pdir.mkdirs();\n            }\n            outstream = new BufferedOutputStream(new FileOutputStream(file));\n            ftp.retrieveFile(resolveFile(filename), outstream);\n\n            if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {\n                String s = \"could not get file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                task.log(\n                         \"File \" + file.getAbsolutePath() + \" copied from \"\n                         + task.getServer(), Project.MSG_VERBOSE);\n                transferred++;\n                if (task.isPreserveLastModified()) {\n                    outstream.close();\n                    outstream = null;\n                    FTPFile[] remote = ftp.listFiles(resolveFile(filename));\n                    if (remote.length > 0) {\n                        FILE_UTILS.setFileLastModified(file,\n                                                       remote[0].getTimestamp()\n                                                       .getTime().getTime());\n                    }\n                }\n            }\n        } finally {\n            FileUtils.close(outstream);\n        }\n    }\n","date":"2016-03-28 20:09:25","endLine":1701,"groupId":"7764","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getFile","params":"(FTPClientftp@Stringdir@Stringfilename)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/81/752b35221665d8fd03cc1ef973bcb5a734df5b.src","preCode":"    protected void getFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        OutputStream outstream = null;\n        try {\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + filename + \" to \"\n                         + file.getAbsolutePath());\n            }\n\n            File pdir = file.getParentFile();\n\n            if (!pdir.exists()) {\n                pdir.mkdirs();\n            }\n            outstream = new BufferedOutputStream(new FileOutputStream(file));\n            ftp.retrieveFile(resolveFile(filename), outstream);\n\n            if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {\n                String s = \"could not get file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                task.log(\n                         \"File \" + file.getAbsolutePath() + \" copied from \"\n                         + task.getServer(), Project.MSG_VERBOSE);\n                transferred++;\n                if (task.isPreserveLastModified()) {\n                    outstream.close();\n                    outstream = null;\n                    FTPFile[] remote = ftp.listFiles(resolveFile(filename));\n                    if (remote.length > 0) {\n                        FILE_UTILS.setFileLastModified(file,\n                                                       remote[0].getTimestamp()\n                                                       .getTime().getTime());\n                    }\n                }\n            }\n        } finally {\n            if (outstream != null) {\n                try {\n                    outstream.close();\n                } catch (IOException ex) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1649,"status":"M"}],"commitId":"48cdc84cc8c309dcc3bcfe61e6cc7a1700fa21ee","commitMessage":"@@@Merge branch '1.9.x'\n\nConflicts:\n\tsrc/main/org/apache/tools/zip/ZipFile.java\n","date":"2016-03-28 20:09:25","modifiedFileCount":"19","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-04-12 12:54:09","codes":[{"authorDate":"2017-04-12 12:54:09","commitOrder":3,"curCode":"    protected void sendFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        InputStream instream = null;\n\n        try {\n            \r\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + file.getAbsolutePath());\n            }\n\n            instream = new BufferedInputStream(Files.newInputStream(file.toPath()));\n\n            createParents(ftp, filename);\n\n            ftp.storeFile(resolveFile(filename), instream);\n\n            boolean success = FTPReply.isPositiveCompletion(ftp.getReplyCode());\n\n            if (!success) {\n                String s = \"could not put file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                \r\n                if (task.getChmod() != null) {\n                    doSiteCommand(ftp, \"chmod \" + task.getChmod() + \" \"\n                                  + resolveFile(filename));\n                }\n                task.log(\"File \" + file.getAbsolutePath() + \" copied to \" + task.getServer(),\n                         Project.MSG_VERBOSE);\n                transferred++;\n            }\n        } finally {\n            FileUtils.close(instream);\n        }\n    }\n","date":"2017-04-12 12:54:09","endLine":1568,"groupId":"0","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFile","params":"(FTPClientftp@Stringdir@Stringfilename)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/35/f01b35555bc0b0b12b02df9b4d0e4ed7b1a36e.src","preCode":"    protected void sendFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        InputStream instream = null;\n\n        try {\n            \r\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + file.getAbsolutePath());\n            }\n\n            instream = new BufferedInputStream(new FileInputStream(file));\n\n            createParents(ftp, filename);\n\n            ftp.storeFile(resolveFile(filename), instream);\n\n            boolean success = FTPReply.isPositiveCompletion(ftp.getReplyCode());\n\n            if (!success) {\n                String s = \"could not put file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                \r\n                if (task.getChmod() != null) {\n                    doSiteCommand(ftp, \"chmod \" + task.getChmod() + \" \"\n                                  + resolveFile(filename));\n                }\n                task.log(\"File \" + file.getAbsolutePath() + \" copied to \" + task.getServer(),\n                         Project.MSG_VERBOSE);\n                transferred++;\n            }\n        } finally {\n            FileUtils.close(instream);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1521,"status":"M"},{"authorDate":"2017-04-12 12:54:09","commitOrder":3,"curCode":"    protected void getFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        OutputStream outstream = null;\n        try {\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + filename + \" to \"\n                         + file.getAbsolutePath());\n            }\n\n            File pdir = file.getParentFile();\n\n            if (!pdir.exists()) {\n                pdir.mkdirs();\n            }\n            outstream = new BufferedOutputStream(Files.newOutputStream(file.toPath()));\n            ftp.retrieveFile(resolveFile(filename), outstream);\n\n            if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {\n                String s = \"could not get file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                task.log(\n                         \"File \" + file.getAbsolutePath() + \" copied from \"\n                         + task.getServer(), Project.MSG_VERBOSE);\n                transferred++;\n                if (task.isPreserveLastModified()) {\n                    outstream.close();\n                    outstream = null;\n                    FTPFile[] remote = ftp.listFiles(resolveFile(filename));\n                    if (remote.length > 0) {\n                        FILE_UTILS.setFileLastModified(file,\n                                                       remote[0].getTimestamp()\n                                                       .getTime().getTime());\n                    }\n                }\n            }\n        } finally {\n            FileUtils.close(outstream);\n        }\n    }\n","date":"2017-04-12 12:54:09","endLine":1700,"groupId":"7764","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getFile","params":"(FTPClientftp@Stringdir@Stringfilename)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/35/f01b35555bc0b0b12b02df9b4d0e4ed7b1a36e.src","preCode":"    protected void getFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        OutputStream outstream = null;\n        try {\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + filename + \" to \"\n                         + file.getAbsolutePath());\n            }\n\n            File pdir = file.getParentFile();\n\n            if (!pdir.exists()) {\n                pdir.mkdirs();\n            }\n            outstream = new BufferedOutputStream(new FileOutputStream(file));\n            ftp.retrieveFile(resolveFile(filename), outstream);\n\n            if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {\n                String s = \"could not get file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                task.log(\n                         \"File \" + file.getAbsolutePath() + \" copied from \"\n                         + task.getServer(), Project.MSG_VERBOSE);\n                transferred++;\n                if (task.isPreserveLastModified()) {\n                    outstream.close();\n                    outstream = null;\n                    FTPFile[] remote = ftp.listFiles(resolveFile(filename));\n                    if (remote.length > 0) {\n                        FILE_UTILS.setFileLastModified(file,\n                                                       remote[0].getTimestamp()\n                                                       .getTime().getTime());\n                    }\n                }\n            }\n        } finally {\n            FileUtils.close(outstream);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1648,"status":"M"}],"commitId":"af74d1f6b882cef5f4167d972638ad886d12d58c","commitMessage":"@@@reduce GC pressure by replacing File(In|Out)putStream\n","date":"2017-04-12 12:54:09","modifiedFileCount":"84","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-04-12 12:54:09","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":4,"curCode":"    protected void sendFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        InputStream instream = null;\n\n        try {\n            \r\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + file.getAbsolutePath());\n            }\n\n            instream = new BufferedInputStream(Files.newInputStream(file.toPath()));\n\n            createParents(ftp, filename);\n\n            ftp.storeFile(resolveFile(filename), instream);\n\n            if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {\n                String s = \"could not put file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                \r\n                if (task.getChmod() != null) {\n                    doSiteCommand(ftp, \"chmod \" + task.getChmod() + \" \"\n                                  + resolveFile(filename));\n                }\n                task.log(\"File \" + file.getAbsolutePath() + \" copied to \" + task.getServer(),\n                         Project.MSG_VERBOSE);\n                transferred++;\n            }\n        } finally {\n            FileUtils.close(instream);\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":1577,"groupId":"12495","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFile","params":"(FTPClientftp@Stringdir@Stringfilename)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f5/46b230ba9f5fd9068433aa8620bc9d58b1f599.src","preCode":"    protected void sendFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        InputStream instream = null;\n\n        try {\n            \r\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + file.getAbsolutePath());\n            }\n\n            instream = new BufferedInputStream(Files.newInputStream(file.toPath()));\n\n            createParents(ftp, filename);\n\n            ftp.storeFile(resolveFile(filename), instream);\n\n            boolean success = FTPReply.isPositiveCompletion(ftp.getReplyCode());\n\n            if (!success) {\n                String s = \"could not put file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                \r\n                if (task.getChmod() != null) {\n                    doSiteCommand(ftp, \"chmod \" + task.getChmod() + \" \"\n                                  + resolveFile(filename));\n                }\n                task.log(\"File \" + file.getAbsolutePath() + \" copied to \" + task.getServer(),\n                         Project.MSG_VERBOSE);\n                transferred++;\n            }\n        } finally {\n            FileUtils.close(instream);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1532,"status":"M"},{"authorDate":"2017-04-12 12:54:09","commitOrder":4,"curCode":"    protected void getFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        OutputStream outstream = null;\n        try {\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + filename + \" to \"\n                         + file.getAbsolutePath());\n            }\n\n            File pdir = file.getParentFile();\n\n            if (!pdir.exists()) {\n                pdir.mkdirs();\n            }\n            outstream = new BufferedOutputStream(Files.newOutputStream(file.toPath()));\n            ftp.retrieveFile(resolveFile(filename), outstream);\n\n            if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {\n                String s = \"could not get file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                task.log(\n                         \"File \" + file.getAbsolutePath() + \" copied from \"\n                         + task.getServer(), Project.MSG_VERBOSE);\n                transferred++;\n                if (task.isPreserveLastModified()) {\n                    outstream.close();\n                    outstream = null;\n                    FTPFile[] remote = ftp.listFiles(resolveFile(filename));\n                    if (remote.length > 0) {\n                        FILE_UTILS.setFileLastModified(file,\n                                                       remote[0].getTimestamp()\n                                                       .getTime().getTime());\n                    }\n                }\n            }\n        } finally {\n            FileUtils.close(outstream);\n        }\n    }\n","date":"2017-04-12 12:54:09","endLine":1700,"groupId":"12495","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getFile","params":"(FTPClientftp@Stringdir@Stringfilename)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/35/f01b35555bc0b0b12b02df9b4d0e4ed7b1a36e.src","preCode":"    protected void getFile(FTPClient ftp, String dir, String filename)\n        throws IOException, BuildException {\n        OutputStream outstream = null;\n        try {\n            File file = task.getProject().resolveFile(new File(dir, filename).getPath());\n\n            if (task.isNewer() && isUpToDate(ftp, file, resolveFile(filename))) {\n                return;\n            }\n\n            if (task.isVerbose()) {\n                task.log(\"transferring \" + filename + \" to \"\n                         + file.getAbsolutePath());\n            }\n\n            File pdir = file.getParentFile();\n\n            if (!pdir.exists()) {\n                pdir.mkdirs();\n            }\n            outstream = new BufferedOutputStream(Files.newOutputStream(file.toPath()));\n            ftp.retrieveFile(resolveFile(filename), outstream);\n\n            if (!FTPReply.isPositiveCompletion(ftp.getReplyCode())) {\n                String s = \"could not get file: \" + ftp.getReplyString();\n\n                if (task.isSkipFailedTransfers()) {\n                    task.log(s, Project.MSG_WARN);\n                    skipped++;\n                } else {\n                    throw new BuildException(s);\n                }\n\n            } else {\n                task.log(\n                         \"File \" + file.getAbsolutePath() + \" copied from \"\n                         + task.getServer(), Project.MSG_VERBOSE);\n                transferred++;\n                if (task.isPreserveLastModified()) {\n                    outstream.close();\n                    outstream = null;\n                    FTPFile[] remote = ftp.listFiles(resolveFile(filename));\n                    if (remote.length > 0) {\n                        FILE_UTILS.setFileLastModified(file,\n                                                       remote[0].getTimestamp()\n                                                       .getTime().getTime());\n                    }\n                }\n            }\n        } finally {\n            FileUtils.close(outstream);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1648,"status":"N"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"}]
