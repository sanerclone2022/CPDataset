[{"authorTime":"2003-06-26 16:54:29","codes":[{"authorDate":"2003-06-26 16:54:29","commitOrder":1,"curCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null &&\n            ! (\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/taskdefs/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default task list\");\n            }\n            props.load(in);\n\n            Enumeration enum = props.propertyNames();\n            while (enum.hasMoreElements()) {\n                String name = (String) enum.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setProject(project);\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        }\n        finally {\n            if (in != null) {\n                try {in.close();} catch (Exception ignore) {}\n            }\n        }\n    }\n","date":"2003-06-26 16:54:29","endLine":597,"groupId":"5055","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"initTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e7/5a14dd37120c7d906e6700805664152b2d06f7.src","preCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null &&\n            ! (\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/taskdefs/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default task list\");\n            }\n            props.load(in);\n\n            Enumeration enum = props.propertyNames();\n            while (enum.hasMoreElements()) {\n                String name = (String) enum.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setProject(project);\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        }\n        finally {\n            if (in != null) {\n                try {in.close();} catch (Exception ignore) {}\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":559,"status":"B"},{"authorDate":"2003-06-26 16:54:29","commitOrder":1,"curCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null &&\n            ! (\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/types/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default datatype list\");\n            }\n            props.load(in);\n\n            Enumeration enum = props.propertyNames();\n            while (enum.hasMoreElements()) {\n                String name = (String) enum.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setProject(project);\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        }\n        finally {\n            if (in != null) {\n                try {in.close();} catch (Exception ignore) {}\n            }\n        }\n    }\n","date":"2003-06-26 16:54:29","endLine":638,"groupId":"5055","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e7/5a14dd37120c7d906e6700805664152b2d06f7.src","preCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null &&\n            ! (\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/types/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default datatype list\");\n            }\n            props.load(in);\n\n            Enumeration enum = props.propertyNames();\n            while (enum.hasMoreElements()) {\n                String name = (String) enum.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setProject(project);\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        }\n        finally {\n            if (in != null) {\n                try {in.close();} catch (Exception ignore) {}\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":602,"status":"B"}],"commitId":"8701272b2418d74536d09b289f118d1833d42217","commitMessage":"@@@Second patch from antlib update as described in\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=19897\nThis patch\n   * unifies the type and task definitions into one table\n   * types and tasks are represented by a AntTypeDefinition object\n   * taskadapter has been generalized to a typeadapter\n   * <typedef/> has a number of new attributes:\n       - adapter\n       - adaptto\n       - onerror\n   * <taskdef/> html page updated to refer to <typedef/> page\n\nPR: 19897\nSubmitted by:\tPeter Reilly\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274718 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-06-26 16:54:29","modifiedFileCount":"11","status":"B","submitter":"Peter Reilly"},{"authorTime":"2003-07-04 17:35:31","codes":[{"authorDate":"2003-07-04 17:35:31","commitOrder":2,"curCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null &&\n            ! (\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/taskdefs/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default task list\");\n            }\n            props.load(in);\n\n            Enumeration enum = props.propertyNames();\n            while (enum.hasMoreElements()) {\n                String name = (String) enum.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        }\n        finally {\n            if (in != null) {\n                try {in.close();} catch (Exception ignore) {}\n            }\n        }\n    }\n","date":"2003-07-04 17:35:31","endLine":665,"groupId":"5055","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"initTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/b3/01bc1daabddb8d76ae8ae4a2eaca1a001bc745.src","preCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null &&\n            ! (\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/taskdefs/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default task list\");\n            }\n            props.load(in);\n\n            Enumeration enum = props.propertyNames();\n            while (enum.hasMoreElements()) {\n                String name = (String) enum.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setProject(project);\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        }\n        finally {\n            if (in != null) {\n                try {in.close();} catch (Exception ignore) {}\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":628,"status":"M"},{"authorDate":"2003-07-04 17:35:31","commitOrder":2,"curCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null &&\n            ! (\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/types/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default datatype list\");\n            }\n            props.load(in);\n\n            Enumeration enum = props.propertyNames();\n            while (enum.hasMoreElements()) {\n                String name = (String) enum.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        }\n        finally {\n            if (in != null) {\n                try {in.close();} catch (Exception ignore) {}\n            }\n        }\n    }\n","date":"2003-07-04 17:35:31","endLine":705,"groupId":"5055","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/b3/01bc1daabddb8d76ae8ae4a2eaca1a001bc745.src","preCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null &&\n            ! (\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/types/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default datatype list\");\n            }\n            props.load(in);\n\n            Enumeration enum = props.propertyNames();\n            while (enum.hasMoreElements()) {\n                String name = (String) enum.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setProject(project);\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        }\n        finally {\n            if (in != null) {\n                try {in.close();} catch (Exception ignore) {}\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":670,"status":"M"}],"commitId":"24f13ef07707ecf4f46a9d90fd434a8d35f14940","commitMessage":"@@@Remove cloning of AntTypeDefinition when creating a sub-project\nPR: 21296\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274761 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-07-04 17:35:31","modifiedFileCount":"3","status":"M","submitter":"Peter Reilly"},{"authorTime":"2003-08-13 22:46:15","codes":[{"authorDate":"2003-08-13 22:46:15","commitOrder":3,"curCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/taskdefs/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default task list\");\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2003-08-13 22:46:15","endLine":772,"groupId":"161","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"initTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ff/adc3991b5f4432923a1c552ac8859f33f9a51e.src","preCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/taskdefs/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default task list\");\n            }\n            props.load(in);\n\n            Enumeration enum = props.propertyNames();\n            while (enum.hasMoreElements()) {\n                String name = (String) enum.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":732,"status":"M"},{"authorDate":"2003-08-13 22:46:15","commitOrder":3,"curCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/types/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default datatype list\");\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2003-08-13 22:46:15","endLine":815,"groupId":"161","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"initTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ff/adc3991b5f4432923a1c552ac8859f33f9a51e.src","preCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/types/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default datatype list\");\n            }\n            props.load(in);\n\n            Enumeration enum = props.propertyNames();\n            while (enum.hasMoreElements()) {\n                String name = (String) enum.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":777,"status":"M"}],"commitId":"9434671efa81b38a4ebc571a5ea531375b541758","commitMessage":"@@@removing enum variable\nPR: 22345\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275074 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-08-13 22:46:15","modifiedFileCount":"14","status":"M","submitter":"Peter Reilly"},{"authorTime":"2005-03-01 22:55:47","codes":[{"authorDate":"2005-03-01 22:55:47","commitOrder":4,"curCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = MagicNames.TASKDEF_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2005-03-01 22:55:47","endLine":699,"groupId":"2547","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"initTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a5/887cb0fe8776684a94ae1854a34e6472b620f7.src","preCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/taskdefs/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default task list\");\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":659,"status":"M"},{"authorDate":"2005-03-01 22:55:47","commitOrder":4,"curCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = MagicNames.TYPEDEFS_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2005-03-01 22:55:47","endLine":742,"groupId":"2547","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"initTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a5/887cb0fe8776684a94ae1854a34e6472b620f7.src","preCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = \"/org/apache/tools/ant/types/defaults.properties\";\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(\"Can't load default datatype list\");\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(\"Can't load default type list\");\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":704,"status":"M"}],"commitId":"b0003afe366c593c70d5af9b037ae55dee28df1e","commitMessage":"@@@complete rework of reporting when we cant instantiate an element\n\nold: generic error message\n\nnew: step by step diagnostics with instructions.\n\nThe code treats ant tasks and ant optional tasks specially.  based on package names. \n\nAlso: moved some constants into the appropriate places.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277750 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2005-03-01 22:55:47","modifiedFileCount":"6","status":"M","submitter":"Steve Loughran"},{"authorTime":"2005-08-23 05:24:22","codes":[{"authorDate":"2005-08-23 05:24:22","commitOrder":5,"curCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(BUILD_SYSCLASSPATH_ONLY.equals(project.getProperty(MagicNames.BUILD_SYSCLASSPATH)))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = MagicNames.TASKDEF_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2005-08-23 05:24:22","endLine":722,"groupId":"2547","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"initTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8e/2a7732a3f85b030f0591de19896b1365b3df40.src","preCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = MagicNames.TASKDEF_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":682,"status":"M"},{"authorDate":"2005-08-23 05:24:22","commitOrder":5,"curCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(BUILD_SYSCLASSPATH_ONLY.equals(project.getProperty(MagicNames.BUILD_SYSCLASSPATH)))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = MagicNames.TYPEDEFS_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2005-08-23 05:24:22","endLine":765,"groupId":"2547","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"initTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8e/2a7732a3f85b030f0591de19896b1365b3df40.src","preCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(\"only\".equals(project.getProperty(\"build.sysclasspath\")))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = MagicNames.TYPEDEFS_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":727,"status":"M"}],"commitId":"b0078a54717eaf1f896ce3094adeed0540f6bd8e","commitMessage":"@@@just making some strings constants.  adding javadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278534 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2005-08-23 05:24:22","modifiedFileCount":"3","status":"M","submitter":"Steve Loughran"},{"authorTime":"2005-09-23 04:03:53","codes":[{"authorDate":"2005-09-23 04:03:53","commitOrder":6,"curCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        classLoader = getClassLoader(classLoader);\n        String dataDefs = MagicNames.TASKDEF_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2005-09-23 04:03:53","endLine":743,"groupId":"2547","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"initTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/dd/8976f53991d5af9bdd72697cf06cbb36b5f900.src","preCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(BUILD_SYSCLASSPATH_ONLY.equals(project.getProperty(MagicNames.BUILD_SYSCLASSPATH)))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = MagicNames.TASKDEF_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":706,"status":"M"},{"authorDate":"2005-09-23 04:03:53","commitOrder":6,"curCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        classLoader = getClassLoader(classLoader);\n        String dataDefs = MagicNames.TYPEDEFS_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2005-09-23 04:03:53","endLine":792,"groupId":"2547","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"initTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/dd/8976f53991d5af9bdd72697cf06cbb36b5f900.src","preCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        if (project.getCoreLoader() != null\n            && !(BUILD_SYSCLASSPATH_ONLY.equals(project.getProperty(MagicNames.BUILD_SYSCLASSPATH)))) {\n            classLoader = project.getCoreLoader();\n        }\n        String dataDefs = MagicNames.TYPEDEFS_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":757,"status":"M"}],"commitId":"954f6058d772148440655e920c59b4cdfc651924","commitMessage":"@@@Layout.  extracted methods / named constants\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@291012 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2005-09-23 04:03:53","modifiedFileCount":"2","status":"M","submitter":"Jacobus Martinus Kruithof"},{"authorTime":"2005-09-23 04:03:53","codes":[{"authorDate":"2006-03-08 20:44:14","commitOrder":7,"curCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        classLoader = getClassLoader(classLoader);\n        String dataDefs = MagicNames.TASKDEF_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n        } finally {\n            FileUtils.close(in);\n        }\n    }\n","date":"2006-03-08 20:44:14","endLine":742,"groupId":"2547","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"initTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8f/cfa85dc1f7e834e34f56992e88920513406f71.src","preCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        classLoader = getClassLoader(classLoader);\n        String dataDefs = MagicNames.TASKDEF_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":711,"status":"M"},{"authorDate":"2005-09-23 04:03:53","commitOrder":7,"curCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        classLoader = getClassLoader(classLoader);\n        String dataDefs = MagicNames.TYPEDEFS_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2005-09-23 04:03:53","endLine":792,"groupId":"2547","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"initTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/dd/8976f53991d5af9bdd72697cf06cbb36b5f900.src","preCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        classLoader = getClassLoader(classLoader);\n        String dataDefs = MagicNames.TYPEDEFS_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":757,"status":"N"}],"commitId":"1ad79cdf7799076d5acedea9e3611c429e0c56ce","commitMessage":"@@@closing\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@384202 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-03-08 20:44:14","modifiedFileCount":"1","status":"M","submitter":"Steve Loughran"},{"authorTime":"2006-09-21 06:41:51","codes":[{"authorDate":"2006-09-21 06:41:51","commitOrder":8,"curCode":"    private void initTasks() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(false);\n        Enumeration e = props.propertyNames();\n        while (e.hasMoreElements()) {\n            String name = (String) e.nextElement();\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            def.setAdaptToClass(Task.class);\n            def.setAdapterClass(TaskAdapter.class);\n            antTypeTable.put(name, def);\n        }\n    }\n","date":"2006-09-21 06:41:51","endLine":734,"groupId":"2547","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"initTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/10/c17580def15532cfe210153185414fa314fdab.src","preCode":"    private void initTasks() {\n        ClassLoader classLoader = null;\n        classLoader = getClassLoader(classLoader);\n        String dataDefs = MagicNames.TASKDEF_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                def.setAdaptToClass(Task.class);\n                def.setAdapterClass(TaskAdapter.class);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TASK_LIST_LOAD);\n        } finally {\n            FileUtils.close(in);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":719,"status":"M"},{"authorDate":"2006-09-21 06:41:51","commitOrder":8,"curCode":"    private void initTypes() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(true);\n        Enumeration e = props.propertyNames();\n        while (e.hasMoreElements()) {\n            String name = (String) e.nextElement();\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            antTypeTable.put(name, def);\n        }\n    }\n","date":"2006-09-21 06:41:51","endLine":799,"groupId":"2547","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"initTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/10/c17580def15532cfe210153185414fa314fdab.src","preCode":"    private void initTypes() {\n        ClassLoader classLoader = null;\n        classLoader = getClassLoader(classLoader);\n        String dataDefs = MagicNames.TYPEDEFS_PROPERTIES_RESOURCE;\n\n        InputStream in = null;\n        try {\n            Properties props = new Properties();\n            in = this.getClass().getResourceAsStream(dataDefs);\n            if (in == null) {\n                throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n            }\n            props.load(in);\n\n            Enumeration e = props.propertyNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                String className = props.getProperty(name);\n                AntTypeDefinition def = new AntTypeDefinition();\n                def.setName(name);\n                def.setClassName(className);\n                def.setClassLoader(classLoader);\n                antTypeTable.put(name, def);\n            }\n        } catch (IOException ex) {\n            throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (Exception ignore) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":786,"status":"M"}],"commitId":"b912cb97f49f54d02ab97e8d98cfe10c9abc80b3","commitMessage":"@@@Performance: bugzilla  25778\n    Minor optimization for ComponentHelper.initDefaultDefinitions\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@448385 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-09-21 06:41:51","modifiedFileCount":"1","status":"M","submitter":"Peter Reilly"},{"authorTime":"2012-08-21 01:49:13","codes":[{"authorDate":"2012-08-21 01:49:13","commitOrder":9,"curCode":"    private void initTasks() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(false);\n        Enumeration<?> e = props.propertyNames();\n        while (e.hasMoreElements()) {\n            String name = (String) e.nextElement();\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            def.setAdaptToClass(Task.class);\n            def.setAdapterClass(TaskAdapter.class);\n            antTypeTable.put(name, def);\n        }\n    }\n","date":"2012-08-21 01:49:13","endLine":773,"groupId":"2547","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"initTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c5/823d1b8958e09072e53e4bb26c45515eb42257.src","preCode":"    private void initTasks() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(false);\n        Enumeration e = props.propertyNames();\n        while (e.hasMoreElements()) {\n            String name = (String) e.nextElement();\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            def.setAdaptToClass(Task.class);\n            def.setAdapterClass(TaskAdapter.class);\n            antTypeTable.put(name, def);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":758,"status":"M"},{"authorDate":"2012-08-21 01:49:13","commitOrder":9,"curCode":"    private void initTypes() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(true);\n        Enumeration<?> e = props.propertyNames();\n        while (e.hasMoreElements()) {\n            String name = (String) e.nextElement();\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            antTypeTable.put(name, def);\n        }\n    }\n","date":"2012-08-21 01:49:13","endLine":834,"groupId":"2547","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"initTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c5/823d1b8958e09072e53e4bb26c45515eb42257.src","preCode":"    private void initTypes() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(true);\n        Enumeration e = props.propertyNames();\n        while (e.hasMoreElements()) {\n            String name = (String) e.nextElement();\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            antTypeTable.put(name, def);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":821,"status":"M"}],"commitId":"3d706ab8188a674936880b6f4530b0cf3991758b","commitMessage":"@@@java 5 updates\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1375137 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-21 01:49:13","modifiedFileCount":"29","status":"M","submitter":"Matthew Jason Benson"},{"authorTime":"2012-08-21 01:49:13","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":10,"curCode":"    private void initTasks() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(false);\n        for (String name : props.stringPropertyNames()) {\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            def.setAdaptToClass(Task.class);\n            def.setAdapterClass(TaskAdapter.class);\n            antTypeTable.put(name, def);\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":771,"groupId":"2547","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"initTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c7/72d1b944ecc46dfa8686fc92de8a44bc4f26e4.src","preCode":"    private void initTasks() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(false);\n        Enumeration<?> e = props.propertyNames();\n        while (e.hasMoreElements()) {\n            String name = (String) e.nextElement();\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            def.setAdaptToClass(Task.class);\n            def.setAdapterClass(TaskAdapter.class);\n            antTypeTable.put(name, def);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":758,"status":"M"},{"authorDate":"2012-08-21 01:49:13","commitOrder":10,"curCode":"    private void initTypes() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(true);\n        Enumeration<?> e = props.propertyNames();\n        while (e.hasMoreElements()) {\n            String name = (String) e.nextElement();\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            antTypeTable.put(name, def);\n        }\n    }\n","date":"2012-08-21 01:49:13","endLine":834,"groupId":"2547","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"initTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c5/823d1b8958e09072e53e4bb26c45515eb42257.src","preCode":"    private void initTypes() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(true);\n        Enumeration<?> e = props.propertyNames();\n        while (e.hasMoreElements()) {\n            String name = (String) e.nextElement();\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            antTypeTable.put(name, def);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":821,"status":"N"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"},{"authorTime":"2018-05-17 00:32:03","codes":[{"authorDate":"2018-05-17 00:32:03","commitOrder":11,"curCode":"    private void initTasks() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(false);\n        for (String name : props.stringPropertyNames()) {\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(props.getProperty(name));\n            def.setClassLoader(classLoader);\n            def.setAdaptToClass(Task.class);\n            def.setAdapterClass(TaskAdapter.class);\n            antTypeTable.put(name, def);\n        }\n    }\n","date":"2018-05-17 01:13:05","endLine":766,"groupId":"10590","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"initTasks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/11079fd472fe19e5e0a53a139f1bf1dfa6371f.src","preCode":"    private void initTasks() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(false);\n        for (String name : props.stringPropertyNames()) {\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            def.setAdaptToClass(Task.class);\n            def.setAdapterClass(TaskAdapter.class);\n            antTypeTable.put(name, def);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":754,"status":"M"},{"authorDate":"2018-05-17 00:32:03","commitOrder":11,"curCode":"    private void initTypes() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(true);\n        for (String name : props.stringPropertyNames()) {\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(props.getProperty(name));\n            def.setClassLoader(classLoader);\n            antTypeTable.put(name, def);\n        }\n    }\n","date":"2018-05-17 01:13:05","endLine":824,"groupId":"10590","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"initTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/00/11079fd472fe19e5e0a53a139f1bf1dfa6371f.src","preCode":"    private void initTypes() {\n        ClassLoader classLoader = getClassLoader(null);\n        Properties props = getDefaultDefinitions(true);\n        Enumeration<?> e = props.propertyNames();\n        while (e.hasMoreElements()) {\n            String name = (String) e.nextElement();\n            String className = props.getProperty(name);\n            AntTypeDefinition def = new AntTypeDefinition();\n            def.setName(name);\n            def.setClassName(className);\n            def.setClassLoader(classLoader);\n            antTypeTable.put(name, def);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/ComponentHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":814,"status":"M"}],"commitId":"070c3bc86f85e8f01cb624fe50ae82f0d11171b2","commitMessage":"@@@Deprecate CollectionUtils and Enumerations;\nreduce explicit use of Enumeration","date":"2018-05-17 01:13:05","modifiedFileCount":"46","status":"M","submitter":"Gintas Grigelionis"}]
