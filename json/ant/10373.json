[{"authorTime":"2017-01-12 05:20:16","codes":[{"authorDate":"2017-01-12 13:53:09","commitOrder":2,"curCode":"        private static OutputStream newXZOutputStream(OutputStream ostream)\n            throws BuildException {\n            try {\n                Class<?> fClazz = Class.forName(\"org.tukaani.xz.FilterOptions\");\n                Class<?> oClazz = Class.forName(\"org.tukaani.xz.LZMA2Options\");\n                Class<? extends OutputStream> sClazz =\n                    Class.forName(\"org.tukaani.xz.XZOutputStream\")\n                    .asSubclass(OutputStream.class);\n                Constructor<? extends OutputStream> c =\n                    sClazz.getConstructor(OutputStream.class, fClazz);\n                return c.newInstance(ostream, oClazz.newInstance());\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz compression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZOutputStream\", ex);\n            }\n        }\n","date":"2017-01-12 13:53:09","endLine":1046,"groupId":"7138","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newXZOutputStream","params":"(OutputStreamostream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/81/5477ab950da9cb80abfbd6c2c1d8415bf0782e.src","preCode":"        private static OutputStream newXZOutputStream(OutputStream ostream)\n            throws BuildException {\n            try {\n                Class<?> fClazz = Class.forName(\"org.tukaani.xz.FilterOptions\");\n                Class<?> oClazz = Class.forName(\"org.tukaani.xz.LZMA2Options\");\n                Class<? extends OutputStream> sClazz =\n                    Class.forName(\"org.tukaani.xz.XZOutputStream\")\n                    .asSubclass(OutputStream.class);\n                Constructor<? extends OutputStream> c =\n                    sClazz.getConstructor(OutputStream.class, fClazz);\n                return c.newInstance(ostream, oClazz.newInstance());\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz compression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZOutputStream\", ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Tar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1025,"status":"B"},{"authorDate":"2017-01-12 05:20:16","commitOrder":2,"curCode":"        private static InputStream newXZInputStream(InputStream istream)\n            throws BuildException {\n            try {\n                Class<? extends InputStream> clazz =\n                    Class.forName(\"org.tukaani.xz.XZInputStream\")\n                    .asSubclass(InputStream.class);\n                Constructor<? extends InputStream> c =\n                    clazz.getConstructor(InputStream.class);\n                return c.newInstance(istream);\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz uncompression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZInputStream\", ex);\n            }\n        }\n","date":"2017-01-12 05:20:16","endLine":272,"groupId":"641","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newXZInputStream","params":"(InputStreamistream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8e/841c006bf42a86648f6f20a38512483701a446.src","preCode":"        private static InputStream newXZInputStream(InputStream istream)\n            throws BuildException {\n            try {\n                Class<? extends InputStream> clazz =\n                    Class.forName(\"org.tukaani.xz.XZInputStream\")\n                    .asSubclass(InputStream.class);\n                Constructor<? extends InputStream> c =\n                    clazz.getConstructor(InputStream.class);\n                return c.newInstance(istream);\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz uncompression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZInputStream\", ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Untar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"NB"}],"commitId":"f479b5f52f27fe13bf439be5368ebce699252219","commitMessage":"@@@xz support in tar - PR 60350\n","date":"2017-01-12 13:53:09","modifiedFileCount":"1","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-12-10 06:57:08","codes":[{"authorDate":"2017-01-12 13:53:09","commitOrder":3,"curCode":"        private static OutputStream newXZOutputStream(OutputStream ostream)\n            throws BuildException {\n            try {\n                Class<?> fClazz = Class.forName(\"org.tukaani.xz.FilterOptions\");\n                Class<?> oClazz = Class.forName(\"org.tukaani.xz.LZMA2Options\");\n                Class<? extends OutputStream> sClazz =\n                    Class.forName(\"org.tukaani.xz.XZOutputStream\")\n                    .asSubclass(OutputStream.class);\n                Constructor<? extends OutputStream> c =\n                    sClazz.getConstructor(OutputStream.class, fClazz);\n                return c.newInstance(ostream, oClazz.newInstance());\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz compression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZOutputStream\", ex);\n            }\n        }\n","date":"2017-01-12 13:53:09","endLine":1046,"groupId":"7138","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newXZOutputStream","params":"(OutputStreamostream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/81/5477ab950da9cb80abfbd6c2c1d8415bf0782e.src","preCode":"        private static OutputStream newXZOutputStream(OutputStream ostream)\n            throws BuildException {\n            try {\n                Class<?> fClazz = Class.forName(\"org.tukaani.xz.FilterOptions\");\n                Class<?> oClazz = Class.forName(\"org.tukaani.xz.LZMA2Options\");\n                Class<? extends OutputStream> sClazz =\n                    Class.forName(\"org.tukaani.xz.XZOutputStream\")\n                    .asSubclass(OutputStream.class);\n                Constructor<? extends OutputStream> c =\n                    sClazz.getConstructor(OutputStream.class, fClazz);\n                return c.newInstance(ostream, oClazz.newInstance());\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz compression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZOutputStream\", ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Tar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1025,"status":"N"},{"authorDate":"2017-12-10 06:57:08","commitOrder":3,"curCode":"        private static InputStream newXZInputStream(InputStream istream)\n            throws BuildException {\n            try {\n                Class<? extends InputStream> clazz =\n                    Class.forName(\"org.tukaani.xz.XZInputStream\")\n                    .asSubclass(InputStream.class);\n                Constructor<? extends InputStream> c =\n                    clazz.getConstructor(InputStream.class);\n                return c.newInstance(istream);\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz decompression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZInputStream\", ex);\n            }\n        }\n","date":"2017-12-10 14:15:45","endLine":262,"groupId":"641","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newXZInputStream","params":"(InputStreamistream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/4e/3c253209afd93dab9e5d1062039881fa79bddc.src","preCode":"        private static InputStream newXZInputStream(InputStream istream)\n            throws BuildException {\n            try {\n                Class<? extends InputStream> clazz =\n                    Class.forName(\"org.tukaani.xz.XZInputStream\")\n                    .asSubclass(InputStream.class);\n                Constructor<? extends InputStream> c =\n                    clazz.getConstructor(InputStream.class);\n                return c.newInstance(istream);\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz uncompression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZInputStream\", ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Untar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"M"}],"commitId":"6656db28bb79912ec1c744f34affbda53f86e6fd","commitMessage":"@@@Let?s use doclint","date":"2017-12-10 14:15:45","modifiedFileCount":"375","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2017-12-10 06:57:08","codes":[{"authorDate":"2020-07-29 21:41:59","commitOrder":4,"curCode":"        private static OutputStream newXZOutputStream(OutputStream ostream)\n            throws BuildException {\n            try {\n                Class<?> fClazz = Class.forName(\"org.tukaani.xz.FilterOptions\");\n                Class<?> oClazz = Class.forName(\"org.tukaani.xz.LZMA2Options\");\n                Class<? extends OutputStream> sClazz =\n                    Class.forName(\"org.tukaani.xz.XZOutputStream\")\n                    .asSubclass(OutputStream.class);\n                Constructor<? extends OutputStream> c =\n                    sClazz.getConstructor(OutputStream.class, fClazz);\n                return c.newInstance(ostream, oClazz.getDeclaredConstructor().newInstance());\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz compression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZOutputStream\", ex);\n            }\n        }\n","date":"2020-07-29 21:41:59","endLine":1028,"groupId":"10373","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"newXZOutputStream","params":"(OutputStreamostream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/76/446fdc8e3412caf3ee6006519cfb7b329fe980.src","preCode":"        private static OutputStream newXZOutputStream(OutputStream ostream)\n            throws BuildException {\n            try {\n                Class<?> fClazz = Class.forName(\"org.tukaani.xz.FilterOptions\");\n                Class<?> oClazz = Class.forName(\"org.tukaani.xz.LZMA2Options\");\n                Class<? extends OutputStream> sClazz =\n                    Class.forName(\"org.tukaani.xz.XZOutputStream\")\n                    .asSubclass(OutputStream.class);\n                Constructor<? extends OutputStream> c =\n                    sClazz.getConstructor(OutputStream.class, fClazz);\n                return c.newInstance(ostream, oClazz.newInstance());\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz compression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZOutputStream\", ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Tar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1007,"status":"M"},{"authorDate":"2017-12-10 06:57:08","commitOrder":4,"curCode":"        private static InputStream newXZInputStream(InputStream istream)\n            throws BuildException {\n            try {\n                Class<? extends InputStream> clazz =\n                    Class.forName(\"org.tukaani.xz.XZInputStream\")\n                    .asSubclass(InputStream.class);\n                Constructor<? extends InputStream> c =\n                    clazz.getConstructor(InputStream.class);\n                return c.newInstance(istream);\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz decompression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZInputStream\", ex);\n            }\n        }\n","date":"2017-12-10 14:15:45","endLine":262,"groupId":"10373","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newXZInputStream","params":"(InputStreamistream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/4e/3c253209afd93dab9e5d1062039881fa79bddc.src","preCode":"        private static InputStream newXZInputStream(InputStream istream)\n            throws BuildException {\n            try {\n                Class<? extends InputStream> clazz =\n                    Class.forName(\"org.tukaani.xz.XZInputStream\")\n                    .asSubclass(InputStream.class);\n                Constructor<? extends InputStream> c =\n                    clazz.getConstructor(InputStream.class);\n                return c.newInstance(istream);\n            } catch (ClassNotFoundException ex) {\n                throw new BuildException(\"xz decompression requires the XZ for Java library\",\n                                         ex);\n            } catch (NoSuchMethodException\n                     | InstantiationException\n                     | IllegalAccessException\n                     | InvocationTargetException\n                     ex) {\n                throw new BuildException(\"failed to create XZInputStream\", ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Untar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"N"}],"commitId":"35d9f3bc9af426f7277b08cbc0452dc65fc586b4","commitMessage":"@@@Merge pull request #133 from twogee/new-instance\n\nClass.newInstance() is deprecated in Java 9+","date":"2020-07-29 21:41:59","modifiedFileCount":"28","status":"M","submitter":"Stefan Bodewig"}]
