[{"authorTime":"2002-07-29 23:23:20","codes":[{"authorDate":"2002-07-29 23:23:20","commitOrder":1,"curCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        for (int i = 0; i < instructions.size(); i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                return performScale(image);\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                image = ((TransformOperation) instr).executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        return performScale(image);\n    }\n","date":"2002-07-29 23:23:20","endLine":146,"groupId":"6248","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"executeTransformOperation","params":"(PlanarImageimage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/57/9cf524c598b6d3592fa9982937f61fc9d8cf5f.src","preCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        for (int i = 0; i < instructions.size(); i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                return performScale(image);\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                image = ((TransformOperation) instr).executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        return performScale(image);\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Scale.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"},{"authorDate":"2002-07-29 23:23:20","commitOrder":1,"curCode":"    public PlanarImage executeTransformOperation(PlanarImage image)\n    {\n        BufferedImage bi = null;\n        Graphics2D graphics = null;\n        for (int i = 0; i < instructions.size(); i++)\n        {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation)\n            {\n                \r\n                \r\n                System.out.println(\"Execing Draws\");\n                PlanarImage op = ((DrawOperation) instr).executeDrawOperation();\n                image = performRotate(op);\n                return image;\n            }\n            else if (instr instanceof TransformOperation)\n            {\n                bi = image.getAsBufferedImage();\n                graphics = (Graphics2D) bi.getGraphics();\n                System.out.println(\"Execing Transforms\");\n                image = ((TransformOperation) instr).executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        System.out.println(\"Execing as TransformOperation\");\n        image = performRotate(image);\n        System.out.println(image);\n        return image;\n    }\n","date":"2002-07-29 23:23:20","endLine":131,"groupId":"3482","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"executeTransformOperation","params":"(PlanarImageimage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/fb/577d2f7585202535c94b0faba8ed89a1885a63.src","preCode":"    public PlanarImage executeTransformOperation(PlanarImage image)\n    {\n        BufferedImage bi = null;\n        Graphics2D graphics = null;\n        for (int i = 0; i < instructions.size(); i++)\n        {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation)\n            {\n                \r\n                \r\n                System.out.println(\"Execing Draws\");\n                PlanarImage op = ((DrawOperation) instr).executeDrawOperation();\n                image = performRotate(op);\n                return image;\n            }\n            else if (instr instanceof TransformOperation)\n            {\n                bi = image.getAsBufferedImage();\n                graphics = (Graphics2D) bi.getGraphics();\n                System.out.println(\"Execing Transforms\");\n                image = ((TransformOperation) instr).executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        System.out.println(\"Execing as TransformOperation\");\n        image = performRotate(image);\n        System.out.println(image);\n        return image;\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Rotate.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"c647455d270e1d8a2cc48fc9dc939a5b8ef6d19c","commitMessage":"@@@Kevin Grey's <image> task.  A few modifications were made.  most notably changes on setter types and removal of some unused variables flagged by IDEA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@273179 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2002-07-29 23:23:20","modifiedFileCount":"0","status":"B","submitter":"Erik Hatcher"},{"authorTime":"2011-02-04 05:00:00","codes":[{"authorDate":"2011-02-04 05:00:00","commitOrder":2,"curCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        final int size = instructions.size();\n        for (int i = 0; i < size; i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                return performScale(image);\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        return performScale(image);\n    }\n","date":"2011-02-04 05:00:00","endLine":162,"groupId":"6248","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"executeTransformOperation","params":"(PlanarImageimage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ea/588970d8f2f1793ec5efacae1236d91fd2741e.src","preCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        for (int i = 0; i < instructions.size(); i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                return performScale(image);\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        return performScale(image);\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Scale.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2011-02-04 05:00:00","commitOrder":2,"curCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        Graphics2D graphics = null;\n        final int size = instructions.size();\n        for (int i = 0; i < size; i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                \r\n                \r\n                System.out.println(\"Execing Draws\");\n                PlanarImage op = ((DrawOperation) instr).executeDrawOperation();\n                image = performRotate(op);\n                return image;\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                graphics = (Graphics2D) bi.getGraphics();\n                System.out.println(\"Execing Transforms\");\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        System.out.println(\"Execing as TransformOperation\");\n        image = performRotate(image);\n        System.out.println(image);\n        return image;\n    }\n","date":"2011-02-04 05:00:00","endLine":96,"groupId":"3482","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"executeTransformOperation","params":"(PlanarImageimage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f9/25ec75938e5d777ac7a7fec993f821016295d6.src","preCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        Graphics2D graphics = null;\n        for (int i = 0; i < instructions.size(); i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                \r\n                \r\n                System.out.println(\"Execing Draws\");\n                PlanarImage op = ((DrawOperation) instr).executeDrawOperation();\n                image = performRotate(op);\n                return image;\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                graphics = (Graphics2D) bi.getGraphics();\n                System.out.println(\"Execing Transforms\");\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        System.out.println(\"Execing as TransformOperation\");\n        image = performRotate(image);\n        System.out.println(image);\n        return image;\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Rotate.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"5f20b99140fb4ec958a6d540b9df7b3c08312b40","commitMessage":"@@@microoptimizations.  PR 50716\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1066963 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-04 05:00:00","modifiedFileCount":"50","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2012-08-22 20:32:43","codes":[{"authorDate":"2011-02-04 05:00:00","commitOrder":3,"curCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        final int size = instructions.size();\n        for (int i = 0; i < size; i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                return performScale(image);\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        return performScale(image);\n    }\n","date":"2011-02-04 05:00:00","endLine":162,"groupId":"6248","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"executeTransformOperation","params":"(PlanarImageimage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ea/588970d8f2f1793ec5efacae1236d91fd2741e.src","preCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        final int size = instructions.size();\n        for (int i = 0; i < size; i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                return performScale(image);\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        return performScale(image);\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Scale.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"N"},{"authorDate":"2012-08-22 20:32:43","commitOrder":3,"curCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        final int size = instructions.size();\n        for (int i = 0; i < size; i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                \r\n                \r\n                System.out.println(\"Execing Draws\");\n                PlanarImage op = ((DrawOperation) instr).executeDrawOperation();\n                image = performRotate(op);\n                return image;\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                System.out.println(\"Execing Transforms\");\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        System.out.println(\"Execing as TransformOperation\");\n        image = performRotate(image);\n        System.out.println(image);\n        return image;\n    }\n","date":"2012-08-22 20:32:43","endLine":93,"groupId":"3482","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"executeTransformOperation","params":"(PlanarImageimage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/bf/e6982fec758ba1175cc8d63d7a969652e93175.src","preCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        Graphics2D graphics = null;\n        final int size = instructions.size();\n        for (int i = 0; i < size; i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                \r\n                \r\n                System.out.println(\"Execing Draws\");\n                PlanarImage op = ((DrawOperation) instr).executeDrawOperation();\n                image = performRotate(op);\n                return image;\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                graphics = (Graphics2D) bi.getGraphics();\n                System.out.println(\"Execing Transforms\");\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        System.out.println(\"Execing as TransformOperation\");\n        image = performRotate(image);\n        System.out.println(image);\n        return image;\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Rotate.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"9caeed5081071d6a2de28844d0a724918f8c6d86","commitMessage":"@@@Java 1.5.  continued\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1376015 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-22 20:32:43","modifiedFileCount":"89","status":"M","submitter":"Matthew Jason Benson"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":4,"curCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                return performScale(image);\n            }\n            if (instr instanceof TransformOperation) {\n                BufferedImage bi = image.getAsBufferedImage();\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n            }\n        }\n        return performScale(image);\n    }\n","date":"2017-04-13 23:15:22","endLine":159,"groupId":"2609","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"executeTransformOperation","params":"(PlanarImageimage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/15/6e47f2f71758d3243b2dda806cd4f99c744d19.src","preCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        final int size = instructions.size();\n        for (int i = 0; i < size; i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                return performScale(image);\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        return performScale(image);\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Scale.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":4,"curCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                \r\n                \r\n                System.out.println(\"Execing Draws\");\n                PlanarImage op = ((DrawOperation) instr).executeDrawOperation();\n                return performRotate(op);\n            }\n            if (instr instanceof TransformOperation) {\n                BufferedImage bi = image.getAsBufferedImage();\n                System.out.println(\"Execing Transforms\");\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n            }\n        }\n        System.out.println(\"Execing as TransformOperation\");\n        image = performRotate(image);\n        System.out.println(image);\n        return image;\n    }\n","date":"2017-04-13 23:15:22","endLine":91,"groupId":"6508","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"executeTransformOperation","params":"(PlanarImageimage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/09/04ba25645d3351e784ba75e13fba997b6bd1a9.src","preCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        BufferedImage bi = null;\n        final int size = instructions.size();\n        for (int i = 0; i < size; i++) {\n            ImageOperation instr = ((ImageOperation) instructions.elementAt(i));\n            if (instr instanceof DrawOperation) {\n                \r\n                \r\n                System.out.println(\"Execing Draws\");\n                PlanarImage op = ((DrawOperation) instr).executeDrawOperation();\n                image = performRotate(op);\n                return image;\n            } else if (instr instanceof TransformOperation) {\n                bi = image.getAsBufferedImage();\n                System.out.println(\"Execing Transforms\");\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n            }\n        }\n        System.out.println(\"Execing as TransformOperation\");\n        image = performRotate(image);\n        System.out.println(image);\n        return image;\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Rotate.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"},{"authorTime":"2017-12-10 06:57:08","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":5,"curCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                return performScale(image);\n            }\n            if (instr instanceof TransformOperation) {\n                BufferedImage bi = image.getAsBufferedImage();\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n            }\n        }\n        return performScale(image);\n    }\n","date":"2017-04-13 23:15:22","endLine":159,"groupId":"10536","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"executeTransformOperation","params":"(PlanarImageimage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/15/6e47f2f71758d3243b2dda806cd4f99c744d19.src","preCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                return performScale(image);\n            }\n            if (instr instanceof TransformOperation) {\n                BufferedImage bi = image.getAsBufferedImage();\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n            }\n        }\n        return performScale(image);\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Scale.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"N"},{"authorDate":"2017-12-10 06:57:08","commitOrder":5,"curCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                \r\n                \r\n                System.out.println(\"Exec'ing Draws\");\n                PlanarImage op = ((DrawOperation) instr).executeDrawOperation();\n                return performRotate(op);\n            }\n            if (instr instanceof TransformOperation) {\n                BufferedImage bi = image.getAsBufferedImage();\n                System.out.println(\"Exec'ing Transforms\");\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n            }\n        }\n        System.out.println(\"Exec'ing as TransformOperation\");\n        image = performRotate(image);\n        System.out.println(image);\n        return image;\n    }\n","date":"2017-12-10 14:15:45","endLine":91,"groupId":"10536","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"executeTransformOperation","params":"(PlanarImageimage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3c/813a8d6e8416e57bcb67adb1c26bd4dcbad905.src","preCode":"    public PlanarImage executeTransformOperation(PlanarImage image) {\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                \r\n                \r\n                System.out.println(\"Execing Draws\");\n                PlanarImage op = ((DrawOperation) instr).executeDrawOperation();\n                return performRotate(op);\n            }\n            if (instr instanceof TransformOperation) {\n                BufferedImage bi = image.getAsBufferedImage();\n                System.out.println(\"Execing Transforms\");\n                image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n            }\n        }\n        System.out.println(\"Execing as TransformOperation\");\n        image = performRotate(image);\n        System.out.println(image);\n        return image;\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Rotate.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"6656db28bb79912ec1c744f34affbda53f86e6fd","commitMessage":"@@@Let?s use doclint","date":"2017-12-10 14:15:45","modifiedFileCount":"375","status":"M","submitter":"Gintas Grigelionis"}]
