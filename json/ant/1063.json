[{"authorTime":"2006-09-22 03:10:48","codes":[{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testBasicSet() {\n        Project p = getProject();\n        executeTarget(\"testbasicset\");\n        FileSet resultFileSet = (FileSet)p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 4, files.size());\n        assertTrue(\"Result did not contain A.class\",\n            files.containsKey(\"A.class\"));\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n        assertTrue(\"Result did not contain D.class\",\n            files.containsKey(\"D.class\"));\n    }\n","date":"2006-09-22 03:10:48","endLine":72,"groupId":"6213","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0f/97b8857110e91716d12dcb69e1fa8dde63f99b.src","preCode":"    public void testBasicSet() {\n        Project p = getProject();\n        executeTarget(\"testbasicset\");\n        FileSet resultFileSet = (FileSet)p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 4, files.size());\n        assertTrue(\"Result did not contain A.class\",\n            files.containsKey(\"A.class\"));\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n        assertTrue(\"Result did not contain D.class\",\n            files.containsKey(\"D.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testSmallSet() {\n        Project p = getProject();\n        executeTarget(\"testsmallset\");\n        FileSet resultFileSet = (FileSet)p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 2, files.size());\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n    }\n","date":"2006-09-22 03:10:48","endLine":93,"groupId":"6213","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSmallSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0f/97b8857110e91716d12dcb69e1fa8dde63f99b.src","preCode":"    public void testSmallSet() {\n        Project p = getProject();\n        executeTarget(\"testsmallset\");\n        FileSet resultFileSet = (FileSet)p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 2, files.size());\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"73d66d2c6d6e0384fd66eba1f20ef97469c49b18","commitMessage":"@@@Restructuring to allow junit and antunit tests both.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@448636 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-09-22 03:10:48","modifiedFileCount":"0","status":"B","submitter":"Matthew Jason Benson"},{"authorTime":"2014-04-19 05:00:38","codes":[{"authorDate":"2014-04-19 05:00:38","commitOrder":2,"curCode":"    public void testBasicSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testbasicset\");\n        FileSet resultFileSet = (FileSet)p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 4, files.size());\n        assertTrue(\"Result did not contain A.class\",\n            files.containsKey(\"A.class\"));\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n        assertTrue(\"Result did not contain D.class\",\n            files.containsKey(\"D.class\"));\n    }\n","date":"2014-04-19 05:00:38","endLine":75,"groupId":"6213","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/39/2667cb777e72625ca89939c4d2148dc2dafb47.src","preCode":"    public void testBasicSet() {\n        Project p = getProject();\n        executeTarget(\"testbasicset\");\n        FileSet resultFileSet = (FileSet)p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 4, files.size());\n        assertTrue(\"Result did not contain A.class\",\n            files.containsKey(\"A.class\"));\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n        assertTrue(\"Result did not contain D.class\",\n            files.containsKey(\"D.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2014-04-19 05:00:38","commitOrder":2,"curCode":"    public void testSmallSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testsmallset\");\n        FileSet resultFileSet = (FileSet)p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 2, files.size());\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n    }\n","date":"2014-04-19 05:00:38","endLine":97,"groupId":"6213","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSmallSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/39/2667cb777e72625ca89939c4d2148dc2dafb47.src","preCode":"    public void testSmallSet() {\n        Project p = getProject();\n        executeTarget(\"testsmallset\");\n        FileSet resultFileSet = (FileSet)p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 2, files.size());\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"b61c80746dd5df73899390826e197d2656784f91","commitMessage":"@@@Test improvements: convert to JUnit4.  improved error testing and remove sleeps\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1588563 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-19 05:00:38","modifiedFileCount":"268","status":"M","submitter":"mclarke"},{"authorTime":"2017-12-12 06:30:20","codes":[{"authorDate":"2017-12-12 06:30:20","commitOrder":3,"curCode":"    public void testBasicSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testbasicset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 4, files.size());\n        assertTrue(\"Result did not contain A.class\",\n            files.containsKey(\"A.class\"));\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n        assertTrue(\"Result did not contain D.class\",\n            files.containsKey(\"D.class\"));\n    }\n","date":"2017-12-12 06:43:32","endLine":75,"groupId":"6213","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ce/86f06aa9fe19877ed0b68585586f11baef511a.src","preCode":"    public void testBasicSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testbasicset\");\n        FileSet resultFileSet = (FileSet)p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 4, files.size());\n        assertTrue(\"Result did not contain A.class\",\n            files.containsKey(\"A.class\"));\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n        assertTrue(\"Result did not contain D.class\",\n            files.containsKey(\"D.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2017-12-12 06:30:20","commitOrder":3,"curCode":"    public void testSmallSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testsmallset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 2, files.size());\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n    }\n","date":"2017-12-12 06:43:32","endLine":97,"groupId":"6213","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSmallSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ce/86f06aa9fe19877ed0b68585586f11baef511a.src","preCode":"    public void testSmallSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testsmallset\");\n        FileSet resultFileSet = (FileSet)p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 2, files.size());\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"7f1e7628b357082fb1f786d1f58156a336db45e3","commitMessage":"@@@Checkstyle: whitespace.  line continuation and modifier idiosyncrasies","date":"2017-12-12 06:43:32","modifiedFileCount":"251","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-01 16:26:49","codes":[{"authorDate":"2018-04-01 16:26:49","commitOrder":4,"curCode":"    public void testBasicSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testbasicset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (String scannedFile : scannedFiles) {\n            files.put(scannedFile, scannedFile);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 4, files.size());\n        assertTrue(\"Result did not contain A.class\",\n            files.containsKey(\"A.class\"));\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n        assertTrue(\"Result did not contain D.class\",\n            files.containsKey(\"D.class\"));\n    }\n","date":"2018-04-01 16:26:49","endLine":75,"groupId":"6213","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e2/25f13a2487526e226d160db86f50da32d1f927.src","preCode":"    public void testBasicSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testbasicset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 4, files.size());\n        assertTrue(\"Result did not contain A.class\",\n            files.containsKey(\"A.class\"));\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n        assertTrue(\"Result did not contain D.class\",\n            files.containsKey(\"D.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2018-04-01 16:26:49","commitOrder":4,"curCode":"    public void testSmallSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testsmallset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (String scannedFile : scannedFiles) {\n            files.put(scannedFile, scannedFile);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 2, files.size());\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n    }\n","date":"2018-04-01 16:26:49","endLine":97,"groupId":"6213","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSmallSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e2/25f13a2487526e226d160db86f50da32d1f927.src","preCode":"    public void testSmallSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testsmallset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (int i = 0; i < scannedFiles.length; ++i) {\n            files.put(scannedFiles[i], scannedFiles[i]);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 2, files.size());\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"1c80d507f496dde98869890e671edf635bef8dec","commitMessage":"@@@Use foreach loops","date":"2018-04-01 16:26:49","modifiedFileCount":"123","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-02 02:07:39","codes":[{"authorDate":"2018-04-02 02:07:39","commitOrder":5,"curCode":"    public void testBasicSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testbasicset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable<String, String> files = new Hashtable<>();\n        for (String scannedFile : scannedFiles) {\n            files.put(scannedFile, scannedFile);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 4, files.size());\n        assertTrue(\"Result did not contain A.class\",\n            files.containsKey(\"A.class\"));\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n        assertTrue(\"Result did not contain D.class\",\n            files.containsKey(\"D.class\"));\n    }\n","date":"2018-04-02 02:07:39","endLine":75,"groupId":"0","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/74/10652c9203b9cb02eccda5f9a8cabb6f4abe08.src","preCode":"    public void testBasicSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testbasicset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (String scannedFile : scannedFiles) {\n            files.put(scannedFile, scannedFile);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 4, files.size());\n        assertTrue(\"Result did not contain A.class\",\n            files.containsKey(\"A.class\"));\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n        assertTrue(\"Result did not contain D.class\",\n            files.containsKey(\"D.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2018-04-02 02:07:39","commitOrder":5,"curCode":"    public void testSmallSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testsmallset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        Hashtable<String, String> files = new Hashtable<>();\n        for (String scannedFile : scanner.getIncludedFiles()) {\n            files.put(scannedFile, scannedFile);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 2, files.size());\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n    }\n","date":"2018-04-02 02:07:39","endLine":96,"groupId":"6213","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSmallSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/74/10652c9203b9cb02eccda5f9a8cabb6f4abe08.src","preCode":"    public void testSmallSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testsmallset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable files = new Hashtable();\n        for (String scannedFile : scannedFiles) {\n            files.put(scannedFile, scannedFile);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 2, files.size());\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"95495d57aa5cca8fc350ebfb10f6d390f40290cb","commitMessage":"@@@Remove extraneous casts and (un)boxing.  tersify logic","date":"2018-04-02 02:07:39","modifiedFileCount":"178","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-24 12:55:31","codes":[{"authorDate":"2018-04-24 12:55:31","commitOrder":6,"curCode":"    public void testBasicSet() {\n        buildRule.executeTarget(\"testbasicset\");\n        Hashtable<String, String> files = getFiles();\n        assertEquals(\"Classfileset did not pick up expected number of class files\",\n                4, files.size());\n        assertThat(\"Result did not contain A.class\", files, hasKey(\"A.class\"));\n        assertThat(\"Result did not contain B.class\", files, hasKey(\"B.class\"));\n        assertThat(\"Result did not contain C.class\", files, hasKey(\"C.class\"));\n        assertThat(\"Result did not contain D.class\", files, hasKey(\"D.class\"));\n    }\n","date":"2018-04-24 13:08:44","endLine":66,"groupId":"1063","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/91/877db2a2dbbb3f74301b6faa775c123a25d268.src","preCode":"    public void testBasicSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testbasicset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        String[] scannedFiles = scanner.getIncludedFiles();\n        Hashtable<String, String> files = new Hashtable<>();\n        for (String scannedFile : scannedFiles) {\n            files.put(scannedFile, scannedFile);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 4, files.size());\n        assertTrue(\"Result did not contain A.class\",\n            files.containsKey(\"A.class\"));\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n        assertTrue(\"Result did not contain D.class\",\n            files.containsKey(\"D.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2018-04-24 12:55:31","commitOrder":6,"curCode":"    public void testSmallSet() {\n        buildRule.executeTarget(\"testsmallset\");\n        Hashtable<String, String> files = getFiles();\n        assertEquals(\"Classfileset did not pick up expected number of class files\",\n                2, files.size());\n        assertThat(\"Result did not contain B.class\", files, hasKey(\"B.class\"));\n        assertThat(\"Result did not contain C.class\", files, hasKey(\"C.class\"));\n    }\n","date":"2018-04-24 13:08:44","endLine":79,"groupId":"1063","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testSmallSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/91/877db2a2dbbb3f74301b6faa775c123a25d268.src","preCode":"    public void testSmallSet() {\n        Project p = buildRule.getProject();\n        buildRule.executeTarget(\"testsmallset\");\n        FileSet resultFileSet = p.getReference(RESULT_FILESET);\n        DirectoryScanner scanner = resultFileSet.getDirectoryScanner(p);\n        Hashtable<String, String> files = new Hashtable<>();\n        for (String scannedFile : scanner.getIncludedFiles()) {\n            files.put(scannedFile, scannedFile);\n        }\n        assertEquals(\"Classfileset did not pick up expected number of \"\n            + \"class files\", 2, files.size());\n        assertTrue(\"Result did not contain B.class\",\n            files.containsKey(\"B.class\"));\n        assertTrue(\"Result did not contain C.class\",\n            files.containsKey(\"C.class\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/optional/depend/ClassFileSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"97080ce1dbfc2c1d1f8570851389b85fb9a0a8ff","commitMessage":"@@@More matchers","date":"2018-04-24 13:08:44","modifiedFileCount":"14","status":"M","submitter":"Gintas Grigelionis"}]
