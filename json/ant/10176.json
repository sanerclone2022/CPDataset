[{"authorTime":"2016-03-03 19:56:40","codes":[{"authorDate":"2016-03-03 19:56:40","commitOrder":1,"curCode":"    public void testModuleCommandLine() {\n        final String moduleName = \"TestModule\"; \r\n        final String arg = \"appArg\";    \r\n        final Java java = new Java();\n        java.setFork(true);\n        java.setModule(moduleName);\n        java.setJvmargs(\"-Xmx128M\");\n        java.setArgs(arg);\n        final String[] cmdLine = java.getCommandLine().getCommandline();\n        Assert.assertNotNull(\"Has command line.\", cmdLine);\n        assertEquals(\"Command line should have 5 elements\", 5, cmdLine.length);\n        assertEquals(\"Last command line element should be java argument: \" + arg,\n                arg,\n                cmdLine[cmdLine.length-1]);\n        assertEquals(\"The command line element at index 3 should be module name: \" + moduleName,\n                moduleName,\n                cmdLine[cmdLine.length-2]);\n        assertEquals(\"The command line element at index 2 should be -m\",\n                \"-m\",\n                cmdLine[cmdLine.length-3]);\n    }\n","date":"2016-03-06 19:32:28","endLine":183,"groupId":"6768","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testModuleCommandLine","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8d/995718045fac1b8ea3b3812895b13c63fe60a9.src","preCode":"    public void testModuleCommandLine() {\n        final String moduleName = \"TestModule\"; \r\n        final String arg = \"appArg\";    \r\n        final Java java = new Java();\n        java.setFork(true);\n        java.setModule(moduleName);\n        java.setJvmargs(\"-Xmx128M\");\n        java.setArgs(arg);\n        final String[] cmdLine = java.getCommandLine().getCommandline();\n        Assert.assertNotNull(\"Has command line.\", cmdLine);\n        assertEquals(\"Command line should have 5 elements\", 5, cmdLine.length);\n        assertEquals(\"Last command line element should be java argument: \" + arg,\n                arg,\n                cmdLine[cmdLine.length-1]);\n        assertEquals(\"The command line element at index 3 should be module name: \" + moduleName,\n                moduleName,\n                cmdLine[cmdLine.length-2]);\n        assertEquals(\"The command line element at index 2 should be -m\",\n                \"-m\",\n                cmdLine[cmdLine.length-3]);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"B"},{"authorDate":"2016-03-03 19:56:40","commitOrder":1,"curCode":"    public void testModuleAndClassnameCommandLine() {\n        final String moduleName = \"TestModule\"; \r\n        final String className = \"org.apache.Test\"; \r\n        final String moduleClassPair= String.format(\"%s/%s\", moduleName, className);\n        final String arg = \"appArg\";    \r\n        final Java java = new Java();\n        java.setFork(true);\n        java.setModule(moduleName);\n        java.setClassname(className);\n        java.setJvmargs(\"-Xmx128M\");    \r\n        java.setArgs(arg);\n        final String[] cmdLine = java.getCommandLine().getCommandline();\n        Assert.assertNotNull(\"Has command line.\", cmdLine);\n        assertEquals(\"Command line should have 5 elements\", 5, cmdLine.length);\n        assertEquals(\"Last command line element should be java argument: \" + arg,\n                arg,\n                cmdLine[cmdLine.length-1]);\n        assertEquals(\"The command line element at index 3 should be module class pair: \" + moduleClassPair,\n                moduleClassPair,\n                cmdLine[cmdLine.length-2]);\n        assertEquals(\"The command line element at index 2 should be -m\",\n                \"-m\",\n                cmdLine[cmdLine.length-3]);\n    }\n","date":"2016-03-06 19:32:28","endLine":209,"groupId":"6768","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testModuleAndClassnameCommandLine","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8d/995718045fac1b8ea3b3812895b13c63fe60a9.src","preCode":"    public void testModuleAndClassnameCommandLine() {\n        final String moduleName = \"TestModule\"; \r\n        final String className = \"org.apache.Test\"; \r\n        final String moduleClassPair= String.format(\"%s/%s\", moduleName, className);\n        final String arg = \"appArg\";    \r\n        final Java java = new Java();\n        java.setFork(true);\n        java.setModule(moduleName);\n        java.setClassname(className);\n        java.setJvmargs(\"-Xmx128M\");    \r\n        java.setArgs(arg);\n        final String[] cmdLine = java.getCommandLine().getCommandline();\n        Assert.assertNotNull(\"Has command line.\", cmdLine);\n        assertEquals(\"Command line should have 5 elements\", 5, cmdLine.length);\n        assertEquals(\"Last command line element should be java argument: \" + arg,\n                arg,\n                cmdLine[cmdLine.length-1]);\n        assertEquals(\"The command line element at index 3 should be module class pair: \" + moduleClassPair,\n                moduleClassPair,\n                cmdLine[cmdLine.length-2]);\n        assertEquals(\"The command line element at index 2 should be -m\",\n                \"-m\",\n                cmdLine[cmdLine.length-3]);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"B"}],"commitId":"23b0cf06c276387ac3f5d455c0b45a5c4ab888dc","commitMessage":"@@@Added module.  modulepath attributes and modulepath.  moduleupgradepath elements into Java task.\n","date":"2016-03-06 19:32:28","modifiedFileCount":"3","status":"B","submitter":"Tomas Zezula"},{"authorTime":"2018-04-02 04:06:44","codes":[{"authorDate":"2018-04-02 04:06:44","commitOrder":2,"curCode":"    public void testModuleCommandLine() {\n        final String moduleName = \"TestModule\"; \r\n        final String arg = \"appArg\";    \r\n        final Java java = new Java();\n        java.setFork(true);\n        java.setModule(moduleName);\n        java.setJvmargs(\"-Xmx128M\");\n        java.setArgs(arg);\n        final String[] cmdLine = java.getCommandLine().getCommandline();\n        assertNotNull(\"Has command line.\", cmdLine);\n        assertEquals(\"Command line should have 5 elements\", 5, cmdLine.length);\n        assertEquals(\"Last command line element should be java argument: \" + arg,\n                arg,\n                cmdLine[cmdLine.length - 1]);\n        assertEquals(\"The command line element at index 3 should be module name: \" + moduleName,\n                moduleName,\n                cmdLine[cmdLine.length - 2]);\n        assertEquals(\"The command line element at index 2 should be -m\",\n                \"-m\",\n                cmdLine[cmdLine.length - 3]);\n    }\n","date":"2018-04-02 04:36:23","endLine":183,"groupId":"10176","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testModuleCommandLine","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/03/804dcbbf616bd1a7aad0239cdd966e0bccc1cf.src","preCode":"    public void testModuleCommandLine() {\n        final String moduleName = \"TestModule\"; \r\n        final String arg = \"appArg\";    \r\n        final Java java = new Java();\n        java.setFork(true);\n        java.setModule(moduleName);\n        java.setJvmargs(\"-Xmx128M\");\n        java.setArgs(arg);\n        final String[] cmdLine = java.getCommandLine().getCommandline();\n        Assert.assertNotNull(\"Has command line.\", cmdLine);\n        assertEquals(\"Command line should have 5 elements\", 5, cmdLine.length);\n        assertEquals(\"Last command line element should be java argument: \" + arg,\n                arg,\n                cmdLine[cmdLine.length - 1]);\n        assertEquals(\"The command line element at index 3 should be module name: \" + moduleName,\n                moduleName,\n                cmdLine[cmdLine.length - 2]);\n        assertEquals(\"The command line element at index 2 should be -m\",\n                \"-m\",\n                cmdLine[cmdLine.length - 3]);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2018-04-02 04:06:44","commitOrder":2,"curCode":"    public void testModuleAndClassnameCommandLine() {\n        final String moduleName = \"TestModule\"; \r\n        final String className = \"org.apache.Test\"; \r\n        final String moduleClassPair = String.format(\"%s/%s\", moduleName, className);\n        final String arg = \"appArg\";    \r\n        final Java java = new Java();\n        java.setFork(true);\n        java.setModule(moduleName);\n        java.setClassname(className);\n        java.setJvmargs(\"-Xmx128M\");    \r\n        java.setArgs(arg);\n        final String[] cmdLine = java.getCommandLine().getCommandline();\n        assertNotNull(\"Has command line.\", cmdLine);\n        assertEquals(\"Command line should have 5 elements\", 5, cmdLine.length);\n        assertEquals(\"Last command line element should be java argument: \" + arg,\n                arg,\n                cmdLine[cmdLine.length - 1]);\n        assertEquals(\"The command line element at index 3 should be module class pair: \" + moduleClassPair,\n                moduleClassPair,\n                cmdLine[cmdLine.length - 2]);\n        assertEquals(\"The command line element at index 2 should be -m\",\n                \"-m\",\n                cmdLine[cmdLine.length - 3]);\n    }\n","date":"2018-04-02 04:36:23","endLine":209,"groupId":"10176","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testModuleAndClassnameCommandLine","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/03/804dcbbf616bd1a7aad0239cdd966e0bccc1cf.src","preCode":"    public void testModuleAndClassnameCommandLine() {\n        final String moduleName = \"TestModule\"; \r\n        final String className = \"org.apache.Test\"; \r\n        final String moduleClassPair = String.format(\"%s/%s\", moduleName, className);\n        final String arg = \"appArg\";    \r\n        final Java java = new Java();\n        java.setFork(true);\n        java.setModule(moduleName);\n        java.setClassname(className);\n        java.setJvmargs(\"-Xmx128M\");    \r\n        java.setArgs(arg);\n        final String[] cmdLine = java.getCommandLine().getCommandline();\n        Assert.assertNotNull(\"Has command line.\", cmdLine);\n        assertEquals(\"Command line should have 5 elements\", 5, cmdLine.length);\n        assertEquals(\"Last command line element should be java argument: \" + arg,\n                arg,\n                cmdLine[cmdLine.length - 1]);\n        assertEquals(\"The command line element at index 3 should be module class pair: \" + moduleClassPair,\n                moduleClassPair,\n                cmdLine[cmdLine.length - 2]);\n        assertEquals(\"The command line element at index 2 should be -m\",\n                \"-m\",\n                cmdLine[cmdLine.length - 3]);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"cac9c2fc4fa96c51bec547402dd4de055a6c84d0","commitMessage":"@@@Simplify assertions","date":"2018-04-02 04:36:23","modifiedFileCount":"26","status":"M","submitter":"Gintas Grigelionis"}]
