[{"authorTime":"2005-03-05 06:31:40","codes":[{"authorDate":"2009-08-27 18:14:07","commitOrder":3,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                Vector pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), task.getSeparator());\n                Vector pathElements2 = SelectorUtils.tokenizePath(currentPath,\n                                                                  task.getSeparator());\n                String relPath = currentRelativePath;\n                for (int pcount = pathElements2.size(); pcount < pathElements.size(); pcount++) {\n                    String currentElement = (String) pathElements.elementAt(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!relPath.equals(\"\")) {\n                        relPath = relPath + task.getSeparator();\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + task.getSeparator()\n                            + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + task.getSeparator()\n                            + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","date":"2009-08-27 18:14:07","endLine":878,"groupId":"4374","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3a/490e4782ed37f2c31e237802fb6132e360acca.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                Vector pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), task.getSeparator());\n                Vector pathElements2 = SelectorUtils.tokenizePath(currentPath,\n                                                                  task.getSeparator());\n                String relPath = currentRelativePath;\n                for (int pcount = pathElements2.size(); pcount < pathElements.size(); pcount++) {\n                    String currentElement = (String) pathElements.elementAt(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!relPath.equals(\"\")) {\n                        relPath = relPath + task.getSeparator();\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + task.getSeparator()\n                            + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + task.getSeparator()\n                            + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":847,"status":"B"},{"authorDate":"2005-03-05 06:31:40","commitOrder":3,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                Vector pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                Vector pathElements2 = SelectorUtils.tokenizePath(currentPath, remoteFileSep);\n                String relPath = currentRelativePath;\n                for (int pcount = pathElements2.size(); pcount < pathElements.size(); pcount++) {\n                    String currentElement = (String) pathElements.elementAt(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!relPath.equals(\"\")) {\n                        relPath = relPath + remoteFileSep;\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath + \" assumed to not be a symlink.\", Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","date":"2005-03-05 06:31:40","endLine":794,"groupId":"10505","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/31/e718e38fc96f6ed0ebdc13ecdf47c03a49f2b6.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                Vector pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                Vector pathElements2 = SelectorUtils.tokenizePath(currentPath, remoteFileSep);\n                String relPath = currentRelativePath;\n                for (int pcount = pathElements2.size(); pcount < pathElements.size(); pcount++) {\n                    String currentElement = (String) pathElements.elementAt(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!relPath.equals(\"\")) {\n                        relPath = relPath + remoteFileSep;\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath + \" assumed to not be a symlink.\", Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":768,"status":"NB"}],"commitId":"d72413184949c04015b452cf9cdf36bf2107061f","commitMessage":"@@@refactored <ftp> so commons-net may be loaded via a separate classloader.  Based on patch by Greg Roodt in PR 45860.  Not really tested.  yet.  therefore I haven't changed defaults.properties so far\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@808350 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-08-27 18:14:07","modifiedFileCount":"3","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2011-02-04 05:00:00","codes":[{"authorDate":"2011-02-04 05:00:00","commitOrder":4,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                Vector pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), task.getSeparator());\n                Vector pathElements2 = SelectorUtils.tokenizePath(currentPath,\n                                                                  task.getSeparator());\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = (String) pathElements.elementAt(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!relPath.equals(\"\")) {\n                        relPath = relPath + task.getSeparator();\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + task.getSeparator()\n                            + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + task.getSeparator()\n                            + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","date":"2011-02-04 05:00:00","endLine":881,"groupId":"4374","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3c/250d26aa9e5f16e9ce30827269a6810ba56901.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                Vector pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), task.getSeparator());\n                Vector pathElements2 = SelectorUtils.tokenizePath(currentPath,\n                                                                  task.getSeparator());\n                String relPath = currentRelativePath;\n                for (int pcount = pathElements2.size(); pcount < pathElements.size(); pcount++) {\n                    String currentElement = (String) pathElements.elementAt(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!relPath.equals(\"\")) {\n                        relPath = relPath + task.getSeparator();\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + task.getSeparator()\n                            + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + task.getSeparator()\n                            + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":849,"status":"M"},{"authorDate":"2011-02-04 05:00:00","commitOrder":4,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                Vector pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                Vector pathElements2 = SelectorUtils.tokenizePath(currentPath, remoteFileSep);\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = (String) pathElements.elementAt(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!relPath.equals(\"\")) {\n                        relPath = relPath + remoteFileSep;\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath\n                            + \" assumed to not be a symlink.\",\n                            Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","date":"2011-02-04 05:00:00","endLine":975,"groupId":"10505","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/2f/1b44dda4903f5e449c1dcd2aa4f9f1c2fac927.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                Vector pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                Vector pathElements2 = SelectorUtils.tokenizePath(currentPath, remoteFileSep);\n                String relPath = currentRelativePath;\n                for (int pcount = pathElements2.size(); pcount < pathElements.size(); pcount++) {\n                    String currentElement = (String) pathElements.elementAt(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!relPath.equals(\"\")) {\n                        relPath = relPath + remoteFileSep;\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath\n                            + \" assumed to not be a symlink.\",\n                            Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":946,"status":"M"}],"commitId":"5f20b99140fb4ec958a6d540b9df7b3c08312b40","commitMessage":"@@@microoptimizations.  PR 50716\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1066963 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-04 05:00:00","modifiedFileCount":"50","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":5,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils\n                    .tokenizePath(getAbsolutePath(), task.getSeparator());\n                List<String> pathElements2 = SelectorUtils\n                    .tokenizePath(currentPath, task.getSeparator());\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!\"\".equals(relPath)) {\n                        relPath = relPath + task.getSeparator();\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + task.getSeparator()\n                            + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + task.getSeparator()\n                            + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","date":"2017-04-13 23:15:22","endLine":898,"groupId":"9732","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f5/46b230ba9f5fd9068433aa8620bc9d58b1f599.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                Vector pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), task.getSeparator());\n                Vector pathElements2 = SelectorUtils.tokenizePath(currentPath,\n                                                                  task.getSeparator());\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = (String) pathElements.elementAt(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!relPath.equals(\"\")) {\n                        relPath = relPath + task.getSeparator();\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + task.getSeparator()\n                            + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + task.getSeparator()\n                            + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":865,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":5,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                List<String> pathElements2 = SelectorUtils.tokenizePath(currentPath, remoteFileSep);\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!\"\".equals(relPath)) {\n                        relPath = relPath + remoteFileSep;\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath\n                            + \" assumed to not be a symlink.\",\n                            Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","date":"2017-04-13 23:15:22","endLine":994,"groupId":"2985","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/2a/5239022c4fbbf3e893d2c9ad7a4fcdd809cc5c.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                Vector pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                Vector pathElements2 = SelectorUtils.tokenizePath(currentPath, remoteFileSep);\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = (String) pathElements.elementAt(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!relPath.equals(\"\")) {\n                        relPath = relPath + remoteFileSep;\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath\n                            + \" assumed to not be a symlink.\",\n                            Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":965,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"},{"authorTime":"2018-04-06 14:32:31","codes":[{"authorDate":"2018-04-06 14:32:31","commitOrder":6,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils\n                    .tokenizePath(getAbsolutePath(), task.getSeparator());\n                List<String> pathElements2 = SelectorUtils\n                    .tokenizePath(currentPath, task.getSeparator());\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (relPath != null && !relPath.isEmpty()) {\n                        relPath += task.getSeparator();\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath += currentElement;\n                        currentPath += task.getSeparator() + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath += theFile.getName();\n                        currentPath += task.getSeparator() + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","date":"2018-04-06 14:48:19","endLine":892,"groupId":"9196","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/1a/16b80aed1ce59463970a16bd563895ace92f97.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils\n                    .tokenizePath(getAbsolutePath(), task.getSeparator());\n                List<String> pathElements2 = SelectorUtils\n                    .tokenizePath(currentPath, task.getSeparator());\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!\"\".equals(relPath)) {\n                        relPath = relPath + task.getSeparator();\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + task.getSeparator()\n                            + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + task.getSeparator()\n                            + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":861,"status":"M"},{"authorDate":"2018-04-06 14:32:31","commitOrder":6,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                List<String> pathElements2 = SelectorUtils.tokenizePath(currentPath, remoteFileSep);\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (relPath != null && !relPath.isEmpty()) {\n                        relPath += remoteFileSep;\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath += currentElement;\n                        currentPath += remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath\n                            + \" assumed to not be a symlink.\",\n                            Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath += theFile.getName();\n                        currentPath += remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","date":"2018-04-06 14:48:19","endLine":991,"groupId":"9196","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f9/a4a95b232c71ad2c2f2f8c3032c2dbd52219fa.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                List<String> pathElements2 = SelectorUtils.tokenizePath(currentPath, remoteFileSep);\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (!\"\".equals(relPath)) {\n                        relPath = relPath + remoteFileSep;\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath = relPath + currentElement;\n                        currentPath = currentPath + remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath\n                            + \" assumed to not be a symlink.\",\n                            Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath = relPath + theFile.getName();\n                        currentPath = currentPath + remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":962,"status":"M"}],"commitId":"4b14d85f11b9a7728dcd2d9420551fd28bf8f45e","commitMessage":"@@@Avoid repetition","date":"2018-04-06 14:48:19","modifiedFileCount":"28","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-07 01:34:17","codes":[{"authorDate":"2018-04-07 01:34:17","commitOrder":7,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils\n                    .tokenizePath(getAbsolutePath(), task.getSeparator());\n                List<String> pathElements2 = SelectorUtils\n                    .tokenizePath(currentPath, task.getSeparator());\n                StringBuilder relPath = new StringBuilder(currentRelativePath);\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (relPath.length() > 0) {\n                        relPath.append(task.getSeparator());\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath.append(currentElement);\n                        currentPath += task.getSeparator() + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath.append(theFile.getName());\n                        currentPath += task.getSeparator() + theFile.getName();\n                    }\n                }\n                return relPath.toString();\n            }\n","date":"2018-04-07 01:34:17","endLine":888,"groupId":"10808","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/1e/0b5f227f17f46598a6825c29f462babc10655b.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils\n                    .tokenizePath(getAbsolutePath(), task.getSeparator());\n                List<String> pathElements2 = SelectorUtils\n                    .tokenizePath(currentPath, task.getSeparator());\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (relPath != null && !relPath.isEmpty()) {\n                        relPath += task.getSeparator();\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath += currentElement;\n                        currentPath += task.getSeparator() + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath += theFile.getName();\n                        currentPath += task.getSeparator() + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":857,"status":"M"},{"authorDate":"2018-04-07 01:34:17","commitOrder":7,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                List<String> pathElements2 = SelectorUtils.tokenizePath(currentPath, remoteFileSep);\n                StringBuilder relPath = new StringBuilder(currentRelativePath);\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (relPath.length() > 0) {\n                        relPath.append(remoteFileSep);\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath.append(currentElement);\n                        currentPath += remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath\n                            + \" assumed to not be a symlink.\",\n                            Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath.append(theFile.getName());\n                        currentPath += remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath.toString();\n            }\n","date":"2018-04-07 01:34:17","endLine":986,"groupId":"7021","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/dd/485b672b6d8e80800ff328faaacb01a40499de.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                List<String> pathElements2 = SelectorUtils.tokenizePath(currentPath, remoteFileSep);\n                String relPath = currentRelativePath;\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (relPath != null && !relPath.isEmpty()) {\n                        relPath += remoteFileSep;\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath += currentElement;\n                        currentPath += remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath\n                            + \" assumed to not be a symlink.\",\n                            Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath += theFile.getName();\n                        currentPath += remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath;\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":957,"status":"M"}],"commitId":"cc41d3c1611c3a091e489fc026b33afd02f7eaed","commitMessage":"@@@Cleanup and more StringBuilders","date":"2018-04-07 01:34:17","modifiedFileCount":"6","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-12 00:40:23","codes":[{"authorDate":"2018-04-07 01:34:17","commitOrder":8,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils\n                    .tokenizePath(getAbsolutePath(), task.getSeparator());\n                List<String> pathElements2 = SelectorUtils\n                    .tokenizePath(currentPath, task.getSeparator());\n                StringBuilder relPath = new StringBuilder(currentRelativePath);\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (relPath.length() > 0) {\n                        relPath.append(task.getSeparator());\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath.append(currentElement);\n                        currentPath += task.getSeparator() + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath.append(theFile.getName());\n                        currentPath += task.getSeparator() + theFile.getName();\n                    }\n                }\n                return relPath.toString();\n            }\n","date":"2018-04-07 01:34:17","endLine":888,"groupId":"12487","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/1e/0b5f227f17f46598a6825c29f462babc10655b.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils\n                    .tokenizePath(getAbsolutePath(), task.getSeparator());\n                List<String> pathElements2 = SelectorUtils\n                    .tokenizePath(currentPath, task.getSeparator());\n                StringBuilder relPath = new StringBuilder(currentRelativePath);\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (relPath.length() > 0) {\n                        relPath.append(task.getSeparator());\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath.append(currentElement);\n                        currentPath += task.getSeparator() + currentElement;\n                        task.log(\"Hidden file \" + relPath\n                                 + \" assumed to not be a symlink.\",\n                                 Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath.append(theFile.getName());\n                        currentPath += task.getSeparator() + theFile.getName();\n                    }\n                }\n                return relPath.toString();\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":857,"status":"N"},{"authorDate":"2018-04-12 00:40:23","commitOrder":8,"curCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                StringBuilder relPath = new StringBuilder(currentRelativePath == null\n                        ? \"\" : currentRelativePath);\n                for (String currentElement : pathElements.subList(SelectorUtils.tokenizePath(currentPath,\n                        remoteFileSep).size(), pathElements.size())) {\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (relPath.length() > 0) {\n                        relPath.append(remoteFileSep);\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath.append(currentElement);\n                        currentPath += remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath + \" assumed to not be a symlink.\",\n                            Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath.append(theFile.getName());\n                        currentPath += remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath.toString();\n            }\n","date":"2018-04-12 00:40:23","endLine":984,"groupId":"12487","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getRelativePath","params":"(StringcurrentPath@StringcurrentRelativePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/02/9e2d9945780243a260d546723167bb71854d64.src","preCode":"            private String getRelativePath(String currentPath, String currentRelativePath) {\n                List<String> pathElements = SelectorUtils.tokenizePath(getAbsolutePath(), remoteFileSep);\n                List<String> pathElements2 = SelectorUtils.tokenizePath(currentPath, remoteFileSep);\n                StringBuilder relPath = new StringBuilder(currentRelativePath);\n                final int size = pathElements.size();\n                for (int pcount = pathElements2.size(); pcount < size; pcount++) {\n                    String currentElement = pathElements.get(pcount);\n                    FTPFile[] theFiles = listFiles(currentPath);\n                    FTPFile theFile = null;\n                    if (theFiles != null) {\n                        theFile = getFile(theFiles, currentElement);\n                    }\n                    if (relPath.length() > 0) {\n                        relPath.append(remoteFileSep);\n                    }\n                    if (theFile == null) {\n                        \r\n                        relPath.append(currentElement);\n                        currentPath += remoteFileSep + currentElement;\n                        log(\"Hidden file \" + relPath\n                            + \" assumed to not be a symlink.\",\n                            Project.MSG_VERBOSE);\n                    } else {\n                        traversesSymlinks = traversesSymlinks || theFile.isSymbolicLink();\n                        relPath.append(theFile.getName());\n                        currentPath += remoteFileSep + theFile.getName();\n                    }\n                }\n                return relPath.toString();\n            }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":957,"status":"M"}],"commitId":"110081eeff5af8a5a8a4f7972a6bf86811ecf2f5","commitMessage":"@@@Add null guard.  refactor loop","date":"2018-04-12 00:40:23","modifiedFileCount":"1","status":"M","submitter":"Gintas Grigelionis"}]
