[{"authorTime":"2006-09-22 03:10:48","codes":[{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testNestedText() {\n        XMLFragment x = (XMLFragment) getProject().getReference(\"nested-text\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(1, nl.getLength());\n        assertEquals(Node.TEXT_NODE, nl.item(0).getNodeType());\n        assertEquals(\"foo\", nl.item(0).getNodeValue());\n    }\n","date":"2006-09-22 03:10:48","endLine":45,"groupId":"7039","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNestedText","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f1/39d605a21d70f06b2d64f8aa2cb5db65d8a957.src","preCode":"    public void testNestedText() {\n        XMLFragment x = (XMLFragment) getProject().getReference(\"nested-text\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(1, nl.getLength());\n        assertEquals(Node.TEXT_NODE, nl.item(0).getNodeType());\n        assertEquals(\"foo\", nl.item(0).getNodeValue());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/XMLFragmentTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"},{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testNestedChildren() {\n        XMLFragment x =\n            (XMLFragment) getProject().getReference(\"with-children\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(3, nl.getLength());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(0).getNodeType());\n        Element child1 = (Element) nl.item(0);\n        assertEquals(\"child1\", child1.getTagName());\n        assertTrue(!child1.hasAttributes());\n        NodeList nl2 = child1.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.TEXT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"foo\", nl2.item(0).getNodeValue());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(1).getNodeType());\n        Element child2 = (Element) nl.item(1);\n        assertEquals(\"child2\", child2.getTagName());\n        assertTrue(child2.hasAttributes());\n        nl2 = child2.getChildNodes();\n        assertEquals(0, nl2.getLength());\n        assertEquals(\"bar\", child2.getAttribute(\"foo\"));\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(2).getNodeType());\n        Element child3 = (Element) nl.item(2);\n        assertEquals(\"child3\", child3.getTagName());\n        assertTrue(!child3.hasAttributes());\n        nl2 = child3.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.ELEMENT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"child4\", ((Element) nl2.item(0)).getTagName());\n    }\n","date":"2006-09-22 03:10:48","endLine":81,"groupId":"7039","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestedChildren","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f1/39d605a21d70f06b2d64f8aa2cb5db65d8a957.src","preCode":"    public void testNestedChildren() {\n        XMLFragment x =\n            (XMLFragment) getProject().getReference(\"with-children\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(3, nl.getLength());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(0).getNodeType());\n        Element child1 = (Element) nl.item(0);\n        assertEquals(\"child1\", child1.getTagName());\n        assertTrue(!child1.hasAttributes());\n        NodeList nl2 = child1.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.TEXT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"foo\", nl2.item(0).getNodeValue());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(1).getNodeType());\n        Element child2 = (Element) nl.item(1);\n        assertEquals(\"child2\", child2.getTagName());\n        assertTrue(child2.hasAttributes());\n        nl2 = child2.getChildNodes();\n        assertEquals(0, nl2.getLength());\n        assertEquals(\"bar\", child2.getAttribute(\"foo\"));\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(2).getNodeType());\n        Element child3 = (Element) nl.item(2);\n        assertEquals(\"child3\", child3.getTagName());\n        assertTrue(!child3.hasAttributes());\n        nl2 = child3.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.ELEMENT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"child4\", ((Element) nl2.item(0)).getTagName());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/XMLFragmentTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"73d66d2c6d6e0384fd66eba1f20ef97469c49b18","commitMessage":"@@@Restructuring to allow junit and antunit tests both.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@448636 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-09-22 03:10:48","modifiedFileCount":"0","status":"B","submitter":"Matthew Jason Benson"},{"authorTime":"2014-04-19 05:00:38","codes":[{"authorDate":"2014-04-19 05:00:38","commitOrder":2,"curCode":"    public void testNestedText() {\n        XMLFragment x = (XMLFragment) buildRule.getProject().getReference(\"nested-text\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(1, nl.getLength());\n        assertEquals(Node.TEXT_NODE, nl.item(0).getNodeType());\n        assertEquals(\"foo\", nl.item(0).getNodeValue());\n    }\n","date":"2014-04-19 05:00:38","endLine":53,"groupId":"7039","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNestedText","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0a/c938f04f0bb7ca0070eaa31a288b13abfb62a0.src","preCode":"    public void testNestedText() {\n        XMLFragment x = (XMLFragment) getProject().getReference(\"nested-text\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(1, nl.getLength());\n        assertEquals(Node.TEXT_NODE, nl.item(0).getNodeType());\n        assertEquals(\"foo\", nl.item(0).getNodeValue());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/XMLFragmentTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2014-04-19 05:00:38","commitOrder":2,"curCode":"    public void testNestedChildren() {\n        XMLFragment x =\n            (XMLFragment) buildRule.getProject().getReference(\"with-children\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(3, nl.getLength());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(0).getNodeType());\n        Element child1 = (Element) nl.item(0);\n        assertEquals(\"child1\", child1.getTagName());\n        assertTrue(!child1.hasAttributes());\n        NodeList nl2 = child1.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.TEXT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"foo\", nl2.item(0).getNodeValue());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(1).getNodeType());\n        Element child2 = (Element) nl.item(1);\n        assertEquals(\"child2\", child2.getTagName());\n        assertTrue(child2.hasAttributes());\n        nl2 = child2.getChildNodes();\n        assertEquals(0, nl2.getLength());\n        assertEquals(\"bar\", child2.getAttribute(\"foo\"));\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(2).getNodeType());\n        Element child3 = (Element) nl.item(2);\n        assertEquals(\"child3\", child3.getTagName());\n        assertTrue(!child3.hasAttributes());\n        nl2 = child3.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.ELEMENT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"child4\", ((Element) nl2.item(0)).getTagName());\n    }\n","date":"2014-04-19 05:00:38","endLine":90,"groupId":"7039","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestedChildren","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0a/c938f04f0bb7ca0070eaa31a288b13abfb62a0.src","preCode":"    public void testNestedChildren() {\n        XMLFragment x =\n            (XMLFragment) getProject().getReference(\"with-children\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(3, nl.getLength());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(0).getNodeType());\n        Element child1 = (Element) nl.item(0);\n        assertEquals(\"child1\", child1.getTagName());\n        assertTrue(!child1.hasAttributes());\n        NodeList nl2 = child1.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.TEXT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"foo\", nl2.item(0).getNodeValue());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(1).getNodeType());\n        Element child2 = (Element) nl.item(1);\n        assertEquals(\"child2\", child2.getTagName());\n        assertTrue(child2.hasAttributes());\n        nl2 = child2.getChildNodes();\n        assertEquals(0, nl2.getLength());\n        assertEquals(\"bar\", child2.getAttribute(\"foo\"));\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(2).getNodeType());\n        Element child3 = (Element) nl.item(2);\n        assertEquals(\"child3\", child3.getTagName());\n        assertTrue(!child3.hasAttributes());\n        nl2 = child3.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.ELEMENT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"child4\", ((Element) nl2.item(0)).getTagName());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/XMLFragmentTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"b61c80746dd5df73899390826e197d2656784f91","commitMessage":"@@@Test improvements: convert to JUnit4.  improved error testing and remove sleeps\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1588563 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-19 05:00:38","modifiedFileCount":"268","status":"M","submitter":"mclarke"},{"authorTime":"2018-04-02 02:07:39","codes":[{"authorDate":"2018-04-02 02:07:39","commitOrder":3,"curCode":"    public void testNestedText() {\n        XMLFragment x = buildRule.getProject().getReference(\"nested-text\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(1, nl.getLength());\n        assertEquals(Node.TEXT_NODE, nl.item(0).getNodeType());\n        assertEquals(\"foo\", nl.item(0).getNodeValue());\n    }\n","date":"2018-04-02 02:07:39","endLine":53,"groupId":"7039","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNestedText","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/74/467851e434ffd72ebe1025346b8ededcf2d087.src","preCode":"    public void testNestedText() {\n        XMLFragment x = (XMLFragment) buildRule.getProject().getReference(\"nested-text\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(1, nl.getLength());\n        assertEquals(Node.TEXT_NODE, nl.item(0).getNodeType());\n        assertEquals(\"foo\", nl.item(0).getNodeValue());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/XMLFragmentTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2018-04-02 02:07:39","commitOrder":3,"curCode":"    public void testNestedChildren() {\n        XMLFragment x =\n                buildRule.getProject().getReference(\"with-children\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(3, nl.getLength());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(0).getNodeType());\n        Element child1 = (Element) nl.item(0);\n        assertEquals(\"child1\", child1.getTagName());\n        assertTrue(!child1.hasAttributes());\n        NodeList nl2 = child1.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.TEXT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"foo\", nl2.item(0).getNodeValue());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(1).getNodeType());\n        Element child2 = (Element) nl.item(1);\n        assertEquals(\"child2\", child2.getTagName());\n        assertTrue(child2.hasAttributes());\n        nl2 = child2.getChildNodes();\n        assertEquals(0, nl2.getLength());\n        assertEquals(\"bar\", child2.getAttribute(\"foo\"));\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(2).getNodeType());\n        Element child3 = (Element) nl.item(2);\n        assertEquals(\"child3\", child3.getTagName());\n        assertTrue(!child3.hasAttributes());\n        nl2 = child3.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.ELEMENT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"child4\", ((Element) nl2.item(0)).getTagName());\n    }\n","date":"2018-04-02 02:07:39","endLine":90,"groupId":"7039","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestedChildren","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/74/467851e434ffd72ebe1025346b8ededcf2d087.src","preCode":"    public void testNestedChildren() {\n        XMLFragment x =\n            (XMLFragment) buildRule.getProject().getReference(\"with-children\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(3, nl.getLength());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(0).getNodeType());\n        Element child1 = (Element) nl.item(0);\n        assertEquals(\"child1\", child1.getTagName());\n        assertTrue(!child1.hasAttributes());\n        NodeList nl2 = child1.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.TEXT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"foo\", nl2.item(0).getNodeValue());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(1).getNodeType());\n        Element child2 = (Element) nl.item(1);\n        assertEquals(\"child2\", child2.getTagName());\n        assertTrue(child2.hasAttributes());\n        nl2 = child2.getChildNodes();\n        assertEquals(0, nl2.getLength());\n        assertEquals(\"bar\", child2.getAttribute(\"foo\"));\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(2).getNodeType());\n        Element child3 = (Element) nl.item(2);\n        assertEquals(\"child3\", child3.getTagName());\n        assertTrue(!child3.hasAttributes());\n        nl2 = child3.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.ELEMENT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"child4\", ((Element) nl2.item(0)).getTagName());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/XMLFragmentTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"95495d57aa5cca8fc350ebfb10f6d390f40290cb","commitMessage":"@@@Remove extraneous casts and (un)boxing.  tersify logic","date":"2018-04-02 02:07:39","modifiedFileCount":"178","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-03 15:27:18","codes":[{"authorDate":"2018-04-03 15:27:18","commitOrder":4,"curCode":"    public void testNestedText() {\n        XMLFragment x = buildRule.getProject().getReference(\"nested-text\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertFalse(\"No attributes\", n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(1, nl.getLength());\n        assertEquals(Node.TEXT_NODE, nl.item(0).getNodeType());\n        assertEquals(\"foo\", nl.item(0).getNodeValue());\n    }\n","date":"2018-04-03 15:27:18","endLine":54,"groupId":"7039","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testNestedText","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/57/6ec770c2d4c7c2c52b828e85bb2dc871270d7d.src","preCode":"    public void testNestedText() {\n        XMLFragment x = buildRule.getProject().getReference(\"nested-text\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(1, nl.getLength());\n        assertEquals(Node.TEXT_NODE, nl.item(0).getNodeType());\n        assertEquals(\"foo\", nl.item(0).getNodeValue());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/XMLFragmentTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2018-04-03 15:27:18","commitOrder":4,"curCode":"    public void testNestedChildren() {\n        XMLFragment x =\n                buildRule.getProject().getReference(\"with-children\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertFalse(\"No attributes\", n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(3, nl.getLength());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(0).getNodeType());\n        Element child1 = (Element) nl.item(0);\n        assertEquals(\"child1\", child1.getTagName());\n        assertTrue(!child1.hasAttributes());\n        NodeList nl2 = child1.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.TEXT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"foo\", nl2.item(0).getNodeValue());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(1).getNodeType());\n        Element child2 = (Element) nl.item(1);\n        assertEquals(\"child2\", child2.getTagName());\n        assertTrue(child2.hasAttributes());\n        nl2 = child2.getChildNodes();\n        assertEquals(0, nl2.getLength());\n        assertEquals(\"bar\", child2.getAttribute(\"foo\"));\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(2).getNodeType());\n        Element child3 = (Element) nl.item(2);\n        assertEquals(\"child3\", child3.getTagName());\n        assertTrue(!child3.hasAttributes());\n        nl2 = child3.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.ELEMENT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"child4\", ((Element) nl2.item(0)).getTagName());\n    }\n","date":"2018-04-03 15:27:18","endLine":91,"groupId":"7039","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestedChildren","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/57/6ec770c2d4c7c2c52b828e85bb2dc871270d7d.src","preCode":"    public void testNestedChildren() {\n        XMLFragment x =\n                buildRule.getProject().getReference(\"with-children\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertTrue(\"No attributes\", !n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(3, nl.getLength());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(0).getNodeType());\n        Element child1 = (Element) nl.item(0);\n        assertEquals(\"child1\", child1.getTagName());\n        assertTrue(!child1.hasAttributes());\n        NodeList nl2 = child1.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.TEXT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"foo\", nl2.item(0).getNodeValue());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(1).getNodeType());\n        Element child2 = (Element) nl.item(1);\n        assertEquals(\"child2\", child2.getTagName());\n        assertTrue(child2.hasAttributes());\n        nl2 = child2.getChildNodes();\n        assertEquals(0, nl2.getLength());\n        assertEquals(\"bar\", child2.getAttribute(\"foo\"));\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(2).getNodeType());\n        Element child3 = (Element) nl.item(2);\n        assertEquals(\"child3\", child3.getTagName());\n        assertTrue(!child3.hasAttributes());\n        nl2 = child3.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.ELEMENT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"child4\", ((Element) nl2.item(0)).getTagName());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/XMLFragmentTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"bd56d7b9c60bce356ee27a5684f44ff87b68ddb2","commitMessage":"@@@Simplify assertions","date":"2018-04-03 15:27:18","modifiedFileCount":"38","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-05 17:32:22","codes":[{"authorDate":"2018-04-03 15:27:18","commitOrder":5,"curCode":"    public void testNestedText() {\n        XMLFragment x = buildRule.getProject().getReference(\"nested-text\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertFalse(\"No attributes\", n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(1, nl.getLength());\n        assertEquals(Node.TEXT_NODE, nl.item(0).getNodeType());\n        assertEquals(\"foo\", nl.item(0).getNodeValue());\n    }\n","date":"2018-04-03 15:27:18","endLine":54,"groupId":"10339","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testNestedText","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/57/6ec770c2d4c7c2c52b828e85bb2dc871270d7d.src","preCode":"    public void testNestedText() {\n        XMLFragment x = buildRule.getProject().getReference(\"nested-text\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertFalse(\"No attributes\", n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(1, nl.getLength());\n        assertEquals(Node.TEXT_NODE, nl.item(0).getNodeType());\n        assertEquals(\"foo\", nl.item(0).getNodeValue());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/XMLFragmentTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"},{"authorDate":"2018-04-05 17:32:22","commitOrder":5,"curCode":"    public void testNestedChildren() {\n        XMLFragment x =\n                buildRule.getProject().getReference(\"with-children\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertFalse(\"No attributes\", n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(3, nl.getLength());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(0).getNodeType());\n        Element child1 = (Element) nl.item(0);\n        assertEquals(\"child1\", child1.getTagName());\n        assertFalse(child1.hasAttributes());\n        NodeList nl2 = child1.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.TEXT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"foo\", nl2.item(0).getNodeValue());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(1).getNodeType());\n        Element child2 = (Element) nl.item(1);\n        assertEquals(\"child2\", child2.getTagName());\n        assertTrue(child2.hasAttributes());\n        nl2 = child2.getChildNodes();\n        assertEquals(0, nl2.getLength());\n        assertEquals(\"bar\", child2.getAttribute(\"foo\"));\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(2).getNodeType());\n        Element child3 = (Element) nl.item(2);\n        assertEquals(\"child3\", child3.getTagName());\n        assertFalse(child3.hasAttributes());\n        nl2 = child3.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.ELEMENT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"child4\", ((Element) nl2.item(0)).getTagName());\n    }\n","date":"2018-04-05 17:32:22","endLine":91,"groupId":"10339","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestedChildren","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/39/67f2572bbfd03e1a1353df87ee4be6b3276b92.src","preCode":"    public void testNestedChildren() {\n        XMLFragment x =\n                buildRule.getProject().getReference(\"with-children\");\n        assertNotNull(x);\n        Node n = x.getFragment();\n        assertFalse(\"No attributes\", n.hasAttributes());\n        NodeList nl = n.getChildNodes();\n        assertEquals(3, nl.getLength());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(0).getNodeType());\n        Element child1 = (Element) nl.item(0);\n        assertEquals(\"child1\", child1.getTagName());\n        assertTrue(!child1.hasAttributes());\n        NodeList nl2 = child1.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.TEXT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"foo\", nl2.item(0).getNodeValue());\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(1).getNodeType());\n        Element child2 = (Element) nl.item(1);\n        assertEquals(\"child2\", child2.getTagName());\n        assertTrue(child2.hasAttributes());\n        nl2 = child2.getChildNodes();\n        assertEquals(0, nl2.getLength());\n        assertEquals(\"bar\", child2.getAttribute(\"foo\"));\n\n        assertEquals(Node.ELEMENT_NODE, nl.item(2).getNodeType());\n        Element child3 = (Element) nl.item(2);\n        assertEquals(\"child3\", child3.getTagName());\n        assertTrue(!child3.hasAttributes());\n        nl2 = child3.getChildNodes();\n        assertEquals(1, nl2.getLength());\n        assertEquals(Node.ELEMENT_NODE, nl2.item(0).getNodeType());\n        assertEquals(\"child4\", ((Element) nl2.item(0)).getTagName());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/XMLFragmentTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"f2459248f23aa439e2c5ab642d9d9d7e6cffc933","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/ant\n","date":"2018-04-05 17:32:22","modifiedFileCount":"138","status":"M","submitter":"Maarten Coene"}]
