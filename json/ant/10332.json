[{"authorTime":"2006-09-22 03:10:48","codes":[{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testNSOnElement() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElementNS(\"urn:foo\", \"root\");\n        root.setAttributeNS(\"urn:foo2\", \"bar\", \"baz\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w =\n            new DOMElementWriter(false,\n                                 DOMElementWriter.XmlNamespacePolicy\n                                 .ONLY_QUALIFY_ELEMENTS);\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root bar=\\\"baz\\\" xmlns=\\\"urn:foo\\\" />\"\n                     + StringUtils.LINE_SEP, sw.toString());\n    }\n","date":"2006-09-22 03:10:48","endLine":172,"groupId":"174","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNSOnElement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0e/6d62996f762bc4945696e7bab985d29b031a41.src","preCode":"    public void testNSOnElement() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElementNS(\"urn:foo\", \"root\");\n        root.setAttributeNS(\"urn:foo2\", \"bar\", \"baz\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w =\n            new DOMElementWriter(false,\n                                 DOMElementWriter.XmlNamespacePolicy\n                                 .ONLY_QUALIFY_ELEMENTS);\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root bar=\\\"baz\\\" xmlns=\\\"urn:foo\\\" />\"\n                     + StringUtils.LINE_SEP, sw.toString());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"},{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testNSGoesOutOfScope() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElementNS(\"urn:foo\", \"root\");\n        Element child = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child);\n        Element child2 = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child2);\n        Element grandChild = d.createElementNS(\"urn:foo2\", \"grandchild\");\n        child2.appendChild(grandChild);\n        Element child3 = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child3);\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w =\n            new DOMElementWriter(false,\n                                 DOMElementWriter.XmlNamespacePolicy\n                                 .ONLY_QUALIFY_ELEMENTS);\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root xmlns=\\\"urn:foo\\\">\"\n                     + StringUtils.LINE_SEP\n                     + \"  <ns0:child xmlns:ns0=\\\"urn:foo2\\\" />\"\n                     + StringUtils.LINE_SEP\n                     + \"  <ns1:child xmlns:ns1=\\\"urn:foo2\\\">\"\n                     + StringUtils.LINE_SEP\n                     + \"    <ns1:grandchild />\"\n                     + StringUtils.LINE_SEP\n                     + \"  </ns1:child>\"\n                     + StringUtils.LINE_SEP\n                     + \"  <ns2:child xmlns:ns2=\\\"urn:foo2\\\" />\"\n                     + StringUtils.LINE_SEP\n                      + \"</root>\"\n                     + StringUtils.LINE_SEP, sw.toString());\n    }\n","date":"2006-09-22 03:10:48","endLine":256,"groupId":"10470","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNSGoesOutOfScope","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0e/6d62996f762bc4945696e7bab985d29b031a41.src","preCode":"    public void testNSGoesOutOfScope() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElementNS(\"urn:foo\", \"root\");\n        Element child = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child);\n        Element child2 = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child2);\n        Element grandChild = d.createElementNS(\"urn:foo2\", \"grandchild\");\n        child2.appendChild(grandChild);\n        Element child3 = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child3);\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w =\n            new DOMElementWriter(false,\n                                 DOMElementWriter.XmlNamespacePolicy\n                                 .ONLY_QUALIFY_ELEMENTS);\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root xmlns=\\\"urn:foo\\\">\"\n                     + StringUtils.LINE_SEP\n                     + \"  <ns0:child xmlns:ns0=\\\"urn:foo2\\\" />\"\n                     + StringUtils.LINE_SEP\n                     + \"  <ns1:child xmlns:ns1=\\\"urn:foo2\\\">\"\n                     + StringUtils.LINE_SEP\n                     + \"    <ns1:grandchild />\"\n                     + StringUtils.LINE_SEP\n                     + \"  </ns1:child>\"\n                     + StringUtils.LINE_SEP\n                     + \"  <ns2:child xmlns:ns2=\\\"urn:foo2\\\" />\"\n                     + StringUtils.LINE_SEP\n                      + \"</root>\"\n                     + StringUtils.LINE_SEP, sw.toString());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"B"}],"commitId":"73d66d2c6d6e0384fd66eba1f20ef97469c49b18","commitMessage":"@@@Restructuring to allow junit and antunit tests both.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@448636 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-09-22 03:10:48","modifiedFileCount":"0","status":"B","submitter":"Matthew Jason Benson"},{"authorTime":"2018-04-27 15:58:46","codes":[{"authorDate":"2018-04-27 15:58:46","commitOrder":2,"curCode":"    public void testNSOnElement() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElementNS(\"urn:foo\", \"root\");\n        root.setAttributeNS(\"urn:foo2\", \"bar\", \"baz\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w = new DOMElementWriter(false,\n                DOMElementWriter.XmlNamespacePolicy.ONLY_QUALIFY_ELEMENTS);\n        w.write(root, sw, 0, \"  \");\n        assertEquals(String.format(\"<root bar=\\\"baz\\\" xmlns=\\\"urn:foo\\\" />%n\"), sw.toString());\n    }\n","date":"2018-04-27 22:49:32","endLine":201,"groupId":"10332","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNSOnElement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c5/b829b5906fa1f9204a14eff00f2443e9cbc4e3.src","preCode":"    public void testNSOnElement() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElementNS(\"urn:foo\", \"root\");\n        root.setAttributeNS(\"urn:foo2\", \"bar\", \"baz\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w =\n            new DOMElementWriter(false,\n                                 DOMElementWriter.XmlNamespacePolicy\n                                 .ONLY_QUALIFY_ELEMENTS);\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root bar=\\\"baz\\\" xmlns=\\\"urn:foo\\\" />\"\n                     + StringUtils.LINE_SEP, sw.toString());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"},{"authorDate":"2018-04-27 15:58:46","commitOrder":2,"curCode":"    public void testNSGoesOutOfScope() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElementNS(\"urn:foo\", \"root\");\n        Element child = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child);\n        Element child2 = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child2);\n        Element grandChild = d.createElementNS(\"urn:foo2\", \"grandchild\");\n        child2.appendChild(grandChild);\n        Element child3 = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child3);\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w = new DOMElementWriter(false,\n                DOMElementWriter.XmlNamespacePolicy.ONLY_QUALIFY_ELEMENTS);\n        w.write(root, sw, 0, \"  \");\n        assertEquals(String.format(\"<root xmlns=\\\"urn:foo\\\">%n\"\n                + \"  <ns0:child xmlns:ns0=\\\"urn:foo2\\\" />%n\"\n                + \"  <ns1:child xmlns:ns1=\\\"urn:foo2\\\">%n\"\n                + \"    <ns1:grandchild />%n\"\n                + \"  </ns1:child>%n\"\n                + \"  <ns2:child xmlns:ns2=\\\"urn:foo2\\\" />%n\"\n                + \"</root>%n\"), sw.toString());\n    }\n","date":"2018-04-27 22:49:32","endLine":268,"groupId":"10332","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNSGoesOutOfScope","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c5/b829b5906fa1f9204a14eff00f2443e9cbc4e3.src","preCode":"    public void testNSGoesOutOfScope() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElementNS(\"urn:foo\", \"root\");\n        Element child = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child);\n        Element child2 = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child2);\n        Element grandChild = d.createElementNS(\"urn:foo2\", \"grandchild\");\n        child2.appendChild(grandChild);\n        Element child3 = d.createElementNS(\"urn:foo2\", \"child\");\n        root.appendChild(child3);\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w =\n            new DOMElementWriter(false,\n                                 DOMElementWriter.XmlNamespacePolicy\n                                 .ONLY_QUALIFY_ELEMENTS);\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root xmlns=\\\"urn:foo\\\">\"\n                     + StringUtils.LINE_SEP\n                     + \"  <ns0:child xmlns:ns0=\\\"urn:foo2\\\" />\"\n                     + StringUtils.LINE_SEP\n                     + \"  <ns1:child xmlns:ns1=\\\"urn:foo2\\\">\"\n                     + StringUtils.LINE_SEP\n                     + \"    <ns1:grandchild />\"\n                     + StringUtils.LINE_SEP\n                     + \"  </ns1:child>\"\n                     + StringUtils.LINE_SEP\n                     + \"  <ns2:child xmlns:ns2=\\\"urn:foo2\\\" />\"\n                     + StringUtils.LINE_SEP\n                      + \"</root>\"\n                     + StringUtils.LINE_SEP, sw.toString());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"}],"commitId":"03bb68d6baa2323424aaaae932c6278d1c246de3","commitMessage":"@@@Deprecate StringUtils.LINE_SEP","date":"2018-04-27 22:49:32","modifiedFileCount":"43","status":"M","submitter":"Gintas Grigelionis"}]
