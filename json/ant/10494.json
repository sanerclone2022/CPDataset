[{"authorTime":"2009-02-01 00:14:58","codes":[{"authorDate":"2009-08-27 18:14:07","commitOrder":10,"curCode":"    protected boolean isUpToDate(FTPClient ftp, File localFile,\n                                 String remoteFile)\n        throws IOException, BuildException {\n        task.log(\"checking date for \" + remoteFile, Project.MSG_VERBOSE);\n\n        FTPFile[] files = ftp.listFiles(remoteFile);\n\n        \r\n        \r\n        if (files == null || files.length == 0) {\n            \r\n            \r\n\n            if (task.getAction() == FTPTask.SEND_FILES) {\n                task.log(\"Could not date test remote file: \" + remoteFile\n                         + \"assuming out of date.\", Project.MSG_VERBOSE);\n                return false;\n            } else {\n                throw new BuildException(\"could not date test remote file: \"\n                                         + ftp.getReplyString());\n            }\n        }\n\n        long remoteTimestamp = files[0].getTimestamp().getTime().getTime();\n        long localTimestamp = localFile.lastModified();\n        long adjustedRemoteTimestamp = remoteTimestamp + task.getTimeDiffMillis()\n            + task.getGranularityMillis();\n\n        StringBuffer msg;\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(localTimestamp)))\n                .append(\"] local\");\n        }\n        task.log(msg.toString(), Project.MSG_VERBOSE);\n\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(adjustedRemoteTimestamp)))\n                .append(\"] remote\");\n        }\n        if (remoteTimestamp != adjustedRemoteTimestamp) {\n            synchronized(TIMESTAMP_LOGGING_SDF) {\n                msg.append(\" - (raw: \")\n                    .append(TIMESTAMP_LOGGING_SDF.format(new Date(remoteTimestamp)))\n                    .append(\")\");\n            }\n        }\n        task.log(msg.toString(), Project.MSG_VERBOSE);\n\n        if (task.getAction() == FTPTask.SEND_FILES) {\n            return adjustedRemoteTimestamp >= localTimestamp;\n        } else {\n            return localTimestamp >= adjustedRemoteTimestamp;\n        }\n    }\n","date":"2009-08-27 18:14:07","endLine":1454,"groupId":"10562","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"isUpToDate","params":"(FTPClientftp@FilelocalFile@StringremoteFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3a/490e4782ed37f2c31e237802fb6132e360acca.src","preCode":"    protected boolean isUpToDate(FTPClient ftp, File localFile,\n                                 String remoteFile)\n        throws IOException, BuildException {\n        task.log(\"checking date for \" + remoteFile, Project.MSG_VERBOSE);\n\n        FTPFile[] files = ftp.listFiles(remoteFile);\n\n        \r\n        \r\n        if (files == null || files.length == 0) {\n            \r\n            \r\n\n            if (task.getAction() == FTPTask.SEND_FILES) {\n                task.log(\"Could not date test remote file: \" + remoteFile\n                         + \"assuming out of date.\", Project.MSG_VERBOSE);\n                return false;\n            } else {\n                throw new BuildException(\"could not date test remote file: \"\n                                         + ftp.getReplyString());\n            }\n        }\n\n        long remoteTimestamp = files[0].getTimestamp().getTime().getTime();\n        long localTimestamp = localFile.lastModified();\n        long adjustedRemoteTimestamp = remoteTimestamp + task.getTimeDiffMillis()\n            + task.getGranularityMillis();\n\n        StringBuffer msg;\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(localTimestamp)))\n                .append(\"] local\");\n        }\n        task.log(msg.toString(), Project.MSG_VERBOSE);\n\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(adjustedRemoteTimestamp)))\n                .append(\"] remote\");\n        }\n        if (remoteTimestamp != adjustedRemoteTimestamp) {\n            synchronized(TIMESTAMP_LOGGING_SDF) {\n                msg.append(\" - (raw: \")\n                    .append(TIMESTAMP_LOGGING_SDF.format(new Date(remoteTimestamp)))\n                    .append(\")\");\n            }\n        }\n        task.log(msg.toString(), Project.MSG_VERBOSE);\n\n        if (task.getAction() == FTPTask.SEND_FILES) {\n            return adjustedRemoteTimestamp >= localTimestamp;\n        } else {\n            return localTimestamp >= adjustedRemoteTimestamp;\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1399,"status":"B"},{"authorDate":"2009-02-01 00:14:58","commitOrder":10,"curCode":"    protected boolean isUpToDate(FTPClient ftp, File localFile,\n                                 String remoteFile)\n        throws IOException, BuildException {\n        log(\"checking date for \" + remoteFile, Project.MSG_VERBOSE);\n\n        FTPFile[] files = ftp.listFiles(remoteFile);\n\n        \r\n        \r\n        if (files == null || files.length == 0) {\n            \r\n            \r\n\n            if (action == SEND_FILES) {\n                log(\"Could not date test remote file: \" + remoteFile\n                    + \"assuming out of date.\", Project.MSG_VERBOSE);\n                return false;\n            } else {\n                throw new BuildException(\"could not date test remote file: \"\n                                         + ftp.getReplyString());\n            }\n        }\n\n        long remoteTimestamp = files[0].getTimestamp().getTime().getTime();\n        long localTimestamp = localFile.lastModified();\n        long adjustedRemoteTimestamp =\n            remoteTimestamp + this.timeDiffMillis + this.granularityMillis;\n\n        StringBuffer msg;\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(localTimestamp)))\n                .append(\"] local\");\n        }\n        log(msg.toString(), Project.MSG_VERBOSE);\n\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(adjustedRemoteTimestamp)))\n                .append(\"] remote\");\n        }\n        if (remoteTimestamp != adjustedRemoteTimestamp) {\n            synchronized(TIMESTAMP_LOGGING_SDF) {\n                msg.append(\" - (raw: \")\n                    .append(TIMESTAMP_LOGGING_SDF.format(new Date(remoteTimestamp)))\n                    .append(\")\");\n            }\n        }\n        log(msg.toString(), Project.MSG_VERBOSE);\n\n\n\n        if (this.action == SEND_FILES) {\n            return adjustedRemoteTimestamp >= localTimestamp;\n        } else {\n            return localTimestamp >= adjustedRemoteTimestamp;\n        }\n    }\n","date":"2009-02-01 00:14:58","endLine":2068,"groupId":"1058","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"isUpToDate","params":"(FTPClientftp@FilelocalFile@StringremoteFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6e/af9ede2e4801ac3d6a143d7056413d4c0b1f07.src","preCode":"    protected boolean isUpToDate(FTPClient ftp, File localFile,\n                                 String remoteFile)\n        throws IOException, BuildException {\n        log(\"checking date for \" + remoteFile, Project.MSG_VERBOSE);\n\n        FTPFile[] files = ftp.listFiles(remoteFile);\n\n        \r\n        \r\n        if (files == null || files.length == 0) {\n            \r\n            \r\n\n            if (action == SEND_FILES) {\n                log(\"Could not date test remote file: \" + remoteFile\n                    + \"assuming out of date.\", Project.MSG_VERBOSE);\n                return false;\n            } else {\n                throw new BuildException(\"could not date test remote file: \"\n                                         + ftp.getReplyString());\n            }\n        }\n\n        long remoteTimestamp = files[0].getTimestamp().getTime().getTime();\n        long localTimestamp = localFile.lastModified();\n        long adjustedRemoteTimestamp =\n            remoteTimestamp + this.timeDiffMillis + this.granularityMillis;\n\n        StringBuffer msg;\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(localTimestamp)))\n                .append(\"] local\");\n        }\n        log(msg.toString(), Project.MSG_VERBOSE);\n\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(adjustedRemoteTimestamp)))\n                .append(\"] remote\");\n        }\n        if (remoteTimestamp != adjustedRemoteTimestamp) {\n            synchronized(TIMESTAMP_LOGGING_SDF) {\n                msg.append(\" - (raw: \")\n                    .append(TIMESTAMP_LOGGING_SDF.format(new Date(remoteTimestamp)))\n                    .append(\")\");\n            }\n        }\n        log(msg.toString(), Project.MSG_VERBOSE);\n\n\n\n        if (this.action == SEND_FILES) {\n            return adjustedRemoteTimestamp >= localTimestamp;\n        } else {\n            return localTimestamp >= adjustedRemoteTimestamp;\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":2011,"status":"NB"}],"commitId":"d72413184949c04015b452cf9cdf36bf2107061f","commitMessage":"@@@refactored <ftp> so commons-net may be loaded via a separate classloader.  Based on patch by Greg Roodt in PR 45860.  Not really tested.  yet.  therefore I haven't changed defaults.properties so far\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@808350 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-08-27 18:14:07","modifiedFileCount":"3","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":11,"curCode":"    protected boolean isUpToDate(FTPClient ftp, File localFile,\n                                 String remoteFile)\n        throws IOException, BuildException {\n        task.log(\"checking date for \" + remoteFile, Project.MSG_VERBOSE);\n\n        FTPFile[] files = ftp.listFiles(remoteFile);\n\n        \r\n        \r\n        if (files == null || files.length == 0) {\n            \r\n            \r\n\n            if (task.getAction() == FTPTask.SEND_FILES) {\n                task.log(\"Could not date test remote file: \" + remoteFile\n                         + \"assuming out of date.\", Project.MSG_VERBOSE);\n                return false;\n            }\n            throw new BuildException(\"could not date test remote file: %s\",\n                ftp.getReplyString());\n        }\n\n        long remoteTimestamp = files[0].getTimestamp().getTime().getTime();\n        long localTimestamp = localFile.lastModified();\n        long adjustedRemoteTimestamp = remoteTimestamp + task.getTimeDiffMillis()\n            + task.getGranularityMillis();\n\n        StringBuilder msg;\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuilder(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(localTimestamp)))\n                .append(\"] local\");\n        }\n        task.log(msg.toString(), Project.MSG_VERBOSE);\n\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuilder(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(adjustedRemoteTimestamp)))\n                .append(\"] remote\");\n        }\n        if (remoteTimestamp != adjustedRemoteTimestamp) {\n            synchronized(TIMESTAMP_LOGGING_SDF) {\n                msg.append(\" - (raw: \")\n                    .append(TIMESTAMP_LOGGING_SDF.format(new Date(remoteTimestamp)))\n                    .append(\")\");\n            }\n        }\n        task.log(msg.toString(), Project.MSG_VERBOSE);\n\n        if (task.getAction() == FTPTask.SEND_FILES) {\n            return adjustedRemoteTimestamp >= localTimestamp;\n        }\n        return localTimestamp >= adjustedRemoteTimestamp;\n    }\n","date":"2017-04-13 23:15:22","endLine":1489,"groupId":"10494","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"isUpToDate","params":"(FTPClientftp@FilelocalFile@StringremoteFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f5/46b230ba9f5fd9068433aa8620bc9d58b1f599.src","preCode":"    protected boolean isUpToDate(FTPClient ftp, File localFile,\n                                 String remoteFile)\n        throws IOException, BuildException {\n        task.log(\"checking date for \" + remoteFile, Project.MSG_VERBOSE);\n\n        FTPFile[] files = ftp.listFiles(remoteFile);\n\n        \r\n        \r\n        if (files == null || files.length == 0) {\n            \r\n            \r\n\n            if (task.getAction() == FTPTask.SEND_FILES) {\n                task.log(\"Could not date test remote file: \" + remoteFile\n                         + \"assuming out of date.\", Project.MSG_VERBOSE);\n                return false;\n            } else {\n                throw new BuildException(\"could not date test remote file: \"\n                                         + ftp.getReplyString());\n            }\n        }\n\n        long remoteTimestamp = files[0].getTimestamp().getTime().getTime();\n        long localTimestamp = localFile.lastModified();\n        long adjustedRemoteTimestamp = remoteTimestamp + task.getTimeDiffMillis()\n            + task.getGranularityMillis();\n\n        StringBuffer msg;\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(localTimestamp)))\n                .append(\"] local\");\n        }\n        task.log(msg.toString(), Project.MSG_VERBOSE);\n\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(adjustedRemoteTimestamp)))\n                .append(\"] remote\");\n        }\n        if (remoteTimestamp != adjustedRemoteTimestamp) {\n            synchronized(TIMESTAMP_LOGGING_SDF) {\n                msg.append(\" - (raw: \")\n                    .append(TIMESTAMP_LOGGING_SDF.format(new Date(remoteTimestamp)))\n                    .append(\")\");\n            }\n        }\n        task.log(msg.toString(), Project.MSG_VERBOSE);\n\n        if (task.getAction() == FTPTask.SEND_FILES) {\n            return adjustedRemoteTimestamp >= localTimestamp;\n        } else {\n            return localTimestamp >= adjustedRemoteTimestamp;\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1436,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":11,"curCode":"    protected boolean isUpToDate(FTPClient ftp, File localFile,\n                                 String remoteFile)\n        throws IOException, BuildException {\n        log(\"checking date for \" + remoteFile, Project.MSG_VERBOSE);\n\n        FTPFile[] files = ftp.listFiles(remoteFile);\n\n        \r\n        \r\n        if (files == null || files.length == 0) {\n            \r\n            \r\n\n            if (action == SEND_FILES) {\n                log(\"Could not date test remote file: \" + remoteFile\n                    + \"assuming out of date.\", Project.MSG_VERBOSE);\n                return false;\n            }\n            throw new BuildException(\"could not date test remote file: %s\",\n                ftp.getReplyString());\n        }\n\n        long remoteTimestamp = files[0].getTimestamp().getTime().getTime();\n        long localTimestamp = localFile.lastModified();\n        long adjustedRemoteTimestamp =\n            remoteTimestamp + this.timeDiffMillis + this.granularityMillis;\n\n        StringBuilder msg;\n        synchronized (TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuilder(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(localTimestamp)))\n                .append(\"] local\");\n        }\n        log(msg.toString(), Project.MSG_VERBOSE);\n\n        synchronized (TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuilder(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF\n                    .format(new Date(adjustedRemoteTimestamp)))\n                .append(\"] remote\");\n        }\n        if (remoteTimestamp != adjustedRemoteTimestamp) {\n            synchronized (TIMESTAMP_LOGGING_SDF) {\n                msg.append(\" - (raw: \")\n                    .append(\n                        TIMESTAMP_LOGGING_SDF.format(new Date(remoteTimestamp)))\n                    .append(\")\");\n            }\n        }\n        log(msg.toString(), Project.MSG_VERBOSE);\n\n        if (this.action == SEND_FILES) {\n            return adjustedRemoteTimestamp >= localTimestamp;\n        }\n        return localTimestamp >= adjustedRemoteTimestamp;\n    }\n","date":"2017-04-13 23:15:22","endLine":2108,"groupId":"10494","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"isUpToDate","params":"(FTPClientftp@FilelocalFile@StringremoteFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/2a/5239022c4fbbf3e893d2c9ad7a4fcdd809cc5c.src","preCode":"    protected boolean isUpToDate(FTPClient ftp, File localFile,\n                                 String remoteFile)\n        throws IOException, BuildException {\n        log(\"checking date for \" + remoteFile, Project.MSG_VERBOSE);\n\n        FTPFile[] files = ftp.listFiles(remoteFile);\n\n        \r\n        \r\n        if (files == null || files.length == 0) {\n            \r\n            \r\n\n            if (action == SEND_FILES) {\n                log(\"Could not date test remote file: \" + remoteFile\n                    + \"assuming out of date.\", Project.MSG_VERBOSE);\n                return false;\n            } else {\n                throw new BuildException(\"could not date test remote file: \"\n                                         + ftp.getReplyString());\n            }\n        }\n\n        long remoteTimestamp = files[0].getTimestamp().getTime().getTime();\n        long localTimestamp = localFile.lastModified();\n        long adjustedRemoteTimestamp =\n            remoteTimestamp + this.timeDiffMillis + this.granularityMillis;\n\n        StringBuffer msg;\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(localTimestamp)))\n                .append(\"] local\");\n        }\n        log(msg.toString(), Project.MSG_VERBOSE);\n\n        synchronized(TIMESTAMP_LOGGING_SDF) {\n            msg = new StringBuffer(\"   [\")\n                .append(TIMESTAMP_LOGGING_SDF.format(new Date(adjustedRemoteTimestamp)))\n                .append(\"] remote\");\n        }\n        if (remoteTimestamp != adjustedRemoteTimestamp) {\n            synchronized(TIMESTAMP_LOGGING_SDF) {\n                msg.append(\" - (raw: \")\n                    .append(TIMESTAMP_LOGGING_SDF.format(new Date(remoteTimestamp)))\n                    .append(\")\");\n            }\n        }\n        log(msg.toString(), Project.MSG_VERBOSE);\n\n\n\n        if (this.action == SEND_FILES) {\n            return adjustedRemoteTimestamp >= localTimestamp;\n        } else {\n            return localTimestamp >= adjustedRemoteTimestamp;\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":2053,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"}]
