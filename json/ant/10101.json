[{"authorTime":"2018-08-13 04:07:06","codes":[{"authorDate":"2018-04-14 20:36:57","commitOrder":9,"curCode":"    public void testOverwriteTrue() {\n        buildRule.executeTarget(\"testSimpleScale\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        File f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        assumeTrue(\"Could not change file modification date\",\n                f.setLastModified(f.lastModified() - FILE_UTILS.getFileTimestampGranularity() * 2));\n        long lastModified = f.lastModified();\n        buildRule.executeTarget(\"testOverwriteTrue\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        long overwrittenLastModified = f.lastModified();\n        assertTrue(\"File was not overwritten.\", lastModified < overwrittenLastModified);\n    }\n","date":"2018-04-14 20:41:24","endLine":92,"groupId":"1643","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testOverwriteTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3f/da82c75199fb30a2c8141b66d440e9a188ec5b.src","preCode":"    public void testOverwriteTrue() {\n        buildRule.executeTarget(\"testSimpleScale\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        File f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        assumeTrue(\"Could not change file modification date\",\n                f.setLastModified(f.lastModified() - FILE_UTILS.getFileTimestampGranularity() * 2));\n        long lastModified = f.lastModified();\n        buildRule.executeTarget(\"testOverwriteTrue\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        long overwrittenLastModified = f.lastModified();\n        assertTrue(\"File was not overwritten.\", lastModified < overwrittenLastModified);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"NB"},{"authorDate":"2018-08-13 04:07:06","commitOrder":9,"curCode":"    public void testOverwriteTrue() {\n        buildRule.executeTarget(\"testSimpleScale\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        File f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        assumeTrue(\"Could not change file modification date\",\n                f.setLastModified(f.lastModified() - FILE_UTILS.getFileTimestampGranularity() * 2));\n        long lastModified = f.lastModified();\n        buildRule.executeTarget(\"testOverwriteTrue\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        long overwrittenLastModified = f.lastModified();\n        assertTrue(\"File was not overwritten.\", lastModified < overwrittenLastModified);\n    }\n","date":"2018-08-13 04:07:06","endLine":87,"groupId":"1643","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOverwriteTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c9/6691d0dd03c383fe1e1c9bb0d446494dcd46d8.src","preCode":"    public void testOverwriteTrue() {\n        buildRule.executeTarget(\"testSimpleScale\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        File f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        assumeTrue(\"Could not change file modification date\",\n                f.setLastModified(f.lastModified() - FILE_UTILS.getFileTimestampGranularity() * 2));\n        long lastModified = f.lastModified();\n        buildRule.executeTarget(\"testOverwriteTrue\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        long overwrittenLastModified = f.lastModified();\n        assertTrue(\"File was not overwritten.\", lastModified < overwrittenLastModified);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageIOTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"}],"commitId":"ed567daf3218575642d0a19b88ab2400f39ac579","commitMessage":"@@@ImageIO task (a replacement for Image task)","date":"2018-08-13 04:07:06","modifiedFileCount":"2","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-08-13 04:07:06","codes":[{"authorDate":"2019-08-26 12:57:20","commitOrder":10,"curCode":"    public void testOverwriteTrue() {\n        buildRule.executeTarget(\"testSimpleScale\");\n        assumeNotNull(\"JPEG codec is unavailable in classpath\",\n                buildRule.getProject().getProperty(\"jpeg.codec.available\"));\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        File f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        assumeTrue(\"Could not change file modification date\",\n                f.setLastModified(f.lastModified() - FILE_UTILS.getFileTimestampGranularity() * 2));\n        long lastModified = f.lastModified();\n        buildRule.executeTarget(\"testOverwriteTrue\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        long overwrittenLastModified = f.lastModified();\n        assertTrue(\"File was not overwritten.\", lastModified < overwrittenLastModified);\n    }\n","date":"2019-08-26 12:57:20","endLine":97,"groupId":"10101","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testOverwriteTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ce/fd4c0e587d8298a26b4103f2f1280505d3df4f.src","preCode":"    public void testOverwriteTrue() {\n        buildRule.executeTarget(\"testSimpleScale\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        File f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        assumeTrue(\"Could not change file modification date\",\n                f.setLastModified(f.lastModified() - FILE_UTILS.getFileTimestampGranularity() * 2));\n        long lastModified = f.lastModified();\n        buildRule.executeTarget(\"testOverwriteTrue\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        long overwrittenLastModified = f.lastModified();\n        assertTrue(\"File was not overwritten.\", lastModified < overwrittenLastModified);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2018-08-13 04:07:06","commitOrder":10,"curCode":"    public void testOverwriteTrue() {\n        buildRule.executeTarget(\"testSimpleScale\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        File f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        assumeTrue(\"Could not change file modification date\",\n                f.setLastModified(f.lastModified() - FILE_UTILS.getFileTimestampGranularity() * 2));\n        long lastModified = f.lastModified();\n        buildRule.executeTarget(\"testOverwriteTrue\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        long overwrittenLastModified = f.lastModified();\n        assertTrue(\"File was not overwritten.\", lastModified < overwrittenLastModified);\n    }\n","date":"2018-08-13 04:07:06","endLine":87,"groupId":"10101","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOverwriteTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c9/6691d0dd03c383fe1e1c9bb0d446494dcd46d8.src","preCode":"    public void testOverwriteTrue() {\n        buildRule.executeTarget(\"testSimpleScale\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        File f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        assumeTrue(\"Could not change file modification date\",\n                f.setLastModified(f.lastModified() - FILE_UTILS.getFileTimestampGranularity() * 2));\n        long lastModified = f.lastModified();\n        buildRule.executeTarget(\"testOverwriteTrue\");\n        assertThat(buildRule.getLog(), containsString(\"Processing File\"));\n        f = new File(buildRule.getOutputDir(), LARGEIMAGE);\n        long overwrittenLastModified = f.lastModified();\n        assertTrue(\"File was not overwritten.\", lastModified < overwrittenLastModified);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageIOTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"}],"commitId":"3a1ff0d804eca83d3ecdab35a47deac5f3cf9f9d","commitMessage":"@@@Skip ImageTest if JPEG codec from com/sun/image/codec isn't available in the Java runtime.\n\nOpenJDK even in Java 8 (update 222) doesn't include these codecs. Oracle JDK has it in\nJava 8.  but not in subsequent Java releases.\n","date":"2019-08-26 12:57:20","modifiedFileCount":"1","status":"M","submitter":"Jaikiran Pai"}]
