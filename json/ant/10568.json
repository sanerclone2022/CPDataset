[{"authorTime":"2012-08-21 01:49:13","codes":[{"authorDate":"2012-09-16 21:42:41","commitOrder":4,"curCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !\"\".equals(processorClassName)) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            try {\n                isr.close();\n            } catch (IOException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","date":"2012-09-16 21:42:41","endLine":166,"groupId":"10276","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getProcessorByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/28/6433aa7df7e72e001d58682a3fcb81ffcf6b1a.src","preCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !\"\".equals(processorClassName)) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            try {\n                isr.close();\n            } catch (IOException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ArgumentProcessorRegistry.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"},{"authorDate":"2012-08-21 01:49:13","commitOrder":4,"curCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            InputStreamReader isr;\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !\"\".equals(helperClassName)) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err);\n            }\n        }\n        return null;\n    }\n","date":"2012-08-21 01:49:13","endLine":207,"groupId":"978","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectHelperByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f8/3c973269813718c0d4d6db990dfa9f0a37a600.src","preCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            InputStreamReader isr;\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !\"\".equals(helperClassName)) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err);\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ProjectHelperRepository.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"NB"}],"commitId":"eb08ea9fd094b675617320ddf8b66940644a8364","commitMessage":"@@@Add the possibility to register a custom command line argument processor\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1385262 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-09-16 21:42:41","modifiedFileCount":"1","status":"M","submitter":"Nicolas Lalevee"},{"authorTime":"2012-08-21 01:49:13","codes":[{"authorDate":"2016-03-28 20:08:39","commitOrder":5,"curCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !\"\".equals(processorClassName)) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            FileUtils.close(isr);\n        }\n        return null;\n    }\n","date":"2016-03-28 20:09:25","endLine":166,"groupId":"10276","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getProcessorByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ae/95c3b79967c5a260aef112a69f8caf9e09857d.src","preCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !\"\".equals(processorClassName)) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            try {\n                isr.close();\n            } catch (IOException e) {\n                \r\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ArgumentProcessorRegistry.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2012-08-21 01:49:13","commitOrder":5,"curCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            InputStreamReader isr;\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !\"\".equals(helperClassName)) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err);\n            }\n        }\n        return null;\n    }\n","date":"2012-08-21 01:49:13","endLine":207,"groupId":"978","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectHelperByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f8/3c973269813718c0d4d6db990dfa9f0a37a600.src","preCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            InputStreamReader isr;\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !\"\".equals(helperClassName)) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err);\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ProjectHelperRepository.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"N"}],"commitId":"48cdc84cc8c309dcc3bcfe61e6cc7a1700fa21ee","commitMessage":"@@@Merge branch '1.9.x'\n\nConflicts:\n\tsrc/main/org/apache/tools/zip/ZipFile.java\n","date":"2016-03-28 20:09:25","modifiedFileCount":"19","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2012-08-21 01:49:13","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":6,"curCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !\"\".equals(processorClassName)) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            FileUtils.close(isr);\n        }\n        return null;\n    }\n","date":"2017-04-13 23:15:22","endLine":167,"groupId":"10276","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getProcessorByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c3/78cd54acbc87ff64386f7cf0599f9c7141d361.src","preCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !\"\".equals(processorClassName)) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            FileUtils.close(isr);\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ArgumentProcessorRegistry.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2012-08-21 01:49:13","commitOrder":6,"curCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            InputStreamReader isr;\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !\"\".equals(helperClassName)) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err);\n            }\n        }\n        return null;\n    }\n","date":"2012-08-21 01:49:13","endLine":207,"groupId":"978","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectHelperByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f8/3c973269813718c0d4d6db990dfa9f0a37a600.src","preCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            InputStreamReader isr;\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !\"\".equals(helperClassName)) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err);\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ProjectHelperRepository.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"N"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"},{"authorTime":"2018-04-06 20:50:56","codes":[{"authorDate":"2018-04-06 20:50:56","commitOrder":7,"curCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !processorClassName.isEmpty()) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            FileUtils.close(isr);\n        }\n        return null;\n    }\n","date":"2018-04-06 20:50:56","endLine":167,"groupId":"10276","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getProcessorByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/29/f8edf534a54520605d4006b88492c7acece7d1.src","preCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !\"\".equals(processorClassName)) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            FileUtils.close(isr);\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ArgumentProcessorRegistry.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2018-04-06 20:50:56","commitOrder":7,"curCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            InputStreamReader isr;\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !helperClassName.isEmpty()) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err); \r\n            }\n        }\n        return null;\n    }\n","date":"2018-04-06 20:50:56","endLine":211,"groupId":"1965","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectHelperByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/74/a1bf7d73902148bc40355daa4e024279e8888f.src","preCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            InputStreamReader isr;\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !\"\".equals(helperClassName)) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err); \r\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ProjectHelperRepository.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"}],"commitId":"30f52135af7a18cbf3f140089e90bdb39ceee134","commitMessage":"@@@Use null-or-empty pattern","date":"2018-04-06 20:50:56","modifiedFileCount":"80","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-08-20 13:17:03","codes":[{"authorDate":"2018-08-20 13:17:03","commitOrder":8,"curCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            isr = new InputStreamReader(is, StandardCharsets.UTF_8);\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !processorClassName.isEmpty()) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            FileUtils.close(isr);\n        }\n        return null;\n    }\n","date":"2018-08-20 13:17:03","endLine":161,"groupId":"10276","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getProcessorByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c2/e0bbccad0b18ceaa22322e96bc62a404828940.src","preCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !processorClassName.isEmpty()) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            FileUtils.close(isr);\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ArgumentProcessorRegistry.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"},{"authorDate":"2018-08-20 13:17:03","commitOrder":8,"curCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            InputStreamReader isr;\n            isr = new InputStreamReader(is, StandardCharsets.UTF_8);\n            BufferedReader rd = new BufferedReader(isr);\n\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !helperClassName.isEmpty()) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err); \r\n            }\n        }\n        return null;\n    }\n","date":"2018-08-20 13:17:03","endLine":202,"groupId":"1965","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectHelperByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/53/2374b56c4487f6581d85fb9e52f9d94695a159.src","preCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            InputStreamReader isr;\n            try {\n                isr = new InputStreamReader(is, \"UTF-8\");\n            } catch (java.io.UnsupportedEncodingException e) {\n                isr = new InputStreamReader(is);\n            }\n            BufferedReader rd = new BufferedReader(isr);\n\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !helperClassName.isEmpty()) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err); \r\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ProjectHelperRepository.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"}],"commitId":"16d0f4d811220bf60b27d6402a7732bbaec81186","commitMessage":"@@@Use StandardCharsets","date":"2018-08-20 13:17:03","modifiedFileCount":"32","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-08-20 13:27:40","codes":[{"authorDate":"2018-08-20 13:17:03","commitOrder":9,"curCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            isr = new InputStreamReader(is, StandardCharsets.UTF_8);\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !processorClassName.isEmpty()) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            FileUtils.close(isr);\n        }\n        return null;\n    }\n","date":"2018-08-20 13:17:03","endLine":161,"groupId":"10276","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getProcessorByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c2/e0bbccad0b18ceaa22322e96bc62a404828940.src","preCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            isr = new InputStreamReader(is, StandardCharsets.UTF_8);\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !processorClassName.isEmpty()) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            FileUtils.close(isr);\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ArgumentProcessorRegistry.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"N"},{"authorDate":"2018-08-20 13:27:40","commitOrder":9,"curCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            BufferedReader rd = new BufferedReader(new InputStreamReader(is,\n                    StandardCharsets.UTF_8));\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !helperClassName.isEmpty()) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err); \r\n            }\n        }\n        return null;\n    }\n","date":"2018-08-20 13:27:40","endLine":200,"groupId":"1965","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectHelperByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/d4/0418684836d51bd22d5ca02f548678ac70de3a.src","preCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            InputStreamReader isr;\n            isr = new InputStreamReader(is, StandardCharsets.UTF_8);\n            BufferedReader rd = new BufferedReader(isr);\n\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !helperClassName.isEmpty()) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err); \r\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ProjectHelperRepository.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"}],"commitId":"77cd591b636d6b3fbb1e33421a7048d696d431ac","commitMessage":"@@@Remove redundancies","date":"2018-08-20 13:27:40","modifiedFileCount":"17","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-08-20 13:27:40","codes":[{"authorDate":"2018-11-17 18:46:26","commitOrder":10,"curCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        try (BufferedReader rd = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8))) {\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !processorClassName.isEmpty()) {\n                return getProcessor(processorClassName);\n            }\n        }\n        return null;\n    }\n","date":"2018-11-17 18:46:26","endLine":155,"groupId":"6527","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getProcessorByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/fa/58f4e0ed248e2458b95eedb4579ac0149633d3.src","preCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        InputStreamReader isr = null;\n        try {\n            isr = new InputStreamReader(is, StandardCharsets.UTF_8);\n            BufferedReader rd = new BufferedReader(isr);\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !processorClassName.isEmpty()) {\n                return getProcessor(processorClassName);\n            }\n        } finally {\n            FileUtils.close(isr);\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ArgumentProcessorRegistry.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2018-08-20 13:27:40","commitOrder":10,"curCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            BufferedReader rd = new BufferedReader(new InputStreamReader(is,\n                    StandardCharsets.UTF_8));\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !helperClassName.isEmpty()) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err); \r\n            }\n        }\n        return null;\n    }\n","date":"2018-08-20 13:27:40","endLine":200,"groupId":"1965","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectHelperByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/d4/0418684836d51bd22d5ca02f548678ac70de3a.src","preCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            BufferedReader rd = new BufferedReader(new InputStreamReader(is,\n                    StandardCharsets.UTF_8));\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !helperClassName.isEmpty()) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err); \r\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ProjectHelperRepository.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"N"}],"commitId":"1e30b48a0ef0977f0daa492ee7d811c40d589e6e","commitMessage":"@@@Use try-with-resources","date":"2018-11-17 18:46:26","modifiedFileCount":"16","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2020-07-29 18:45:00","codes":[{"authorDate":"2018-11-17 18:46:26","commitOrder":11,"curCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        try (BufferedReader rd = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8))) {\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !processorClassName.isEmpty()) {\n                return getProcessor(processorClassName);\n            }\n        }\n        return null;\n    }\n","date":"2018-11-17 18:46:26","endLine":155,"groupId":"10568","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"getProcessorByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/fa/58f4e0ed248e2458b95eedb4579ac0149633d3.src","preCode":"    private ArgumentProcessor getProcessorByService(InputStream is)\n            throws IOException {\n        try (BufferedReader rd = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8))) {\n            String processorClassName = rd.readLine();\n            if (processorClassName != null && !processorClassName.isEmpty()) {\n                return getProcessor(processorClassName);\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ArgumentProcessorRegistry.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"N"},{"authorDate":"2020-07-29 18:45:00","commitOrder":11,"curCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            BufferedReader rd = new BufferedReader(new InputStreamReader(is,\n                    StandardCharsets.UTF_8));\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !helperClassName.isEmpty()) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + MagicNames.PROJECT_HELPER_SERVICE + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err); \r\n            }\n        }\n        return null;\n    }\n","date":"2020-07-29 18:45:00","endLine":200,"groupId":"10568","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"getProjectHelperByService","params":"(InputStreamis)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8b/ee97f91dd70bd02f11ebaeecdd3967c85cd38b.src","preCode":"    private Constructor<? extends ProjectHelper> getProjectHelperByService(InputStream is) {\n        try {\n            \r\n            \r\n            BufferedReader rd = new BufferedReader(new InputStreamReader(is,\n                    StandardCharsets.UTF_8));\n            String helperClassName = rd.readLine();\n            rd.close();\n\n            if (helperClassName != null && !helperClassName.isEmpty()) {\n                return getHelperConstructor(helperClassName);\n            }\n        } catch (Exception e) {\n            System.out.println(\"Unable to load ProjectHelper from service \"\n                    + ProjectHelper.SERVICE_ID + \" (\" + e.getMessage() + \")\");\n            if (DEBUG) {\n                e.printStackTrace(System.err); \r\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/org/apache/tools/ant/ProjectHelperRepository.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"}],"commitId":"c8ea918a7b160195603f04788d0d2739449f9965","commitMessage":"@@@Merge pull request #132 from twogee/magic-names-redux\n\nMore MagicNames","date":"2020-07-29 18:45:00","modifiedFileCount":"19","status":"M","submitter":"Stefan Bodewig"}]
