[{"authorTime":"2017-07-23 22:21:30","codes":[{"authorDate":"2017-07-23 22:21:30","commitOrder":1,"curCode":"    public void testCopyToSymlinkedSelf() throws Exception {\n        \r\n        Assume.assumeTrue(\"Symlinks not supported on this operating system\", Os.isFamily(Os.FAMILY_UNIX));\n\n        \r\n        buildRule.executeTarget(\"setupSelfCopyTesting\");\n        final File testDir = new File(buildRule.getProject().getProperty(\"self.copy.test.root.dir\"));\n        Assert.assertTrue(testDir + \" was expected to be a directory\", testDir.isDirectory());\n        final File srcFile = new File(testDir, \"file.txt\");\n        Assert.assertTrue(\"Source file \" + srcFile + \" was expected to be a file\", srcFile.isFile());\n        final long originalFileSize = srcFile.length();\n        final String originalContent;\n        final BufferedReader reader = new BufferedReader(new FileReader(srcFile));\n        try {\n            originalContent = FileUtils.readFully(reader);\n        } finally {\n            reader.close();\n        }\n        Assert.assertTrue(\"Content missing in file \" + srcFile, originalContent != null && originalContent.length() > 0);\n\n        \r\n        buildRule.executeTarget(\"testSelfCopy\");\n        \r\n        assertSizeAndContent(srcFile, originalFileSize, originalContent);\n        final File symlinkedFile = new File(testDir, \"sylmink-file.txt\");\n        Assert.assertTrue(symlinkedFile + \" was expected to be a file\", symlinkedFile.isFile());\n        assertSizeAndContent(symlinkedFile, originalFileSize, originalContent);\n\n        final File symlinkedTestDir = new File(buildRule.getProject().getProperty(\"self.copy.test.symlinked.dir\"));\n        Assert.assertTrue(symlinkedTestDir + \" was expected to be a directory\", symlinkedTestDir.isDirectory());\n        assertSizeAndContent(new File(symlinkedTestDir, \"file.txt\"), originalFileSize, originalContent);\n        assertSizeAndContent(new File(symlinkedTestDir, \"sylmink-file.txt\"), originalFileSize, originalContent);\n\n    }\n","date":"2017-09-28 21:14:04","endLine":325,"groupId":"8516","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCopyToSymlinkedSelf","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/71/9bc445646727900ccf5d1a5c431864c92c78fe.src","preCode":"    public void testCopyToSymlinkedSelf() throws Exception {\n        \r\n        Assume.assumeTrue(\"Symlinks not supported on this operating system\", Os.isFamily(Os.FAMILY_UNIX));\n\n        \r\n        buildRule.executeTarget(\"setupSelfCopyTesting\");\n        final File testDir = new File(buildRule.getProject().getProperty(\"self.copy.test.root.dir\"));\n        Assert.assertTrue(testDir + \" was expected to be a directory\", testDir.isDirectory());\n        final File srcFile = new File(testDir, \"file.txt\");\n        Assert.assertTrue(\"Source file \" + srcFile + \" was expected to be a file\", srcFile.isFile());\n        final long originalFileSize = srcFile.length();\n        final String originalContent;\n        final BufferedReader reader = new BufferedReader(new FileReader(srcFile));\n        try {\n            originalContent = FileUtils.readFully(reader);\n        } finally {\n            reader.close();\n        }\n        Assert.assertTrue(\"Content missing in file \" + srcFile, originalContent != null && originalContent.length() > 0);\n\n        \r\n        buildRule.executeTarget(\"testSelfCopy\");\n        \r\n        assertSizeAndContent(srcFile, originalFileSize, originalContent);\n        final File symlinkedFile = new File(testDir, \"sylmink-file.txt\");\n        Assert.assertTrue(symlinkedFile + \" was expected to be a file\", symlinkedFile.isFile());\n        assertSizeAndContent(symlinkedFile, originalFileSize, originalContent);\n\n        final File symlinkedTestDir = new File(buildRule.getProject().getProperty(\"self.copy.test.symlinked.dir\"));\n        Assert.assertTrue(symlinkedTestDir + \" was expected to be a directory\", symlinkedTestDir.isDirectory());\n        assertSizeAndContent(new File(symlinkedTestDir, \"file.txt\"), originalFileSize, originalContent);\n        assertSizeAndContent(new File(symlinkedTestDir, \"sylmink-file.txt\"), originalFileSize, originalContent);\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"B"},{"authorDate":"2017-07-23 22:21:30","commitOrder":1,"curCode":"    private void assertSizeAndContent(final File file, final long expectedSize, final String expectedContent) throws IOException {\n        Assert.assertTrue(file + \" was expected to be a file\", file.isFile());\n        Assert.assertEquals(\"Unexpected size of file \" + file, expectedSize, file.length());\n        final BufferedReader reader = new BufferedReader(new FileReader(file));\n        final String content;\n        try {\n            content = FileUtils.readFully(reader);\n        } finally {\n            reader.close();\n        }\n        Assert.assertEquals(\"Unexpected content in file \" + file, expectedContent, content);\n    }\n","date":"2017-09-28 21:14:04","endLine":338,"groupId":"1290","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSizeAndContent","params":"(finalFilefile@finallongexpectedSize@finalStringexpectedContent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/71/9bc445646727900ccf5d1a5c431864c92c78fe.src","preCode":"    private void assertSizeAndContent(final File file, final long expectedSize, final String expectedContent) throws IOException {\n        Assert.assertTrue(file + \" was expected to be a file\", file.isFile());\n        Assert.assertEquals(\"Unexpected size of file \" + file, expectedSize, file.length());\n        final BufferedReader reader = new BufferedReader(new FileReader(file));\n        final String content;\n        try {\n            content = FileUtils.readFully(reader);\n        } finally {\n            reader.close();\n        }\n        Assert.assertEquals(\"Unexpected content in file \" + file, expectedContent, content);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"B"}],"commitId":"20f9491557d0ba48697a1e5ad61823f87ace0a8b","commitMessage":"@@@BZ-60644 Skip copying files.  to avoid corrupting source files.  if the source file and dest file are symlinked to each other\n","date":"2017-09-28 21:14:04","modifiedFileCount":"2","status":"B","submitter":"Jaikiran Pai"},{"authorTime":"2018-04-02 04:06:44","codes":[{"authorDate":"2018-04-02 04:06:44","commitOrder":2,"curCode":"    public void testCopyToSymlinkedSelf() throws Exception {\n        \r\n        assumeTrue(\"Symlinks not supported on this operating system\", Os.isFamily(Os.FAMILY_UNIX));\n\n        \r\n        buildRule.executeTarget(\"setupSelfCopyTesting\");\n        final File testDir = new File(buildRule.getProject().getProperty(\"self.copy.test.root.dir\"));\n        assertTrue(testDir + \" was expected to be a directory\", testDir.isDirectory());\n        final File srcFile = new File(testDir, \"file.txt\");\n        assertTrue(\"Source file \" + srcFile + \" was expected to be a file\", srcFile.isFile());\n        final long originalFileSize = srcFile.length();\n        final String originalContent;\n        final BufferedReader reader = new BufferedReader(new FileReader(srcFile));\n        try {\n            originalContent = FileUtils.readFully(reader);\n        } finally {\n            reader.close();\n        }\n        assertTrue(\"Content missing in file \" + srcFile, originalContent != null && originalContent.length() > 0);\n\n        \r\n        buildRule.executeTarget(\"testSelfCopy\");\n        \r\n        assertSizeAndContent(srcFile, originalFileSize, originalContent);\n        final File symlinkedFile = new File(testDir, \"sylmink-file.txt\");\n        assertTrue(symlinkedFile + \" was expected to be a file\", symlinkedFile.isFile());\n        assertSizeAndContent(symlinkedFile, originalFileSize, originalContent);\n\n        final File symlinkedTestDir = new File(buildRule.getProject().getProperty(\"self.copy.test.symlinked.dir\"));\n        assertTrue(symlinkedTestDir + \" was expected to be a directory\", symlinkedTestDir.isDirectory());\n        assertSizeAndContent(new File(symlinkedTestDir, \"file.txt\"), originalFileSize, originalContent);\n        assertSizeAndContent(new File(symlinkedTestDir, \"sylmink-file.txt\"), originalFileSize, originalContent);\n\n    }\n","date":"2018-04-02 04:36:23","endLine":322,"groupId":"8516","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCopyToSymlinkedSelf","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/96/1a473db8db8a5db60cc5ad1517fe348cedfd0d.src","preCode":"    public void testCopyToSymlinkedSelf() throws Exception {\n        \r\n        Assume.assumeTrue(\"Symlinks not supported on this operating system\", Os.isFamily(Os.FAMILY_UNIX));\n\n        \r\n        buildRule.executeTarget(\"setupSelfCopyTesting\");\n        final File testDir = new File(buildRule.getProject().getProperty(\"self.copy.test.root.dir\"));\n        Assert.assertTrue(testDir + \" was expected to be a directory\", testDir.isDirectory());\n        final File srcFile = new File(testDir, \"file.txt\");\n        Assert.assertTrue(\"Source file \" + srcFile + \" was expected to be a file\", srcFile.isFile());\n        final long originalFileSize = srcFile.length();\n        final String originalContent;\n        final BufferedReader reader = new BufferedReader(new FileReader(srcFile));\n        try {\n            originalContent = FileUtils.readFully(reader);\n        } finally {\n            reader.close();\n        }\n        Assert.assertTrue(\"Content missing in file \" + srcFile, originalContent != null && originalContent.length() > 0);\n\n        \r\n        buildRule.executeTarget(\"testSelfCopy\");\n        \r\n        assertSizeAndContent(srcFile, originalFileSize, originalContent);\n        final File symlinkedFile = new File(testDir, \"sylmink-file.txt\");\n        Assert.assertTrue(symlinkedFile + \" was expected to be a file\", symlinkedFile.isFile());\n        assertSizeAndContent(symlinkedFile, originalFileSize, originalContent);\n\n        final File symlinkedTestDir = new File(buildRule.getProject().getProperty(\"self.copy.test.symlinked.dir\"));\n        Assert.assertTrue(symlinkedTestDir + \" was expected to be a directory\", symlinkedTestDir.isDirectory());\n        assertSizeAndContent(new File(symlinkedTestDir, \"file.txt\"), originalFileSize, originalContent);\n        assertSizeAndContent(new File(symlinkedTestDir, \"sylmink-file.txt\"), originalFileSize, originalContent);\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"},{"authorDate":"2018-04-02 04:06:44","commitOrder":2,"curCode":"    private void assertSizeAndContent(final File file, final long expectedSize, final String expectedContent) throws IOException {\n        assertTrue(file + \" was expected to be a file\", file.isFile());\n        assertEquals(\"Unexpected size of file \" + file, expectedSize, file.length());\n        final BufferedReader reader = new BufferedReader(new FileReader(file));\n        final String content;\n        try {\n            content = FileUtils.readFully(reader);\n        } finally {\n            reader.close();\n        }\n        assertEquals(\"Unexpected content in file \" + file, expectedContent, content);\n    }\n","date":"2018-04-02 04:36:23","endLine":335,"groupId":"1290","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSizeAndContent","params":"(finalFilefile@finallongexpectedSize@finalStringexpectedContent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/96/1a473db8db8a5db60cc5ad1517fe348cedfd0d.src","preCode":"    private void assertSizeAndContent(final File file, final long expectedSize, final String expectedContent) throws IOException {\n        Assert.assertTrue(file + \" was expected to be a file\", file.isFile());\n        Assert.assertEquals(\"Unexpected size of file \" + file, expectedSize, file.length());\n        final BufferedReader reader = new BufferedReader(new FileReader(file));\n        final String content;\n        try {\n            content = FileUtils.readFully(reader);\n        } finally {\n            reader.close();\n        }\n        Assert.assertEquals(\"Unexpected content in file \" + file, expectedContent, content);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":324,"status":"M"}],"commitId":"cac9c2fc4fa96c51bec547402dd4de055a6c84d0","commitMessage":"@@@Simplify assertions","date":"2018-04-02 04:36:23","modifiedFileCount":"26","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-03 04:43:43","codes":[{"authorDate":"2018-04-03 04:43:43","commitOrder":3,"curCode":"    public void testCopyToSymlinkedSelf() throws Exception {\n        \r\n        assumeTrue(\"Symlinks not supported on this operating system\", Os.isFamily(Os.FAMILY_UNIX));\n\n        \r\n        buildRule.executeTarget(\"setupSelfCopyTesting\");\n        final File testDir = new File(buildRule.getProject().getProperty(\"self.copy.test.root.dir\"));\n        assertTrue(testDir + \" was expected to be a directory\", testDir.isDirectory());\n        final File srcFile = new File(testDir, \"file.txt\");\n        assertTrue(\"Source file \" + srcFile + \" was expected to be a file\", srcFile.isFile());\n        final long originalFileSize = srcFile.length();\n        final String originalContent;\n        try (BufferedReader reader = new BufferedReader(new FileReader(srcFile))) {\n            originalContent = FileUtils.readFully(reader);\n        }\n        assertTrue(\"Content missing in file \" + srcFile, originalContent != null && originalContent.length() > 0);\n\n        \r\n        buildRule.executeTarget(\"testSelfCopy\");\n        \r\n        assertSizeAndContent(srcFile, originalFileSize, originalContent);\n        final File symlinkedFile = new File(testDir, \"sylmink-file.txt\");\n        assertTrue(symlinkedFile + \" was expected to be a file\", symlinkedFile.isFile());\n        assertSizeAndContent(symlinkedFile, originalFileSize, originalContent);\n\n        final File symlinkedTestDir = new File(buildRule.getProject().getProperty(\"self.copy.test.symlinked.dir\"));\n        assertTrue(symlinkedTestDir + \" was expected to be a directory\", symlinkedTestDir.isDirectory());\n        assertSizeAndContent(new File(symlinkedTestDir, \"file.txt\"), originalFileSize, originalContent);\n        assertSizeAndContent(new File(symlinkedTestDir, \"sylmink-file.txt\"), originalFileSize, originalContent);\n\n    }\n","date":"2018-04-03 04:43:43","endLine":319,"groupId":"8516","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCopyToSymlinkedSelf","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/5b/36d0553bf4e9b968c2921d9173c9ed4387c500.src","preCode":"    public void testCopyToSymlinkedSelf() throws Exception {\n        \r\n        assumeTrue(\"Symlinks not supported on this operating system\", Os.isFamily(Os.FAMILY_UNIX));\n\n        \r\n        buildRule.executeTarget(\"setupSelfCopyTesting\");\n        final File testDir = new File(buildRule.getProject().getProperty(\"self.copy.test.root.dir\"));\n        assertTrue(testDir + \" was expected to be a directory\", testDir.isDirectory());\n        final File srcFile = new File(testDir, \"file.txt\");\n        assertTrue(\"Source file \" + srcFile + \" was expected to be a file\", srcFile.isFile());\n        final long originalFileSize = srcFile.length();\n        final String originalContent;\n        final BufferedReader reader = new BufferedReader(new FileReader(srcFile));\n        try {\n            originalContent = FileUtils.readFully(reader);\n        } finally {\n            reader.close();\n        }\n        assertTrue(\"Content missing in file \" + srcFile, originalContent != null && originalContent.length() > 0);\n\n        \r\n        buildRule.executeTarget(\"testSelfCopy\");\n        \r\n        assertSizeAndContent(srcFile, originalFileSize, originalContent);\n        final File symlinkedFile = new File(testDir, \"sylmink-file.txt\");\n        assertTrue(symlinkedFile + \" was expected to be a file\", symlinkedFile.isFile());\n        assertSizeAndContent(symlinkedFile, originalFileSize, originalContent);\n\n        final File symlinkedTestDir = new File(buildRule.getProject().getProperty(\"self.copy.test.symlinked.dir\"));\n        assertTrue(symlinkedTestDir + \" was expected to be a directory\", symlinkedTestDir.isDirectory());\n        assertSizeAndContent(new File(symlinkedTestDir, \"file.txt\"), originalFileSize, originalContent);\n        assertSizeAndContent(new File(symlinkedTestDir, \"sylmink-file.txt\"), originalFileSize, originalContent);\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"},{"authorDate":"2018-04-03 04:43:43","commitOrder":3,"curCode":"    private void assertSizeAndContent(final File file, final long expectedSize, final String expectedContent) throws IOException {\n        assertTrue(file + \" was expected to be a file\", file.isFile());\n        assertEquals(\"Unexpected size of file \" + file, expectedSize, file.length());\n        final String content;\n        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {\n            content = FileUtils.readFully(reader);\n        }\n        assertEquals(\"Unexpected content in file \" + file, expectedContent, content);\n    }\n","date":"2018-04-03 04:43:43","endLine":329,"groupId":"8517","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSizeAndContent","params":"(finalFilefile@finallongexpectedSize@finalStringexpectedContent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/5b/36d0553bf4e9b968c2921d9173c9ed4387c500.src","preCode":"    private void assertSizeAndContent(final File file, final long expectedSize, final String expectedContent) throws IOException {\n        assertTrue(file + \" was expected to be a file\", file.isFile());\n        assertEquals(\"Unexpected size of file \" + file, expectedSize, file.length());\n        final BufferedReader reader = new BufferedReader(new FileReader(file));\n        final String content;\n        try {\n            content = FileUtils.readFully(reader);\n        } finally {\n            reader.close();\n        }\n        assertEquals(\"Unexpected content in file \" + file, expectedContent, content);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"M"}],"commitId":"6319e4988b24f7830cf7048534c1caacb38ce550","commitMessage":"@@@Use try with resources","date":"2018-04-03 04:43:43","modifiedFileCount":"15","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-03 04:43:43","codes":[{"authorDate":"2018-04-06 20:50:56","commitOrder":4,"curCode":"    public void testCopyToSymlinkedSelf() throws Exception {\n        \r\n        assumeTrue(\"Symlinks not supported on this operating system\", Os.isFamily(Os.FAMILY_UNIX));\n\n        \r\n        buildRule.executeTarget(\"setupSelfCopyTesting\");\n        final File testDir = new File(buildRule.getProject().getProperty(\"self.copy.test.root.dir\"));\n        assertTrue(testDir + \" was expected to be a directory\", testDir.isDirectory());\n        final File srcFile = new File(testDir, \"file.txt\");\n        assertTrue(\"Source file \" + srcFile + \" was expected to be a file\", srcFile.isFile());\n        final long originalFileSize = srcFile.length();\n        final String originalContent;\n        try (BufferedReader reader = new BufferedReader(new FileReader(srcFile))) {\n            originalContent = FileUtils.readFully(reader);\n        }\n        assertTrue(\"Content missing in file \" + srcFile, originalContent != null && !originalContent.isEmpty());\n\n        \r\n        buildRule.executeTarget(\"testSelfCopy\");\n        \r\n        assertSizeAndContent(srcFile, originalFileSize, originalContent);\n        final File symlinkedFile = new File(testDir, \"sylmink-file.txt\");\n        assertTrue(symlinkedFile + \" was expected to be a file\", symlinkedFile.isFile());\n        assertSizeAndContent(symlinkedFile, originalFileSize, originalContent);\n\n        final File symlinkedTestDir = new File(buildRule.getProject().getProperty(\"self.copy.test.symlinked.dir\"));\n        assertTrue(symlinkedTestDir + \" was expected to be a directory\", symlinkedTestDir.isDirectory());\n        assertSizeAndContent(new File(symlinkedTestDir, \"file.txt\"), originalFileSize, originalContent);\n        assertSizeAndContent(new File(symlinkedTestDir, \"sylmink-file.txt\"), originalFileSize, originalContent);\n\n    }\n","date":"2018-04-06 20:50:56","endLine":320,"groupId":"1042","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCopyToSymlinkedSelf","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e7/905afa623de0223f00bfb29daaac32b9de3479.src","preCode":"    public void testCopyToSymlinkedSelf() throws Exception {\n        \r\n        assumeTrue(\"Symlinks not supported on this operating system\", Os.isFamily(Os.FAMILY_UNIX));\n\n        \r\n        buildRule.executeTarget(\"setupSelfCopyTesting\");\n        final File testDir = new File(buildRule.getProject().getProperty(\"self.copy.test.root.dir\"));\n        assertTrue(testDir + \" was expected to be a directory\", testDir.isDirectory());\n        final File srcFile = new File(testDir, \"file.txt\");\n        assertTrue(\"Source file \" + srcFile + \" was expected to be a file\", srcFile.isFile());\n        final long originalFileSize = srcFile.length();\n        final String originalContent;\n        try (BufferedReader reader = new BufferedReader(new FileReader(srcFile))) {\n            originalContent = FileUtils.readFully(reader);\n        }\n        assertTrue(\"Content missing in file \" + srcFile, originalContent != null && originalContent.length() > 0);\n\n        \r\n        buildRule.executeTarget(\"testSelfCopy\");\n        \r\n        assertSizeAndContent(srcFile, originalFileSize, originalContent);\n        final File symlinkedFile = new File(testDir, \"sylmink-file.txt\");\n        assertTrue(symlinkedFile + \" was expected to be a file\", symlinkedFile.isFile());\n        assertSizeAndContent(symlinkedFile, originalFileSize, originalContent);\n\n        final File symlinkedTestDir = new File(buildRule.getProject().getProperty(\"self.copy.test.symlinked.dir\"));\n        assertTrue(symlinkedTestDir + \" was expected to be a directory\", symlinkedTestDir.isDirectory());\n        assertSizeAndContent(new File(symlinkedTestDir, \"file.txt\"), originalFileSize, originalContent);\n        assertSizeAndContent(new File(symlinkedTestDir, \"sylmink-file.txt\"), originalFileSize, originalContent);\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"},{"authorDate":"2018-04-03 04:43:43","commitOrder":4,"curCode":"    private void assertSizeAndContent(final File file, final long expectedSize, final String expectedContent) throws IOException {\n        assertTrue(file + \" was expected to be a file\", file.isFile());\n        assertEquals(\"Unexpected size of file \" + file, expectedSize, file.length());\n        final String content;\n        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {\n            content = FileUtils.readFully(reader);\n        }\n        assertEquals(\"Unexpected content in file \" + file, expectedContent, content);\n    }\n","date":"2018-04-03 04:43:43","endLine":329,"groupId":"1042","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSizeAndContent","params":"(finalFilefile@finallongexpectedSize@finalStringexpectedContent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/5b/36d0553bf4e9b968c2921d9173c9ed4387c500.src","preCode":"    private void assertSizeAndContent(final File file, final long expectedSize, final String expectedContent) throws IOException {\n        assertTrue(file + \" was expected to be a file\", file.isFile());\n        assertEquals(\"Unexpected size of file \" + file, expectedSize, file.length());\n        final String content;\n        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {\n            content = FileUtils.readFully(reader);\n        }\n        assertEquals(\"Unexpected content in file \" + file, expectedContent, content);\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"N"}],"commitId":"30f52135af7a18cbf3f140089e90bdb39ceee134","commitMessage":"@@@Use null-or-empty pattern","date":"2018-04-06 20:50:56","modifiedFileCount":"80","status":"M","submitter":"Gintas Grigelionis"}]
