[{"authorTime":"2003-05-13 22:37:04","codes":[{"authorDate":"2002-06-01 20:26:43","commitOrder":5,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1){\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance(); \n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                        is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\"+s+'\\\"', \n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) { \n                throw be;\n            } catch (Exception e) { \n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2002-06-01 20:26:43","endLine":343,"groupId":"7622","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/62/04afc1925bbb4b99a55cfcc76f58e7cc90f523.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1){\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance(); \n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                        is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\"+s+'\\\"', \n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) { \n                throw be;\n            } catch (Exception e) { \n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"NB"},{"authorDate":"2003-05-13 22:37:04","commitOrder":5,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                               is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2003-05-13 22:37:04","endLine":247,"groupId":"7622","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/cf/60f1c4437673780a4333acb006ae3f43e88c94.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                               is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"B"}],"commitId":"8b5e371c7b8720327aefff1461efdbfbac41fd6f","commitMessage":"@@@Add <rexec> to accompany <telnet> and/or <sshexec>.\n\nPR: 19541\nSubmitted by:\tFran?ois Rey <francois dot rey at capco dot com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274566 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-05-13 22:37:04","modifiedFileCount":"1","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2003-05-13 22:37:04","codes":[{"authorDate":"2003-10-23 17:06:43","commitOrder":6,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                               is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \" \n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2003-10-23 17:06:43","endLine":360,"groupId":"2092","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/d0/a54d93cbdcdd20aa7a18a3bf9a495b61fd2ab4.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                               is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":328,"status":"M"},{"authorDate":"2003-05-13 22:37:04","commitOrder":6,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                               is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2003-05-13 22:37:04","endLine":247,"groupId":"7622","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/cf/60f1c4437673780a4333acb006ae3f43e88c94.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                               is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"}],"commitId":"8736e68ea154abf817b2b71a96f26e1b10274a85","commitMessage":"@@@Better support for people debugging timed out reads in <telnet>.  Submitted by Larry Shatzer\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275551 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-10-23 17:06:43","modifiedFileCount":"1","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2003-05-13 22:37:04","codes":[{"authorDate":"2007-09-20 19:12:37","commitOrder":7,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(QUARTER_SECOND);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2007-09-20 19:12:37","endLine":371,"groupId":"0","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/de/88b27f451059660be6f5966842e2f6e02c1338.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"M"},{"authorDate":"2003-05-13 22:37:04","commitOrder":7,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                               is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2003-05-13 22:37:04","endLine":247,"groupId":"7622","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/cf/60f1c4437673780a4333acb006ae3f43e88c94.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                               is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"}],"commitId":"0dd2ec90a55b767dfb413d60fbc986ff29888444","commitMessage":"@@@more magic num\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@577684 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-09-20 19:12:37","modifiedFileCount":"10","status":"M","submitter":"Peter Reilly"},{"authorTime":"2003-05-13 22:37:04","codes":[{"authorDate":"2007-09-20 22:26:16","commitOrder":8,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(WAIT_INTERVAL);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2007-09-20 22:26:16","endLine":371,"groupId":"0","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3d/ea2626e3914fc3b8d04f54bf07d609e04d91e1.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(QUARTER_SECOND);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"M"},{"authorDate":"2003-05-13 22:37:04","commitOrder":8,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                               is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2003-05-13 22:37:04","endLine":247,"groupId":"7622","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/cf/60f1c4437673780a4333acb006ae3f43e88c94.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime) &&\n                               is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"}],"commitId":"79c6e8371ad80a538873156af0381ec82a0d6dfc","commitMessage":"@@@Use better constant names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@577765 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-09-20 22:26:16","modifiedFileCount":"5","status":"M","submitter":"Jan Materne"},{"authorTime":"2007-09-22 00:33:43","codes":[{"authorDate":"2007-09-20 22:26:16","commitOrder":9,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(WAIT_INTERVAL);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2007-09-20 22:26:16","endLine":371,"groupId":"0","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3d/ea2626e3914fc3b8d04f54bf07d609e04d91e1.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(WAIT_INTERVAL);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"N"},{"authorDate":"2007-09-22 00:33:43","commitOrder":9,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime)\n                            && is.available() == 0) {\n                            Thread.sleep(PAUSE_TIME);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2007-09-22 00:33:43","endLine":232,"groupId":"0","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0c/a112396ff57525dea1dfeedadc321ab80edb96.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime)\n                            && is.available() == 0) {\n                            Thread.sleep(250);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"}],"commitId":"0961bd8616dd4396d220e03c35b6f07550f0536d","commitMessage":"@@@magic numbers\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@578199 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-09-22 00:33:43","modifiedFileCount":"8","status":"M","submitter":"Peter Reilly"},{"authorTime":"2008-07-18 20:37:34","codes":[{"authorDate":"2008-07-18 20:37:34","commitOrder":10,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart++ < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart++ < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(WAIT_INTERVAL);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2008-07-18 20:37:34","endLine":374,"groupId":"0","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a9/82764def0623828f8b3acc129b5ebcb3ef93f1.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(WAIT_INTERVAL);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"M"},{"authorDate":"2008-07-18 20:37:34","commitOrder":10,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart++ < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart++ < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                            && is.available() == 0) {\n                            Thread.sleep(PAUSE_TIME);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2008-07-18 20:37:34","endLine":235,"groupId":"0","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a8/5b0224c824bc237c3f3b49fdf37987d34435e9.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (sb.toString().indexOf(s) == -1) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (sb.toString().indexOf(s) == -1) {\n                        while (Calendar.getInstance().before(endTime)\n                            && is.available() == 0) {\n                            Thread.sleep(PAUSE_TIME);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"}],"commitId":"730b66951947a136531e3cde1a828dca5fc64bb4","commitMessage":"@@@avoid excessive StringBuffer.toString calls while waiting for a response string.  PR 34464.  Based on patch by Adam Blinkinsop.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@677887 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2008-07-18 20:37:34","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2010-04-23 16:28:10","codes":[{"authorDate":"2010-04-23 16:28:10","commitOrder":11,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(WAIT_INTERVAL);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2010-04-23 16:28:10","endLine":376,"groupId":"8002","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/14/357ea057ff03b9df4c9e62b15c7f6327110f46.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart++ < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart++ < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(WAIT_INTERVAL);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"M"},{"authorDate":"2010-04-23 16:28:10","commitOrder":11,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                            && is.available() == 0) {\n                            Thread.sleep(PAUSE_TIME);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2010-04-23 16:28:10","endLine":237,"groupId":"4411","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/b6/e4b95152afeb1e3a93bd536126a8fe81e153fa.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart++ < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart++ < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                            && is.available() == 0) {\n                            Thread.sleep(PAUSE_TIME);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"}],"commitId":"8016bd8d2869a25c7736b6e0b93ac9d50376b77b","commitMessage":"@@@telnet and rexec have been broken.  PR 49173.  Based on patch submitted by James Wartell\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@937187 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-23 16:28:10","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":12,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuilder sb = new StringBuilder();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(WAIT_INTERVAL);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2017-04-13 23:15:22","endLine":383,"groupId":"8002","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/41/2ef93a9847a689ee36d22d5f11fd7b7f18b4e5.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(WAIT_INTERVAL);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":12,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuilder sb = new StringBuilder();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                            && is.available() == 0) {\n                            Thread.sleep(PAUSE_TIME);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2017-04-13 23:15:22","endLine":239,"groupId":"4411","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ff/24bebfd3db4ab75b29d53d3d7441a58b095245.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuffer sb = new StringBuffer();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                            && is.available() == 0) {\n                            Thread.sleep(PAUSE_TIME);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"},{"authorTime":"2018-04-02 02:07:39","codes":[{"authorDate":"2018-04-02 02:07:39","commitOrder":13,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuilder sb = new StringBuilder();\n                int windowStart = -s.length();\n                if (timeout == null || timeout == 0) {\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout);\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(WAIT_INTERVAL);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2018-04-02 02:07:39","endLine":383,"groupId":"10473","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/37/802bf27bb5215ca01d1215ae26ad474da87f63.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuilder sb = new StringBuilder();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                               && is.available() == 0) {\n                            Thread.sleep(WAIT_INTERVAL);\n                        }\n                        if (is.available() == 0) {\n                            log(\"Read before running into timeout: \"\n                                + sb.toString(), Project.MSG_DEBUG);\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"M"},{"authorDate":"2018-04-02 02:07:39","commitOrder":13,"curCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuilder sb = new StringBuilder();\n                int windowStart = -s.length();\n                if (timeout == null || timeout == 0) {\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout);\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                            && is.available() == 0) {\n                            Thread.sleep(PAUSE_TIME);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","date":"2018-04-02 02:07:39","endLine":239,"groupId":"10473","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"waitForString","params":"(Strings@Integertimeout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/80/17123430f95faf450361865ef276e5b0fd4a7a.src","preCode":"        public void waitForString(String s, Integer timeout) {\n            InputStream is = this.getInputStream();\n            try {\n                StringBuilder sb = new StringBuilder();\n                int windowStart = -s.length();\n                if (timeout == null || timeout.intValue() == 0) {\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                } else {\n                    Calendar endTime = Calendar.getInstance();\n                    endTime.add(Calendar.SECOND, timeout.intValue());\n                    while (windowStart < 0\n                           || !sb.substring(windowStart).equals(s)) {\n                        while (Calendar.getInstance().before(endTime)\n                            && is.available() == 0) {\n                            Thread.sleep(PAUSE_TIME);\n                        }\n                        if (is.available() == 0) {\n                            throw new BuildException(\n                                \"Response timed-out waiting for \\\"\" + s + '\\\"',\n                                getLocation());\n                        }\n                        sb.append((char) is.read());\n                        windowStart++;\n                    }\n                }\n                log(sb.toString(), Project.MSG_INFO);\n            } catch (BuildException be) {\n                throw be;\n            } catch (Exception e) {\n                throw new BuildException(e, getLocation());\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"95495d57aa5cca8fc350ebfb10f6d390f40290cb","commitMessage":"@@@Remove extraneous casts and (un)boxing.  tersify logic","date":"2018-04-02 02:07:39","modifiedFileCount":"178","status":"M","submitter":"Gintas Grigelionis"}]
