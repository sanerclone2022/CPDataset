[{"authorTime":"2001-05-03 23:04:03","codes":[{"authorDate":"2006-01-20 04:05:14","commitOrder":5,"curCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Running \");\n        sb.append(suite.getName());\n        sb.append(newLine);\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        }\n    }\n","date":"2006-01-20 04:05:14","endLine":67,"groupId":"480","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/4c/1e8ad4874abac8bac43c783ba0517adcacd5dc.src","preCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Running \");\n        sb.append(suite.getName());\n        sb.append(newLine);\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"},{"authorDate":"2001-05-03 23:04:03","commitOrder":5,"curCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime()/1000.0));\n        sb.append(\" sec\");\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append( \"Output:\" ).append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n            \n            if (systemError != null && systemError.length() > 0) {\n                sb.append( \"Error: \" ).append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        } finally {\n            if (out != System.out && out != System.err) {\n                try {\n                    out.close();\n                } catch (IOException e) {}\n            }\n        }\n    }\n","date":"2001-05-03 23:04:03","endLine":179,"groupId":"3194","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"endTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/96/bf22a0daf5b53d7e6d67b44ddca13c08492cef.src","preCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime()/1000.0));\n        sb.append(\" sec\");\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append( \"Output:\" ).append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n            \n            if (systemError != null && systemError.length() > 0) {\n                sb.append( \"Error: \" ).append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        } finally {\n            if (out != System.out && out != System.err) {\n                try {\n                    out.close();\n                } catch (IOException e) {}\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"NB"}],"commitId":"724483eec5845878bec83940c3044dafdfadc7f1","commitMessage":"@@@Bugzilla 37426\nSubmitted by Maarten Coene\n<junit> task doesn't print all the Test names when using forkmode='once'\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@370591 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-01-20 04:05:14","modifiedFileCount":"2","status":"M","submitter":"Antoine Levy-Lambert"},{"authorTime":"2007-09-24 18:00:00","codes":[{"authorDate":"2006-01-20 04:05:14","commitOrder":6,"curCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Running \");\n        sb.append(suite.getName());\n        sb.append(newLine);\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        }\n    }\n","date":"2006-01-20 04:05:14","endLine":67,"groupId":"480","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"startTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/4c/1e8ad4874abac8bac43c783ba0517adcacd5dc.src","preCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Running \");\n        sb.append(suite.getName());\n        sb.append(newLine);\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2007-09-24 18:00:00","commitOrder":6,"curCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(\"Output:\").append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(\"Error: \").append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        } finally {\n            if (out != System.out && out != System.err) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2007-09-24 18:00:00","endLine":178,"groupId":"3194","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"endTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6e/e92c52de248e827705b0b0fd0656532852f6d7.src","preCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / 1000.0));\n        sb.append(\" sec\");\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(\"Output:\").append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(\"Error: \").append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        } finally {\n            if (out != System.out && out != System.err) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"f9de93c35b4a4327c0cf29afd25ecf9c486f7647","commitMessage":"@@@more magic numbers\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@578739 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-09-24 18:00:00","modifiedFileCount":"10","status":"M","submitter":"Peter Reilly"},{"authorTime":"2013-03-05 13:42:51","codes":[{"authorDate":"2006-01-20 04:05:14","commitOrder":7,"curCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Running \");\n        sb.append(suite.getName());\n        sb.append(newLine);\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        }\n    }\n","date":"2006-01-20 04:05:14","endLine":67,"groupId":"480","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"startTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/4c/1e8ad4874abac8bac43c783ba0517adcacd5dc.src","preCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Running \");\n        sb.append(suite.getName());\n        sb.append(newLine);\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2013-03-05 13:42:51","commitOrder":7,"curCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(\"Output:\").append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(\"Error: \").append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        } finally {\n            if (out != System.out && out != System.err) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2013-03-05 13:42:51","endLine":180,"groupId":"3194","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"endTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/89/eef8cfeda41693fe12ee94fb4086031b9aa69c.src","preCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(\"Output:\").append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(\"Error: \").append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        } finally {\n            if (out != System.out && out != System.err) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"3930d3e938dfbe45835ef7b28d00d5714bc304d0","commitMessage":"@@@JUnit4 tests marked @Ignore do not appear in XML output. PR 43969\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1452674 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-03-05 13:42:51","modifiedFileCount":"10","status":"M","submitter":"Antoine Levy-Lambert"},{"authorTime":"2014-03-24 00:18:29","codes":[{"authorDate":"2014-03-24 00:18:29","commitOrder":8,"curCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Running \");\n        int antThreadID = suite.getThread();\n\n        sb.append(suite.getName());\n        \n        if (antThreadID > 0) {\n            sb.append(\" in thread \");\n            sb.append(antThreadID);\n        }\n        sb.append(newLine);\n        writeOutputLine(sb.toString().getBytes());\n    }\n","date":"2014-03-24 00:18:29","endLine":94,"groupId":"5974","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"startTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/54/48c7b984bd9e6e4a13a7ba03891c9654fa0451.src","preCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Running \");\n        sb.append(suite.getName());\n        sb.append(newLine);\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2014-03-24 00:18:29","commitOrder":8,"curCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n\n        \r\n\r\n\r\n\n        if (suite.getThread() > 0) {\n            sb.append(\", Thread: \");\n            sb.append(suite.getThread());\n            sb.append(\", Class: \");\n            sb.append(suite.getName());\n        }\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(\"Output:\").append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(\"Error: \").append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            writeOutputLine(sb.toString().getBytes());\n        } finally {\n            if (out != System.out && out != System.err) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    \r\n                }\n            }\n        }\n    }\n","date":"2014-03-24 00:18:29","endLine":210,"groupId":"4745","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"endTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/54/48c7b984bd9e6e4a13a7ba03891c9654fa0451.src","preCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(\"Output:\").append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(\"Error: \").append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            out.write(sb.toString().getBytes());\n            out.flush();\n        } catch (IOException ioex) {\n            throw new BuildException(\"Unable to write summary output\", ioex);\n        } finally {\n            if (out != System.out && out != System.err) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"9d3c394c5d1c57194e8e49cd62837855411cb98f","commitMessage":"@@@junit task should support parallel/threads option\nPR 55925\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1580520 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-24 00:18:29","modifiedFileCount":"5","status":"M","submitter":"Antoine Levy-Lambert"},{"authorTime":"2016-03-28 20:08:39","codes":[{"authorDate":"2014-03-24 00:18:29","commitOrder":9,"curCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Running \");\n        int antThreadID = suite.getThread();\n\n        sb.append(suite.getName());\n        \n        if (antThreadID > 0) {\n            sb.append(\" in thread \");\n            sb.append(antThreadID);\n        }\n        sb.append(newLine);\n        writeOutputLine(sb.toString().getBytes());\n    }\n","date":"2014-03-24 00:18:29","endLine":94,"groupId":"5974","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"startTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/54/48c7b984bd9e6e4a13a7ba03891c9654fa0451.src","preCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Running \");\n        int antThreadID = suite.getThread();\n\n        sb.append(suite.getName());\n        \n        if (antThreadID > 0) {\n            sb.append(\" in thread \");\n            sb.append(antThreadID);\n        }\n        sb.append(newLine);\n        writeOutputLine(sb.toString().getBytes());\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"N"},{"authorDate":"2016-03-28 20:08:39","commitOrder":9,"curCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n\n        \r\n\r\n\r\n\n        if (suite.getThread() > 0) {\n            sb.append(\", Thread: \");\n            sb.append(suite.getThread());\n            sb.append(\", Class: \");\n            sb.append(suite.getName());\n        }\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(\"Output:\").append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(\"Error: \").append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            writeOutputLine(sb.toString().getBytes());\n        } finally {\n            if (out != System.out && out != System.err) {\n                FileUtils.close(out);\n            }\n        }\n    }\n","date":"2016-03-28 20:09:25","endLine":209,"groupId":"4745","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"endTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/4e/b30fbe6a92332e19917de06dfebb57229ac26e.src","preCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n\n        \r\n\r\n\r\n\n        if (suite.getThread() > 0) {\n            sb.append(\", Thread: \");\n            sb.append(suite.getThread());\n            sb.append(\", Class: \");\n            sb.append(suite.getName());\n        }\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(\"Output:\").append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(\"Error: \").append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            writeOutputLine(sb.toString().getBytes());\n        } finally {\n            if (out != System.out && out != System.err) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    \r\n                }\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"48cdc84cc8c309dcc3bcfe61e6cc7a1700fa21ee","commitMessage":"@@@Merge branch '1.9.x'\n\nConflicts:\n\tsrc/main/org/apache/tools/zip/ZipFile.java\n","date":"2016-03-28 20:09:25","modifiedFileCount":"19","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":10,"curCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuilder sb = new StringBuilder(\"Running \");\n        int antThreadID = suite.getThread();\n\n        sb.append(suite.getName());\n        \n        if (antThreadID > 0) {\n            sb.append(\" in thread \");\n            sb.append(antThreadID);\n        }\n        sb.append(newLine);\n        writeOutputLine(sb.toString().getBytes());\n    }\n","date":"2017-04-13 23:15:22","endLine":92,"groupId":"5974","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"startTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/27/239d6fb8b6df5dd4e8e327b7364a5924b76e6e.src","preCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Running \");\n        int antThreadID = suite.getThread();\n\n        sb.append(suite.getName());\n        \n        if (antThreadID > 0) {\n            sb.append(\" in thread \");\n            sb.append(antThreadID);\n        }\n        sb.append(newLine);\n        writeOutputLine(sb.toString().getBytes());\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":10,"curCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuilder sb = new StringBuilder(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n\n        \r\n\r\n\r\n\n        if (suite.getThread() > 0) {\n            sb.append(\", Thread: \");\n            sb.append(suite.getThread());\n            sb.append(\", Class: \");\n            sb.append(suite.getName());\n        }\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(\"Output:\").append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(\"Error: \").append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            writeOutputLine(sb.toString().getBytes());\n        } finally {\n            if (out != System.out && out != System.err) {\n                FileUtils.close(out);\n            }\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":213,"groupId":"4745","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"endTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/27/239d6fb8b6df5dd4e8e327b7364a5924b76e6e.src","preCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuffer sb = new StringBuffer(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n\n        \r\n\r\n\r\n\n        if (suite.getThread() > 0) {\n            sb.append(\", Thread: \");\n            sb.append(suite.getThread());\n            sb.append(\", Class: \");\n            sb.append(suite.getName());\n        }\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(\"Output:\").append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(\"Error: \").append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            writeOutputLine(sb.toString().getBytes());\n        } finally {\n            if (out != System.out && out != System.err) {\n                FileUtils.close(out);\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"},{"authorTime":"2018-04-05 17:32:22","codes":[{"authorDate":"2018-04-05 17:32:22","commitOrder":11,"curCode":"    public void startTestSuite(JUnitTest suite) {\n        StringBuilder sb = new StringBuilder(\"Running \");\n        int antThreadID = suite.getThread();\n\n        sb.append(suite.getName());\n        \n        if (antThreadID > 0) {\n            sb.append(\" in thread \");\n            sb.append(antThreadID);\n        }\n        sb.append(System.lineSeparator());\n        writeOutputLine(sb.toString().getBytes());\n    }\n","date":"2018-04-05 17:32:22","endLine":91,"groupId":"5974","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"startTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/26/4c3b0aff5e3a9edb92a62da168bd1469c5d61d.src","preCode":"    public void startTestSuite(JUnitTest suite) {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuilder sb = new StringBuilder(\"Running \");\n        int antThreadID = suite.getThread();\n\n        sb.append(suite.getName());\n        \n        if (antThreadID > 0) {\n            sb.append(\" in thread \");\n            sb.append(antThreadID);\n        }\n        sb.append(newLine);\n        writeOutputLine(sb.toString().getBytes());\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2018-04-05 17:32:22","commitOrder":11,"curCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n         StringBuilder sb = new StringBuilder(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n\n        \r\n\r\n\r\n\n        if (suite.getThread() > 0) {\n            sb.append(\", Thread: \");\n            sb.append(suite.getThread());\n            sb.append(\", Class: \");\n            sb.append(suite.getName());\n        }\n        sb.append(System.lineSeparator());\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(String.format(\"Output:%n%s%n\", systemOutput));\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(String.format(\"Output:%n%s%n\", systemError));\n            }\n        }\n\n        try {\n            writeOutputLine(sb.toString().getBytes());\n        } finally {\n            if (out != System.out && out != System.err) {\n                FileUtils.close(out);\n            }\n        }\n    }\n","date":"2018-04-05 17:32:22","endLine":209,"groupId":"324","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"endTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/26/4c3b0aff5e3a9edb92a62da168bd1469c5d61d.src","preCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuilder sb = new StringBuilder(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n\n        \r\n\r\n\r\n\n        if (suite.getThread() > 0) {\n            sb.append(\", Thread: \");\n            sb.append(suite.getThread());\n            sb.append(\", Class: \");\n            sb.append(suite.getName());\n        }\n        sb.append(newLine);\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(\"Output:\").append(newLine).append(systemOutput)\n                    .append(newLine);\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(\"Error: \").append(newLine).append(systemError)\n                    .append(newLine);\n            }\n        }\n\n        try {\n            writeOutputLine(sb.toString().getBytes());\n        } finally {\n            if (out != System.out && out != System.err) {\n                FileUtils.close(out);\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"}],"commitId":"f2459248f23aa439e2c5ab642d9d9d7e6cffc933","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/ant\n","date":"2018-04-05 17:32:22","modifiedFileCount":"138","status":"M","submitter":"Maarten Coene"},{"authorTime":"2018-04-06 20:50:56","codes":[{"authorDate":"2018-04-05 17:32:22","commitOrder":12,"curCode":"    public void startTestSuite(JUnitTest suite) {\n        StringBuilder sb = new StringBuilder(\"Running \");\n        int antThreadID = suite.getThread();\n\n        sb.append(suite.getName());\n        \n        if (antThreadID > 0) {\n            sb.append(\" in thread \");\n            sb.append(antThreadID);\n        }\n        sb.append(System.lineSeparator());\n        writeOutputLine(sb.toString().getBytes());\n    }\n","date":"2018-04-05 17:32:22","endLine":91,"groupId":"5974","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"startTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/26/4c3b0aff5e3a9edb92a62da168bd1469c5d61d.src","preCode":"    public void startTestSuite(JUnitTest suite) {\n        StringBuilder sb = new StringBuilder(\"Running \");\n        int antThreadID = suite.getThread();\n\n        sb.append(suite.getName());\n        \n        if (antThreadID > 0) {\n            sb.append(\" in thread \");\n            sb.append(antThreadID);\n        }\n        sb.append(System.lineSeparator());\n        writeOutputLine(sb.toString().getBytes());\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"},{"authorDate":"2018-04-06 20:50:56","commitOrder":12,"curCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n         StringBuilder sb = new StringBuilder(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n\n        \r\n\r\n\r\n\n        if (suite.getThread() > 0) {\n            sb.append(\", Thread: \");\n            sb.append(suite.getThread());\n            sb.append(\", Class: \");\n            sb.append(suite.getName());\n        }\n        sb.append(System.lineSeparator());\n\n        if (withOutAndErr) {\n            if (systemOutput != null && !systemOutput.isEmpty()) {\n                sb.append(String.format(\"Output:%n%s%n\", systemOutput));\n            }\n\n            if (systemError != null && !systemError.isEmpty()) {\n                sb.append(String.format(\"Output:%n%s%n\", systemError));\n            }\n        }\n\n        try {\n            writeOutputLine(sb.toString().getBytes());\n        } finally {\n            if (out != System.out && out != System.err) {\n                FileUtils.close(out);\n            }\n        }\n    }\n","date":"2018-04-06 20:50:56","endLine":209,"groupId":"324","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"endTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/76/38f0be50a6d803411af920d345e5e32a5cd81f.src","preCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n         StringBuilder sb = new StringBuilder(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n\n        \r\n\r\n\r\n\n        if (suite.getThread() > 0) {\n            sb.append(\", Thread: \");\n            sb.append(suite.getThread());\n            sb.append(\", Class: \");\n            sb.append(suite.getName());\n        }\n        sb.append(System.lineSeparator());\n\n        if (withOutAndErr) {\n            if (systemOutput != null && systemOutput.length() > 0) {\n                sb.append(String.format(\"Output:%n%s%n\", systemOutput));\n            }\n\n            if (systemError != null && systemError.length() > 0) {\n                sb.append(String.format(\"Output:%n%s%n\", systemError));\n            }\n        }\n\n        try {\n            writeOutputLine(sb.toString().getBytes());\n        } finally {\n            if (out != System.out && out != System.err) {\n                FileUtils.close(out);\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"}],"commitId":"30f52135af7a18cbf3f140089e90bdb39ceee134","commitMessage":"@@@Use null-or-empty pattern","date":"2018-04-06 20:50:56","modifiedFileCount":"80","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-09 21:56:04","codes":[{"authorDate":"2018-04-05 17:32:22","commitOrder":13,"curCode":"    public void startTestSuite(JUnitTest suite) {\n        StringBuilder sb = new StringBuilder(\"Running \");\n        int antThreadID = suite.getThread();\n\n        sb.append(suite.getName());\n        \n        if (antThreadID > 0) {\n            sb.append(\" in thread \");\n            sb.append(antThreadID);\n        }\n        sb.append(System.lineSeparator());\n        writeOutputLine(sb.toString().getBytes());\n    }\n","date":"2018-04-05 17:32:22","endLine":91,"groupId":"10399","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"startTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/26/4c3b0aff5e3a9edb92a62da168bd1469c5d61d.src","preCode":"    public void startTestSuite(JUnitTest suite) {\n        StringBuilder sb = new StringBuilder(\"Running \");\n        int antThreadID = suite.getThread();\n\n        sb.append(suite.getName());\n        \n        if (antThreadID > 0) {\n            sb.append(\" in thread \");\n            sb.append(antThreadID);\n        }\n        sb.append(System.lineSeparator());\n        writeOutputLine(sb.toString().getBytes());\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"},{"authorDate":"2018-04-09 21:56:04","commitOrder":13,"curCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n         StringBuilder sb = new StringBuilder(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n\n        \r\n\r\n\r\n\n        if (suite.getThread() > 0) {\n            sb.append(\", Thread: \");\n            sb.append(suite.getThread());\n            sb.append(\", Class: \");\n            sb.append(suite.getName());\n        }\n        sb.append(System.lineSeparator());\n\n        if (withOutAndErr) {\n            if (systemOutput != null && !systemOutput.isEmpty()) {\n                sb.append(String.format(\"Output:%n%s%n\", systemOutput));\n            }\n\n            if (systemError != null && !systemError.isEmpty()) {\n                sb.append(String.format(\"Error: %n%s%n\", systemError));\n            }\n        }\n\n        try {\n            writeOutputLine(sb.toString().getBytes());\n        } finally {\n            if (out != System.out && out != System.err) {\n                FileUtils.close(out);\n            }\n        }\n    }\n","date":"2018-04-09 21:56:25","endLine":209,"groupId":"10399","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"endTestSuite","params":"(JUnitTestsuite)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/23/57283efeeaf89517ceaf3587799c2c8dc76e48.src","preCode":"    public void endTestSuite(JUnitTest suite) throws BuildException {\n         StringBuilder sb = new StringBuilder(\"Tests run: \");\n        sb.append(suite.runCount());\n        sb.append(\", Failures: \");\n        sb.append(suite.failureCount());\n        sb.append(\", Errors: \");\n        sb.append(suite.errorCount());\n        sb.append(\", Skipped: \");\n        sb.append(suite.skipCount());\n        sb.append(\", Time elapsed: \");\n        sb.append(nf.format(suite.getRunTime() / ONE_SECOND));\n        sb.append(\" sec\");\n\n        \r\n\r\n\r\n\n        if (suite.getThread() > 0) {\n            sb.append(\", Thread: \");\n            sb.append(suite.getThread());\n            sb.append(\", Class: \");\n            sb.append(suite.getName());\n        }\n        sb.append(System.lineSeparator());\n\n        if (withOutAndErr) {\n            if (systemOutput != null && !systemOutput.isEmpty()) {\n                sb.append(String.format(\"Output:%n%s%n\", systemOutput));\n            }\n\n            if (systemError != null && !systemError.isEmpty()) {\n                sb.append(String.format(\"Output:%n%s%n\", systemError));\n            }\n        }\n\n        try {\n            writeOutputLine(sb.toString().getBytes());\n        } finally {\n            if (out != System.out && out != System.err) {\n                FileUtils.close(out);\n            }\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"}],"commitId":"54dc5f35393a1ce9cb47acb1a1be3b517890b4fd","commitMessage":"@@@copy-paste error\n\nreverts a small part of 845c2c5\n","date":"2018-04-09 21:56:25","modifiedFileCount":"1","status":"M","submitter":"Stefan Bodewig"}]
