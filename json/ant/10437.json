[{"authorTime":"2000-02-11 02:04:29","codes":[{"authorDate":"2003-03-06 20:42:44","commitOrder":2,"curCode":"    private void sendFileToRemote( File localFile,\n                                   InputStream in,\n                                   OutputStream out ) throws IOException {\n        \r\n        int filesize = (int) localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write( command.getBytes() );\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[1024];\n        long startTime = System.currentTimeMillis();\n        int totalLength = 0;\n        try {\n            NumberFormat formatter = NumberFormat.getIntegerInstance();\n            log( \"Sending: \" + localFile.getName() + \" : \" +\n                    formatter.format( localFile.length() ) );\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) break;\n                out.write(buf, 0, len);\n                totalLength += len;\n            }\n            out.flush();\n            sendAck(out);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats( startTime, endTime, totalLength );\n            fis.close();\n        }\n    }\n","date":"2003-03-06 20:42:44","endLine":200,"groupId":"3133","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(FilelocalFile@InputStreamin@OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/af/da37a9643a97121191524385a28a4f58051cf2.src","preCode":"    private void sendFileToRemote( File localFile,\n                                   InputStream in,\n                                   OutputStream out ) throws IOException {\n        \r\n        int filesize = (int) localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write( command.getBytes() );\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[1024];\n        long startTime = System.currentTimeMillis();\n        int totalLength = 0;\n        try {\n            NumberFormat formatter = NumberFormat.getIntegerInstance();\n            log( \"Sending: \" + localFile.getName() + \" : \" +\n                    formatter.format( localFile.length() ) );\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) break;\n                out.write(buf, 0, len);\n                totalLength += len;\n            }\n            out.flush();\n            sendAck(out);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats( startTime, endTime, totalLength );\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"},{"authorDate":"2000-02-11 02:04:29","commitOrder":2,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","date":"2000-02-11 02:04:29","endLine":418,"groupId":"7240","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/758983eff4f54a98f0393d218bdff7818f41d4.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"NB"}],"commitId":"0f276785d6e90f234201c4786eb37370e4bc358c","commitMessage":"@@@<scp>\n\nSubmitted by:\tcharliehubbard76 at yahoo dot com\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274200 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-03-06 20:42:44","modifiedFileCount":"0","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2000-02-11 02:04:29","codes":[{"authorDate":"2003-03-11 22:42:43","commitOrder":3,"curCode":"    private void sendFileToRemote( File localFile,\n                                   InputStream in,\n                                   OutputStream out ) throws IOException {\n        \r\n        int filesize = (int) localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write( command.getBytes() );\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[1024];\n        long startTime = System.currentTimeMillis();\n        int totalLength = 0;\n        try {\n            log( \"Sending: \" + localFile.getName() + \" : \" + \n                 localFile.length());\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) break;\n                out.write(buf, 0, len);\n                totalLength += len;\n            }\n            out.flush();\n            sendAck(out);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats( startTime, endTime, totalLength );\n            fis.close();\n        }\n    }\n","date":"2003-03-11 22:42:43","endLine":199,"groupId":"3133","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(FilelocalFile@InputStreamin@OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/1a/84943b7b2aeecf46b56ac4d58ff2b4046ef56a.src","preCode":"    private void sendFileToRemote( File localFile,\n                                   InputStream in,\n                                   OutputStream out ) throws IOException {\n        \r\n        int filesize = (int) localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write( command.getBytes() );\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[1024];\n        long startTime = System.currentTimeMillis();\n        int totalLength = 0;\n        try {\n            NumberFormat formatter = NumberFormat.getIntegerInstance();\n            log( \"Sending: \" + localFile.getName() + \" : \" +\n                    formatter.format( localFile.length() ) );\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) break;\n                out.write(buf, 0, len);\n                totalLength += len;\n            }\n            out.flush();\n            sendAck(out);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats( startTime, endTime, totalLength );\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"},{"authorDate":"2000-02-11 02:04:29","commitOrder":3,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","date":"2000-02-11 02:04:29","endLine":418,"groupId":"7240","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/758983eff4f54a98f0393d218bdff7818f41d4.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"N"}],"commitId":"4e9e01a1f526fec36bc7ff96bf9bdbc447968fe8","commitMessage":"@@@remove JDK 1.4 dependency\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274238 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-03-11 22:42:43","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2000-02-11 02:04:29","codes":[{"authorDate":"2003-07-09 20:12:59","commitOrder":4,"curCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        int filesize = (int) localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        int totalLength = 0;\n        try {\n            log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n            }\n            out.flush();\n            sendAck(out);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats(startTime, endTime, totalLength);\n            fis.close();\n        }\n    }\n","date":"2003-07-09 20:12:59","endLine":208,"groupId":"865","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(FilelocalFile@InputStreamin@OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/fe/1b136388e4af89422e853d11161d365d49789a.src","preCode":"    private void sendFileToRemote( File localFile,\n                                   InputStream in,\n                                   OutputStream out ) throws IOException {\n        \r\n        int filesize = (int) localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write( command.getBytes() );\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[1024];\n        long startTime = System.currentTimeMillis();\n        int totalLength = 0;\n        try {\n            log( \"Sending: \" + localFile.getName() + \" : \" + \n                 localFile.length());\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) break;\n                out.write(buf, 0, len);\n                totalLength += len;\n            }\n            out.flush();\n            sendAck(out);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats( startTime, endTime, totalLength );\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"},{"authorDate":"2000-02-11 02:04:29","commitOrder":4,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","date":"2000-02-11 02:04:29","endLine":418,"groupId":"7240","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/758983eff4f54a98f0393d218bdff7818f41d4.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"N"}],"commitId":"36d84a61dc70dd6bbc8ee25d5261de5f2874e837","commitMessage":"@@@Checkstyle\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274792 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-07-09 20:12:59","modifiedFileCount":"10","status":"M","submitter":"Conor MacNeill"},{"authorTime":"2000-02-11 02:04:29","codes":[{"authorDate":"2003-11-28 17:28:49","commitOrder":5,"curCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        int filesize = (int) localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        int totalLength = 0;\n        try {\n            log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats(startTime, endTime, totalLength);\n            fis.close();\n        }\n    }\n","date":"2003-11-28 17:28:49","endLine":208,"groupId":"865","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(FilelocalFile@InputStreamin@OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/cc/fb826c7f8bb7b13c75e67929ecd0bebc75be0f.src","preCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        int filesize = (int) localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        int totalLength = 0;\n        try {\n            log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n            }\n            out.flush();\n            sendAck(out);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats(startTime, endTime, totalLength);\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2000-02-11 02:04:29","commitOrder":5,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","date":"2000-02-11 02:04:29","endLine":418,"groupId":"7240","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/758983eff4f54a98f0393d218bdff7818f41d4.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"N"}],"commitId":"88f44e923b45ad9b16c3116aa1aa9610ae651ac6","commitMessage":"@@@Under some circumstances scp would miss responses from the remote side\nleading to corrupted files.\n\nPR: 24449\nSubmitted by:\tAtsuhiko Yamanaka <ymnk at jcraft dot com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275710 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-11-28 17:28:49","modifiedFileCount":"1","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2000-02-11 02:04:29","codes":[{"authorDate":"2004-04-07 21:30:30","commitOrder":6,"curCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        int filesize = (int) localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        int totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > 102400;\n        \r\n        \r\n        int initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize, \n                                                       totalLength, \n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats(startTime, endTime, totalLength);\n            fis.close();\n        }\n    }\n","date":"2004-04-07 21:30:30","endLine":213,"groupId":"3329","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(FilelocalFile@InputStreamin@OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ea/33a3901e60eb48a33fe88ef251611958f00905.src","preCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        int filesize = (int) localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        int totalLength = 0;\n        try {\n            log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats(startTime, endTime, totalLength);\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"},{"authorDate":"2000-02-11 02:04:29","commitOrder":6,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","date":"2000-02-11 02:04:29","endLine":418,"groupId":"7240","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/758983eff4f54a98f0393d218bdff7818f41d4.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"N"}],"commitId":"8ec6497d89bb1cc76c15e2f911a2ded3f8c5fbbc","commitMessage":"@@@Add progress report to <scp>.\n\nSubmitted by:\tRami Ojares\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276288 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2004-04-07 21:30:30","modifiedFileCount":"5","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2000-02-11 02:04:29","codes":[{"authorDate":"2005-09-08 02:10:57","commitOrder":7,"curCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > 102400;\n        \r\n        \r\n        long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats(startTime, endTime, totalLength);\n            fis.close();\n        }\n    }\n","date":"2005-09-08 02:10:57","endLine":247,"groupId":"0","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(FilelocalFile@InputStreamin@OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/68/d254d03744fb283cf214bd6a0e79f17e1dafed.src","preCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        int filesize = (int) localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        int totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > 102400;\n        \r\n        \r\n        int initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats(startTime, endTime, totalLength);\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"},{"authorDate":"2000-02-11 02:04:29","commitOrder":7,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","date":"2000-02-11 02:04:29","endLine":418,"groupId":"7240","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/758983eff4f54a98f0393d218bdff7818f41d4.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"N"}],"commitId":"7b5ce7f4b45291f9bb8b2683b9204ab656f3d72f","commitMessage":"@@@fix line-feeds.  set svn:eol-style\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@279394 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2005-09-08 02:10:57","modifiedFileCount":"3","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2000-02-11 02:04:29","codes":[{"authorDate":"2006-04-24 14:39:52","commitOrder":8,"curCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > 102400;\n        \r\n        \r\n        long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","date":"2006-04-24 14:39:52","endLine":251,"groupId":"11071","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(FilelocalFile@InputStreamin@OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/89/90c4c615782f15408347de3e93cce45e45617d.src","preCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > 102400;\n        \r\n        \r\n        long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            long endTime = System.currentTimeMillis();\n            logStats(startTime, endTime, totalLength);\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"},{"authorDate":"2000-02-11 02:04:29","commitOrder":8,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","date":"2000-02-11 02:04:29","endLine":418,"groupId":"7240","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/758983eff4f54a98f0393d218bdff7818f41d4.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"N"}],"commitId":"e85fe6ce604f538c5a91c5a47861980d42576bf0","commitMessage":"@@@take notice of verbosity flag when logging bug #39010\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@396453 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-04-24 14:39:52","modifiedFileCount":"1","status":"M","submitter":"Kevin Jackson"},{"authorTime":"2000-02-11 02:04:29","codes":[{"authorDate":"2007-09-25 22:38:40","commitOrder":9,"curCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","date":"2007-09-25 22:38:40","endLine":272,"groupId":"8807","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(FilelocalFile@InputStreamin@OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/79/ac8433bddee9af1c5e4b99b1e867fe99e76e8f.src","preCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > 102400;\n        \r\n        \r\n        long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"},{"authorDate":"2000-02-11 02:04:29","commitOrder":9,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","date":"2000-02-11 02:04:29","endLine":418,"groupId":"7240","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/758983eff4f54a98f0393d218bdff7818f41d4.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            } \n\n            out.write(buf, 0, numRead);\n        } \n    } \n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"N"}],"commitId":"162782c49180fb3f7dd2be97d5adfacaf8a57529","commitMessage":"@@@magic number\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@579266 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-09-25 22:38:40","modifiedFileCount":"4","status":"M","submitter":"Peter Reilly"},{"authorTime":"2007-09-25 22:50:09","codes":[{"authorDate":"2007-09-25 22:38:40","commitOrder":10,"curCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","date":"2007-09-25 22:38:40","endLine":272,"groupId":"8807","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(FilelocalFile@InputStreamin@OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/79/ac8433bddee9af1c5e4b99b1e867fe99e76e8f.src","preCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"},{"authorDate":"2007-09-25 22:50:09","commitOrder":10,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","date":"2007-09-25 22:50:09","endLine":396,"groupId":"7240","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/08/168dbd67aa25460bfb3df260c10a9bc3ff647b.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[32 * 1024];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"M"}],"commitId":"0b6d093f4671a0d477048bcfffbf55d3b7ac3bbc","commitMessage":"@@@magic number\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@579278 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-09-25 22:50:09","modifiedFileCount":"5","status":"M","submitter":"Peter Reilly"},{"authorTime":"2007-11-21 21:51:00","codes":[{"authorDate":"2007-09-25 22:38:40","commitOrder":11,"curCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","date":"2007-09-25 22:38:40","endLine":272,"groupId":"8807","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(FilelocalFile@InputStreamin@OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/79/ac8433bddee9af1c5e4b99b1e867fe99e76e8f.src","preCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"},{"authorDate":"2007-11-21 21:51:00","commitOrder":11,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","date":"2007-11-21 21:51:00","endLine":396,"groupId":"9448","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c1/7d6d0da2f4ab359048b5eb91b1e555bc770087.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = this.read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"M"}],"commitId":"75110026aa35fe98da6c696598361977c3c46c48","commitMessage":"@@@pulling out unneeded this. references in everything but the constructors/initialisers. No other changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@597087 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-11-21 21:51:00","modifiedFileCount":"3","status":"M","submitter":"Steve Loughran"},{"authorTime":"2007-11-21 21:51:00","codes":[{"authorDate":"2014-07-04 21:05:12","commitOrder":12,"curCode":"    private void sendFileToRemote(final File localFile,\n                                   final InputStream in,\n                                   final OutputStream out) throws IOException {\n        \r\n        final long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        final FileInputStream fis = new FileInputStream(localFile);\n        final byte[] buf = new byte[BUFFER_SIZE];\n        final long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        final boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        final long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                final int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                final long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","date":"2014-07-04 21:05:12","endLine":273,"groupId":"8807","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(finalFilelocalFile@finalInputStreamin@finalOutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c1/b6b8c7b5635e6c8160e7bb5f6f2a87a961ed0f.src","preCode":"    private void sendFileToRemote(File localFile,\n                                   InputStream in,\n                                   OutputStream out) throws IOException {\n        \r\n        long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        FileInputStream fis = new FileInputStream(localFile);\n        byte[] buf = new byte[BUFFER_SIZE];\n        long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2007-11-21 21:51:00","commitOrder":12,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","date":"2007-11-21 21:51:00","endLine":396,"groupId":"9448","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c1/7d6d0da2f4ab359048b5eb91b1e555bc770087.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"N"}],"commitId":"789422e131b6c2c003d94f394169a64297e986c6","commitMessage":"@@@oops - make it compile under Java5 again","date":"2014-07-04 21:05:12","modifiedFileCount":"20","status":"M","submitter":"Jan Mat?rne"},{"authorTime":"2007-11-21 21:51:00","codes":[{"authorDate":"2015-05-17 13:41:36","commitOrder":13,"curCode":"    private void sendFileToRemote(final File localFile,\n                                   final InputStream in,\n                                   final OutputStream out) throws IOException {\n        \r\n        final long filesize = localFile.length();\n        String command = \"C0\";\n        command += Integer.toOctalString(getFileMode());\n        command += \" \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        final FileInputStream fis = new FileInputStream(localFile);\n        final byte[] buf = new byte[BUFFER_SIZE];\n        final long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        final boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        final long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                final int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                final long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","date":"2015-05-17 13:42:53","endLine":281,"groupId":"8807","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(finalFilelocalFile@finalInputStreamin@finalOutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/5b/a6b5596b9459af4144e7e91a0c65af28f182ab.src","preCode":"    private void sendFileToRemote(final File localFile,\n                                   final InputStream in,\n                                   final OutputStream out) throws IOException {\n        \r\n        final long filesize = localFile.length();\n        String command = \"C0644 \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        final FileInputStream fis = new FileInputStream(localFile);\n        final byte[] buf = new byte[BUFFER_SIZE];\n        final long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        final boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        final long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                final int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                final long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"},{"authorDate":"2007-11-21 21:51:00","commitOrder":13,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","date":"2007-11-21 21:51:00","endLine":396,"groupId":"9448","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c1/7d6d0da2f4ab359048b5eb91b1e555bc770087.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"N"}],"commitId":"2f0edba2aca306e591a8f156f8af1e7155fd580e","commitMessage":"@@@all permissions to be set when uploading files/dirs\n\nhttps://bz.apache.org/bugzilla/show_bug.cgi?id=43271\n\nApparently the remote umask still comes into play and the result won't\nbe exactly what we intended it to be.\n\nBased on patch by Holly Cummins\n","date":"2015-05-17 13:42:53","modifiedFileCount":"3","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2007-11-21 21:51:00","codes":[{"authorDate":"2015-12-14 13:33:26","commitOrder":14,"curCode":"    private void sendFileToRemote(final File localFile,\n                                   final InputStream in,\n                                   final OutputStream out) throws IOException {\n        \r\n        final long filesize = localFile.length();\n\n        if (getPreserveLastModified()) {\n            String command = \"T\" + (localFile.lastModified() / 1000) + \" 0\";\n            command += \" \" + (localFile.lastModified() / 1000) + \" 0\\n\";\n            out.write(command.getBytes());\n            out.flush();\n\n            waitForAck(in);\n        }\n\n        String command = \"C0\";\n        command += Integer.toOctalString(getFileMode());\n        command += \" \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        final FileInputStream fis = new FileInputStream(localFile);\n        final byte[] buf = new byte[BUFFER_SIZE];\n        final long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        final boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        final long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                final int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                final long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","date":"2015-12-14 13:33:26","endLine":329,"groupId":"8807","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(finalFilelocalFile@finalInputStreamin@finalOutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a0/42c4ad5cc69011e900525a9af4ad0f52284c45.src","preCode":"    private void sendFileToRemote(final File localFile,\n                                   final InputStream in,\n                                   final OutputStream out) throws IOException {\n        \r\n        final long filesize = localFile.length();\n        String command = \"C0\";\n        command += Integer.toOctalString(getFileMode());\n        command += \" \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        final FileInputStream fis = new FileInputStream(localFile);\n        final byte[] buf = new byte[BUFFER_SIZE];\n        final long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        final boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        final long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                final int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                final long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"M"},{"authorDate":"2007-11-21 21:51:00","commitOrder":14,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","date":"2007-11-21 21:51:00","endLine":396,"groupId":"9448","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c1/7d6d0da2f4ab359048b5eb91b1e555bc770087.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"N"}],"commitId":"881a0ff79e095227ce00c7deefc8054f60fefa2f","commitMessage":"@@@preserveLastModified for scp uploads\n\nContributed by J. Hoffmann\n","date":"2015-12-14 13:33:26","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2007-11-21 21:51:00","codes":[{"authorDate":"2017-04-12 12:54:09","commitOrder":15,"curCode":"    private void sendFileToRemote(final File localFile,\n                                   final InputStream in,\n                                   final OutputStream out) throws IOException {\n        \r\n        final long filesize = localFile.length();\n\n        if (getPreserveLastModified()) {\n            String command = \"T\" + (localFile.lastModified() / 1000) + \" 0\";\n            command += \" \" + (localFile.lastModified() / 1000) + \" 0\\n\";\n            out.write(command.getBytes());\n            out.flush();\n\n            waitForAck(in);\n        }\n\n        String command = \"C0\";\n        command += Integer.toOctalString(getFileMode());\n        command += \" \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        final InputStream fis = Files.newInputStream(localFile.toPath());\n        final byte[] buf = new byte[BUFFER_SIZE];\n        final long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        final boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        final long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                final int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                final long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","date":"2017-04-12 12:54:09","endLine":406,"groupId":"8807","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(finalFilelocalFile@finalInputStreamin@finalOutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/21/4dd4ea132d9351fa5beb592e795c3ee9814175.src","preCode":"    private void sendFileToRemote(final File localFile,\n                                   final InputStream in,\n                                   final OutputStream out) throws IOException {\n        \r\n        final long filesize = localFile.length();\n\n        if (getPreserveLastModified()) {\n            String command = \"T\" + (localFile.lastModified() / 1000) + \" 0\";\n            command += \" \" + (localFile.lastModified() / 1000) + \" 0\\n\";\n            out.write(command.getBytes());\n            out.flush();\n\n            waitForAck(in);\n        }\n\n        String command = \"C0\";\n        command += Integer.toOctalString(getFileMode());\n        command += \" \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        final FileInputStream fis = new FileInputStream(localFile);\n        final byte[] buf = new byte[BUFFER_SIZE];\n        final long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        final boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        final long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                final int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                final long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":339,"status":"M"},{"authorDate":"2007-11-21 21:51:00","commitOrder":15,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","date":"2007-11-21 21:51:00","endLine":396,"groupId":"9448","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c1/7d6d0da2f4ab359048b5eb91b1e555bc770087.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"N"}],"commitId":"af74d1f6b882cef5f4167d972638ad886d12d58c","commitMessage":"@@@reduce GC pressure by replacing File(In|Out)putStream\n","date":"2017-04-12 12:54:09","modifiedFileCount":"84","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2007-11-21 21:51:00","codes":[{"authorDate":"2018-04-03 04:43:43","commitOrder":16,"curCode":"    private void sendFileToRemote(final File localFile,\n                                   final InputStream in,\n                                   final OutputStream out) throws IOException {\n        \r\n        final long filesize = localFile.length();\n\n        if (getPreserveLastModified()) {\n            String command = \"T\" + (localFile.lastModified() / 1000) + \" 0\";\n            command += \" \" + (localFile.lastModified() / 1000) + \" 0\\n\";\n            out.write(command.getBytes());\n            out.flush();\n\n            waitForAck(in);\n        }\n\n        String command = \"C0\";\n        command += Integer.toOctalString(getFileMode());\n        command += \" \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        final byte[] buf = new byte[BUFFER_SIZE];\n        final long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        final boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        final long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try (InputStream fis = Files.newInputStream(localFile.toPath())) {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                final int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                final long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n        }\n    }\n","date":"2018-04-03 04:43:43","endLine":388,"groupId":"10437","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"sendFileToRemote","params":"(finalFilelocalFile@finalInputStreamin@finalOutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/81/ed07f4a14b230ba3c566d3662ea35e244f4907.src","preCode":"    private void sendFileToRemote(final File localFile,\n                                   final InputStream in,\n                                   final OutputStream out) throws IOException {\n        \r\n        final long filesize = localFile.length();\n\n        if (getPreserveLastModified()) {\n            String command = \"T\" + (localFile.lastModified() / 1000) + \" 0\";\n            command += \" \" + (localFile.lastModified() / 1000) + \" 0\\n\";\n            out.write(command.getBytes());\n            out.flush();\n\n            waitForAck(in);\n        }\n\n        String command = \"C0\";\n        command += Integer.toOctalString(getFileMode());\n        command += \" \" + filesize + \" \";\n        command += localFile.getName();\n        command += \"\\n\";\n\n        out.write(command.getBytes());\n        out.flush();\n\n        waitForAck(in);\n\n        \r\n        final InputStream fis = Files.newInputStream(localFile.toPath());\n        final byte[] buf = new byte[BUFFER_SIZE];\n        final long startTime = System.currentTimeMillis();\n        long totalLength = 0;\n\n        \r\n        final boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;\n        \r\n        \r\n        final long initFilesize = filesize;\n        int percentTransmitted = 0;\n\n        try {\n            if (this.getVerbose()) {\n                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());\n            }\n            while (true) {\n                final int len = fis.read(buf, 0, buf.length);\n                if (len <= 0) {\n                    break;\n                }\n                out.write(buf, 0, len);\n                totalLength += len;\n\n                if (trackProgress) {\n                    percentTransmitted = trackProgress(initFilesize,\n                                                       totalLength,\n                                                       percentTransmitted);\n                }\n            }\n            out.flush();\n            sendAck(out);\n            waitForAck(in);\n        } finally {\n            if (this.getVerbose()) {\n                final long endTime = System.currentTimeMillis();\n                logStats(startTime, endTime, totalLength);\n            }\n            fis.close();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"M"},{"authorDate":"2007-11-21 21:51:00","commitOrder":16,"curCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","date":"2007-11-21 21:51:00","endLine":396,"groupId":"10437","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"copyEntryContents","params":"(OutputStreamout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c1/7d6d0da2f4ab359048b5eb91b1e555bc770087.src","preCode":"    public void copyEntryContents(OutputStream out) throws IOException {\n        byte[] buf = new byte[LARGE_BUFFER_SIZE];\n\n        while (true) {\n            int numRead = read(buf, 0, buf.length);\n\n            if (numRead == -1) {\n                break;\n            }\n\n            out.write(buf, 0, numRead);\n        }\n    }\n","realPath":"src/main/org/apache/tools/tar/TarInputStream.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":384,"status":"N"}],"commitId":"6319e4988b24f7830cf7048534c1caacb38ce550","commitMessage":"@@@Use try with resources","date":"2018-04-03 04:43:43","modifiedFileCount":"15","status":"M","submitter":"Gintas Grigelionis"}]
