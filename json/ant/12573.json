[{"authorTime":"2003-07-23 20:06:04","codes":[{"authorDate":"2003-07-23 20:06:04","commitOrder":1,"curCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                        \"Not allowed to use the polymorhic form\"\n                        + \" for this element\");\n                }\n                Class elementClass = nestedCreator.getElementClass();\n                ComponentHelper helper =\n                    ComponentHelper.getComponentHelper(project);\n                nestedObject = ComponentHelper.getComponentHelper(project)\n                    .createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\n                        \"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(\n                    project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","date":"2003-07-23 20:06:04","endLine":1116,"groupId":"3682","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/36/2999ae848412ee16433d1436310e74911c702c.src","preCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                        \"Not allowed to use the polymorhic form\"\n                        + \" for this element\");\n                }\n                Class elementClass = nestedCreator.getElementClass();\n                ComponentHelper helper =\n                    ComponentHelper.getComponentHelper(project);\n                nestedObject = ComponentHelper.getComponentHelper(project)\n                    .createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\n                        \"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(\n                    project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1075,"status":"B"},{"authorDate":"2003-07-23 20:06:04","commitOrder":1,"curCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","date":"2003-07-23 20:06:04","endLine":1143,"groupId":"3682","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"store","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/36/2999ae848412ee16433d1436310e74911c702c.src","preCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1123,"status":"B"}],"commitId":"5460755b447223e93e926e11a08e4df4f0e0ddb5","commitMessage":"@@@This commit implements:\n    - addConfigured(Type) to introspection rules\n    - ant-type magic polymorhic attribute\n    - allow types that have Project as a constructor to\n      be used in addName(Type) and addConfiguredName(Type) methods\n    - allow addName and addConfiguredName methods to have higher\n      presedence that createName() methods.\n\nPR: 19897\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@274906 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-07-23 20:06:04","modifiedFileCount":"3","status":"B","submitter":"Peter Reilly"},{"authorTime":"2003-07-23 20:06:04","codes":[{"authorDate":"2003-09-13 20:58:33","commitOrder":2,"curCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                        \"Not allowed to use the polymorphic form\"\n                        + \" for this element\");\n                }\n                Class elementClass = nestedCreator.getElementClass();\n                ComponentHelper helper =\n                    ComponentHelper.getComponentHelper(project);\n                nestedObject = ComponentHelper.getComponentHelper(project)\n                    .createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\n                        \"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(\n                    project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","date":"2003-09-13 20:58:33","endLine":1111,"groupId":"3682","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/2c/314b79cdc4aa91e9b45776d0d7157bbe42cd18.src","preCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                        \"Not allowed to use the polymorhic form\"\n                        + \" for this element\");\n                }\n                Class elementClass = nestedCreator.getElementClass();\n                ComponentHelper helper =\n                    ComponentHelper.getComponentHelper(project);\n                nestedObject = ComponentHelper.getComponentHelper(project)\n                    .createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\n                        \"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(\n                    project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1070,"status":"M"},{"authorDate":"2003-07-23 20:06:04","commitOrder":2,"curCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","date":"2003-07-23 20:06:04","endLine":1143,"groupId":"3682","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"store","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/36/2999ae848412ee16433d1436310e74911c702c.src","preCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1123,"status":"N"}],"commitId":"8268a3c4e43813becf50d3d892b077d96f519746","commitMessage":"@@@Spelling\nSubmitted by: Larry Shatzer (Larry dot Shatzer At Spirent Dot Com)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@275235 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2003-09-13 20:58:33","modifiedFileCount":"18","status":"M","submitter":"Antoine Levy-Lambert"},{"authorTime":"2003-07-23 20:06:04","codes":[{"authorDate":"2004-05-13 15:06:49","commitOrder":3,"curCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                        \"Not allowed to use the polymorphic form\"\n                        + \" for this element\");\n                }\n                Class elementClass = nestedCreator.getElementClass();\n                ComponentHelper helper =\n                    ComponentHelper.getComponentHelper(project);\n                nestedObject = helper.createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\n                        \"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(\n                    project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","date":"2004-05-13 15:06:49","endLine":1147,"groupId":"3682","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f2/1235f85647bc388361a22c40580c9dd8288823.src","preCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                        \"Not allowed to use the polymorphic form\"\n                        + \" for this element\");\n                }\n                Class elementClass = nestedCreator.getElementClass();\n                ComponentHelper helper =\n                    ComponentHelper.getComponentHelper(project);\n                nestedObject = ComponentHelper.getComponentHelper(project)\n                    .createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\n                        \"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(\n                    project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1107,"status":"M"},{"authorDate":"2003-07-23 20:06:04","commitOrder":3,"curCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","date":"2003-07-23 20:06:04","endLine":1143,"groupId":"3682","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"store","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/36/2999ae848412ee16433d1436310e74911c702c.src","preCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1123,"status":"N"}],"commitId":"9cc95d1554ec7aaf066e6c643112d3f53613ae74","commitMessage":"@@@cosmetics\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@276452 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2004-05-13 15:06:49","modifiedFileCount":"3","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2003-07-23 20:06:04","codes":[{"authorDate":"2005-06-13 01:55:14","commitOrder":4,"curCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                        \"Not allowed to use the polymorphic form\"\n                        + \" for this element\");\n                }\n                ComponentHelper helper =\n                    ComponentHelper.getComponentHelper(project);\n                nestedObject = helper.createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\n                        \"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(\n                    project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","date":"2005-06-13 01:55:14","endLine":1172,"groupId":"3682","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/53/eef8fe269d13a95e88c3196797c1590d1f2d9c.src","preCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                        \"Not allowed to use the polymorphic form\"\n                        + \" for this element\");\n                }\n                Class elementClass = nestedCreator.getElementClass();\n                ComponentHelper helper =\n                    ComponentHelper.getComponentHelper(project);\n                nestedObject = helper.createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\n                        \"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(\n                    project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1133,"status":"M"},{"authorDate":"2003-07-23 20:06:04","commitOrder":4,"curCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","date":"2003-07-23 20:06:04","endLine":1143,"groupId":"3682","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"store","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/36/2999ae848412ee16433d1436310e74911c702c.src","preCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1123,"status":"N"}],"commitId":"c5a01d909ced9e431f155f2225d8232d1301cbde","commitMessage":"@@@Removed unused local variables.\n\nI think there is an error in ConCat.  see added comment.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@278420 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2005-06-13 01:55:14","modifiedFileCount":"13","status":"M","submitter":"Jacobus Martinus Kruithof"},{"authorTime":"2007-04-23 22:45:30","codes":[{"authorDate":"2007-04-23 22:45:30","commitOrder":5,"curCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                        \"Not allowed to use the polymorphic form\"\n                        + \" for this element\");\n                }\n                ComponentHelper helper =\n                    ComponentHelper.getComponentHelper(project);\n                nestedObject = helper.createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\n                        \"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(\n                    project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","date":"2007-04-23 22:45:30","endLine":1239,"groupId":"3682","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c1/3d1486372f524e787192d9666ed22239110176.src","preCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                        \"Not allowed to use the polymorphic form\"\n                        + \" for this element\");\n                }\n                ComponentHelper helper =\n                    ComponentHelper.getComponentHelper(project);\n                nestedObject = helper.createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\n                        \"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(\n                    project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1204,"status":"M"},{"authorDate":"2007-04-23 22:45:30","commitOrder":5,"curCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","date":"2007-04-23 22:45:30","endLine":1270,"groupId":"3682","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"store","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c1/3d1486372f524e787192d9666ed22239110176.src","preCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                Throwable t = ex.getTargetException();\n                if (t instanceof BuildException) {\n                    throw (BuildException) t;\n                }\n                throw new BuildException(t);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1254,"status":"M"}],"commitId":"ee2779b5b94b830a888590c16076952941290922","commitMessage":"@@@Very delicate changes to Introspection helper\n\n1. warnings in the javadocs about how sensitive the file is\n2. factoring out of the code to handle InvocationTargetExeptions\n3. some more javadocs\n4. some IDE-hinted warnings about static classes.  access modifiers on abstract/private class constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@531486 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-04-23 22:45:30","modifiedFileCount":"1","status":"M","submitter":"Steve Loughran"},{"authorTime":"2007-06-22 11:08:49","codes":[{"authorDate":"2007-06-22 11:08:49","commitOrder":6,"curCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                            \"Not allowed to use the polymorphic form for this element\");\n                }\n                ComponentHelper helper = ComponentHelper.getComponentHelper(project);\n                nestedObject = helper.createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType == null) {\n                    throw ex;\n                }\n                throw new BuildException(\"Invalid type used \" + polyType);\n            } catch (InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","date":"2007-06-22 11:08:49","endLine":1186,"groupId":"2356","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/54/9adbca0ab8f23084308b99d8cae8e9b7a67344.src","preCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                        \"Not allowed to use the polymorphic form\"\n                        + \" for this element\");\n                }\n                ComponentHelper helper =\n                    ComponentHelper.getComponentHelper(project);\n                nestedObject = helper.createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\n                        \"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(\n                    project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1156,"status":"M"},{"authorDate":"2007-06-22 11:08:49","commitOrder":6,"curCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType == null) {\n                    throw ex;\n                }\n                throw new BuildException(\"Invalid type used \" + polyType);\n            } catch (InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","date":"2007-06-22 11:08:49","endLine":1214,"groupId":"2356","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"store","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/54/9adbca0ab8f23084308b99d8cae8e9b7a67344.src","preCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType != null) {\n                    throw new BuildException(\n                        \"Invalid type used \" + polyType);\n                }\n                throw ex;\n            } catch (InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1199,"status":"M"}],"commitId":"939a6bbf2fb97ec29ecf79c86013846656d8751c","commitMessage":"@@@fmting/max line length.  remove unnecessary Java 1.2 compatibility.  some unnecessary elses\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@549681 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-06-22 11:08:49","modifiedFileCount":"1","status":"M","submitter":"Matthew Jason Benson"},{"authorTime":"2014-07-04 15:14:00","codes":[{"authorDate":"2014-07-04 15:14:00","commitOrder":7,"curCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                            \"Not allowed to use the polymorphic form for this element\");\n                }\n                final ComponentHelper helper = ComponentHelper.getComponentHelper(project);\n                nestedObject = helper.createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (final IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (final InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (final IllegalArgumentException ex) {\n                if (polyType == null) {\n                    throw ex;\n                }\n                throw new BuildException(\"Invalid type used \" + polyType);\n            } catch (final InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","date":"2014-07-04 15:14:00","endLine":1360,"groupId":"2356","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a1/e6874d9d5ce770b954bb8010c16a2b2b97caa5.src","preCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                            \"Not allowed to use the polymorphic form for this element\");\n                }\n                ComponentHelper helper = ComponentHelper.getComponentHelper(project);\n                nestedObject = helper.createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType == null) {\n                    throw ex;\n                }\n                throw new BuildException(\"Invalid type used \" + polyType);\n            } catch (InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1330,"status":"M"},{"authorDate":"2014-07-04 15:14:00","commitOrder":7,"curCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (final IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (final InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (final IllegalArgumentException ex) {\n                if (polyType == null) {\n                    throw ex;\n                }\n                throw new BuildException(\"Invalid type used \" + polyType);\n            } catch (final InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","date":"2014-07-04 15:14:00","endLine":1388,"groupId":"2356","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"store","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a1/e6874d9d5ce770b954bb8010c16a2b2b97caa5.src","preCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (IllegalArgumentException ex) {\n                if (polyType == null) {\n                    throw ex;\n                }\n                throw new BuildException(\"Invalid type used \" + polyType);\n            } catch (InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1373,"status":"M"}],"commitId":"1b76f1b6dae88a7a158e50222bb19f6f5ca26d70","commitMessage":"@@@checkstyle","date":"2014-07-04 15:14:00","modifiedFileCount":"117","status":"M","submitter":"Jan Mat?rne"},{"authorTime":"2018-04-03 04:39:13","codes":[{"authorDate":"2018-04-03 04:39:13","commitOrder":8,"curCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                            \"Not allowed to use the polymorphic form for this element\");\n                }\n                final ComponentHelper helper = ComponentHelper.getComponentHelper(project);\n                nestedObject = helper.createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (final IllegalAccessException | InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (final IllegalArgumentException ex) {\n                if (polyType == null) {\n                    throw ex;\n                }\n                throw new BuildException(\"Invalid type used \" + polyType);\n            } catch (final InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","date":"2018-04-03 04:39:13","endLine":1351,"groupId":"12573","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/39/d4ec2c037c641e64ea767b572c2aa73346f37d.src","preCode":"        public Object create() {\n            if (polyType != null) {\n                if (!nestedCreator.isPolyMorphic()) {\n                    throw new BuildException(\n                            \"Not allowed to use the polymorphic form for this element\");\n                }\n                final ComponentHelper helper = ComponentHelper.getComponentHelper(project);\n                nestedObject = helper.createComponent(polyType);\n                if (nestedObject == null) {\n                    throw new BuildException(\"Unable to create object of type \" + polyType);\n                }\n            }\n            try {\n                nestedObject = nestedCreator.create(project, parent, nestedObject);\n                if (project != null) {\n                    project.setProjectReference(nestedObject);\n                }\n                return nestedObject;\n            } catch (final IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (final InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (final IllegalArgumentException ex) {\n                if (polyType == null) {\n                    throw ex;\n                }\n                throw new BuildException(\"Invalid type used \" + polyType);\n            } catch (final InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1323,"status":"M"},{"authorDate":"2018-04-03 04:39:13","commitOrder":8,"curCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (final IllegalAccessException | InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (final IllegalArgumentException ex) {\n                if (polyType == null) {\n                    throw ex;\n                }\n                throw new BuildException(\"Invalid type used \" + polyType);\n            } catch (final InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","date":"2018-04-03 04:39:13","endLine":1377,"groupId":"12573","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"store","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/39/d4ec2c037c641e64ea767b572c2aa73346f37d.src","preCode":"        public void store() {\n            try {\n                nestedCreator.store(parent, nestedObject);\n            } catch (final IllegalAccessException ex) {\n                throw new BuildException(ex);\n            } catch (final InstantiationException ex) {\n                throw new BuildException(ex);\n            } catch (final IllegalArgumentException ex) {\n                if (polyType == null) {\n                    throw ex;\n                }\n                throw new BuildException(\"Invalid type used \" + polyType);\n            } catch (final InvocationTargetException ex) {\n                throw extractBuildException(ex);\n            }\n        }\n","realPath":"src/main/org/apache/tools/ant/IntrospectionHelper.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1364,"status":"M"}],"commitId":"22b69b9273e42df4d8d7375994d053144c4bbc0e","commitMessage":"@@@Squash catch","date":"2018-04-03 04:39:13","modifiedFileCount":"16","status":"M","submitter":"Gintas Grigelionis"}]
