[{"authorTime":"2017-12-13 21:37:41","codes":[{"authorDate":"2017-12-13 21:37:41","commitOrder":1,"curCode":"        private void writeFailed(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!failed.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_FAILURE);\n            final Optional<Throwable> cause = failed.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n            }\n            writer.writeEndElement();\n        }\n","date":"2018-03-17 18:53:44","endLine":275,"groupId":"9004","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeFailed","params":"(finalXMLStreamWriterwriter@finalTestIdentifiertestIdentifier)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3a/94a80d52bf6e5b7c33b5158371a00a0dd534f6.src","preCode":"        private void writeFailed(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!failed.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_FAILURE);\n            final Optional<Throwable> cause = failed.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n            }\n            writer.writeEndElement();\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"B"},{"authorDate":"2017-12-13 21:37:41","commitOrder":1,"curCode":"        private void writeAborted(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!aborted.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_ABORTED);\n            final Optional<Throwable> cause = aborted.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n            }\n            writer.writeEndElement();\n        }\n","date":"2018-03-17 18:53:44","endLine":292,"groupId":"9004","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeAborted","params":"(finalXMLStreamWriterwriter@finalTestIdentifiertestIdentifier)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3a/94a80d52bf6e5b7c33b5158371a00a0dd534f6.src","preCode":"        private void writeAborted(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!aborted.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_ABORTED);\n            final Optional<Throwable> cause = aborted.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n            }\n            writer.writeEndElement();\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"B"}],"commitId":"063e60813af955e6db6353ede79249a7bab9d63e","commitMessage":"@@@JUnit 5 support - A new junitlauncher task\n","date":"2018-03-17 18:53:44","modifiedFileCount":"0","status":"B","submitter":"Jaikiran Pai"},{"authorTime":"2017-12-13 21:37:41","codes":[{"authorDate":"2019-10-10 16:23:00","commitOrder":2,"curCode":"        private void writeFailed(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!failed.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_FAILURE);\n            final Optional<Throwable> cause = failed.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(cause.get()));\n            }\n            writer.writeEndElement();\n        }\n","date":"2019-10-10 16:23:52","endLine":290,"groupId":"9004","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeFailed","params":"(finalXMLStreamWriterwriter@finalTestIdentifiertestIdentifier)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6e/a6e7b049b8e6bac6d3519ea60eb7ece5d081dd.src","preCode":"        private void writeFailed(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!failed.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_FAILURE);\n            final Optional<Throwable> cause = failed.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n            }\n            writer.writeEndElement();\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"},{"authorDate":"2017-12-13 21:37:41","commitOrder":2,"curCode":"        private void writeAborted(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!aborted.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_ABORTED);\n            final Optional<Throwable> cause = aborted.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n            }\n            writer.writeEndElement();\n        }\n","date":"2018-03-17 18:53:44","endLine":292,"groupId":"9004","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeAborted","params":"(finalXMLStreamWriterwriter@finalTestIdentifiertestIdentifier)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3a/94a80d52bf6e5b7c33b5158371a00a0dd534f6.src","preCode":"        private void writeAborted(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!aborted.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_ABORTED);\n            final Optional<Throwable> cause = aborted.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n            }\n            writer.writeEndElement();\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"N"}],"commitId":"23a3665c3ee78c6b7eea8888ddee4cde72f72270","commitMessage":"@@@bz-63827 Print out the stacktrace when writing out the XML from \"legacy-xml\" formatter of junitlauncher\n","date":"2019-10-10 16:23:52","modifiedFileCount":"1","status":"M","submitter":"Jaikiran Pai"},{"authorTime":"2019-10-10 16:48:59","codes":[{"authorDate":"2019-10-10 16:23:00","commitOrder":3,"curCode":"        private void writeFailed(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!failed.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_FAILURE);\n            final Optional<Throwable> cause = failed.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(cause.get()));\n            }\n            writer.writeEndElement();\n        }\n","date":"2019-10-10 16:23:52","endLine":290,"groupId":"9004","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"writeFailed","params":"(finalXMLStreamWriterwriter@finalTestIdentifiertestIdentifier)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6e/a6e7b049b8e6bac6d3519ea60eb7ece5d081dd.src","preCode":"        private void writeFailed(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!failed.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_FAILURE);\n            final Optional<Throwable> cause = failed.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(cause.get()));\n            }\n            writer.writeEndElement();\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"N"},{"authorDate":"2019-10-10 16:48:59","commitOrder":3,"curCode":"        private void writeAborted(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!aborted.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_ABORTED);\n            final Optional<Throwable> cause = aborted.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(cause.get()));\n            }\n            writer.writeEndElement();\n        }\n","date":"2019-10-10 16:48:59","endLine":309,"groupId":"9004","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"writeAborted","params":"(finalXMLStreamWriterwriter@finalTestIdentifiertestIdentifier)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/bf/42199e821559a9c02582c783996fba18ee6715.src","preCode":"        private void writeAborted(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!aborted.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_ABORTED);\n            final Optional<Throwable> cause = aborted.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n            }\n            writer.writeEndElement();\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"}],"commitId":"02ffb258c880a40c06048f33decf17bd63094ec4","commitMessage":"@@@bz-63827 Print out stacktrace in \"legacy-xml\" when the test is aborted too\n","date":"2019-10-10 16:48:59","modifiedFileCount":"1","status":"M","submitter":"Jaikiran Pai"},{"authorTime":"2019-10-10 19:38:54","codes":[{"authorDate":"2019-10-10 19:38:54","commitOrder":4,"curCode":"        private void writeFailed(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!failed.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_FAILURE);\n            final Optional<Throwable> cause = failed.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(t));\n            }\n            writer.writeEndElement();\n        }\n","date":"2019-10-10 19:38:54","endLine":290,"groupId":"9004","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"writeFailed","params":"(finalXMLStreamWriterwriter@finalTestIdentifiertestIdentifier)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/13/e552cabf6a434f1f70ff22944b44148eb077be.src","preCode":"        private void writeFailed(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!failed.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_FAILURE);\n            final Optional<Throwable> cause = failed.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(cause.get()));\n            }\n            writer.writeEndElement();\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"},{"authorDate":"2019-10-10 19:38:54","commitOrder":4,"curCode":"        private void writeAborted(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!aborted.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_ABORTED);\n            final Optional<Throwable> cause = aborted.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(t));\n            }\n            writer.writeEndElement();\n        }\n","date":"2019-10-10 19:38:54","endLine":309,"groupId":"9004","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"writeAborted","params":"(finalXMLStreamWriterwriter@finalTestIdentifiertestIdentifier)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/13/e552cabf6a434f1f70ff22944b44148eb077be.src","preCode":"        private void writeAborted(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!aborted.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_ABORTED);\n            final Optional<Throwable> cause = aborted.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(cause.get()));\n            }\n            writer.writeEndElement();\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"}],"commitId":"a7a19068069b58c1a63dcc26361cddb79b9da158","commitMessage":"@@@bz-63827 Minor change\n","date":"2019-10-10 19:38:54","modifiedFileCount":"1","status":"M","submitter":"Jaikiran Pai"},{"authorTime":"2021-01-17 01:22:53","codes":[{"authorDate":"2021-01-17 01:22:53","commitOrder":5,"curCode":"        private void writeFailed(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!failed.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_FAILURE);\n            final Optional<Throwable> cause = failed.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writeAttribute(writer, ATTR_MESSAGE, message);\n                }\n                writeAttribute(writer, ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(t));\n            }\n            writer.writeEndElement();\n        }\n","date":"2021-01-17 01:22:53","endLine":305,"groupId":"10461","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"writeFailed","params":"(finalXMLStreamWriterwriter@finalTestIdentifiertestIdentifier)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/35/df2782c442d19f625682c5237b9baa3e680dc5.src","preCode":"        private void writeFailed(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!failed.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_FAILURE);\n            final Optional<Throwable> cause = failed.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(t));\n            }\n            writer.writeEndElement();\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"M"},{"authorDate":"2021-01-17 01:22:53","commitOrder":5,"curCode":"        private void writeAborted(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!aborted.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_ABORTED);\n            final Optional<Throwable> cause = aborted.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writeAttribute(writer, ATTR_MESSAGE, message);\n                }\n                writeAttribute(writer, ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(t));\n            }\n            writer.writeEndElement();\n        }\n","date":"2021-01-17 01:22:53","endLine":324,"groupId":"10461","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"writeAborted","params":"(finalXMLStreamWriterwriter@finalTestIdentifiertestIdentifier)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/35/df2782c442d19f625682c5237b9baa3e680dc5.src","preCode":"        private void writeAborted(final XMLStreamWriter writer, final TestIdentifier testIdentifier) throws XMLStreamException {\n            if (!aborted.containsKey(testIdentifier)) {\n                return;\n            }\n            writer.writeStartElement(ELEM_ABORTED);\n            final Optional<Throwable> cause = aborted.get(testIdentifier);\n            if (cause.isPresent()) {\n                final Throwable t = cause.get();\n                final String message = t.getMessage();\n                if (message != null && !message.trim().isEmpty()) {\n                    writer.writeAttribute(ATTR_MESSAGE, message);\n                }\n                writer.writeAttribute(ATTR_TYPE, t.getClass().getName());\n                \r\n                writer.writeCData(StringUtils.getStackTrace(t));\n            }\n            writer.writeEndElement();\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/junitlauncher/LegacyXmlResultFormatter.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"M"}],"commitId":"623d5663093d918451f1c02701a16306ba996283","commitMessage":"@@@encode characters illegal in XML in junitlauncher's report\n\nalso avoid double-encoding of sysout/err\n\nBugzilla Reports 63436 and 65030\n","date":"2021-01-17 01:22:53","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"}]
