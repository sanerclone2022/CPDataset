[{"authorTime":"2010-02-16 22:41:11","codes":[{"authorDate":"2006-09-22 03:10:48","commitOrder":2,"curCode":"    public void testMerge() {\n        byte[] local =\n            ExtraFieldUtils.mergeLocalFileDataData(new ZipExtraField[] {a, dummy});\n        assertEquals(\"local length\", data.length, local.length);\n        for (int i=0; i<local.length; i++) {\n            assertEquals(\"local byte \"+i, data[i], local[i]);\n        }\n\n        byte[] dummyCentral = dummy.getCentralDirectoryData();\n        byte[] data2 = new byte[4 + aLocal.length + 4 + dummyCentral.length];\n        System.arraycopy(data, 0, data2, 0, 4 + aLocal.length + 2);\n        System.arraycopy(dummy.getCentralDirectoryLength().getBytes(), 0,\n                         data2, 4+aLocal.length+2, 2);\n        System.arraycopy(dummyCentral, 0, data2,\n                         4+aLocal.length+4, dummyCentral.length);\n\n\n        byte[] central =\n            ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField[] {a, dummy});\n        assertEquals(\"central length\", data2.length, central.length);\n        for (int i=0; i<central.length; i++) {\n            assertEquals(\"central byte \"+i, data2[i], central[i]);\n        }\n\n    }\n","date":"2006-09-22 03:10:48","endLine":113,"groupId":"8894","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMerge","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c4/05138f7d47ea141646d29afad224d969e3593a.src","preCode":"    public void testMerge() {\n        byte[] local =\n            ExtraFieldUtils.mergeLocalFileDataData(new ZipExtraField[] {a, dummy});\n        assertEquals(\"local length\", data.length, local.length);\n        for (int i=0; i<local.length; i++) {\n            assertEquals(\"local byte \"+i, data[i], local[i]);\n        }\n\n        byte[] dummyCentral = dummy.getCentralDirectoryData();\n        byte[] data2 = new byte[4 + aLocal.length + 4 + dummyCentral.length];\n        System.arraycopy(data, 0, data2, 0, 4 + aLocal.length + 2);\n        System.arraycopy(dummy.getCentralDirectoryLength().getBytes(), 0,\n                         data2, 4+aLocal.length+2, 2);\n        System.arraycopy(dummyCentral, 0, data2,\n                         4+aLocal.length+4, dummyCentral.length);\n\n\n        byte[] central =\n            ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField[] {a, dummy});\n        assertEquals(\"central length\", data2.length, central.length);\n        for (int i=0; i<central.length; i++) {\n            assertEquals(\"central byte \"+i, data2[i], central[i]);\n        }\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"NB"},{"authorDate":"2010-02-16 22:41:11","commitOrder":2,"curCode":"    public void testMergeWithUnparseableData() throws Exception {\n        ZipExtraField d = new UnparseableExtraFieldData();\n        d.parseFromLocalFileData(new byte[] {1, 0, 1, 0}, 0, 4);\n        byte[] local =\n            ExtraFieldUtils.mergeLocalFileDataData(new ZipExtraField[] {a, d});\n        assertEquals(\"local length\", data.length - 1, local.length);\n        for (int i = 0; i < local.length; i++) {\n            assertEquals(\"local byte \" + i, data[i], local[i]);\n        }\n\n        byte[] dCentral = d.getCentralDirectoryData();\n        byte[] data2 = new byte[4 + aLocal.length + dCentral.length];\n        System.arraycopy(data, 0, data2, 0, 4 + aLocal.length + 2);\n        System.arraycopy(dCentral, 0, data2,\n                         4 + aLocal.length, dCentral.length);\n\n\n        byte[] central =\n            ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField[] {a, d});\n        assertEquals(\"central length\", data2.length, central.length);\n        for (int i = 0; i < central.length; i++) {\n            assertEquals(\"central byte \" + i, data2[i], central[i]);\n        }\n\n    }\n","date":"2010-02-16 22:41:11","endLine":194,"groupId":"9198","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMergeWithUnparseableData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/40/0efd266f6a5246545357837a6319400fca1278.src","preCode":"    public void testMergeWithUnparseableData() throws Exception {\n        ZipExtraField d = new UnparseableExtraFieldData();\n        d.parseFromLocalFileData(new byte[] {1, 0, 1, 0}, 0, 4);\n        byte[] local =\n            ExtraFieldUtils.mergeLocalFileDataData(new ZipExtraField[] {a, d});\n        assertEquals(\"local length\", data.length - 1, local.length);\n        for (int i = 0; i < local.length; i++) {\n            assertEquals(\"local byte \" + i, data[i], local[i]);\n        }\n\n        byte[] dCentral = d.getCentralDirectoryData();\n        byte[] data2 = new byte[4 + aLocal.length + dCentral.length];\n        System.arraycopy(data, 0, data2, 0, 4 + aLocal.length + 2);\n        System.arraycopy(dCentral, 0, data2,\n                         4 + aLocal.length, dCentral.length);\n\n\n        byte[] central =\n            ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField[] {a, d});\n        assertEquals(\"central length\", data2.length, central.length);\n        for (int i = 0; i < central.length; i++) {\n            assertEquals(\"central byte \" + i, data2[i], central[i]);\n        }\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"B"}],"commitId":"f665a4d33564ecc12851996978a9847024643829","commitMessage":"@@@accept a wider range of existing zip archives by being more lenient when parsing extra fields\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@910537 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-02-16 22:41:11","modifiedFileCount":"6","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2012-06-05 00:35:06","codes":[{"authorDate":"2006-09-22 03:10:48","commitOrder":3,"curCode":"    public void testMerge() {\n        byte[] local =\n            ExtraFieldUtils.mergeLocalFileDataData(new ZipExtraField[] {a, dummy});\n        assertEquals(\"local length\", data.length, local.length);\n        for (int i=0; i<local.length; i++) {\n            assertEquals(\"local byte \"+i, data[i], local[i]);\n        }\n\n        byte[] dummyCentral = dummy.getCentralDirectoryData();\n        byte[] data2 = new byte[4 + aLocal.length + 4 + dummyCentral.length];\n        System.arraycopy(data, 0, data2, 0, 4 + aLocal.length + 2);\n        System.arraycopy(dummy.getCentralDirectoryLength().getBytes(), 0,\n                         data2, 4+aLocal.length+2, 2);\n        System.arraycopy(dummyCentral, 0, data2,\n                         4+aLocal.length+4, dummyCentral.length);\n\n\n        byte[] central =\n            ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField[] {a, dummy});\n        assertEquals(\"central length\", data2.length, central.length);\n        for (int i=0; i<central.length; i++) {\n            assertEquals(\"central byte \"+i, data2[i], central[i]);\n        }\n\n    }\n","date":"2006-09-22 03:10:48","endLine":113,"groupId":"1010","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMerge","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c4/05138f7d47ea141646d29afad224d969e3593a.src","preCode":"    public void testMerge() {\n        byte[] local =\n            ExtraFieldUtils.mergeLocalFileDataData(new ZipExtraField[] {a, dummy});\n        assertEquals(\"local length\", data.length, local.length);\n        for (int i=0; i<local.length; i++) {\n            assertEquals(\"local byte \"+i, data[i], local[i]);\n        }\n\n        byte[] dummyCentral = dummy.getCentralDirectoryData();\n        byte[] data2 = new byte[4 + aLocal.length + 4 + dummyCentral.length];\n        System.arraycopy(data, 0, data2, 0, 4 + aLocal.length + 2);\n        System.arraycopy(dummy.getCentralDirectoryLength().getBytes(), 0,\n                         data2, 4+aLocal.length+2, 2);\n        System.arraycopy(dummyCentral, 0, data2,\n                         4+aLocal.length+4, dummyCentral.length);\n\n\n        byte[] central =\n            ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField[] {a, dummy});\n        assertEquals(\"central length\", data2.length, central.length);\n        for (int i=0; i<central.length; i++) {\n            assertEquals(\"central byte \"+i, data2[i], central[i]);\n        }\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"N"},{"authorDate":"2012-06-05 00:35:06","commitOrder":3,"curCode":"    public void testMergeWithUnparseableData() throws Exception {\n        ZipExtraField d = new UnparseableExtraFieldData();\n        byte[] b = UNRECOGNIZED_HEADER.getBytes();\n        d.parseFromLocalFileData(new byte[] {b[0], b[1], 1, 0}, 0, 4);\n        byte[] local =\n            ExtraFieldUtils.mergeLocalFileDataData(new ZipExtraField[] {a, d});\n        assertEquals(\"local length\", data.length - 1, local.length);\n        for (int i = 0; i < local.length; i++) {\n            assertEquals(\"local byte \" + i, data[i], local[i]);\n        }\n\n        byte[] dCentral = d.getCentralDirectoryData();\n        byte[] data2 = new byte[4 + aLocal.length + dCentral.length];\n        System.arraycopy(data, 0, data2, 0, 4 + aLocal.length + 2);\n        System.arraycopy(dCentral, 0, data2,\n                         4 + aLocal.length, dCentral.length);\n\n\n        byte[] central =\n            ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField[] {a, d});\n        assertEquals(\"central length\", data2.length, central.length);\n        for (int i = 0; i < central.length; i++) {\n            assertEquals(\"central byte \" + i, data2[i], central[i]);\n        }\n\n    }\n","date":"2012-06-05 00:35:06","endLine":202,"groupId":"1010","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMergeWithUnparseableData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/1c/497689467fa6610fa3b8127713de569faacaf3.src","preCode":"    public void testMergeWithUnparseableData() throws Exception {\n        ZipExtraField d = new UnparseableExtraFieldData();\n        d.parseFromLocalFileData(new byte[] {1, 0, 1, 0}, 0, 4);\n        byte[] local =\n            ExtraFieldUtils.mergeLocalFileDataData(new ZipExtraField[] {a, d});\n        assertEquals(\"local length\", data.length - 1, local.length);\n        for (int i = 0; i < local.length; i++) {\n            assertEquals(\"local byte \" + i, data[i], local[i]);\n        }\n\n        byte[] dCentral = d.getCentralDirectoryData();\n        byte[] data2 = new byte[4 + aLocal.length + dCentral.length];\n        System.arraycopy(data, 0, data2, 0, 4 + aLocal.length + 2);\n        System.arraycopy(dCentral, 0, data2,\n                         4 + aLocal.length, dCentral.length);\n\n\n        byte[] central =\n            ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField[] {a, d});\n        assertEquals(\"central length\", data2.length, central.length);\n        for (int i = 0; i < central.length; i++) {\n            assertEquals(\"central byte \" + i, data2[i], central[i]);\n        }\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"dee95e3acc5154aee03ff5f91f9a56426ae79f3f","commitMessage":"@@@merge Zip64 support from Commons Compress\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1346025 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-06-05 00:35:06","modifiedFileCount":"19","status":"M","submitter":"Stefan Bodewig"}]
