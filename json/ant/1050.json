[{"authorTime":"2006-09-22 03:10:48","codes":[{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    private boolean compareFiles(String name1, String name2) {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n        try {\n            if (!file1.exists() || !file2.exists()) {\n                System.out.println(\"One or both files do not exist:\" + name1 + \", \" + name2);\n                return false;\n            }\n\n            if (file1.length() != file2.length()) {\n                System.out.println(\"File size mismatch:\" + name1 + \"(\" + file1.length() + \"), \" +\n                                   name2  + \"(\" + file2.length() + \")\");\n                return false;\n            }\n\n            \r\n            byte[] buffer1 = new byte[BUF_SIZE];\n            byte[] buffer2 = new byte[BUF_SIZE];\n\n            FileInputStream fis1 = new FileInputStream(file1);\n            FileInputStream fis2 = new FileInputStream(file2);\n            int index = 0;\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i, ++index) {\n                    if (buffer1[i] != buffer2[i]) {\n                        System.out.println(\"Bytes mismatch:\" + name1 + \", \" + name2 +\n                                           \" at byte \" + index);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        catch (IOException e) {\n            System.out.println(\"IOException comparing files: \" + name1 + \", \" + name2);\n            return false;\n        }\n    }\n","date":"2006-09-22 03:10:48","endLine":94,"groupId":"5431","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"compareFiles","params":"(Stringname1@Stringname2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/64/b588580e4bb6b55ac5ca8f82fedfebd6243691.src","preCode":"    private boolean compareFiles(String name1, String name2) {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n        try {\n            if (!file1.exists() || !file2.exists()) {\n                System.out.println(\"One or both files do not exist:\" + name1 + \", \" + name2);\n                return false;\n            }\n\n            if (file1.length() != file2.length()) {\n                System.out.println(\"File size mismatch:\" + name1 + \"(\" + file1.length() + \"), \" +\n                                   name2  + \"(\" + file2.length() + \")\");\n                return false;\n            }\n\n            \r\n            byte[] buffer1 = new byte[BUF_SIZE];\n            byte[] buffer2 = new byte[BUF_SIZE];\n\n            FileInputStream fis1 = new FileInputStream(file1);\n            FileInputStream fis2 = new FileInputStream(file2);\n            int index = 0;\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i, ++index) {\n                    if (buffer1[i] != buffer2[i]) {\n                        System.out.println(\"Bytes mismatch:\" + name1 + \", \" + name2 +\n                                           \" at byte \" + index);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        catch (IOException e) {\n            System.out.println(\"IOException comparing files: \" + name1 + \", \" + name2);\n            return false;\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/i18n/TranslateTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    private boolean compareFiles(String name1, String name2) {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n        try {\n            if (!file1.exists() || !file2.exists()) {\n                System.out.println(\"One or both files do not exist:\" + name1 + \", \" + name2);\n                return false;\n            }\n\n            if (file1.length() != file2.length()) {\n                System.out.println(\"File size mismatch:\" + name1 + \"(\" + file1.length() + \"), \" +\n                                   name2  + \"(\" + file2.length() + \")\");\n                return false;\n            }\n\n            \r\n            byte[] buffer1 = new byte[BUF_SIZE];\n            byte[] buffer2 = new byte[BUF_SIZE];\n\n            FileInputStream fis1 = new FileInputStream(file1);\n            FileInputStream fis2 = new FileInputStream(file2);\n            int index = 0;\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i, ++index) {\n                    if (buffer1[i] != buffer2[i]) {\n                        System.out.println(\"Bytes mismatch:\" + name1 + \", \" + name2 +\n                                           \" at byte \" + index);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        catch (IOException e) {\n            System.out.println(\"IOException comparing files: \" + name1 + \", \" + name2);\n            return false;\n        }\n    }\n","date":"2006-09-22 03:10:48","endLine":220,"groupId":"5431","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"compareFiles","params":"(Stringname1@Stringname2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/4f/014285f6c9503a3917f50f535b48aceea730a1.src","preCode":"    private boolean compareFiles(String name1, String name2) {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n        try {\n            if (!file1.exists() || !file2.exists()) {\n                System.out.println(\"One or both files do not exist:\" + name1 + \", \" + name2);\n                return false;\n            }\n\n            if (file1.length() != file2.length()) {\n                System.out.println(\"File size mismatch:\" + name1 + \"(\" + file1.length() + \"), \" +\n                                   name2  + \"(\" + file2.length() + \")\");\n                return false;\n            }\n\n            \r\n            byte[] buffer1 = new byte[BUF_SIZE];\n            byte[] buffer2 = new byte[BUF_SIZE];\n\n            FileInputStream fis1 = new FileInputStream(file1);\n            FileInputStream fis2 = new FileInputStream(file2);\n            int index = 0;\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i, ++index) {\n                    if (buffer1[i] != buffer2[i]) {\n                        System.out.println(\"Bytes mismatch:\" + name1 + \", \" + name2 +\n                                           \" at byte \" + index);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        catch (IOException e) {\n            System.out.println(\"IOException comparing files: \" + name1 + \", \" + name2);\n            return false;\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"B"}],"commitId":"73d66d2c6d6e0384fd66eba1f20ef97469c49b18","commitMessage":"@@@Restructuring to allow junit and antunit tests both.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@448636 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-09-22 03:10:48","modifiedFileCount":"0","status":"B","submitter":"Matthew Jason Benson"},{"authorTime":"2006-09-22 03:10:48","codes":[{"authorDate":"2014-04-08 19:06:38","commitOrder":2,"curCode":"    private boolean compareFiles(File file1, File file2) {\n        try {\n            if (!file1.exists() || !file2.exists()) {\n                System.out.println(\"One or both files do not exist:\" + file1.getAbsoluteFile() + \", \" + file2.getAbsoluteFile());\n                return false;\n            }\n\n            if (file1.length() != file2.length()) {\n                System.out.println(\"File size mismatch:\" + file1.getAbsoluteFile() + \"(\" + file1.length() + \"), \" +\n                                   file2.getAbsoluteFile()  + \"(\" + file2.length() + \")\");\n                return false;\n            }\n\n            \r\n            byte[] buffer1 = new byte[BUF_SIZE];\n            byte[] buffer2 = new byte[BUF_SIZE];\n\n            FileInputStream fis1 = new FileInputStream(file1);\n            FileInputStream fis2 = new FileInputStream(file2);\n            int index = 0;\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i, ++index) {\n                    if (buffer1[i] != buffer2[i]) {\n                        System.out.println(\"Bytes mismatch:\" + file1.getAbsoluteFile() + \", \" + file2.getAbsoluteFile() +\n                                           \" at byte \" + index);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        catch (IOException e) {\n            System.out.println(\"IOException comparing files: \" + file1.getAbsoluteFile() + \", \" + file2.getAbsoluteFile());\n            return false;\n        }\n    }\n","date":"2014-04-08 19:06:38","endLine":88,"groupId":"5431","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"compareFiles","params":"(Filefile1@Filefile2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/31/1e7714b6aee4b7b7cf4d46dad4cc3a9aa22201.src","preCode":"    private boolean compareFiles(String name1, String name2) {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n        try {\n            if (!file1.exists() || !file2.exists()) {\n                System.out.println(\"One or both files do not exist:\" + name1 + \", \" + name2);\n                return false;\n            }\n\n            if (file1.length() != file2.length()) {\n                System.out.println(\"File size mismatch:\" + name1 + \"(\" + file1.length() + \"), \" +\n                                   name2  + \"(\" + file2.length() + \")\");\n                return false;\n            }\n\n            \r\n            byte[] buffer1 = new byte[BUF_SIZE];\n            byte[] buffer2 = new byte[BUF_SIZE];\n\n            FileInputStream fis1 = new FileInputStream(file1);\n            FileInputStream fis2 = new FileInputStream(file2);\n            int index = 0;\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i, ++index) {\n                    if (buffer1[i] != buffer2[i]) {\n                        System.out.println(\"Bytes mismatch:\" + name1 + \", \" + name2 +\n                                           \" at byte \" + index);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        catch (IOException e) {\n            System.out.println(\"IOException comparing files: \" + name1 + \", \" + name2);\n            return false;\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/i18n/TranslateTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2006-09-22 03:10:48","commitOrder":2,"curCode":"    private boolean compareFiles(String name1, String name2) {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n        try {\n            if (!file1.exists() || !file2.exists()) {\n                System.out.println(\"One or both files do not exist:\" + name1 + \", \" + name2);\n                return false;\n            }\n\n            if (file1.length() != file2.length()) {\n                System.out.println(\"File size mismatch:\" + name1 + \"(\" + file1.length() + \"), \" +\n                                   name2  + \"(\" + file2.length() + \")\");\n                return false;\n            }\n\n            \r\n            byte[] buffer1 = new byte[BUF_SIZE];\n            byte[] buffer2 = new byte[BUF_SIZE];\n\n            FileInputStream fis1 = new FileInputStream(file1);\n            FileInputStream fis2 = new FileInputStream(file2);\n            int index = 0;\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i, ++index) {\n                    if (buffer1[i] != buffer2[i]) {\n                        System.out.println(\"Bytes mismatch:\" + name1 + \", \" + name2 +\n                                           \" at byte \" + index);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        catch (IOException e) {\n            System.out.println(\"IOException comparing files: \" + name1 + \", \" + name2);\n            return false;\n        }\n    }\n","date":"2006-09-22 03:10:48","endLine":220,"groupId":"5431","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"compareFiles","params":"(Stringname1@Stringname2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/4f/014285f6c9503a3917f50f535b48aceea730a1.src","preCode":"    private boolean compareFiles(String name1, String name2) {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n        try {\n            if (!file1.exists() || !file2.exists()) {\n                System.out.println(\"One or both files do not exist:\" + name1 + \", \" + name2);\n                return false;\n            }\n\n            if (file1.length() != file2.length()) {\n                System.out.println(\"File size mismatch:\" + name1 + \"(\" + file1.length() + \"), \" +\n                                   name2  + \"(\" + file2.length() + \")\");\n                return false;\n            }\n\n            \r\n            byte[] buffer1 = new byte[BUF_SIZE];\n            byte[] buffer2 = new byte[BUF_SIZE];\n\n            FileInputStream fis1 = new FileInputStream(file1);\n            FileInputStream fis2 = new FileInputStream(file2);\n            int index = 0;\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i, ++index) {\n                    if (buffer1[i] != buffer2[i]) {\n                        System.out.println(\"Bytes mismatch:\" + name1 + \", \" + name2 +\n                                           \" at byte \" + index);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        catch (IOException e) {\n            System.out.println(\"IOException comparing files: \" + name1 + \", \" + name2);\n            return false;\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"N"}],"commitId":"0d9a9e084149338164a2e73a28d7eea7e62722fe","commitMessage":"@@@changing tests to adopt unique temporary directories\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1585684 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-08 19:06:38","modifiedFileCount":"7","status":"M","submitter":"Antoine Levy-Lambert"},{"authorTime":"2014-04-19 05:00:38","codes":[{"authorDate":"2014-04-19 05:00:38","commitOrder":3,"curCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        FileInputStream fis1 = new FileInputStream(file1);\n        FileInputStream fis2 = new FileInputStream(file2);\n        int index = 0;\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i, ++index) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2014-04-19 05:00:38","endLine":85,"groupId":"5431","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"compareFiles","params":"(Filefile1@Filefile2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6a/bc4f2d711d5883d1f6547942b5545698b2cf2b.src","preCode":"    private boolean compareFiles(File file1, File file2) {\n        try {\n            if (!file1.exists() || !file2.exists()) {\n                System.out.println(\"One or both files do not exist:\" + file1.getAbsoluteFile() + \", \" + file2.getAbsoluteFile());\n                return false;\n            }\n\n            if (file1.length() != file2.length()) {\n                System.out.println(\"File size mismatch:\" + file1.getAbsoluteFile() + \"(\" + file1.length() + \"), \" +\n                                   file2.getAbsoluteFile()  + \"(\" + file2.length() + \")\");\n                return false;\n            }\n\n            \r\n            byte[] buffer1 = new byte[BUF_SIZE];\n            byte[] buffer2 = new byte[BUF_SIZE];\n\n            FileInputStream fis1 = new FileInputStream(file1);\n            FileInputStream fis2 = new FileInputStream(file2);\n            int index = 0;\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i, ++index) {\n                    if (buffer1[i] != buffer2[i]) {\n                        System.out.println(\"Bytes mismatch:\" + file1.getAbsoluteFile() + \", \" + file2.getAbsoluteFile() +\n                                           \" at byte \" + index);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        catch (IOException e) {\n            System.out.println(\"IOException comparing files: \" + file1.getAbsoluteFile() + \", \" + file2.getAbsoluteFile());\n            return false;\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/i18n/TranslateTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2014-04-19 05:00:38","commitOrder":3,"curCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        FileInputStream fis1 = new FileInputStream(file1);\n        FileInputStream fis2 = new FileInputStream(file2);\n        int index = 0;\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i, ++index) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","date":"2014-04-19 05:00:38","endLine":238,"groupId":"5431","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"compareFiles","params":"(Stringname1@Stringname2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f4/df4a3839f975a7dbf04fa4ac50dcec8be0f352.src","preCode":"    private boolean compareFiles(String name1, String name2) {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n        try {\n            if (!file1.exists() || !file2.exists()) {\n                System.out.println(\"One or both files do not exist:\" + name1 + \", \" + name2);\n                return false;\n            }\n\n            if (file1.length() != file2.length()) {\n                System.out.println(\"File size mismatch:\" + name1 + \"(\" + file1.length() + \"), \" +\n                                   name2  + \"(\" + file2.length() + \")\");\n                return false;\n            }\n\n            \r\n            byte[] buffer1 = new byte[BUF_SIZE];\n            byte[] buffer2 = new byte[BUF_SIZE];\n\n            FileInputStream fis1 = new FileInputStream(file1);\n            FileInputStream fis2 = new FileInputStream(file2);\n            int index = 0;\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i, ++index) {\n                    if (buffer1[i] != buffer2[i]) {\n                        System.out.println(\"Bytes mismatch:\" + name1 + \", \" + name2 +\n                                           \" at byte \" + index);\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        catch (IOException e) {\n            System.out.println(\"IOException comparing files: \" + name1 + \", \" + name2);\n            return false;\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"b61c80746dd5df73899390826e197d2656784f91","commitMessage":"@@@Test improvements: convert to JUnit4.  improved error testing and remove sleeps\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1588563 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-19 05:00:38","modifiedFileCount":"268","status":"M","submitter":"mclarke"},{"authorTime":"2017-12-02 04:18:02","codes":[{"authorDate":"2017-12-02 04:18:02","commitOrder":4,"curCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis1 = new FileInputStream(file1);\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis2 = new FileInputStream(file2);\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","date":"2017-12-02 04:18:02","endLine":86,"groupId":"4274","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"compareFiles","params":"(Filefile1@Filefile2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/e5/8e5ce99864c794391e4e4f7ee28dd6c15b8d10.src","preCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        FileInputStream fis1 = new FileInputStream(file1);\n        FileInputStream fis2 = new FileInputStream(file2);\n        int index = 0;\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i, ++index) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/i18n/TranslateTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2017-12-02 04:18:02","commitOrder":4,"curCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis1 = new FileInputStream(file1);\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis2 = new FileInputStream(file2);\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","date":"2017-12-02 04:18:02","endLine":239,"groupId":"4274","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"compareFiles","params":"(Stringname1@Stringname2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/7c/f905e897d5c2b0ed3968c86d42499af164dbf7.src","preCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        FileInputStream fis1 = new FileInputStream(file1);\n        FileInputStream fis2 = new FileInputStream(file2);\n        int index = 0;\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i, ++index) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"866ce9f550d2c7d3fa44319f8acbfb75a3ad3c42","commitMessage":"@@@Checkstyle: mostly whitespace","date":"2017-12-02 04:18:02","modifiedFileCount":"177","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2017-12-02 04:18:02","codes":[{"authorDate":"2017-12-10 05:27:26","commitOrder":5,"curCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis1 = new FileInputStream(file1);\n        try {\n            @SuppressWarnings(\"resource\")\n            FileInputStream fis2 = new FileInputStream(file2);\n            try {\n                int read = 0;\n                while ((read = fis1.read(buffer1)) != -1) {\n                    fis2.read(buffer2);\n                    for (int i = 0; i < read; ++i) {\n                        if (buffer1[i] != buffer2[i]) {\n                            return false;\n                        }\n                    }\n                }\n            } finally {\n                fis2.close();\n            }\n        } finally {\n            fis1.close();\n        }\n        return true;\n    }\n","date":"2017-12-10 05:27:26","endLine":94,"groupId":"9046","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"compareFiles","params":"(Filefile1@Filefile2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/15/564a7fb49624173ce09068c3622a8017f87db6.src","preCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis1 = new FileInputStream(file1);\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis2 = new FileInputStream(file2);\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/i18n/TranslateTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2017-12-02 04:18:02","commitOrder":5,"curCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis1 = new FileInputStream(file1);\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis2 = new FileInputStream(file2);\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","date":"2017-12-02 04:18:02","endLine":239,"groupId":"4274","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"compareFiles","params":"(Stringname1@Stringname2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/7c/f905e897d5c2b0ed3968c86d42499af164dbf7.src","preCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis1 = new FileInputStream(file1);\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis2 = new FileInputStream(file2);\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"N"}],"commitId":"cf6965b58b83f647640c0d9dc4f18683078de6f8","commitMessage":"@@@Merge branch '1.9.x'\n","date":"2017-12-10 05:27:26","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-12-02 04:18:02","codes":[{"authorDate":"2018-04-02 22:46:15","commitOrder":6,"curCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1)) {\n            try (FileInputStream fis2 = new FileInputStream(file2)) {\n                int read = 0;\n                while ((read = fis1.read(buffer1)) != -1) {\n                    fis2.read(buffer2);\n                    for (int i = 0; i < read; ++i) {\n                        if (buffer1[i] != buffer2[i]) {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }\n","date":"2018-04-03 01:46:31","endLine":86,"groupId":"0","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"compareFiles","params":"(Filefile1@Filefile2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/63/e0943ebcb4b734d6398092fedb112be74e8ee7.src","preCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis1 = new FileInputStream(file1);\n        try {\n            @SuppressWarnings(\"resource\")\n            FileInputStream fis2 = new FileInputStream(file2);\n            try {\n                int read = 0;\n                while ((read = fis1.read(buffer1)) != -1) {\n                    fis2.read(buffer2);\n                    for (int i = 0; i < read; ++i) {\n                        if (buffer1[i] != buffer2[i]) {\n                            return false;\n                        }\n                    }\n                }\n            } finally {\n                fis2.close();\n            }\n        } finally {\n            fis1.close();\n        }\n        return true;\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/i18n/TranslateTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2017-12-02 04:18:02","commitOrder":6,"curCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis1 = new FileInputStream(file1);\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis2 = new FileInputStream(file2);\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","date":"2017-12-02 04:18:02","endLine":239,"groupId":"4274","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"compareFiles","params":"(Stringname1@Stringname2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/7c/f905e897d5c2b0ed3968c86d42499af164dbf7.src","preCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis1 = new FileInputStream(file1);\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis2 = new FileInputStream(file2);\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"N"}],"commitId":"28e51503e3b08c5feeb7a6af7528283a517835a0","commitMessage":"@@@Simplify and tidy up","date":"2018-04-03 01:46:31","modifiedFileCount":"41","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-23 05:55:41","codes":[{"authorDate":"2018-04-02 22:46:15","commitOrder":7,"curCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1)) {\n            try (FileInputStream fis2 = new FileInputStream(file2)) {\n                int read = 0;\n                while ((read = fis1.read(buffer1)) != -1) {\n                    fis2.read(buffer2);\n                    for (int i = 0; i < read; ++i) {\n                        if (buffer1[i] != buffer2[i]) {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }\n","date":"2018-04-03 01:46:31","endLine":86,"groupId":"0","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"compareFiles","params":"(Filefile1@Filefile2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/63/e0943ebcb4b734d6398092fedb112be74e8ee7.src","preCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1)) {\n            try (FileInputStream fis2 = new FileInputStream(file2)) {\n                int read = 0;\n                while ((read = fis1.read(buffer1)) != -1) {\n                    fis2.read(buffer2);\n                    for (int i = 0; i < read; ++i) {\n                        if (buffer1[i] != buffer2[i]) {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/i18n/TranslateTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"},{"authorDate":"2018-04-23 05:55:41","commitOrder":7,"curCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n        if (!file1.exists() || !file2.exists() || file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1);\n             FileInputStream fis2 = new FileInputStream(file2)) {\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i) {\n                    if (buffer1[i] != buffer2[i]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n\n    }\n","date":"2018-04-23 05:55:41","endLine":233,"groupId":"1628","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"compareFiles","params":"(Stringname1@Stringname2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/9f/01a7a3ba7df60c4b8953faf3df8924532f2ac8.src","preCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis1 = new FileInputStream(file1);\n        @SuppressWarnings(\"resource\")\n        FileInputStream fis2 = new FileInputStream(file2);\n        int read = 0;\n        while ((read = fis1.read(buffer1)) != -1) {\n            fis2.read(buffer2);\n            for (int i = 0; i < read; ++i) {\n                if (buffer1[i] != buffer2[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"4b1d9ae3a6bf6ebdec5fd1d6e347da2f286cbb7a","commitMessage":"@@@More matchers/fixtures/optimizations","date":"2018-04-23 05:55:41","modifiedFileCount":"20","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-24 13:02:19","codes":[{"authorDate":"2018-04-02 22:46:15","commitOrder":8,"curCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1)) {\n            try (FileInputStream fis2 = new FileInputStream(file2)) {\n                int read = 0;\n                while ((read = fis1.read(buffer1)) != -1) {\n                    fis2.read(buffer2);\n                    for (int i = 0; i < read; ++i) {\n                        if (buffer1[i] != buffer2[i]) {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }\n","date":"2018-04-03 01:46:31","endLine":86,"groupId":"0","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"compareFiles","params":"(Filefile1@Filefile2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/63/e0943ebcb4b734d6398092fedb112be74e8ee7.src","preCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1)) {\n            try (FileInputStream fis2 = new FileInputStream(file2)) {\n                int read = 0;\n                while ((read = fis1.read(buffer1)) != -1) {\n                    fis2.read(buffer2);\n                    for (int i = 0; i < read; ++i) {\n                        if (buffer1[i] != buffer2[i]) {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/i18n/TranslateTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"},{"authorDate":"2018-04-24 13:02:19","commitOrder":8,"curCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = buildRule.getProject().resolveFile(name1);\n        File file2 = buildRule.getProject().resolveFile(name2);\n\n        if (!file1.exists() || !file2.exists() || file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1);\n             FileInputStream fis2 = new FileInputStream(file2)) {\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i) {\n                    if (buffer1[i] != buffer2[i]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n\n    }\n","date":"2018-04-24 13:08:44","endLine":225,"groupId":"1628","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"compareFiles","params":"(Stringname1@Stringname2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/b9/89f6d0cfd5e51b5157893a8643d4745fd93e43.src","preCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = new File(System.getProperty(\"root\"), name1);\n        File file2 = new File(System.getProperty(\"root\"), name2);\n\n        if (!file1.exists() || !file2.exists() || file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1);\n             FileInputStream fis2 = new FileInputStream(file2)) {\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i) {\n                    if (buffer1[i] != buffer2[i]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"}],"commitId":"f6cffb3658299752392b4cd010d221fb9c5ca2cf","commitMessage":"@@@Use BuildFileRule rather that raw ?root? property","date":"2018-04-24 13:08:44","modifiedFileCount":"13","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-24 13:02:19","codes":[{"authorDate":"2018-04-24 13:08:11","commitOrder":9,"curCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1);\n             FileInputStream fis2 = new FileInputStream(file2)) {\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i) {\n                    if (buffer1[i] != buffer2[i]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n","date":"2018-04-24 13:08:44","endLine":85,"groupId":"1050","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"compareFiles","params":"(Filefile1@Filefile2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/99/ff85b92f71181fd5568adb03fc31e7457809c6.src","preCode":"    private boolean compareFiles(File file1, File file2) throws IOException {\n        if (!file1.exists() || !file2.exists()) {\n            return false;\n        }\n\n        if (file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1)) {\n            try (FileInputStream fis2 = new FileInputStream(file2)) {\n                int read = 0;\n                while ((read = fis1.read(buffer1)) != -1) {\n                    fis2.read(buffer2);\n                    for (int i = 0; i < read; ++i) {\n                        if (buffer1[i] != buffer2[i]) {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/i18n/TranslateTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2018-04-24 13:02:19","commitOrder":9,"curCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = buildRule.getProject().resolveFile(name1);\n        File file2 = buildRule.getProject().resolveFile(name2);\n\n        if (!file1.exists() || !file2.exists() || file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1);\n             FileInputStream fis2 = new FileInputStream(file2)) {\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i) {\n                    if (buffer1[i] != buffer2[i]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n\n    }\n","date":"2018-04-24 13:08:44","endLine":225,"groupId":"1050","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"compareFiles","params":"(Stringname1@Stringname2)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/b9/89f6d0cfd5e51b5157893a8643d4745fd93e43.src","preCode":"    private boolean compareFiles(String name1, String name2) throws IOException {\n        File file1 = buildRule.getProject().resolveFile(name1);\n        File file2 = buildRule.getProject().resolveFile(name2);\n\n        if (!file1.exists() || !file2.exists() || file1.length() != file2.length()) {\n            return false;\n        }\n\n        \r\n        byte[] buffer1 = new byte[BUF_SIZE];\n        byte[] buffer2 = new byte[BUF_SIZE];\n\n        try (FileInputStream fis1 = new FileInputStream(file1);\n             FileInputStream fis2 = new FileInputStream(file2)) {\n            int read = 0;\n            while ((read = fis1.read(buffer1)) != -1) {\n                fis2.read(buffer2);\n                for (int i = 0; i < read; ++i) {\n                    if (buffer1[i] != buffer2[i]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"N"}],"commitId":"44cb398444c4dab32fa2b0ebb27303f9db605222","commitMessage":"@@@Tidy up the code (use try with resources)","date":"2018-04-24 13:08:44","modifiedFileCount":"5","status":"M","submitter":"Gintas Grigelionis"}]
