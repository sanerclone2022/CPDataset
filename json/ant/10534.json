[{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2018-08-13 04:07:06","commitOrder":5,"curCode":"    public BufferedImage executeDrawOperation() {\n        BufferedImage bi = new BufferedImage(width + (strokeWidth * 2),\n            height + (strokeWidth * 2), BufferedImage.TYPE_4BYTE_ABGR_PRE);\n\n        Graphics2D graphics = bi.createGraphics();\n\n        if (!\"transparent\".equalsIgnoreCase(stroke)) {\n            BasicStroke bStroke = new BasicStroke(strokeWidth);\n            graphics.setColor(ColorMapper.getColorByName(stroke));\n            graphics.setStroke(bStroke);\n            graphics.draw(new Arc2D.Double(strokeWidth, strokeWidth, width,\n                height, start, stop, type));\n        }\n\n        if (!\"transparent\".equalsIgnoreCase(fill)) {\n            graphics.setColor(ColorMapper.getColorByName(fill));\n            graphics.fill(new Arc2D.Double(strokeWidth, strokeWidth,\n                width, height, start, stop, type));\n        }\n\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                BufferedImage img = ((DrawOperation) instr).executeDrawOperation();\n                graphics.drawImage(img, null, 0, 0);\n            } else if (instr instanceof TransformOperation) {\n                bi = ((TransformOperation) instr).executeTransformOperation(bi);\n                graphics = bi.createGraphics();\n            }\n        }\n        return bi;\n    }\n","date":"2018-08-13 04:07:06","endLine":96,"groupId":"6701","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"executeDrawOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0f/dbaf7dcd1c603dfd312df07b72749a00c8aac2.src","preCode":"    public BufferedImage executeDrawOperation() {\n        BufferedImage bi = new BufferedImage(width + (strokeWidth * 2),\n            height + (strokeWidth * 2), BufferedImage.TYPE_4BYTE_ABGR_PRE);\n\n        Graphics2D graphics = bi.createGraphics();\n\n        if (!\"transparent\".equalsIgnoreCase(stroke)) {\n            BasicStroke bStroke = new BasicStroke(strokeWidth);\n            graphics.setColor(ColorMapper.getColorByName(stroke));\n            graphics.setStroke(bStroke);\n            graphics.draw(new Arc2D.Double(strokeWidth, strokeWidth, width,\n                height, start, stop, type));\n        }\n\n        if (!\"transparent\".equalsIgnoreCase(fill)) {\n            graphics.setColor(ColorMapper.getColorByName(fill));\n            graphics.fill(new Arc2D.Double(strokeWidth, strokeWidth,\n                width, height, start, stop, type));\n        }\n\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                BufferedImage img = ((DrawOperation) instr).executeDrawOperation();\n                graphics.drawImage(img, null, 0, 0);\n            } else if (instr instanceof TransformOperation) {\n                bi = ((TransformOperation) instr).executeTransformOperation(bi);\n                graphics = bi.createGraphics();\n            }\n        }\n        return bi;\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/imageio/Arc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"},{"authorDate":"2017-04-13 23:15:22","commitOrder":5,"curCode":"    public PlanarImage executeDrawOperation() {\n        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR_PRE);\n\n        Graphics2D graphics = bi.createGraphics();\n\n        if (!\"transparent\".equalsIgnoreCase(stroke)) {\n            BasicStroke bStroke = new BasicStroke(stroke_width);\n            graphics.setColor(ColorMapper.getColorByName(stroke));\n            graphics.setStroke(bStroke);\n            graphics.draw(new Ellipse2D.Double(0, 0, width, height));\n        }\n\n        if (!\"transparent\".equalsIgnoreCase(fill)) {\n            graphics.setColor(ColorMapper.getColorByName(fill));\n            graphics.fill(new Ellipse2D.Double(0, 0, width, height));\n        }\n\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                PlanarImage img = ((DrawOperation) instr).executeDrawOperation();\n                graphics.drawImage(img.getAsBufferedImage(), null, 0, 0);\n            } else if (instr instanceof TransformOperation) {\n                PlanarImage image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n                graphics = bi.createGraphics();\n            }\n        }\n        return PlanarImage.wrapRenderedImage(bi);\n    }\n","date":"2017-04-13 23:15:22","endLine":84,"groupId":"7276","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"executeDrawOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/46/a3b8bc62f189fde6b14ac9964ed7eaeb366d80.src","preCode":"    public PlanarImage executeDrawOperation() {\n        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR_PRE);\n\n        Graphics2D graphics = bi.createGraphics();\n\n        if (!\"transparent\".equalsIgnoreCase(stroke)) {\n            BasicStroke bStroke = new BasicStroke(stroke_width);\n            graphics.setColor(ColorMapper.getColorByName(stroke));\n            graphics.setStroke(bStroke);\n            graphics.draw(new Ellipse2D.Double(0, 0, width, height));\n        }\n\n        if (!\"transparent\".equalsIgnoreCase(fill)) {\n            graphics.setColor(ColorMapper.getColorByName(fill));\n            graphics.fill(new Ellipse2D.Double(0, 0, width, height));\n        }\n\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                PlanarImage img = ((DrawOperation) instr).executeDrawOperation();\n                graphics.drawImage(img.getAsBufferedImage(), null, 0, 0);\n            } else if (instr instanceof TransformOperation) {\n                PlanarImage image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n                graphics = bi.createGraphics();\n            }\n        }\n        return PlanarImage.wrapRenderedImage(bi);\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Ellipse.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"NB"}],"commitId":"ed567daf3218575642d0a19b88ab2400f39ac579","commitMessage":"@@@ImageIO task (a replacement for Image task)","date":"2018-08-13 04:07:06","modifiedFileCount":"2","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2018-11-15 05:32:21","commitOrder":6,"curCode":"    public BufferedImage executeDrawOperation() {\n        BufferedImage bi = new BufferedImage(width + (strokeWidth * 2),\n            height + (strokeWidth * 2), BufferedImage.TYPE_4BYTE_ABGR_PRE);\n\n        Graphics2D graphics = bi.createGraphics();\n\n        if (!\"transparent\".equalsIgnoreCase(stroke)) {\n            BasicStroke bStroke = new BasicStroke(strokeWidth);\n            graphics.setColor(ColorMapper.getColorByName(stroke));\n            graphics.setStroke(bStroke);\n            graphics.draw(new Arc2D.Double(strokeWidth, strokeWidth, width,\n                height, start, stop, type.getIndex()));\n        }\n\n        if (!\"transparent\".equalsIgnoreCase(fill)) {\n            graphics.setColor(ColorMapper.getColorByName(fill));\n            graphics.fill(new Arc2D.Double(strokeWidth, strokeWidth,\n                width, height, start, stop, type.getIndex()));\n        }\n\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                BufferedImage img = ((DrawOperation) instr).executeDrawOperation();\n                graphics.drawImage(img, null, 0, 0);\n            } else if (instr instanceof TransformOperation) {\n                bi = ((TransformOperation) instr).executeTransformOperation(bi);\n                graphics = bi.createGraphics();\n            }\n        }\n        return bi;\n    }\n","date":"2018-11-15 05:32:21","endLine":93,"groupId":"10534","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"executeDrawOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/be/7931737d3689c9fd977cc98548652957dc41f3.src","preCode":"    public BufferedImage executeDrawOperation() {\n        BufferedImage bi = new BufferedImage(width + (strokeWidth * 2),\n            height + (strokeWidth * 2), BufferedImage.TYPE_4BYTE_ABGR_PRE);\n\n        Graphics2D graphics = bi.createGraphics();\n\n        if (!\"transparent\".equalsIgnoreCase(stroke)) {\n            BasicStroke bStroke = new BasicStroke(strokeWidth);\n            graphics.setColor(ColorMapper.getColorByName(stroke));\n            graphics.setStroke(bStroke);\n            graphics.draw(new Arc2D.Double(strokeWidth, strokeWidth, width,\n                height, start, stop, type));\n        }\n\n        if (!\"transparent\".equalsIgnoreCase(fill)) {\n            graphics.setColor(ColorMapper.getColorByName(fill));\n            graphics.fill(new Arc2D.Double(strokeWidth, strokeWidth,\n                width, height, start, stop, type));\n        }\n\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                BufferedImage img = ((DrawOperation) instr).executeDrawOperation();\n                graphics.drawImage(img, null, 0, 0);\n            } else if (instr instanceof TransformOperation) {\n                bi = ((TransformOperation) instr).executeTransformOperation(bi);\n                graphics = bi.createGraphics();\n            }\n        }\n        return bi;\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/imageio/Arc.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":6,"curCode":"    public PlanarImage executeDrawOperation() {\n        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR_PRE);\n\n        Graphics2D graphics = bi.createGraphics();\n\n        if (!\"transparent\".equalsIgnoreCase(stroke)) {\n            BasicStroke bStroke = new BasicStroke(stroke_width);\n            graphics.setColor(ColorMapper.getColorByName(stroke));\n            graphics.setStroke(bStroke);\n            graphics.draw(new Ellipse2D.Double(0, 0, width, height));\n        }\n\n        if (!\"transparent\".equalsIgnoreCase(fill)) {\n            graphics.setColor(ColorMapper.getColorByName(fill));\n            graphics.fill(new Ellipse2D.Double(0, 0, width, height));\n        }\n\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                PlanarImage img = ((DrawOperation) instr).executeDrawOperation();\n                graphics.drawImage(img.getAsBufferedImage(), null, 0, 0);\n            } else if (instr instanceof TransformOperation) {\n                PlanarImage image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n                graphics = bi.createGraphics();\n            }\n        }\n        return PlanarImage.wrapRenderedImage(bi);\n    }\n","date":"2017-04-13 23:15:22","endLine":84,"groupId":"10534","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"executeDrawOperation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/46/a3b8bc62f189fde6b14ac9964ed7eaeb366d80.src","preCode":"    public PlanarImage executeDrawOperation() {\n        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR_PRE);\n\n        Graphics2D graphics = bi.createGraphics();\n\n        if (!\"transparent\".equalsIgnoreCase(stroke)) {\n            BasicStroke bStroke = new BasicStroke(stroke_width);\n            graphics.setColor(ColorMapper.getColorByName(stroke));\n            graphics.setStroke(bStroke);\n            graphics.draw(new Ellipse2D.Double(0, 0, width, height));\n        }\n\n        if (!\"transparent\".equalsIgnoreCase(fill)) {\n            graphics.setColor(ColorMapper.getColorByName(fill));\n            graphics.fill(new Ellipse2D.Double(0, 0, width, height));\n        }\n\n        for (ImageOperation instr : instructions) {\n            if (instr instanceof DrawOperation) {\n                PlanarImage img = ((DrawOperation) instr).executeDrawOperation();\n                graphics.drawImage(img.getAsBufferedImage(), null, 0, 0);\n            } else if (instr instanceof TransformOperation) {\n                PlanarImage image = ((TransformOperation) instr)\n                    .executeTransformOperation(PlanarImage.wrapRenderedImage(bi));\n                bi = image.getAsBufferedImage();\n                graphics = bi.createGraphics();\n            }\n        }\n        return PlanarImage.wrapRenderedImage(bi);\n    }\n","realPath":"src/main/org/apache/tools/ant/types/optional/image/Ellipse.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"}],"commitId":"e208ad936016e871412d19848ea15db54f8e8b52","commitMessage":"@@@Implement ArcType as suggested","date":"2018-11-15 05:32:21","modifiedFileCount":"1","status":"M","submitter":"Gintas Grigelionis"}]
