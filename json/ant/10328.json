[{"authorTime":"2006-09-22 03:10:48","codes":[{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testNoAdditionalWhiteSpaceForText() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElement(\"root\");\n        DOMUtils.appendTextElement(root, \"textElement\", \"content\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w = new DOMElementWriter();\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root>\" + StringUtils.LINE_SEP\n                     + \"  <textElement>content</textElement>\"\n                     + StringUtils.LINE_SEP\n                     + \"</root>\" + StringUtils.LINE_SEP,\n                     sw.toString());\n    }\n","date":"2006-09-22 03:10:48","endLine":114,"groupId":"4875","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoAdditionalWhiteSpaceForText","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0e/6d62996f762bc4945696e7bab985d29b031a41.src","preCode":"    public void testNoAdditionalWhiteSpaceForText() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElement(\"root\");\n        DOMUtils.appendTextElement(root, \"textElement\", \"content\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w = new DOMElementWriter();\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root>\" + StringUtils.LINE_SEP\n                     + \"  <textElement>content</textElement>\"\n                     + StringUtils.LINE_SEP\n                     + \"</root>\" + StringUtils.LINE_SEP,\n                     sw.toString());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"},{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testNoAdditionalWhiteSpaceForCDATA() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElement(\"root\");\n        DOMUtils.appendCDATAElement(root, \"cdataElement\", \"content\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w = new DOMElementWriter();\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root>\" + StringUtils.LINE_SEP\n                     + \"  <cdataElement><![CDATA[content]]></cdataElement>\"\n                     + StringUtils.LINE_SEP\n                     + \"</root>\" + StringUtils.LINE_SEP,\n                     sw.toString());\n    }\n","date":"2006-09-22 03:10:48","endLine":129,"groupId":"4875","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoAdditionalWhiteSpaceForCDATA","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0e/6d62996f762bc4945696e7bab985d29b031a41.src","preCode":"    public void testNoAdditionalWhiteSpaceForCDATA() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElement(\"root\");\n        DOMUtils.appendCDATAElement(root, \"cdataElement\", \"content\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w = new DOMElementWriter();\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root>\" + StringUtils.LINE_SEP\n                     + \"  <cdataElement><![CDATA[content]]></cdataElement>\"\n                     + StringUtils.LINE_SEP\n                     + \"</root>\" + StringUtils.LINE_SEP,\n                     sw.toString());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"}],"commitId":"73d66d2c6d6e0384fd66eba1f20ef97469c49b18","commitMessage":"@@@Restructuring to allow junit and antunit tests both.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@448636 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-09-22 03:10:48","modifiedFileCount":"0","status":"B","submitter":"Matthew Jason Benson"},{"authorTime":"2018-04-27 15:58:46","codes":[{"authorDate":"2018-04-27 15:58:46","commitOrder":2,"curCode":"    public void testNoAdditionalWhiteSpaceForText() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElement(\"root\");\n        DOMUtils.appendTextElement(root, \"textElement\", \"content\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w = new DOMElementWriter();\n        w.write(root, sw, 0, \"  \");\n        assertEquals(String.format(\"<root>%n  <textElement>content</textElement>%n</root>%n\"),\n                sw.toString());\n    }\n","date":"2018-04-27 22:49:32","endLine":151,"groupId":"10328","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoAdditionalWhiteSpaceForText","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c5/b829b5906fa1f9204a14eff00f2443e9cbc4e3.src","preCode":"    public void testNoAdditionalWhiteSpaceForText() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElement(\"root\");\n        DOMUtils.appendTextElement(root, \"textElement\", \"content\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w = new DOMElementWriter();\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root>\" + StringUtils.LINE_SEP\n                     + \"  <textElement>content</textElement>\"\n                     + StringUtils.LINE_SEP\n                     + \"</root>\" + StringUtils.LINE_SEP,\n                     sw.toString());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"},{"authorDate":"2018-04-27 15:58:46","commitOrder":2,"curCode":"    public void testNoAdditionalWhiteSpaceForCDATA() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElement(\"root\");\n        DOMUtils.appendCDATAElement(root, \"cdataElement\", \"content\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w = new DOMElementWriter();\n        w.write(root, sw, 0, \"  \");\n        assertEquals(String.format(\"<root>%n  <cdataElement><![CDATA[content]]></cdataElement>%n\"\n                        + \"</root>%n\"), sw.toString());\n    }\n","date":"2018-04-27 22:49:32","endLine":164,"groupId":"10328","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoAdditionalWhiteSpaceForCDATA","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c5/b829b5906fa1f9204a14eff00f2443e9cbc4e3.src","preCode":"    public void testNoAdditionalWhiteSpaceForCDATA() throws IOException {\n        Document d = DOMUtils.newDocument();\n        Element root = d.createElement(\"root\");\n        DOMUtils.appendCDATAElement(root, \"cdataElement\", \"content\");\n\n        StringWriter sw = new StringWriter();\n        DOMElementWriter w = new DOMElementWriter();\n        w.write(root, sw, 0, \"  \");\n        assertEquals(\"<root>\" + StringUtils.LINE_SEP\n                     + \"  <cdataElement><![CDATA[content]]></cdataElement>\"\n                     + StringUtils.LINE_SEP\n                     + \"</root>\" + StringUtils.LINE_SEP,\n                     sw.toString());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"}],"commitId":"03bb68d6baa2323424aaaae932c6278d1c246de3","commitMessage":"@@@Deprecate StringUtils.LINE_SEP","date":"2018-04-27 22:49:32","modifiedFileCount":"43","status":"M","submitter":"Gintas Grigelionis"}]
