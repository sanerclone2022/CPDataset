[{"authorTime":"2006-09-22 03:10:48","codes":[{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \"+result+\" doesn\\'t exist\");\n        }\n\n        InputStream inExpect = null;\n        InputStream inResult = null;\n        try {\n            inExpect = new BufferedInputStream(new FileInputStream(expect));\n            inResult = new BufferedInputStream(new FileInputStream(result));\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        } finally {\n            if (inResult != null) {\n                inResult.close();\n            }\n            if (inExpect != null) {\n                inExpect.close();\n            }\n        }\n    }\n","date":"2006-09-22 03:10:48","endLine":106,"groupId":"7268","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/22/ee92a84615cff521713dbea0cfdcc6ad985088.src","preCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \"+result+\" doesn\\'t exist\");\n        }\n\n        InputStream inExpect = null;\n        InputStream inResult = null;\n        try {\n            inExpect = new BufferedInputStream(new FileInputStream(expect));\n            inResult = new BufferedInputStream(new FileInputStream(result));\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        } finally {\n            if (inResult != null) {\n                inResult.close();\n            }\n            if (inExpect != null) {\n                inExpect.close();\n            }\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/ReplaceTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \"+result+\" doesn\\'t exist\");\n        }\n\n        InputStream inExpect = null;\n        InputStream inResult = null;\n        try {\n            inExpect = new BufferedInputStream(new FileInputStream(expect));\n            inResult = new BufferedInputStream(new FileInputStream(result));\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        } finally {\n            if (inResult != null) {\n                inResult.close();\n            }\n            if (inExpect != null) {\n                inExpect.close();\n            }\n        }\n    }\n","date":"2006-09-22 03:10:48","endLine":217,"groupId":"7268","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/98/b2cb294ea4cde09cf9b0507e68d46b650fa8b2.src","preCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \"+result+\" doesn\\'t exist\");\n        }\n\n        InputStream inExpect = null;\n        InputStream inResult = null;\n        try {\n            inExpect = new BufferedInputStream(new FileInputStream(expect));\n            inResult = new BufferedInputStream(new FileInputStream(result));\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        } finally {\n            if (inResult != null) {\n                inResult.close();\n            }\n            if (inExpect != null) {\n                inExpect.close();\n            }\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/FixCrLfTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"B"}],"commitId":"73d66d2c6d6e0384fd66eba1f20ef97469c49b18","commitMessage":"@@@Restructuring to allow junit and antunit tests both.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@448636 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-09-22 03:10:48","modifiedFileCount":"0","status":"B","submitter":"Matthew Jason Benson"},{"authorTime":"2018-04-03 04:43:43","codes":[{"authorDate":"2018-04-03 04:43:43","commitOrder":2,"curCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \" + result + \" doesn\\'t exist\");\n        }\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","date":"2018-04-03 04:43:43","endLine":169,"groupId":"1308","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/35/190e7eb272073fe76d575925ea0dabbf87ce2e.src","preCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \" + result + \" doesn\\'t exist\");\n        }\n\n        InputStream inExpect = null;\n        InputStream inResult = null;\n        try {\n            inExpect = new BufferedInputStream(new FileInputStream(expect));\n            inResult = new BufferedInputStream(new FileInputStream(result));\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        } finally {\n            if (inResult != null) {\n                inResult.close();\n            }\n            if (inExpect != null) {\n                inExpect.close();\n            }\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/ReplaceTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2018-04-03 04:43:43","commitOrder":2,"curCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \" + result + \" doesn\\'t exist\");\n        }\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","date":"2018-04-03 04:43:43","endLine":250,"groupId":"1308","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/7b/a55563aaf94ee1c220362a44efe46377851a95.src","preCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \" + result + \" doesn\\'t exist\");\n        }\n\n        InputStream inExpect = null;\n        InputStream inResult = null;\n        try {\n            inExpect = new BufferedInputStream(new FileInputStream(expect));\n            inResult = new BufferedInputStream(new FileInputStream(result));\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        } finally {\n            if (inResult != null) {\n                inResult.close();\n            }\n            if (inExpect != null) {\n                inExpect.close();\n            }\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/FixCrLfTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"}],"commitId":"6319e4988b24f7830cf7048534c1caacb38ce550","commitMessage":"@@@Use try with resources","date":"2018-04-03 04:43:43","modifiedFileCount":"15","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-14 20:36:57","codes":[{"authorDate":"2018-04-03 04:43:43","commitOrder":3,"curCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \" + result + \" doesn\\'t exist\");\n        }\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","date":"2018-04-03 04:43:43","endLine":169,"groupId":"1308","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/35/190e7eb272073fe76d575925ea0dabbf87ce2e.src","preCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \" + result + \" doesn\\'t exist\");\n        }\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/ReplaceTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"N"},{"authorDate":"2018-04-14 20:36:57","commitOrder":3,"curCode":"    public void assertEqualContent(File expect, File result) throws AssertionFailedError, IOException {\n        assertTrue(\"Expected file \" + result + \" doesn\\'t exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","date":"2018-04-14 20:41:24","endLine":247,"groupId":"1308","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a3/4b9f4b25d12b435b10a4b5565f0e99c802e18c.src","preCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \" + result + \" doesn\\'t exist\");\n        }\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/FixCrLfTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"}],"commitId":"81c3e6e3ddf5b1ef4e66018f1047e1b2ae8b3173","commitMessage":"@@@Deprecate AntAssert","date":"2018-04-14 20:41:24","modifiedFileCount":"75","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-04-14 20:36:57","codes":[{"authorDate":"2018-04-23 06:17:24","commitOrder":4,"curCode":"    public void assertEqualContent(File expect, File result) throws IOException {\n        assertTrue(\"Expected file \" + result + \" doesn't exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","date":"2018-04-23 06:17:24","endLine":165,"groupId":"1308","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/12/da88d6d114cca62976facf80cb0263923e3e4d.src","preCode":"    public void assertEqualContent(File expect, File result)\n        throws AssertionFailedError, IOException {\n        if (!result.exists()) {\n            fail(\"Expected file \" + result + \" doesn\\'t exist\");\n        }\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/ReplaceTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"},{"authorDate":"2018-04-14 20:36:57","commitOrder":4,"curCode":"    public void assertEqualContent(File expect, File result) throws AssertionFailedError, IOException {\n        assertTrue(\"Expected file \" + result + \" doesn\\'t exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","date":"2018-04-14 20:41:24","endLine":247,"groupId":"1308","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a3/4b9f4b25d12b435b10a4b5565f0e99c802e18c.src","preCode":"    public void assertEqualContent(File expect, File result) throws AssertionFailedError, IOException {\n        assertTrue(\"Expected file \" + result + \" doesn\\'t exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/FixCrLfTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"N"}],"commitId":"8a3b1658ca76b57709b135877bc478fdb041f835","commitMessage":"@@@Don?t fail.  assert","date":"2018-04-23 06:17:24","modifiedFileCount":"9","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2018-11-05 00:31:37","codes":[{"authorDate":"2018-11-05 00:31:37","commitOrder":5,"curCode":"    public void assertEqualContent(File expect, File result) throws IOException {\n        assertTrue(\"Expected file \" + result + \" doesn't exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(Files.newInputStream(expect.toPath()));\n             InputStream inResult = new BufferedInputStream(Files.newInputStream(result.toPath()))) {\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","date":"2018-11-15 00:14:28","endLine":157,"groupId":"7691","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/90/9091a75e4de16f4a7416a39b7e3d127944982a.src","preCode":"    public void assertEqualContent(File expect, File result) throws IOException {\n        assertTrue(\"Expected file \" + result + \" doesn't exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/ReplaceTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2018-11-05 00:31:37","commitOrder":5,"curCode":"    public void assertEqualContent(File expect, File result) throws AssertionFailedError, IOException {\n        assertTrue(\"Expected file \" + result + \" doesn\\'t exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(Files.newInputStream(expect.toPath()));\n             InputStream inResult = new BufferedInputStream(Files.newInputStream(result.toPath()))) {\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","date":"2018-11-15 00:14:28","endLine":248,"groupId":"7691","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a7/99e8b6f4c5a8183132755b621b5d5e108bd926.src","preCode":"    public void assertEqualContent(File expect, File result) throws AssertionFailedError, IOException {\n        assertTrue(\"Expected file \" + result + \" doesn\\'t exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(new FileInputStream(expect));\n             InputStream inResult = new BufferedInputStream(new FileInputStream(result))) {\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/FixCrLfTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"M"}],"commitId":"14af87629d5d7a77cb25d8ffc100fdc76ed7e372","commitMessage":"@@@Avoid FileInputStream and FileOutputStream.\n","date":"2018-11-15 00:14:28","modifiedFileCount":"4","status":"M","submitter":"reudismam@gmail.com"},{"authorTime":"2020-07-29 20:13:37","codes":[{"authorDate":"2018-11-05 00:31:37","commitOrder":6,"curCode":"    public void assertEqualContent(File expect, File result) throws IOException {\n        assertTrue(\"Expected file \" + result + \" doesn't exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(Files.newInputStream(expect.toPath()));\n             InputStream inResult = new BufferedInputStream(Files.newInputStream(result.toPath()))) {\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","date":"2018-11-15 00:14:28","endLine":157,"groupId":"10157","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/90/9091a75e4de16f4a7416a39b7e3d127944982a.src","preCode":"    public void assertEqualContent(File expect, File result) throws IOException {\n        assertTrue(\"Expected file \" + result + \" doesn't exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(Files.newInputStream(expect.toPath()));\n             InputStream inResult = new BufferedInputStream(Files.newInputStream(result.toPath()))) {\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/ReplaceTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"N"},{"authorDate":"2020-07-29 20:13:37","commitOrder":6,"curCode":"    public void assertEqualContent(File expect, File result) throws AssertionFailedError, IOException {\n        assertTrue(\"Expected file \" + result + \" doesn't exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(Files.newInputStream(expect.toPath()));\n             InputStream inResult = new BufferedInputStream(Files.newInputStream(result.toPath()))) {\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","date":"2020-07-29 20:13:37","endLine":247,"groupId":"10157","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"assertEqualContent","params":"(Fileexpect@Fileresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8c/a75a4be31efe6e02fa401ce1f5f4877af62d64.src","preCode":"    public void assertEqualContent(File expect, File result) throws AssertionFailedError, IOException {\n        assertTrue(\"Expected file \" + result + \" doesn\\'t exist\", result.exists());\n\n        try (InputStream inExpect = new BufferedInputStream(Files.newInputStream(expect.toPath()));\n             InputStream inResult = new BufferedInputStream(Files.newInputStream(result.toPath()))) {\n\n            int expectedByte = inExpect.read();\n            while (expectedByte != -1) {\n                assertEquals(expectedByte, inResult.read());\n                expectedByte = inExpect.read();\n            }\n            assertEquals(\"End of file\", -1, inResult.read());\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/FixCrLfTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"}],"commitId":"1a13b690bc065c957829f3d98218c5fc2b778c4a","commitMessage":"@@@Merge pull request #123 from twogee/useless-escape\n\nSuperfluous escapes","date":"2020-07-29 20:13:37","modifiedFileCount":"36","status":"M","submitter":"Stefan Bodewig"}]
