[{"authorTime":"2001-03-14 09:22:22","codes":[{"authorDate":"2001-12-11 22:18:52","commitOrder":5,"curCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files, String publicId)\n\n\tthrows BuildException\n\n    {\n\n\tif (ejbdeploy) {\n\n\t    \r\n\n\t    File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n\t    super.writeJar(baseName, genericJarFile, files, publicId);\n\n\n\n\t    \r\n\n\t    if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n\n\t\tbuildWebsphereJar(genericJarFile, jarFile);\n\n\t    }\n\n\t    if (!keepGeneric) {\n\n\t\tlog(\"deleting generic jar \" + genericJarFile.toString(),\n\n\t\t    Project.MSG_VERBOSE);\n\n\t\tgenericJarFile.delete();\n\n\t    }\n\n\t}\n\n\telse {\n\n\t    \r\n\n\t    super.writeJar(baseName, jarFile, files, publicId);\n\n\t}\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n    }\n","date":"2001-12-11 22:18:52","endLine":1227,"groupId":"1450","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeJar","params":"(StringbaseName@FilejarFile@Hashtablefiles@StringpublicId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/25/a4d3eb2fb1f101acefc3e52dc9b859a5b9a589.src","preCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files, String publicId)\n\n\tthrows BuildException\n\n    {\n\n\tif (ejbdeploy) {\n\n\t    \r\n\n\t    File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n\t    super.writeJar(baseName, genericJarFile, files, publicId);\n\n\n\n\t    \r\n\n\t    if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n\n\t\tbuildWebsphereJar(genericJarFile, jarFile);\n\n\t    }\n\n\t    if (!keepGeneric) {\n\n\t\tlog(\"deleting generic jar \" + genericJarFile.toString(),\n\n\t\t    Project.MSG_VERBOSE);\n\n\t\tgenericJarFile.delete();\n\n\t    }\n\n\t}\n\n\telse {\n\n\t    \r\n\n\t    super.writeJar(baseName, jarFile, files, publicId);\n\n\t}\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/WebsphereDeploymentTool.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1155,"status":"B"},{"authorDate":"2001-03-14 09:22:22","commitOrder":5,"curCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files, \n                            String publicId) throws BuildException {\n        \r\n        File genericJarFile = super.getVendorOutputJarFile(baseName);\n        super.writeJar(baseName, genericJarFile, files, publicId);\n        \n        if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile))\n        {\n            buildWeblogicJar(genericJarFile, jarFile, publicId);\n        }\n        if (!keepGeneric) {\n             log(\"deleting generic jar \" + genericJarFile.toString(),\n                           Project.MSG_VERBOSE);\n             genericJarFile.delete();\n        }\n    }\n","date":"2001-03-14 09:22:22","endLine":468,"groupId":"7697","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeJar","params":"(StringbaseName@FilejarFile@Hashtablefiles@StringpublicId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a9/013f879d2a177f368c437d4504ad67d25164f3.src","preCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files, \n                            String publicId) throws BuildException {\n        \r\n        File genericJarFile = super.getVendorOutputJarFile(baseName);\n        super.writeJar(baseName, genericJarFile, files, publicId);\n        \n        if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile))\n        {\n            buildWeblogicJar(genericJarFile, jarFile, publicId);\n        }\n        if (!keepGeneric) {\n             log(\"deleting generic jar \" + genericJarFile.toString(),\n                           Project.MSG_VERBOSE);\n             genericJarFile.delete();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":453,"status":"NB"}],"commitId":"8303dd1fd643ab7369de8a3125f5a1e3b6a72968","commitMessage":"@@@Remove the old mechanism of adding super classes and super interfaces to EJB jars\nand replace with a general class dependnecy check. This should allow ejb jars\nto be much more complete as per the spec.\n\nejbjar now depends on BCEL.\n\nAdd support for Websphere.\n\nSubmitted by:\tHolger Engels <hengels@mercatis.de>\n\t\tManeesh Sahu <msahu@interkeel.com> (Original Websphere support)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@270118 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2001-12-11 22:18:52","modifiedFileCount":"2","status":"M","submitter":"Conor MacNeill"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":6,"curCode":"    protected void writeJar(String baseName, File jarFile,\n        Hashtable<String, File> files, String publicId) throws BuildException {\n        if (ejbdeploy) {\n            \r\n            File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n            super.writeJar(baseName, genericJarFile, files, publicId);\n\n            \r\n            if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n                buildWebsphereJar(genericJarFile, jarFile);\n            }\n            if (!keepGeneric) {\n                log(\"deleting generic jar \" + genericJarFile.toString(),\n                    Project.MSG_VERBOSE);\n                genericJarFile.delete();\n            }\n        } else {\n            \r\n            super.writeJar(baseName, jarFile, files, publicId);\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":608,"groupId":"10427","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeJar","params":"(StringbaseName@FilejarFile@Hashtable<String@File>files@StringpublicId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6a/cdc4781b45ddb025af16b9edb233f14df4cc36.src","preCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files, String publicId)\n         throws BuildException {\n        if (ejbdeploy) {\n            \r\n            File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n            super.writeJar(baseName, genericJarFile, files, publicId);\n\n            \r\n            if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n                buildWebsphereJar(genericJarFile, jarFile);\n            }\n            if (!keepGeneric) {\n                log(\"deleting generic jar \" + genericJarFile.toString(),\n                    Project.MSG_VERBOSE);\n                genericJarFile.delete();\n            }\n        } else {\n            \r\n            super.writeJar(baseName, jarFile, files, publicId);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/WebsphereDeploymentTool.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":587,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":6,"curCode":"    protected void writeJar(String baseName, File jarFile, Hashtable<String, File> files,\n                            String publicId) throws BuildException {\n        \r\n        File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n        super.writeJar(baseName, genericJarFile, files, publicId);\n\n        if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n            buildWeblogicJar(genericJarFile, jarFile, publicId);\n        }\n        if (!keepGeneric) {\n            log(\"deleting generic jar \" + genericJarFile.toString(),\n                Project.MSG_VERBOSE);\n            genericJarFile.delete();\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":632,"groupId":"10427","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeJar","params":"(StringbaseName@FilejarFile@Hashtable<String@File>files@StringpublicId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/4b/0116d2bd5b8e47585cc6dec34a09d61af6d38b.src","preCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files,\n                            String publicId) throws BuildException {\n        \r\n        File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n        super.writeJar(baseName, genericJarFile, files, publicId);\n\n        if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n            buildWeblogicJar(genericJarFile, jarFile, publicId);\n        }\n        if (!keepGeneric) {\n            log(\"deleting generic jar \" + genericJarFile.toString(),\n                Project.MSG_VERBOSE);\n            genericJarFile.delete();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":617,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"}]
