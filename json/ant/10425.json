[{"authorTime":"2001-12-11 22:18:52","codes":[{"authorDate":"2002-02-02 19:04:43","commitOrder":2,"curCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files,\n                            String publicId) throws BuildException {\n        \r\n        File genericJarFile = super.getVendorOutputJarFile(baseName);\n        super.writeJar(baseName, genericJarFile, files, publicId);\n\n        \r\n        buildJOnASJar(baseName,genericJarFile, jarFile,files,publicId);\n        \n        if (!keepGeneric) {\n             log(\"deleting generic jar \" + genericJarFile.toString(),\n                           Project.MSG_VERBOSE);\n             genericJarFile.delete();\n        }\n    }\n","date":"2002-02-02 19:04:43","endLine":349,"groupId":"9560","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeJar","params":"(StringbaseName@FilejarFile@Hashtablefiles@StringpublicId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6a/b5fc740b1ef6f8f60023ef420eba64d156bfdb.src","preCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files,\n                            String publicId) throws BuildException {\n        \r\n        File genericJarFile = super.getVendorOutputJarFile(baseName);\n        super.writeJar(baseName, genericJarFile, files, publicId);\n\n        \r\n        buildJOnASJar(baseName,genericJarFile, jarFile,files,publicId);\n        \n        if (!keepGeneric) {\n             log(\"deleting generic jar \" + genericJarFile.toString(),\n                           Project.MSG_VERBOSE);\n             genericJarFile.delete();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":335,"status":"B"},{"authorDate":"2001-12-11 22:18:52","commitOrder":2,"curCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files, String publicId)\n\n\tthrows BuildException\n\n    {\n\n\tif (ejbdeploy) {\n\n\t    \r\n\n\t    File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n\t    super.writeJar(baseName, genericJarFile, files, publicId);\n\n\n\n\t    \r\n\n\t    if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n\n\t\tbuildWebsphereJar(genericJarFile, jarFile);\n\n\t    }\n\n\t    if (!keepGeneric) {\n\n\t\tlog(\"deleting generic jar \" + genericJarFile.toString(),\n\n\t\t    Project.MSG_VERBOSE);\n\n\t\tgenericJarFile.delete();\n\n\t    }\n\n\t}\n\n\telse {\n\n\t    \r\n\n\t    super.writeJar(baseName, jarFile, files, publicId);\n\n\t}\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n    }\n","date":"2001-12-11 22:18:52","endLine":1227,"groupId":"1450","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeJar","params":"(StringbaseName@FilejarFile@Hashtablefiles@StringpublicId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/25/a4d3eb2fb1f101acefc3e52dc9b859a5b9a589.src","preCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files, String publicId)\n\n\tthrows BuildException\n\n    {\n\n\tif (ejbdeploy) {\n\n\t    \r\n\n\t    File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n\t    super.writeJar(baseName, genericJarFile, files, publicId);\n\n\n\n\t    \r\n\n\t    if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n\n\t\tbuildWebsphereJar(genericJarFile, jarFile);\n\n\t    }\n\n\t    if (!keepGeneric) {\n\n\t\tlog(\"deleting generic jar \" + genericJarFile.toString(),\n\n\t\t    Project.MSG_VERBOSE);\n\n\t\tgenericJarFile.delete();\n\n\t    }\n\n\t}\n\n\telse {\n\n\t    \r\n\n\t    super.writeJar(baseName, jarFile, files, publicId);\n\n\t}\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/WebsphereDeploymentTool.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1155,"status":"NB"}],"commitId":"334597d246c97f709d92d2be9c417d8d4dca4a96","commitMessage":"@@@Add Support for JOnAS EJB server\n\nSubmitted by:\t Cyrille Morvan <cyrille_list@ingenosya.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@271069 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2002-02-02 19:04:43","modifiedFileCount":"1","status":"M","submitter":"Conor MacNeill"},{"authorTime":"2001-12-11 22:18:52","codes":[{"authorDate":"2002-06-23 07:38:38","commitOrder":3,"curCode":"    protected void writeJar(String baseName, File jarfile, Hashtable ejbFiles, String publicId) \n\tthrows BuildException {\n\n\t\r\n\tFile genericJarFile = super.getVendorOutputJarFile(baseName);\t\n\tsuper.writeJar(baseName, genericJarFile, ejbFiles, publicId);\n\t     \n\t\r\n\taddGenICGeneratedFiles(genericJarFile, ejbFiles);\n\n\t\r\n\tsuper.writeJar(baseName, getVendorOutputJarFile(baseName), ejbFiles, publicId);\n\n\tif ( !keepgeneric ) {\n\t    log(\"Deleting generic JAR \" + genericJarFile.toString(), Project.MSG_VERBOSE);\n\t    genericJarFile.delete();\t     \n\t}\n    }\n","date":"2002-06-23 07:38:38","endLine":395,"groupId":"9560","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeJar","params":"(StringbaseName@Filejarfile@HashtableejbFiles@StringpublicId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/d5/33804dbfef9f72855597e2875132d52f52fdd7.src","preCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files,\n                            String publicId) throws BuildException {\n        \r\n        File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n        super.writeJar(baseName, genericJarFile, files, publicId);\n\n        \r\n        buildJOnASJar(baseName, genericJarFile, jarFile, files, publicId);\n\n        if (!keepGeneric) {\n            log(\"deleting generic jar \" + genericJarFile.toString(),\n                Project.MSG_VERBOSE);\n            genericJarFile.delete();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"},{"authorDate":"2001-12-11 22:18:52","commitOrder":3,"curCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files, String publicId)\n\n\tthrows BuildException\n\n    {\n\n\tif (ejbdeploy) {\n\n\t    \r\n\n\t    File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n\t    super.writeJar(baseName, genericJarFile, files, publicId);\n\n\n\n\t    \r\n\n\t    if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n\n\t\tbuildWebsphereJar(genericJarFile, jarFile);\n\n\t    }\n\n\t    if (!keepGeneric) {\n\n\t\tlog(\"deleting generic jar \" + genericJarFile.toString(),\n\n\t\t    Project.MSG_VERBOSE);\n\n\t\tgenericJarFile.delete();\n\n\t    }\n\n\t}\n\n\telse {\n\n\t    \r\n\n\t    super.writeJar(baseName, jarFile, files, publicId);\n\n\t}\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n    }\n","date":"2001-12-11 22:18:52","endLine":1227,"groupId":"1450","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeJar","params":"(StringbaseName@FilejarFile@Hashtablefiles@StringpublicId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/25/a4d3eb2fb1f101acefc3e52dc9b859a5b9a589.src","preCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files, String publicId)\n\n\tthrows BuildException\n\n    {\n\n\tif (ejbdeploy) {\n\n\t    \r\n\n\t    File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n\t    super.writeJar(baseName, genericJarFile, files, publicId);\n\n\n\n\t    \r\n\n\t    if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n\n\t\tbuildWebsphereJar(genericJarFile, jarFile);\n\n\t    }\n\n\t    if (!keepGeneric) {\n\n\t\tlog(\"deleting generic jar \" + genericJarFile.toString(),\n\n\t\t    Project.MSG_VERBOSE);\n\n\t\tgenericJarFile.delete();\n\n\t    }\n\n\t}\n\n\telse {\n\n\t    \r\n\n\t    super.writeJar(baseName, jarFile, files, publicId);\n\n\t}\n\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/WebsphereDeploymentTool.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1155,"status":"N"}],"commitId":"6bd8d6e938a45868902ecd1092858e8372933c7c","commitMessage":"@@@Merge changes made to 1.5 Beta2.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272967 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2002-06-23 07:38:38","modifiedFileCount":"127","status":"M","submitter":"Magesh Umasankar"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":4,"curCode":"    protected void writeJar(String baseName, File jarfile, Hashtable<String, File> ejbFiles, String publicId)\n    throws BuildException {\n\n        \r\n        File genericJarFile = super.getVendorOutputJarFile(baseName);\n        super.writeJar(baseName, genericJarFile, ejbFiles, publicId);\n\n        \r\n        addGenICGeneratedFiles(genericJarFile, ejbFiles);\n\n        \r\n        super.writeJar(baseName, getVendorOutputJarFile(baseName), ejbFiles, publicId);\n\n        if (!keepgeneric) {\n            log(\"Deleting generic JAR \" + genericJarFile.toString(), Project.MSG_VERBOSE);\n            genericJarFile.delete();\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":369,"groupId":"10425","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"writeJar","params":"(StringbaseName@Filejarfile@Hashtable<String@File>ejbFiles@StringpublicId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/71/c08604d1ae82825dc12f671786bac219478b7d.src","preCode":"    protected void writeJar(String baseName, File jarfile, Hashtable ejbFiles, String publicId)\n    throws BuildException {\n\n        \r\n        File genericJarFile = super.getVendorOutputJarFile(baseName);\n        super.writeJar(baseName, genericJarFile, ejbFiles, publicId);\n\n        \r\n        addGenICGeneratedFiles(genericJarFile, ejbFiles);\n\n        \r\n        super.writeJar(baseName, getVendorOutputJarFile(baseName), ejbFiles, publicId);\n\n        if (!keepgeneric) {\n            log(\"Deleting generic JAR \" + genericJarFile.toString(), Project.MSG_VERBOSE);\n            genericJarFile.delete();\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":352,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":4,"curCode":"    protected void writeJar(String baseName, File jarFile,\n        Hashtable<String, File> files, String publicId) throws BuildException {\n        if (ejbdeploy) {\n            \r\n            File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n            super.writeJar(baseName, genericJarFile, files, publicId);\n\n            \r\n            if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n                buildWebsphereJar(genericJarFile, jarFile);\n            }\n            if (!keepGeneric) {\n                log(\"deleting generic jar \" + genericJarFile.toString(),\n                    Project.MSG_VERBOSE);\n                genericJarFile.delete();\n            }\n        } else {\n            \r\n            super.writeJar(baseName, jarFile, files, publicId);\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":608,"groupId":"10425","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"writeJar","params":"(StringbaseName@FilejarFile@Hashtable<String@File>files@StringpublicId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6a/cdc4781b45ddb025af16b9edb233f14df4cc36.src","preCode":"    protected void writeJar(String baseName, File jarFile, Hashtable files, String publicId)\n         throws BuildException {\n        if (ejbdeploy) {\n            \r\n            File genericJarFile = super.getVendorOutputJarFile(baseName);\n\n            super.writeJar(baseName, genericJarFile, files, publicId);\n\n            \r\n            if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile)) {\n                buildWebsphereJar(genericJarFile, jarFile);\n            }\n            if (!keepGeneric) {\n                log(\"deleting generic jar \" + genericJarFile.toString(),\n                    Project.MSG_VERBOSE);\n                genericJarFile.delete();\n            }\n        } else {\n            \r\n            super.writeJar(baseName, jarFile, files, publicId);\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/ejb/WebsphereDeploymentTool.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":587,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"}]
