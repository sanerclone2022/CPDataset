[{"authorTime":"2018-08-27 21:20:15","codes":[{"authorDate":"2018-08-27 21:20:15","commitOrder":2,"curCode":"    public void testJUnitPlatformLibsCustomLocation() throws Exception {\n        final String targetName = \"test-junit-platform-lib-custom-location\";\n        final Path trackerFile = setupTrackerProperty(targetName);\n        buildRule.executeTarget(targetName);\n        final String exclusionLogMsg = \"Excluding JUnit platform libraries\";\n        Assert.assertTrue(\"JUnit platform libraries weren't excluded from classpath\", buildRule.getFullLog().contains(exclusionLogMsg));\n        Assert.assertTrue(\"JupiterSampleTest#testSucceeds was expected to succeed\", verifySuccess(trackerFile,\n                JupiterSampleTest.class.getName(), \"testSucceeds\"));\n        Assert.assertTrue(\"JupiterSampleTest#testFails was expected to fail\", verifyFailed(trackerFile,\n                JupiterSampleTest.class.getName(), \"testFails\"));\n    }\n","date":"2018-08-27 21:20:15","endLine":262,"groupId":"6293","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testJUnitPlatformLibsCustomLocation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/97/a40c184a6f438e05d2e54f26aeb1346a905faf.src","preCode":"    public void testJUnitPlatformLibsCustomLocation() throws Exception {\n        final String targetName = \"test-junit-platform-lib-custom-location\";\n        final Path trackerFile = setupTrackerProperty(targetName);\n        buildRule.executeTarget(targetName);\n        final String exclusionLogMsg = \"Excluding JUnit platform libraries\";\n        Assert.assertTrue(\"JUnit platform libraries weren't excluded from classpath\", buildRule.getFullLog().contains(exclusionLogMsg));\n        Assert.assertTrue(\"JupiterSampleTest#testSucceeds was expected to succeed\", verifySuccess(trackerFile,\n                JupiterSampleTest.class.getName(), \"testSucceeds\"));\n        Assert.assertTrue(\"JupiterSampleTest#testFails was expected to fail\", verifyFailed(trackerFile,\n                JupiterSampleTest.class.getName(), \"testFails\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/junitlauncher/JUnitLauncherTaskTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"MB"},{"authorDate":"2018-08-27 21:20:15","commitOrder":2,"curCode":"    public void testAntRuntimeLibsCustomLocation() throws Exception {\n        final String targetName = \"test-ant-runtime-lib-custom-location\";\n        final Path trackerFile = setupTrackerProperty(targetName);\n        \r\n        \r\n        \r\n        final String projectResourceName = LoaderUtils.classNameToResource(Project.class.getName());\n        final File antClassesPath = LoaderUtils.getResourceSource(Project.class.getClassLoader(), projectResourceName);\n        buildRule.getProject().setProperty(\"ant.runtime.classes.original.path\", antClassesPath.getAbsolutePath());\n        \r\n        buildRule.executeTarget(targetName);\n        final String exclusionLogMsg = \"Excluding Ant runtime libraries\";\n        Assert.assertTrue(\"Ant runtime libraries weren't excluded from classpath\", buildRule.getFullLog().contains(exclusionLogMsg));\n        Assert.assertTrue(\"JupiterSampleTest#testSucceeds was expected to succeed\", verifySuccess(trackerFile,\n                JupiterSampleTest.class.getName(), \"testSucceeds\"));\n        Assert.assertTrue(\"JupiterSampleTest#testFails was expected to fail\", verifyFailed(trackerFile,\n                JupiterSampleTest.class.getName(), \"testFails\"));\n        Assert.assertTrue(\"AlwaysFailingJUnit4Test#testWillFail was expected to fail\", verifyFailed(trackerFile,\n                AlwaysFailingJUnit4Test.class.getName(), \"testWillFail\"));\n        Assert.assertTrue(\"ForkedTest#testSysProp was expected to succeed\", verifySuccess(trackerFile,\n                ForkedTest.class.getName(), \"testSysProp\"));\n\n\n    }\n","date":"2018-08-27 21:20:15","endLine":294,"groupId":"6293","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAntRuntimeLibsCustomLocation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/97/a40c184a6f438e05d2e54f26aeb1346a905faf.src","preCode":"    public void testAntRuntimeLibsCustomLocation() throws Exception {\n        final String targetName = \"test-ant-runtime-lib-custom-location\";\n        final Path trackerFile = setupTrackerProperty(targetName);\n        \r\n        \r\n        \r\n        final String projectResourceName = LoaderUtils.classNameToResource(Project.class.getName());\n        final File antClassesPath = LoaderUtils.getResourceSource(Project.class.getClassLoader(), projectResourceName);\n        buildRule.getProject().setProperty(\"ant.runtime.classes.original.path\", antClassesPath.getAbsolutePath());\n        \r\n        buildRule.executeTarget(targetName);\n        final String exclusionLogMsg = \"Excluding Ant runtime libraries\";\n        Assert.assertTrue(\"Ant runtime libraries weren't excluded from classpath\", buildRule.getFullLog().contains(exclusionLogMsg));\n        Assert.assertTrue(\"JupiterSampleTest#testSucceeds was expected to succeed\", verifySuccess(trackerFile,\n                JupiterSampleTest.class.getName(), \"testSucceeds\"));\n        Assert.assertTrue(\"JupiterSampleTest#testFails was expected to fail\", verifyFailed(trackerFile,\n                JupiterSampleTest.class.getName(), \"testFails\"));\n        Assert.assertTrue(\"AlwaysFailingJUnit4Test#testWillFail was expected to fail\", verifyFailed(trackerFile,\n                AlwaysFailingJUnit4Test.class.getName(), \"testWillFail\"));\n        Assert.assertTrue(\"ForkedTest#testSysProp was expected to succeed\", verifySuccess(trackerFile,\n                ForkedTest.class.getName(), \"testSysProp\"));\n\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/junitlauncher/JUnitLauncherTaskTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"B"}],"commitId":"d7c518584ecf5dc4b586dd4a1a9a20dec50a1a20","commitMessage":"@@@[junitlauncher] add some more tests to verify exclusion of Ant runtime and JUnit platform libraries from the forked JVM classpath of junitlauncher task\n","date":"2018-08-27 21:20:15","modifiedFileCount":"1","status":"M","submitter":"Jaikiran Pai"},{"authorTime":"2018-11-12 13:34:43","codes":[{"authorDate":"2018-08-27 21:20:15","commitOrder":3,"curCode":"    public void testJUnitPlatformLibsCustomLocation() throws Exception {\n        final String targetName = \"test-junit-platform-lib-custom-location\";\n        final Path trackerFile = setupTrackerProperty(targetName);\n        buildRule.executeTarget(targetName);\n        final String exclusionLogMsg = \"Excluding JUnit platform libraries\";\n        Assert.assertTrue(\"JUnit platform libraries weren't excluded from classpath\", buildRule.getFullLog().contains(exclusionLogMsg));\n        Assert.assertTrue(\"JupiterSampleTest#testSucceeds was expected to succeed\", verifySuccess(trackerFile,\n                JupiterSampleTest.class.getName(), \"testSucceeds\"));\n        Assert.assertTrue(\"JupiterSampleTest#testFails was expected to fail\", verifyFailed(trackerFile,\n                JupiterSampleTest.class.getName(), \"testFails\"));\n    }\n","date":"2018-08-27 21:20:15","endLine":262,"groupId":"1073","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testJUnitPlatformLibsCustomLocation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/97/a40c184a6f438e05d2e54f26aeb1346a905faf.src","preCode":"    public void testJUnitPlatformLibsCustomLocation() throws Exception {\n        final String targetName = \"test-junit-platform-lib-custom-location\";\n        final Path trackerFile = setupTrackerProperty(targetName);\n        buildRule.executeTarget(targetName);\n        final String exclusionLogMsg = \"Excluding JUnit platform libraries\";\n        Assert.assertTrue(\"JUnit platform libraries weren't excluded from classpath\", buildRule.getFullLog().contains(exclusionLogMsg));\n        Assert.assertTrue(\"JupiterSampleTest#testSucceeds was expected to succeed\", verifySuccess(trackerFile,\n                JupiterSampleTest.class.getName(), \"testSucceeds\"));\n        Assert.assertTrue(\"JupiterSampleTest#testFails was expected to fail\", verifyFailed(trackerFile,\n                JupiterSampleTest.class.getName(), \"testFails\"));\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/junitlauncher/JUnitLauncherTaskTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"N"},{"authorDate":"2018-11-12 13:34:43","commitOrder":3,"curCode":"    public void testAntRuntimeLibsCustomLocation() throws Exception {\n        final String targetName = \"test-ant-runtime-lib-custom-location\";\n        final Path trackerFile = setupTrackerProperty(targetName);\n        setupRuntimeClassesProperty();\n        \r\n        buildRule.executeTarget(targetName);\n        final String exclusionLogMsg = \"Excluding Ant runtime libraries\";\n        Assert.assertTrue(\"Ant runtime libraries weren't excluded from classpath\", buildRule.getFullLog().contains(exclusionLogMsg));\n        Assert.assertTrue(\"JupiterSampleTest#testSucceeds was expected to succeed\", verifySuccess(trackerFile,\n                JupiterSampleTest.class.getName(), \"testSucceeds\"));\n        Assert.assertTrue(\"JupiterSampleTest#testFails was expected to fail\", verifyFailed(trackerFile,\n                JupiterSampleTest.class.getName(), \"testFails\"));\n        Assert.assertTrue(\"AlwaysFailingJUnit4Test#testWillFail was expected to fail\", verifyFailed(trackerFile,\n                AlwaysFailingJUnit4Test.class.getName(), \"testWillFail\"));\n        Assert.assertTrue(\"ForkedTest#testSysProp was expected to succeed\", verifySuccess(trackerFile,\n                ForkedTest.class.getName(), \"testSysProp\"));\n\n\n    }\n","date":"2018-11-12 13:35:36","endLine":290,"groupId":"1073","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAntRuntimeLibsCustomLocation","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/65/30836ca74ea3a9d5be89dfb2a297b4f0ebee39.src","preCode":"    public void testAntRuntimeLibsCustomLocation() throws Exception {\n        final String targetName = \"test-ant-runtime-lib-custom-location\";\n        final Path trackerFile = setupTrackerProperty(targetName);\n        \r\n        \r\n        \r\n        final String projectResourceName = LoaderUtils.classNameToResource(Project.class.getName());\n        final File antClassesPath = LoaderUtils.getResourceSource(Project.class.getClassLoader(), projectResourceName);\n        buildRule.getProject().setProperty(\"ant.runtime.classes.original.path\", antClassesPath.getAbsolutePath());\n        \r\n        buildRule.executeTarget(targetName);\n        final String exclusionLogMsg = \"Excluding Ant runtime libraries\";\n        Assert.assertTrue(\"Ant runtime libraries weren't excluded from classpath\", buildRule.getFullLog().contains(exclusionLogMsg));\n        Assert.assertTrue(\"JupiterSampleTest#testSucceeds was expected to succeed\", verifySuccess(trackerFile,\n                JupiterSampleTest.class.getName(), \"testSucceeds\"));\n        Assert.assertTrue(\"JupiterSampleTest#testFails was expected to fail\", verifyFailed(trackerFile,\n                JupiterSampleTest.class.getName(), \"testFails\"));\n        Assert.assertTrue(\"AlwaysFailingJUnit4Test#testWillFail was expected to fail\", verifyFailed(trackerFile,\n                AlwaysFailingJUnit4Test.class.getName(), \"testWillFail\"));\n        Assert.assertTrue(\"ForkedTest#testSysProp was expected to succeed\", verifySuccess(trackerFile,\n                ForkedTest.class.getName(), \"testSysProp\"));\n\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/taskdefs/optional/junitlauncher/JUnitLauncherTaskTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":272,"status":"M"}],"commitId":"033fac5b47c01fbbd4fbdabb39f930f72e28a4bf","commitMessage":"@@@Get most of junit task tests running under Surefire","date":"2018-11-12 13:35:36","modifiedFileCount":"1","status":"M","submitter":"Gintas Grigelionis"}]
