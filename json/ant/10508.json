[{"authorTime":"2012-06-15 12:28:24","codes":[{"authorDate":"2012-06-15 12:28:24","commitOrder":1,"curCode":"    public Process exec(Project project, String[] cmd, String[] env,\n                        File workingDir) throws IOException {\n        if (project == null) {\n            if(workingDir == null) {\n                return exec(project, cmd, env);\n            }\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"No project provided\");\n        }\n        \r\n        String antHome = project.getProperty(MagicNames.ANT_HOME);\n        if (antHome == null) {\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"Property '\" + MagicNames.ANT_HOME\n                                  + \"' not found\");\n        }\n        String antRun = FILE_UTILS.resolveFile(project.getBaseDir(),\n                                               antHome + File.separator\n                                               + myScript).toString();\n\n        \r\n        File commandDir = workingDir;\n        if (workingDir == null) {\n            commandDir = project.getBaseDir();\n        }\n        \r\n        String[] newcmd = new String[cmd.length + 3];\n        newcmd[0] = \"perl\";\n        newcmd[1] = antRun;\n        newcmd[2] = commandDir.getAbsolutePath();\n        System.arraycopy(cmd, 0, newcmd, 3, cmd.length);\n        \r\n\n        return exec(project, newcmd, env);\n    }\n","date":"2012-06-15 12:28:24","endLine":72,"groupId":"3228","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"exec","params":"(Projectproject@String[]cmd@String[]env@FileworkingDir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/20/13697840cf3169f77a8590d93b88ca492afda9.src","preCode":"    public Process exec(Project project, String[] cmd, String[] env,\n                        File workingDir) throws IOException {\n        if (project == null) {\n            if(workingDir == null) {\n                return exec(project, cmd, env);\n            }\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"No project provided\");\n        }\n        \r\n        String antHome = project.getProperty(MagicNames.ANT_HOME);\n        if (antHome == null) {\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"Property '\" + MagicNames.ANT_HOME\n                                  + \"' not found\");\n        }\n        String antRun = FILE_UTILS.resolveFile(project.getBaseDir(),\n                                               antHome + File.separator\n                                               + myScript).toString();\n\n        \r\n        File commandDir = workingDir;\n        if (workingDir == null) {\n            commandDir = project.getBaseDir();\n        }\n        \r\n        String[] newcmd = new String[cmd.length + 3];\n        newcmd[0] = \"perl\";\n        newcmd[1] = antRun;\n        newcmd[2] = commandDir.getAbsolutePath();\n        System.arraycopy(cmd, 0, newcmd, 3, cmd.length);\n        \r\n\n        return exec(project, newcmd, env);\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/launcher/PerlScriptCommandLauncher.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2012-06-15 12:28:24","commitOrder":1,"curCode":"    public Process exec(Project project, String[] cmd, String[] env,\n                        File workingDir) throws IOException {\n        if (project == null) {\n            if (workingDir == null) {\n                return exec(project, cmd, env);\n            }\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"No project provided\");\n        }\n        \r\n        String antHome = project.getProperty(MagicNames.ANT_HOME);\n        if(antHome == null) {\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"Property '\" + MagicNames.ANT_HOME\n                                  + \"' not found\");\n        }\n        String antRun = FILE_UTILS.resolveFile(project.getBaseDir(),\n                                               antHome + File.separator\n                                               + myScript).toString();\n\n        \r\n        File commandDir = workingDir;\n        if(workingDir == null) {\n            commandDir = project.getBaseDir();\n        }\n        String[] newcmd = new String[cmd.length + 2];\n        newcmd[0] = antRun;\n        newcmd[1] = commandDir.getAbsolutePath();\n        System.arraycopy(cmd, 0, newcmd, 2, cmd.length);\n\n        return exec(project, newcmd, env);\n    }\n","date":"2012-06-15 12:28:24","endLine":69,"groupId":"3228","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"exec","params":"(Projectproject@String[]cmd@String[]env@FileworkingDir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/cf/5a89c17066c0206798c4ad53607408b7bd4c03.src","preCode":"    public Process exec(Project project, String[] cmd, String[] env,\n                        File workingDir) throws IOException {\n        if (project == null) {\n            if (workingDir == null) {\n                return exec(project, cmd, env);\n            }\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"No project provided\");\n        }\n        \r\n        String antHome = project.getProperty(MagicNames.ANT_HOME);\n        if(antHome == null) {\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"Property '\" + MagicNames.ANT_HOME\n                                  + \"' not found\");\n        }\n        String antRun = FILE_UTILS.resolveFile(project.getBaseDir(),\n                                               antHome + File.separator\n                                               + myScript).toString();\n\n        \r\n        File commandDir = workingDir;\n        if(workingDir == null) {\n            commandDir = project.getBaseDir();\n        }\n        String[] newcmd = new String[cmd.length + 2];\n        newcmd[0] = antRun;\n        newcmd[1] = commandDir.getAbsolutePath();\n        System.arraycopy(cmd, 0, newcmd, 2, cmd.length);\n\n        return exec(project, newcmd, env);\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/launcher/ScriptCommandLauncher.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"}],"commitId":"abec7e48efa22a34d81b78adbfbf44627de85ccd","commitMessage":"@@@PR 52706: allow command launcher to be selected via a task.  Submitted by Vimil Saju\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1350460 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-06-15 12:28:24","modifiedFileCount":"1","status":"B","submitter":"Stefan Bodewig"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":2,"curCode":"    public Process exec(Project project, String[] cmd, String[] env,\n                        File workingDir) throws IOException {\n        if (project == null) {\n            if (workingDir == null) {\n                return exec(project, cmd, env);\n            }\n            throw new IOException(\n                \"Cannot locate antRun script: No project provided\");\n        }\n        \r\n        String antHome = project.getProperty(MagicNames.ANT_HOME);\n        if (antHome == null) {\n            throw new IOException(\"Cannot locate antRun script: Property '\"\n                + MagicNames.ANT_HOME + \"' not found\");\n        }\n        String antRun = FILE_UTILS.resolveFile(project.getBaseDir(),\n                                               antHome + File.separator\n                                               + myScript).toString();\n\n        \r\n        File commandDir = workingDir;\n        if (workingDir == null) {\n            commandDir = project.getBaseDir();\n        }\n        \r\n        String[] newcmd = new String[cmd.length + 3];\n        newcmd[0] = \"perl\";\n        newcmd[1] = antRun;\n        newcmd[2] = commandDir.getAbsolutePath();\n        System.arraycopy(cmd, 0, newcmd, 3, cmd.length);\n        \r\n\n        return exec(project, newcmd, env);\n    }\n","date":"2017-04-13 23:15:22","endLine":88,"groupId":"10508","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"exec","params":"(Projectproject@String[]cmd@String[]env@FileworkingDir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/77/d1cc8bfb01a2d4afbf911222edff654745993d.src","preCode":"    public Process exec(Project project, String[] cmd, String[] env,\n                        File workingDir) throws IOException {\n        if (project == null) {\n            if (workingDir == null) {\n                return exec(project, cmd, env);\n            }\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"No project provided\");\n        }\n        \r\n        String antHome = project.getProperty(MagicNames.ANT_HOME);\n        if (antHome == null) {\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"Property '\" + MagicNames.ANT_HOME\n                                  + \"' not found\");\n        }\n        String antRun = FILE_UTILS.resolveFile(project.getBaseDir(),\n                                               antHome + File.separator\n                                               + myScript).toString();\n\n        \r\n        File commandDir = workingDir;\n        if (workingDir == null) {\n            commandDir = project.getBaseDir();\n        }\n        \r\n        String[] newcmd = new String[cmd.length + 3];\n        newcmd[0] = \"perl\";\n        newcmd[1] = antRun;\n        newcmd[2] = commandDir.getAbsolutePath();\n        System.arraycopy(cmd, 0, newcmd, 3, cmd.length);\n        \r\n\n        return exec(project, newcmd, env);\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/launcher/PerlScriptCommandLauncher.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":2,"curCode":"    public Process exec(Project project, String[] cmd, String[] env,\n                        File workingDir) throws IOException {\n        if (project == null) {\n            if (workingDir == null) {\n                return exec(project, cmd, env);\n            }\n            throw new IOException(\n                \"Cannot locate antRun script: No project provided\");\n        }\n        \r\n        String antHome = project.getProperty(MagicNames.ANT_HOME);\n        if (antHome == null) {\n            throw new IOException(\"Cannot locate antRun script: Property '\"\n                + MagicNames.ANT_HOME + \"' not found\");\n        }\n        String antRun = FILE_UTILS.resolveFile(project.getBaseDir(),\n                                               antHome + File.separator\n                                               + myScript).toString();\n\n        \r\n        File commandDir = workingDir;\n        if (workingDir == null) {\n            commandDir = project.getBaseDir();\n        }\n        String[] newcmd = new String[cmd.length + 2];\n        newcmd[0] = antRun;\n        newcmd[1] = commandDir.getAbsolutePath();\n        System.arraycopy(cmd, 0, newcmd, 2, cmd.length);\n\n        return exec(project, newcmd, env);\n    }\n","date":"2017-04-13 23:15:22","endLine":85,"groupId":"10508","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"exec","params":"(Projectproject@String[]cmd@String[]env@FileworkingDir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/be/e01d6bab44bfe76fb8392e2156efb81530c9f4.src","preCode":"    public Process exec(Project project, String[] cmd, String[] env,\n                        File workingDir) throws IOException {\n        if (project == null) {\n            if (workingDir == null) {\n                return exec(project, cmd, env);\n            }\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"No project provided\");\n        }\n        \r\n        String antHome = project.getProperty(MagicNames.ANT_HOME);\n        if (antHome == null) {\n            throw new IOException(\"Cannot locate antRun script: \"\n                                  + \"Property '\" + MagicNames.ANT_HOME\n                                  + \"' not found\");\n        }\n        String antRun = FILE_UTILS.resolveFile(project.getBaseDir(),\n                                               antHome + File.separator\n                                               + myScript).toString();\n\n        \r\n        File commandDir = workingDir;\n        if (workingDir == null) {\n            commandDir = project.getBaseDir();\n        }\n        String[] newcmd = new String[cmd.length + 2];\n        newcmd[0] = antRun;\n        newcmd[1] = commandDir.getAbsolutePath();\n        System.arraycopy(cmd, 0, newcmd, 2, cmd.length);\n\n        return exec(project, newcmd, env);\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/launcher/ScriptCommandLauncher.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"}]
