[{"authorTime":"2006-09-22 03:10:48","codes":[{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testEntryReference() {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String sysid = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        \r\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(sysid);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(sysid);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        project.addReference(\"catalog\", catalog);\n\n        XMLCatalog catalog1 = newCatalog();\n        project.addReference(\"catalog1\", catalog1);\n        XMLCatalog catalog2 = newCatalog();\n        project.addReference(\"catalog2\", catalog1);\n\n        catalog1.setRefid(new Reference(\"catalog\"));\n        catalog2.setRefid(new Reference(\"catalog1\"));\n\n        try {\n            InputSource result = catalog2.resolveEntity(publicId,\n                                                        \"nap:chemical+brothers\");\n\n            assertNotNull(result);\n            assertEquals(toURLString(dtdFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolveEntity() failed!\" + e.toString());\n        }\n\n        try {\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolve() failed!\" + e.toString());\n        }\n    }\n","date":"2006-09-22 03:10:48","endLine":292,"groupId":"6646","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEntryReference","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/53/2174bbb639028c94c90acfae728b3896c41ea3.src","preCode":"    public void testEntryReference() {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String sysid = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        \r\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(sysid);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(sysid);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        project.addReference(\"catalog\", catalog);\n\n        XMLCatalog catalog1 = newCatalog();\n        project.addReference(\"catalog1\", catalog1);\n        XMLCatalog catalog2 = newCatalog();\n        project.addReference(\"catalog2\", catalog1);\n\n        catalog1.setRefid(new Reference(\"catalog\"));\n        catalog2.setRefid(new Reference(\"catalog1\"));\n\n        try {\n            InputSource result = catalog2.resolveEntity(publicId,\n                                                        \"nap:chemical+brothers\");\n\n            assertNotNull(result);\n            assertEquals(toURLString(dtdFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolveEntity() failed!\" + e.toString());\n        }\n\n        try {\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolve() failed!\" + e.toString());\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"B"},{"authorDate":"2006-09-22 03:10:48","commitOrder":1,"curCode":"    public void testNestedCatalog() {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String dtdLoc = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(dtdLoc);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(dtdLoc);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        XMLCatalog catalog1 = newCatalog();\n        catalog1.addConfiguredXMLCatalog(catalog);\n\n        try {\n            InputSource result = catalog1.resolveEntity(publicId,\n                                                        \"nap:chemical+brothers\");\n            assertNotNull(result);\n            assertEquals(toURLString(dtdFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolveEntity() failed!\" + e.toString());\n        }\n\n        try {\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolve() failed!\" + e.toString());\n        }\n\n    }\n","date":"2006-09-22 03:10:48","endLine":336,"groupId":"6813","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestedCatalog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/53/2174bbb639028c94c90acfae728b3896c41ea3.src","preCode":"    public void testNestedCatalog() {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String dtdLoc = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(dtdLoc);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(dtdLoc);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        XMLCatalog catalog1 = newCatalog();\n        catalog1.addConfiguredXMLCatalog(catalog);\n\n        try {\n            InputSource result = catalog1.resolveEntity(publicId,\n                                                        \"nap:chemical+brothers\");\n            assertNotNull(result);\n            assertEquals(toURLString(dtdFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolveEntity() failed!\" + e.toString());\n        }\n\n        try {\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolve() failed!\" + e.toString());\n        }\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"B"}],"commitId":"73d66d2c6d6e0384fd66eba1f20ef97469c49b18","commitMessage":"@@@Restructuring to allow junit and antunit tests both.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@448636 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2006-09-22 03:10:48","modifiedFileCount":"0","status":"B","submitter":"Matthew Jason Benson"},{"authorTime":"2006-09-22 03:10:48","codes":[{"authorDate":"2007-11-08 02:26:07","commitOrder":2,"curCode":"    public void testEntryReference() {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String sysid = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        \r\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(sysid);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(sysid);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        project.addReference(\"catalog\", catalog);\n\n        XMLCatalog catalog1 = newCatalog();\n        project.addReference(\"catalog1\", catalog1);\n        XMLCatalog catalog2 = newCatalog();\n        project.addReference(\"catalog2\", catalog1);\n\n        catalog1.setRefid(new Reference(project, \"catalog\"));\n        catalog2.setRefid(new Reference(project, \"catalog1\"));\n\n        try {\n            InputSource result = catalog2.resolveEntity(publicId,\n                                                        \"nap:chemical+brothers\");\n\n            assertNotNull(result);\n            assertEquals(toURLString(dtdFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolveEntity() failed!\" + e.toString());\n        }\n\n        try {\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolve() failed!\" + e.toString());\n        }\n    }\n","date":"2007-11-08 02:26:07","endLine":292,"groupId":"1700","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEntryReference","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/26/7164864919504756a2b9c4bdb3aafec7140d87.src","preCode":"    public void testEntryReference() {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String sysid = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        \r\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(sysid);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(sysid);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        project.addReference(\"catalog\", catalog);\n\n        XMLCatalog catalog1 = newCatalog();\n        project.addReference(\"catalog1\", catalog1);\n        XMLCatalog catalog2 = newCatalog();\n        project.addReference(\"catalog2\", catalog1);\n\n        catalog1.setRefid(new Reference(\"catalog\"));\n        catalog2.setRefid(new Reference(\"catalog1\"));\n\n        try {\n            InputSource result = catalog2.resolveEntity(publicId,\n                                                        \"nap:chemical+brothers\");\n\n            assertNotNull(result);\n            assertEquals(toURLString(dtdFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolveEntity() failed!\" + e.toString());\n        }\n\n        try {\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolve() failed!\" + e.toString());\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"M"},{"authorDate":"2006-09-22 03:10:48","commitOrder":2,"curCode":"    public void testNestedCatalog() {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String dtdLoc = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(dtdLoc);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(dtdLoc);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        XMLCatalog catalog1 = newCatalog();\n        catalog1.addConfiguredXMLCatalog(catalog);\n\n        try {\n            InputSource result = catalog1.resolveEntity(publicId,\n                                                        \"nap:chemical+brothers\");\n            assertNotNull(result);\n            assertEquals(toURLString(dtdFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolveEntity() failed!\" + e.toString());\n        }\n\n        try {\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolve() failed!\" + e.toString());\n        }\n\n    }\n","date":"2006-09-22 03:10:48","endLine":336,"groupId":"6813","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestedCatalog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/53/2174bbb639028c94c90acfae728b3896c41ea3.src","preCode":"    public void testNestedCatalog() {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String dtdLoc = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(dtdLoc);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(dtdLoc);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        XMLCatalog catalog1 = newCatalog();\n        catalog1.addConfiguredXMLCatalog(catalog);\n\n        try {\n            InputSource result = catalog1.resolveEntity(publicId,\n                                                        \"nap:chemical+brothers\");\n            assertNotNull(result);\n            assertEquals(toURLString(dtdFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolveEntity() failed!\" + e.toString());\n        }\n\n        try {\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolve() failed!\" + e.toString());\n        }\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"N"}],"commitId":"85189970a00d67b2be9be4f67a42246f796d9fa8","commitMessage":"@@@Remove use of deprecated constructor calls: Reference(String) and Reference()\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@592845 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2007-11-08 02:26:07","modifiedFileCount":"8","status":"M","submitter":"Jan Materne"},{"authorTime":"2014-04-19 05:00:38","codes":[{"authorDate":"2014-04-19 05:00:38","commitOrder":3,"curCode":"    public void testEntryReference() throws IOException, SAXException, TransformerException {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String sysid = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        \r\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(sysid);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(sysid);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        project.addReference(\"catalog\", catalog);\n\n        XMLCatalog catalog1 = newCatalog();\n        project.addReference(\"catalog1\", catalog1);\n        XMLCatalog catalog2 = newCatalog();\n        project.addReference(\"catalog2\", catalog1);\n\n        catalog1.setRefid(new Reference(project, \"catalog\"));\n        catalog2.setRefid(new Reference(project, \"catalog1\"));\n\n        InputSource isResult = catalog2.resolveEntity(publicId,\n                                                    \"nap:chemical+brothers\");\n\n        assertNotNull(isResult);\n        assertEquals(toURLString(dtdFile),\n                     isResult.getSystemId());\n\n\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile),\n                         result.getSystemId());\n    }\n","date":"2014-04-19 05:00:38","endLine":293,"groupId":"1700","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEntryReference","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c1/adc30db23dcc132b748d8a33dc53f90e135c11.src","preCode":"    public void testEntryReference() {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String sysid = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        \r\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(sysid);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(sysid);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        project.addReference(\"catalog\", catalog);\n\n        XMLCatalog catalog1 = newCatalog();\n        project.addReference(\"catalog1\", catalog1);\n        XMLCatalog catalog2 = newCatalog();\n        project.addReference(\"catalog2\", catalog1);\n\n        catalog1.setRefid(new Reference(project, \"catalog\"));\n        catalog2.setRefid(new Reference(project, \"catalog1\"));\n\n        try {\n            InputSource result = catalog2.resolveEntity(publicId,\n                                                        \"nap:chemical+brothers\");\n\n            assertNotNull(result);\n            assertEquals(toURLString(dtdFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolveEntity() failed!\" + e.toString());\n        }\n\n        try {\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolve() failed!\" + e.toString());\n        }\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"M"},{"authorDate":"2014-04-19 05:00:38","commitOrder":3,"curCode":"    public void testNestedCatalog() throws IOException, SAXException, TransformerException {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String dtdLoc = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(dtdLoc);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(dtdLoc);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        XMLCatalog catalog1 = newCatalog();\n        catalog1.addConfiguredXMLCatalog(catalog);\n\n        InputSource isResult = catalog1.resolveEntity(publicId,\n                                                    \"nap:chemical+brothers\");\n        assertNotNull(isResult);\n        assertEquals(toURLString(dtdFile),\n                     isResult.getSystemId());\n\n        Source result = catalog.resolve(uri, null);\n        assertNotNull(result);\n        assertEquals(toURLString(xmlFile),\n                     result.getSystemId());\n\n    }\n","date":"2014-04-19 05:00:38","endLine":330,"groupId":"6813","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestedCatalog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c1/adc30db23dcc132b748d8a33dc53f90e135c11.src","preCode":"    public void testNestedCatalog() {\n\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String dtdLoc = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(dtdLoc);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(dtdLoc);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        XMLCatalog catalog1 = newCatalog();\n        catalog1.addConfiguredXMLCatalog(catalog);\n\n        try {\n            InputSource result = catalog1.resolveEntity(publicId,\n                                                        \"nap:chemical+brothers\");\n            assertNotNull(result);\n            assertEquals(toURLString(dtdFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolveEntity() failed!\" + e.toString());\n        }\n\n        try {\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile),\n                         result.getSystemId());\n        } catch (Exception e) {\n            fail(\"resolve() failed!\" + e.toString());\n        }\n\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":296,"status":"M"}],"commitId":"b61c80746dd5df73899390826e197d2656784f91","commitMessage":"@@@Test improvements: convert to JUnit4.  improved error testing and remove sleeps\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@1588563 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-19 05:00:38","modifiedFileCount":"268","status":"M","submitter":"mclarke"},{"authorTime":"2018-04-22 18:12:08","codes":[{"authorDate":"2018-04-22 18:12:08","commitOrder":4,"curCode":"    public void testEntryReference() throws IOException, SAXException, TransformerException {\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String sysid = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        \r\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(sysid);\n        catalog.addDTD(dtd);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n\n        project.addReference(\"catalog\", catalog);\n\n        XMLCatalog catalogA = newCatalog();\n        project.addReference(\"catalogA\", catalogA);\n        XMLCatalog catalogB = newCatalog();\n        project.addReference(\"catalogB\", catalogB);\n\n        catalogA.setRefid(new Reference(project, \"catalog\"));\n        catalogB.setRefid(new Reference(project, \"catalogA\"));\n\n        InputSource isResult = catalogB.resolveEntity(publicId, \"nap:chemical+brothers\");\n        assertNotNull(isResult);\n\n        File dtdFile = project.resolveFile(sysid);\n        assertEquals(toURLString(dtdFile), isResult.getSystemId());\n\n        Source result = catalog.resolve(uri, null);\n        assertNotNull(result);\n\n        File xmlFile = project.resolveFile(uriLoc);\n        assertEquals(toURLString(xmlFile), result.getSystemId());\n    }\n","date":"2018-04-22 18:12:08","endLine":264,"groupId":"10231","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testEntryReference","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/5b/607e445f0025379d3baf29da39264948b4f147.src","preCode":"    public void testEntryReference() throws IOException, SAXException, TransformerException {\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String sysid = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        \r\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(sysid);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(sysid);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        project.addReference(\"catalog\", catalog);\n\n        XMLCatalog catalog1 = newCatalog();\n        project.addReference(\"catalog1\", catalog1);\n        XMLCatalog catalog2 = newCatalog();\n        project.addReference(\"catalog2\", catalog1);\n\n        catalog1.setRefid(new Reference(project, \"catalog\"));\n        catalog2.setRefid(new Reference(project, \"catalog1\"));\n\n        InputSource isResult = catalog2.resolveEntity(publicId, \"nap:chemical+brothers\");\n\n        assertNotNull(isResult);\n        assertEquals(toURLString(dtdFile), isResult.getSystemId());\n\n            Source result = catalog.resolve(uri, null);\n            assertNotNull(result);\n            assertEquals(toURLString(xmlFile), result.getSystemId());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"M"},{"authorDate":"2018-04-22 18:12:08","commitOrder":4,"curCode":"    public void testNestedCatalog() throws IOException, SAXException, TransformerException {\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String dtdLoc = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(dtdLoc);\n        catalog.addDTD(dtd);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n\n        XMLCatalog catalogA = newCatalog();\n        catalogA.addConfiguredXMLCatalog(catalog);\n        InputSource isResult = catalogA.resolveEntity(publicId, \"nap:chemical+brothers\");\n        assertNotNull(isResult);\n\n        File dtdFile = project.resolveFile(dtdLoc);\n        assertEquals(toURLString(dtdFile), isResult.getSystemId());\n\n        Source result = catalog.resolve(uri, null);\n        assertNotNull(result);\n\n        File xmlFile = project.resolveFile(uriLoc);\n        assertEquals(toURLString(xmlFile), result.getSystemId());\n    }\n","date":"2018-04-22 18:12:08","endLine":297,"groupId":"10231","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNestedCatalog","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/5b/607e445f0025379d3baf29da39264948b4f147.src","preCode":"    public void testNestedCatalog() throws IOException, SAXException, TransformerException {\n        String publicId = \"-//stevo//DTD doc 1.0//EN\";\n        String dtdLoc = \"src/etc/testcases/taskdefs/optional/xml/doc.dtd\";\n\n        ResourceLocation dtd = new ResourceLocation();\n        dtd.setPublicId(publicId);\n        dtd.setLocation(dtdLoc);\n        catalog.addDTD(dtd);\n        File dtdFile = project.resolveFile(dtdLoc);\n\n        String uri = \"http://foo.com/bar/blah.xml\";\n        String uriLoc = \"src/etc/testcases/taskdefs/optional/xml/about.xml\";\n\n        ResourceLocation entity = new ResourceLocation();\n        entity.setPublicId(uri);\n        entity.setLocation(uriLoc);\n        catalog.addEntity(entity);\n        File xmlFile = project.resolveFile(uriLoc);\n\n        XMLCatalog catalog1 = newCatalog();\n        catalog1.addConfiguredXMLCatalog(catalog);\n\n        InputSource isResult = catalog1.resolveEntity(publicId, \"nap:chemical+brothers\");\n        assertNotNull(isResult);\n        assertEquals(toURLString(dtdFile), isResult.getSystemId());\n\n        Source result = catalog.resolve(uri, null);\n        assertNotNull(result);\n        assertEquals(toURLString(xmlFile), result.getSystemId());\n    }\n","realPath":"src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"M"}],"commitId":"beb67e32249acb771b60304937781d997657ca71","commitMessage":"@@@Extract and/or use fixtures.  be more careful with ?root? ","date":"2018-04-22 18:12:08","modifiedFileCount":"2","status":"M","submitter":"Gintas Grigelionis"}]
