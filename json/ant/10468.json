[{"authorTime":"2005-05-30 08:40:21","codes":[{"authorDate":"2009-08-27 18:14:07","commitOrder":2,"curCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","date":"2009-08-27 18:14:07","endLine":611,"groupId":"9344","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setRetriesAllowed","params":"(StringretriesAllowed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/42/23fd9126e1ce135661ffb2c1867e01a91fb3be.src","preCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":590,"status":"B"},{"authorDate":"2005-05-30 08:40:21","commitOrder":2,"curCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                            \"Invalid value for retriesAllowed attribute: \" \n                            + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                        \"Invalid value for retriesAllowed attribute: \" \n                        + retriesAllowed);\n             \n            }\n            \n        }\n    }\n","date":"2005-05-30 08:40:21","endLine":1396,"groupId":"9344","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setRetriesAllowed","params":"(StringretriesAllowed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/56/40f77952a113d3ba2eeb99208429131c1249c0.src","preCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                            \"Invalid value for retriesAllowed attribute: \" \n                            + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                        \"Invalid value for retriesAllowed attribute: \" \n                        + retriesAllowed);\n             \n            }\n            \n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1375,"status":"NB"}],"commitId":"d72413184949c04015b452cf9cdf36bf2107061f","commitMessage":"@@@refactored <ftp> so commons-net may be loaded via a separate classloader.  Based on patch by Greg Roodt in PR 45860.  Not really tested.  yet.  therefore I haven't changed defaults.properties so far\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@808350 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-08-27 18:14:07","modifiedFileCount":"3","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2010-02-17 20:58:50","codes":[{"authorDate":"2010-02-17 20:58:50","commitOrder":3,"curCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        String r = retriesAllowed != null\n            ? retriesAllowed.toUpperCase(Locale.ENGLISH) : null;\n        if (\"FOREVER\".equals(r)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","date":"2010-02-17 20:58:50","endLine":613,"groupId":"9344","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setRetriesAllowed","params":"(StringretriesAllowed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/7c/bfef3f8baa0104f4aed08058d0d38daae5d8b1.src","preCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":590,"status":"M"},{"authorDate":"2010-02-17 20:58:50","commitOrder":3,"curCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        String r = retriesAllowed != null\n            ? retriesAllowed.toUpperCase(Locale.ENGLISH) : null;\n        if (\"FOREVER\".equals(r)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","date":"2010-02-17 20:58:50","endLine":1561,"groupId":"9344","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setRetriesAllowed","params":"(StringretriesAllowed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8e/7c0bf0dbe08fd680ba26f3d0d18f3b64cbac26.src","preCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1538,"status":"M"}],"commitId":"58f0bb04db9c5c8a858d7a3be7719608f25f2f49","commitMessage":"@@@if user input is compared to fixed strings in a case insensitive manner we should use the default locale.  Use Locale.ENGLISH consistently\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@910955 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-02-17 20:58:50","modifiedFileCount":"59","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2010-02-18 19:00:58","codes":[{"authorDate":"2010-02-18 19:00:58","commitOrder":4,"curCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","date":"2010-02-18 19:00:58","endLine":611,"groupId":"9344","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setRetriesAllowed","params":"(StringretriesAllowed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ee/dbb2ac3dc710fbda8d467fabe201d34fe73b33.src","preCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        String r = retriesAllowed != null\n            ? retriesAllowed.toUpperCase(Locale.ENGLISH) : null;\n        if (\"FOREVER\".equals(r)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":590,"status":"M"},{"authorDate":"2010-02-18 19:00:58","commitOrder":4,"curCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","date":"2010-02-18 19:00:58","endLine":1559,"groupId":"9344","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setRetriesAllowed","params":"(StringretriesAllowed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/ee/6518d451ba17fe90f4e5af714cdecd8f5de1fe.src","preCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        String r = retriesAllowed != null\n            ? retriesAllowed.toUpperCase(Locale.ENGLISH) : null;\n        if (\"FOREVER\".equals(r)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1538,"status":"M"}],"commitId":"c767541c7d35c9eef55bf65e686373b02b71af2a","commitMessage":"@@@As Jesse points out.  equalsIgnoreCase is not locale-sensitive\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@911324 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-02-18 19:00:58","modifiedFileCount":"45","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":5,"curCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                        \"Invalid value for retriesAllowed attribute: %s\",\n                        retriesAllowed);\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                    \"Invalid value for retriesAllowed attribute: %s\",\n                    retriesAllowed);\n            }\n\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":608,"groupId":"10468","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setRetriesAllowed","params":"(StringretriesAllowed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/2e/5228d9b205c65d6fa6324bf45bc955a592bae4.src","preCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTask.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":589,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":5,"curCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                        \"Invalid value for retriesAllowed attribute: %s\",\n                        retriesAllowed);\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                    \"Invalid value for retriesAllowed attribute: %s\",\n                    retriesAllowed);\n            }\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":1600,"groupId":"10468","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setRetriesAllowed","params":"(StringretriesAllowed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/2a/5239022c4fbbf3e893d2c9ad7a4fcdd809cc5c.src","preCode":"    public void setRetriesAllowed(String retriesAllowed) {\n        if (\"FOREVER\".equalsIgnoreCase(retriesAllowed)) {\n            this.retriesAllowed = Retryable.RETRY_FOREVER;\n        } else {\n            try {\n                int retries = Integer.parseInt(retriesAllowed);\n                if (retries < Retryable.RETRY_FOREVER) {\n                    throw new BuildException(\n                                             \"Invalid value for retriesAllowed attribute: \"\n                                             + retriesAllowed);\n\n                }\n                this.retriesAllowed = retries;\n            } catch (NumberFormatException px) {\n                throw new BuildException(\n                                         \"Invalid value for retriesAllowed attribute: \"\n                                         + retriesAllowed);\n\n            }\n\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1582,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"}]
