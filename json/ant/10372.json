[{"authorTime":"2002-04-24 11:09:06","codes":[{"authorDate":"2002-04-24 11:09:06","commitOrder":1,"curCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String value = getValue();\n            if (GZIP.equals(value)) {\n                return new GZIPOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(value)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","date":"2002-04-24 11:09:06","endLine":613,"groupId":"8346","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"compress","params":"(finalOutputStreamostream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/3f/01ae1476440215aec98119ff2e4175d33d8bac.src","preCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String value = getValue();\n            if (GZIP.equals(value)) {\n                return new GZIPOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(value)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Tar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":600,"status":"B"},{"authorDate":"2002-04-24 11:09:06","commitOrder":1,"curCode":"        private InputStream decompress(final File file,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String value = getValue();\n            if (GZIP.equals(value)) {\n                return new GZIPInputStream(istream);\n            } else {\n                if (BZIP2.equals(value)) {\n                    final char[] magic = new char[] { 'B', 'Z' };\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                \"Invalid bz2 file.\" + file.toString());\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","date":"2002-04-24 11:09:06","endLine":200,"groupId":"3143","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"decompress","params":"(finalFilefile@finalInputStreamistream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/db/c520e6506263804764a864e7a32decdfc72515.src","preCode":"        private InputStream decompress(final File file,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String value = getValue();\n            if (GZIP.equals(value)) {\n                return new GZIPInputStream(istream);\n            } else {\n                if (BZIP2.equals(value)) {\n                    final char[] magic = new char[] { 'B', 'Z' };\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                \"Invalid bz2 file.\" + file.toString());\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Untar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"B"}],"commitId":"ccef0f89820b6a6613fd587d00c6bab48e6f45ff","commitMessage":"@@@Implement and document a compression attribute for the tar and untar tasks.\n\nSubmitted by: Curt Arnold <carnold@houston.rr.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@272562 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2002-04-24 11:09:06","modifiedFileCount":"5","status":"B","submitter":"Magesh Umasankar"},{"authorTime":"2004-11-12 23:17:12","codes":[{"authorDate":"2004-11-12 23:17:12","commitOrder":2,"curCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","date":"2004-11-12 23:17:12","endLine":764,"groupId":"10533","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"compress","params":"(finalOutputStreamostream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/29/f1ddaa6fe07b282101d806e83468a7d6977ba8.src","preCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String value = getValue();\n            if (GZIP.equals(value)) {\n                return new GZIPOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(value)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Tar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":751,"status":"M"},{"authorDate":"2004-11-12 23:17:12","commitOrder":2,"curCode":"        private InputStream decompress(final File file,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    final char[] magic = new char[] {'B', 'Z'};\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                \"Invalid bz2 file.\" + file.toString());\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","date":"2004-11-12 23:17:12","endLine":183,"groupId":"640","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"decompress","params":"(finalFilefile@finalInputStreamistream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/62/08ac89297b9f72f3572c4b80f6121126c2f2e7.src","preCode":"        private InputStream decompress(final File file,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String value = getValue();\n            if (GZIP.equals(value)) {\n                return new GZIPInputStream(istream);\n            } else {\n                if (BZIP2.equals(value)) {\n                    final char[] magic = new char[] {'B', 'Z'};\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                \"Invalid bz2 file.\" + file.toString());\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Untar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"}],"commitId":"3f31dc8f7a3bfbca7fc1b633742521ce5e4cb6c4","commitMessage":"@@@Make Jikes happy\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@277030 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2004-11-12 23:17:12","modifiedFileCount":"37","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2005-09-29 03:08:09","codes":[{"authorDate":"2004-11-12 23:17:12","commitOrder":3,"curCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","date":"2004-11-12 23:17:12","endLine":764,"groupId":"10533","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"compress","params":"(finalOutputStreamostream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/29/f1ddaa6fe07b282101d806e83468a7d6977ba8.src","preCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Tar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":751,"status":"N"},{"authorDate":"2005-09-29 03:08:09","commitOrder":3,"curCode":"        private InputStream decompress(final String name,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    final char[] magic = new char[] {'B', 'Z'};\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                \"Invalid bz2 file.\" + name);\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","date":"2005-09-29 03:08:09","endLine":219,"groupId":"640","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"decompress","params":"(finalStringname@finalInputStreamistream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/2f/fafa082d5fa3d8b031d18b1e67d55a4332ff7f.src","preCode":"        private InputStream decompress(final File file,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    final char[] magic = new char[] {'B', 'Z'};\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                \"Invalid bz2 file.\" + file.toString());\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Untar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"}],"commitId":"f027ced8e7799c021f5678ba73fba07faca9de8f","commitMessage":"@@@resource collection support for unzip/jar/war/tar\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@292261 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2005-09-29 03:08:09","modifiedFileCount":"2","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2005-10-12 12:22:37","codes":[{"authorDate":"2004-11-12 23:17:12","commitOrder":4,"curCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","date":"2004-11-12 23:17:12","endLine":764,"groupId":"10533","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"compress","params":"(finalOutputStreamostream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/29/f1ddaa6fe07b282101d806e83468a7d6977ba8.src","preCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Tar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":751,"status":"N"},{"authorDate":"2005-10-12 12:22:37","commitOrder":4,"curCode":"        public InputStream decompress(final String name,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    final char[] magic = new char[] {'B', 'Z'};\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                                     \"Invalid bz2 file.\" + name);\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","date":"2005-10-12 12:22:37","endLine":219,"groupId":"640","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"decompress","params":"(finalStringname@finalInputStreamistream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6d/b0bb448287218a69733241c06f734b425d95d5.src","preCode":"        private InputStream decompress(final String name,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    final char[] magic = new char[] {'B', 'Z'};\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                                     \"Invalid bz2 file.\" + name);\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Untar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"}],"commitId":"a96627738decba56e1c94e54fa23ecbd7bfdb9a2","commitMessage":"@@@Now that resources become available in more tasks.  throw in a couple of new resources.  including tarfileset\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@314776 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2005-10-12 12:22:37","modifiedFileCount":"5","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-01-12 05:20:16","codes":[{"authorDate":"2004-11-12 23:17:12","commitOrder":5,"curCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","date":"2004-11-12 23:17:12","endLine":764,"groupId":"10533","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"compress","params":"(finalOutputStreamostream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/29/f1ddaa6fe07b282101d806e83468a7d6977ba8.src","preCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Tar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":751,"status":"N"},{"authorDate":"2017-01-12 05:20:16","commitOrder":5,"curCode":"        public InputStream decompress(final String name,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            } else if (XZ.equals(v)) {\n                return newXZInputStream(istream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    final char[] magic = new char[] {'B', 'Z'};\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                                     \"Invalid bz2 file.\" + name);\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","date":"2017-01-12 05:20:16","endLine":251,"groupId":"640","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"decompress","params":"(finalStringname@finalInputStreamistream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8e/841c006bf42a86648f6f20a38512483701a446.src","preCode":"        public InputStream decompress(final String name,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    final char[] magic = new char[] {'B', 'Z'};\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                                     \"Invalid bz2 file.\" + name);\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Untar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"}],"commitId":"14ad5c43cd9daa609aae8a4849362d18b8b69f0a","commitMessage":"@@@xz support in untar - PR 60350\n","date":"2017-01-12 05:20:16","modifiedFileCount":"1","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-01-12 05:20:16","codes":[{"authorDate":"2017-01-12 13:53:09","commitOrder":6,"curCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            } else if (XZ.equals(v)) {\n                return newXZOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","date":"2017-01-12 13:53:09","endLine":1023,"groupId":"5123","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"compress","params":"(finalOutputStreamostream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/81/5477ab950da9cb80abfbd6c2c1d8415bf0782e.src","preCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Tar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":1008,"status":"M"},{"authorDate":"2017-01-12 05:20:16","commitOrder":6,"curCode":"        public InputStream decompress(final String name,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            } else if (XZ.equals(v)) {\n                return newXZInputStream(istream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    final char[] magic = new char[] {'B', 'Z'};\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                                     \"Invalid bz2 file.\" + name);\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","date":"2017-01-12 05:20:16","endLine":251,"groupId":"640","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"decompress","params":"(finalStringname@finalInputStreamistream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/8e/841c006bf42a86648f6f20a38512483701a446.src","preCode":"        public InputStream decompress(final String name,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            } else if (XZ.equals(v)) {\n                return newXZInputStream(istream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    final char[] magic = new char[] {'B', 'Z'};\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                                     \"Invalid bz2 file.\" + name);\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Untar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"f479b5f52f27fe13bf439be5368ebce699252219","commitMessage":"@@@xz support in tar - PR 60350\n","date":"2017-01-12 13:53:09","modifiedFileCount":"1","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":7,"curCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            }\n            if (XZ.equals(v)) {\n                return newXZOutputStream(ostream);\n            }\n            if (BZIP2.equals(v)) {\n                ostream.write('B');\n                ostream.write('Z');\n                return new CBZip2OutputStream(ostream);\n            }\n            return ostream;\n        }\n","date":"2017-04-13 23:15:22","endLine":1009,"groupId":"5749","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"compress","params":"(finalOutputStreamostream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f5/1a056d801bf0fb8d45e6700d90a7995d02e52a.src","preCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            } else if (XZ.equals(v)) {\n                return newXZOutputStream(ostream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    ostream.write('B');\n                    ostream.write('Z');\n                    return new CBZip2OutputStream(ostream);\n                }\n            }\n            return ostream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Tar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":994,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":7,"curCode":"        public InputStream decompress(final String name,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            }\n            if (XZ.equals(v)) {\n                return newXZInputStream(istream);\n            }\n            if (BZIP2.equals(v)) {\n                final char[] magic = new char[] { 'B', 'Z' };\n                for (int i = 0; i < magic.length; i++) {\n                    if (istream.read() != magic[i]) {\n                        throw new BuildException(\"Invalid bz2 file.\" + name);\n                    }\n                }\n                return new CBZip2InputStream(istream);\n            }\n            return istream;\n        }\n","date":"2017-04-13 23:15:22","endLine":241,"groupId":"640","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"decompress","params":"(finalStringname@finalInputStreamistream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/fa/26c3544e2c4d5efb69f98420bfbabbda739adf.src","preCode":"        public InputStream decompress(final String name,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            } else if (XZ.equals(v)) {\n                return newXZInputStream(istream);\n            } else {\n                if (BZIP2.equals(v)) {\n                    final char[] magic = new char[] {'B', 'Z'};\n                    for (int i = 0; i < magic.length; i++) {\n                        if (istream.read() != magic[i]) {\n                            throw new BuildException(\n                                                     \"Invalid bz2 file.\" + name);\n                        }\n                    }\n                    return new CBZip2InputStream(istream);\n                }\n            }\n            return istream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Untar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"},{"authorTime":"2018-04-01 16:26:49","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":8,"curCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            }\n            if (XZ.equals(v)) {\n                return newXZOutputStream(ostream);\n            }\n            if (BZIP2.equals(v)) {\n                ostream.write('B');\n                ostream.write('Z');\n                return new CBZip2OutputStream(ostream);\n            }\n            return ostream;\n        }\n","date":"2017-04-13 23:15:22","endLine":1009,"groupId":"10372","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"compress","params":"(finalOutputStreamostream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/f5/1a056d801bf0fb8d45e6700d90a7995d02e52a.src","preCode":"        private OutputStream compress(final OutputStream ostream)\n            throws IOException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPOutputStream(ostream);\n            }\n            if (XZ.equals(v)) {\n                return newXZOutputStream(ostream);\n            }\n            if (BZIP2.equals(v)) {\n                ostream.write('B');\n                ostream.write('Z');\n                return new CBZip2OutputStream(ostream);\n            }\n            return ostream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Tar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":994,"status":"N"},{"authorDate":"2018-04-01 16:26:49","commitOrder":8,"curCode":"        public InputStream decompress(final String name,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            }\n            if (XZ.equals(v)) {\n                return newXZInputStream(istream);\n            }\n            if (BZIP2.equals(v)) {\n                final char[] magic = new char[] { 'B', 'Z' };\n                for (char c : magic) {\n                    if (istream.read() != c) {\n                        throw new BuildException(\"Invalid bz2 file.\" + name);\n                    }\n                }\n                return new CBZip2InputStream(istream);\n            }\n            return istream;\n        }\n","date":"2018-04-01 16:26:49","endLine":241,"groupId":"10372","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"decompress","params":"(finalStringname@finalInputStreamistream)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/d1/845f0f9c4eed9b421db8f71c1b041f2d788c26.src","preCode":"        public InputStream decompress(final String name,\n                                       final InputStream istream)\n            throws IOException, BuildException {\n            final String v = getValue();\n            if (GZIP.equals(v)) {\n                return new GZIPInputStream(istream);\n            }\n            if (XZ.equals(v)) {\n                return newXZInputStream(istream);\n            }\n            if (BZIP2.equals(v)) {\n                final char[] magic = new char[] { 'B', 'Z' };\n                for (int i = 0; i < magic.length; i++) {\n                    if (istream.read() != magic[i]) {\n                        throw new BuildException(\"Invalid bz2 file.\" + name);\n                    }\n                }\n                return new CBZip2InputStream(istream);\n            }\n            return istream;\n        }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Untar.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"M"}],"commitId":"1c80d507f496dde98869890e671edf635bef8dec","commitMessage":"@@@Use foreach loops","date":"2018-04-01 16:26:49","modifiedFileCount":"123","status":"M","submitter":"Gintas Grigelionis"}]
