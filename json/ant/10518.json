[{"authorTime":"2009-08-18 11:08:20","codes":[{"authorDate":"2007-11-07 01:45:55","commitOrder":6,"curCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\"Specify at least one source\"\n                                   + \"--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (\"now\".equalsIgnoreCase(dateTime)) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\"Date of \" + dateTime\n                            + \" results in negative \" + \"milliseconds value \"\n                            + \"relative to epoch \" + \"(January 1, 1970, \"\n                            + \"00:00:00 GMT).\");\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    ((millis < 0) ? Project.MSG_DEBUG : Project.MSG_VERBOSE));\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","date":"2007-11-07 01:45:55","endLine":270,"groupId":"10508","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/0a/eb67b08efb5b5e3e92e381c0d8a0f6796dea73.src","preCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\"Specify at least one source\"\n                                   + \"--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (\"now\".equalsIgnoreCase(dateTime)) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\"Date of \" + dateTime\n                            + \" results in negative \" + \"milliseconds value \"\n                            + \"relative to epoch \" + \"(January 1, 1970, \"\n                            + \"00:00:00 GMT).\");\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    ((millis < 0) ? Project.MSG_DEBUG : Project.MSG_VERBOSE));\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Touch.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"NB"},{"authorDate":"2009-08-18 11:08:20","commitOrder":6,"curCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (\"now\".equalsIgnoreCase(dateTime)) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe = null;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        if (pe != null) {\n            throw new BuildException(pe.getMessage(), pe, getLocation());\n        }\n        \n        return 0;\n    }\n","date":"2009-08-18 11:08:20","endLine":144,"groupId":"1808","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getMillis","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/18/81f868d1afde0887e7473c0106f617e38de433.src","preCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (\"now\".equalsIgnoreCase(dateTime)) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe = null;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        if (pe != null) {\n            throw new BuildException(pe.getMessage(), pe, getLocation());\n        }\n        \n        return 0;\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/condition/IsLastModified.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"}],"commitId":"65c667d14c4cd0200c361b2fc9efe7139d63daef","commitMessage":"@@@new islastmodified condition\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@805265 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-08-18 11:08:20","modifiedFileCount":"1","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2010-02-17 20:58:50","codes":[{"authorDate":"2010-02-17 20:58:50","commitOrder":7,"curCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\"Specify at least one source\"\n                                   + \"--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (dateTime != null\n                && \"now\".equals(dateTime.toLowerCase(Locale.ENGLISH))) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\"Date of \" + dateTime\n                            + \" results in negative \" + \"milliseconds value \"\n                            + \"relative to epoch \" + \"(January 1, 1970, \"\n                            + \"00:00:00 GMT).\");\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    ((millis < 0) ? Project.MSG_DEBUG : Project.MSG_VERBOSE));\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","date":"2010-02-17 20:58:50","endLine":272,"groupId":"10508","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/6d/9bf68af2561d4653687b575a71f3095482d11c.src","preCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\"Specify at least one source\"\n                                   + \"--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (\"now\".equalsIgnoreCase(dateTime)) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\"Date of \" + dateTime\n                            + \" results in negative \" + \"milliseconds value \"\n                            + \"relative to epoch \" + \"(January 1, 1970, \"\n                            + \"00:00:00 GMT).\");\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    ((millis < 0) ? Project.MSG_DEBUG : Project.MSG_VERBOSE));\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Touch.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"},{"authorDate":"2010-02-17 20:58:50","commitOrder":7,"curCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (dateTime != null\n            && \"now\".equals(dateTime.toLowerCase(Locale.ENGLISH))) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe = null;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        if (pe != null) {\n            throw new BuildException(pe.getMessage(), pe, getLocation());\n        }\n        \n        return 0;\n    }\n","date":"2010-02-17 20:58:50","endLine":148,"groupId":"1808","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getMillis","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/05/94a917a9f7fc4dfebb2b901128686a9bac2f43.src","preCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (\"now\".equalsIgnoreCase(dateTime)) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe = null;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        if (pe != null) {\n            throw new BuildException(pe.getMessage(), pe, getLocation());\n        }\n        \n        return 0;\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/condition/IsLastModified.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"58f0bb04db9c5c8a858d7a3be7719608f25f2f49","commitMessage":"@@@if user input is compared to fixed strings in a case insensitive manner we should use the default locale.  Use Locale.ENGLISH consistently\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@910955 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-02-17 20:58:50","modifiedFileCount":"59","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2010-02-18 19:00:58","codes":[{"authorDate":"2010-02-18 19:00:58","commitOrder":8,"curCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\"Specify at least one source\"\n                                   + \"--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (\"now\".equalsIgnoreCase(dateTime)) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\"Date of \" + dateTime\n                            + \" results in negative \" + \"milliseconds value \"\n                            + \"relative to epoch \" + \"(January 1, 1970, \"\n                            + \"00:00:00 GMT).\");\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    ((millis < 0) ? Project.MSG_DEBUG : Project.MSG_VERBOSE));\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","date":"2010-02-18 19:00:58","endLine":271,"groupId":"10508","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"checkConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/a4/f344ef89b3ce33ae1f3cc23239e0afb2fef982.src","preCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\"Specify at least one source\"\n                                   + \"--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (dateTime != null\n                && \"now\".equals(dateTime.toLowerCase(Locale.ENGLISH))) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\"Date of \" + dateTime\n                            + \" results in negative \" + \"milliseconds value \"\n                            + \"relative to epoch \" + \"(January 1, 1970, \"\n                            + \"00:00:00 GMT).\");\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    ((millis < 0) ? Project.MSG_DEBUG : Project.MSG_VERBOSE));\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Touch.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"},{"authorDate":"2010-02-18 19:00:58","commitOrder":8,"curCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (\"now\".equalsIgnoreCase(dateTime)) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe = null;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        if (pe != null) {\n            throw new BuildException(pe.getMessage(), pe, getLocation());\n        }\n        \n        return 0;\n    }\n","date":"2010-02-18 19:00:58","endLine":146,"groupId":"1808","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getMillis","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/31/b0ffa351d6805aedde053fd837b0a3870b188d.src","preCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (dateTime != null\n            && \"now\".equals(dateTime.toLowerCase(Locale.ENGLISH))) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe = null;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        if (pe != null) {\n            throw new BuildException(pe.getMessage(), pe, getLocation());\n        }\n        \n        return 0;\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/condition/IsLastModified.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"c767541c7d35c9eef55bf65e686373b02b71af2a","commitMessage":"@@@As Jesse points out.  equalsIgnoreCase is not locale-sensitive\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/core/trunk@911324 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-02-18 19:00:58","modifiedFileCount":"45","status":"M","submitter":"Stefan Bodewig"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2017-04-13 23:15:22","commitOrder":9,"curCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\n                \"Specify at least one source--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (\"now\".equalsIgnoreCase(dateTime)) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\n                        \"Date of %s results in negative milliseconds value relative to epoch (January 1, 1970, 00:00:00 GMT).\",\n                        dateTime);\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    ((millis < 0) ? Project.MSG_DEBUG : Project.MSG_VERBOSE));\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","date":"2017-04-13 23:15:22","endLine":275,"groupId":"10508","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"checkConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/c2/de10e9079ed1577eaba5aa2aa3563ce8f8a952.src","preCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\"Specify at least one source\"\n                                   + \"--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (\"now\".equalsIgnoreCase(dateTime)) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\"Date of \" + dateTime\n                            + \" results in negative \" + \"milliseconds value \"\n                            + \"relative to epoch \" + \"(January 1, 1970, \"\n                            + \"00:00:00 GMT).\");\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    ((millis < 0) ? Project.MSG_DEBUG : Project.MSG_VERBOSE));\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Touch.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":9,"curCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (\"now\".equalsIgnoreCase(dateTime)) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        throw new BuildException(pe.getMessage(), pe, getLocation());\n    }\n","date":"2017-04-13 23:15:22","endLine":150,"groupId":"1808","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getMillis","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/51/471c822f59f79a6aec01d766b40833fadd88da.src","preCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (\"now\".equalsIgnoreCase(dateTime)) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe = null;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        if (pe != null) {\n            throw new BuildException(pe.getMessage(), pe, getLocation());\n        }\n        \n        return 0;\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/condition/IsLastModified.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"b7d1e9bde44cb8e5233d6e70bb96e14cbb2f3e2d","commitMessage":"@@@java 5-8\n","date":"2017-04-13 23:15:22","modifiedFileCount":"609","status":"M","submitter":"Matt Benson"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2018-11-04 17:02:42","commitOrder":10,"curCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\n                \"Specify at least one source--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (\"now\".equalsIgnoreCase(dateTime)) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\n                        \"Date of %s results in negative milliseconds value relative to epoch (January 1, 1970, 00:00:00 GMT).\",\n                        dateTime);\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    millis < 0 ? Project.MSG_DEBUG : Project.MSG_VERBOSE);\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","date":"2018-11-04 17:03:38","endLine":262,"groupId":"10508","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"checkConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/d7/c9e97b7b3b5cc61c326807a47711147cd6bc18.src","preCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\n                \"Specify at least one source--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (\"now\".equalsIgnoreCase(dateTime)) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\n                        \"Date of %s results in negative milliseconds value relative to epoch (January 1, 1970, 00:00:00 GMT).\",\n                        dateTime);\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    ((millis < 0) ? Project.MSG_DEBUG : Project.MSG_VERBOSE));\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Touch.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":10,"curCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (\"now\".equalsIgnoreCase(dateTime)) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        throw new BuildException(pe.getMessage(), pe, getLocation());\n    }\n","date":"2017-04-13 23:15:22","endLine":150,"groupId":"1808","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getMillis","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/51/471c822f59f79a6aec01d766b40833fadd88da.src","preCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (\"now\".equalsIgnoreCase(dateTime)) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        throw new BuildException(pe.getMessage(), pe, getLocation());\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/condition/IsLastModified.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"N"}],"commitId":"e2dd6ec79a083901907e35ac4f0cd3631e71ec55","commitMessage":"@@@SonarQube: unnecessary parentheses is a major code smell","date":"2018-11-04 17:03:38","modifiedFileCount":"40","status":"M","submitter":"Gintas Grigelionis"},{"authorTime":"2017-04-13 23:15:22","codes":[{"authorDate":"2018-11-05 02:45:48","commitOrder":11,"curCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\n                \"Specify at least one source--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (\"now\".equalsIgnoreCase(dateTime)) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\n                        \"Date of %s results in negative milliseconds value relative to epoch (January 1, 1970, 00:00:00 GMT).\",\n                        dateTime);\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    ((millis < 0) ? Project.MSG_DEBUG : Project.MSG_VERBOSE));\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","date":"2018-11-05 02:45:48","endLine":262,"groupId":"10518","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"checkConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/86/c573a6398048d76c64645ea28ac0dd848d226f.src","preCode":"    protected synchronized void checkConfiguration() throws BuildException {\n        if (file == null && resources == null) {\n            throw new BuildException(\n                \"Specify at least one source--a file or resource collection.\");\n        }\n        if (file != null && file.exists() && file.isDirectory()) {\n            throw new BuildException(\"Use a resource collection to touch directories.\");\n        }\n        if (dateTime != null && !dateTimeConfigured) {\n            long workmillis = millis;\n            if (\"now\".equalsIgnoreCase(dateTime)) {\n                workmillis = System.currentTimeMillis();\n            } else {\n                DateFormat df = dfFactory.getPrimaryFormat();\n                ParseException pe = null;\n                try {\n                    workmillis = df.parse(dateTime).getTime();\n                } catch (ParseException peOne) {\n                    df = dfFactory.getFallbackFormat();\n                    if (df == null) {\n                        pe = peOne;\n                    } else {\n                        try {\n                            workmillis = df.parse(dateTime).getTime();\n                        } catch (ParseException peTwo) {\n                            pe = peTwo;\n                        }\n                    }\n                }\n                if (pe != null) {\n                    throw new BuildException(pe.getMessage(), pe, getLocation());\n                }\n                if (workmillis < 0) {\n                    throw new BuildException(\n                        \"Date of %s results in negative milliseconds value relative to epoch (January 1, 1970, 00:00:00 GMT).\",\n                        dateTime);\n                }\n            }\n            log(\"Setting millis to \" + workmillis + \" from datetime attribute\",\n                    millis < 0 ? Project.MSG_DEBUG : Project.MSG_VERBOSE);\n            setMillis(workmillis);\n            \r\n            dateTimeConfigured = true;\n        }\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/Touch.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2017-04-13 23:15:22","commitOrder":11,"curCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (\"now\".equalsIgnoreCase(dateTime)) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        throw new BuildException(pe.getMessage(), pe, getLocation());\n    }\n","date":"2017-04-13 23:15:22","endLine":150,"groupId":"10518","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getMillis","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-ant-10-0.7/blobInfo/CC_OUT/blobs/51/471c822f59f79a6aec01d766b40833fadd88da.src","preCode":"    protected long getMillis() throws BuildException {\n        if (millis >= 0) {\n            return millis;\n        }\n        if (\"now\".equalsIgnoreCase(dateTime)) {\n            return System.currentTimeMillis();\n        }\n        DateFormat df = dfFactory.getPrimaryFormat();\n        ParseException pe;\n        try {\n            return df.parse(dateTime).getTime();\n        } catch (ParseException peOne) {\n            df = dfFactory.getFallbackFormat();\n            if (df == null) {\n                pe = peOne;\n            } else {\n                try {\n                    return df.parse(dateTime).getTime();\n                } catch (ParseException peTwo) {\n                    pe = peTwo;\n                }\n            }\n        }\n        throw new BuildException(pe.getMessage(), pe, getLocation());\n    }\n","realPath":"src/main/org/apache/tools/ant/taskdefs/condition/IsLastModified.java","repoName":"ant","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"N"}],"commitId":"551cb55e328281002810714a9059f34f0502c13d","commitMessage":"@@@Revert last 5 commits","date":"2018-11-05 02:45:48","modifiedFileCount":"103","status":"M","submitter":"Gintas Grigelionis"}]
