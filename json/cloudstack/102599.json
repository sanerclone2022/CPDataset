[{"authorTime":"2015-09-02 17:25:54","codes":[{"authorDate":"2015-09-02 17:25:54","commitOrder":1,"curCode":"    public void checkVolumeFileForActivitySmallFileTest() throws IOException {\n        System.out.print(\"Testing don't block on newly created clones - \");\n        String filePath = \"./testsmallfileinactive\";\n        int timeoutSeconds = 5;\n        long thresholdMilliseconds = 2000;\n        File file = new File(filePath);\n        setupcheckVolumeFileForActivityFile(file, 0);\n\n        long startTime = System.currentTimeMillis();\n        HypervisorUtils.checkVolumeFileForActivity(filePath, timeoutSeconds, thresholdMilliseconds, _minFileSize);\n        long endTime = System.currentTimeMillis();\n\n        Assert.assertEquals(startTime, endTime, 1000L);\n        System.out.println(\"pass\");\n\n        file.delete();\n    }\n","date":"2015-09-02 17:25:54","endLine":55,"groupId":"10455","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkVolumeFileForActivitySmallFileTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3b/13c6b9b7ddc6a819d990b6bba9a0c6345abe4a.src","preCode":"    public void checkVolumeFileForActivitySmallFileTest() throws IOException {\n        System.out.print(\"Testing don't block on newly created clones - \");\n        String filePath = \"./testsmallfileinactive\";\n        int timeoutSeconds = 5;\n        long thresholdMilliseconds = 2000;\n        File file = new File(filePath);\n        setupcheckVolumeFileForActivityFile(file, 0);\n\n        long startTime = System.currentTimeMillis();\n        HypervisorUtils.checkVolumeFileForActivity(filePath, timeoutSeconds, thresholdMilliseconds, _minFileSize);\n        long endTime = System.currentTimeMillis();\n\n        Assert.assertEquals(startTime, endTime, 1000L);\n        System.out.println(\"pass\");\n\n        file.delete();\n    }\n","realPath":"utils/src/test/java/org/apache/cloudstack/utils/hypervisor/HypervisorUtilsTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"},{"authorDate":"2015-09-02 17:25:54","commitOrder":1,"curCode":"    public void checkVolumeFileForActivityTimeoutTest() throws IOException {\n        System.out.print(\"Testing timeout of blocking on modified files - \");\n        String filePath = \"./testfileinactive\";\n        int timeoutSeconds = 3;\n        long thresholdMilliseconds = 5000;\n        File file = new File(filePath);\n        setupcheckVolumeFileForActivityFile(file, _minFileSize);\n\n        try {\n            HypervisorUtils.checkVolumeFileForActivity(filePath, timeoutSeconds, thresholdMilliseconds, _minFileSize);\n        } catch (CloudRuntimeException ex) {\n            System.out.println(\"pass\");\n            throw ex;\n        } finally {\n            file.delete();\n        }\n        System.out.println(\"Fail\");\n    }\n","date":"2015-09-02 17:25:54","endLine":94,"groupId":"8222","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkVolumeFileForActivityTimeoutTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3b/13c6b9b7ddc6a819d990b6bba9a0c6345abe4a.src","preCode":"    public void checkVolumeFileForActivityTimeoutTest() throws IOException {\n        System.out.print(\"Testing timeout of blocking on modified files - \");\n        String filePath = \"./testfileinactive\";\n        int timeoutSeconds = 3;\n        long thresholdMilliseconds = 5000;\n        File file = new File(filePath);\n        setupcheckVolumeFileForActivityFile(file, _minFileSize);\n\n        try {\n            HypervisorUtils.checkVolumeFileForActivity(filePath, timeoutSeconds, thresholdMilliseconds, _minFileSize);\n        } catch (CloudRuntimeException ex) {\n            System.out.println(\"pass\");\n            throw ex;\n        } finally {\n            file.delete();\n        }\n        System.out.println(\"Fail\");\n    }\n","realPath":"utils/src/test/java/org/apache/cloudstack/utils/hypervisor/HypervisorUtilsTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"dd9ba48efa0fceb842c707567606be28298c4488","commitMessage":"@@@Merge pull request #753 from shapeblue/master-CLOUDSTACK-8762\n\nCLOUDSTACK-8762: Check to confirm disk activity before starting a VMImplements a VM volume/disk file activity checker that checks if QCOW2 file\nhas been changed before starting the VM. This is useful as a pessimistic\napproach to save VMs that were running on faulty hosts that CloudStack could\ntry to launch on other hosts while the host was not cleanly fenced. This is\noptional and available only if you enable the settings in agent.properties\nfile.  on per-host basis.\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n\n* pr/753:\n  CLOUDSTACK-8762: Check to confirm disk activity before starting a VM\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2015-09-02 17:25:54","modifiedFileCount":"1","status":"B","submitter":"Rohit Yadav"},{"authorTime":"2015-09-02 17:25:54","codes":[{"authorDate":"2015-12-10 23:24:36","commitOrder":2,"curCode":"    public void checkVolumeFileForActivitySmallFileTest() throws IOException {\n        System.out.print(\"Testing don't block on newly created clones - \");\n        String filePath = \"./testsmallfileinactive\";\n        int timeoutSeconds = 5;\n        long thresholdMilliseconds = 2000;\n        File file = new File(filePath);\n\n        long startTime = setupcheckVolumeFileForActivityFile(file, 0);\n        HypervisorUtils.checkVolumeFileForActivity(filePath, timeoutSeconds, thresholdMilliseconds, _minFileSize);\n        long endTime = System.currentTimeMillis();\n\n        Assert.assertEquals(startTime, endTime, 1000L);\n        System.out.println(\"pass\");\n\n        file.delete();\n    }\n","date":"2015-12-10 23:24:36","endLine":54,"groupId":"102599","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkVolumeFileForActivitySmallFileTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/54/d002f8f8115ef8e8004b4225f14399b36cf329.src","preCode":"    public void checkVolumeFileForActivitySmallFileTest() throws IOException {\n        System.out.print(\"Testing don't block on newly created clones - \");\n        String filePath = \"./testsmallfileinactive\";\n        int timeoutSeconds = 5;\n        long thresholdMilliseconds = 2000;\n        File file = new File(filePath);\n        setupcheckVolumeFileForActivityFile(file, 0);\n\n        long startTime = System.currentTimeMillis();\n        HypervisorUtils.checkVolumeFileForActivity(filePath, timeoutSeconds, thresholdMilliseconds, _minFileSize);\n        long endTime = System.currentTimeMillis();\n\n        Assert.assertEquals(startTime, endTime, 1000L);\n        System.out.println(\"pass\");\n\n        file.delete();\n    }\n","realPath":"utils/src/test/java/org/apache/cloudstack/utils/hypervisor/HypervisorUtilsTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2015-09-02 17:25:54","commitOrder":2,"curCode":"    public void checkVolumeFileForActivityTimeoutTest() throws IOException {\n        System.out.print(\"Testing timeout of blocking on modified files - \");\n        String filePath = \"./testfileinactive\";\n        int timeoutSeconds = 3;\n        long thresholdMilliseconds = 5000;\n        File file = new File(filePath);\n        setupcheckVolumeFileForActivityFile(file, _minFileSize);\n\n        try {\n            HypervisorUtils.checkVolumeFileForActivity(filePath, timeoutSeconds, thresholdMilliseconds, _minFileSize);\n        } catch (CloudRuntimeException ex) {\n            System.out.println(\"pass\");\n            throw ex;\n        } finally {\n            file.delete();\n        }\n        System.out.println(\"Fail\");\n    }\n","date":"2015-09-02 17:25:54","endLine":94,"groupId":"102599","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkVolumeFileForActivityTimeoutTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3b/13c6b9b7ddc6a819d990b6bba9a0c6345abe4a.src","preCode":"    public void checkVolumeFileForActivityTimeoutTest() throws IOException {\n        System.out.print(\"Testing timeout of blocking on modified files - \");\n        String filePath = \"./testfileinactive\";\n        int timeoutSeconds = 3;\n        long thresholdMilliseconds = 5000;\n        File file = new File(filePath);\n        setupcheckVolumeFileForActivityFile(file, _minFileSize);\n\n        try {\n            HypervisorUtils.checkVolumeFileForActivity(filePath, timeoutSeconds, thresholdMilliseconds, _minFileSize);\n        } catch (CloudRuntimeException ex) {\n            System.out.println(\"pass\");\n            throw ex;\n        } finally {\n            file.delete();\n        }\n        System.out.println(\"Fail\");\n    }\n","realPath":"utils/src/test/java/org/apache/cloudstack/utils/hypervisor/HypervisorUtilsTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"N"}],"commitId":"312b9aff9490214c51cf6adf90661262c3670cd3","commitMessage":"@@@Merge release branch 4.6 to master\n\n* 4.6:\n  Adapted HypervisorUtilsTest to no longer give false positives\n","date":"2015-12-10 23:24:36","modifiedFileCount":"1","status":"M","submitter":"Remi Bergsma"}]
