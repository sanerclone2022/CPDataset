[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void checkDiskOfferingAccess(final Account caller, final DiskOffering dof) {\n        for (final SecurityChecker checker : _secChecker) {\n            if (checker.checkAccess(caller, dof)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to disk offering:\" + dof.getId() + \" by \" + checker.getName());\n                }\n                return;\n            } else {\n                throw new PermissionDeniedException(\"Access denied to \" + caller + \" by \" + checker.getName());\n            }\n        }\n\n        assert false : \"How can all of the security checkers pass on checking this caller?\";\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to disk offering:\" + dof.getId());\n    }\n","date":"2018-01-20 05:49:27","endLine":4153,"groupId":"23472","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkDiskOfferingAccess","params":"(finalAccountcaller@finalDiskOfferingdof)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/16/32da95f95466df841e198f84f058240ae8968b.src","preCode":"    public void checkDiskOfferingAccess(final Account caller, final DiskOffering dof) {\n        for (final SecurityChecker checker : _secChecker) {\n            if (checker.checkAccess(caller, dof)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to disk offering:\" + dof.getId() + \" by \" + checker.getName());\n                }\n                return;\n            } else {\n                throw new PermissionDeniedException(\"Access denied to \" + caller + \" by \" + checker.getName());\n            }\n        }\n\n        assert false : \"How can all of the security checkers pass on checking this caller?\";\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to disk offering:\" + dof.getId());\n    }\n","realPath":"server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":4139,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void checkZoneAccess(final Account caller, final DataCenter zone) {\n        for (final SecurityChecker checker : _secChecker) {\n            if (checker.checkAccess(caller, zone)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to zone:\" + zone.getId() + \" by \" + checker.getName());\n                }\n                return;\n            } else {\n                throw new PermissionDeniedException(\"Access denied to \" + caller + \" by \" + checker.getName() + \" for zone \" + zone.getId());\n            }\n        }\n\n        assert false : \"How can all of the security checkers pass on checking this caller?\";\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to zone:\" + zone.getId());\n    }\n","date":"2018-01-20 05:49:27","endLine":4170,"groupId":"20127","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkZoneAccess","params":"(finalAccountcaller@finalDataCenterzone)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/16/32da95f95466df841e198f84f058240ae8968b.src","preCode":"    public void checkZoneAccess(final Account caller, final DataCenter zone) {\n        for (final SecurityChecker checker : _secChecker) {\n            if (checker.checkAccess(caller, zone)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to zone:\" + zone.getId() + \" by \" + checker.getName());\n                }\n                return;\n            } else {\n                throw new PermissionDeniedException(\"Access denied to \" + caller + \" by \" + checker.getName() + \" for zone \" + zone.getId());\n            }\n        }\n\n        assert false : \"How can all of the security checkers pass on checking this caller?\";\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to zone:\" + zone.getId());\n    }\n","realPath":"server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":4156,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2019-07-16 17:25:35","commitOrder":2,"curCode":"    public void checkDiskOfferingAccess(final Account caller, final DiskOffering dof, DataCenter zone) {\n        for (final SecurityChecker checker : _secChecker) {\n            if (checker.checkAccess(caller, dof, zone)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to disk offering:\" + dof.getId() + \" by \" + checker.getName());\n                }\n                return;\n            } else {\n                throw new PermissionDeniedException(String.format(\"Access denied to %s for disk offering: %s, zone: %s by %s\", caller, dof.getUuid(), zone.getUuid(), checker.getName()));\n            }\n        }\n\n        assert false : \"How can all of the security checkers pass on checking this caller?\";\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to disk offering:\" + dof.getId());\n    }\n","date":"2019-07-16 17:25:35","endLine":4533,"groupId":"101907","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkDiskOfferingAccess","params":"(finalAccountcaller@finalDiskOfferingdof@DataCenterzone)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/bf/238b0a7255951e2e8502ab50894397ce10784e.src","preCode":"    public void checkDiskOfferingAccess(final Account caller, final DiskOffering dof) {\n        for (final SecurityChecker checker : _secChecker) {\n            if (checker.checkAccess(caller, dof)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to disk offering:\" + dof.getId() + \" by \" + checker.getName());\n                }\n                return;\n            } else {\n                throw new PermissionDeniedException(\"Access denied to \" + caller + \" by \" + checker.getName());\n            }\n        }\n\n        assert false : \"How can all of the security checkers pass on checking this caller?\";\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to disk offering:\" + dof.getId());\n    }\n","realPath":"server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":4519,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void checkZoneAccess(final Account caller, final DataCenter zone) {\n        for (final SecurityChecker checker : _secChecker) {\n            if (checker.checkAccess(caller, zone)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to zone:\" + zone.getId() + \" by \" + checker.getName());\n                }\n                return;\n            } else {\n                throw new PermissionDeniedException(\"Access denied to \" + caller + \" by \" + checker.getName() + \" for zone \" + zone.getId());\n            }\n        }\n\n        assert false : \"How can all of the security checkers pass on checking this caller?\";\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to zone:\" + zone.getId());\n    }\n","date":"2018-01-20 05:49:27","endLine":4170,"groupId":"101907","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkZoneAccess","params":"(finalAccountcaller@finalDataCenterzone)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/16/32da95f95466df841e198f84f058240ae8968b.src","preCode":"    public void checkZoneAccess(final Account caller, final DataCenter zone) {\n        for (final SecurityChecker checker : _secChecker) {\n            if (checker.checkAccess(caller, zone)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to zone:\" + zone.getId() + \" by \" + checker.getName());\n                }\n                return;\n            } else {\n                throw new PermissionDeniedException(\"Access denied to \" + caller + \" by \" + checker.getName() + \" for zone \" + zone.getId());\n            }\n        }\n\n        assert false : \"How can all of the security checkers pass on checking this caller?\";\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to zone:\" + zone.getId());\n    }\n","realPath":"server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":4156,"status":"N"}],"commitId":"e15c3112e4ff26bab341e8ca3127853b12764790","commitMessage":"@@@Merge pull request #3248 from shapeblue/storage-offering-domains-zones\n\nEnable service offerings to be scoped to domain(s) and zone(s) ","date":"2019-07-16 17:25:35","modifiedFileCount":"80","status":"M","submitter":"Paul Angus"}]
