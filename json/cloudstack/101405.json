[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void onClusterNodeJoined(Object sender, ClusterNodeJoinEventArgs args) {\n        if (s_logger.isDebugEnabled()) {\n            for (ManagementServerHostVO mshost : args.getJoinedNodes()) {\n                s_logger.debug(\"Handle cluster node join alert, joined node: \" + mshost.getServiceIP() + \", msidL: \" + mshost.getMsid());\n            }\n        }\n\n        for (ManagementServerHostVO mshost : args.getJoinedNodes()) {\n            if (mshost.getId() == args.getSelf().longValue()) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Management server node \" + mshost.getServiceIP() + \" is up, send alert\");\n                }\n\n                _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_MANAGMENT_NODE, 0, new Long(0), \"Management server node \" + mshost.getServiceIP() + \" is up\", \"\");\n                break;\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":77,"groupId":"13355","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onClusterNodeJoined","params":"(Objectsender@ClusterNodeJoinEventArgsargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2b/7b392c0bd058a479f7f63259f742840d33a156.src","preCode":"    private void onClusterNodeJoined(Object sender, ClusterNodeJoinEventArgs args) {\n        if (s_logger.isDebugEnabled()) {\n            for (ManagementServerHostVO mshost : args.getJoinedNodes()) {\n                s_logger.debug(\"Handle cluster node join alert, joined node: \" + mshost.getServiceIP() + \", msidL: \" + mshost.getMsid());\n            }\n        }\n\n        for (ManagementServerHostVO mshost : args.getJoinedNodes()) {\n            if (mshost.getId() == args.getSelf().longValue()) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Management server node \" + mshost.getServiceIP() + \" is up, send alert\");\n                }\n\n                _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_MANAGMENT_NODE, 0, new Long(0), \"Management server node \" + mshost.getServiceIP() + \" is up\", \"\");\n                break;\n            }\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/alert/ClusterAlertAdapter.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void onClusterNodeLeft(Object sender, ClusterNodeLeftEventArgs args) {\n\n        if (s_logger.isDebugEnabled()) {\n            for (ManagementServerHostVO mshost : args.getLeftNodes()) {\n                s_logger.debug(\"Handle cluster node left alert, leaving node: \" + mshost.getServiceIP() + \", msid: \" + mshost.getMsid());\n            }\n        }\n\n        for (ManagementServerHostVO mshost : args.getLeftNodes()) {\n            if (mshost.getId() != args.getSelf().longValue()) {\n                if (_mshostDao.increaseAlertCount(mshost.getId()) > 0) {\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Detected management server node \" + mshost.getServiceIP() + \" is down, send alert\");\n                    }\n                    _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_MANAGMENT_NODE, 0, new Long(0), \"Management server node \" + mshost.getServiceIP() + \" is down\",\n                        \"\");\n                } else {\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Detected management server node \" + mshost.getServiceIP() + \" is down, but alert has already been set\");\n                    }\n                }\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":102,"groupId":"5461","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onClusterNodeLeft","params":"(Objectsender@ClusterNodeLeftEventArgsargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2b/7b392c0bd058a479f7f63259f742840d33a156.src","preCode":"    private void onClusterNodeLeft(Object sender, ClusterNodeLeftEventArgs args) {\n\n        if (s_logger.isDebugEnabled()) {\n            for (ManagementServerHostVO mshost : args.getLeftNodes()) {\n                s_logger.debug(\"Handle cluster node left alert, leaving node: \" + mshost.getServiceIP() + \", msid: \" + mshost.getMsid());\n            }\n        }\n\n        for (ManagementServerHostVO mshost : args.getLeftNodes()) {\n            if (mshost.getId() != args.getSelf().longValue()) {\n                if (_mshostDao.increaseAlertCount(mshost.getId()) > 0) {\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Detected management server node \" + mshost.getServiceIP() + \" is down, send alert\");\n                    }\n                    _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_MANAGMENT_NODE, 0, new Long(0), \"Management server node \" + mshost.getServiceIP() + \" is down\",\n                        \"\");\n                } else {\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Detected management server node \" + mshost.getServiceIP() + \" is down, but alert has already been set\");\n                    }\n                }\n            }\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/alert/ClusterAlertAdapter.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-08-13 18:25:16","commitOrder":2,"curCode":"    private void onClusterNodeJoined(Object sender, ClusterNodeJoinEventArgs args) {\n        if (s_logger.isDebugEnabled()) {\n            for (ManagementServerHostVO mshost : args.getJoinedNodes()) {\n                s_logger.debug(\"Handle cluster node join alert, joined node: \" + mshost.getServiceIP() + \", msid: \" + mshost.getMsid());\n            }\n        }\n\n        for (ManagementServerHostVO mshost : args.getJoinedNodes()) {\n            if (mshost.getId() == args.getSelf().longValue()) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Management server node \" + mshost.getServiceIP() + \" is up, send alert\");\n                }\n\n                _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_MANAGMENT_NODE, 0, new Long(0), \"Management server node \" + mshost.getServiceIP() + \" is up\", \"\");\n                break;\n            }\n        }\n    }\n","date":"2020-08-13 18:25:16","endLine":77,"groupId":"101405","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"onClusterNodeJoined","params":"(Objectsender@ClusterNodeJoinEventArgsargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/16/e87b40bd83147cac873ca2129a182f589ad85d.src","preCode":"    private void onClusterNodeJoined(Object sender, ClusterNodeJoinEventArgs args) {\n        if (s_logger.isDebugEnabled()) {\n            for (ManagementServerHostVO mshost : args.getJoinedNodes()) {\n                s_logger.debug(\"Handle cluster node join alert, joined node: \" + mshost.getServiceIP() + \", msidL: \" + mshost.getMsid());\n            }\n        }\n\n        for (ManagementServerHostVO mshost : args.getJoinedNodes()) {\n            if (mshost.getId() == args.getSelf().longValue()) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Management server node \" + mshost.getServiceIP() + \" is up, send alert\");\n                }\n\n                _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_MANAGMENT_NODE, 0, new Long(0), \"Management server node \" + mshost.getServiceIP() + \" is up\", \"\");\n                break;\n            }\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/alert/ClusterAlertAdapter.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private void onClusterNodeLeft(Object sender, ClusterNodeLeftEventArgs args) {\n\n        if (s_logger.isDebugEnabled()) {\n            for (ManagementServerHostVO mshost : args.getLeftNodes()) {\n                s_logger.debug(\"Handle cluster node left alert, leaving node: \" + mshost.getServiceIP() + \", msid: \" + mshost.getMsid());\n            }\n        }\n\n        for (ManagementServerHostVO mshost : args.getLeftNodes()) {\n            if (mshost.getId() != args.getSelf().longValue()) {\n                if (_mshostDao.increaseAlertCount(mshost.getId()) > 0) {\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Detected management server node \" + mshost.getServiceIP() + \" is down, send alert\");\n                    }\n                    _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_MANAGMENT_NODE, 0, new Long(0), \"Management server node \" + mshost.getServiceIP() + \" is down\",\n                        \"\");\n                } else {\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Detected management server node \" + mshost.getServiceIP() + \" is down, but alert has already been set\");\n                    }\n                }\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":102,"groupId":"101405","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onClusterNodeLeft","params":"(Objectsender@ClusterNodeLeftEventArgsargs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2b/7b392c0bd058a479f7f63259f742840d33a156.src","preCode":"    private void onClusterNodeLeft(Object sender, ClusterNodeLeftEventArgs args) {\n\n        if (s_logger.isDebugEnabled()) {\n            for (ManagementServerHostVO mshost : args.getLeftNodes()) {\n                s_logger.debug(\"Handle cluster node left alert, leaving node: \" + mshost.getServiceIP() + \", msid: \" + mshost.getMsid());\n            }\n        }\n\n        for (ManagementServerHostVO mshost : args.getLeftNodes()) {\n            if (mshost.getId() != args.getSelf().longValue()) {\n                if (_mshostDao.increaseAlertCount(mshost.getId()) > 0) {\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Detected management server node \" + mshost.getServiceIP() + \" is down, send alert\");\n                    }\n                    _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_MANAGMENT_NODE, 0, new Long(0), \"Management server node \" + mshost.getServiceIP() + \" is down\",\n                        \"\");\n                } else {\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Detected management server node \" + mshost.getServiceIP() + \" is down, but alert has already been set\");\n                    }\n                }\n            }\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/alert/ClusterAlertAdapter.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"}],"commitId":"b586eb22f1b31f3cab2f2cb1aaeafca4f4646abd","commitMessage":"@@@Human readable sizes in logs (#4207)\n\nThis PR adds outputting human readable byte sizes in the management server logs.  agent logs.  and usage records. A non-dynamic global variable is added (display.human.readable.sizes) to control switching this feature on and off. This setting is sent to the agent on connection and is only read from the database when the management server is started up. The setting is kept in memory by the use of a static field on the NumbersUtil class and is available throughout the codebase.\n\nInstead of seeing things like:\n2020-07-23 15:31:58. 593 DEBUG [c.c.a.t.Request] (AgentManager-Handler-12:null) (logid:) Seq 8-1863645820801253428: Processing: { Ans: .  MgmtId: 52238089807.  via: 8.  Ver: v1.  Flags: 10.  [{\"com.cloud.agent.api.NetworkUsageAnswer\":{\"routerName\":\"r-224-VM\". \"bytesSent\":\"106496\". \"bytesReceived\":\"0\". \"result\":\"true\". \"details\":\"\". \"wait\":\"0\". }}] }\n\nThe KB MB and GB values will be printed out:\n\n2020-07-23 15:31:58. 593 DEBUG [c.c.a.t.Request] (AgentManager-Handler-12:null) (logid:) Seq 8-1863645820801253428: Processing: { Ans: .  MgmtId: 52238089807.  via: 8.  Ver: v1.  Flags: 10.  [{\"com.cloud.agent.api.NetworkUsageAnswer\":{\"routerName\":\"r-224-VM\". \"bytesSent\":\"(104.00 KB) 106496\". \"bytesReceived\":\"(0 bytes) 0\". \"result\":\"true\". \"details\":\"\". \"wait\":\"0\". }}] }\n\nFS: https://cwiki.apache.org/confluence/display/CLOUDSTACK/Human+Readable+Byte+sizes","date":"2020-08-13 18:25:16","modifiedFileCount":"55","status":"M","submitter":"Spaceman1984"}]
