[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public static String getDeviceBusName(List<VirtualDevice> allDevices, VirtualDisk disk) throws Exception {\n        for (VirtualDevice device : allDevices) {\n            if (device.getKey() == disk.getControllerKey()) {\n                if (device instanceof VirtualIDEController) {\n                    return String.format(\"ide%d:%d\", ((VirtualIDEController)device).getBusNumber(), disk.getUnitNumber());\n                } else if (device instanceof VirtualSCSIController) {\n                    return String.format(\"scsi%d:%d\", ((VirtualSCSIController)device).getBusNumber(), disk.getUnitNumber());\n                } else {\n                    throw new Exception(\"The device controller is not supported.\");\n                }\n            }\n        }\n\n        throw new Exception(\"The device controller could not be located.\");\n    }\n","date":"2018-01-20 05:49:27","endLine":303,"groupId":"593","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"getDeviceBusName","params":"(List<VirtualDevice>allDevices@VirtualDiskdisk)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/20/9945fa4714807a700aca9e0b0b301f530f712c.src","preCode":"    public static String getDeviceBusName(List<VirtualDevice> allDevices, VirtualDisk disk) throws Exception {\n        for (VirtualDevice device : allDevices) {\n            if (device.getKey() == disk.getControllerKey()) {\n                if (device instanceof VirtualIDEController) {\n                    return String.format(\"ide%d:%d\", ((VirtualIDEController)device).getBusNumber(), disk.getUnitNumber());\n                } else if (device instanceof VirtualSCSIController) {\n                    return String.format(\"scsi%d:%d\", ((VirtualSCSIController)device).getBusNumber(), disk.getUnitNumber());\n                } else {\n                    throw new Exception(\"The device controller is not supported.\");\n                }\n            }\n        }\n\n        throw new Exception(\"The device controller could not be located.\");\n    }\n","realPath":"plugins/api/vmware-sioc/src/main/java/org/apache/cloudstack/util/vmware/VMwareUtil.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private String getDeviceBusName(List<VirtualDevice> allDevices, VirtualDevice theDevice) throws Exception {\n        for (VirtualDevice device : allDevices) {\n            if (device.getKey() == theDevice.getControllerKey().intValue()) {\n                if (device instanceof VirtualIDEController) {\n                    return String.format(\"ide%d:%d\", ((VirtualIDEController)device).getBusNumber(), theDevice.getUnitNumber());\n                } else if (device instanceof VirtualSCSIController) {\n                    return String.format(\"scsi%d:%d\", ((VirtualSCSIController)device).getBusNumber(), theDevice.getUnitNumber());\n                } else {\n                    throw new Exception(\"Device controller is not supported yet\");\n                }\n            }\n        }\n        throw new Exception(\"Unable to find device controller\");\n    }\n","date":"2018-01-20 05:49:27","endLine":2675,"groupId":"593","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getDeviceBusName","params":"(List<VirtualDevice>allDevices@VirtualDevicetheDevice)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/00/78793df8d00859a1254d621bc57968df6886ce.src","preCode":"    private String getDeviceBusName(List<VirtualDevice> allDevices, VirtualDevice theDevice) throws Exception {\n        for (VirtualDevice device : allDevices) {\n            if (device.getKey() == theDevice.getControllerKey().intValue()) {\n                if (device instanceof VirtualIDEController) {\n                    return String.format(\"ide%d:%d\", ((VirtualIDEController)device).getBusNumber(), theDevice.getUnitNumber());\n                } else if (device instanceof VirtualSCSIController) {\n                    return String.format(\"scsi%d:%d\", ((VirtualSCSIController)device).getBusNumber(), theDevice.getUnitNumber());\n                } else {\n                    throw new Exception(\"Device controller is not supported yet\");\n                }\n            }\n        }\n        throw new Exception(\"Unable to find device controller\");\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2662,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2019-06-27 11:48:10","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public static String getDeviceBusName(List<VirtualDevice> allDevices, VirtualDisk disk) throws Exception {\n        for (VirtualDevice device : allDevices) {\n            if (device.getKey() == disk.getControllerKey()) {\n                if (device instanceof VirtualIDEController) {\n                    return String.format(\"ide%d:%d\", ((VirtualIDEController)device).getBusNumber(), disk.getUnitNumber());\n                } else if (device instanceof VirtualSCSIController) {\n                    return String.format(\"scsi%d:%d\", ((VirtualSCSIController)device).getBusNumber(), disk.getUnitNumber());\n                } else {\n                    throw new Exception(\"The device controller is not supported.\");\n                }\n            }\n        }\n\n        throw new Exception(\"The device controller could not be located.\");\n    }\n","date":"2018-01-20 05:49:27","endLine":303,"groupId":"103422","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getDeviceBusName","params":"(List<VirtualDevice>allDevices@VirtualDiskdisk)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/20/9945fa4714807a700aca9e0b0b301f530f712c.src","preCode":"    public static String getDeviceBusName(List<VirtualDevice> allDevices, VirtualDisk disk) throws Exception {\n        for (VirtualDevice device : allDevices) {\n            if (device.getKey() == disk.getControllerKey()) {\n                if (device instanceof VirtualIDEController) {\n                    return String.format(\"ide%d:%d\", ((VirtualIDEController)device).getBusNumber(), disk.getUnitNumber());\n                } else if (device instanceof VirtualSCSIController) {\n                    return String.format(\"scsi%d:%d\", ((VirtualSCSIController)device).getBusNumber(), disk.getUnitNumber());\n                } else {\n                    throw new Exception(\"The device controller is not supported.\");\n                }\n            }\n        }\n\n        throw new Exception(\"The device controller could not be located.\");\n    }\n","realPath":"plugins/api/vmware-sioc/src/main/java/org/apache/cloudstack/util/vmware/VMwareUtil.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"N"},{"authorDate":"2019-06-27 11:48:10","commitOrder":2,"curCode":"    public String getDeviceBusName(List<VirtualDevice> allDevices, VirtualDevice theDevice) throws Exception {\n        for (VirtualDevice device : allDevices) {\n            if (device.getKey() == theDevice.getControllerKey().intValue()) {\n                if (device instanceof VirtualIDEController) {\n                    return String.format(\"ide%d:%d\", ((VirtualIDEController)device).getBusNumber(), theDevice.getUnitNumber());\n                } else if (device instanceof VirtualSCSIController) {\n                    return String.format(\"scsi%d:%d\", ((VirtualSCSIController)device).getBusNumber(), theDevice.getUnitNumber());\n                } else {\n                    throw new Exception(\"Device controller is not supported yet\");\n                }\n            }\n        }\n        throw new Exception(\"Unable to find device controller\");\n    }\n","date":"2019-06-27 11:48:10","endLine":2725,"groupId":"103422","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getDeviceBusName","params":"(List<VirtualDevice>allDevices@VirtualDevicetheDevice)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/6a/42f7f9aeaeb8c514091ee8f5c18035dace7b30.src","preCode":"    private String getDeviceBusName(List<VirtualDevice> allDevices, VirtualDevice theDevice) throws Exception {\n        for (VirtualDevice device : allDevices) {\n            if (device.getKey() == theDevice.getControllerKey().intValue()) {\n                if (device instanceof VirtualIDEController) {\n                    return String.format(\"ide%d:%d\", ((VirtualIDEController)device).getBusNumber(), theDevice.getUnitNumber());\n                } else if (device instanceof VirtualSCSIController) {\n                    return String.format(\"scsi%d:%d\", ((VirtualSCSIController)device).getBusNumber(), theDevice.getUnitNumber());\n                } else {\n                    throw new Exception(\"Device controller is not supported yet\");\n                }\n            }\n        }\n        throw new Exception(\"Unable to find device controller\");\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2712,"status":"M"}],"commitId":"14bff7bd034a5697c50a6755c420f121d8a58754","commitMessage":"@@@server: export granular volume bytes and iops metrics (#3259)\n\nProblem: The VM metrics has aggregated volume bytes read/write and iops metrics but not on per volume basis.\nRoot Cause: The volume stats sub-system is not used to export the metrics.  the support is not available for VMware.\nSolution: Use the volume stats sub-system and DB table to export the metrics via the listVolumes and listVolumeMetrics API.  and implement support for VMware and fix issue with network and disk metrics in the VM metrics view.\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2019-06-27 11:48:10","modifiedFileCount":"13","status":"M","submitter":"Rohit Yadav"}]
