[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testQuotaBalanceCmd() throws NoSuchFieldException, IllegalAccessException {\n        QuotaBalanceCmd cmd = new QuotaBalanceCmd();\n        Field rbField = QuotaBalanceCmd.class.getDeclaredField(\"_responseBuilder\");\n        rbField.setAccessible(true);\n        rbField.set(cmd, responseBuilder);\n\n        List<QuotaBalanceVO> quotaBalanceVOList = new ArrayList<QuotaBalanceVO>();\n        Mockito.when(responseBuilder.getQuotaBalance(Mockito.any(cmd.getClass()))).thenReturn(quotaBalanceVOList);\n        Mockito.when(responseBuilder.createQuotaLastBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class))).thenReturn(new QuotaBalanceResponse());\n        Mockito.when(responseBuilder.createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class))).thenReturn(new QuotaBalanceResponse());\n        Mockito.when(responseBuilder.startOfNextDay(Mockito.any(Date.class))).thenReturn(new Date());\n\n        \r\n        cmd.setStartDate(new Date());\n        cmd.setEndDate(null);\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).createQuotaLastBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class));\n        Mockito.verify(responseBuilder, Mockito.times(0)).createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class));\n\n        \r\n        cmd.setEndDate(new Date());\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class));\n    }\n","date":"2018-01-20 05:49:27","endLine":64,"groupId":"8023","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQuotaBalanceCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/43/69a8c9f0cd9f32d696c8adae37635a9c32271d.src","preCode":"    public void testQuotaBalanceCmd() throws NoSuchFieldException, IllegalAccessException {\n        QuotaBalanceCmd cmd = new QuotaBalanceCmd();\n        Field rbField = QuotaBalanceCmd.class.getDeclaredField(\"_responseBuilder\");\n        rbField.setAccessible(true);\n        rbField.set(cmd, responseBuilder);\n\n        List<QuotaBalanceVO> quotaBalanceVOList = new ArrayList<QuotaBalanceVO>();\n        Mockito.when(responseBuilder.getQuotaBalance(Mockito.any(cmd.getClass()))).thenReturn(quotaBalanceVOList);\n        Mockito.when(responseBuilder.createQuotaLastBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class))).thenReturn(new QuotaBalanceResponse());\n        Mockito.when(responseBuilder.createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class))).thenReturn(new QuotaBalanceResponse());\n        Mockito.when(responseBuilder.startOfNextDay(Mockito.any(Date.class))).thenReturn(new Date());\n\n        \r\n        cmd.setStartDate(new Date());\n        cmd.setEndDate(null);\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).createQuotaLastBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class));\n        Mockito.verify(responseBuilder, Mockito.times(0)).createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class));\n\n        \r\n        cmd.setEndDate(new Date());\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class));\n    }\n","realPath":"plugins/database/quota/src/test/java/org/apache/cloudstack/api/command/QuotaBalanceCmdTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testQuotaStatementCmd() throws NoSuchFieldException, IllegalAccessException {\n        QuotaStatementCmd cmd = new QuotaStatementCmd();\n        cmd.setAccountName(\"admin\");\n\n        Field rbField = QuotaStatementCmd.class.getDeclaredField(\"_responseBuilder\");\n        rbField.setAccessible(true);\n        rbField.set(cmd, responseBuilder);\n\n        List<QuotaUsageVO> quotaUsageVOList = new ArrayList<QuotaUsageVO>();\n        Mockito.when(responseBuilder.getQuotaUsage(Mockito.eq(cmd))).thenReturn(quotaUsageVOList);\n        Mockito.when(responseBuilder.createQuotaStatementResponse(Mockito.eq(quotaUsageVOList))).thenReturn(new QuotaStatementResponse());\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).getQuotaUsage(Mockito.eq(cmd));\n    }\n","date":"2018-01-20 05:49:27","endLine":52,"groupId":"8023","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"testQuotaStatementCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/04/92ae84b8df6827d08062f59055c9601c244853.src","preCode":"    public void testQuotaStatementCmd() throws NoSuchFieldException, IllegalAccessException {\n        QuotaStatementCmd cmd = new QuotaStatementCmd();\n        cmd.setAccountName(\"admin\");\n\n        Field rbField = QuotaStatementCmd.class.getDeclaredField(\"_responseBuilder\");\n        rbField.setAccessible(true);\n        rbField.set(cmd, responseBuilder);\n\n        List<QuotaUsageVO> quotaUsageVOList = new ArrayList<QuotaUsageVO>();\n        Mockito.when(responseBuilder.getQuotaUsage(Mockito.eq(cmd))).thenReturn(quotaUsageVOList);\n        Mockito.when(responseBuilder.createQuotaStatementResponse(Mockito.eq(quotaUsageVOList))).thenReturn(new QuotaStatementResponse());\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).getQuotaUsage(Mockito.eq(cmd));\n    }\n","realPath":"plugins/database/quota/src/test/java/org/apache/cloudstack/api/command/QuotaStatementCmdTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void testQuotaBalanceCmd() throws NoSuchFieldException, IllegalAccessException {\n        QuotaBalanceCmd cmd = new QuotaBalanceCmd();\n        Field rbField = QuotaBalanceCmd.class.getDeclaredField(\"_responseBuilder\");\n        rbField.setAccessible(true);\n        rbField.set(cmd, responseBuilder);\n\n        List<QuotaBalanceVO> quotaBalanceVOList = new ArrayList<QuotaBalanceVO>();\n        Mockito.when(responseBuilder.getQuotaBalance(Mockito.any(cmd.getClass()))).thenReturn(quotaBalanceVOList);\n        Mockito.when(responseBuilder.createQuotaLastBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class))).thenReturn(new QuotaBalanceResponse());\n        Mockito.when(responseBuilder.createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class))).thenReturn(new QuotaBalanceResponse());\n        Mockito.lenient().when(responseBuilder.startOfNextDay(Mockito.any(Date.class))).thenReturn(new Date());\n\n        \r\n        cmd.setStartDate(new Date());\n        cmd.setEndDate(null);\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).createQuotaLastBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class));\n        Mockito.verify(responseBuilder, Mockito.times(0)).createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class));\n\n        \r\n        cmd.setEndDate(new Date());\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class));\n    }\n","date":"2020-02-12 15:28:25","endLine":65,"groupId":"102742","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testQuotaBalanceCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/07/181c12cef58ae4f64755402af3a12b93f6bf0d.src","preCode":"    public void testQuotaBalanceCmd() throws NoSuchFieldException, IllegalAccessException {\n        QuotaBalanceCmd cmd = new QuotaBalanceCmd();\n        Field rbField = QuotaBalanceCmd.class.getDeclaredField(\"_responseBuilder\");\n        rbField.setAccessible(true);\n        rbField.set(cmd, responseBuilder);\n\n        List<QuotaBalanceVO> quotaBalanceVOList = new ArrayList<QuotaBalanceVO>();\n        Mockito.when(responseBuilder.getQuotaBalance(Mockito.any(cmd.getClass()))).thenReturn(quotaBalanceVOList);\n        Mockito.when(responseBuilder.createQuotaLastBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class))).thenReturn(new QuotaBalanceResponse());\n        Mockito.when(responseBuilder.createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class))).thenReturn(new QuotaBalanceResponse());\n        Mockito.when(responseBuilder.startOfNextDay(Mockito.any(Date.class))).thenReturn(new Date());\n\n        \r\n        cmd.setStartDate(new Date());\n        cmd.setEndDate(null);\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).createQuotaLastBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class));\n        Mockito.verify(responseBuilder, Mockito.times(0)).createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class));\n\n        \r\n        cmd.setEndDate(new Date());\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).createQuotaBalanceResponse(Mockito.eq(quotaBalanceVOList), Mockito.any(Date.class), Mockito.any(Date.class));\n    }\n","realPath":"plugins/database/quota/src/test/java/org/apache/cloudstack/api/command/QuotaBalanceCmdTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void testQuotaStatementCmd() throws NoSuchFieldException, IllegalAccessException {\n        QuotaStatementCmd cmd = new QuotaStatementCmd();\n        cmd.setAccountName(\"admin\");\n\n        Field rbField = QuotaStatementCmd.class.getDeclaredField(\"_responseBuilder\");\n        rbField.setAccessible(true);\n        rbField.set(cmd, responseBuilder);\n\n        List<QuotaUsageVO> quotaUsageVOList = new ArrayList<QuotaUsageVO>();\n        Mockito.when(responseBuilder.getQuotaUsage(Mockito.eq(cmd))).thenReturn(quotaUsageVOList);\n        Mockito.when(responseBuilder.createQuotaStatementResponse(Mockito.eq(quotaUsageVOList))).thenReturn(new QuotaStatementResponse());\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).getQuotaUsage(Mockito.eq(cmd));\n    }\n","date":"2018-01-20 05:49:27","endLine":52,"groupId":"102742","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testQuotaStatementCmd","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/04/92ae84b8df6827d08062f59055c9601c244853.src","preCode":"    public void testQuotaStatementCmd() throws NoSuchFieldException, IllegalAccessException {\n        QuotaStatementCmd cmd = new QuotaStatementCmd();\n        cmd.setAccountName(\"admin\");\n\n        Field rbField = QuotaStatementCmd.class.getDeclaredField(\"_responseBuilder\");\n        rbField.setAccessible(true);\n        rbField.set(cmd, responseBuilder);\n\n        List<QuotaUsageVO> quotaUsageVOList = new ArrayList<QuotaUsageVO>();\n        Mockito.when(responseBuilder.getQuotaUsage(Mockito.eq(cmd))).thenReturn(quotaUsageVOList);\n        Mockito.when(responseBuilder.createQuotaStatementResponse(Mockito.eq(quotaUsageVOList))).thenReturn(new QuotaStatementResponse());\n        cmd.execute();\n        Mockito.verify(responseBuilder, Mockito.times(1)).getQuotaUsage(Mockito.eq(cmd));\n    }\n","realPath":"plugins/database/quota/src/test/java/org/apache/cloudstack/api/command/QuotaStatementCmdTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"N"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
