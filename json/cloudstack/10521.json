[{"authorTime":"2018-09-11 07:09:26","codes":[{"authorDate":"2018-09-11 07:09:26","commitOrder":1,"curCode":"    public void isStorageCrossClusterMigrationTestStorageTypeEqualsCluster() {\n        Mockito.doReturn(1L).when(hostMock).getClusterId();\n        Mockito.doReturn(2L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(hostMock, storagePoolVoMock);\n\n        Assert.assertTrue(returnedValue);\n    }\n","date":"2018-09-11 07:09:26","endLine":235,"groupId":"14317","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"isStorageCrossClusterMigrationTestStorageTypeEqualsCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c4/844ac82d067a4b5a1a5830346d6b29ebaca97a.src","preCode":"    public void isStorageCrossClusterMigrationTestStorageTypeEqualsCluster() {\n        Mockito.doReturn(1L).when(hostMock).getClusterId();\n        Mockito.doReturn(2L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(hostMock, storagePoolVoMock);\n\n        Assert.assertTrue(returnedValue);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"B"},{"authorDate":"2018-09-11 07:09:26","commitOrder":1,"curCode":"    public void isStorageCrossClusterMigrationTestStorageSameCluster() {\n        Mockito.doReturn(1L).when(hostMock).getClusterId();\n        Mockito.doReturn(1L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(hostMock, storagePoolVoMock);\n\n        Assert.assertFalse(returnedValue);\n    }\n","date":"2018-09-11 07:09:26","endLine":246,"groupId":"14317","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"isStorageCrossClusterMigrationTestStorageSameCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c4/844ac82d067a4b5a1a5830346d6b29ebaca97a.src","preCode":"    public void isStorageCrossClusterMigrationTestStorageSameCluster() {\n        Mockito.doReturn(1L).when(hostMock).getClusterId();\n        Mockito.doReturn(1L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(hostMock, storagePoolVoMock);\n\n        Assert.assertFalse(returnedValue);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"B"}],"commitId":"f550d703053fb3ccf9df739cee31ab823d132f3a","commitMessage":"@@@Add managed storage pool constraints to MigrateWithVolume API method (#2761)\n\n* Add managed storage pool constraints to MigrateWithVolume API method\n\n* Apply mike's suggestions\n\n* Apply Mike's suggestion in a second review\n\n* Mike's suggestions\n\n* Confused bit\n\n* just executeManagedStorageChecks\n\n* Created methods `executeManagedStorageChecksWhenTargetStoragePoolNotProvided` and `executeManagedStorageChecksWhenTargetStoragePoolProvided`\n\n* improve \"executeManagedStorageChecksWhenTargetStoragePoolNotProvided\"\n\n* Fix \"findVolumesThatWereNotMappedByTheUser\" method\n\n* Applu Mike's suggestion to improve \"createMappingVolumeAndStoragePool\" method\n\n* Unit tests to cover modified code\n","date":"2018-09-11 07:09:26","modifiedFileCount":"2","status":"B","submitter":"Rafael Weing?rtner"},{"authorTime":"2019-01-25 20:05:13","codes":[{"authorDate":"2018-09-11 07:09:26","commitOrder":2,"curCode":"    public void isStorageCrossClusterMigrationTestStorageTypeEqualsCluster() {\n        Mockito.doReturn(1L).when(hostMock).getClusterId();\n        Mockito.doReturn(2L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(hostMock, storagePoolVoMock);\n\n        Assert.assertTrue(returnedValue);\n    }\n","date":"2018-09-11 07:09:26","endLine":235,"groupId":"14317","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"isStorageCrossClusterMigrationTestStorageTypeEqualsCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c4/844ac82d067a4b5a1a5830346d6b29ebaca97a.src","preCode":"    public void isStorageCrossClusterMigrationTestStorageTypeEqualsCluster() {\n        Mockito.doReturn(1L).when(hostMock).getClusterId();\n        Mockito.doReturn(2L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(hostMock, storagePoolVoMock);\n\n        Assert.assertTrue(returnedValue);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"N"},{"authorDate":"2019-01-25 20:05:13","commitOrder":2,"curCode":"    public void isStorageCrossClusterMigrationTestStorageSameCluster() {\n        Mockito.doReturn(1L).when(hostMock).getClusterId();\n        Mockito.doReturn(1L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(hostMock, storagePoolVoMock);\n\n        assertFalse(returnedValue);\n    }\n","date":"2019-01-25 20:05:13","endLine":248,"groupId":"14317","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"isStorageCrossClusterMigrationTestStorageSameCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0e/7579ea5fd3782c101e59841b92df8987dddde4.src","preCode":"    public void isStorageCrossClusterMigrationTestStorageSameCluster() {\n        Mockito.doReturn(1L).when(hostMock).getClusterId();\n        Mockito.doReturn(1L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(hostMock, storagePoolVoMock);\n\n        Assert.assertFalse(returnedValue);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"}],"commitId":"b363fd49f70ac2092ebe6226a72a3d911dc99e1f","commitMessage":"@@@Vmware offline migration (#2848)\n\n* - Offline VM and Volume migration on Vmware hypervisor hosts\n- Also add VM disk consolidation call on successful VM migrations\n\n* Fix indentation of marvin test file and reformat against PEP8\n\n* * Fix few comment typos\n* Refactor debug messages to use String.format() when debug log level is enabled.\n\n* Send list of commands returned by hypervisor Guru instead of explicitly selecting the first one\n\n* Fix unhandled NPE during VM migration\n\n* Revert back to distinct event descriptions for VM to host or storage pool migration\n\n* Reformat test_primary_storage file against PEP-8 and Remove unused imports\n\n* Revert back the deprecation messages in the custom StringUtils class to favour the use of the ApacheUtils\n","date":"2019-01-25 20:05:13","modifiedFileCount":"35","status":"M","submitter":"dahn"},{"authorTime":"2021-02-12 15:11:41","codes":[{"authorDate":"2021-02-12 15:11:41","commitOrder":3,"curCode":"    public void isStorageCrossClusterMigrationTestStorageTypeEqualsCluster() {\n        Mockito.doReturn(2L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(1L, storagePoolVoMock);\n\n        Assert.assertTrue(returnedValue);\n    }\n","date":"2021-02-12 15:11:41","endLine":240,"groupId":"10521","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"isStorageCrossClusterMigrationTestStorageTypeEqualsCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d2/d5fc89819e9b8bdc8b51aac01b8aff0efb33ea.src","preCode":"    public void isStorageCrossClusterMigrationTestStorageTypeEqualsCluster() {\n        Mockito.doReturn(1L).when(hostMock).getClusterId();\n        Mockito.doReturn(2L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(hostMock, storagePoolVoMock);\n\n        Assert.assertTrue(returnedValue);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"},{"authorDate":"2021-02-12 15:11:41","commitOrder":3,"curCode":"    public void isStorageCrossClusterMigrationTestStorageSameCluster() {\n        Mockito.doReturn(1L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(1L, storagePoolVoMock);\n\n        assertFalse(returnedValue);\n    }\n","date":"2021-02-12 15:11:41","endLine":250,"groupId":"10521","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"isStorageCrossClusterMigrationTestStorageSameCluster","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d2/d5fc89819e9b8bdc8b51aac01b8aff0efb33ea.src","preCode":"    public void isStorageCrossClusterMigrationTestStorageSameCluster() {\n        Mockito.doReturn(1L).when(hostMock).getClusterId();\n        Mockito.doReturn(1L).when(storagePoolVoMock).getClusterId();\n        Mockito.doReturn(ScopeType.CLUSTER).when(storagePoolVoMock).getScope();\n\n        boolean returnedValue = virtualMachineManagerImpl.isStorageCrossClusterMigration(hostMock, storagePoolVoMock);\n\n        assertFalse(returnedValue);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"M"}],"commitId":"d6e8b53736d92363d0f8689997259769356122de","commitMessage":"@@@vmware: vm migration improvements (#4385)\n\n- Fixes inter-cluster migration of VMs\n- Allows migration of stopped VM with disks attached to different and suitable pools\n- Improves inter-cluster detached volume migration\n- Allows inter-cluster migration (clusters of same Pod) for system VMs.  VRs on VMware\n- Allows storage migration for stopped system VMs.  VRs on VMware within same Pod if StoragePool cluster scopetype\n\nLinked Primate PR: https://github.com/apache/cloudstack-primate/pull/789 [Changes merged in this PR after new UI merge]\nDocumentation PR: https://github.com/apache/cloudstack-documentation/pull/170\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>","date":"2021-02-12 15:11:41","modifiedFileCount":"26","status":"M","submitter":"Abhishek Kumar"}]
