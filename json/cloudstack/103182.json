[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testAttachIsoCommandLibvirtException() {\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n\n        final String vmName = \"Test\";\n        final AttachIsoCommand command = new AttachIsoCommand(vmName, \"/path\", true);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(vmName)).thenThrow(LibvirtException.class);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertFalse(answer.getResult());\n\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(vmName);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":1493,"groupId":"11740","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAttachIsoCommandLibvirtException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2f/d7692df58eba74eb0aa325e4562be65e6cf043.src","preCode":"    public void testAttachIsoCommandLibvirtException() {\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n\n        final String vmName = \"Test\";\n        final AttachIsoCommand command = new AttachIsoCommand(vmName, \"/path\", true);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(vmName)).thenThrow(LibvirtException.class);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertFalse(answer.getResult());\n\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(vmName);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1468,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testAttachIsoCommandURISyntaxException() {\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n\n        final String vmName = \"Test\";\n        final AttachIsoCommand command = new AttachIsoCommand(vmName, \"/path\", true);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(vmName)).thenThrow(URISyntaxException.class);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertFalse(answer.getResult());\n\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(vmName);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":1522,"groupId":"11740","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAttachIsoCommandURISyntaxException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2f/d7692df58eba74eb0aa325e4562be65e6cf043.src","preCode":"    public void testAttachIsoCommandURISyntaxException() {\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n\n        final String vmName = \"Test\";\n        final AttachIsoCommand command = new AttachIsoCommand(vmName, \"/path\", true);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(vmName)).thenThrow(URISyntaxException.class);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertFalse(answer.getResult());\n\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(vmName);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1497,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2020-02-12 15:28:25","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void testAttachIsoCommandLibvirtException() {\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n\n        final String vmName = \"Test\";\n        final AttachIsoCommand command = new AttachIsoCommand(vmName, \"/path\", true);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(vmName)).thenThrow(LibvirtException.class);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertFalse(answer.getResult());\n\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(vmName);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":1493,"groupId":"103182","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAttachIsoCommandLibvirtException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2f/d7692df58eba74eb0aa325e4562be65e6cf043.src","preCode":"    public void testAttachIsoCommandLibvirtException() {\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n\n        final String vmName = \"Test\";\n        final AttachIsoCommand command = new AttachIsoCommand(vmName, \"/path\", true);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(vmName)).thenThrow(LibvirtException.class);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertFalse(answer.getResult());\n\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(vmName);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1468,"status":"N"},{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void testAttachIsoCommandURISyntaxException() {\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n\n        final String vmName = \"Test\";\n        final AttachIsoCommand command = new AttachIsoCommand(vmName, \"/path\", true);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            BDDMockito.given(libvirtUtilitiesHelper.getConnectionByVmName(vmName)).willAnswer(invocationOnMock -> {throw new URISyntaxException(\"Exception trying to get connection by VM name\", vmName);});\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertFalse(answer.getResult());\n\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(vmName);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n    }\n","date":"2020-02-12 15:28:25","endLine":1559,"groupId":"103182","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAttachIsoCommandURISyntaxException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/13/f8df9f2dd23cf8882cd687f0901e0dd5227fd5.src","preCode":"    public void testAttachIsoCommandURISyntaxException() {\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n\n        final String vmName = \"Test\";\n        final AttachIsoCommand command = new AttachIsoCommand(vmName, \"/path\", true);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(vmName)).thenThrow(URISyntaxException.class);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertFalse(answer.getResult());\n\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(vmName);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1534,"status":"M"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
