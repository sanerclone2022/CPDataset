[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public Answer copyTemplateToPrimaryStorage(final CopyCommand cmd) {\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final DataStoreTO srcStore = srcData.getDataStore();\n        final Connection conn = hypervisorResource.getConnection();\n        SR srcSr = null;\n        SR destSr = null;\n        boolean removeSrAfterCopy = false;\n        Task task = null;\n\n        try {\n            if (srcStore instanceof NfsTO && srcData.getObjectType() == DataObjectType.TEMPLATE) {\n                final NfsTO srcImageStore = (NfsTO) srcStore;\n                final TemplateObjectTO srcTemplate = (TemplateObjectTO) srcData;\n                final String storeUrl = srcImageStore.getUrl();\n                final URI uri = new URI(storeUrl);\n                String volumePath = srcData.getPath();\n\n                volumePath = StringUtils.stripEnd(volumePath, \"/\");\n\n                final String[] splits = volumePath.split(\"/\");\n                String volumeDirectory = volumePath;\n\n                if (splits.length > 4) {\n                    \r\n                    final int index = volumePath.lastIndexOf(\"/\");\n\n                    volumeDirectory = volumePath.substring(0, index);\n                }\n\n                srcSr = createFileSr(conn, uri.getHost() + \":\" + uri.getPath(), volumeDirectory);\n\n                final Set<VDI> setVdis = srcSr.getVDIs(conn);\n\n                if (setVdis.size() != 1) {\n                    return new CopyCmdAnswer(\"Expected 1 VDI template, but found \" + setVdis.size() + \" VDI templates on: \" +\n                            uri.getHost() + \":\" + uri.getPath() + \"/\" + volumeDirectory);\n                }\n\n                final VDI srcVdi = setVdis.iterator().next();\n\n                boolean managed = false;\n                String storageHost = null;\n                String managedStoragePoolName = null;\n                String managedStoragePoolRootVolumeName = null;\n                String managedStoragePoolRootVolumeSize = null;\n                String chapInitiatorUsername = null;\n                String chapInitiatorSecret = null;\n\n                final PrimaryDataStoreTO destStore = (PrimaryDataStoreTO) destData.getDataStore();\n\n                Map<String, String> details = destStore.getDetails();\n\n                if (details != null) {\n                    managed = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.MANAGED));\n\n                    if (managed) {\n                        storageHost = details.get(PrimaryDataStoreTO.STORAGE_HOST);\n                        managedStoragePoolName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET);\n                        managedStoragePoolRootVolumeName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET_ROOT_VOLUME);\n                        managedStoragePoolRootVolumeSize = details.get(PrimaryDataStoreTO.VOLUME_SIZE);\n                        chapInitiatorUsername = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_USERNAME);\n                        chapInitiatorSecret = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_SECRET);\n                        removeSrAfterCopy = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.REMOVE_AFTER_COPY));\n                    }\n                }\n\n                if (managed) {\n                    details = new HashMap<String, String>();\n\n                    details.put(DiskTO.STORAGE_HOST, storageHost);\n                    details.put(DiskTO.IQN, managedStoragePoolName);\n                    details.put(DiskTO.VOLUME_SIZE, managedStoragePoolRootVolumeSize);\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInitiatorUsername);\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInitiatorSecret);\n\n                    destSr = hypervisorResource.prepareManagedSr(conn, details);\n                } else {\n                    final String srName = destStore.getUuid();\n                    final Set<SR> srs = SR.getByNameLabel(conn, srName);\n\n                    if (srs.size() != 1) {\n                        final String msg = \"There are \" + srs.size() + \" SRs with same name: \" + srName;\n\n                        s_logger.warn(msg);\n\n                        return new CopyCmdAnswer(msg);\n                    } else {\n                        destSr = srs.iterator().next();\n                    }\n                }\n\n                task = srcVdi.copyAsync(conn, destSr, null, null);\n\n                \r\n                hypervisorResource.waitForTask(conn, task, 1000, wait * 1000);\n                hypervisorResource.checkForSuccess(conn, task);\n\n                final VDI tmplVdi = Types.toVDI(task, conn);\n\n                final String uuidToReturn;\n                final Long physicalSize = tmplVdi.getPhysicalUtilisation(conn);\n\n                if (managed) {\n                    uuidToReturn = tmplVdi.getUuid(conn);\n\n                    tmplVdi.setNameLabel(conn, managedStoragePoolRootVolumeName);\n                } else {\n                    final VDI snapshotVdi = tmplVdi.snapshot(conn, new HashMap<String, String>());\n\n                    uuidToReturn = snapshotVdi.getUuid(conn);\n\n                    snapshotVdi.setNameLabel(conn, \"Template \" + srcTemplate.getName());\n\n                    tmplVdi.destroy(conn);\n                }\n\n                destSr.scan(conn);\n\n                try {\n                    Thread.sleep(5000);\n                } catch (final Exception e) {\n                }\n\n                final TemplateObjectTO newVol = new TemplateObjectTO();\n\n                newVol.setUuid(uuidToReturn);\n                newVol.setPath(uuidToReturn);\n\n                if (physicalSize != null) {\n                    newVol.setSize(physicalSize);\n                }\n\n                newVol.setFormat(Storage.ImageFormat.VHD);\n\n                return new CopyCmdAnswer(newVol);\n            }\n        } catch (final Exception e) {\n            final String msg = \"Catch Exception \" + e.getClass().getName() + \" for template due to \" + e.toString();\n\n            s_logger.warn(msg, e);\n\n            return new CopyCmdAnswer(msg);\n        } finally {\n            if (task != null) {\n                try {\n                    task.destroy(conn);\n                } catch (final Exception e) {\n                    s_logger.debug(\"unable to destroy task (\" + task.toWireString() + \") due to \" + e.toString());\n                }\n            }\n\n            if (srcSr != null) {\n                hypervisorResource.removeSR(conn, srcSr);\n            }\n\n            if (removeSrAfterCopy && destSr != null) {\n                hypervisorResource.removeSR(conn, destSr);\n            }\n        }\n\n        return new CopyCmdAnswer(\"not implemented yet\");\n    }\n","date":"2018-01-20 05:49:27","endLine":318,"groupId":"5723","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"copyTemplateToPrimaryStorage","params":"(finalCopyCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ca/58e4a4154076b56881e85fdef5be58ca3aef24.src","preCode":"    public Answer copyTemplateToPrimaryStorage(final CopyCommand cmd) {\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final DataStoreTO srcStore = srcData.getDataStore();\n        final Connection conn = hypervisorResource.getConnection();\n        SR srcSr = null;\n        SR destSr = null;\n        boolean removeSrAfterCopy = false;\n        Task task = null;\n\n        try {\n            if (srcStore instanceof NfsTO && srcData.getObjectType() == DataObjectType.TEMPLATE) {\n                final NfsTO srcImageStore = (NfsTO) srcStore;\n                final TemplateObjectTO srcTemplate = (TemplateObjectTO) srcData;\n                final String storeUrl = srcImageStore.getUrl();\n                final URI uri = new URI(storeUrl);\n                String volumePath = srcData.getPath();\n\n                volumePath = StringUtils.stripEnd(volumePath, \"/\");\n\n                final String[] splits = volumePath.split(\"/\");\n                String volumeDirectory = volumePath;\n\n                if (splits.length > 4) {\n                    \r\n                    final int index = volumePath.lastIndexOf(\"/\");\n\n                    volumeDirectory = volumePath.substring(0, index);\n                }\n\n                srcSr = createFileSr(conn, uri.getHost() + \":\" + uri.getPath(), volumeDirectory);\n\n                final Set<VDI> setVdis = srcSr.getVDIs(conn);\n\n                if (setVdis.size() != 1) {\n                    return new CopyCmdAnswer(\"Expected 1 VDI template, but found \" + setVdis.size() + \" VDI templates on: \" +\n                            uri.getHost() + \":\" + uri.getPath() + \"/\" + volumeDirectory);\n                }\n\n                final VDI srcVdi = setVdis.iterator().next();\n\n                boolean managed = false;\n                String storageHost = null;\n                String managedStoragePoolName = null;\n                String managedStoragePoolRootVolumeName = null;\n                String managedStoragePoolRootVolumeSize = null;\n                String chapInitiatorUsername = null;\n                String chapInitiatorSecret = null;\n\n                final PrimaryDataStoreTO destStore = (PrimaryDataStoreTO) destData.getDataStore();\n\n                Map<String, String> details = destStore.getDetails();\n\n                if (details != null) {\n                    managed = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.MANAGED));\n\n                    if (managed) {\n                        storageHost = details.get(PrimaryDataStoreTO.STORAGE_HOST);\n                        managedStoragePoolName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET);\n                        managedStoragePoolRootVolumeName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET_ROOT_VOLUME);\n                        managedStoragePoolRootVolumeSize = details.get(PrimaryDataStoreTO.VOLUME_SIZE);\n                        chapInitiatorUsername = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_USERNAME);\n                        chapInitiatorSecret = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_SECRET);\n                        removeSrAfterCopy = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.REMOVE_AFTER_COPY));\n                    }\n                }\n\n                if (managed) {\n                    details = new HashMap<String, String>();\n\n                    details.put(DiskTO.STORAGE_HOST, storageHost);\n                    details.put(DiskTO.IQN, managedStoragePoolName);\n                    details.put(DiskTO.VOLUME_SIZE, managedStoragePoolRootVolumeSize);\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInitiatorUsername);\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInitiatorSecret);\n\n                    destSr = hypervisorResource.prepareManagedSr(conn, details);\n                } else {\n                    final String srName = destStore.getUuid();\n                    final Set<SR> srs = SR.getByNameLabel(conn, srName);\n\n                    if (srs.size() != 1) {\n                        final String msg = \"There are \" + srs.size() + \" SRs with same name: \" + srName;\n\n                        s_logger.warn(msg);\n\n                        return new CopyCmdAnswer(msg);\n                    } else {\n                        destSr = srs.iterator().next();\n                    }\n                }\n\n                task = srcVdi.copyAsync(conn, destSr, null, null);\n\n                \r\n                hypervisorResource.waitForTask(conn, task, 1000, wait * 1000);\n                hypervisorResource.checkForSuccess(conn, task);\n\n                final VDI tmplVdi = Types.toVDI(task, conn);\n\n                final String uuidToReturn;\n                final Long physicalSize = tmplVdi.getPhysicalUtilisation(conn);\n\n                if (managed) {\n                    uuidToReturn = tmplVdi.getUuid(conn);\n\n                    tmplVdi.setNameLabel(conn, managedStoragePoolRootVolumeName);\n                } else {\n                    final VDI snapshotVdi = tmplVdi.snapshot(conn, new HashMap<String, String>());\n\n                    uuidToReturn = snapshotVdi.getUuid(conn);\n\n                    snapshotVdi.setNameLabel(conn, \"Template \" + srcTemplate.getName());\n\n                    tmplVdi.destroy(conn);\n                }\n\n                destSr.scan(conn);\n\n                try {\n                    Thread.sleep(5000);\n                } catch (final Exception e) {\n                }\n\n                final TemplateObjectTO newVol = new TemplateObjectTO();\n\n                newVol.setUuid(uuidToReturn);\n                newVol.setPath(uuidToReturn);\n\n                if (physicalSize != null) {\n                    newVol.setSize(physicalSize);\n                }\n\n                newVol.setFormat(Storage.ImageFormat.VHD);\n\n                return new CopyCmdAnswer(newVol);\n            }\n        } catch (final Exception e) {\n            final String msg = \"Catch Exception \" + e.getClass().getName() + \" for template due to \" + e.toString();\n\n            s_logger.warn(msg, e);\n\n            return new CopyCmdAnswer(msg);\n        } finally {\n            if (task != null) {\n                try {\n                    task.destroy(conn);\n                } catch (final Exception e) {\n                    s_logger.debug(\"unable to destroy task (\" + task.toWireString() + \") due to \" + e.toString());\n                }\n            }\n\n            if (srcSr != null) {\n                hypervisorResource.removeSR(conn, srcSr);\n            }\n\n            if (removeSrAfterCopy && destSr != null) {\n                hypervisorResource.removeSR(conn, destSr);\n            }\n        }\n\n        return new CopyCmdAnswer(\"not implemented yet\");\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/Xenserver625StorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public Answer copyTemplateToPrimaryStorage(final CopyCommand cmd) {\n        final DataTO srcDataTo = cmd.getSrcTO();\n        final DataTO destDataTo = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final DataStoreTO srcDataStoreTo = srcDataTo.getDataStore();\n        final Connection conn = hypervisorResource.getConnection();\n        SR sr = null;\n        boolean removeSrAfterCopy = false;\n\n        try {\n            if (srcDataStoreTo instanceof NfsTO && srcDataTo.getObjectType() == DataObjectType.TEMPLATE) {\n                final NfsTO srcImageStore = (NfsTO) srcDataStoreTo;\n                final TemplateObjectTO srcTemplateObjectTo = (TemplateObjectTO) srcDataTo;\n                final String storeUrl = srcImageStore.getUrl();\n                final URI uri = new URI(storeUrl);\n                final String tmplPath = uri.getHost() + \":\" + uri.getPath() + \"/\" + srcDataTo.getPath();\n                final DataStoreTO destDataStoreTo = destDataTo.getDataStore();\n\n                boolean managed = false;\n                String storageHost = null;\n                String managedStoragePoolName = null;\n                String managedStoragePoolRootVolumeName = null;\n                String managedStoragePoolRootVolumeSize = null;\n                String chapInitiatorUsername = null;\n                String chapInitiatorSecret = null;\n\n                if (destDataStoreTo instanceof PrimaryDataStoreTO) {\n                    final PrimaryDataStoreTO destPrimaryDataStoreTo = (PrimaryDataStoreTO)destDataStoreTo;\n\n                    final Map<String, String> details = destPrimaryDataStoreTo.getDetails();\n\n                    if (details != null) {\n                        managed = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.MANAGED));\n\n                        if (managed) {\n                            storageHost = details.get(PrimaryDataStoreTO.STORAGE_HOST);\n                            managedStoragePoolName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET);\n                            managedStoragePoolRootVolumeName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET_ROOT_VOLUME);\n                            managedStoragePoolRootVolumeSize = details.get(PrimaryDataStoreTO.VOLUME_SIZE);\n                            chapInitiatorUsername = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_USERNAME);\n                            chapInitiatorSecret = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_SECRET);\n                            removeSrAfterCopy = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.REMOVE_AFTER_COPY));\n                        }\n                    }\n                }\n\n                if (managed) {\n                    final Map<String, String> details = new HashMap<String, String>();\n\n                    details.put(DiskTO.STORAGE_HOST, storageHost);\n                    details.put(DiskTO.IQN, managedStoragePoolName);\n                    details.put(DiskTO.VOLUME_SIZE, managedStoragePoolRootVolumeSize);\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInitiatorUsername);\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInitiatorSecret);\n\n                    sr = hypervisorResource.prepareManagedSr(conn, details);\n                } else {\n                    final String srName = destDataStoreTo.getUuid();\n                    final Set<SR> srs = SR.getByNameLabel(conn, srName);\n\n                    if (srs.size() != 1) {\n                        final String msg = \"There are \" + srs.size() + \" SRs with same name: \" + srName;\n\n                        s_logger.warn(msg);\n\n                        return new CopyCmdAnswer(msg);\n                    } else {\n                        sr = srs.iterator().next();\n                    }\n                }\n\n                final String srUuid = sr.getUuid(conn);\n                final String tmplUuid = copy_vhd_from_secondarystorage(conn, tmplPath, srUuid, wait);\n                final VDI tmplVdi = getVDIbyUuid(conn, tmplUuid);\n\n                final String uuidToReturn;\n                final Long physicalSize = tmplVdi.getPhysicalUtilisation(conn);\n\n                if (managed) {\n                    uuidToReturn = tmplUuid;\n\n                    tmplVdi.setNameLabel(conn, managedStoragePoolRootVolumeName);\n                } else {\n                    final VDI snapshotVdi = tmplVdi.snapshot(conn, new HashMap<String, String>());\n\n                    uuidToReturn = snapshotVdi.getUuid(conn);\n\n                    snapshotVdi.setNameLabel(conn, \"Template \" + srcTemplateObjectTo.getName());\n\n                    tmplVdi.destroy(conn);\n                }\n\n                sr.scan(conn);\n\n                try {\n                    Thread.sleep(5000);\n                } catch (final InterruptedException e) {\n                }\n\n                final TemplateObjectTO newVol = new TemplateObjectTO();\n\n                newVol.setUuid(uuidToReturn);\n                newVol.setPath(uuidToReturn);\n\n                if (physicalSize != null) {\n                    newVol.setSize(physicalSize);\n                }\n\n                newVol.setFormat(ImageFormat.VHD);\n\n                return new CopyCmdAnswer(newVol);\n            }\n        } catch (final Exception e) {\n            final String msg = \"Catch Exception \" + e.getClass().getName() + \" for template + \" + \" due to \" + e.toString();\n\n            s_logger.warn(msg, e);\n\n            return new CopyCmdAnswer(msg);\n        }\n        finally {\n            if (removeSrAfterCopy && sr != null) {\n                hypervisorResource.removeSR(conn, sr);\n            }\n        }\n\n        return new CopyCmdAnswer(\"not implemented yet\");\n    }\n","date":"2018-01-20 05:49:27","endLine":772,"groupId":"15919","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"copyTemplateToPrimaryStorage","params":"(finalCopyCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/25/7c6a23e41517d2d2e166e1fecd2d9f65dd26cc.src","preCode":"    public Answer copyTemplateToPrimaryStorage(final CopyCommand cmd) {\n        final DataTO srcDataTo = cmd.getSrcTO();\n        final DataTO destDataTo = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final DataStoreTO srcDataStoreTo = srcDataTo.getDataStore();\n        final Connection conn = hypervisorResource.getConnection();\n        SR sr = null;\n        boolean removeSrAfterCopy = false;\n\n        try {\n            if (srcDataStoreTo instanceof NfsTO && srcDataTo.getObjectType() == DataObjectType.TEMPLATE) {\n                final NfsTO srcImageStore = (NfsTO) srcDataStoreTo;\n                final TemplateObjectTO srcTemplateObjectTo = (TemplateObjectTO) srcDataTo;\n                final String storeUrl = srcImageStore.getUrl();\n                final URI uri = new URI(storeUrl);\n                final String tmplPath = uri.getHost() + \":\" + uri.getPath() + \"/\" + srcDataTo.getPath();\n                final DataStoreTO destDataStoreTo = destDataTo.getDataStore();\n\n                boolean managed = false;\n                String storageHost = null;\n                String managedStoragePoolName = null;\n                String managedStoragePoolRootVolumeName = null;\n                String managedStoragePoolRootVolumeSize = null;\n                String chapInitiatorUsername = null;\n                String chapInitiatorSecret = null;\n\n                if (destDataStoreTo instanceof PrimaryDataStoreTO) {\n                    final PrimaryDataStoreTO destPrimaryDataStoreTo = (PrimaryDataStoreTO)destDataStoreTo;\n\n                    final Map<String, String> details = destPrimaryDataStoreTo.getDetails();\n\n                    if (details != null) {\n                        managed = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.MANAGED));\n\n                        if (managed) {\n                            storageHost = details.get(PrimaryDataStoreTO.STORAGE_HOST);\n                            managedStoragePoolName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET);\n                            managedStoragePoolRootVolumeName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET_ROOT_VOLUME);\n                            managedStoragePoolRootVolumeSize = details.get(PrimaryDataStoreTO.VOLUME_SIZE);\n                            chapInitiatorUsername = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_USERNAME);\n                            chapInitiatorSecret = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_SECRET);\n                            removeSrAfterCopy = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.REMOVE_AFTER_COPY));\n                        }\n                    }\n                }\n\n                if (managed) {\n                    final Map<String, String> details = new HashMap<String, String>();\n\n                    details.put(DiskTO.STORAGE_HOST, storageHost);\n                    details.put(DiskTO.IQN, managedStoragePoolName);\n                    details.put(DiskTO.VOLUME_SIZE, managedStoragePoolRootVolumeSize);\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInitiatorUsername);\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInitiatorSecret);\n\n                    sr = hypervisorResource.prepareManagedSr(conn, details);\n                } else {\n                    final String srName = destDataStoreTo.getUuid();\n                    final Set<SR> srs = SR.getByNameLabel(conn, srName);\n\n                    if (srs.size() != 1) {\n                        final String msg = \"There are \" + srs.size() + \" SRs with same name: \" + srName;\n\n                        s_logger.warn(msg);\n\n                        return new CopyCmdAnswer(msg);\n                    } else {\n                        sr = srs.iterator().next();\n                    }\n                }\n\n                final String srUuid = sr.getUuid(conn);\n                final String tmplUuid = copy_vhd_from_secondarystorage(conn, tmplPath, srUuid, wait);\n                final VDI tmplVdi = getVDIbyUuid(conn, tmplUuid);\n\n                final String uuidToReturn;\n                final Long physicalSize = tmplVdi.getPhysicalUtilisation(conn);\n\n                if (managed) {\n                    uuidToReturn = tmplUuid;\n\n                    tmplVdi.setNameLabel(conn, managedStoragePoolRootVolumeName);\n                } else {\n                    final VDI snapshotVdi = tmplVdi.snapshot(conn, new HashMap<String, String>());\n\n                    uuidToReturn = snapshotVdi.getUuid(conn);\n\n                    snapshotVdi.setNameLabel(conn, \"Template \" + srcTemplateObjectTo.getName());\n\n                    tmplVdi.destroy(conn);\n                }\n\n                sr.scan(conn);\n\n                try {\n                    Thread.sleep(5000);\n                } catch (final InterruptedException e) {\n                }\n\n                final TemplateObjectTO newVol = new TemplateObjectTO();\n\n                newVol.setUuid(uuidToReturn);\n                newVol.setPath(uuidToReturn);\n\n                if (physicalSize != null) {\n                    newVol.setSize(physicalSize);\n                }\n\n                newVol.setFormat(ImageFormat.VHD);\n\n                return new CopyCmdAnswer(newVol);\n            }\n        } catch (final Exception e) {\n            final String msg = \"Catch Exception \" + e.getClass().getName() + \" for template + \" + \" due to \" + e.toString();\n\n            s_logger.warn(msg, e);\n\n            return new CopyCmdAnswer(msg);\n        }\n        finally {\n            if (removeSrAfterCopy && sr != null) {\n                hypervisorResource.removeSR(conn, sr);\n            }\n        }\n\n        return new CopyCmdAnswer(\"not implemented yet\");\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/XenServerStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":646,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-04-05 17:29:15","commitOrder":2,"curCode":"    public Answer copyTemplateToPrimaryStorage(final CopyCommand cmd) {\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final DataStoreTO srcStore = srcData.getDataStore();\n        final Connection conn = hypervisorResource.getConnection();\n        SR srcSr = null;\n        SR destSr = null;\n        boolean removeSrAfterCopy = false;\n        Task task = null;\n\n        try {\n            if (srcStore instanceof NfsTO && srcData.getObjectType() == DataObjectType.TEMPLATE) {\n                final NfsTO srcImageStore = (NfsTO)srcStore;\n                final TemplateObjectTO srcTemplate = (TemplateObjectTO)srcData;\n                final String storeUrl = srcImageStore.getUrl();\n                final URI uri = new URI(storeUrl);\n                String volumePath = srcData.getPath();\n\n                volumePath = StringUtils.stripEnd(volumePath, \"/\");\n\n                final String[] splits = volumePath.split(\"/\");\n                String volumeDirectory = volumePath;\n\n                if (splits.length > 4) {\n                    \r\n                    final int index = volumePath.lastIndexOf(\"/\");\n\n                    volumeDirectory = volumePath.substring(0, index);\n                }\n\n                srcSr = createFileSr(conn, uri.getHost() + \":\" + uri.getPath(), volumeDirectory);\n\n                final Set<VDI> setVdis = srcSr.getVDIs(conn);\n\n                if (setVdis.size() != 1) {\n                    return new CopyCmdAnswer(\"Expected 1 VDI template, but found \" + setVdis.size() + \" VDI templates on: \" + uri.getHost() + \":\" + uri.getPath() + \"/\" + volumeDirectory);\n                }\n\n                final VDI srcVdi = setVdis.iterator().next();\n\n                boolean managed = false;\n                String storageHost = null;\n                String managedStoragePoolName = null;\n                String managedStoragePoolRootVolumeName = null;\n                String managedStoragePoolRootVolumeSize = null;\n                String chapInitiatorUsername = null;\n                String chapInitiatorSecret = null;\n\n                final PrimaryDataStoreTO destStore = (PrimaryDataStoreTO)destData.getDataStore();\n\n                Map<String, String> details = destStore.getDetails();\n\n                if (details != null) {\n                    managed = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.MANAGED));\n\n                    if (managed) {\n                        storageHost = details.get(PrimaryDataStoreTO.STORAGE_HOST);\n                        managedStoragePoolName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET);\n                        managedStoragePoolRootVolumeName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET_ROOT_VOLUME);\n                        managedStoragePoolRootVolumeSize = details.get(PrimaryDataStoreTO.VOLUME_SIZE);\n                        chapInitiatorUsername = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_USERNAME);\n                        chapInitiatorSecret = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_SECRET);\n                        removeSrAfterCopy = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.REMOVE_AFTER_COPY));\n                    }\n                }\n\n                if (managed) {\n                    details = new HashMap<String, String>();\n\n                    details.put(DiskTO.STORAGE_HOST, storageHost);\n                    details.put(DiskTO.IQN, managedStoragePoolName);\n                    details.put(DiskTO.VOLUME_SIZE, managedStoragePoolRootVolumeSize);\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInitiatorUsername);\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInitiatorSecret);\n\n                    destSr = hypervisorResource.prepareManagedSr(conn, details);\n                } else {\n                    final String srName = CitrixHelper.getSRNameLabel(destStore.getUuid(), destStore.getPoolType(), destStore.getPath());\n                    final Set<SR> srs = SR.getByNameLabel(conn, srName);\n\n                    if (srs.size() != 1) {\n                        final String msg = \"There are \" + srs.size() + \" SRs with same name: \" + srName;\n\n                        s_logger.warn(msg);\n\n                        return new CopyCmdAnswer(msg);\n                    } else {\n                        destSr = srs.iterator().next();\n                    }\n                }\n\n                task = srcVdi.copyAsync(conn, destSr, null, null);\n\n                \r\n                hypervisorResource.waitForTask(conn, task, 1000, wait * 1000);\n                hypervisorResource.checkForSuccess(conn, task);\n\n                final VDI tmplVdi = Types.toVDI(task, conn);\n\n                final String uuidToReturn;\n                final Long physicalSize = tmplVdi.getPhysicalUtilisation(conn);\n\n                if (managed) {\n                    uuidToReturn = tmplVdi.getUuid(conn);\n\n                    tmplVdi.setNameLabel(conn, managedStoragePoolRootVolumeName);\n                } else {\n                    final VDI snapshotVdi = tmplVdi.snapshot(conn, new HashMap<String, String>());\n\n                    uuidToReturn = snapshotVdi.getUuid(conn);\n\n                    snapshotVdi.setNameLabel(conn, \"Template \" + srcTemplate.getName());\n\n                    tmplVdi.destroy(conn);\n                }\n\n                destSr.scan(conn);\n\n                try {\n                    Thread.sleep(5000);\n                } catch (final Exception e) {\n                }\n\n                final TemplateObjectTO newVol = new TemplateObjectTO();\n\n                newVol.setUuid(uuidToReturn);\n                newVol.setPath(uuidToReturn);\n\n                if (physicalSize != null) {\n                    newVol.setSize(physicalSize);\n                }\n\n                newVol.setFormat(Storage.ImageFormat.VHD);\n\n                return new CopyCmdAnswer(newVol);\n            }\n        } catch (final Exception e) {\n            final String msg = \"Catch Exception \" + e.getClass().getName() + \" for template due to \" + e.toString();\n\n            s_logger.warn(msg, e);\n\n            return new CopyCmdAnswer(msg);\n        } finally {\n            if (task != null) {\n                try {\n                    task.destroy(conn);\n                } catch (final Exception e) {\n                    s_logger.debug(\"unable to destroy task (\" + task.toWireString() + \") due to \" + e.toString());\n                }\n            }\n\n            if (srcSr != null) {\n                hypervisorResource.removeSR(conn, srcSr);\n            }\n\n            if (removeSrAfterCopy && destSr != null) {\n                hypervisorResource.removeSR(conn, destSr);\n            }\n        }\n\n        return new CopyCmdAnswer(\"not implemented yet\");\n    }\n","date":"2021-04-05 17:29:15","endLine":415,"groupId":"102897","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"copyTemplateToPrimaryStorage","params":"(finalCopyCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/97/a4efa06d76ebf29378f9866f9a4054a82aefd8.src","preCode":"    public Answer copyTemplateToPrimaryStorage(final CopyCommand cmd) {\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final DataStoreTO srcStore = srcData.getDataStore();\n        final Connection conn = hypervisorResource.getConnection();\n        SR srcSr = null;\n        SR destSr = null;\n        boolean removeSrAfterCopy = false;\n        Task task = null;\n\n        try {\n            if (srcStore instanceof NfsTO && srcData.getObjectType() == DataObjectType.TEMPLATE) {\n                final NfsTO srcImageStore = (NfsTO)srcStore;\n                final TemplateObjectTO srcTemplate = (TemplateObjectTO)srcData;\n                final String storeUrl = srcImageStore.getUrl();\n                final URI uri = new URI(storeUrl);\n                String volumePath = srcData.getPath();\n\n                volumePath = StringUtils.stripEnd(volumePath, \"/\");\n\n                final String[] splits = volumePath.split(\"/\");\n                String volumeDirectory = volumePath;\n\n                if (splits.length > 4) {\n                    \r\n                    final int index = volumePath.lastIndexOf(\"/\");\n\n                    volumeDirectory = volumePath.substring(0, index);\n                }\n\n                srcSr = createFileSr(conn, uri.getHost() + \":\" + uri.getPath(), volumeDirectory);\n\n                final Set<VDI> setVdis = srcSr.getVDIs(conn);\n\n                if (setVdis.size() != 1) {\n                    return new CopyCmdAnswer(\"Expected 1 VDI template, but found \" + setVdis.size() + \" VDI templates on: \" + uri.getHost() + \":\" + uri.getPath() + \"/\" + volumeDirectory);\n                }\n\n                final VDI srcVdi = setVdis.iterator().next();\n\n                boolean managed = false;\n                String storageHost = null;\n                String managedStoragePoolName = null;\n                String managedStoragePoolRootVolumeName = null;\n                String managedStoragePoolRootVolumeSize = null;\n                String chapInitiatorUsername = null;\n                String chapInitiatorSecret = null;\n\n                final PrimaryDataStoreTO destStore = (PrimaryDataStoreTO)destData.getDataStore();\n\n                Map<String, String> details = destStore.getDetails();\n\n                if (details != null) {\n                    managed = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.MANAGED));\n\n                    if (managed) {\n                        storageHost = details.get(PrimaryDataStoreTO.STORAGE_HOST);\n                        managedStoragePoolName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET);\n                        managedStoragePoolRootVolumeName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET_ROOT_VOLUME);\n                        managedStoragePoolRootVolumeSize = details.get(PrimaryDataStoreTO.VOLUME_SIZE);\n                        chapInitiatorUsername = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_USERNAME);\n                        chapInitiatorSecret = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_SECRET);\n                        removeSrAfterCopy = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.REMOVE_AFTER_COPY));\n                    }\n                }\n\n                if (managed) {\n                    details = new HashMap<String, String>();\n\n                    details.put(DiskTO.STORAGE_HOST, storageHost);\n                    details.put(DiskTO.IQN, managedStoragePoolName);\n                    details.put(DiskTO.VOLUME_SIZE, managedStoragePoolRootVolumeSize);\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInitiatorUsername);\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInitiatorSecret);\n\n                    destSr = hypervisorResource.prepareManagedSr(conn, details);\n                } else {\n                    final String srName = destStore.getUuid();\n                    final Set<SR> srs = SR.getByNameLabel(conn, srName);\n\n                    if (srs.size() != 1) {\n                        final String msg = \"There are \" + srs.size() + \" SRs with same name: \" + srName;\n\n                        s_logger.warn(msg);\n\n                        return new CopyCmdAnswer(msg);\n                    } else {\n                        destSr = srs.iterator().next();\n                    }\n                }\n\n                task = srcVdi.copyAsync(conn, destSr, null, null);\n\n                \r\n                hypervisorResource.waitForTask(conn, task, 1000, wait * 1000);\n                hypervisorResource.checkForSuccess(conn, task);\n\n                final VDI tmplVdi = Types.toVDI(task, conn);\n\n                final String uuidToReturn;\n                final Long physicalSize = tmplVdi.getPhysicalUtilisation(conn);\n\n                if (managed) {\n                    uuidToReturn = tmplVdi.getUuid(conn);\n\n                    tmplVdi.setNameLabel(conn, managedStoragePoolRootVolumeName);\n                } else {\n                    final VDI snapshotVdi = tmplVdi.snapshot(conn, new HashMap<String, String>());\n\n                    uuidToReturn = snapshotVdi.getUuid(conn);\n\n                    snapshotVdi.setNameLabel(conn, \"Template \" + srcTemplate.getName());\n\n                    tmplVdi.destroy(conn);\n                }\n\n                destSr.scan(conn);\n\n                try {\n                    Thread.sleep(5000);\n                } catch (final Exception e) {\n                }\n\n                final TemplateObjectTO newVol = new TemplateObjectTO();\n\n                newVol.setUuid(uuidToReturn);\n                newVol.setPath(uuidToReturn);\n\n                if (physicalSize != null) {\n                    newVol.setSize(physicalSize);\n                }\n\n                newVol.setFormat(Storage.ImageFormat.VHD);\n\n                return new CopyCmdAnswer(newVol);\n            }\n        } catch (final Exception e) {\n            final String msg = \"Catch Exception \" + e.getClass().getName() + \" for template due to \" + e.toString();\n\n            s_logger.warn(msg, e);\n\n            return new CopyCmdAnswer(msg);\n        } finally {\n            if (task != null) {\n                try {\n                    task.destroy(conn);\n                } catch (final Exception e) {\n                    s_logger.debug(\"unable to destroy task (\" + task.toWireString() + \") due to \" + e.toString());\n                }\n            }\n\n            if (srcSr != null) {\n                hypervisorResource.removeSR(conn, srcSr);\n            }\n\n            if (removeSrAfterCopy && destSr != null) {\n                hypervisorResource.removeSR(conn, destSr);\n            }\n        }\n\n        return new CopyCmdAnswer(\"not implemented yet\");\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/Xenserver625StorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public Answer copyTemplateToPrimaryStorage(final CopyCommand cmd) {\n        final DataTO srcDataTo = cmd.getSrcTO();\n        final DataTO destDataTo = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final DataStoreTO srcDataStoreTo = srcDataTo.getDataStore();\n        final Connection conn = hypervisorResource.getConnection();\n        SR sr = null;\n        boolean removeSrAfterCopy = false;\n\n        try {\n            if (srcDataStoreTo instanceof NfsTO && srcDataTo.getObjectType() == DataObjectType.TEMPLATE) {\n                final NfsTO srcImageStore = (NfsTO) srcDataStoreTo;\n                final TemplateObjectTO srcTemplateObjectTo = (TemplateObjectTO) srcDataTo;\n                final String storeUrl = srcImageStore.getUrl();\n                final URI uri = new URI(storeUrl);\n                final String tmplPath = uri.getHost() + \":\" + uri.getPath() + \"/\" + srcDataTo.getPath();\n                final DataStoreTO destDataStoreTo = destDataTo.getDataStore();\n\n                boolean managed = false;\n                String storageHost = null;\n                String managedStoragePoolName = null;\n                String managedStoragePoolRootVolumeName = null;\n                String managedStoragePoolRootVolumeSize = null;\n                String chapInitiatorUsername = null;\n                String chapInitiatorSecret = null;\n\n                if (destDataStoreTo instanceof PrimaryDataStoreTO) {\n                    final PrimaryDataStoreTO destPrimaryDataStoreTo = (PrimaryDataStoreTO)destDataStoreTo;\n\n                    final Map<String, String> details = destPrimaryDataStoreTo.getDetails();\n\n                    if (details != null) {\n                        managed = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.MANAGED));\n\n                        if (managed) {\n                            storageHost = details.get(PrimaryDataStoreTO.STORAGE_HOST);\n                            managedStoragePoolName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET);\n                            managedStoragePoolRootVolumeName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET_ROOT_VOLUME);\n                            managedStoragePoolRootVolumeSize = details.get(PrimaryDataStoreTO.VOLUME_SIZE);\n                            chapInitiatorUsername = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_USERNAME);\n                            chapInitiatorSecret = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_SECRET);\n                            removeSrAfterCopy = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.REMOVE_AFTER_COPY));\n                        }\n                    }\n                }\n\n                if (managed) {\n                    final Map<String, String> details = new HashMap<String, String>();\n\n                    details.put(DiskTO.STORAGE_HOST, storageHost);\n                    details.put(DiskTO.IQN, managedStoragePoolName);\n                    details.put(DiskTO.VOLUME_SIZE, managedStoragePoolRootVolumeSize);\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInitiatorUsername);\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInitiatorSecret);\n\n                    sr = hypervisorResource.prepareManagedSr(conn, details);\n                } else {\n                    final String srName = destDataStoreTo.getUuid();\n                    final Set<SR> srs = SR.getByNameLabel(conn, srName);\n\n                    if (srs.size() != 1) {\n                        final String msg = \"There are \" + srs.size() + \" SRs with same name: \" + srName;\n\n                        s_logger.warn(msg);\n\n                        return new CopyCmdAnswer(msg);\n                    } else {\n                        sr = srs.iterator().next();\n                    }\n                }\n\n                final String srUuid = sr.getUuid(conn);\n                final String tmplUuid = copy_vhd_from_secondarystorage(conn, tmplPath, srUuid, wait);\n                final VDI tmplVdi = getVDIbyUuid(conn, tmplUuid);\n\n                final String uuidToReturn;\n                final Long physicalSize = tmplVdi.getPhysicalUtilisation(conn);\n\n                if (managed) {\n                    uuidToReturn = tmplUuid;\n\n                    tmplVdi.setNameLabel(conn, managedStoragePoolRootVolumeName);\n                } else {\n                    final VDI snapshotVdi = tmplVdi.snapshot(conn, new HashMap<String, String>());\n\n                    uuidToReturn = snapshotVdi.getUuid(conn);\n\n                    snapshotVdi.setNameLabel(conn, \"Template \" + srcTemplateObjectTo.getName());\n\n                    tmplVdi.destroy(conn);\n                }\n\n                sr.scan(conn);\n\n                try {\n                    Thread.sleep(5000);\n                } catch (final InterruptedException e) {\n                }\n\n                final TemplateObjectTO newVol = new TemplateObjectTO();\n\n                newVol.setUuid(uuidToReturn);\n                newVol.setPath(uuidToReturn);\n\n                if (physicalSize != null) {\n                    newVol.setSize(physicalSize);\n                }\n\n                newVol.setFormat(ImageFormat.VHD);\n\n                return new CopyCmdAnswer(newVol);\n            }\n        } catch (final Exception e) {\n            final String msg = \"Catch Exception \" + e.getClass().getName() + \" for template + \" + \" due to \" + e.toString();\n\n            s_logger.warn(msg, e);\n\n            return new CopyCmdAnswer(msg);\n        }\n        finally {\n            if (removeSrAfterCopy && sr != null) {\n                hypervisorResource.removeSR(conn, sr);\n            }\n        }\n\n        return new CopyCmdAnswer(\"not implemented yet\");\n    }\n","date":"2018-01-20 05:49:27","endLine":772,"groupId":"102897","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"copyTemplateToPrimaryStorage","params":"(finalCopyCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/25/7c6a23e41517d2d2e166e1fecd2d9f65dd26cc.src","preCode":"    public Answer copyTemplateToPrimaryStorage(final CopyCommand cmd) {\n        final DataTO srcDataTo = cmd.getSrcTO();\n        final DataTO destDataTo = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final DataStoreTO srcDataStoreTo = srcDataTo.getDataStore();\n        final Connection conn = hypervisorResource.getConnection();\n        SR sr = null;\n        boolean removeSrAfterCopy = false;\n\n        try {\n            if (srcDataStoreTo instanceof NfsTO && srcDataTo.getObjectType() == DataObjectType.TEMPLATE) {\n                final NfsTO srcImageStore = (NfsTO) srcDataStoreTo;\n                final TemplateObjectTO srcTemplateObjectTo = (TemplateObjectTO) srcDataTo;\n                final String storeUrl = srcImageStore.getUrl();\n                final URI uri = new URI(storeUrl);\n                final String tmplPath = uri.getHost() + \":\" + uri.getPath() + \"/\" + srcDataTo.getPath();\n                final DataStoreTO destDataStoreTo = destDataTo.getDataStore();\n\n                boolean managed = false;\n                String storageHost = null;\n                String managedStoragePoolName = null;\n                String managedStoragePoolRootVolumeName = null;\n                String managedStoragePoolRootVolumeSize = null;\n                String chapInitiatorUsername = null;\n                String chapInitiatorSecret = null;\n\n                if (destDataStoreTo instanceof PrimaryDataStoreTO) {\n                    final PrimaryDataStoreTO destPrimaryDataStoreTo = (PrimaryDataStoreTO)destDataStoreTo;\n\n                    final Map<String, String> details = destPrimaryDataStoreTo.getDetails();\n\n                    if (details != null) {\n                        managed = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.MANAGED));\n\n                        if (managed) {\n                            storageHost = details.get(PrimaryDataStoreTO.STORAGE_HOST);\n                            managedStoragePoolName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET);\n                            managedStoragePoolRootVolumeName = details.get(PrimaryDataStoreTO.MANAGED_STORE_TARGET_ROOT_VOLUME);\n                            managedStoragePoolRootVolumeSize = details.get(PrimaryDataStoreTO.VOLUME_SIZE);\n                            chapInitiatorUsername = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_USERNAME);\n                            chapInitiatorSecret = details.get(PrimaryDataStoreTO.CHAP_INITIATOR_SECRET);\n                            removeSrAfterCopy = Boolean.parseBoolean(details.get(PrimaryDataStoreTO.REMOVE_AFTER_COPY));\n                        }\n                    }\n                }\n\n                if (managed) {\n                    final Map<String, String> details = new HashMap<String, String>();\n\n                    details.put(DiskTO.STORAGE_HOST, storageHost);\n                    details.put(DiskTO.IQN, managedStoragePoolName);\n                    details.put(DiskTO.VOLUME_SIZE, managedStoragePoolRootVolumeSize);\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInitiatorUsername);\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInitiatorSecret);\n\n                    sr = hypervisorResource.prepareManagedSr(conn, details);\n                } else {\n                    final String srName = destDataStoreTo.getUuid();\n                    final Set<SR> srs = SR.getByNameLabel(conn, srName);\n\n                    if (srs.size() != 1) {\n                        final String msg = \"There are \" + srs.size() + \" SRs with same name: \" + srName;\n\n                        s_logger.warn(msg);\n\n                        return new CopyCmdAnswer(msg);\n                    } else {\n                        sr = srs.iterator().next();\n                    }\n                }\n\n                final String srUuid = sr.getUuid(conn);\n                final String tmplUuid = copy_vhd_from_secondarystorage(conn, tmplPath, srUuid, wait);\n                final VDI tmplVdi = getVDIbyUuid(conn, tmplUuid);\n\n                final String uuidToReturn;\n                final Long physicalSize = tmplVdi.getPhysicalUtilisation(conn);\n\n                if (managed) {\n                    uuidToReturn = tmplUuid;\n\n                    tmplVdi.setNameLabel(conn, managedStoragePoolRootVolumeName);\n                } else {\n                    final VDI snapshotVdi = tmplVdi.snapshot(conn, new HashMap<String, String>());\n\n                    uuidToReturn = snapshotVdi.getUuid(conn);\n\n                    snapshotVdi.setNameLabel(conn, \"Template \" + srcTemplateObjectTo.getName());\n\n                    tmplVdi.destroy(conn);\n                }\n\n                sr.scan(conn);\n\n                try {\n                    Thread.sleep(5000);\n                } catch (final InterruptedException e) {\n                }\n\n                final TemplateObjectTO newVol = new TemplateObjectTO();\n\n                newVol.setUuid(uuidToReturn);\n                newVol.setPath(uuidToReturn);\n\n                if (physicalSize != null) {\n                    newVol.setSize(physicalSize);\n                }\n\n                newVol.setFormat(ImageFormat.VHD);\n\n                return new CopyCmdAnswer(newVol);\n            }\n        } catch (final Exception e) {\n            final String msg = \"Catch Exception \" + e.getClass().getName() + \" for template + \" + \" due to \" + e.toString();\n\n            s_logger.warn(msg, e);\n\n            return new CopyCmdAnswer(msg);\n        }\n        finally {\n            if (removeSrAfterCopy && sr != null) {\n                hypervisorResource.removeSR(conn, sr);\n            }\n        }\n\n        return new CopyCmdAnswer(\"not implemented yet\");\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/XenServerStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":646,"status":"N"}],"commitId":"3066c955482cd6e4436e70b76cc740ba08ba33f8","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n","date":"2021-04-05 17:29:15","modifiedFileCount":"9","status":"M","submitter":"Rohit Yadav"}]
