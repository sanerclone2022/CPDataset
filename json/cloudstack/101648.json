[{"authorTime":"2018-06-12 15:41:09","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public boolean savePassword(final Network network, final NicProfile nic, final VirtualMachineProfile vm) throws ResourceUnavailableException {\n        if (!canHandle(network, null)) {\n            return false;\n        }\n        final List<DomainRouterVO> routers = _routerDao.listByNetworkAndRole(network.getId(), Role.VIRTUAL_ROUTER);\n        if (routers == null || routers.isEmpty()) {\n            s_logger.debug(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n\n        final VirtualMachineProfile uservm = vm;\n\n        final DataCenterVO dcVO = _dcDao.findById(network.getDataCenterId());\n        final NetworkTopology networkTopology = networkTopologyContext.retrieveNetworkTopology(dcVO);\n\n        \r\n        \r\n        for (final VirtualRouter router : routers) {\n            if (router.getState() == State.Running) {\n                return networkTopology.savePasswordToRouter(network, nic, uservm, router);\n            }\n        }\n        final String password = (String) uservm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDao.loadDetails(userVmVO);\n        userVmVO.setDetail(\"password\", password_encrypted);\n        _userVmDao.saveDetails(userVmVO);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":717,"groupId":"11112","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"savePassword","params":"(finalNetworknetwork@finalNicProfilenic@finalVirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/89/6a4892920cc41aa8a45edd577c7586de0ad4a7.src","preCode":"    public boolean savePassword(final Network network, final NicProfile nic, final VirtualMachineProfile vm) throws ResourceUnavailableException {\n        if (!canHandle(network, null)) {\n            return false;\n        }\n        final List<DomainRouterVO> routers = _routerDao.listByNetworkAndRole(network.getId(), Role.VIRTUAL_ROUTER);\n        if (routers == null || routers.isEmpty()) {\n            s_logger.debug(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n\n        final VirtualMachineProfile uservm = vm;\n\n        final DataCenterVO dcVO = _dcDao.findById(network.getDataCenterId());\n        final NetworkTopology networkTopology = networkTopologyContext.retrieveNetworkTopology(dcVO);\n\n        \r\n        \r\n        for (final VirtualRouter router : routers) {\n            if (router.getState() == State.Running) {\n                return networkTopology.savePasswordToRouter(network, nic, uservm, router);\n            }\n        }\n        final String password = (String) uservm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDao.loadDetails(userVmVO);\n        userVmVO.setDetail(\"password\", password_encrypted);\n        _userVmDao.saveDetails(userVmVO);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/VirtualRouterElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":683,"status":"NB"},{"authorDate":"2018-06-12 15:41:09","commitOrder":2,"curCode":"    private void storePasswordInVmDetails(VirtualMachineProfile vm) {\n        final String password = (String) vm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDetailsDao.addDetail(vm.getId(), \"password\", password_encrypted, false);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n    }\n","date":"2018-06-12 15:41:09","endLine":267,"groupId":"6465","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"storePasswordInVmDetails","params":"(VirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a3/04ea43fa25da7fc0dcb6087e4f4793e8ec9323.src","preCode":"    private void storePasswordInVmDetails(VirtualMachineProfile vm) {\n        final String password = (String) vm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDetailsDao.addDetail(vm.getId(), \"password\", password_encrypted, false);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/ConfigDriveNetworkElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"B"}],"commitId":"3ff122d824cd18ee1c88510073c647645bb081d5","commitMessage":"@@@Merge release branch 4.11 to master\n\n* 4.11:\n  comment on unencryption\n  ui: fix create VPC dialog box failure when zone is SG enabled (#2704)\n  CLOUDSTACK-10381: Fix password reset / reset ssh key with ConfigDrive\n  isisnot=\n  extra message\n  debug message\n  imports\n  update without decrypt doesn't work\n  set unsensitive attributes as not 'Secure'\n  remove old config artifacts from update path\n","date":"2018-06-12 15:41:09","modifiedFileCount":"4","status":"M","submitter":"Daan Hoogland"},{"authorTime":"2018-06-12 15:41:09","codes":[{"authorDate":"2018-10-05 07:48:42","commitOrder":3,"curCode":"    public boolean savePassword(final Network network, final NicProfile nic, final VirtualMachineProfile vm) throws ResourceUnavailableException {\n        if (!canHandle(network, null)) {\n            return false;\n        }\n        final List<DomainRouterVO> routers = _routerDao.listByNetworkAndRole(network.getId(), Role.VIRTUAL_ROUTER);\n        if (routers == null || routers.isEmpty()) {\n            s_logger.debug(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n\n        final VirtualMachineProfile uservm = vm;\n\n        final DataCenterVO dcVO = _dcDao.findById(network.getDataCenterId());\n        final NetworkTopology networkTopology = networkTopologyContext.retrieveNetworkTopology(dcVO);\n\n        \r\n        \r\n        for (final VirtualRouter router : routers) {\n            if (router.getState() == State.Running) {\n                final boolean result = networkTopology.savePasswordToRouter(network, nic, uservm, router);\n                if (result) {\n                    \r\n                    final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n                    userVmVO.setUpdateParameters(false);\n                    _userVmDao.update(userVmVO.getId(), userVmVO);\n                }\n                return result;\n            }\n        }\n        final String password = (String) uservm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDao.loadDetails(userVmVO);\n        userVmVO.setDetail(\"password\", password_encrypted);\n        _userVmDao.saveDetails(userVmVO);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n\n        return true;\n    }\n","date":"2018-10-05 07:48:42","endLine":728,"groupId":"11112","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"savePassword","params":"(finalNetworknetwork@finalNicProfilenic@finalVirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/1a/72877b97b874e3b3fbeb152582092470a54456.src","preCode":"    public boolean savePassword(final Network network, final NicProfile nic, final VirtualMachineProfile vm) throws ResourceUnavailableException {\n        if (!canHandle(network, null)) {\n            return false;\n        }\n        final List<DomainRouterVO> routers = _routerDao.listByNetworkAndRole(network.getId(), Role.VIRTUAL_ROUTER);\n        if (routers == null || routers.isEmpty()) {\n            s_logger.debug(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n\n        final VirtualMachineProfile uservm = vm;\n\n        final DataCenterVO dcVO = _dcDao.findById(network.getDataCenterId());\n        final NetworkTopology networkTopology = networkTopologyContext.retrieveNetworkTopology(dcVO);\n\n        \r\n        \r\n        for (final VirtualRouter router : routers) {\n            if (router.getState() == State.Running) {\n                return networkTopology.savePasswordToRouter(network, nic, uservm, router);\n            }\n        }\n        final String password = (String) uservm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDao.loadDetails(userVmVO);\n        userVmVO.setDetail(\"password\", password_encrypted);\n        _userVmDao.saveDetails(userVmVO);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/VirtualRouterElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":687,"status":"M"},{"authorDate":"2018-06-12 15:41:09","commitOrder":3,"curCode":"    private void storePasswordInVmDetails(VirtualMachineProfile vm) {\n        final String password = (String) vm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDetailsDao.addDetail(vm.getId(), \"password\", password_encrypted, false);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n    }\n","date":"2018-06-12 15:41:09","endLine":267,"groupId":"6465","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"storePasswordInVmDetails","params":"(VirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a3/04ea43fa25da7fc0dcb6087e4f4793e8ec9323.src","preCode":"    private void storePasswordInVmDetails(VirtualMachineProfile vm) {\n        final String password = (String) vm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDetailsDao.addDetail(vm.getId(), \"password\", password_encrypted, false);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/ConfigDriveNetworkElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"N"}],"commitId":"b6302d4e900e6eee53d6b700d85a7e81d4af5b9e","commitMessage":"@@@Merge remote-tracking branch 'origin/4.11'\n\nConflicts resolved for:\n\tengine/orchestration/src/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java\n\tengine/schema/src/com/cloud/vm/dao/UserVmDaoImpl.java\nserver/src/com/cloud/network/element/VirtualRouterElement.java\nserver/src/com/cloud/vm/UserVmManagerImpl.java\ntools/marvin/setup.py\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2018-10-05 07:48:42","modifiedFileCount":"7","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2019-06-27 11:44:47","codes":[{"authorDate":"2019-06-27 11:44:47","commitOrder":4,"curCode":"    public boolean savePassword(final Network network, final NicProfile nic, final VirtualMachineProfile vm) throws ResourceUnavailableException {\n        if (!canHandle(network, null)) {\n            return false;\n        }\n        final List<DomainRouterVO> routers = _routerDao.listByNetworkAndRole(network.getId(), Role.VIRTUAL_ROUTER);\n        if (routers == null || routers.isEmpty()) {\n            s_logger.debug(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n\n        final VirtualMachineProfile uservm = vm;\n\n        final DataCenterVO dcVO = _dcDao.findById(network.getDataCenterId());\n        final NetworkTopology networkTopology = networkTopologyContext.retrieveNetworkTopology(dcVO);\n\n        \r\n        \r\n        for (final VirtualRouter router : routers) {\n            if (router.getState() == State.Running) {\n                final boolean result = networkTopology.savePasswordToRouter(network, nic, uservm, router);\n                if (result) {\n                    \r\n                    final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n                    userVmVO.setUpdateParameters(false);\n                    _userVmDao.update(userVmVO.getId(), userVmVO);\n                }\n                return result;\n            }\n        }\n        final String password = (String) uservm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDao.loadDetails(userVmVO);\n        userVmVO.setDetail(VmDetailConstants.PASSWORD, password_encrypted);\n        _userVmDao.saveDetails(userVmVO);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n\n        return true;\n    }\n","date":"2019-06-27 11:44:47","endLine":729,"groupId":"11112","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"savePassword","params":"(finalNetworknetwork@finalNicProfilenic@finalVirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ae/fa528bea7c69de4b85ec611eb5e956ff0dc017.src","preCode":"    public boolean savePassword(final Network network, final NicProfile nic, final VirtualMachineProfile vm) throws ResourceUnavailableException {\n        if (!canHandle(network, null)) {\n            return false;\n        }\n        final List<DomainRouterVO> routers = _routerDao.listByNetworkAndRole(network.getId(), Role.VIRTUAL_ROUTER);\n        if (routers == null || routers.isEmpty()) {\n            s_logger.debug(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n\n        final VirtualMachineProfile uservm = vm;\n\n        final DataCenterVO dcVO = _dcDao.findById(network.getDataCenterId());\n        final NetworkTopology networkTopology = networkTopologyContext.retrieveNetworkTopology(dcVO);\n\n        \r\n        \r\n        for (final VirtualRouter router : routers) {\n            if (router.getState() == State.Running) {\n                final boolean result = networkTopology.savePasswordToRouter(network, nic, uservm, router);\n                if (result) {\n                    \r\n                    final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n                    userVmVO.setUpdateParameters(false);\n                    _userVmDao.update(userVmVO.getId(), userVmVO);\n                }\n                return result;\n            }\n        }\n        final String password = (String) uservm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDao.loadDetails(userVmVO);\n        userVmVO.setDetail(\"password\", password_encrypted);\n        _userVmDao.saveDetails(userVmVO);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/VirtualRouterElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":688,"status":"M"},{"authorDate":"2019-06-27 11:44:47","commitOrder":4,"curCode":"    private void storePasswordInVmDetails(VirtualMachineProfile vm) {\n        final String password = (String) vm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDetailsDao.addDetail(vm.getId(), VmDetailConstants.PASSWORD,  password_encrypted, false);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n    }\n","date":"2019-06-27 11:44:47","endLine":270,"groupId":"2925","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"storePasswordInVmDetails","params":"(VirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/76/e4fc03ce7b7e04d4029254fe47fefe47b582f3.src","preCode":"    private void storePasswordInVmDetails(VirtualMachineProfile vm) {\n        final String password = (String) vm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDetailsDao.addDetail(vm.getId(), \"password\", password_encrypted, false);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/ConfigDriveNetworkElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"}],"commitId":"9f4f2c5348af93eeb790fbf4908cdde4f0b7806a","commitMessage":"@@@api: instance and template details are free text (#3240)\n\nProblem: Users don't know what keys/values to enter for template and VM details.\nRoot Cause: The feature does not exist that can list possible details and options.\nSolution: Based on the possible VM and template details handled by the\ncodebase.  those details were refactored and a list API is introduced\nthat can return users those details along with possible values. When\nusers add details now.  they will be presented with a list of key details\nand their possible options if any.\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2019-06-27 11:44:47","modifiedFileCount":"16","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2019-06-27 11:44:47","codes":[{"authorDate":"2020-02-28 17:33:12","commitOrder":5,"curCode":"    public boolean savePassword(final Network network, final NicProfile nic, final VirtualMachineProfile vm) throws ResourceUnavailableException {\n        if (!canHandle(network, null)) {\n            return false;\n        }\n        final List<DomainRouterVO> routers = _routerDao.listByNetworkAndRole(network.getId(), Role.VIRTUAL_ROUTER);\n        if (routers == null || routers.isEmpty()) {\n            s_logger.debug(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n\n        final VirtualMachineProfile uservm = vm;\n\n        final DataCenterVO dcVO = _dcDao.findById(network.getDataCenterId());\n        final NetworkTopology networkTopology = networkTopologyContext.retrieveNetworkTopology(dcVO);\n\n        \r\n        \r\n        boolean savePasswordResult = true;\n        boolean isVrRunning = false;\n        for (final VirtualRouter router : routers) {\n            if (router.getState() == State.Running) {\n                final boolean result = networkTopology.savePasswordToRouter(network, nic, uservm, router);\n                if (!result) {\n                    s_logger.error(\"Unable to save password for VM \" + vm.getInstanceName() +\n                            \" on router \" + router.getInstanceName());\n                    return false;\n                }\n                isVrRunning = true;\n                savePasswordResult = savePasswordResult && result;\n            }\n        }\n\n        \r\n        if (isVrRunning) {\n            if (savePasswordResult) {\n                \r\n                final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n                userVmVO.setUpdateParameters(false);\n                _userVmDao.update(userVmVO.getId(), userVmVO);\n            }\n            return savePasswordResult;\n        }\n\n        final String password = (String) uservm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDao.loadDetails(userVmVO);\n        userVmVO.setDetail(VmDetailConstants.PASSWORD, password_encrypted);\n        _userVmDao.saveDetails(userVmVO);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n\n        return true;\n    }\n","date":"2020-02-28 17:33:12","endLine":743,"groupId":"101648","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"savePassword","params":"(finalNetworknetwork@finalNicProfilenic@finalVirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/da/066f0d93898d1f73dbd61e1cdf61c2e298a6ab.src","preCode":"    public boolean savePassword(final Network network, final NicProfile nic, final VirtualMachineProfile vm) throws ResourceUnavailableException {\n        if (!canHandle(network, null)) {\n            return false;\n        }\n        final List<DomainRouterVO> routers = _routerDao.listByNetworkAndRole(network.getId(), Role.VIRTUAL_ROUTER);\n        if (routers == null || routers.isEmpty()) {\n            s_logger.debug(\"Can't find virtual router element in network \" + network.getId());\n            return true;\n        }\n\n        final VirtualMachineProfile uservm = vm;\n\n        final DataCenterVO dcVO = _dcDao.findById(network.getDataCenterId());\n        final NetworkTopology networkTopology = networkTopologyContext.retrieveNetworkTopology(dcVO);\n\n        \r\n        \r\n        for (final VirtualRouter router : routers) {\n            if (router.getState() == State.Running) {\n                final boolean result = networkTopology.savePasswordToRouter(network, nic, uservm, router);\n                if (result) {\n                    \r\n                    final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n                    userVmVO.setUpdateParameters(false);\n                    _userVmDao.update(userVmVO.getId(), userVmVO);\n                }\n                return result;\n            }\n        }\n        final String password = (String) uservm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDao.loadDetails(userVmVO);\n        userVmVO.setDetail(VmDetailConstants.PASSWORD, password_encrypted);\n        _userVmDao.saveDetails(userVmVO);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/VirtualRouterElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":688,"status":"M"},{"authorDate":"2019-06-27 11:44:47","commitOrder":5,"curCode":"    private void storePasswordInVmDetails(VirtualMachineProfile vm) {\n        final String password = (String) vm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDetailsDao.addDetail(vm.getId(), VmDetailConstants.PASSWORD,  password_encrypted, false);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n    }\n","date":"2019-06-27 11:44:47","endLine":270,"groupId":"101648","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"storePasswordInVmDetails","params":"(VirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/76/e4fc03ce7b7e04d4029254fe47fefe47b582f3.src","preCode":"    private void storePasswordInVmDetails(VirtualMachineProfile vm) {\n        final String password = (String) vm.getParameter(VirtualMachineProfile.Param.VmPassword);\n        final String password_encrypted = DBEncryptionUtil.encrypt(password);\n        final UserVmVO userVmVO = _userVmDao.findById(vm.getId());\n\n        _userVmDetailsDao.addDetail(vm.getId(), VmDetailConstants.PASSWORD,  password_encrypted, false);\n\n        userVmVO.setUpdateParameters(true);\n        _userVmDao.update(userVmVO.getId(), userVmVO);\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/ConfigDriveNetworkElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"N"}],"commitId":"3ca5be40d4c6b373f5de34b23534a132017966f1","commitMessage":"@@@Merge remote-tracking branch 'origin/4.13'\n","date":"2020-02-28 17:33:12","modifiedFileCount":"2","status":"M","submitter":"Rohit Yadav"}]
