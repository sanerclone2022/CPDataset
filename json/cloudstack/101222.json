[{"authorTime":"2020-06-26 19:31:43","codes":[{"authorDate":"2020-06-26 19:31:43","commitOrder":1,"curCode":"    public void importUnmanagedInstanceTest() {\n        ImportUnmanagedInstanceCmd importUnmanageInstanceCmd = Mockito.mock(ImportUnmanagedInstanceCmd.class);\n        when(importUnmanageInstanceCmd.getName()).thenReturn(\"TestInstance\");\n        when(importUnmanageInstanceCmd.getAccountName()).thenReturn(null);\n        when(importUnmanageInstanceCmd.getDomainId()).thenReturn(null);\n        PowerMockito.mockStatic(UsageEventUtils.class);\n        unmanagedVMsManager.importUnmanagedInstance(importUnmanageInstanceCmd);\n    }\n","date":"2020-06-26 19:31:43","endLine":373,"groupId":"17414","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"importUnmanagedInstanceTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/32/b0e433534ed5a16fa803123fa6bbe737b130a5.src","preCode":"    public void importUnmanagedInstanceTest() {\n        ImportUnmanagedInstanceCmd importUnmanageInstanceCmd = Mockito.mock(ImportUnmanagedInstanceCmd.class);\n        when(importUnmanageInstanceCmd.getName()).thenReturn(\"TestInstance\");\n        when(importUnmanageInstanceCmd.getAccountName()).thenReturn(null);\n        when(importUnmanageInstanceCmd.getDomainId()).thenReturn(null);\n        PowerMockito.mockStatic(UsageEventUtils.class);\n        unmanagedVMsManager.importUnmanagedInstance(importUnmanageInstanceCmd);\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/vm/UnmanagedVMsManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":366,"status":"B"},{"authorDate":"2020-06-26 19:31:43","commitOrder":1,"curCode":"    public void importUnmanagedInstanceMissingInstanceTest() {\n        ImportUnmanagedInstanceCmd importUnmanageInstanceCmd = Mockito.mock(ImportUnmanagedInstanceCmd.class);\n        when(importUnmanageInstanceCmd.getName()).thenReturn(\"SomeInstance\");\n        when(importUnmanageInstanceCmd.getAccountName()).thenReturn(null);\n        when(importUnmanageInstanceCmd.getDomainId()).thenReturn(null);\n        unmanagedVMsManager.importUnmanagedInstance(importUnmanageInstanceCmd);\n    }\n","date":"2020-06-26 19:31:43","endLine":391,"groupId":"17414","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"importUnmanagedInstanceMissingInstanceTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/32/b0e433534ed5a16fa803123fa6bbe737b130a5.src","preCode":"    public void importUnmanagedInstanceMissingInstanceTest() {\n        ImportUnmanagedInstanceCmd importUnmanageInstanceCmd = Mockito.mock(ImportUnmanagedInstanceCmd.class);\n        when(importUnmanageInstanceCmd.getName()).thenReturn(\"SomeInstance\");\n        when(importUnmanageInstanceCmd.getAccountName()).thenReturn(null);\n        when(importUnmanageInstanceCmd.getDomainId()).thenReturn(null);\n        unmanagedVMsManager.importUnmanagedInstance(importUnmanageInstanceCmd);\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/vm/UnmanagedVMsManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":385,"status":"B"}],"commitId":"8c1d749360657a4909c558c3df5dec57ca66c977","commitMessage":"@@@[VMware] Enable unmanaging guest VMs (#4103)\n\n* Enable unmanaging guest VMs\n\n* Minor fixes\n\n* Fix stop usage event only if VM is not stopped when unmanaging\n\n* Rename unmanaged VMs manager\n\n* Generate netofferingremove usage event if VM is not stopped\n\n* Generate usage event VM snapshot primary off when unmanaging","date":"2020-06-26 19:31:43","modifiedFileCount":"28","status":"B","submitter":"Nicolas Vazquez"},{"authorTime":"2020-06-26 19:31:43","codes":[{"authorDate":"2021-08-16 23:08:40","commitOrder":2,"curCode":"    public void importUnmanagedInstanceTest() {\n        ImportUnmanagedInstanceCmd importUnmanageInstanceCmd = Mockito.mock(ImportUnmanagedInstanceCmd.class);\n        when(importUnmanageInstanceCmd.getName()).thenReturn(\"TestInstance\");\n        when(importUnmanageInstanceCmd.getAccountName()).thenReturn(null);\n        when(importUnmanageInstanceCmd.getDomainId()).thenReturn(null);\n        doNothing().when(hostDao).loadHostTags(null);\n        PowerMockito.mockStatic(UsageEventUtils.class);\n        unmanagedVMsManager.importUnmanagedInstance(importUnmanageInstanceCmd);\n    }\n","date":"2021-08-16 23:08:40","endLine":378,"groupId":"101222","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"importUnmanagedInstanceTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a8/c64f39d5fae6b08a7d4bf2411ba1ab6711d0d1.src","preCode":"    public void importUnmanagedInstanceTest() {\n        ImportUnmanagedInstanceCmd importUnmanageInstanceCmd = Mockito.mock(ImportUnmanagedInstanceCmd.class);\n        when(importUnmanageInstanceCmd.getName()).thenReturn(\"TestInstance\");\n        when(importUnmanageInstanceCmd.getAccountName()).thenReturn(null);\n        when(importUnmanageInstanceCmd.getDomainId()).thenReturn(null);\n        PowerMockito.mockStatic(UsageEventUtils.class);\n        unmanagedVMsManager.importUnmanagedInstance(importUnmanageInstanceCmd);\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/vm/UnmanagedVMsManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"M"},{"authorDate":"2020-06-26 19:31:43","commitOrder":2,"curCode":"    public void importUnmanagedInstanceMissingInstanceTest() {\n        ImportUnmanagedInstanceCmd importUnmanageInstanceCmd = Mockito.mock(ImportUnmanagedInstanceCmd.class);\n        when(importUnmanageInstanceCmd.getName()).thenReturn(\"SomeInstance\");\n        when(importUnmanageInstanceCmd.getAccountName()).thenReturn(null);\n        when(importUnmanageInstanceCmd.getDomainId()).thenReturn(null);\n        unmanagedVMsManager.importUnmanagedInstance(importUnmanageInstanceCmd);\n    }\n","date":"2020-06-26 19:31:43","endLine":391,"groupId":"101222","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"importUnmanagedInstanceMissingInstanceTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/32/b0e433534ed5a16fa803123fa6bbe737b130a5.src","preCode":"    public void importUnmanagedInstanceMissingInstanceTest() {\n        ImportUnmanagedInstanceCmd importUnmanageInstanceCmd = Mockito.mock(ImportUnmanagedInstanceCmd.class);\n        when(importUnmanageInstanceCmd.getName()).thenReturn(\"SomeInstance\");\n        when(importUnmanageInstanceCmd.getAccountName()).thenReturn(null);\n        when(importUnmanageInstanceCmd.getDomainId()).thenReturn(null);\n        unmanagedVMsManager.importUnmanagedInstance(importUnmanageInstanceCmd);\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/vm/UnmanagedVMsManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":385,"status":"N"}],"commitId":"664a46a525847feeef2500c292c8f9e2a47337de","commitMessage":"@@@PR multi tags in compute offering [#4398] (#4399)\n\n* [#4398] adapt code to handle multi tag string with commas\n\n* [#4398] remove trailing spaces\n\n* [#4398] add multi host tag support for ingest process\n\n* [#4398] add test for multi tag support in offerings\n\n* [#4398]  update multitag support for DeploymentPlanningManagerImpl\n\nencapsulate multi tag check from Ingest Feature.  DepolymentPlanningManager into\nHostDaoImpl to prevent code duplicates\n\n* [#4398] move logic to HostVO and add tests\n\n* rename test method\n\n* [#4398] Change string method to apaches StringUtils\n\n* [#4398] modify test for multi tag support\n\n* adapt sql for double tags\n\nCo-authored-by: Dirk Klahre <Dirk.Klahre@Itelligence.de>","date":"2021-08-16 23:08:40","modifiedFileCount":"5","status":"M","submitter":"DK101010"}]
