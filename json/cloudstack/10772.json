[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private VolumeVO createVolume(Long templateId, long dataStoreId) {\n\n        VolumeVO volume = new VolumeVO(Volume.Type.DATADISK, UUID.randomUUID().toString(), this.dcId, 1L, 1L, 1L, 1000, 0L, 0L, \"\");\n        volume.setDataCenterId(this.dcId);\n        volume.setPoolId(dataStoreId);\n        volume = volumeDao.persist(volume);\n        return volume;\n    }\n","date":"2018-01-20 05:49:27","endLine":355,"groupId":"19794","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createVolume","params":"(LongtemplateId@longdataStoreId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/1b/5746ddfe26daf218f4fb8c3d24e644d15af2d9.src","preCode":"    private VolumeVO createVolume(Long templateId, long dataStoreId) {\n\n        VolumeVO volume = new VolumeVO(Volume.Type.DATADISK, UUID.randomUUID().toString(), this.dcId, 1L, 1L, 1L, 1000, 0L, 0L, \"\");\n        volume.setDataCenterId(this.dcId);\n        volume.setPoolId(dataStoreId);\n        volume = volumeDao.persist(volume);\n        return volume;\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/SnapshotTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private VolumeInfo createVolume(Long templateId, DataStore store) {\n        VolumeVO volume = new VolumeVO(Volume.Type.DATADISK, UUID.randomUUID().toString(), dcId, 1L, 1L, 1L, 1000, 0L, 0L, \"\");\n        ;\n        volume.setPoolId(store.getId());\n\n        volume = volumeDao.persist(volume);\n        VolumeInfo volumeInfo = volumeDataFactory.getVolume(volume.getId(), store);\n        volumeInfo.stateTransit(Volume.Event.CreateRequested);\n        volumeInfo.stateTransit(Volume.Event.OperationSucceeded);\n        return volumeInfo;\n    }\n","date":"2018-01-20 05:49:27","endLine":231,"groupId":"9025","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createVolume","params":"(LongtemplateId@DataStorestore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8c/7b06d872ed4fca1d566c2b36174753f4e701a1.src","preCode":"    private VolumeInfo createVolume(Long templateId, DataStore store) {\n        VolumeVO volume = new VolumeVO(Volume.Type.DATADISK, UUID.randomUUID().toString(), dcId, 1L, 1L, 1L, 1000, 0L, 0L, \"\");\n        ;\n        volume.setPoolId(store.getId());\n\n        volume = volumeDao.persist(volume);\n        VolumeInfo volumeInfo = volumeDataFactory.getVolume(volume.getId(), store);\n        volumeInfo.stateTransit(Volume.Event.CreateRequested);\n        volumeInfo.stateTransit(Volume.Event.OperationSucceeded);\n        return volumeInfo;\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/SnapshotTestWithFakeData.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":221,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-23 19:19:36","codes":[{"authorDate":"2018-01-23 19:19:36","commitOrder":2,"curCode":"    private VolumeVO createVolume(Long templateId, long dataStoreId) {\n        VolumeVO volume = new VolumeVO(Volume.Type.DATADISK, UUID.randomUUID().toString(), this.dcId, 1L, 1L, 1L, Storage.ProvisioningType.THIN, 1000, 0L, 0L, \"\");\n        volume.setDataCenterId(this.dcId);\n        volume.setPoolId(dataStoreId);\n        volume = volumeDao.persist(volume);\n        return volume;\n    }\n","date":"2018-01-23 19:19:36","endLine":354,"groupId":"10772","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createVolume","params":"(LongtemplateId@longdataStoreId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/01/85c0d19342f75737e215e1ec84477c3572bdec.src","preCode":"    private VolumeVO createVolume(Long templateId, long dataStoreId) {\n\n        VolumeVO volume = new VolumeVO(Volume.Type.DATADISK, UUID.randomUUID().toString(), this.dcId, 1L, 1L, 1L, 1000, 0L, 0L, \"\");\n        volume.setDataCenterId(this.dcId);\n        volume.setPoolId(dataStoreId);\n        volume = volumeDao.persist(volume);\n        return volume;\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/SnapshotTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"M"},{"authorDate":"2018-01-23 19:19:36","commitOrder":2,"curCode":"    private VolumeInfo createVolume(Long templateId, DataStore store) {\n        VolumeVO volume = new VolumeVO(Volume.Type.DATADISK, UUID.randomUUID().toString(), dcId, 1L, 1L, 1L, Storage.ProvisioningType.THIN, 1000, 0L, 0L, \"\");\n        volume.setPoolId(store.getId());\n\n        volume = volumeDao.persist(volume);\n        VolumeInfo volumeInfo = volumeDataFactory.getVolume(volume.getId(), store);\n        volumeInfo.stateTransit(Volume.Event.CreateRequested);\n        volumeInfo.stateTransit(Volume.Event.OperationSucceeded);\n        return volumeInfo;\n    }\n","date":"2018-01-23 19:19:36","endLine":231,"groupId":"10772","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createVolume","params":"(LongtemplateId@DataStorestore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a3/961ace64bb3db9ada012e3b5b54f164f77dc3e.src","preCode":"    private VolumeInfo createVolume(Long templateId, DataStore store) {\n        VolumeVO volume = new VolumeVO(Volume.Type.DATADISK, UUID.randomUUID().toString(), dcId, 1L, 1L, 1L, 1000, 0L, 0L, \"\");\n        ;\n        volume.setPoolId(store.getId());\n\n        volume = volumeDao.persist(volume);\n        VolumeInfo volumeInfo = volumeDataFactory.getVolume(volume.getId(), store);\n        volumeInfo.stateTransit(Volume.Event.CreateRequested);\n        volumeInfo.stateTransit(Volume.Event.OperationSucceeded);\n        return volumeInfo;\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/SnapshotTestWithFakeData.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"}],"commitId":"c591c5ad3e270e5e62166a7f1ff6f9895d4b102c","commitMessage":"@@@CLOUDSTACK-10248: Fix errors that appeared after #2283 (#2417)\n\nThis fixes move refactoring error introduced in #2283 \nFor instance.  the class DatadiskTO is supposed to be in com.cloud.agent.api.to package. However.  the folder structure it was placed in is com.cloud.agent.api.api.to.\n\nSkip tests for cloud-plugin-hypervisor-ovm3:\nFor some unknown reason.  there are quite a lot of broken test cases for cloud-plugin-hypervisor-ovm3. They might have appeared after some dependency upgrade and was overlooked by the person updating them. I checked them to see if they could be fixed.  but these tests are not developed in a clear and clean manner. On top of that.  we do not see (at least I) people using OVM3-hypervisor with ACS. Therefore.  I decided to skip them.\n\nIdentention corrected to use spaces instead of tabs in XML files\n","date":"2018-01-23 19:19:36","modifiedFileCount":"9","status":"M","submitter":"Rafael Weing?rtner"}]
