[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void enablePrimaryStoragePool(StoragePoolVO primaryStorage) {\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Disabled)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorage.getId() + \" cannot be enabled. Storage pool state : \" +\n                    primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle dataStoreLifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n        ((PrimaryDataStoreLifeCycle)dataStoreLifeCycle).enableStoragePool(store);\n    }\n","date":"2018-01-20 05:49:27","endLine":776,"groupId":"13568","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"enablePrimaryStoragePool","params":"(StoragePoolVOprimaryStorage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/72/4ca8a474596505e6a75a7c09fc25744756157e.src","preCode":"    private void enablePrimaryStoragePool(StoragePoolVO primaryStorage) {\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Disabled)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorage.getId() + \" cannot be enabled. Storage pool state : \" +\n                    primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle dataStoreLifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n        ((PrimaryDataStoreLifeCycle)dataStoreLifeCycle).enableStoragePool(store);\n    }\n","realPath":"server/src/main/java/com/cloud/storage/StorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":766,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public PrimaryDataStoreInfo preparePrimaryStorageForMaintenance(Long primaryStorageId) throws ResourceUnavailableException, InsufficientCapacityException {\n        StoragePoolVO primaryStorage = null;\n        primaryStorage = _storagePoolDao.findById(primaryStorageId);\n\n        if (primaryStorage == null) {\n            String msg = \"Unable to obtain lock on the storage pool record in preparePrimaryStorageForMaintenance()\";\n            s_logger.error(msg);\n            throw new InvalidParameterValueException(msg);\n        }\n\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Up) && !primaryStorage.getStatus().equals(StoragePoolStatus.ErrorInMaintenance)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorageId + \" is not ready for migration, as the status is:\" +\n                    primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle lifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n        lifeCycle.maintain(store);\n\n        return (PrimaryDataStoreInfo)_dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n    }\n","date":"2018-01-20 05:49:27","endLine":1476,"groupId":"10028","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"preparePrimaryStorageForMaintenance","params":"(LongprimaryStorageId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/72/4ca8a474596505e6a75a7c09fc25744756157e.src","preCode":"    public PrimaryDataStoreInfo preparePrimaryStorageForMaintenance(Long primaryStorageId) throws ResourceUnavailableException, InsufficientCapacityException {\n        StoragePoolVO primaryStorage = null;\n        primaryStorage = _storagePoolDao.findById(primaryStorageId);\n\n        if (primaryStorage == null) {\n            String msg = \"Unable to obtain lock on the storage pool record in preparePrimaryStorageForMaintenance()\";\n            s_logger.error(msg);\n            throw new InvalidParameterValueException(msg);\n        }\n\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Up) && !primaryStorage.getStatus().equals(StoragePoolStatus.ErrorInMaintenance)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorageId + \" is not ready for migration, as the status is:\" +\n                    primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle lifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n        lifeCycle.maintain(store);\n\n        return (PrimaryDataStoreInfo)_dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n    }\n","realPath":"server/src/main/java/com/cloud/storage/StorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1455,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2020-10-26 21:24:14","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private void enablePrimaryStoragePool(StoragePoolVO primaryStorage) {\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Disabled)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorage.getId() + \" cannot be enabled. Storage pool state : \" +\n                    primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle dataStoreLifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n        ((PrimaryDataStoreLifeCycle)dataStoreLifeCycle).enableStoragePool(store);\n    }\n","date":"2018-01-20 05:49:27","endLine":776,"groupId":"13568","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"enablePrimaryStoragePool","params":"(StoragePoolVOprimaryStorage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/72/4ca8a474596505e6a75a7c09fc25744756157e.src","preCode":"    private void enablePrimaryStoragePool(StoragePoolVO primaryStorage) {\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Disabled)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorage.getId() + \" cannot be enabled. Storage pool state : \" +\n                    primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle dataStoreLifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n        ((PrimaryDataStoreLifeCycle)dataStoreLifeCycle).enableStoragePool(store);\n    }\n","realPath":"server/src/main/java/com/cloud/storage/StorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":766,"status":"N"},{"authorDate":"2020-10-26 21:24:14","commitOrder":2,"curCode":"    public PrimaryDataStoreInfo preparePrimaryStorageForMaintenance(Long primaryStorageId) throws ResourceUnavailableException, InsufficientCapacityException {\n        StoragePoolVO primaryStorage = null;\n        primaryStorage = _storagePoolDao.findById(primaryStorageId);\n\n        if (primaryStorage == null) {\n            String msg = \"Unable to obtain lock on the storage pool record in preparePrimaryStorageForMaintenance()\";\n            s_logger.error(msg);\n            throw new InvalidParameterValueException(msg);\n        }\n\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Up) && !primaryStorage.getStatus().equals(StoragePoolStatus.ErrorInMaintenance)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorageId + \" is not ready for migration, as the status is:\" + primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle lifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n\n        if (primaryStorage.getPoolType() == StoragePoolType.DatastoreCluster) {\n            if (primaryStorage.getStatus() == StoragePoolStatus.PrepareForMaintenance) {\n                throw new CloudRuntimeException(String.format(\"There is already a job running for preparation for maintenance of the storage pool %s\", primaryStorage.getUuid()));\n            }\n            handlePrepareDatastoreCluserMaintenance(lifeCycle, primaryStorageId);\n        }\n        lifeCycle.maintain(store);\n\n        return (PrimaryDataStoreInfo)_dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n    }\n","date":"2020-10-26 21:24:14","endLine":1551,"groupId":"10028","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"preparePrimaryStorageForMaintenance","params":"(LongprimaryStorageId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/62/24a774449f96b0026459687933837b180c64fd.src","preCode":"    public PrimaryDataStoreInfo preparePrimaryStorageForMaintenance(Long primaryStorageId) throws ResourceUnavailableException, InsufficientCapacityException {\n        StoragePoolVO primaryStorage = null;\n        primaryStorage = _storagePoolDao.findById(primaryStorageId);\n\n        if (primaryStorage == null) {\n            String msg = \"Unable to obtain lock on the storage pool record in preparePrimaryStorageForMaintenance()\";\n            s_logger.error(msg);\n            throw new InvalidParameterValueException(msg);\n        }\n\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Up) && !primaryStorage.getStatus().equals(StoragePoolStatus.ErrorInMaintenance)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorageId + \" is not ready for migration, as the status is:\" + primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle lifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n        lifeCycle.maintain(store);\n\n        return (PrimaryDataStoreInfo)_dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n    }\n","realPath":"server/src/main/java/com/cloud/storage/StorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1524,"status":"M"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"},{"authorTime":"2021-05-07 19:07:42","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    private void enablePrimaryStoragePool(StoragePoolVO primaryStorage) {\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Disabled)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorage.getId() + \" cannot be enabled. Storage pool state : \" +\n                    primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle dataStoreLifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n        ((PrimaryDataStoreLifeCycle)dataStoreLifeCycle).enableStoragePool(store);\n    }\n","date":"2018-01-20 05:49:27","endLine":776,"groupId":"101917","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"enablePrimaryStoragePool","params":"(StoragePoolVOprimaryStorage)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/72/4ca8a474596505e6a75a7c09fc25744756157e.src","preCode":"    private void enablePrimaryStoragePool(StoragePoolVO primaryStorage) {\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Disabled)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorage.getId() + \" cannot be enabled. Storage pool state : \" +\n                    primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle dataStoreLifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n        ((PrimaryDataStoreLifeCycle)dataStoreLifeCycle).enableStoragePool(store);\n    }\n","realPath":"server/src/main/java/com/cloud/storage/StorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":766,"status":"N"},{"authorDate":"2021-05-07 19:07:42","commitOrder":3,"curCode":"    public PrimaryDataStoreInfo preparePrimaryStorageForMaintenance(Long primaryStorageId) throws ResourceUnavailableException, InsufficientCapacityException {\n        StoragePoolVO primaryStorage = null;\n        primaryStorage = _storagePoolDao.findById(primaryStorageId);\n\n        if (primaryStorage == null) {\n            String msg = \"Unable to obtain lock on the storage pool record in preparePrimaryStorageForMaintenance()\";\n            s_logger.error(msg);\n            throw new InvalidParameterValueException(msg);\n        }\n\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Up) && !primaryStorage.getStatus().equals(StoragePoolStatus.ErrorInMaintenance)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorageId + \" is not ready for migration, as the status is:\" + primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle lifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n\n        if (primaryStorage.getPoolType() == StoragePoolType.DatastoreCluster) {\n            if (primaryStorage.getStatus() == StoragePoolStatus.PrepareForMaintenance) {\n                throw new CloudRuntimeException(String.format(\"There is already a job running for preparation for maintenance of the storage pool %s\", primaryStorage.getUuid()));\n            }\n            handlePrepareDatastoreClusterMaintenance(lifeCycle, primaryStorageId);\n        }\n        lifeCycle.maintain(store);\n\n        return (PrimaryDataStoreInfo)_dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n    }\n","date":"2021-05-07 19:07:42","endLine":1640,"groupId":"101917","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"preparePrimaryStorageForMaintenance","params":"(LongprimaryStorageId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5e/7be3083239ea08b0424522eb7063ad47451019.src","preCode":"    public PrimaryDataStoreInfo preparePrimaryStorageForMaintenance(Long primaryStorageId) throws ResourceUnavailableException, InsufficientCapacityException {\n        StoragePoolVO primaryStorage = null;\n        primaryStorage = _storagePoolDao.findById(primaryStorageId);\n\n        if (primaryStorage == null) {\n            String msg = \"Unable to obtain lock on the storage pool record in preparePrimaryStorageForMaintenance()\";\n            s_logger.error(msg);\n            throw new InvalidParameterValueException(msg);\n        }\n\n        if (!primaryStorage.getStatus().equals(StoragePoolStatus.Up) && !primaryStorage.getStatus().equals(StoragePoolStatus.ErrorInMaintenance)) {\n            throw new InvalidParameterValueException(\"Primary storage with id \" + primaryStorageId + \" is not ready for migration, as the status is:\" + primaryStorage.getStatus().toString());\n        }\n\n        DataStoreProvider provider = _dataStoreProviderMgr.getDataStoreProvider(primaryStorage.getStorageProviderName());\n        DataStoreLifeCycle lifeCycle = provider.getDataStoreLifeCycle();\n        DataStore store = _dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n\n        if (primaryStorage.getPoolType() == StoragePoolType.DatastoreCluster) {\n            if (primaryStorage.getStatus() == StoragePoolStatus.PrepareForMaintenance) {\n                throw new CloudRuntimeException(String.format(\"There is already a job running for preparation for maintenance of the storage pool %s\", primaryStorage.getUuid()));\n            }\n            handlePrepareDatastoreCluserMaintenance(lifeCycle, primaryStorageId);\n        }\n        lifeCycle.maintain(store);\n\n        return (PrimaryDataStoreInfo)_dataStoreMgr.getDataStore(primaryStorage.getId(), DataStoreRole.Primary);\n    }\n","realPath":"server/src/main/java/com/cloud/storage/StorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1613,"status":"M"}],"commitId":"cb167072a176054edfef2fdee403d0f71c3c7052","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2021-05-07 19:07:42","modifiedFileCount":"20","status":"M","submitter":"Rohit Yadav"}]
