[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testAutoRenewalEnabledWithNoExceptionsOnProvisioning() throws Exception {\n        overrideDefaultConfigValue(AutomaticCertRenewal, \"_defaultValue\", \"true\");\n        host.setManagementServerId(ManagementServerNode.getManagementServerId());\n        certMap.put(hostIp, expiredCertificate);\n        Assert.assertTrue(certMap.size() == 1);\n        task.runInContext();\n        Mockito.verify(caManager, Mockito.times(1)).provisionCertificate(host, false, null);\n        Mockito.verify(caManager, Mockito.times(0)).sendAlert(Mockito.any(Host.class), Mockito.anyString(), Mockito.anyString());\n    }\n","date":"2018-01-20 05:49:27","endLine":116,"groupId":"5717","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAutoRenewalEnabledWithNoExceptionsOnProvisioning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/56/4bbe36f6dc9c64f3bf527253bea9a17d5228d6.src","preCode":"    public void testAutoRenewalEnabledWithNoExceptionsOnProvisioning() throws Exception {\n        overrideDefaultConfigValue(AutomaticCertRenewal, \"_defaultValue\", \"true\");\n        host.setManagementServerId(ManagementServerNode.getManagementServerId());\n        certMap.put(hostIp, expiredCertificate);\n        Assert.assertTrue(certMap.size() == 1);\n        task.runInContext();\n        Mockito.verify(caManager, Mockito.times(1)).provisionCertificate(host, false, null);\n        Mockito.verify(caManager, Mockito.times(0)).sendAlert(Mockito.any(Host.class), Mockito.anyString(), Mockito.anyString());\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/ca/CABackgroundTaskTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testAutoRenewalEnabledWithExceptionsOnProvisioning() throws Exception {\n        overrideDefaultConfigValue(AutomaticCertRenewal, \"_defaultValue\", \"true\");\n        Mockito.when(caManager.provisionCertificate(Mockito.any(Host.class), Mockito.anyBoolean(), Mockito.anyString())).thenThrow(new CloudRuntimeException(\"some error\"));\n        host.setManagementServerId(ManagementServerNode.getManagementServerId());\n        certMap.put(hostIp, expiredCertificate);\n        Assert.assertTrue(certMap.size() == 1);\n        task.runInContext();\n        Mockito.verify(caManager, Mockito.times(1)).provisionCertificate(host, false, null);\n        Mockito.verify(caManager, Mockito.times(1)).sendAlert(Mockito.any(Host.class), Mockito.anyString(), Mockito.anyString());\n    }\n","date":"2018-01-20 05:49:27","endLine":128,"groupId":"5717","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAutoRenewalEnabledWithExceptionsOnProvisioning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/56/4bbe36f6dc9c64f3bf527253bea9a17d5228d6.src","preCode":"    public void testAutoRenewalEnabledWithExceptionsOnProvisioning() throws Exception {\n        overrideDefaultConfigValue(AutomaticCertRenewal, \"_defaultValue\", \"true\");\n        Mockito.when(caManager.provisionCertificate(Mockito.any(Host.class), Mockito.anyBoolean(), Mockito.anyString())).thenThrow(new CloudRuntimeException(\"some error\"));\n        host.setManagementServerId(ManagementServerNode.getManagementServerId());\n        certMap.put(hostIp, expiredCertificate);\n        Assert.assertTrue(certMap.size() == 1);\n        task.runInContext();\n        Mockito.verify(caManager, Mockito.times(1)).provisionCertificate(host, false, null);\n        Mockito.verify(caManager, Mockito.times(1)).sendAlert(Mockito.any(Host.class), Mockito.anyString(), Mockito.anyString());\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/ca/CABackgroundTaskTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2020-02-12 15:28:25","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void testAutoRenewalEnabledWithNoExceptionsOnProvisioning() throws Exception {\n        overrideDefaultConfigValue(AutomaticCertRenewal, \"_defaultValue\", \"true\");\n        host.setManagementServerId(ManagementServerNode.getManagementServerId());\n        certMap.put(hostIp, expiredCertificate);\n        Assert.assertTrue(certMap.size() == 1);\n        task.runInContext();\n        Mockito.verify(caManager, Mockito.times(1)).provisionCertificate(host, false, null);\n        Mockito.verify(caManager, Mockito.times(0)).sendAlert(Mockito.any(Host.class), Mockito.anyString(), Mockito.anyString());\n    }\n","date":"2018-01-20 05:49:27","endLine":116,"groupId":"101219","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAutoRenewalEnabledWithNoExceptionsOnProvisioning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/56/4bbe36f6dc9c64f3bf527253bea9a17d5228d6.src","preCode":"    public void testAutoRenewalEnabledWithNoExceptionsOnProvisioning() throws Exception {\n        overrideDefaultConfigValue(AutomaticCertRenewal, \"_defaultValue\", \"true\");\n        host.setManagementServerId(ManagementServerNode.getManagementServerId());\n        certMap.put(hostIp, expiredCertificate);\n        Assert.assertTrue(certMap.size() == 1);\n        task.runInContext();\n        Mockito.verify(caManager, Mockito.times(1)).provisionCertificate(host, false, null);\n        Mockito.verify(caManager, Mockito.times(0)).sendAlert(Mockito.any(Host.class), Mockito.anyString(), Mockito.anyString());\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/ca/CABackgroundTaskTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"N"},{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void testAutoRenewalEnabledWithExceptionsOnProvisioning() throws Exception {\n        overrideDefaultConfigValue(AutomaticCertRenewal, \"_defaultValue\", \"true\");\n        Mockito.when(caManager.provisionCertificate(any(Host.class), anyBoolean(), nullable(String.class))).thenThrow(new CloudRuntimeException(\"some error\"));\n        host.setManagementServerId(ManagementServerNode.getManagementServerId());\n        certMap.put(hostIp, expiredCertificate);\n        Assert.assertTrue(certMap.size() == 1);\n        task.runInContext();\n        Mockito.verify(caManager, Mockito.times(1)).provisionCertificate(host, false, null);\n        Mockito.verify(caManager, Mockito.times(1)).sendAlert(Mockito.any(Host.class), Mockito.anyString(), Mockito.anyString());\n    }\n","date":"2020-02-12 15:28:25","endLine":131,"groupId":"101219","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testAutoRenewalEnabledWithExceptionsOnProvisioning","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/06/3ff343ea23b65464ac8513d28f9304aebd528d.src","preCode":"    public void testAutoRenewalEnabledWithExceptionsOnProvisioning() throws Exception {\n        overrideDefaultConfigValue(AutomaticCertRenewal, \"_defaultValue\", \"true\");\n        Mockito.when(caManager.provisionCertificate(Mockito.any(Host.class), Mockito.anyBoolean(), Mockito.anyString())).thenThrow(new CloudRuntimeException(\"some error\"));\n        host.setManagementServerId(ManagementServerNode.getManagementServerId());\n        certMap.put(hostIp, expiredCertificate);\n        Assert.assertTrue(certMap.size() == 1);\n        task.runInContext();\n        Mockito.verify(caManager, Mockito.times(1)).provisionCertificate(host, false, null);\n        Mockito.verify(caManager, Mockito.times(1)).sendAlert(Mockito.any(Host.class), Mockito.anyString(), Mockito.anyString());\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/ca/CABackgroundTaskTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
