[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void checkAccess(Account caller, Domain domain) throws PermissionDeniedException {\n        for (SecurityChecker checker : _securityCheckers) {\n            if (checker.checkAccess(caller, domain)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to \" + domain + \" by \" + checker.getName());\n                }\n                return;\n            }\n        }\n\n        assert false : \"How can all of the security checkers pass on checking this caller?\";\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to \" + domain);\n    }\n","date":"2018-01-20 05:49:27","endLine":500,"groupId":"23341","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkAccess","params":"(Accountcaller@Domaindomain)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/dc/9fdc0a9e5ceb84c525bebd7b3cf2e1c8004aaa.src","preCode":"    public void checkAccess(Account caller, Domain domain) throws PermissionDeniedException {\n        for (SecurityChecker checker : _securityCheckers) {\n            if (checker.checkAccess(caller, domain)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to \" + domain + \" by \" + checker.getName());\n                }\n                return;\n            }\n        }\n\n        assert false : \"How can all of the security checkers pass on checking this caller?\";\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to \" + domain);\n    }\n","realPath":"server/src/main/java/com/cloud/user/AccountManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":488,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void checkAccess(User user, ControlledEntity entity) throws PermissionDeniedException {\n        for (SecurityChecker checker : _securityCheckers) {\n            if (checker.checkAccess(user, entity)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + user + \"to \" + entity + \"by \" + checker.getName());\n                }\n                return;\n            }\n        }\n        throw new PermissionDeniedException(\"There's no way to confirm \" + user + \" has access to \" + entity);\n    }\n","date":"2018-01-20 05:49:27","endLine":2770,"groupId":"7998","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkAccess","params":"(Useruser@ControlledEntityentity)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/dc/9fdc0a9e5ceb84c525bebd7b3cf2e1c8004aaa.src","preCode":"    public void checkAccess(User user, ControlledEntity entity) throws PermissionDeniedException {\n        for (SecurityChecker checker : _securityCheckers) {\n            if (checker.checkAccess(user, entity)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + user + \"to \" + entity + \"by \" + checker.getName());\n                }\n                return;\n            }\n        }\n        throw new PermissionDeniedException(\"There's no way to confirm \" + user + \" has access to \" + entity);\n    }\n","realPath":"server/src/main/java/com/cloud/user/AccountManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2760,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-05-08 20:42:05","commitOrder":2,"curCode":"    public void checkAccess(Account caller, Domain domain) throws PermissionDeniedException {\n        for (SecurityChecker checker : _securityCheckers) {\n            if (checker.checkAccess(caller, domain)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to \" + domain + \" by \" + checker.getName());\n                }\n                return;\n            }\n        }\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to \" + domain);\n    }\n","date":"2018-05-08 20:42:05","endLine":491,"groupId":"112040","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkAccess","params":"(Accountcaller@Domaindomain)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e9/762b1ceaf066aa913d89a2f7e1aa6f29df4885.src","preCode":"    public void checkAccess(Account caller, Domain domain) throws PermissionDeniedException {\n        for (SecurityChecker checker : _securityCheckers) {\n            if (checker.checkAccess(caller, domain)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + caller + \" to \" + domain + \" by \" + checker.getName());\n                }\n                return;\n            }\n        }\n\n        assert false : \"How can all of the security checkers pass on checking this caller?\";\n        throw new PermissionDeniedException(\"There's no way to confirm \" + caller + \" has access to \" + domain);\n    }\n","realPath":"server/src/main/java/com/cloud/user/AccountManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":481,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void checkAccess(User user, ControlledEntity entity) throws PermissionDeniedException {\n        for (SecurityChecker checker : _securityCheckers) {\n            if (checker.checkAccess(user, entity)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + user + \"to \" + entity + \"by \" + checker.getName());\n                }\n                return;\n            }\n        }\n        throw new PermissionDeniedException(\"There's no way to confirm \" + user + \" has access to \" + entity);\n    }\n","date":"2018-01-20 05:49:27","endLine":2770,"groupId":"112040","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkAccess","params":"(Useruser@ControlledEntityentity)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/dc/9fdc0a9e5ceb84c525bebd7b3cf2e1c8004aaa.src","preCode":"    public void checkAccess(User user, ControlledEntity entity) throws PermissionDeniedException {\n        for (SecurityChecker checker : _securityCheckers) {\n            if (checker.checkAccess(user, entity)) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Access granted to \" + user + \"to \" + entity + \"by \" + checker.getName());\n                }\n                return;\n            }\n        }\n        throw new PermissionDeniedException(\"There's no way to confirm \" + user + \" has access to \" + entity);\n    }\n","realPath":"server/src/main/java/com/cloud/user/AccountManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2760,"status":"N"}],"commitId":"bc8a0c1090e64e89f8f26cabcce1a15189f7fd0d","commitMessage":"@@@Remove \"self-injection\" of AccountManagerImpl (#2619)\n\nWhile working on other PRs I noticed that the singleton AccountManagerImpl had a reference for itself. That is not needed. Therefore.  I removed it.","date":"2018-05-08 20:42:05","modifiedFileCount":"1","status":"M","submitter":"Rafael Weing?rtner"}]
