[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean setupDns(final Network network, final Provider provider) {\n        final boolean dnsProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dns, provider);\n        final boolean dhcpProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dhcp, provider);\n\n        final boolean setupDns = dnsProvided || dhcpProvided;\n        return setupDns;\n    }\n","date":"2018-01-20 05:49:27","endLine":3476,"groupId":"11939","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setupDns","params":"(finalNetworknetwork@finalProviderprovider)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ce/c2e5926c174f9682d496fa78ab8a08777eece3.src","preCode":"    public boolean setupDns(final Network network, final Provider provider) {\n        final boolean dnsProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dns, provider);\n        final boolean dhcpProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dhcp, provider);\n\n        final boolean setupDns = dnsProvided || dhcpProvided;\n        return setupDns;\n    }\n","realPath":"engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":3470,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public SetupGuestNetworkCommand createSetupGuestNetworkCommand(final DomainRouterVO router, final boolean add, final NicProfile guestNic) {\n        final Network network = _networkModel.getNetwork(guestNic.getNetworkId());\n\n        String defaultDns1 = null;\n        String defaultDns2 = null;\n\n        final boolean dnsProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dns, Provider.VPCVirtualRouter);\n        final boolean dhcpProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dhcp, Provider.VPCVirtualRouter);\n\n        final boolean setupDns = dnsProvided || dhcpProvided;\n\n        if (setupDns) {\n            defaultDns1 = guestNic.getIPv4Dns1();\n            defaultDns2 = guestNic.getIPv4Dns2();\n        }\n\n        final Nic nic = _nicDao.findByNtwkIdAndInstanceId(network.getId(), router.getId());\n        final String networkDomain = network.getNetworkDomain();\n        final String dhcpRange = getGuestDhcpRange(guestNic, network, _entityMgr.findById(DataCenter.class, network.getDataCenterId()));\n\n        final NicProfile nicProfile = _networkModel.getNicProfile(router, nic.getNetworkId(), null);\n\n        final SetupGuestNetworkCommand setupCmd = new SetupGuestNetworkCommand(dhcpRange, networkDomain, router.getIsRedundantRouter(), defaultDns1, defaultDns2, add, _itMgr.toNicTO(nicProfile,\n                router.getHypervisorType()));\n\n        final String brd = NetUtils.long2Ip(NetUtils.ip2Long(guestNic.getIPv4Address()) | ~NetUtils.ip2Long(guestNic.getIPv4Netmask()));\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, _routerControlHelper.getRouterControlIp(router.getId()));\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, _routerControlHelper.getRouterIpInNetwork(network.getId(), router.getId()));\n\n        setupCmd.setAccessDetail(NetworkElementCommand.GUEST_NETWORK_GATEWAY, network.getGateway());\n        setupCmd.setAccessDetail(NetworkElementCommand.GUEST_BRIDGE, brd);\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\n        if (network.getBroadcastDomainType() == BroadcastDomainType.Vlan) {\n            final long guestVlanTag = Long.parseLong(BroadcastDomainType.Vlan.getValueFrom(network.getBroadcastUri()));\n            setupCmd.setAccessDetail(NetworkElementCommand.GUEST_VLAN_TAG, String.valueOf(guestVlanTag));\n        }\n\n        return setupCmd;\n    }\n","date":"2018-01-20 05:49:27","endLine":1005,"groupId":"21945","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createSetupGuestNetworkCommand","params":"(finalDomainRouterVOrouter@finalbooleanadd@finalNicProfileguestNic)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c8/d85fe26446d85c55603278ef3ea9f0a40d1f2e.src","preCode":"    public SetupGuestNetworkCommand createSetupGuestNetworkCommand(final DomainRouterVO router, final boolean add, final NicProfile guestNic) {\n        final Network network = _networkModel.getNetwork(guestNic.getNetworkId());\n\n        String defaultDns1 = null;\n        String defaultDns2 = null;\n\n        final boolean dnsProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dns, Provider.VPCVirtualRouter);\n        final boolean dhcpProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dhcp, Provider.VPCVirtualRouter);\n\n        final boolean setupDns = dnsProvided || dhcpProvided;\n\n        if (setupDns) {\n            defaultDns1 = guestNic.getIPv4Dns1();\n            defaultDns2 = guestNic.getIPv4Dns2();\n        }\n\n        final Nic nic = _nicDao.findByNtwkIdAndInstanceId(network.getId(), router.getId());\n        final String networkDomain = network.getNetworkDomain();\n        final String dhcpRange = getGuestDhcpRange(guestNic, network, _entityMgr.findById(DataCenter.class, network.getDataCenterId()));\n\n        final NicProfile nicProfile = _networkModel.getNicProfile(router, nic.getNetworkId(), null);\n\n        final SetupGuestNetworkCommand setupCmd = new SetupGuestNetworkCommand(dhcpRange, networkDomain, router.getIsRedundantRouter(), defaultDns1, defaultDns2, add, _itMgr.toNicTO(nicProfile,\n                router.getHypervisorType()));\n\n        final String brd = NetUtils.long2Ip(NetUtils.ip2Long(guestNic.getIPv4Address()) | ~NetUtils.ip2Long(guestNic.getIPv4Netmask()));\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, _routerControlHelper.getRouterControlIp(router.getId()));\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, _routerControlHelper.getRouterIpInNetwork(network.getId(), router.getId()));\n\n        setupCmd.setAccessDetail(NetworkElementCommand.GUEST_NETWORK_GATEWAY, network.getGateway());\n        setupCmd.setAccessDetail(NetworkElementCommand.GUEST_BRIDGE, brd);\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\n        if (network.getBroadcastDomainType() == BroadcastDomainType.Vlan) {\n            final long guestVlanTag = Long.parseLong(BroadcastDomainType.Vlan.getValueFrom(network.getBroadcastUri()));\n            setupCmd.setAccessDetail(NetworkElementCommand.GUEST_VLAN_TAG, String.valueOf(guestVlanTag));\n        }\n\n        return setupCmd;\n    }\n","realPath":"server/src/main/java/com/cloud/network/router/CommandSetupHelper.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":966,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2021-03-24 15:16:24","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public boolean setupDns(final Network network, final Provider provider) {\n        final boolean dnsProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dns, provider);\n        final boolean dhcpProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dhcp, provider);\n\n        final boolean setupDns = dnsProvided || dhcpProvided;\n        return setupDns;\n    }\n","date":"2018-01-20 05:49:27","endLine":3476,"groupId":"10628","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setupDns","params":"(finalNetworknetwork@finalProviderprovider)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ce/c2e5926c174f9682d496fa78ab8a08777eece3.src","preCode":"    public boolean setupDns(final Network network, final Provider provider) {\n        final boolean dnsProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dns, provider);\n        final boolean dhcpProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dhcp, provider);\n\n        final boolean setupDns = dnsProvided || dhcpProvided;\n        return setupDns;\n    }\n","realPath":"engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":3470,"status":"N"},{"authorDate":"2021-03-24 15:16:24","commitOrder":2,"curCode":"    public SetupGuestNetworkCommand createSetupGuestNetworkCommand(final DomainRouterVO router, final boolean add, final NicProfile guestNic) {\n        final Network network = _networkModel.getNetwork(guestNic.getNetworkId());\n\n        String defaultDns1 = null;\n        String defaultDns2 = null;\n\n        final boolean dnsProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dns, Provider.VPCVirtualRouter);\n        final boolean dhcpProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dhcp, Provider.VPCVirtualRouter);\n\n        final boolean setupDns = dnsProvided || dhcpProvided;\n\n        if (setupDns) {\n            final DataCenterVO dcVo = _dcDao.findById(router.getDataCenterId());\n            if (guestNic.getIPv4Dns1() != null) {\n                defaultDns1 = guestNic.getIPv4Dns1();\n            } else {\n                defaultDns1 = dcVo.getDns1();\n            }\n            if (guestNic.getIPv4Dns2() != null) {\n                defaultDns2 = guestNic.getIPv4Dns2();\n            } else {\n                defaultDns2 = dcVo.getDns2();\n            }\n        }\n\n        final Nic nic = _nicDao.findByNtwkIdAndInstanceId(network.getId(), router.getId());\n        final String networkDomain = network.getNetworkDomain();\n        final String dhcpRange = getGuestDhcpRange(guestNic, network, _entityMgr.findById(DataCenter.class, network.getDataCenterId()));\n\n        final NicProfile nicProfile = _networkModel.getNicProfile(router, nic.getNetworkId(), null);\n\n        final SetupGuestNetworkCommand setupCmd = new SetupGuestNetworkCommand(dhcpRange, networkDomain, router.getIsRedundantRouter(), defaultDns1, defaultDns2, add, _itMgr.toNicTO(nicProfile,\n                router.getHypervisorType()));\n\n        final String brd = NetUtils.long2Ip(NetUtils.ip2Long(guestNic.getIPv4Address()) | ~NetUtils.ip2Long(guestNic.getIPv4Netmask()));\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, _routerControlHelper.getRouterControlIp(router.getId()));\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, _routerControlHelper.getRouterIpInNetwork(network.getId(), router.getId()));\n\n        setupCmd.setAccessDetail(NetworkElementCommand.GUEST_NETWORK_GATEWAY, network.getGateway());\n        setupCmd.setAccessDetail(NetworkElementCommand.GUEST_BRIDGE, brd);\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\n        if (network.getBroadcastDomainType() == BroadcastDomainType.Vlan) {\n            final long guestVlanTag = Long.parseLong(BroadcastDomainType.Vlan.getValueFrom(network.getBroadcastUri()));\n            setupCmd.setAccessDetail(NetworkElementCommand.GUEST_VLAN_TAG, String.valueOf(guestVlanTag));\n        }\n\n        return setupCmd;\n    }\n","date":"2021-03-24 15:16:24","endLine":1047,"groupId":"10628","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createSetupGuestNetworkCommand","params":"(finalDomainRouterVOrouter@finalbooleanadd@finalNicProfileguestNic)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e3/44b462b50a8c7f3fe4e4cb436d9ba2bed90fcc.src","preCode":"    public SetupGuestNetworkCommand createSetupGuestNetworkCommand(final DomainRouterVO router, final boolean add, final NicProfile guestNic) {\n        final Network network = _networkModel.getNetwork(guestNic.getNetworkId());\n\n        String defaultDns1 = null;\n        String defaultDns2 = null;\n\n        final boolean dnsProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dns, Provider.VPCVirtualRouter);\n        final boolean dhcpProvided = _networkModel.isProviderSupportServiceInNetwork(network.getId(), Service.Dhcp, Provider.VPCVirtualRouter);\n\n        final boolean setupDns = dnsProvided || dhcpProvided;\n\n        if (setupDns) {\n            defaultDns1 = guestNic.getIPv4Dns1();\n            defaultDns2 = guestNic.getIPv4Dns2();\n        }\n\n        final Nic nic = _nicDao.findByNtwkIdAndInstanceId(network.getId(), router.getId());\n        final String networkDomain = network.getNetworkDomain();\n        final String dhcpRange = getGuestDhcpRange(guestNic, network, _entityMgr.findById(DataCenter.class, network.getDataCenterId()));\n\n        final NicProfile nicProfile = _networkModel.getNicProfile(router, nic.getNetworkId(), null);\n\n        final SetupGuestNetworkCommand setupCmd = new SetupGuestNetworkCommand(dhcpRange, networkDomain, router.getIsRedundantRouter(), defaultDns1, defaultDns2, add, _itMgr.toNicTO(nicProfile,\n                router.getHypervisorType()));\n\n        final String brd = NetUtils.long2Ip(NetUtils.ip2Long(guestNic.getIPv4Address()) | ~NetUtils.ip2Long(guestNic.getIPv4Netmask()));\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, _routerControlHelper.getRouterControlIp(router.getId()));\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, _routerControlHelper.getRouterIpInNetwork(network.getId(), router.getId()));\n\n        setupCmd.setAccessDetail(NetworkElementCommand.GUEST_NETWORK_GATEWAY, network.getGateway());\n        setupCmd.setAccessDetail(NetworkElementCommand.GUEST_BRIDGE, brd);\n        setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\n        if (network.getBroadcastDomainType() == BroadcastDomainType.Vlan) {\n            final long guestVlanTag = Long.parseLong(BroadcastDomainType.Vlan.getValueFrom(network.getBroadcastUri()));\n            setupCmd.setAccessDetail(NetworkElementCommand.GUEST_VLAN_TAG, String.valueOf(guestVlanTag));\n        }\n\n        return setupCmd;\n    }\n","realPath":"server/src/main/java/com/cloud/network/router/CommandSetupHelper.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":999,"status":"M"}],"commitId":"9f730eabfa76e42773114eaf94d57cd33aae6ae0","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n","date":"2021-03-24 15:16:24","modifiedFileCount":"7","status":"M","submitter":"Rohit Yadav"}]
