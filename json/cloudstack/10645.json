[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","date":"2018-01-20 05:49:27","endLine":1155,"groupId":"13852","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getDetails","params":"(VolumeInfovolumeInfo@DataStoredataStore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f0/2fdc495f9b5b891e53b7718e224d5f4b8d28d3.src","preCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","realPath":"engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/VolumeOrchestrator.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1129,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId(), hostId);\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM &&\n                        volumeToAttachStoragePool.isManaged() &&\n                        volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(),\n                        vm.getServiceOfferingId(), volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() +  \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if(host!=null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if(attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","date":"2018-01-20 05:49:27","endLine":2777,"groupId":"19783","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAttachVolumeCommand","params":"(UserVmVOvm@VolumeVOvolumeToAttach@LongdeviceId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/be/a9b4ad5bfb40d1fc2f11f88b454aac2e518b50.src","preCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId(), hostId);\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM &&\n                        volumeToAttachStoragePool.isManaged() &&\n                        volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(),\n                        vm.getServiceOfferingId(), volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() +  \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if(host!=null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if(attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","realPath":"server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2616,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-09-11 22:23:19","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","date":"2018-01-20 05:49:27","endLine":1155,"groupId":"13852","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getDetails","params":"(VolumeInfovolumeInfo@DataStoredataStore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f0/2fdc495f9b5b891e53b7718e224d5f4b8d28d3.src","preCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","realPath":"engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/VolumeOrchestrator.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1129,"status":"N"},{"authorDate":"2018-09-11 22:23:19","commitOrder":2,"curCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        verifyManagedStorage(volumeToAttachStoragePool.getId(), hostId);\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId(), hostId);\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","date":"2018-09-11 22:23:19","endLine":2942,"groupId":"19783","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAttachVolumeCommand","params":"(UserVmVOvm@VolumeVOvolumeToAttach@LongdeviceId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/31/60dd3082880baa072dde0b4da79279b0263344.src","preCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId(), hostId);\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","realPath":"server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2782,"status":"M"}],"commitId":"d12c106a47db1e2fc5634a9f8dc8c521eba65bfc","commitMessage":"@@@Restrict the number of managed clustered file systems per compute cluster (#2500)\n\n* Restrict the number of managed clustered file systems per compute cluster","date":"2018-09-11 22:23:19","modifiedFileCount":"8","status":"M","submitter":"Mike Tutkowski"},{"authorTime":"2019-05-14 17:43:57","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","date":"2018-01-20 05:49:27","endLine":1155,"groupId":"13852","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getDetails","params":"(VolumeInfovolumeInfo@DataStoredataStore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f0/2fdc495f9b5b891e53b7718e224d5f4b8d28d3.src","preCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","realPath":"engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/VolumeOrchestrator.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1129,"status":"N"},{"authorDate":"2019-05-14 17:43:57","commitOrder":3,"curCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        verifyManagedStorage(volumeToAttachStoragePool.getId(), hostId);\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId());\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM &&\n                            volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged() &&\n                            volumeToAttach.getPath() == null && volumeToAttach.get_iScsiName() != null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","date":"2019-05-14 17:45:17","endLine":2975,"groupId":"25679","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAttachVolumeCommand","params":"(UserVmVOvm@VolumeVOvolumeToAttach@LongdeviceId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b2/a395b4ef83d783246117292835c631fb59a428.src","preCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        verifyManagedStorage(volumeToAttachStoragePool.getId(), hostId);\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId(), hostId);\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","realPath":"server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2814,"status":"M"}],"commitId":"0700d91a6857019999bd25a8d1e5a9e46780e971","commitMessage":"@@@Merge branch '4.12'\n\n- Fixes PR #3146 db cleanup to the correct 4.12->4.13 upgrade path\n- Fixes failing unit test due to jdk specific changes after forward\n  merging\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2019-05-14 17:45:17","modifiedFileCount":"8","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2019-07-22 20:03:00","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":4,"curCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","date":"2018-01-20 05:49:27","endLine":1155,"groupId":"13852","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getDetails","params":"(VolumeInfovolumeInfo@DataStoredataStore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f0/2fdc495f9b5b891e53b7718e224d5f4b8d28d3.src","preCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","realPath":"engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/VolumeOrchestrator.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1129,"status":"N"},{"authorDate":"2019-07-22 20:03:00","commitOrder":4,"curCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        if (volumeToAttachStoragePool != null) {\n            verifyManagedStorage(volumeToAttachStoragePool.getId(), hostId);\n        }\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId());\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM &&\n                            volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged() &&\n                            volumeToAttach.getPath() == null && volumeToAttach.get_iScsiName() != null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","date":"2019-07-22 20:03:00","endLine":2998,"groupId":"25679","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAttachVolumeCommand","params":"(UserVmVOvm@VolumeVOvolumeToAttach@LongdeviceId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2a/3d3957828925ac217472f4b893428fa7ccc8bd.src","preCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        verifyManagedStorage(volumeToAttachStoragePool.getId(), hostId);\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId());\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM &&\n                            volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged() &&\n                            volumeToAttach.getPath() == null && volumeToAttach.get_iScsiName() != null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","realPath":"server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2835,"status":"M"}],"commitId":"38f97c65b81b5b99d6dfef7641e679f79b42deed","commitMessage":"@@@server: Fix hardcoded max data volumes when VM has been created but not started before (#3494)\n\nWhen VM is created but not started on any host.  attaching a volume on it causes the maximum number of allowed volumes to be 6 (hardcoded).","date":"2019-07-22 20:03:00","modifiedFileCount":"4","status":"M","submitter":"Nicolas Vazquez"},{"authorTime":"2020-10-26 21:24:14","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":5,"curCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n\n         if (volume.getPoolId() != null) {\n            StoragePoolVO poolVO = _storagePoolDao.findById(volume.getPoolId());\n            if (poolVO.getParent() != 0L) {\n                details.put(DiskTO.PROTOCOL_TYPE, Storage.StoragePoolType.DatastoreCluster.toString());\n            }\n        }\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","date":"2020-10-26 21:24:14","endLine":1279,"groupId":"5869","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getDetails","params":"(VolumeInfovolumeInfo@DataStoredataStore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/05/732e5841131a58521d8eddd1591064c41e2dee.src","preCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","realPath":"engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/VolumeOrchestrator.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1247,"status":"M"},{"authorDate":"2020-10-26 21:24:14","commitOrder":5,"curCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        if (volumeToAttachStoragePool != null) {\n            verifyManagedStorage(volumeToAttachStoragePool.getId(), hostId);\n        }\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId());\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n\n                if (volumeToAttach.getPoolId() != null) {\n                    StoragePoolVO poolVO = _storagePoolDao.findById(volumeToAttach.getPoolId());\n                    if (poolVO.getParent() != 0L) {\n                        details.put(DiskTO.PROTOCOL_TYPE, Storage.StoragePoolType.DatastoreCluster.toString());\n                    }\n                }\n\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n\n                    String chainInfo = answer.getContextParam(\"chainInfo\");\n                    if (chainInfo != null) {\n                        volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n                        volumeToAttach.setChainInfo(chainInfo);\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM &&\n                            volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged() &&\n                            volumeToAttach.getPath() == null && volumeToAttach.get_iScsiName() != null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","date":"2020-10-26 21:24:14","endLine":3187,"groupId":"18608","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAttachVolumeCommand","params":"(UserVmVOvm@VolumeVOvolumeToAttach@LongdeviceId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ad/3dd30ab8d1c8c838c8dae95af3ba822dffa96a.src","preCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        if (volumeToAttachStoragePool != null) {\n            verifyManagedStorage(volumeToAttachStoragePool.getId(), hostId);\n        }\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId());\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM &&\n                            volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged() &&\n                            volumeToAttach.getPath() == null && volumeToAttach.get_iScsiName() != null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","realPath":"server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":3010,"status":"M"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"},{"authorTime":"2021-02-24 17:28:33","codes":[{"authorDate":"2021-02-24 17:28:33","commitOrder":6,"curCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n        details.put(StorageManager.STORAGE_POOL_DISK_WAIT.toString(), String.valueOf(StorageManager.STORAGE_POOL_DISK_WAIT.valueIn(storagePool.getId())));\n\n         if (volume.getPoolId() != null) {\n            StoragePoolVO poolVO = _storagePoolDao.findById(volume.getPoolId());\n            if (poolVO.getParent() != 0L) {\n                details.put(DiskTO.PROTOCOL_TYPE, Storage.StoragePoolType.DatastoreCluster.toString());\n            }\n        }\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","date":"2021-02-24 17:28:33","endLine":1362,"groupId":"13852","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getDetails","params":"(VolumeInfovolumeInfo@DataStoredataStore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e6/260b851ecc1508cb4f1a51d66bbd1fd4036703.src","preCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n\n         if (volume.getPoolId() != null) {\n            StoragePoolVO poolVO = _storagePoolDao.findById(volume.getPoolId());\n            if (poolVO.getParent() != 0L) {\n                details.put(DiskTO.PROTOCOL_TYPE, Storage.StoragePoolType.DatastoreCluster.toString());\n            }\n        }\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","realPath":"engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/VolumeOrchestrator.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1329,"status":"M"},{"authorDate":"2021-02-24 17:28:33","commitOrder":6,"curCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        if (volumeToAttachStoragePool != null) {\n            verifyManagedStorage(volumeToAttachStoragePool.getId(), hostId);\n        }\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId());\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n                details.put(StorageManager.STORAGE_POOL_DISK_WAIT.toString(), String.valueOf(StorageManager.STORAGE_POOL_DISK_WAIT.valueIn(volumeToAttachStoragePool.getId())));\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n\n                if (volumeToAttach.getPoolId() != null) {\n                    StoragePoolVO poolVO = _storagePoolDao.findById(volumeToAttach.getPoolId());\n                    if (poolVO.getParent() != 0L) {\n                        details.put(DiskTO.PROTOCOL_TYPE, Storage.StoragePoolType.DatastoreCluster.toString());\n                    }\n                }\n\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n\n                    String chainInfo = answer.getContextParam(\"chainInfo\");\n                    if (chainInfo != null) {\n                        volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n                        volumeToAttach.setChainInfo(chainInfo);\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM &&\n                            volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged() &&\n                            volumeToAttach.getPath() == null && volumeToAttach.get_iScsiName() != null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n\n                    if (host != null && volumeToAttachStoragePool.getPoolType() == Storage.StoragePoolType.PowerFlex) {\n                        \r\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","date":"2021-02-24 17:28:33","endLine":3331,"groupId":"25563","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAttachVolumeCommand","params":"(UserVmVOvm@VolumeVOvolumeToAttach@LongdeviceId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/6f/362a7720f196a33610c1a0f51728a98c277271.src","preCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        if (volumeToAttachStoragePool != null) {\n            verifyManagedStorage(volumeToAttachStoragePool.getId(), hostId);\n        }\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId());\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n\n                if (volumeToAttach.getPoolId() != null) {\n                    StoragePoolVO poolVO = _storagePoolDao.findById(volumeToAttach.getPoolId());\n                    if (poolVO.getParent() != 0L) {\n                        details.put(DiskTO.PROTOCOL_TYPE, Storage.StoragePoolType.DatastoreCluster.toString());\n                    }\n                }\n\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n\n                    String chainInfo = answer.getContextParam(\"chainInfo\");\n                    if (chainInfo != null) {\n                        volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n                        volumeToAttach.setChainInfo(chainInfo);\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM &&\n                            volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged() &&\n                            volumeToAttach.getPath() == null && volumeToAttach.get_iScsiName() != null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","realPath":"server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":3148,"status":"M"}],"commitId":"eba186aa40f16911c019bf06cd33d7d0cbbc303b","commitMessage":"@@@storage: New Dell EMC PowerFlex Plugin (formerly ScaleIO.  VxFlexOS) (#4304)\n\nAdded support for PowerFlex/ScaleIO (v3.5 onwards) storage pool as a primary storage in CloudStack (for KVM hypervisor) and enabled VM/Volume operations on that pool (using pool tag).\nPlease find more details in the FS here:\nhttps://cwiki.apache.org/confluence/x/cDl4CQ\n\nDocumentation PR: apache/cloudstack-documentation#169\n\nThis enables support for PowerFlex/ScaleIO (v3.5 onwards) storage pool as a primary storage in CloudStack\n\nOther improvements addressed in addition to PowerFlex/ScaleIO support:\n\n- Added support for config drives in host cache for KVM\n\t=> Changed configuration \"vm.configdrive.primarypool.enabled\" scope from Global to Zone level\n\t=> Introduced new zone level configuration \"vm.configdrive.force.host.cache.use\" (default: false) to force host cache for config drives\n\t=> Introduced new zone level configuration \"vm.configdrive.use.host.cache.on.unsupported.pool\" (default: true) to use host cache for config drives when storage pool doesn't support config drive\n\t=> Added new parameter \"host.cache.location\" (default: /var/cache/cloud) in KVM agent.properties for specifying the host cache path and create config drives on the \"/config\" directory on the host cache path\n\t=> Maintain the config drive location and use it when required on any config drive operation (migrate.  delete)\n\n- Detect virtual size from the template URL while registering direct download qcow2 (of KVM hypervisor) templates\n\n- Updated full deployment destination for preparing the network(s) on VM start\n\n- Propagate the direct download certificates uploaded to the newly added KVM hosts\n\n- Discover the template size for direct download templates using any available host from the zones specified on template registration\n\t=> When zones are not specified while registering template.  template size discovery is performed using any available host.  which is picked up randomly from one of the available zones\n\n- Release the VM resources when VM is sync-ed to Stopped state on PowerReportMissing (after graceful period)\n\n- Retry VM deployment/start when the host cannot grant access to volume/template\n\n- Mark never-used or downloaded templates as Destroyed on deletion.  without sending any DeleteCommand\n\t=> Do not trigger any DeleteCommand for never-used or downloaded templates as these doesn't exist and cannot be deleted from the datastore\n\n- Check the router filesystem is writable or not.  before performing health checks\n\t=> Introduce a new test \"filesystem.writable.test\" to check the filesystem is writable or not\n\t=> The router health checks keeps the config info at \"/var/cache/cloud\" and updates the monitor results at \"/root\" for health checks.  both are different partitions. So.  test at both the locations.\n\t=> Added new script: \"filesystem_writable_check.py\" at /opt/cloud/bin/ to check the filesystem is writable or not\n\n- Fixed NPE issue.  template is null for DATA disks. Copy template to target storage for ROOT disk (with template id).  skip DATA disk(s)\n\n* Addressed some issues for few operations on PowerFlex storage pool.\n\n- Updated migration volume operation to sync the status and wait for migration to complete.\n\n- Updated VM Snapshot naming.  for uniqueness in ScaleIO volume name when more than one volume exists in the VM.\n\n- Added sync lock while spooling managed storage template before volume creation from the template (non-direct download).\n\n- Updated resize volume error message string.\n\n- Blocked the below operations on PowerFlex storage pool:\n  -> Extract Volume\n  -> Create Snapshot for VMSnapshot\n\n* Added the PowerFlex/ScaleIO client connection pool to manage the ScaleIO gateway clients.  which uses a single gateway client per Powerflex/ScaleIO storage pool and renews it when the session token expires.\n\n- The token is valid for 8 hours from the time it was created.  unless there has been no activity for 10 minutes.\n  Reference: https://cpsdocs.dellemc.com/bundle/PF_REST_API_RG/page/GUID-92430F19-9F44-42B6-B898-87D5307AE59B.html\n\nOther fixes included:\n\n- Fail the VM deployment when the host specified in the deployVirtualMachine cmd is not in the right state (i.e. either Resource State is not Enabled or Status is not Up)\n\n- Use the physical file size of the template to check the free space availability on the host.  while downloading the direct download templates.\n\n- Perform basic tests (for connectivity and file system) on router before updating the health check config data\n\t=> Validate the basic tests (connectivity and file system check) on router\n\t=> Cleanup the health check results when router is destroyed\n\n* Updated PowerFlex/ScaleIO storage plugin version to 4.16.0.0\n\n* UI Changes to support storage plugin for PowerFlex/ScaleIO storage pool.\n- PowerFlex pool URL generated from the UI inputs(Gateway.  Username.  Password.  Storage Pool) when adding \"PowerFlex\" Primary Storage\n- Updated protocol to \"custom\" for PowerFlex provider\n- Allow VM Snapshot for stopped VM on KVM hypervisor and PowerFlex/ScaleIO storage pool\n\nand Minor improvements in PowerFlex/ScaleIO storage plugin code\n\n* Added support for PowerFlex/ScaleIO volume migration across different PowerFlex storage instances.\n\n- findStoragePoolsForMigration API returns PowerFlex pool(s) of different instance as suitable pool(s).  for volume(s) on PowerFlex storage pool.\n- Volume(s) with snapshots are not allowed to migrate to different PowerFlex instance.\n- Volume(s) of running VM are not allowed to migrate to other PowerFlex storage pools.\n- Volume migration from PowerFlex pool to Non-PowerFlex pool.  and vice versa are not supported.\n\n* Fixed change service offering smoke tests in test_service_offerings.py.  test_vm_snapshots.py\n\n* Added the PowerFlex/ScaleIO volume/snapshot name to the paths of respective CloudStack resources (Templates.  Volumes.  Snapshots and VM Snapshots)\n\n* Added new response parameter ?supportsStorageSnapshot? (true/false) to volume response.  and Updated UI to hide the async backup option while taking snapshot for volume(s) with storage snapshot support.\n\n* Fix to remove the duplicate zone wide pools listed while finding storage pools for migration\n\n* Updated PowerFlex/ScaleIO volume migration checks and rollback migration on failure\n\n* Fixed the PowerFlex/ScaleIO volume name inconsistency issue in the volume path after migration.  due to rename failure","date":"2021-02-24 17:28:33","modifiedFileCount":"112","status":"M","submitter":"sureshanaparti"},{"authorTime":"2021-08-31 09:27:45","codes":[{"authorDate":"2021-02-24 17:28:33","commitOrder":7,"curCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n        details.put(StorageManager.STORAGE_POOL_DISK_WAIT.toString(), String.valueOf(StorageManager.STORAGE_POOL_DISK_WAIT.valueIn(storagePool.getId())));\n\n         if (volume.getPoolId() != null) {\n            StoragePoolVO poolVO = _storagePoolDao.findById(volume.getPoolId());\n            if (poolVO.getParent() != 0L) {\n                details.put(DiskTO.PROTOCOL_TYPE, Storage.StoragePoolType.DatastoreCluster.toString());\n            }\n        }\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","date":"2021-02-24 17:28:33","endLine":1362,"groupId":"10645","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getDetails","params":"(VolumeInfovolumeInfo@DataStoredataStore)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e6/260b851ecc1508cb4f1a51d66bbd1fd4036703.src","preCode":"    private Map<String, String> getDetails(VolumeInfo volumeInfo, DataStore dataStore) {\n        Map<String, String> details = new HashMap<String, String>();\n\n        StoragePoolVO storagePool = _storagePoolDao.findById(dataStore.getId());\n\n        details.put(DiskTO.MANAGED, String.valueOf(storagePool.isManaged()));\n        details.put(DiskTO.STORAGE_HOST, storagePool.getHostAddress());\n        details.put(DiskTO.STORAGE_PORT, String.valueOf(storagePool.getPort()));\n        details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeInfo.getSize()));\n        details.put(DiskTO.IQN, volumeInfo.get_iScsiName());\n        details.put(DiskTO.MOUNT_POINT, volumeInfo.get_iScsiName());\n\n        VolumeVO volume = _volumeDao.findById(volumeInfo.getId());\n        details.put(DiskTO.PROTOCOL_TYPE, (volume.getPoolType() != null) ? volume.getPoolType().toString() : null);\n        details.put(StorageManager.STORAGE_POOL_DISK_WAIT.toString(), String.valueOf(StorageManager.STORAGE_POOL_DISK_WAIT.valueIn(storagePool.getId())));\n\n         if (volume.getPoolId() != null) {\n            StoragePoolVO poolVO = _storagePoolDao.findById(volume.getPoolId());\n            if (poolVO.getParent() != 0L) {\n                details.put(DiskTO.PROTOCOL_TYPE, Storage.StoragePoolType.DatastoreCluster.toString());\n            }\n        }\n\n        ChapInfo chapInfo = volService.getChapInfo(volumeInfo, dataStore);\n\n        if (chapInfo != null) {\n            details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n            details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n            details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n            details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n        }\n\n        return details;\n    }\n","realPath":"engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/VolumeOrchestrator.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1329,"status":"N"},{"authorDate":"2021-08-31 09:27:45","commitOrder":7,"curCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n        HostVO host = getHostForVmVolumeAttach(vm, volumeToAttachStoragePool);\n        Long hostId = host == null ? null : host.getId();\n        if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n            sendCommand = true;\n        }\n\n        if (host != null && host.getHypervisorType() == HypervisorType.XenServer &&\n                volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n            sendCommand = true;\n        }\n\n        if (volumeToAttachStoragePool != null) {\n            verifyManagedStorage(volumeToAttachStoragePool.getId(), hostId);\n        }\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId());\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n                details.put(StorageManager.STORAGE_POOL_DISK_WAIT.toString(), String.valueOf(StorageManager.STORAGE_POOL_DISK_WAIT.valueIn(volumeToAttachStoragePool.getId())));\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n\n                if (volumeToAttach.getPoolId() != null) {\n                    StoragePoolVO poolVO = _storagePoolDao.findById(volumeToAttach.getPoolId());\n                    if (poolVO.getParent() != 0L) {\n                        details.put(DiskTO.PROTOCOL_TYPE, Storage.StoragePoolType.DatastoreCluster.toString());\n                    }\n                }\n\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n\n                    String chainInfo = answer.getContextParam(\"chainInfo\");\n                    if (chainInfo != null) {\n                        volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n                        volumeToAttach.setChainInfo(chainInfo);\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM &&\n                            volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged() &&\n                            volumeToAttach.getPath() == null && volumeToAttach.get_iScsiName() != null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n\n                    if (host != null && volumeToAttachStoragePool.getPoolType() == Storage.StoragePoolType.PowerFlex) {\n                        \r\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","date":"2021-08-31 09:27:45","endLine":3416,"groupId":"10645","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"sendAttachVolumeCommand","params":"(UserVmVOvm@VolumeVOvolumeToAttach@LongdeviceId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/7d/2575d1509ac58c7a47bc094cddb8291fe5e5ff.src","preCode":"    private VolumeVO sendAttachVolumeCommand(UserVmVO vm, VolumeVO volumeToAttach, Long deviceId) {\n        String errorMsg = \"Failed to attach volume \" + volumeToAttach.getName() + \" to VM \" + vm.getHostName();\n        boolean sendCommand = vm.getState() == State.Running;\n        AttachAnswer answer = null;\n        Long hostId = vm.getHostId();\n\n        if (hostId == null) {\n            hostId = vm.getLastHostId();\n\n            HostVO host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.VMware) {\n                sendCommand = true;\n            }\n        }\n\n        HostVO host = null;\n        StoragePoolVO volumeToAttachStoragePool = _storagePoolDao.findById(volumeToAttach.getPoolId());\n\n        if (hostId != null) {\n            host = _hostDao.findById(hostId);\n\n            if (host != null && host.getHypervisorType() == HypervisorType.XenServer && volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged()) {\n                sendCommand = true;\n            }\n        }\n\n        if (volumeToAttachStoragePool != null) {\n            verifyManagedStorage(volumeToAttachStoragePool.getId(), hostId);\n        }\n\n        \r\n        DataStore dataStore = volumeToAttachStoragePool != null ? dataStoreMgr.getDataStore(volumeToAttachStoragePool.getId(), DataStoreRole.Primary) : null;\n\n        checkAndSetAttaching(volumeToAttach.getId());\n\n        boolean attached = false;\n        try {\n            \r\n            if (host != null) {\n                try {\n                    volService.grantAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                } catch (Exception e) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n\n                    throw new CloudRuntimeException(e.getMessage());\n                }\n            }\n\n            if (sendCommand) {\n                if (host != null && host.getHypervisorType() == HypervisorType.KVM && volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                    volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n\n                    _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                }\n\n                DataTO volTO = volFactory.getVolume(volumeToAttach.getId()).getTO();\n\n                deviceId = getDeviceId(vm, deviceId);\n\n                DiskTO disk = storageMgr.getDiskWithThrottling(volTO, volumeToAttach.getVolumeType(), deviceId, volumeToAttach.getPath(), vm.getServiceOfferingId(),\n                        volumeToAttach.getDiskOfferingId());\n\n                AttachCommand cmd = new AttachCommand(disk, vm.getInstanceName());\n\n                ChapInfo chapInfo = volService.getChapInfo(volFactory.getVolume(volumeToAttach.getId()), dataStore);\n\n                Map<String, String> details = new HashMap<String, String>();\n\n                disk.setDetails(details);\n\n                details.put(DiskTO.MANAGED, String.valueOf(volumeToAttachStoragePool.isManaged()));\n                details.put(DiskTO.STORAGE_HOST, volumeToAttachStoragePool.getHostAddress());\n                details.put(DiskTO.STORAGE_PORT, String.valueOf(volumeToAttachStoragePool.getPort()));\n                details.put(DiskTO.VOLUME_SIZE, String.valueOf(volumeToAttach.getSize()));\n                details.put(DiskTO.IQN, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.MOUNT_POINT, volumeToAttach.get_iScsiName());\n                details.put(DiskTO.PROTOCOL_TYPE, (volumeToAttach.getPoolType() != null) ? volumeToAttach.getPoolType().toString() : null);\n                details.put(StorageManager.STORAGE_POOL_DISK_WAIT.toString(), String.valueOf(StorageManager.STORAGE_POOL_DISK_WAIT.valueIn(volumeToAttachStoragePool.getId())));\n\n                if (chapInfo != null) {\n                    details.put(DiskTO.CHAP_INITIATOR_USERNAME, chapInfo.getInitiatorUsername());\n                    details.put(DiskTO.CHAP_INITIATOR_SECRET, chapInfo.getInitiatorSecret());\n                    details.put(DiskTO.CHAP_TARGET_USERNAME, chapInfo.getTargetUsername());\n                    details.put(DiskTO.CHAP_TARGET_SECRET, chapInfo.getTargetSecret());\n                }\n\n                if (volumeToAttach.getPoolId() != null) {\n                    StoragePoolVO poolVO = _storagePoolDao.findById(volumeToAttach.getPoolId());\n                    if (poolVO.getParent() != 0L) {\n                        details.put(DiskTO.PROTOCOL_TYPE, Storage.StoragePoolType.DatastoreCluster.toString());\n                    }\n                }\n\n                _userVmDao.loadDetails(vm);\n                Map<String, String> controllerInfo = new HashMap<String, String>();\n                controllerInfo.put(VmDetailConstants.ROOT_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.ROOT_DISK_CONTROLLER));\n                controllerInfo.put(VmDetailConstants.DATA_DISK_CONTROLLER, vm.getDetail(VmDetailConstants.DATA_DISK_CONTROLLER));\n                cmd.setControllerInfo(controllerInfo);\n                s_logger.debug(\"Attach volume id:\" + volumeToAttach.getId() + \" on VM id:\" + vm.getId() + \" has controller info:\" + controllerInfo);\n\n                try {\n                    answer = (AttachAnswer)_agentMgr.send(hostId, cmd);\n                } catch (Exception e) {\n                    if (host != null) {\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                    throw new CloudRuntimeException(errorMsg + \" due to: \" + e.getMessage());\n                }\n            }\n\n            if (!sendCommand || (answer != null && answer.getResult())) {\n                \r\n                if (sendCommand) {\n                    DiskTO disk = answer.getDisk();\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), disk.getDiskSeq());\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (volumeToAttachStoragePool.isManaged() && volumeToAttach.getPath() == null) {\n                        volumeToAttach.setPath(answer.getDisk().getPath());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n\n                    String chainInfo = answer.getContextParam(\"chainInfo\");\n                    if (chainInfo != null) {\n                        volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n                        volumeToAttach.setChainInfo(chainInfo);\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n                } else {\n                    deviceId = getDeviceId(vm, deviceId);\n\n                    _volsDao.attachVolume(volumeToAttach.getId(), vm.getId(), deviceId);\n\n                    volumeToAttach = _volsDao.findById(volumeToAttach.getId());\n\n                    if (vm.getHypervisorType() == HypervisorType.KVM &&\n                            volumeToAttachStoragePool != null && volumeToAttachStoragePool.isManaged() &&\n                            volumeToAttach.getPath() == null && volumeToAttach.get_iScsiName() != null) {\n                        volumeToAttach.setPath(volumeToAttach.get_iScsiName());\n                        _volsDao.update(volumeToAttach.getId(), volumeToAttach);\n                    }\n\n                    if (host != null && volumeToAttachStoragePool.getPoolType() == Storage.StoragePoolType.PowerFlex) {\n                        \r\n                        volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                    }\n                }\n\n                \r\n                VmDiskStatisticsVO diskstats = _vmDiskStatsDao.findBy(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                if (diskstats == null) {\n                    diskstats = new VmDiskStatisticsVO(vm.getAccountId(), vm.getDataCenterId(), vm.getId(), volumeToAttach.getId());\n                    _vmDiskStatsDao.persist(diskstats);\n                }\n\n                attached = true;\n            } else {\n                if (answer != null) {\n                    String details = answer.getDetails();\n                    if (details != null && !details.isEmpty()) {\n                        errorMsg += \"; \" + details;\n                    }\n                }\n                if (host != null) {\n                    volService.revokeAccess(volFactory.getVolume(volumeToAttach.getId()), host, dataStore);\n                }\n                throw new CloudRuntimeException(errorMsg);\n            }\n        } finally {\n            Volume.Event ev = Volume.Event.OperationFailed;\n            VolumeInfo volInfo = volFactory.getVolume(volumeToAttach.getId());\n            if (attached) {\n                ev = Volume.Event.OperationSucceeded;\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" successfully attached to VM: \" + volInfo.getAttachedVmName());\n            } else {\n                s_logger.debug(\"Volume: \" + volInfo.getName() + \" failed to attach to VM: \" + volInfo.getAttachedVmName());\n            }\n            volInfo.stateTransit(ev);\n        }\n        return _volsDao.findById(volumeToAttach.getId());\n    }\n","realPath":"server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":3244,"status":"M"}],"commitId":"fc213ac9fd7a6791d966df3b660e65523b0605c6","commitMessage":"@@@server: improve attach volume in specific cases (#5371)\n\n* server: improve attach volume in specific cases\n\nWhen a VM is in stopped state and host for it is not found then server skips sending AttachCommand to hypervisor.\nChange tries to improve this case and finds a suitable host in the VM's cluster when volume is not in a HOST scope pool.\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>\n\n* typo\n\nCo-authored-by: sureshanaparti <12028987+sureshanaparti@users.noreply.github.com>\n\nCo-authored-by: sureshanaparti <12028987+sureshanaparti@users.noreply.github.com>","date":"2021-08-31 09:27:45","modifiedFileCount":"1","status":"M","submitter":"Abhishek Kumar"}]
