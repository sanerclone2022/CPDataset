[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> l = _hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (l.size() > 0) {\n            for (RunningHostCountInfo countInfo : l) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","date":"2018-01-20 05:49:27","endLine":1059,"groupId":"23384","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getZoneHostInfo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/28/fff3c7219cceb44a61a820fcddfdef364d7f89.src","preCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> l = _hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (l.size() > 0) {\n            for (RunningHostCountInfo countInfo : l) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","realPath":"server/src/main/java/com/cloud/consoleproxy/ConsoleProxyManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1047,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> l = _hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (l.size() > 0) {\n            for (RunningHostCountInfo countInfo : l) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","date":"2018-01-20 05:49:27","endLine":868,"groupId":"23384","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getZoneHostInfo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a1/58c9c0e6824403a7fc6575a694f76829e8889a.src","preCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> l = _hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (l.size() > 0) {\n            for (RunningHostCountInfo countInfo : l) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","realPath":"services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":856,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2021-05-10 15:47:42","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> l = _hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (l.size() > 0) {\n            for (RunningHostCountInfo countInfo : l) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","date":"2018-01-20 05:49:27","endLine":1059,"groupId":"23384","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getZoneHostInfo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/28/fff3c7219cceb44a61a820fcddfdef364d7f89.src","preCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> l = _hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (l.size() > 0) {\n            for (RunningHostCountInfo countInfo : l) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","realPath":"server/src/main/java/com/cloud/consoleproxy/ConsoleProxyManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1047,"status":"N"},{"authorDate":"2021-05-10 15:47:42","commitOrder":2,"curCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> runningHostCountInfos = _hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (CollectionUtils.isNotEmpty(runningHostCountInfos)) {\n            for (RunningHostCountInfo countInfo : runningHostCountInfos) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","date":"2021-05-10 15:47:42","endLine":822,"groupId":"21443","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getZoneHostInfo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/85/f8bbb803bc65cb60ba132e109ff04fc94b63b5.src","preCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> l = _hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (l.size() > 0) {\n            for (RunningHostCountInfo countInfo : l) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","realPath":"services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":810,"status":"M"}],"commitId":"3674e80219d0be9e940bd948060fa10a467e4b7e","commitMessage":"@@@Improve logs on SecondaryStorageManagerImpl and few refactors (#4955)\n\nCo-authored-by: Daniel Augusto Veronezi Salvador <daniel@scclouds.com.br>","date":"2021-05-10 15:47:42","modifiedFileCount":"4","status":"M","submitter":"Daniel Augusto Veronezi Salvador"},{"authorTime":"2021-05-10 15:47:42","codes":[{"authorDate":"2021-07-28 06:56:14","commitOrder":3,"curCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> l = hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (l.size() > 0) {\n            for (RunningHostCountInfo countInfo : l) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","date":"2021-07-28 06:56:14","endLine":917,"groupId":"101987","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"getZoneHostInfo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/6c/c0ace1e05600559e196cd0be536313c3c1cd80.src","preCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> l = _hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (l.size() > 0) {\n            for (RunningHostCountInfo countInfo : l) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","realPath":"server/src/main/java/com/cloud/consoleproxy/ConsoleProxyManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":905,"status":"M"},{"authorDate":"2021-05-10 15:47:42","commitOrder":3,"curCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> runningHostCountInfos = _hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (CollectionUtils.isNotEmpty(runningHostCountInfos)) {\n            for (RunningHostCountInfo countInfo : runningHostCountInfos) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","date":"2021-05-10 15:47:42","endLine":822,"groupId":"101987","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getZoneHostInfo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/85/f8bbb803bc65cb60ba132e109ff04fc94b63b5.src","preCode":"    private synchronized Map<Long, ZoneHostInfo> getZoneHostInfo() {\n        Date cutTime = DateUtil.currentGMTTime();\n        List<RunningHostCountInfo> runningHostCountInfos = _hostDao.getRunningHostCounts(new Date(cutTime.getTime() - ClusterManager.HeartbeatThreshold.value()));\n\n        RunningHostInfoAgregator aggregator = new RunningHostInfoAgregator();\n        if (CollectionUtils.isNotEmpty(runningHostCountInfos)) {\n            for (RunningHostCountInfo countInfo : runningHostCountInfos) {\n                aggregator.aggregate(countInfo);\n            }\n        }\n\n        return aggregator.getZoneHostInfoMap();\n    }\n","realPath":"services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":810,"status":"N"}],"commitId":"1f5ee5b3e3855c7f46d7e850465a8a0ec3a5c19c","commitMessage":"@@@Improve logs on ConsoleProxyManagerImpl and refactor a few process (#4959)\n\n","date":"2021-07-28 06:56:14","modifiedFileCount":"3","status":"M","submitter":"Daniel Augusto Veronezi Salvador"}]
