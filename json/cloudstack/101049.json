[{"authorTime":"2018-04-16 19:45:29","codes":[{"authorDate":"2018-04-10 19:46:52","commitOrder":3,"curCode":"    public void validateNetworkAclTestAclNotDefaulWithVpc() {\n        CallContext callContextMock = Mockito.mock(CallContext.class);\n        Mockito.doReturn(Mockito.mock(Account.class)).when(callContextMock).getCallingAccount();\n\n        PowerMockito.mockStatic(CallContext.class);\n        PowerMockito.when(CallContext.current()).thenReturn(callContextMock);\n\n        Mockito.when(networkAclMock.getId()).thenReturn(3L);\n        Mockito.when(networkAclMock.getVpcId()).thenReturn(networkMockVpcMockId);\n\n        Mockito.doReturn(Mockito.mock(Vpc.class)).when(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.doNothing().when(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        networkAclServiceImpl.validateNetworkAcl(networkAclMock);\n\n        Mockito.verify(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.verify(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        PowerMockito.verifyStatic();\n        CallContext.current();\n\n    }\n","date":"2018-04-10 19:46:52","endLine":385,"groupId":"1051","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"validateNetworkAclTestAclNotDefaulWithVpc","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/54/0a104a57322c1509bb4b4906c6097d56e57f7d.src","preCode":"    public void validateNetworkAclTestAclNotDefaulWithVpc() {\n        CallContext callContextMock = Mockito.mock(CallContext.class);\n        Mockito.doReturn(Mockito.mock(Account.class)).when(callContextMock).getCallingAccount();\n\n        PowerMockito.mockStatic(CallContext.class);\n        PowerMockito.when(CallContext.current()).thenReturn(callContextMock);\n\n        Mockito.when(networkAclMock.getId()).thenReturn(3L);\n        Mockito.when(networkAclMock.getVpcId()).thenReturn(networkMockVpcMockId);\n\n        Mockito.doReturn(Mockito.mock(Vpc.class)).when(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.doNothing().when(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        networkAclServiceImpl.validateNetworkAcl(networkAclMock);\n\n        Mockito.verify(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.verify(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        PowerMockito.verifyStatic();\n        CallContext.current();\n\n    }\n","realPath":"server/src/test/java/com/cloud/network/vpc/NetworkACLServiceImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":364,"status":"NB"},{"authorDate":"2018-04-16 19:45:29","commitOrder":3,"curCode":"    public void validateMoveAclRulesDataTestSuccesfullExecution() {\n        Mockito.when(nextAclRuleMock.getAclId()).thenReturn(networkAclMockId);\n        Mockito.when(previousAclRuleMock.getAclId()).thenReturn(networkAclMockId);\n\n        Mockito.doReturn(networkAclMock).when(networkAclDaoMock).findById(networkAclMockId);\n        Mockito.doReturn(Mockito.mock(Vpc.class)).when(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n\n        CallContext callContextMock = Mockito.mock(CallContext.class);\n        Mockito.doReturn(Mockito.mock(Account.class)).when(callContextMock).getCallingAccount();\n\n        PowerMockito.mockStatic(CallContext.class);\n        PowerMockito.when(CallContext.current()).thenReturn(callContextMock);\n\n        Mockito.doNothing().when(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        networkAclServiceImpl.validateMoveAclRulesData(aclRuleBeingMovedMock, previousAclRuleMock, nextAclRuleMock);\n\n        Mockito.verify(networkAclDaoMock).findById(networkAclMockId);\n        Mockito.verify(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.verify(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n    }\n","date":"2018-04-16 19:45:29","endLine":1095,"groupId":"1079","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"validateMoveAclRulesDataTestSuccesfullExecution","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/59/8057402f201d34441be2a2eb2b126f2b4f48b2.src","preCode":"    public void validateMoveAclRulesDataTestSuccesfullExecution() {\n        Mockito.when(nextAclRuleMock.getAclId()).thenReturn(networkAclMockId);\n        Mockito.when(previousAclRuleMock.getAclId()).thenReturn(networkAclMockId);\n\n        Mockito.doReturn(networkAclMock).when(networkAclDaoMock).findById(networkAclMockId);\n        Mockito.doReturn(Mockito.mock(Vpc.class)).when(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n\n        CallContext callContextMock = Mockito.mock(CallContext.class);\n        Mockito.doReturn(Mockito.mock(Account.class)).when(callContextMock).getCallingAccount();\n\n        PowerMockito.mockStatic(CallContext.class);\n        PowerMockito.when(CallContext.current()).thenReturn(callContextMock);\n\n        Mockito.doNothing().when(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        networkAclServiceImpl.validateMoveAclRulesData(aclRuleBeingMovedMock, previousAclRuleMock, nextAclRuleMock);\n\n        Mockito.verify(networkAclDaoMock).findById(networkAclMockId);\n        Mockito.verify(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.verify(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n    }\n","realPath":"server/src/test/java/com/cloud/network/vpc/NetworkACLServiceImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1075,"status":"B"}],"commitId":"685cc7210c2f6396beb649cd1fb789957a6cdb66","commitMessage":"@@@[CLOUDSTACK-10344] bug when moving ACL rules (change order with drag and drop) (#2511)\n\n* Add permission to 'moveNetworkAclItem' API method in default roles","date":"2018-04-16 19:45:29","modifiedFileCount":"8","status":"M","submitter":"Rafael Weing?rtner"},{"authorTime":"2018-04-16 19:45:29","codes":[{"authorDate":"2020-02-12 15:28:25","commitOrder":4,"curCode":"    public void validateNetworkAclTestAclNotDefaulWithVpc() {\n        CallContext callContextMock = Mockito.mock(CallContext.class);\n        Mockito.doReturn(Mockito.mock(Account.class)).when(callContextMock).getCallingAccount();\n\n        PowerMockito.mockStatic(CallContext.class);\n        PowerMockito.when(CallContext.current()).thenReturn(callContextMock);\n\n        Mockito.when(networkAclMock.getId()).thenReturn(3L);\n        Mockito.when(networkAclMock.getVpcId()).thenReturn(networkMockVpcMockId);\n\n        Mockito.doReturn(Mockito.mock(Vpc.class)).when(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.doNothing().when(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        networkAclServiceImpl.validateNetworkAcl(networkAclMock);\n\n        Mockito.verify(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.verify(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        PowerMockito.verifyStatic(CallContext.class);\n        CallContext.current();\n\n    }\n","date":"2020-02-12 15:28:25","endLine":426,"groupId":"101049","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"validateNetworkAclTestAclNotDefaulWithVpc","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f2/1bc2c34961276729165d8504eb798d9c07f20a.src","preCode":"    public void validateNetworkAclTestAclNotDefaulWithVpc() {\n        CallContext callContextMock = Mockito.mock(CallContext.class);\n        Mockito.doReturn(Mockito.mock(Account.class)).when(callContextMock).getCallingAccount();\n\n        PowerMockito.mockStatic(CallContext.class);\n        PowerMockito.when(CallContext.current()).thenReturn(callContextMock);\n\n        Mockito.when(networkAclMock.getId()).thenReturn(3L);\n        Mockito.when(networkAclMock.getVpcId()).thenReturn(networkMockVpcMockId);\n\n        Mockito.doReturn(Mockito.mock(Vpc.class)).when(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.doNothing().when(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        networkAclServiceImpl.validateNetworkAcl(networkAclMock);\n\n        Mockito.verify(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.verify(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        PowerMockito.verifyStatic();\n        CallContext.current();\n\n    }\n","realPath":"server/src/test/java/com/cloud/network/vpc/NetworkACLServiceImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":405,"status":"M"},{"authorDate":"2018-04-16 19:45:29","commitOrder":4,"curCode":"    public void validateMoveAclRulesDataTestSuccesfullExecution() {\n        Mockito.when(nextAclRuleMock.getAclId()).thenReturn(networkAclMockId);\n        Mockito.when(previousAclRuleMock.getAclId()).thenReturn(networkAclMockId);\n\n        Mockito.doReturn(networkAclMock).when(networkAclDaoMock).findById(networkAclMockId);\n        Mockito.doReturn(Mockito.mock(Vpc.class)).when(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n\n        CallContext callContextMock = Mockito.mock(CallContext.class);\n        Mockito.doReturn(Mockito.mock(Account.class)).when(callContextMock).getCallingAccount();\n\n        PowerMockito.mockStatic(CallContext.class);\n        PowerMockito.when(CallContext.current()).thenReturn(callContextMock);\n\n        Mockito.doNothing().when(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        networkAclServiceImpl.validateMoveAclRulesData(aclRuleBeingMovedMock, previousAclRuleMock, nextAclRuleMock);\n\n        Mockito.verify(networkAclDaoMock).findById(networkAclMockId);\n        Mockito.verify(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.verify(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n    }\n","date":"2018-04-16 19:45:29","endLine":1095,"groupId":"101049","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"validateMoveAclRulesDataTestSuccesfullExecution","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/59/8057402f201d34441be2a2eb2b126f2b4f48b2.src","preCode":"    public void validateMoveAclRulesDataTestSuccesfullExecution() {\n        Mockito.when(nextAclRuleMock.getAclId()).thenReturn(networkAclMockId);\n        Mockito.when(previousAclRuleMock.getAclId()).thenReturn(networkAclMockId);\n\n        Mockito.doReturn(networkAclMock).when(networkAclDaoMock).findById(networkAclMockId);\n        Mockito.doReturn(Mockito.mock(Vpc.class)).when(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n\n        CallContext callContextMock = Mockito.mock(CallContext.class);\n        Mockito.doReturn(Mockito.mock(Account.class)).when(callContextMock).getCallingAccount();\n\n        PowerMockito.mockStatic(CallContext.class);\n        PowerMockito.when(CallContext.current()).thenReturn(callContextMock);\n\n        Mockito.doNothing().when(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n\n        networkAclServiceImpl.validateMoveAclRulesData(aclRuleBeingMovedMock, previousAclRuleMock, nextAclRuleMock);\n\n        Mockito.verify(networkAclDaoMock).findById(networkAclMockId);\n        Mockito.verify(entityManagerMock).findById(Vpc.class, networkMockVpcMockId);\n        Mockito.verify(accountManagerMock).checkAccess(Mockito.any(Account.class), Mockito.isNull(AccessType.class), Mockito.eq(true), Mockito.any(Vpc.class));\n    }\n","realPath":"server/src/test/java/com/cloud/network/vpc/NetworkACLServiceImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1075,"status":"N"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
