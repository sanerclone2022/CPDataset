[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public DownloadAnswer handleDownloadCommand(SecondaryStorageResource resource, DownloadCommand cmd) {\n        ResourceType resourceType = cmd.getResourceType();\n        if (cmd instanceof DownloadProgressCommand) {\n            return handleDownloadProgressCmd(resource, (DownloadProgressCommand)cmd);\n        }\n\n        if (cmd.getUrl() == null) {\n            return new DownloadAnswer(resourceType.toString() + \" is corrupted on storage due to an invalid url , cannot download\",\n                    VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n\n        if (cmd.getName() == null) {\n            return new DownloadAnswer(\"Invalid Name\", VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n\n        if(! DigestHelper.isAlgorithmSupported(cmd.getChecksum())) {\n            return new DownloadAnswer(\"invalid algorithm: \" + cmd.getChecksum(), VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n        }\n\n        DataStoreTO dstore = cmd.getDataStore();\n        String installPathPrefix = cmd.getInstallPath();\n        \r\n        if (dstore instanceof NfsTO) {\n            installPathPrefix = resource.getRootDir(((NfsTO)dstore).getUrl(), _nfsVersion) + File.separator + installPathPrefix;\n        }\n        String user = null;\n        String password = null;\n        if (cmd.getAuth() != null) {\n            user = cmd.getAuth().getUserName();\n            password = cmd.getAuth().getPassword();\n        }\n        \r\n        long maxDownloadSizeInBytes =\n                (cmd.getMaxDownloadSizeInBytes() == null) ? TemplateDownloader.DEFAULT_MAX_TEMPLATE_SIZE_IN_BYTES : (cmd.getMaxDownloadSizeInBytes());\n        String jobId = null;\n        if (dstore instanceof S3TO) {\n            jobId =\n                    downloadS3Template((S3TO)dstore, cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.isHvm(), cmd.getAccountId(), cmd.getDescription(),\n                            cmd.getChecksum(), installPathPrefix, user, password, maxDownloadSizeInBytes, cmd.getProxy(), resourceType);\n        } else {\n            jobId =\n                    downloadPublicTemplate(cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.isHvm(), cmd.getAccountId(), cmd.getDescription(),\n                            cmd.getChecksum(), installPathPrefix, cmd.getInstallPath(), user, password, maxDownloadSizeInBytes, cmd.getProxy(), resourceType);\n        }\n        sleep();\n        if (jobId == null) {\n            return new DownloadAnswer(\"Internal Error\", VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n        return new DownloadAnswer(jobId, getDownloadPct(jobId), getDownloadError(jobId), getDownloadStatus2(jobId), getDownloadLocalPath(jobId), getInstallPath(jobId),\n                getDownloadTemplateSize(jobId), getDownloadTemplateSize(jobId), getDownloadCheckSum(jobId));\n    }\n","date":"2018-01-20 05:49:27","endLine":729,"groupId":"13755","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handleDownloadCommand","params":"(SecondaryStorageResourceresource@DownloadCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5f/a13a34cfc35830fdd76799838ab8af27b720d9.src","preCode":"    public DownloadAnswer handleDownloadCommand(SecondaryStorageResource resource, DownloadCommand cmd) {\n        ResourceType resourceType = cmd.getResourceType();\n        if (cmd instanceof DownloadProgressCommand) {\n            return handleDownloadProgressCmd(resource, (DownloadProgressCommand)cmd);\n        }\n\n        if (cmd.getUrl() == null) {\n            return new DownloadAnswer(resourceType.toString() + \" is corrupted on storage due to an invalid url , cannot download\",\n                    VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n\n        if (cmd.getName() == null) {\n            return new DownloadAnswer(\"Invalid Name\", VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n\n        if(! DigestHelper.isAlgorithmSupported(cmd.getChecksum())) {\n            return new DownloadAnswer(\"invalid algorithm: \" + cmd.getChecksum(), VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n        }\n\n        DataStoreTO dstore = cmd.getDataStore();\n        String installPathPrefix = cmd.getInstallPath();\n        \r\n        if (dstore instanceof NfsTO) {\n            installPathPrefix = resource.getRootDir(((NfsTO)dstore).getUrl(), _nfsVersion) + File.separator + installPathPrefix;\n        }\n        String user = null;\n        String password = null;\n        if (cmd.getAuth() != null) {\n            user = cmd.getAuth().getUserName();\n            password = cmd.getAuth().getPassword();\n        }\n        \r\n        long maxDownloadSizeInBytes =\n                (cmd.getMaxDownloadSizeInBytes() == null) ? TemplateDownloader.DEFAULT_MAX_TEMPLATE_SIZE_IN_BYTES : (cmd.getMaxDownloadSizeInBytes());\n        String jobId = null;\n        if (dstore instanceof S3TO) {\n            jobId =\n                    downloadS3Template((S3TO)dstore, cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.isHvm(), cmd.getAccountId(), cmd.getDescription(),\n                            cmd.getChecksum(), installPathPrefix, user, password, maxDownloadSizeInBytes, cmd.getProxy(), resourceType);\n        } else {\n            jobId =\n                    downloadPublicTemplate(cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.isHvm(), cmd.getAccountId(), cmd.getDescription(),\n                            cmd.getChecksum(), installPathPrefix, cmd.getInstallPath(), user, password, maxDownloadSizeInBytes, cmd.getProxy(), resourceType);\n        }\n        sleep();\n        if (jobId == null) {\n            return new DownloadAnswer(\"Internal Error\", VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n        return new DownloadAnswer(jobId, getDownloadPct(jobId), getDownloadError(jobId), getDownloadStatus2(jobId), getDownloadLocalPath(jobId), getInstallPath(jobId),\n                getDownloadTemplateSize(jobId), getDownloadTemplateSize(jobId), getDownloadCheckSum(jobId));\n    }\n","realPath":"services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/DownloadManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":679,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public UploadAnswer handleUploadCommand(SecondaryStorageResource resource, UploadCommand cmd) {\n        s_logger.warn(\"Handling the upload \" + cmd.getInstallPath() + \" \" + cmd.getId());\n        if (cmd instanceof UploadProgressCommand) {\n            return handleUploadProgressCmd((UploadProgressCommand)cmd);\n        }\n\n        String user = null;\n        String password = null;\n        String jobId =\n                uploadPublicTemplate(cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.getAccountId(), cmd.getDescription(), cmd.getChecksum(),\n                        cmd.getInstallPath(), user, password, cmd.getTemplateSizeInBytes());\n        sleep();\n        return new UploadAnswer(jobId, getUploadPct(jobId), getUploadError(jobId), getUploadStatus2(jobId), getUploadLocalPath(jobId), getInstallPath(jobId),\n                getUploadTemplateSize(jobId));\n    }\n","date":"2018-01-20 05:49:27","endLine":256,"groupId":"15948","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"handleUploadCommand","params":"(SecondaryStorageResourceresource@UploadCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/29/eb4b13e307d7f267358990ae9ff26520b91b74.src","preCode":"    public UploadAnswer handleUploadCommand(SecondaryStorageResource resource, UploadCommand cmd) {\n        s_logger.warn(\"Handling the upload \" + cmd.getInstallPath() + \" \" + cmd.getId());\n        if (cmd instanceof UploadProgressCommand) {\n            return handleUploadProgressCmd((UploadProgressCommand)cmd);\n        }\n\n        String user = null;\n        String password = null;\n        String jobId =\n                uploadPublicTemplate(cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.getAccountId(), cmd.getDescription(), cmd.getChecksum(),\n                        cmd.getInstallPath(), user, password, cmd.getTemplateSizeInBytes());\n        sleep();\n        return new UploadAnswer(jobId, getUploadPct(jobId), getUploadError(jobId), getUploadStatus2(jobId), getUploadLocalPath(jobId), getInstallPath(jobId),\n                getUploadTemplateSize(jobId));\n    }\n","realPath":"services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/UploadManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-02-27 20:33:00","commitOrder":2,"curCode":"    public DownloadAnswer handleDownloadCommand(SecondaryStorageResource resource, DownloadCommand cmd) {\n        int timeout = NumbersUtil.parseInt(cmd.getContextParam(\"vmware.package.ova.timeout\"), 3600000);\n        this._processTimeout = timeout;\n        ResourceType resourceType = cmd.getResourceType();\n        if (cmd instanceof DownloadProgressCommand) {\n            return handleDownloadProgressCmd(resource, (DownloadProgressCommand)cmd);\n        }\n\n        if (cmd.getUrl() == null) {\n            return new DownloadAnswer(resourceType.toString() + \" is corrupted on storage due to an invalid url , cannot download\",\n                    VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n\n        if (cmd.getName() == null) {\n            return new DownloadAnswer(\"Invalid Name\", VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n\n        if(! DigestHelper.isAlgorithmSupported(cmd.getChecksum())) {\n            return new DownloadAnswer(\"invalid algorithm: \" + cmd.getChecksum(), VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n        }\n\n        DataStoreTO dstore = cmd.getDataStore();\n        String installPathPrefix = cmd.getInstallPath();\n        \r\n        if (dstore instanceof NfsTO) {\n            installPathPrefix = resource.getRootDir(((NfsTO)dstore).getUrl(), _nfsVersion) + File.separator + installPathPrefix;\n        }\n        String user = null;\n        String password = null;\n        if (cmd.getAuth() != null) {\n            user = cmd.getAuth().getUserName();\n            password = cmd.getAuth().getPassword();\n        }\n        \r\n        long maxDownloadSizeInBytes =\n                (cmd.getMaxDownloadSizeInBytes() == null) ? TemplateDownloader.DEFAULT_MAX_TEMPLATE_SIZE_IN_BYTES : (cmd.getMaxDownloadSizeInBytes());\n        String jobId = null;\n        if (dstore instanceof S3TO) {\n            jobId =\n                    downloadS3Template((S3TO)dstore, cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.isHvm(), cmd.getAccountId(), cmd.getDescription(),\n                            cmd.getChecksum(), installPathPrefix, user, password, maxDownloadSizeInBytes, cmd.getProxy(), resourceType);\n        } else {\n            jobId =\n                    downloadPublicTemplate(cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.isHvm(), cmd.getAccountId(), cmd.getDescription(),\n                            cmd.getChecksum(), installPathPrefix, cmd.getInstallPath(), user, password, maxDownloadSizeInBytes, cmd.getProxy(), resourceType);\n        }\n        sleep();\n        if (jobId == null) {\n            return new DownloadAnswer(\"Internal Error\", VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n        return new DownloadAnswer(jobId, getDownloadPct(jobId), getDownloadError(jobId), getDownloadStatus2(jobId), getDownloadLocalPath(jobId), getInstallPath(jobId),\n                getDownloadTemplateSize(jobId), getDownloadTemplateSize(jobId), getDownloadCheckSum(jobId));\n    }\n","date":"2018-02-27 20:33:00","endLine":731,"groupId":"104692","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handleDownloadCommand","params":"(SecondaryStorageResourceresource@DownloadCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2a/ce37f675a5bbdc37582619444fcacf396d9e41.src","preCode":"    public DownloadAnswer handleDownloadCommand(SecondaryStorageResource resource, DownloadCommand cmd) {\n        ResourceType resourceType = cmd.getResourceType();\n        if (cmd instanceof DownloadProgressCommand) {\n            return handleDownloadProgressCmd(resource, (DownloadProgressCommand)cmd);\n        }\n\n        if (cmd.getUrl() == null) {\n            return new DownloadAnswer(resourceType.toString() + \" is corrupted on storage due to an invalid url , cannot download\",\n                    VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n\n        if (cmd.getName() == null) {\n            return new DownloadAnswer(\"Invalid Name\", VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n\n        if(! DigestHelper.isAlgorithmSupported(cmd.getChecksum())) {\n            return new DownloadAnswer(\"invalid algorithm: \" + cmd.getChecksum(), VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n        }\n\n        DataStoreTO dstore = cmd.getDataStore();\n        String installPathPrefix = cmd.getInstallPath();\n        \r\n        if (dstore instanceof NfsTO) {\n            installPathPrefix = resource.getRootDir(((NfsTO)dstore).getUrl(), _nfsVersion) + File.separator + installPathPrefix;\n        }\n        String user = null;\n        String password = null;\n        if (cmd.getAuth() != null) {\n            user = cmd.getAuth().getUserName();\n            password = cmd.getAuth().getPassword();\n        }\n        \r\n        long maxDownloadSizeInBytes =\n                (cmd.getMaxDownloadSizeInBytes() == null) ? TemplateDownloader.DEFAULT_MAX_TEMPLATE_SIZE_IN_BYTES : (cmd.getMaxDownloadSizeInBytes());\n        String jobId = null;\n        if (dstore instanceof S3TO) {\n            jobId =\n                    downloadS3Template((S3TO)dstore, cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.isHvm(), cmd.getAccountId(), cmd.getDescription(),\n                            cmd.getChecksum(), installPathPrefix, user, password, maxDownloadSizeInBytes, cmd.getProxy(), resourceType);\n        } else {\n            jobId =\n                    downloadPublicTemplate(cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.isHvm(), cmd.getAccountId(), cmd.getDescription(),\n                            cmd.getChecksum(), installPathPrefix, cmd.getInstallPath(), user, password, maxDownloadSizeInBytes, cmd.getProxy(), resourceType);\n        }\n        sleep();\n        if (jobId == null) {\n            return new DownloadAnswer(\"Internal Error\", VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);\n        }\n        return new DownloadAnswer(jobId, getDownloadPct(jobId), getDownloadError(jobId), getDownloadStatus2(jobId), getDownloadLocalPath(jobId), getInstallPath(jobId),\n                getDownloadTemplateSize(jobId), getDownloadTemplateSize(jobId), getDownloadCheckSum(jobId));\n    }\n","realPath":"services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/DownloadManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":679,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public UploadAnswer handleUploadCommand(SecondaryStorageResource resource, UploadCommand cmd) {\n        s_logger.warn(\"Handling the upload \" + cmd.getInstallPath() + \" \" + cmd.getId());\n        if (cmd instanceof UploadProgressCommand) {\n            return handleUploadProgressCmd((UploadProgressCommand)cmd);\n        }\n\n        String user = null;\n        String password = null;\n        String jobId =\n                uploadPublicTemplate(cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.getAccountId(), cmd.getDescription(), cmd.getChecksum(),\n                        cmd.getInstallPath(), user, password, cmd.getTemplateSizeInBytes());\n        sleep();\n        return new UploadAnswer(jobId, getUploadPct(jobId), getUploadError(jobId), getUploadStatus2(jobId), getUploadLocalPath(jobId), getInstallPath(jobId),\n                getUploadTemplateSize(jobId));\n    }\n","date":"2018-01-20 05:49:27","endLine":256,"groupId":"104692","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"handleUploadCommand","params":"(SecondaryStorageResourceresource@UploadCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/29/eb4b13e307d7f267358990ae9ff26520b91b74.src","preCode":"    public UploadAnswer handleUploadCommand(SecondaryStorageResource resource, UploadCommand cmd) {\n        s_logger.warn(\"Handling the upload \" + cmd.getInstallPath() + \" \" + cmd.getId());\n        if (cmd instanceof UploadProgressCommand) {\n            return handleUploadProgressCmd((UploadProgressCommand)cmd);\n        }\n\n        String user = null;\n        String password = null;\n        String jobId =\n                uploadPublicTemplate(cmd.getId(), cmd.getUrl(), cmd.getName(), cmd.getFormat(), cmd.getAccountId(), cmd.getDescription(), cmd.getChecksum(),\n                        cmd.getInstallPath(), user, password, cmd.getTemplateSizeInBytes());\n        sleep();\n        return new UploadAnswer(jobId, getUploadPct(jobId), getUploadError(jobId), getUploadStatus2(jobId), getUploadLocalPath(jobId), getInstallPath(jobId),\n                getUploadTemplateSize(jobId));\n    }\n","realPath":"services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/UploadManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"N"}],"commitId":"bb607d07a97476dc4fb934b3d75df6affba47086","commitMessage":"@@@CLOUDSTACK-10054:Volume download times out in 3600 seconds (#2244)\n\n","date":"2018-02-27 20:33:00","modifiedFileCount":"22","status":"M","submitter":"mrunalinikankariya"}]
