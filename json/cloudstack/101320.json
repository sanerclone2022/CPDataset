[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public VMInstanceVO rebootSystemVM(final RebootSystemVmCmd cmd) {\n        final VMInstanceVO systemVm = _vmInstanceDao.findByIdTypes(cmd.getId(), VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm);\n\n        if (systemVm == null) {\n            final InvalidParameterValueException ex = new InvalidParameterValueException(\"unable to find a system vm with specified vmId\");\n            ex.addProxyObject(cmd.getId().toString(), \"vmId\");\n            throw ex;\n        }\n\n        if (systemVm.getType().equals(VirtualMachine.Type.ConsoleProxy)) {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_PROXY_REBOOT, \"rebooting console proxy Vm\");\n            return rebootConsoleProxy(cmd.getId());\n        } else {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_SSVM_REBOOT, \"rebooting secondary storage Vm\");\n            return rebootSecondaryStorageVm(cmd.getId());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":3325,"groupId":"10412","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"rebootSystemVM","params":"(finalRebootSystemVmCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/56/c912d29c1214a445a5fb7dbc190fcd1e7fb2b7.src","preCode":"    public VMInstanceVO rebootSystemVM(final RebootSystemVmCmd cmd) {\n        final VMInstanceVO systemVm = _vmInstanceDao.findByIdTypes(cmd.getId(), VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm);\n\n        if (systemVm == null) {\n            final InvalidParameterValueException ex = new InvalidParameterValueException(\"unable to find a system vm with specified vmId\");\n            ex.addProxyObject(cmd.getId().toString(), \"vmId\");\n            throw ex;\n        }\n\n        if (systemVm.getType().equals(VirtualMachine.Type.ConsoleProxy)) {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_PROXY_REBOOT, \"rebooting console proxy Vm\");\n            return rebootConsoleProxy(cmd.getId());\n        } else {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_SSVM_REBOOT, \"rebooting secondary storage Vm\");\n            return rebootSecondaryStorageVm(cmd.getId());\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/server/ManagementServerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":3309,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public VMInstanceVO destroySystemVM(final DestroySystemVmCmd cmd) {\n        final VMInstanceVO systemVm = _vmInstanceDao.findByIdTypes(cmd.getId(), VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm);\n\n        if (systemVm == null) {\n            final InvalidParameterValueException ex = new InvalidParameterValueException(\"unable to find a system vm with specified vmId\");\n            ex.addProxyObject(cmd.getId().toString(), \"vmId\");\n            throw ex;\n        }\n\n        if (systemVm.getType().equals(VirtualMachine.Type.ConsoleProxy)) {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_PROXY_DESTROY, \"destroying console proxy Vm\");\n            return destroyConsoleProxy(cmd.getId());\n        } else {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_SSVM_DESTROY, \"destroying secondary storage Vm\");\n            return destroySecondaryStorageVm(cmd.getId());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":3345,"groupId":"10412","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"destroySystemVM","params":"(finalDestroySystemVmCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/56/c912d29c1214a445a5fb7dbc190fcd1e7fb2b7.src","preCode":"    public VMInstanceVO destroySystemVM(final DestroySystemVmCmd cmd) {\n        final VMInstanceVO systemVm = _vmInstanceDao.findByIdTypes(cmd.getId(), VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm);\n\n        if (systemVm == null) {\n            final InvalidParameterValueException ex = new InvalidParameterValueException(\"unable to find a system vm with specified vmId\");\n            ex.addProxyObject(cmd.getId().toString(), \"vmId\");\n            throw ex;\n        }\n\n        if (systemVm.getType().equals(VirtualMachine.Type.ConsoleProxy)) {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_PROXY_DESTROY, \"destroying console proxy Vm\");\n            return destroyConsoleProxy(cmd.getId());\n        } else {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_SSVM_DESTROY, \"destroying secondary storage Vm\");\n            return destroySecondaryStorageVm(cmd.getId());\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/server/ManagementServerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":3329,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-03-06 17:28:56","commitOrder":2,"curCode":"    public VMInstanceVO rebootSystemVM(final RebootSystemVmCmd cmd) {\n        final VMInstanceVO systemVm = _vmInstanceDao.findByIdTypes(cmd.getId(), VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm);\n\n        if (systemVm == null) {\n            final InvalidParameterValueException ex = new InvalidParameterValueException(\"unable to find a system vm with specified vmId\");\n            ex.addProxyObject(cmd.getId().toString(), \"vmId\");\n            throw ex;\n        }\n\n        try {\n            if (systemVm.getType().equals(VirtualMachine.Type.ConsoleProxy)) {\n                ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_PROXY_REBOOT, \"rebooting console proxy Vm\");\n                if (cmd.isForced()) {\n                    return forceRebootConsoleProxy(systemVm);\n                }\n                return rebootConsoleProxy(cmd.getId());\n            } else {\n                ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_SSVM_REBOOT, \"rebooting secondary storage Vm\");\n                if (cmd.isForced()) {\n                    return forceRebootSecondaryStorageVm(systemVm);\n                }\n                return rebootSecondaryStorageVm(cmd.getId());\n            }\n        } catch (final ResourceUnavailableException e) {\n            throw new CloudRuntimeException(\"Unable to reboot \" + systemVm, e);\n        } catch (final OperationTimedoutException e) {\n            throw new CloudRuntimeException(\"Operation timed out - Unable to reboot \" + systemVm, e);\n        }\n    }\n","date":"2021-03-06 17:28:56","endLine":3601,"groupId":"101320","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"rebootSystemVM","params":"(finalRebootSystemVmCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/18/afeb42a929292ca704314ec7d0d46a35ba240a.src","preCode":"    public VMInstanceVO rebootSystemVM(final RebootSystemVmCmd cmd) {\n        final VMInstanceVO systemVm = _vmInstanceDao.findByIdTypes(cmd.getId(), VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm);\n\n        if (systemVm == null) {\n            final InvalidParameterValueException ex = new InvalidParameterValueException(\"unable to find a system vm with specified vmId\");\n            ex.addProxyObject(cmd.getId().toString(), \"vmId\");\n            throw ex;\n        }\n\n        if (systemVm.getType().equals(VirtualMachine.Type.ConsoleProxy)) {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_PROXY_REBOOT, \"rebooting console proxy Vm\");\n            return rebootConsoleProxy(cmd.getId());\n        } else {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_SSVM_REBOOT, \"rebooting secondary storage Vm\");\n            return rebootSecondaryStorageVm(cmd.getId());\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/server/ManagementServerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":3573,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public VMInstanceVO destroySystemVM(final DestroySystemVmCmd cmd) {\n        final VMInstanceVO systemVm = _vmInstanceDao.findByIdTypes(cmd.getId(), VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm);\n\n        if (systemVm == null) {\n            final InvalidParameterValueException ex = new InvalidParameterValueException(\"unable to find a system vm with specified vmId\");\n            ex.addProxyObject(cmd.getId().toString(), \"vmId\");\n            throw ex;\n        }\n\n        if (systemVm.getType().equals(VirtualMachine.Type.ConsoleProxy)) {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_PROXY_DESTROY, \"destroying console proxy Vm\");\n            return destroyConsoleProxy(cmd.getId());\n        } else {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_SSVM_DESTROY, \"destroying secondary storage Vm\");\n            return destroySecondaryStorageVm(cmd.getId());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":3345,"groupId":"101320","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"destroySystemVM","params":"(finalDestroySystemVmCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/56/c912d29c1214a445a5fb7dbc190fcd1e7fb2b7.src","preCode":"    public VMInstanceVO destroySystemVM(final DestroySystemVmCmd cmd) {\n        final VMInstanceVO systemVm = _vmInstanceDao.findByIdTypes(cmd.getId(), VirtualMachine.Type.ConsoleProxy, VirtualMachine.Type.SecondaryStorageVm);\n\n        if (systemVm == null) {\n            final InvalidParameterValueException ex = new InvalidParameterValueException(\"unable to find a system vm with specified vmId\");\n            ex.addProxyObject(cmd.getId().toString(), \"vmId\");\n            throw ex;\n        }\n\n        if (systemVm.getType().equals(VirtualMachine.Type.ConsoleProxy)) {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_PROXY_DESTROY, \"destroying console proxy Vm\");\n            return destroyConsoleProxy(cmd.getId());\n        } else {\n            ActionEventUtils.startNestedActionEvent(EventTypes.EVENT_SSVM_DESTROY, \"destroying secondary storage Vm\");\n            return destroySecondaryStorageVm(cmd.getId());\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/server/ManagementServerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":3329,"status":"N"}],"commitId":"81dfcbb5f56b616b9edcf97fffedb26c187a7fc2","commitMessage":"@@@server: Use ACPI event to reboot VM on KVM.  and Use 'forced' reboot option to stop and start the VM(s)  (#4681)\n\n* Updated libvirt's native reboot operation for VM on KVM using ACPI event.  and Added 'forced' reboot option to stop and start the VM (using rebootVirtualMachine API)\n\n* Added 'forced' reboot option for System VM and Router\n\n- New parameter 'forced' in rebootSystemVm API.  to stop and then start System VM\n- New parameter 'forced' in rebootRouter API.  to force stop and then start Router\n\n* Added force reboot tests for User VM.  System VM and Router","date":"2021-03-06 17:28:56","modifiedFileCount":"10","status":"M","submitter":"sureshanaparti"}]
