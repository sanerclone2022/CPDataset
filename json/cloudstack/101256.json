[{"authorTime":"2018-05-02 15:31:29","codes":[{"authorDate":"2018-05-02 15:31:29","commitOrder":1,"curCode":"    public void findRolesByTypeTestAdminRoleRootAdminUser() {\n        Mockito.doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Mockito.doReturn(roles).when(roleDaoMock).findAllByRoleType(RoleType.Admin);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.Admin);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(1)).isRootAdmin(Mockito.anyLong());\n        Mockito.verify(roleDaoMock, Mockito.times(1)).findAllByRoleType(Mockito.any(RoleType.class));\n    }\n","date":"2018-05-02 15:31:29","endLine":257,"groupId":"4621","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"findRolesByTypeTestAdminRoleRootAdminUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/bc/50f3408987dacf3495f0b88d3568c0c1f95c0a.src","preCode":"    public void findRolesByTypeTestAdminRoleRootAdminUser() {\n        Mockito.doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Mockito.doReturn(roles).when(roleDaoMock).findAllByRoleType(RoleType.Admin);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.Admin);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(1)).isRootAdmin(Mockito.anyLong());\n        Mockito.verify(roleDaoMock, Mockito.times(1)).findAllByRoleType(Mockito.any(RoleType.class));\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/acl/RoleManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"B"},{"authorDate":"2018-05-02 15:31:29","commitOrder":1,"curCode":"    public void findRolesByTypeTestNonAdminRoleRootAdminUser() {\n        Mockito.doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Mockito.doReturn(roles).when(roleDaoMock).findAllByRoleType(RoleType.User);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.User);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(0)).isRootAdmin(Mockito.anyLong());\n        Mockito.verify(roleDaoMock, Mockito.times(1)).findAllByRoleType(Mockito.any(RoleType.class));\n    }\n","date":"2018-05-02 15:31:29","endLine":272,"groupId":"4621","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findRolesByTypeTestNonAdminRoleRootAdminUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/bc/50f3408987dacf3495f0b88d3568c0c1f95c0a.src","preCode":"    public void findRolesByTypeTestNonAdminRoleRootAdminUser() {\n        Mockito.doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Mockito.doReturn(roles).when(roleDaoMock).findAllByRoleType(RoleType.User);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.User);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(0)).isRootAdmin(Mockito.anyLong());\n        Mockito.verify(roleDaoMock, Mockito.times(1)).findAllByRoleType(Mockito.any(RoleType.class));\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/acl/RoleManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"B"}],"commitId":"c6b4467d7891bad4f7c27d1e22f0beccacb08bd5","commitMessage":"@@@When creating a new account (via domain admin) it is possible to select ?root admin? as the role for the new user (#2606)\n\n* create account with domain admin showing 'root admin' role\n\nDomain admins should not be able to assign the role of root admin to new users. Therefore.  the role ?root admin? (or any other of the same type) should not be visible to domain admins.\n\n* License and formatting\n\n* Break long sentence into multiple lines\n\n* Fix wording of method 'getCurrentAccount'\n\n* fix typo in variable name\n","date":"2018-05-02 15:31:29","modifiedFileCount":"3","status":"B","submitter":"Rafael Weing?rtner"},{"authorTime":"2020-02-12 15:28:25","codes":[{"authorDate":"2018-05-02 15:31:29","commitOrder":2,"curCode":"    public void findRolesByTypeTestAdminRoleRootAdminUser() {\n        Mockito.doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Mockito.doReturn(roles).when(roleDaoMock).findAllByRoleType(RoleType.Admin);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.Admin);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(1)).isRootAdmin(Mockito.anyLong());\n        Mockito.verify(roleDaoMock, Mockito.times(1)).findAllByRoleType(Mockito.any(RoleType.class));\n    }\n","date":"2018-05-02 15:31:29","endLine":257,"groupId":"4621","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"findRolesByTypeTestAdminRoleRootAdminUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/bc/50f3408987dacf3495f0b88d3568c0c1f95c0a.src","preCode":"    public void findRolesByTypeTestAdminRoleRootAdminUser() {\n        Mockito.doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Mockito.doReturn(roles).when(roleDaoMock).findAllByRoleType(RoleType.Admin);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.Admin);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(1)).isRootAdmin(Mockito.anyLong());\n        Mockito.verify(roleDaoMock, Mockito.times(1)).findAllByRoleType(Mockito.any(RoleType.class));\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/acl/RoleManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"N"},{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void findRolesByTypeTestNonAdminRoleRootAdminUser() {\n        Mockito.lenient().doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.lenient().doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Mockito.doReturn(roles).when(roleDaoMock).findAllByRoleType(RoleType.User);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.User);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(0)).isRootAdmin(Mockito.anyLong());\n        Mockito.verify(roleDaoMock, Mockito.times(1)).findAllByRoleType(Mockito.any(RoleType.class));\n    }\n","date":"2020-02-12 15:28:25","endLine":272,"groupId":"4621","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findRolesByTypeTestNonAdminRoleRootAdminUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e7/ce1acec3e5c1491b00e5b3380e33671d82063d.src","preCode":"    public void findRolesByTypeTestNonAdminRoleRootAdminUser() {\n        Mockito.doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Mockito.doReturn(roles).when(roleDaoMock).findAllByRoleType(RoleType.User);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.User);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(0)).isRootAdmin(Mockito.anyLong());\n        Mockito.verify(roleDaoMock, Mockito.times(1)).findAllByRoleType(Mockito.any(RoleType.class));\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/acl/RoleManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"M"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2020-07-29 16:38:02","codes":[{"authorDate":"2020-07-29 16:38:02","commitOrder":3,"curCode":"    public void findRolesByTypeTestAdminRoleRootAdminUser() {\n        Mockito.doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Pair<ArrayList<RoleVO>, Integer> toBeReturned = new Pair(roles, 1);\n        Mockito.doReturn(toBeReturned).when(roleDaoMock).findAllByRoleType(RoleType.Admin, null, null);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.Admin);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(1)).isRootAdmin(Mockito.anyLong());\n    }\n","date":"2020-07-29 16:38:02","endLine":258,"groupId":"101256","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"findRolesByTypeTestAdminRoleRootAdminUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a1/be45415418c15d7e13705c8a8143977dd9b472.src","preCode":"    public void findRolesByTypeTestAdminRoleRootAdminUser() {\n        Mockito.doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Mockito.doReturn(roles).when(roleDaoMock).findAllByRoleType(RoleType.Admin);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.Admin);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(1)).isRootAdmin(Mockito.anyLong());\n        Mockito.verify(roleDaoMock, Mockito.times(1)).findAllByRoleType(Mockito.any(RoleType.class));\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/acl/RoleManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"},{"authorDate":"2020-07-29 16:38:02","commitOrder":3,"curCode":"    public void findRolesByTypeTestNonAdminRoleRootAdminUser() {\n        Mockito.lenient().doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.lenient().doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Pair<ArrayList<RoleVO>, Integer> toBeReturned = new Pair(roles, 1);\n        Mockito.doReturn(toBeReturned).when(roleDaoMock).findAllByRoleType(RoleType.User, null, null);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.User);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(0)).isRootAdmin(Mockito.anyLong());\n    }\n","date":"2020-07-29 16:38:02","endLine":273,"groupId":"101256","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"findRolesByTypeTestNonAdminRoleRootAdminUser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a1/be45415418c15d7e13705c8a8143977dd9b472.src","preCode":"    public void findRolesByTypeTestNonAdminRoleRootAdminUser() {\n        Mockito.lenient().doReturn(accountMock).when(roleManagerImpl).getCurrentAccount();\n        Mockito.lenient().doReturn(true).when(accountManagerMock).isRootAdmin(accountMockId);\n\n        List<Role> roles = new ArrayList<>();\n        roles.add(Mockito.mock(Role.class));\n        Mockito.doReturn(roles).when(roleDaoMock).findAllByRoleType(RoleType.User);\n        List<Role> returnedRoles = roleManagerImpl.findRolesByType(RoleType.User);\n\n        Assert.assertEquals(1, returnedRoles.size());\n        Mockito.verify(accountManagerMock, Mockito.times(0)).isRootAdmin(Mockito.anyLong());\n        Mockito.verify(roleDaoMock, Mockito.times(1)).findAllByRoleType(Mockito.any(RoleType.class));\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/acl/RoleManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"}],"commitId":"36ef85012f69af59657c87ad88184769549d8792","commitMessage":"@@@Merge remote-tracking branch 'origin/4.14'\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2020-07-29 16:38:02","modifiedFileCount":"13","status":"M","submitter":"Rohit Yadav"}]
