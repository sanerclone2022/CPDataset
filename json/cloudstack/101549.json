[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForImageStoresInternal(ListImageStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.Image);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"providerName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","date":"2018-01-20 05:49:27","endLine":2458,"groupId":"8585","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"searchForImageStoresInternal","params":"(ListImageStoresCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/728ef0f78a89a60fa81fa6bfab723232623813.src","preCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForImageStoresInternal(ListImageStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.Image);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"providerName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2391,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForCacheStoresInternal(ListSecondaryStagingStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.ImageCache);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"provider\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","date":"2018-01-20 05:49:27","endLine":2537,"groupId":"8827","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"searchForCacheStoresInternal","params":"(ListSecondaryStagingStoresCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/728ef0f78a89a60fa81fa6bfab723232623813.src","preCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForCacheStoresInternal(ListSecondaryStagingStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.ImageCache);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"provider\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2470,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-09-17 12:42:10","commitOrder":2,"curCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForImageStoresInternal(ListImageStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n        Boolean readonly = cmd.getReadonly();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n        sb.and(\"readonly\", sb.entity().isReadonly(), Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.Image);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"providerName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n        if (readonly != null) {\n            sc.setParameters(\"readonly\", readonly);\n        }\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","date":"2020-09-17 12:42:10","endLine":2600,"groupId":"3755","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"searchForImageStoresInternal","params":"(ListImageStoresCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/15/4a2930859717a6ce3f617aa772c9e1db8f3f60.src","preCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForImageStoresInternal(ListImageStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.Image);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"providerName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2529,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForCacheStoresInternal(ListSecondaryStagingStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.ImageCache);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"provider\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","date":"2018-01-20 05:49:27","endLine":2537,"groupId":"8827","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"searchForCacheStoresInternal","params":"(ListSecondaryStagingStoresCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/728ef0f78a89a60fa81fa6bfab723232623813.src","preCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForCacheStoresInternal(ListSecondaryStagingStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.ImageCache);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"provider\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2470,"status":"N"}],"commitId":"b464fe41c67812145731c7c6c3edebb94bc47487","commitMessage":"@@@server: Secondary Storage Usage Improvements (#4053)\n\nThis feature enables the following:\nBalanced migration of data objects from source Image store to destination Image store(s)\nComplete migration of data\nsetting an image store to read-only\nviewing download progress of templates across all data stores\nRelated Primate PR: apache/cloudstack-primate#326","date":"2020-09-17 12:42:10","modifiedFileCount":"55","status":"M","submitter":"Pearl Dsilva"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":3,"curCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForImageStoresInternal(ListImageStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.Image);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"providerName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","date":"2020-10-26 21:24:14","endLine":2645,"groupId":"8585","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"searchForImageStoresInternal","params":"(ListImageStoresCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e8/161bc4c652567bab2d567b664638c0381c2712.src","preCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForImageStoresInternal(ListImageStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n        Boolean readonly = cmd.getReadonly();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n        sb.and(\"readonly\", sb.entity().isReadonly(), Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.Image);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"providerName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n        if (readonly != null) {\n            sc.setParameters(\"readonly\", readonly);\n        }\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2578,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForCacheStoresInternal(ListSecondaryStagingStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.ImageCache);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"provider\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","date":"2018-01-20 05:49:27","endLine":2537,"groupId":"8827","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"searchForCacheStoresInternal","params":"(ListSecondaryStagingStoresCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/728ef0f78a89a60fa81fa6bfab723232623813.src","preCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForCacheStoresInternal(ListSecondaryStagingStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.ImageCache);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"provider\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2470,"status":"N"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-11-16 20:37:11","commitOrder":4,"curCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForImageStoresInternal(ListImageStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n        Boolean readonly = cmd.getReadonly();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n        sb.and(\"readonly\", sb.entity().isReadonly(), Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.Image);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"providerName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n        if (readonly != null) {\n            sc.setParameters(\"readonly\", readonly);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","date":"2020-11-16 20:37:11","endLine":2654,"groupId":"101549","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"searchForImageStoresInternal","params":"(ListImageStoresCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ac/975195d5e82e08e5cef28024470b8900087c0f.src","preCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForImageStoresInternal(ListImageStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.Image);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"providerName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2582,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":4,"curCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForCacheStoresInternal(ListSecondaryStagingStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.ImageCache);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"provider\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","date":"2018-01-20 05:49:27","endLine":2537,"groupId":"101549","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"searchForCacheStoresInternal","params":"(ListSecondaryStagingStoresCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/728ef0f78a89a60fa81fa6bfab723232623813.src","preCode":"    private Pair<List<ImageStoreJoinVO>, Integer> searchForCacheStoresInternal(ListSecondaryStagingStoresCmd cmd) {\n\n        Long zoneId = _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(), cmd.getZoneId());\n        Object id = cmd.getId();\n        Object name = cmd.getStoreName();\n        String provider = cmd.getProvider();\n        String protocol = cmd.getProtocol();\n        Object keyword = cmd.getKeyword();\n        Long startIndex = cmd.getStartIndex();\n        Long pageSize = cmd.getPageSizeVal();\n\n        Filter searchFilter = new Filter(ImageStoreJoinVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n\n        SearchBuilder<ImageStoreJoinVO> sb = _imageStoreJoinDao.createSearchBuilder();\n        sb.select(null, Func.DISTINCT, sb.entity().getId()); \r\n        \r\n        sb.and(\"id\", sb.entity().getId(), SearchCriteria.Op.EQ);\n        sb.and(\"name\", sb.entity().getName(), SearchCriteria.Op.EQ);\n        sb.and(\"dataCenterId\", sb.entity().getZoneId(), SearchCriteria.Op.EQ);\n        sb.and(\"protocol\", sb.entity().getProtocol(), SearchCriteria.Op.EQ);\n        sb.and(\"provider\", sb.entity().getProviderName(), SearchCriteria.Op.EQ);\n        sb.and(\"role\", sb.entity().getRole(), SearchCriteria.Op.EQ);\n\n        SearchCriteria<ImageStoreJoinVO> sc = sb.create();\n        sc.setParameters(\"role\", DataStoreRole.ImageCache);\n\n        if (keyword != null) {\n            SearchCriteria<ImageStoreJoinVO> ssc = _imageStoreJoinDao.createSearchCriteria();\n            ssc.addOr(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            ssc.addOr(\"provider\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n            sc.addAnd(\"name\", SearchCriteria.Op.SC, ssc);\n        }\n\n        if (id != null) {\n            sc.setParameters(\"id\", id);\n        }\n\n        if (name != null) {\n            sc.setParameters(\"name\", name);\n        }\n\n        if (zoneId != null) {\n            sc.setParameters(\"dataCenterId\", zoneId);\n        }\n        if (provider != null) {\n            sc.setParameters(\"provider\", provider);\n        }\n        if (protocol != null) {\n            sc.setParameters(\"protocol\", protocol);\n        }\n\n        \r\n        Pair<List<ImageStoreJoinVO>, Integer> uniqueStorePair = _imageStoreJoinDao.searchAndCount(sc, searchFilter);\n        Integer count = uniqueStorePair.second();\n        if (count.intValue() == 0) {\n            \r\n            return uniqueStorePair;\n        }\n        List<ImageStoreJoinVO> uniqueStores = uniqueStorePair.first();\n        Long[] vrIds = new Long[uniqueStores.size()];\n        int i = 0;\n        for (ImageStoreJoinVO v : uniqueStores) {\n            vrIds[i++] = v.getId();\n        }\n        List<ImageStoreJoinVO> vrs = _imageStoreJoinDao.searchByIds(vrIds);\n        return new Pair<List<ImageStoreJoinVO>, Integer>(vrs, count);\n\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2470,"status":"N"}],"commitId":"7f408ec967327a152d903dcc55260ccff9bad0fd","commitMessage":"@@@Fix: Listing projects comprising of only the user's on listAll=true (#4469)\n\nCo-authored-by: Pearl Dsilva <pearl.dsilva@shapeblue.com>","date":"2020-11-16 20:37:11","modifiedFileCount":"2","status":"M","submitter":"Pearl Dsilva"}]
