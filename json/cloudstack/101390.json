[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private boolean isPublicIPAllocated(long ip, long vlanDbId, PreparedStatement stmt) {\n        try(ResultSet rs = stmt.executeQuery();) {\n            stmt.clearParameters();\n            stmt.setLong(1, ip);\n            stmt.setLong(2, vlanDbId);\n            if (rs.next()) {\n                return (rs.getString(\"allocated\") != null);\n            } else {\n                return false;\n            }\n        }\n        catch (SQLException ex) {\n            System.out.println(ex.getMessage());\n            return true;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":397,"groupId":"216","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"isPublicIPAllocated","params":"(longip@longvlanDbId@PreparedStatementstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/02/0c828a828dde0f3b4c1fb5780fa729c54c3d94.src","preCode":"    private boolean isPublicIPAllocated(long ip, long vlanDbId, PreparedStatement stmt) {\n        try(ResultSet rs = stmt.executeQuery();) {\n            stmt.clearParameters();\n            stmt.setLong(1, ip);\n            stmt.setLong(2, vlanDbId);\n            if (rs.next()) {\n                return (rs.getString(\"allocated\") != null);\n            } else {\n                return false;\n            }\n        }\n        catch (SQLException ex) {\n            System.out.println(ex.getMessage());\n            return true;\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/test/IPRangeConfig.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":382,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private boolean isPrivateIPAllocated(String ip, long podId, long zoneId, PreparedStatement stmt) {\n        try {\n            stmt.clearParameters();\n            stmt.setString(1, ip);\n            stmt.setLong(2, zoneId);\n            stmt.setLong(3, podId);\n            try(ResultSet rs = stmt.executeQuery();) {\n                if (rs.next()) {\n                    return (rs.getString(\"taken\") != null);\n                } else {\n                    return false;\n                }\n            }\n            catch (Exception ex) {\n                System.out.println(ex.getMessage());\n                return true;\n            }\n        } catch (SQLException ex) {\n            System.out.println(ex.getMessage());\n            return true;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":420,"groupId":"512","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"isPrivateIPAllocated","params":"(Stringip@longpodId@longzoneId@PreparedStatementstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/02/0c828a828dde0f3b4c1fb5780fa729c54c3d94.src","preCode":"    private boolean isPrivateIPAllocated(String ip, long podId, long zoneId, PreparedStatement stmt) {\n        try {\n            stmt.clearParameters();\n            stmt.setString(1, ip);\n            stmt.setLong(2, zoneId);\n            stmt.setLong(3, podId);\n            try(ResultSet rs = stmt.executeQuery();) {\n                if (rs.next()) {\n                    return (rs.getString(\"taken\") != null);\n                } else {\n                    return false;\n                }\n            }\n            catch (Exception ex) {\n                System.out.println(ex.getMessage());\n                return true;\n            }\n        } catch (SQLException ex) {\n            System.out.println(ex.getMessage());\n            return true;\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/test/IPRangeConfig.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-09-20 13:26:29","commitOrder":2,"curCode":"    private boolean isPublicIPAllocated(String ip, long vlanDbId, PreparedStatement stmt) {\n       try {\n           stmt.clearParameters();\n           stmt.setString(1, ip);\n           stmt.setLong(2, vlanDbId);\n           try (ResultSet rs = stmt.executeQuery()) {\n           if (rs.next()) {\n               return (rs.getString(\"allocated\") != null);\n           } else {\n               return false;\n           }\n           }\n       catch (SQLException ex) {\n           System.out.println(ex.getMessage());\n           return true;\n       }\n       } catch (SQLException ex) {\n           System.out.println(ex.getMessage());\n           return true;\n       }\n    }\n","date":"2021-09-20 13:26:29","endLine":431,"groupId":"101390","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"isPublicIPAllocated","params":"(Stringip@longvlanDbId@PreparedStatementstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/22/ebb56963a10887d71b14d7bbe86157ef06cf69.src","preCode":"    private boolean isPublicIPAllocated(long ip, long vlanDbId, PreparedStatement stmt) {\n        try(ResultSet rs = stmt.executeQuery();) {\n            stmt.clearParameters();\n            stmt.setLong(1, ip);\n            stmt.setLong(2, vlanDbId);\n            if (rs.next()) {\n                return (rs.getString(\"allocated\") != null);\n            } else {\n                return false;\n            }\n        }\n        catch (SQLException ex) {\n            System.out.println(ex.getMessage());\n            return true;\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/test/IPRangeConfig.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private boolean isPrivateIPAllocated(String ip, long podId, long zoneId, PreparedStatement stmt) {\n        try {\n            stmt.clearParameters();\n            stmt.setString(1, ip);\n            stmt.setLong(2, zoneId);\n            stmt.setLong(3, podId);\n            try(ResultSet rs = stmt.executeQuery();) {\n                if (rs.next()) {\n                    return (rs.getString(\"taken\") != null);\n                } else {\n                    return false;\n                }\n            }\n            catch (Exception ex) {\n                System.out.println(ex.getMessage());\n                return true;\n            }\n        } catch (SQLException ex) {\n            System.out.println(ex.getMessage());\n            return true;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":420,"groupId":"101390","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"isPrivateIPAllocated","params":"(Stringip@longpodId@longzoneId@PreparedStatementstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/02/0c828a828dde0f3b4c1fb5780fa729c54c3d94.src","preCode":"    private boolean isPrivateIPAllocated(String ip, long podId, long zoneId, PreparedStatement stmt) {\n        try {\n            stmt.clearParameters();\n            stmt.setString(1, ip);\n            stmt.setLong(2, zoneId);\n            stmt.setLong(3, podId);\n            try(ResultSet rs = stmt.executeQuery();) {\n                if (rs.next()) {\n                    return (rs.getString(\"taken\") != null);\n                } else {\n                    return false;\n                }\n            }\n            catch (Exception ex) {\n                System.out.println(ex.getMessage());\n                return true;\n            }\n        } catch (SQLException ex) {\n            System.out.println(ex.getMessage());\n            return true;\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/test/IPRangeConfig.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"N"}],"commitId":"747608f75fc27ba67602a3a5a81511e42af26cf7","commitMessage":"@@@Add New API endpoint: UpdateVlanIpRange (#5411)\n\n* Added Logic to update the user_ip_address table\n\n* Edited ConfigurationManagerImpl\n\n* Refactor UpdateVlanIpRangeCmd location\n\n* Checkstyle corrections\n\n* Mock updateVlanAndPublicIpRange\n\n* Changes:\n- UpdateVlanIpRangeCmd - changed since to 4.15.0\n- ConfigurationService - Updated Javadoc\n- ConfigurationManager - Updated Javadoc\n- Added Unit tests\n- Added license\n- Update server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java\n- fix some bugs in #5411 and add support for ipv6 and forsystemvms\n- fix #5411: disallow forsystemvms if ip range is dedicated\n- update #5411: ui changes\n- update #5411: support gateway/netmask change\n- update #5411: change to sync call and fix bugs\n\nCo-authored-by: kioie <kioieddy@google.com>\nCo-authored-by: kioie <kioi@outlook.com>\nCo-authored-by: dahn <daan.hoogland@gmail.com>","date":"2021-09-20 13:26:29","modifiedFileCount":"11","status":"M","submitter":"Wei Zhou"}]
