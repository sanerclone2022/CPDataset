[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void deleteVnetBr(String brName) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":402,"groupId":"7834","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteVnetBr","params":"(StringbrName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/11/b22c494f46f1276bb7fddf6e98ed95a4b36882.src","preCode":"    private void deleteVnetBr(String brName) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/BridgeVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void deleteVnetBr(String brName) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":254,"groupId":"7834","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteVnetBr","params":"(StringbrName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8e/73d859039f7866e09fc6a6528c1798db29a119.src","preCode":"    private void deleteVnetBr(String brName) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/IvsVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-04-05 17:07:11","commitOrder":2,"curCode":"    private void deleteVnetBr(String brName, boolean deleteBr) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n            command.add(\"-d\", String.valueOf(deleteBr));\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","date":"2021-04-05 17:07:11","endLine":386,"groupId":"7834","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteVnetBr","params":"(StringbrName@booleandeleteBr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f2/98670492f7ab852759fe0758bf53e6b9679098.src","preCode":"    private void deleteVnetBr(String brName) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/BridgeVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":330,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private void deleteVnetBr(String brName) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":254,"groupId":"7834","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteVnetBr","params":"(StringbrName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8e/73d859039f7866e09fc6a6528c1798db29a119.src","preCode":"    private void deleteVnetBr(String brName) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/IvsVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"N"}],"commitId":"0dbeb262e4f483e06ca335aadcee9664cf7f35c4","commitMessage":"@@@server: Support for persistence mode in L2 networks (#4561)\n\nThis PR aims at introducing persistence mode in L2 networks and enhancing the behavior in Isolated networks\nDoc PR apache/cloudstack-documentation#183\n\nCo-authored-by: Pearl Dsilva <pearl.dsilva@shapeblue.com>","date":"2021-04-05 17:07:11","modifiedFileCount":"27","status":"M","submitter":"Pearl Dsilva"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-06-25 15:03:54","commitOrder":3,"curCode":"    private void deleteVnetBr(String brName, boolean deleteBr) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n            if (cmdout != null && !cmdout.contains(\"vxlan\")) {\n                command.add(\"-d\", String.valueOf(deleteBr));\n            }\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","date":"2021-06-25 15:03:54","endLine":388,"groupId":"103284","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"deleteVnetBr","params":"(StringbrName@booleandeleteBr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/74/1aa72172eb7112d619ce531131c18157fb98b2.src","preCode":"    private void deleteVnetBr(String brName, boolean deleteBr) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n            command.add(\"-d\", String.valueOf(deleteBr));\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/BridgeVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":330,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    private void deleteVnetBr(String brName) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":254,"groupId":"103284","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteVnetBr","params":"(StringbrName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8e/73d859039f7866e09fc6a6528c1798db29a119.src","preCode":"    private void deleteVnetBr(String brName) {\n        synchronized (_vnetBridgeMonitor) {\n            String cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName);\n            if (cmdout == null)\n                \r\n                return;\n            cmdout = Script.runSimpleBashScript(\"ls /sys/class/net/\" + brName + \"/brif | tr '\\n' ' '\");\n            if (cmdout != null && cmdout.contains(\"vnet\")) {\n                \r\n                return;\n            }\n\n            Pattern oldStyleBrNameRegex = Pattern.compile(\"^cloudVirBr(\\\\d+)$\");\n            Pattern brNameRegex = Pattern.compile(\"^br(\\\\S+)-(\\\\d+)$\");\n            Matcher oldStyleBrNameMatcher = oldStyleBrNameRegex.matcher(brName);\n            Matcher brNameMatcher = brNameRegex.matcher(brName);\n\n            String pName = null;\n            String vNetId = null;\n            if (oldStyleBrNameMatcher.find()) {\n                \r\n                pName = \"undefined\";\n                vNetId = oldStyleBrNameMatcher.group(1);\n            } else if (brNameMatcher.find()) {\n                if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {\n                    pName = brNameMatcher.group(1);\n                } else {\n                    pName = \"undefined\";\n                }\n                vNetId = brNameMatcher.group(2);\n            }\n\n            if (vNetId == null || vNetId.isEmpty()) {\n                s_logger.debug(\"unable to get a vNet ID from name \" + brName);\n                return;\n            }\n\n            String scriptPath = null;\n            if (cmdout != null && cmdout.contains(\"vxlan\")) {\n                scriptPath = _modifyVxlanPath;\n            } else {\n                scriptPath = _modifyVlanPath;\n            }\n\n            final Script command = new Script(scriptPath, _timeout, s_logger);\n            command.add(\"-o\", \"delete\");\n            command.add(\"-v\", vNetId);\n            command.add(\"-p\", pName);\n            command.add(\"-b\", brName);\n\n            final String result = command.execute();\n            if (result != null) {\n                s_logger.debug(\"Delete bridge \" + brName + \" failed: \" + result);\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/IvsVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"N"}],"commitId":"5edcf33ff0c7c7322434f3e6d28eedf0fdcc0a9d","commitMessage":"@@@vxlan: Fix failure to delete vxlan (#5079)\n\n","date":"2021-06-25 15:03:54","modifiedFileCount":"1","status":"M","submitter":"Pearl Dsilva"}]
