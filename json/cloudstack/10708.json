[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void handleVolumeCopyFromManagedStorageToSecondaryStorage(VolumeInfo srcVolumeInfo, VolumeInfo destVolumeInfo,\n                                                                      AsyncCompletionCallback<CopyCommandResult> callback) {\n        String errMsg = null;\n        String volumePath = null;\n\n        try {\n            if (!ImageFormat.QCOW2.equals(srcVolumeInfo.getFormat())) {\n                throw new CloudRuntimeException(\"Currently, only the KVM hypervisor type is supported for the migration of a volume \" +\n                        \"from managed storage to non-managed storage.\");\n            }\n\n            HypervisorType hypervisorType = HypervisorType.KVM;\n            VirtualMachine vm = srcVolumeInfo.getAttachedVM();\n\n            if (vm != null && vm.getState() != VirtualMachine.State.Stopped) {\n                throw new CloudRuntimeException(\"Currently, if a volume to copy from managed storage to secondary storage is attached to \" +\n                        \"a VM, the VM must be in the Stopped state.\");\n            }\n\n            long srcStoragePoolId = srcVolumeInfo.getPoolId();\n            StoragePoolVO srcStoragePoolVO = _storagePoolDao.findById(srcStoragePoolId);\n\n            HostVO hostVO;\n\n            if (srcStoragePoolVO.getClusterId() != null) {\n                hostVO = getHostInCluster(srcStoragePoolVO.getClusterId());\n            }\n            else {\n                hostVO = getHost(srcVolumeInfo.getDataCenterId(), hypervisorType, false);\n            }\n\n            volumePath = copyVolumeToSecondaryStorage(srcVolumeInfo, destVolumeInfo, hostVO,\n                    \"Unable to copy the volume from managed storage to secondary storage\");\n        }\n        catch (Exception ex) {\n            errMsg = \"Migration operation failed in 'StorageSystemDataMotionStrategy.handleVolumeCopyFromManagedStorageToSecondaryStorage': \" +\n                    ex.getMessage();\n\n            throw new CloudRuntimeException(errMsg);\n        }\n        finally {\n            CopyCmdAnswer copyCmdAnswer;\n\n            if (errMsg != null) {\n                copyCmdAnswer = new CopyCmdAnswer(errMsg);\n            }\n            else if (volumePath == null) {\n                copyCmdAnswer = new CopyCmdAnswer(\"Unable to acquire a volume path\");\n            }\n            else {\n                VolumeObjectTO volumeObjectTO = (VolumeObjectTO)destVolumeInfo.getTO();\n\n                volumeObjectTO.setPath(volumePath);\n\n                copyCmdAnswer = new CopyCmdAnswer(volumeObjectTO);\n            }\n\n            CopyCommandResult result = new CopyCommandResult(null, copyCmdAnswer);\n\n            result.setResult(errMsg);\n\n            callback.complete(result);\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":464,"groupId":"4035","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handleVolumeCopyFromManagedStorageToSecondaryStorage","params":"(VolumeInfosrcVolumeInfo@VolumeInfodestVolumeInfo@AsyncCompletionCallback<CopyCommandResult>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/30/cff850c8875d7519f6b5fa5a4c53e0ef026860.src","preCode":"    private void handleVolumeCopyFromManagedStorageToSecondaryStorage(VolumeInfo srcVolumeInfo, VolumeInfo destVolumeInfo,\n                                                                      AsyncCompletionCallback<CopyCommandResult> callback) {\n        String errMsg = null;\n        String volumePath = null;\n\n        try {\n            if (!ImageFormat.QCOW2.equals(srcVolumeInfo.getFormat())) {\n                throw new CloudRuntimeException(\"Currently, only the KVM hypervisor type is supported for the migration of a volume \" +\n                        \"from managed storage to non-managed storage.\");\n            }\n\n            HypervisorType hypervisorType = HypervisorType.KVM;\n            VirtualMachine vm = srcVolumeInfo.getAttachedVM();\n\n            if (vm != null && vm.getState() != VirtualMachine.State.Stopped) {\n                throw new CloudRuntimeException(\"Currently, if a volume to copy from managed storage to secondary storage is attached to \" +\n                        \"a VM, the VM must be in the Stopped state.\");\n            }\n\n            long srcStoragePoolId = srcVolumeInfo.getPoolId();\n            StoragePoolVO srcStoragePoolVO = _storagePoolDao.findById(srcStoragePoolId);\n\n            HostVO hostVO;\n\n            if (srcStoragePoolVO.getClusterId() != null) {\n                hostVO = getHostInCluster(srcStoragePoolVO.getClusterId());\n            }\n            else {\n                hostVO = getHost(srcVolumeInfo.getDataCenterId(), hypervisorType, false);\n            }\n\n            volumePath = copyVolumeToSecondaryStorage(srcVolumeInfo, destVolumeInfo, hostVO,\n                    \"Unable to copy the volume from managed storage to secondary storage\");\n        }\n        catch (Exception ex) {\n            errMsg = \"Migration operation failed in 'StorageSystemDataMotionStrategy.handleVolumeCopyFromManagedStorageToSecondaryStorage': \" +\n                    ex.getMessage();\n\n            throw new CloudRuntimeException(errMsg);\n        }\n        finally {\n            CopyCmdAnswer copyCmdAnswer;\n\n            if (errMsg != null) {\n                copyCmdAnswer = new CopyCmdAnswer(errMsg);\n            }\n            else if (volumePath == null) {\n                copyCmdAnswer = new CopyCmdAnswer(\"Unable to acquire a volume path\");\n            }\n            else {\n                VolumeObjectTO volumeObjectTO = (VolumeObjectTO)destVolumeInfo.getTO();\n\n                volumeObjectTO.setPath(volumePath);\n\n                copyCmdAnswer = new CopyCmdAnswer(volumeObjectTO);\n            }\n\n            CopyCommandResult result = new CopyCommandResult(null, copyCmdAnswer);\n\n            result.setResult(errMsg);\n\n            callback.complete(result);\n        }\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/StorageSystemDataMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":401,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void handleVolumeMigrationFromManagedStorageToNonManagedStorage(VolumeInfo srcVolumeInfo, VolumeInfo destVolumeInfo,\n                                                                            AsyncCompletionCallback<CopyCommandResult> callback) {\n        String errMsg = null;\n\n        try {\n            if (!ImageFormat.QCOW2.equals(srcVolumeInfo.getFormat())) {\n                throw new CloudRuntimeException(\"Currently, only the KVM hypervisor type is supported for the migration of a volume \" +\n                        \"from managed storage to non-managed storage.\");\n            }\n\n            HypervisorType hypervisorType = HypervisorType.KVM;\n            VirtualMachine vm = srcVolumeInfo.getAttachedVM();\n\n            if (vm != null && vm.getState() != VirtualMachine.State.Stopped) {\n                throw new CloudRuntimeException(\"Currently, if a volume to migrate from managed storage to non-managed storage is attached to \" +\n                        \"a VM, the VM must be in the Stopped state.\");\n            }\n\n            long destStoragePoolId = destVolumeInfo.getPoolId();\n            StoragePoolVO destStoragePoolVO = _storagePoolDao.findById(destStoragePoolId);\n\n            HostVO hostVO;\n\n            if (destStoragePoolVO.getClusterId() != null) {\n                hostVO = getHostInCluster(destStoragePoolVO.getClusterId());\n            }\n            else {\n                hostVO = getHost(destVolumeInfo.getDataCenterId(), hypervisorType, false);\n            }\n\n            setCertainVolumeValuesNull(destVolumeInfo.getId());\n\n            \r\n            String path = migrateVolume(srcVolumeInfo, destVolumeInfo, hostVO, \"Unable to migrate the volume from managed storage to non-managed storage\");\n\n            updateVolumePath(destVolumeInfo.getId(), path);\n        }\n        catch (Exception ex) {\n            errMsg = \"Migration operation failed in 'StorageSystemDataMotionStrategy.handleVolumeMigrationFromManagedStorageToNonManagedStorage': \" +\n                    ex.getMessage();\n\n            throw new CloudRuntimeException(errMsg);\n        }\n        finally {\n            CopyCmdAnswer copyCmdAnswer;\n\n            if (errMsg != null) {\n                copyCmdAnswer = new CopyCmdAnswer(errMsg);\n            }\n            else {\n                destVolumeInfo = _volumeDataFactory.getVolume(destVolumeInfo.getId(), destVolumeInfo.getDataStore());\n\n                DataTO dataTO = destVolumeInfo.getTO();\n\n                copyCmdAnswer = new CopyCmdAnswer(dataTO);\n            }\n\n            CopyCommandResult result = new CopyCommandResult(null, copyCmdAnswer);\n\n            result.setResult(errMsg);\n\n            callback.complete(result);\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":529,"groupId":"4038","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"handleVolumeMigrationFromManagedStorageToNonManagedStorage","params":"(VolumeInfosrcVolumeInfo@VolumeInfodestVolumeInfo@AsyncCompletionCallback<CopyCommandResult>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/30/cff850c8875d7519f6b5fa5a4c53e0ef026860.src","preCode":"    private void handleVolumeMigrationFromManagedStorageToNonManagedStorage(VolumeInfo srcVolumeInfo, VolumeInfo destVolumeInfo,\n                                                                            AsyncCompletionCallback<CopyCommandResult> callback) {\n        String errMsg = null;\n\n        try {\n            if (!ImageFormat.QCOW2.equals(srcVolumeInfo.getFormat())) {\n                throw new CloudRuntimeException(\"Currently, only the KVM hypervisor type is supported for the migration of a volume \" +\n                        \"from managed storage to non-managed storage.\");\n            }\n\n            HypervisorType hypervisorType = HypervisorType.KVM;\n            VirtualMachine vm = srcVolumeInfo.getAttachedVM();\n\n            if (vm != null && vm.getState() != VirtualMachine.State.Stopped) {\n                throw new CloudRuntimeException(\"Currently, if a volume to migrate from managed storage to non-managed storage is attached to \" +\n                        \"a VM, the VM must be in the Stopped state.\");\n            }\n\n            long destStoragePoolId = destVolumeInfo.getPoolId();\n            StoragePoolVO destStoragePoolVO = _storagePoolDao.findById(destStoragePoolId);\n\n            HostVO hostVO;\n\n            if (destStoragePoolVO.getClusterId() != null) {\n                hostVO = getHostInCluster(destStoragePoolVO.getClusterId());\n            }\n            else {\n                hostVO = getHost(destVolumeInfo.getDataCenterId(), hypervisorType, false);\n            }\n\n            setCertainVolumeValuesNull(destVolumeInfo.getId());\n\n            \r\n            String path = migrateVolume(srcVolumeInfo, destVolumeInfo, hostVO, \"Unable to migrate the volume from managed storage to non-managed storage\");\n\n            updateVolumePath(destVolumeInfo.getId(), path);\n        }\n        catch (Exception ex) {\n            errMsg = \"Migration operation failed in 'StorageSystemDataMotionStrategy.handleVolumeMigrationFromManagedStorageToNonManagedStorage': \" +\n                    ex.getMessage();\n\n            throw new CloudRuntimeException(errMsg);\n        }\n        finally {\n            CopyCmdAnswer copyCmdAnswer;\n\n            if (errMsg != null) {\n                copyCmdAnswer = new CopyCmdAnswer(errMsg);\n            }\n            else {\n                destVolumeInfo = _volumeDataFactory.getVolume(destVolumeInfo.getId(), destVolumeInfo.getDataStore());\n\n                DataTO dataTO = destVolumeInfo.getTO();\n\n                copyCmdAnswer = new CopyCmdAnswer(dataTO);\n            }\n\n            CopyCommandResult result = new CopyCommandResult(null, copyCmdAnswer);\n\n            result.setResult(errMsg);\n\n            callback.complete(result);\n        }\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/StorageSystemDataMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":466,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-08-15 05:20:04","codes":[{"authorDate":"2018-08-15 05:20:04","commitOrder":2,"curCode":"    private void handleVolumeCopyFromManagedStorageToSecondaryStorage(VolumeInfo srcVolumeInfo, VolumeInfo destVolumeInfo,\n                                                                      AsyncCompletionCallback<CopyCommandResult> callback) {\n        String errMsg = null;\n        String volumePath = null;\n\n        try {\n            if (!ImageFormat.QCOW2.equals(srcVolumeInfo.getFormat())) {\n                throw new CloudRuntimeException(\"Currently, only the KVM hypervisor type is supported for the migration of a volume \" +\n                        \"from managed storage to non-managed storage.\");\n            }\n\n            HypervisorType hypervisorType = HypervisorType.KVM;\n            VirtualMachine vm = srcVolumeInfo.getAttachedVM();\n\n            if (vm != null && vm.getState() != VirtualMachine.State.Stopped) {\n                throw new CloudRuntimeException(\"Currently, if a volume to copy from managed storage to secondary storage is attached to \" +\n                        \"a VM, the VM must be in the Stopped state.\");\n            }\n\n            long srcStoragePoolId = srcVolumeInfo.getPoolId();\n            StoragePoolVO srcStoragePoolVO = _storagePoolDao.findById(srcStoragePoolId);\n\n            HostVO hostVO;\n\n            if (srcStoragePoolVO.getClusterId() != null) {\n                hostVO = getHostInCluster(srcStoragePoolVO.getClusterId());\n            }\n            else {\n                hostVO = getHost(srcVolumeInfo.getDataCenterId(), hypervisorType, false);\n            }\n\n            volumePath = copyManagedVolumeToSecondaryStorage(srcVolumeInfo, destVolumeInfo, hostVO,\n                    \"Unable to copy the volume from managed storage to secondary storage\");\n        }\n        catch (Exception ex) {\n            errMsg = \"Migration operation failed in 'StorageSystemDataMotionStrategy.handleVolumeCopyFromManagedStorageToSecondaryStorage': \" +\n                    ex.getMessage();\n\n            throw new CloudRuntimeException(errMsg);\n        }\n        finally {\n            CopyCmdAnswer copyCmdAnswer;\n\n            if (errMsg != null) {\n                copyCmdAnswer = new CopyCmdAnswer(errMsg);\n            }\n            else if (volumePath == null) {\n                copyCmdAnswer = new CopyCmdAnswer(\"Unable to acquire a volume path\");\n            }\n            else {\n                VolumeObjectTO volumeObjectTO = (VolumeObjectTO)destVolumeInfo.getTO();\n\n                volumeObjectTO.setPath(volumePath);\n\n                copyCmdAnswer = new CopyCmdAnswer(volumeObjectTO);\n            }\n\n            CopyCommandResult result = new CopyCommandResult(null, copyCmdAnswer);\n\n            result.setResult(errMsg);\n\n            callback.complete(result);\n        }\n    }\n","date":"2018-08-15 05:20:04","endLine":476,"groupId":"10708","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handleVolumeCopyFromManagedStorageToSecondaryStorage","params":"(VolumeInfosrcVolumeInfo@VolumeInfodestVolumeInfo@AsyncCompletionCallback<CopyCommandResult>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/74/ad8cb27c1a9942eb08b0e3aff85a837603961e.src","preCode":"    private void handleVolumeCopyFromManagedStorageToSecondaryStorage(VolumeInfo srcVolumeInfo, VolumeInfo destVolumeInfo,\n                                                                      AsyncCompletionCallback<CopyCommandResult> callback) {\n        String errMsg = null;\n        String volumePath = null;\n\n        try {\n            if (!ImageFormat.QCOW2.equals(srcVolumeInfo.getFormat())) {\n                throw new CloudRuntimeException(\"Currently, only the KVM hypervisor type is supported for the migration of a volume \" +\n                        \"from managed storage to non-managed storage.\");\n            }\n\n            HypervisorType hypervisorType = HypervisorType.KVM;\n            VirtualMachine vm = srcVolumeInfo.getAttachedVM();\n\n            if (vm != null && vm.getState() != VirtualMachine.State.Stopped) {\n                throw new CloudRuntimeException(\"Currently, if a volume to copy from managed storage to secondary storage is attached to \" +\n                        \"a VM, the VM must be in the Stopped state.\");\n            }\n\n            long srcStoragePoolId = srcVolumeInfo.getPoolId();\n            StoragePoolVO srcStoragePoolVO = _storagePoolDao.findById(srcStoragePoolId);\n\n            HostVO hostVO;\n\n            if (srcStoragePoolVO.getClusterId() != null) {\n                hostVO = getHostInCluster(srcStoragePoolVO.getClusterId());\n            }\n            else {\n                hostVO = getHost(srcVolumeInfo.getDataCenterId(), hypervisorType, false);\n            }\n\n            volumePath = copyVolumeToSecondaryStorage(srcVolumeInfo, destVolumeInfo, hostVO,\n                    \"Unable to copy the volume from managed storage to secondary storage\");\n        }\n        catch (Exception ex) {\n            errMsg = \"Migration operation failed in 'StorageSystemDataMotionStrategy.handleVolumeCopyFromManagedStorageToSecondaryStorage': \" +\n                    ex.getMessage();\n\n            throw new CloudRuntimeException(errMsg);\n        }\n        finally {\n            CopyCmdAnswer copyCmdAnswer;\n\n            if (errMsg != null) {\n                copyCmdAnswer = new CopyCmdAnswer(errMsg);\n            }\n            else if (volumePath == null) {\n                copyCmdAnswer = new CopyCmdAnswer(\"Unable to acquire a volume path\");\n            }\n            else {\n                VolumeObjectTO volumeObjectTO = (VolumeObjectTO)destVolumeInfo.getTO();\n\n                volumeObjectTO.setPath(volumePath);\n\n                copyCmdAnswer = new CopyCmdAnswer(volumeObjectTO);\n            }\n\n            CopyCommandResult result = new CopyCommandResult(null, copyCmdAnswer);\n\n            result.setResult(errMsg);\n\n            callback.complete(result);\n        }\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/StorageSystemDataMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":413,"status":"M"},{"authorDate":"2018-08-15 05:20:04","commitOrder":2,"curCode":"    private void handleVolumeMigrationFromManagedStorageToNonManagedStorage(VolumeInfo srcVolumeInfo, VolumeInfo destVolumeInfo,\n                                                                            AsyncCompletionCallback<CopyCommandResult> callback) {\n        String errMsg = null;\n\n        try {\n            if (!ImageFormat.QCOW2.equals(srcVolumeInfo.getFormat())) {\n                throw new CloudRuntimeException(\"Currently, only the KVM hypervisor type is supported for the migration of a volume \" +\n                        \"from managed storage to non-managed storage.\");\n            }\n\n            HypervisorType hypervisorType = HypervisorType.KVM;\n            VirtualMachine vm = srcVolumeInfo.getAttachedVM();\n\n            if (vm != null && vm.getState() != VirtualMachine.State.Stopped) {\n                throw new CloudRuntimeException(\"Currently, if a volume to migrate from managed storage to non-managed storage is attached to \" +\n                        \"a VM, the VM must be in the Stopped state.\");\n            }\n\n            long destStoragePoolId = destVolumeInfo.getPoolId();\n            StoragePoolVO destStoragePoolVO = _storagePoolDao.findById(destStoragePoolId);\n\n            HostVO hostVO;\n\n            if (destStoragePoolVO.getClusterId() != null) {\n                hostVO = getHostInCluster(destStoragePoolVO.getClusterId());\n            }\n            else {\n                hostVO = getHost(destVolumeInfo.getDataCenterId(), hypervisorType, false);\n            }\n\n            setCertainVolumeValuesNull(destVolumeInfo.getId());\n\n            \r\n            String path = migrateVolumeForKVM(srcVolumeInfo, destVolumeInfo, hostVO, \"Unable to migrate the volume from managed storage to non-managed storage\");\n\n            updateVolumePath(destVolumeInfo.getId(), path);\n        }\n        catch (Exception ex) {\n            errMsg = \"Migration operation failed in 'StorageSystemDataMotionStrategy.handleVolumeMigrationFromManagedStorageToNonManagedStorage': \" +\n                    ex.getMessage();\n\n            throw new CloudRuntimeException(errMsg);\n        }\n        finally {\n            CopyCmdAnswer copyCmdAnswer;\n\n            if (errMsg != null) {\n                copyCmdAnswer = new CopyCmdAnswer(errMsg);\n            }\n            else {\n                destVolumeInfo = _volumeDataFactory.getVolume(destVolumeInfo.getId(), destVolumeInfo.getDataStore());\n\n                DataTO dataTO = destVolumeInfo.getTO();\n\n                copyCmdAnswer = new CopyCmdAnswer(dataTO);\n            }\n\n            CopyCommandResult result = new CopyCommandResult(null, copyCmdAnswer);\n\n            result.setResult(errMsg);\n\n            callback.complete(result);\n        }\n    }\n","date":"2018-08-15 05:20:04","endLine":541,"groupId":"10708","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"handleVolumeMigrationFromManagedStorageToNonManagedStorage","params":"(VolumeInfosrcVolumeInfo@VolumeInfodestVolumeInfo@AsyncCompletionCallback<CopyCommandResult>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/74/ad8cb27c1a9942eb08b0e3aff85a837603961e.src","preCode":"    private void handleVolumeMigrationFromManagedStorageToNonManagedStorage(VolumeInfo srcVolumeInfo, VolumeInfo destVolumeInfo,\n                                                                            AsyncCompletionCallback<CopyCommandResult> callback) {\n        String errMsg = null;\n\n        try {\n            if (!ImageFormat.QCOW2.equals(srcVolumeInfo.getFormat())) {\n                throw new CloudRuntimeException(\"Currently, only the KVM hypervisor type is supported for the migration of a volume \" +\n                        \"from managed storage to non-managed storage.\");\n            }\n\n            HypervisorType hypervisorType = HypervisorType.KVM;\n            VirtualMachine vm = srcVolumeInfo.getAttachedVM();\n\n            if (vm != null && vm.getState() != VirtualMachine.State.Stopped) {\n                throw new CloudRuntimeException(\"Currently, if a volume to migrate from managed storage to non-managed storage is attached to \" +\n                        \"a VM, the VM must be in the Stopped state.\");\n            }\n\n            long destStoragePoolId = destVolumeInfo.getPoolId();\n            StoragePoolVO destStoragePoolVO = _storagePoolDao.findById(destStoragePoolId);\n\n            HostVO hostVO;\n\n            if (destStoragePoolVO.getClusterId() != null) {\n                hostVO = getHostInCluster(destStoragePoolVO.getClusterId());\n            }\n            else {\n                hostVO = getHost(destVolumeInfo.getDataCenterId(), hypervisorType, false);\n            }\n\n            setCertainVolumeValuesNull(destVolumeInfo.getId());\n\n            \r\n            String path = migrateVolume(srcVolumeInfo, destVolumeInfo, hostVO, \"Unable to migrate the volume from managed storage to non-managed storage\");\n\n            updateVolumePath(destVolumeInfo.getId(), path);\n        }\n        catch (Exception ex) {\n            errMsg = \"Migration operation failed in 'StorageSystemDataMotionStrategy.handleVolumeMigrationFromManagedStorageToNonManagedStorage': \" +\n                    ex.getMessage();\n\n            throw new CloudRuntimeException(errMsg);\n        }\n        finally {\n            CopyCmdAnswer copyCmdAnswer;\n\n            if (errMsg != null) {\n                copyCmdAnswer = new CopyCmdAnswer(errMsg);\n            }\n            else {\n                destVolumeInfo = _volumeDataFactory.getVolume(destVolumeInfo.getId(), destVolumeInfo.getDataStore());\n\n                DataTO dataTO = destVolumeInfo.getTO();\n\n                copyCmdAnswer = new CopyCmdAnswer(dataTO);\n            }\n\n            CopyCommandResult result = new CopyCommandResult(null, copyCmdAnswer);\n\n            result.setResult(errMsg);\n\n            callback.complete(result);\n        }\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/StorageSystemDataMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":478,"status":"M"}],"commitId":"f867f4a7c6ae6409eb04ed2332168e1cb83b559f","commitMessage":"@@@Merge pull request #2502 from mike-tutkowski/online-xs-ms-migration\n\n[CLOUDSTACK-10352] XenServer: Support online migration of a virtual disk from non-managed to managed storage","date":"2018-08-15 05:20:04","modifiedFileCount":"12","status":"M","submitter":"Mike Tutkowski"}]
