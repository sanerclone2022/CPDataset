[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public Answer copyVolumeFromImageCacheToPrimary(final CopyCommand cmd) {\n        final Connection conn = hypervisorResource.getConnection();\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final VolumeObjectTO srcVolume = (VolumeObjectTO) srcData;\n        final VolumeObjectTO destVolume = (VolumeObjectTO) destData;\n        final PrimaryDataStoreTO primaryStore = (PrimaryDataStoreTO) destVolume.getDataStore();\n        final DataStoreTO srcStore = srcVolume.getDataStore();\n\n        if (srcStore instanceof NfsTO) {\n            final NfsTO nfsStore = (NfsTO) srcStore;\n            final String volumePath = srcVolume.getPath();\n            int index = volumePath.lastIndexOf(\"/\");\n            final String volumeDirectory = volumePath.substring(0, index);\n            String volumeUuid = volumePath.substring(index + 1);\n            index = volumeUuid.indexOf(\".\");\n            if (index != -1) {\n                volumeUuid = volumeUuid.substring(0, index);\n            }\n            URI uri = null;\n            try {\n                uri = new URI(nfsStore.getUrl());\n            } catch (final Exception e) {\n                return new CopyCmdAnswer(e.toString());\n            }\n            final SR srcSr = createFileSr(conn, uri.getHost() + \":\" + uri.getPath(), volumeDirectory);\n            Task task = null;\n            try {\n                final SR primaryStoragePool = hypervisorResource.getStorageRepository(conn, primaryStore.getUuid());\n                final VDI srcVdi = VDI.getByUuid(conn, volumeUuid);\n                task = srcVdi.copyAsync(conn, primaryStoragePool, null, null);\n                \r\n                hypervisorResource.waitForTask(conn, task, 1000, wait * 1000);\n                hypervisorResource.checkForSuccess(conn, task);\n                final VDI destVdi = Types.toVDI(task, conn);\n                final VolumeObjectTO newVol = new VolumeObjectTO();\n                destVdi.setNameLabel(conn, srcVolume.getName());\n                newVol.setPath(destVdi.getUuid(conn));\n                newVol.setSize(srcVolume.getSize());\n\n                return new CopyCmdAnswer(newVol);\n            } catch (final Exception e) {\n                final String msg = \"Catch Exception \" + e.getClass().getName() + \" due to \" + e.toString();\n                s_logger.warn(msg, e);\n                return new CopyCmdAnswer(e.toString());\n            } finally {\n                if (task != null) {\n                    try {\n                        task.destroy(conn);\n                    } catch (final Exception e) {\n                        s_logger.warn(\"unable to destroy task(\" + task.toString() + \") due to \" + e.toString());\n                    }\n                }\n                if (srcSr != null) {\n                    hypervisorResource.removeSR(conn, srcSr);\n                }\n            }\n        }\n\n        s_logger.debug(\"unsupported protocol\");\n        return new CopyCmdAnswer(\"unsupported protocol\");\n    }\n","date":"2018-01-20 05:49:27","endLine":935,"groupId":"1439","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"copyVolumeFromImageCacheToPrimary","params":"(finalCopyCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ca/58e4a4154076b56881e85fdef5be58ca3aef24.src","preCode":"    public Answer copyVolumeFromImageCacheToPrimary(final CopyCommand cmd) {\n        final Connection conn = hypervisorResource.getConnection();\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final VolumeObjectTO srcVolume = (VolumeObjectTO) srcData;\n        final VolumeObjectTO destVolume = (VolumeObjectTO) destData;\n        final PrimaryDataStoreTO primaryStore = (PrimaryDataStoreTO) destVolume.getDataStore();\n        final DataStoreTO srcStore = srcVolume.getDataStore();\n\n        if (srcStore instanceof NfsTO) {\n            final NfsTO nfsStore = (NfsTO) srcStore;\n            final String volumePath = srcVolume.getPath();\n            int index = volumePath.lastIndexOf(\"/\");\n            final String volumeDirectory = volumePath.substring(0, index);\n            String volumeUuid = volumePath.substring(index + 1);\n            index = volumeUuid.indexOf(\".\");\n            if (index != -1) {\n                volumeUuid = volumeUuid.substring(0, index);\n            }\n            URI uri = null;\n            try {\n                uri = new URI(nfsStore.getUrl());\n            } catch (final Exception e) {\n                return new CopyCmdAnswer(e.toString());\n            }\n            final SR srcSr = createFileSr(conn, uri.getHost() + \":\" + uri.getPath(), volumeDirectory);\n            Task task = null;\n            try {\n                final SR primaryStoragePool = hypervisorResource.getStorageRepository(conn, primaryStore.getUuid());\n                final VDI srcVdi = VDI.getByUuid(conn, volumeUuid);\n                task = srcVdi.copyAsync(conn, primaryStoragePool, null, null);\n                \r\n                hypervisorResource.waitForTask(conn, task, 1000, wait * 1000);\n                hypervisorResource.checkForSuccess(conn, task);\n                final VDI destVdi = Types.toVDI(task, conn);\n                final VolumeObjectTO newVol = new VolumeObjectTO();\n                destVdi.setNameLabel(conn, srcVolume.getName());\n                newVol.setPath(destVdi.getUuid(conn));\n                newVol.setSize(srcVolume.getSize());\n\n                return new CopyCmdAnswer(newVol);\n            } catch (final Exception e) {\n                final String msg = \"Catch Exception \" + e.getClass().getName() + \" due to \" + e.toString();\n                s_logger.warn(msg, e);\n                return new CopyCmdAnswer(e.toString());\n            } finally {\n                if (task != null) {\n                    try {\n                        task.destroy(conn);\n                    } catch (final Exception e) {\n                        s_logger.warn(\"unable to destroy task(\" + task.toString() + \") due to \" + e.toString());\n                    }\n                }\n                if (srcSr != null) {\n                    hypervisorResource.removeSR(conn, srcSr);\n                }\n            }\n        }\n\n        s_logger.debug(\"unsupported protocol\");\n        return new CopyCmdAnswer(\"unsupported protocol\");\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/Xenserver625StorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":873,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public Answer copyVolumeFromImageCacheToPrimary(final CopyCommand cmd) {\n        final Connection conn = hypervisorResource.getConnection();\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final VolumeObjectTO srcVolume = (VolumeObjectTO) srcData;\n        final VolumeObjectTO destVolume = (VolumeObjectTO) destData;\n        final DataStoreTO srcStore = srcVolume.getDataStore();\n\n        if (srcStore instanceof NfsTO) {\n            final NfsTO nfsStore = (NfsTO) srcStore;\n            try {\n                final SR primaryStoragePool = hypervisorResource.getStorageRepository(conn, destVolume.getDataStore().getUuid());\n                final String srUuid = primaryStoragePool.getUuid(conn);\n                final URI uri = new URI(nfsStore.getUrl());\n                final String volumePath = uri.getHost() + \":\" + uri.getPath() + nfsStore.getPathSeparator() + srcVolume.getPath();\n                final String uuid = copy_vhd_from_secondarystorage(conn, volumePath, srUuid, wait);\n                final VolumeObjectTO newVol = new VolumeObjectTO();\n                newVol.setPath(uuid);\n                newVol.setSize(srcVolume.getSize());\n\n                return new CopyCmdAnswer(newVol);\n            } catch (final Exception e) {\n                final String msg = \"Catch Exception \" + e.getClass().getName() + \" due to \" + e.toString();\n                s_logger.warn(msg, e);\n                return new CopyCmdAnswer(e.toString());\n            }\n        }\n\n        s_logger.debug(\"unsupported protocol\");\n        return new CopyCmdAnswer(\"unsupported protocol\");\n    }\n","date":"2018-01-20 05:49:27","endLine":873,"groupId":"9457","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"copyVolumeFromImageCacheToPrimary","params":"(finalCopyCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/25/7c6a23e41517d2d2e166e1fecd2d9f65dd26cc.src","preCode":"    public Answer copyVolumeFromImageCacheToPrimary(final CopyCommand cmd) {\n        final Connection conn = hypervisorResource.getConnection();\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final VolumeObjectTO srcVolume = (VolumeObjectTO) srcData;\n        final VolumeObjectTO destVolume = (VolumeObjectTO) destData;\n        final DataStoreTO srcStore = srcVolume.getDataStore();\n\n        if (srcStore instanceof NfsTO) {\n            final NfsTO nfsStore = (NfsTO) srcStore;\n            try {\n                final SR primaryStoragePool = hypervisorResource.getStorageRepository(conn, destVolume.getDataStore().getUuid());\n                final String srUuid = primaryStoragePool.getUuid(conn);\n                final URI uri = new URI(nfsStore.getUrl());\n                final String volumePath = uri.getHost() + \":\" + uri.getPath() + nfsStore.getPathSeparator() + srcVolume.getPath();\n                final String uuid = copy_vhd_from_secondarystorage(conn, volumePath, srUuid, wait);\n                final VolumeObjectTO newVol = new VolumeObjectTO();\n                newVol.setPath(uuid);\n                newVol.setSize(srcVolume.getSize());\n\n                return new CopyCmdAnswer(newVol);\n            } catch (final Exception e) {\n                final String msg = \"Catch Exception \" + e.getClass().getName() + \" due to \" + e.toString();\n                s_logger.warn(msg, e);\n                return new CopyCmdAnswer(e.toString());\n            }\n        }\n\n        s_logger.debug(\"unsupported protocol\");\n        return new CopyCmdAnswer(\"unsupported protocol\");\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/XenServerStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":842,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2021-04-05 17:29:15","codes":[{"authorDate":"2021-04-05 17:29:15","commitOrder":2,"curCode":"    public Answer copyVolumeFromImageCacheToPrimary(final CopyCommand cmd) {\n        final Connection conn = hypervisorResource.getConnection();\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final VolumeObjectTO srcVolume = (VolumeObjectTO)srcData;\n        final VolumeObjectTO destVolume = (VolumeObjectTO)destData;\n        final PrimaryDataStoreTO primaryStore = (PrimaryDataStoreTO)destVolume.getDataStore();\n        final DataStoreTO srcStore = srcVolume.getDataStore();\n\n        if (srcStore instanceof NfsTO) {\n            final NfsTO nfsStore = (NfsTO)srcStore;\n            final String volumePath = srcVolume.getPath();\n            int index = volumePath.lastIndexOf(\"/\");\n            final String volumeDirectory = volumePath.substring(0, index);\n            String volumeUuid = volumePath.substring(index + 1);\n            index = volumeUuid.indexOf(\".\");\n            if (index != -1) {\n                volumeUuid = volumeUuid.substring(0, index);\n            }\n            URI uri = null;\n            try {\n                uri = new URI(nfsStore.getUrl());\n            } catch (final Exception e) {\n                return new CopyCmdAnswer(e.toString());\n            }\n            final SR srcSr = createFileSr(conn, uri.getHost() + \":\" + uri.getPath(), volumeDirectory);\n            Task task = null;\n            try {\n                final SR primaryStoragePool = hypervisorResource.getStorageRepository(conn,\n                        CitrixHelper.getSRNameLabel(primaryStore.getUuid(), primaryStore.getPoolType(), primaryStore.getPath()));\n                final VDI srcVdi = VDI.getByUuid(conn, volumeUuid);\n                task = srcVdi.copyAsync(conn, primaryStoragePool, null, null);\n                \r\n                hypervisorResource.waitForTask(conn, task, 1000, wait * 1000);\n                hypervisorResource.checkForSuccess(conn, task);\n                final VDI destVdi = Types.toVDI(task, conn);\n                final VolumeObjectTO newVol = new VolumeObjectTO();\n                destVdi.setNameLabel(conn, srcVolume.getName());\n                newVol.setPath(destVdi.getUuid(conn));\n                newVol.setSize(srcVolume.getSize());\n\n                return new CopyCmdAnswer(newVol);\n            } catch (final Exception e) {\n                final String msg = \"Catch Exception \" + e.getClass().getName() + \" due to \" + e.toString();\n                s_logger.warn(msg, e);\n                return new CopyCmdAnswer(e.toString());\n            } finally {\n                if (task != null) {\n                    try {\n                        task.destroy(conn);\n                    } catch (final Exception e) {\n                        s_logger.warn(\"unable to destroy task(\" + task.toString() + \") due to \" + e.toString());\n                    }\n                }\n                if (srcSr != null) {\n                    hypervisorResource.removeSR(conn, srcSr);\n                }\n            }\n        }\n\n        s_logger.debug(\"unsupported protocol\");\n        return new CopyCmdAnswer(\"unsupported protocol\");\n    }\n","date":"2021-04-05 17:29:15","endLine":1039,"groupId":"102903","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"copyVolumeFromImageCacheToPrimary","params":"(finalCopyCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/97/a4efa06d76ebf29378f9866f9a4054a82aefd8.src","preCode":"    public Answer copyVolumeFromImageCacheToPrimary(final CopyCommand cmd) {\n        final Connection conn = hypervisorResource.getConnection();\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final VolumeObjectTO srcVolume = (VolumeObjectTO)srcData;\n        final VolumeObjectTO destVolume = (VolumeObjectTO)destData;\n        final PrimaryDataStoreTO primaryStore = (PrimaryDataStoreTO)destVolume.getDataStore();\n        final DataStoreTO srcStore = srcVolume.getDataStore();\n\n        if (srcStore instanceof NfsTO) {\n            final NfsTO nfsStore = (NfsTO)srcStore;\n            final String volumePath = srcVolume.getPath();\n            int index = volumePath.lastIndexOf(\"/\");\n            final String volumeDirectory = volumePath.substring(0, index);\n            String volumeUuid = volumePath.substring(index + 1);\n            index = volumeUuid.indexOf(\".\");\n            if (index != -1) {\n                volumeUuid = volumeUuid.substring(0, index);\n            }\n            URI uri = null;\n            try {\n                uri = new URI(nfsStore.getUrl());\n            } catch (final Exception e) {\n                return new CopyCmdAnswer(e.toString());\n            }\n            final SR srcSr = createFileSr(conn, uri.getHost() + \":\" + uri.getPath(), volumeDirectory);\n            Task task = null;\n            try {\n                final SR primaryStoragePool = hypervisorResource.getStorageRepository(conn, primaryStore.getUuid());\n                final VDI srcVdi = VDI.getByUuid(conn, volumeUuid);\n                task = srcVdi.copyAsync(conn, primaryStoragePool, null, null);\n                \r\n                hypervisorResource.waitForTask(conn, task, 1000, wait * 1000);\n                hypervisorResource.checkForSuccess(conn, task);\n                final VDI destVdi = Types.toVDI(task, conn);\n                final VolumeObjectTO newVol = new VolumeObjectTO();\n                destVdi.setNameLabel(conn, srcVolume.getName());\n                newVol.setPath(destVdi.getUuid(conn));\n                newVol.setSize(srcVolume.getSize());\n\n                return new CopyCmdAnswer(newVol);\n            } catch (final Exception e) {\n                final String msg = \"Catch Exception \" + e.getClass().getName() + \" due to \" + e.toString();\n                s_logger.warn(msg, e);\n                return new CopyCmdAnswer(e.toString());\n            } finally {\n                if (task != null) {\n                    try {\n                        task.destroy(conn);\n                    } catch (final Exception e) {\n                        s_logger.warn(\"unable to destroy task(\" + task.toString() + \") due to \" + e.toString());\n                    }\n                }\n                if (srcSr != null) {\n                    hypervisorResource.removeSR(conn, srcSr);\n                }\n            }\n        }\n\n        s_logger.debug(\"unsupported protocol\");\n        return new CopyCmdAnswer(\"unsupported protocol\");\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/Xenserver625StorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":976,"status":"M"},{"authorDate":"2021-04-05 17:29:15","commitOrder":2,"curCode":"    public Answer copyVolumeFromImageCacheToPrimary(final CopyCommand cmd) {\n        final Connection conn = hypervisorResource.getConnection();\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final VolumeObjectTO srcVolume = (VolumeObjectTO) srcData;\n        final VolumeObjectTO destVolume = (VolumeObjectTO) destData;\n        final DataStoreTO srcStore = srcVolume.getDataStore();\n\n        if (srcStore instanceof NfsTO) {\n            final NfsTO nfsStore = (NfsTO) srcStore;\n            try {\n                final PrimaryDataStoreTO destStore = (PrimaryDataStoreTO)destVolume.getDataStore();\n                final SR primaryStoragePool = hypervisorResource.getStorageRepository(conn,\n                        CitrixHelper.getSRNameLabel(destStore.getUuid(), destStore.getPoolType(), destStore.getPath()));\n                final String srUuid = primaryStoragePool.getUuid(conn);\n                final URI uri = new URI(nfsStore.getUrl());\n                final String volumePath = uri.getHost() + \":\" + uri.getPath() + nfsStore.getPathSeparator() + srcVolume.getPath();\n                final String uuid = copy_vhd_from_secondarystorage(conn, volumePath, srUuid, wait);\n                final VolumeObjectTO newVol = new VolumeObjectTO();\n                newVol.setPath(uuid);\n                newVol.setSize(srcVolume.getSize());\n\n                return new CopyCmdAnswer(newVol);\n            } catch (final Exception e) {\n                final String msg = \"Catch Exception \" + e.getClass().getName() + \" due to \" + e.toString();\n                s_logger.warn(msg, e);\n                return new CopyCmdAnswer(e.toString());\n            }\n        }\n\n        s_logger.debug(\"unsupported protocol\");\n        return new CopyCmdAnswer(\"unsupported protocol\");\n    }\n","date":"2021-04-05 17:29:15","endLine":897,"groupId":"102903","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"copyVolumeFromImageCacheToPrimary","params":"(finalCopyCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b3/fce78af86f04f62993bf7dda8b9e3a6f9737d7.src","preCode":"    public Answer copyVolumeFromImageCacheToPrimary(final CopyCommand cmd) {\n        final Connection conn = hypervisorResource.getConnection();\n        final DataTO srcData = cmd.getSrcTO();\n        final DataTO destData = cmd.getDestTO();\n        final int wait = cmd.getWait();\n        final VolumeObjectTO srcVolume = (VolumeObjectTO) srcData;\n        final VolumeObjectTO destVolume = (VolumeObjectTO) destData;\n        final DataStoreTO srcStore = srcVolume.getDataStore();\n\n        if (srcStore instanceof NfsTO) {\n            final NfsTO nfsStore = (NfsTO) srcStore;\n            try {\n                final SR primaryStoragePool = hypervisorResource.getStorageRepository(conn, destVolume.getDataStore().getUuid());\n                final String srUuid = primaryStoragePool.getUuid(conn);\n                final URI uri = new URI(nfsStore.getUrl());\n                final String volumePath = uri.getHost() + \":\" + uri.getPath() + nfsStore.getPathSeparator() + srcVolume.getPath();\n                final String uuid = copy_vhd_from_secondarystorage(conn, volumePath, srUuid, wait);\n                final VolumeObjectTO newVol = new VolumeObjectTO();\n                newVol.setPath(uuid);\n                newVol.setSize(srcVolume.getSize());\n\n                return new CopyCmdAnswer(newVol);\n            } catch (final Exception e) {\n                final String msg = \"Catch Exception \" + e.getClass().getName() + \" due to \" + e.toString();\n                s_logger.warn(msg, e);\n                return new CopyCmdAnswer(e.toString());\n            }\n        }\n\n        s_logger.debug(\"unsupported protocol\");\n        return new CopyCmdAnswer(\"unsupported protocol\");\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/XenServerStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":864,"status":"M"}],"commitId":"3066c955482cd6e4436e70b76cc740ba08ba33f8","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n","date":"2021-04-05 17:29:15","modifiedFileCount":"9","status":"M","submitter":"Rohit Yadav"}]
