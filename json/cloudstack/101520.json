[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public ListResponse<StoragePoolResponse> searchForStoragePools(ListStoragePoolsCmd cmd) {\n        Pair<List<StoragePoolJoinVO>, Integer> result = searchForStoragePoolsInternal(cmd);\n        ListResponse<StoragePoolResponse> response = new ListResponse<StoragePoolResponse>();\n\n        List<StoragePoolResponse> poolResponses = ViewResponseHelper.createStoragePoolResponse(result.first().toArray(new StoragePoolJoinVO[result.first().size()]));\n        for (StoragePoolResponse poolResponse : poolResponses) {\n            DataStore store = dataStoreManager.getPrimaryDataStore(poolResponse.getId());\n            if (store != null) {\n                DataStoreDriver driver = store.getDriver();\n                if (driver != null && driver.getCapabilities() != null) {\n                    poolResponse.setCaps(driver.getCapabilities());\n                }\n            }\n        }\n\n        response.setResponses(poolResponses, result.second());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":2207,"groupId":"3280","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"searchForStoragePools","params":"(ListStoragePoolsCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/728ef0f78a89a60fa81fa6bfab723232623813.src","preCode":"    public ListResponse<StoragePoolResponse> searchForStoragePools(ListStoragePoolsCmd cmd) {\n        Pair<List<StoragePoolJoinVO>, Integer> result = searchForStoragePoolsInternal(cmd);\n        ListResponse<StoragePoolResponse> response = new ListResponse<StoragePoolResponse>();\n\n        List<StoragePoolResponse> poolResponses = ViewResponseHelper.createStoragePoolResponse(result.first().toArray(new StoragePoolJoinVO[result.first().size()]));\n        for (StoragePoolResponse poolResponse : poolResponses) {\n            DataStore store = dataStoreManager.getPrimaryDataStore(poolResponse.getId());\n            if (store != null) {\n                DataStoreDriver driver = store.getDriver();\n                if (driver != null && driver.getCapabilities() != null) {\n                    poolResponse.setCaps(driver.getCapabilities());\n                }\n            }\n        }\n\n        response.setResponses(poolResponses, result.second());\n        return response;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2190,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public ListResponse<ImageStoreResponse> searchForSecondaryStagingStores(ListSecondaryStagingStoresCmd cmd) {\n        Pair<List<ImageStoreJoinVO>, Integer> result = searchForCacheStoresInternal(cmd);\n        ListResponse<ImageStoreResponse> response = new ListResponse<ImageStoreResponse>();\n\n        List<ImageStoreResponse> poolResponses = ViewResponseHelper.createImageStoreResponse(result.first().toArray(new ImageStoreJoinVO[result.first().size()]));\n        response.setResponses(poolResponses, result.second());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":2468,"groupId":"12289","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"searchForSecondaryStagingStores","params":"(ListSecondaryStagingStoresCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/728ef0f78a89a60fa81fa6bfab723232623813.src","preCode":"    public ListResponse<ImageStoreResponse> searchForSecondaryStagingStores(ListSecondaryStagingStoresCmd cmd) {\n        Pair<List<ImageStoreJoinVO>, Integer> result = searchForCacheStoresInternal(cmd);\n        ListResponse<ImageStoreResponse> response = new ListResponse<ImageStoreResponse>();\n\n        List<ImageStoreResponse> poolResponses = ViewResponseHelper.createImageStoreResponse(result.first().toArray(new ImageStoreJoinVO[result.first().size()]));\n        response.setResponses(poolResponses, result.second());\n        return response;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2461,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-07-17 09:37:42","commitOrder":2,"curCode":"    public ListResponse<StoragePoolResponse> searchForStoragePools(ListStoragePoolsCmd cmd) {\n        Pair<List<StoragePoolJoinVO>, Integer> result = searchForStoragePoolsInternal(cmd);\n        ListResponse<StoragePoolResponse> response = new ListResponse<StoragePoolResponse>();\n\n        List<StoragePoolResponse> poolResponses = ViewResponseHelper.createStoragePoolResponse(result.first().toArray(new StoragePoolJoinVO[result.first().size()]));\n        for (StoragePoolResponse poolResponse : poolResponses) {\n            DataStore store = dataStoreManager.getPrimaryDataStore(poolResponse.getId());\n            if (store != null) {\n                DataStoreDriver driver = store.getDriver();\n                if (driver != null && driver.getCapabilities() != null) {\n                    Map<String, String> caps = driver.getCapabilities();\n                    if (Storage.StoragePoolType.NetworkFilesystem.toString().equals(poolResponse.getType()) &&\n                        HypervisorType.VMware.toString().equals(poolResponse.getHypervisor())) {\n                        StoragePoolVO pool = _storagePoolDao.findPoolByUUID(poolResponse.getId());\n                        StoragePoolDetailVO detail = _storagePoolDetailsDao.findDetail(pool.getId(), Storage.Capability.HARDWARE_ACCELERATION.toString());\n                        if (detail != null) {\n                            caps.put(Storage.Capability.HARDWARE_ACCELERATION.toString(), detail.getValue());\n                        }\n                    }\n                    poolResponse.setCaps(caps);\n                }\n            }\n        }\n\n        response.setResponses(poolResponses, result.second());\n        return response;\n    }\n","date":"2021-07-17 09:37:42","endLine":2444,"groupId":"101520","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"searchForStoragePools","params":"(ListStoragePoolsCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d0/34c4e844a83ae5b8339ce0b60c9a74f7fca50f.src","preCode":"    public ListResponse<StoragePoolResponse> searchForStoragePools(ListStoragePoolsCmd cmd) {\n        Pair<List<StoragePoolJoinVO>, Integer> result = searchForStoragePoolsInternal(cmd);\n        ListResponse<StoragePoolResponse> response = new ListResponse<StoragePoolResponse>();\n\n        List<StoragePoolResponse> poolResponses = ViewResponseHelper.createStoragePoolResponse(result.first().toArray(new StoragePoolJoinVO[result.first().size()]));\n        for (StoragePoolResponse poolResponse : poolResponses) {\n            DataStore store = dataStoreManager.getPrimaryDataStore(poolResponse.getId());\n            if (store != null) {\n                DataStoreDriver driver = store.getDriver();\n                if (driver != null && driver.getCapabilities() != null) {\n                    poolResponse.setCaps(driver.getCapabilities());\n                }\n            }\n        }\n\n        response.setResponses(poolResponses, result.second());\n        return response;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2418,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public ListResponse<ImageStoreResponse> searchForSecondaryStagingStores(ListSecondaryStagingStoresCmd cmd) {\n        Pair<List<ImageStoreJoinVO>, Integer> result = searchForCacheStoresInternal(cmd);\n        ListResponse<ImageStoreResponse> response = new ListResponse<ImageStoreResponse>();\n\n        List<ImageStoreResponse> poolResponses = ViewResponseHelper.createImageStoreResponse(result.first().toArray(new ImageStoreJoinVO[result.first().size()]));\n        response.setResponses(poolResponses, result.second());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":2468,"groupId":"101520","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"searchForSecondaryStagingStores","params":"(ListSecondaryStagingStoresCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/728ef0f78a89a60fa81fa6bfab723232623813.src","preCode":"    public ListResponse<ImageStoreResponse> searchForSecondaryStagingStores(ListSecondaryStagingStoresCmd cmd) {\n        Pair<List<ImageStoreJoinVO>, Integer> result = searchForCacheStoresInternal(cmd);\n        ListResponse<ImageStoreResponse> response = new ListResponse<ImageStoreResponse>();\n\n        List<ImageStoreResponse> poolResponses = ViewResponseHelper.createImageStoreResponse(result.first().toArray(new ImageStoreJoinVO[result.first().size()]));\n        response.setResponses(poolResponses, result.second());\n        return response;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/QueryManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2461,"status":"N"}],"commitId":"96c9c5a5e2251174da7da881ab1d0f8e1f323aac","commitMessage":"@@@Added disk provisioning type support for VMWare (#4640)\n\n* Added disk provisioning type support for VMWare\n\n* Review changes\n\n* Fixed unit test\n\n* Review changes\n\n* Added missing licenses\n\n* Review changes\n\n* Update StoragePoolInfo.java\n\nRemoved white space\n\n* Review change - Getting disk provisioning strictness setting using the zone id and not the pool id\n\n* Delete __init__.py\n\n* Merge fix\n\n* Fixed failing test\n\n* Added comment about parameters\n\n* Added error log when update fails\n\n* Added exception when using API\n\n* Ordering storage pool selection to prefer thick disk capable pools if available\n\n* Removed unused parameter\n\n* Reordering changes\n\n* Returning storage pool details after update\n\n* Removed multiple pool update.  updated marvin test.  removed duplicate enum\n\n* Removed comment\n\n* Removed unused import\n\n* Removed for loop\n\n* Added missing return statements for failed checks\n\n* Class name change\n\n* Null pointer\n\n* Added more info when a deployment fails\n\n* Null pointer\n\n* Update api/src/main/java/org/apache/cloudstack/api/BaseListCmd.java\n\nCo-authored-by: dahn <daan.hoogland@gmail.com>\n\n* Small bug fix on API response and added missing bracket\n\n* Removed datastore cluster code\n\n* Removed unused imports.  added missing signature\n\n* Removed duplicate config key\n\n* Revert \"Added more info when a deployment fails\"\n\nThis reverts commit 2486db78dca8e034d8ad2386174dfb11004ce654.\n\nCo-authored-by: dahn <daan.hoogland@gmail.com>","date":"2021-07-17 09:37:42","modifiedFileCount":"23","status":"M","submitter":"Spaceman1984"}]
