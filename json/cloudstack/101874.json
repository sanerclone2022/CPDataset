[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public Site2SiteVpnConnection startVpnConnection(long id) throws ResourceUnavailableException {\n        Site2SiteVpnConnectionVO conn = _vpnConnectionDao.acquireInLockTable(id);\n        if (conn == null) {\n            throw new CloudRuntimeException(\"Unable to acquire lock on \" + conn);\n        }\n        try {\n            if (conn.getState() != State.Pending && conn.getState() != State.Disconnected) {\n                throw new InvalidParameterValueException(\n                    \"Site to site VPN connection with specified connectionId not in correct state(pending or disconnected) to process!\");\n            }\n\n            conn.setState(State.Pending);\n            _vpnConnectionDao.persist(conn);\n\n            boolean result = true;\n            for (Site2SiteVpnServiceProvider element : _s2sProviders) {\n                result = result & element.startSite2SiteVpn(conn);\n            }\n\n            if (result) {\n                if (conn.isPassive()) {\n                    conn.setState(State.Disconnected);\n                } else {\n                    conn.setState(State.Connected);\n                }\n                _vpnConnectionDao.persist(conn);\n                return conn;\n            }\n            conn.setState(State.Error);\n            _vpnConnectionDao.persist(conn);\n            throw new ResourceUnavailableException(\"Failed to apply site-to-site VPN\", Site2SiteVpnConnection.class, id);\n        } finally {\n            _vpnConnectionDao.releaseFromLockTable(conn.getId());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":350,"groupId":"11169","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startVpnConnection","params":"(longid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ae/bc87174850974a2502b2f035b15d2a69cddc7c.src","preCode":"    public Site2SiteVpnConnection startVpnConnection(long id) throws ResourceUnavailableException {\n        Site2SiteVpnConnectionVO conn = _vpnConnectionDao.acquireInLockTable(id);\n        if (conn == null) {\n            throw new CloudRuntimeException(\"Unable to acquire lock on \" + conn);\n        }\n        try {\n            if (conn.getState() != State.Pending && conn.getState() != State.Disconnected) {\n                throw new InvalidParameterValueException(\n                    \"Site to site VPN connection with specified connectionId not in correct state(pending or disconnected) to process!\");\n            }\n\n            conn.setState(State.Pending);\n            _vpnConnectionDao.persist(conn);\n\n            boolean result = true;\n            for (Site2SiteVpnServiceProvider element : _s2sProviders) {\n                result = result & element.startSite2SiteVpn(conn);\n            }\n\n            if (result) {\n                if (conn.isPassive()) {\n                    conn.setState(State.Disconnected);\n                } else {\n                    conn.setState(State.Connected);\n                }\n                _vpnConnectionDao.persist(conn);\n                return conn;\n            }\n            conn.setState(State.Error);\n            _vpnConnectionDao.persist(conn);\n            throw new ResourceUnavailableException(\"Failed to apply site-to-site VPN\", Site2SiteVpnConnection.class, id);\n        } finally {\n            _vpnConnectionDao.releaseFromLockTable(conn.getId());\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void stopVpnConnection(Long id) throws ResourceUnavailableException {\n        Site2SiteVpnConnectionVO conn = _vpnConnectionDao.acquireInLockTable(id);\n        if (conn == null) {\n            throw new CloudRuntimeException(\"Unable to acquire lock on \" + conn);\n        }\n        try {\n            if (conn.getState() == State.Pending) {\n                throw new InvalidParameterValueException(\"Site to site VPN connection with specified id is currently Pending, unable to Disconnect!\");\n            }\n\n            conn.setState(State.Disconnected);\n            _vpnConnectionDao.persist(conn);\n\n            boolean result = true;\n            for (Site2SiteVpnServiceProvider element : _s2sProviders) {\n                result = result & element.stopSite2SiteVpn(conn);\n            }\n\n            if (!result) {\n                conn.setState(State.Error);\n                _vpnConnectionDao.persist(conn);\n                throw new ResourceUnavailableException(\"Failed to apply site-to-site VPN\", Site2SiteVpnConnection.class, id);\n            }\n        } finally {\n            _vpnConnectionDao.releaseFromLockTable(conn.getId());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":549,"groupId":"11170","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"stopVpnConnection","params":"(Longid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ae/bc87174850974a2502b2f035b15d2a69cddc7c.src","preCode":"    private void stopVpnConnection(Long id) throws ResourceUnavailableException {\n        Site2SiteVpnConnectionVO conn = _vpnConnectionDao.acquireInLockTable(id);\n        if (conn == null) {\n            throw new CloudRuntimeException(\"Unable to acquire lock on \" + conn);\n        }\n        try {\n            if (conn.getState() == State.Pending) {\n                throw new InvalidParameterValueException(\"Site to site VPN connection with specified id is currently Pending, unable to Disconnect!\");\n            }\n\n            conn.setState(State.Disconnected);\n            _vpnConnectionDao.persist(conn);\n\n            boolean result = true;\n            for (Site2SiteVpnServiceProvider element : _s2sProviders) {\n                result = result & element.stopSite2SiteVpn(conn);\n            }\n\n            if (!result) {\n                conn.setState(State.Error);\n                _vpnConnectionDao.persist(conn);\n                throw new ResourceUnavailableException(\"Failed to apply site-to-site VPN\", Site2SiteVpnConnection.class, id);\n            }\n        } finally {\n            _vpnConnectionDao.releaseFromLockTable(conn.getId());\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":523,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-08-18 19:26:19","commitOrder":2,"curCode":"    public Site2SiteVpnConnection startVpnConnection(long id) throws ResourceUnavailableException {\n        Site2SiteVpnConnectionVO conn = _vpnConnectionDao.acquireInLockTable(id);\n        if (conn == null) {\n            throw new CloudRuntimeException(\"Unable to acquire lock on \" + conn);\n        }\n        try {\n            if (conn.getState() != State.Pending && conn.getState() != State.Disconnected) {\n                throw new InvalidParameterValueException(\n                    \"Site to site VPN connection with specified connectionId not in correct state(pending or disconnected) to process!\");\n            }\n\n            conn.setState(State.Pending);\n            _vpnConnectionDao.persist(conn);\n\n            boolean result = true;\n            for (Site2SiteVpnServiceProvider element : _s2sProviders) {\n                result = result & element.startSite2SiteVpn(conn);\n            }\n\n            if (result) {\n                if (conn.isPassive()) {\n                    conn.setState(State.Disconnected);\n                } else {\n                    conn.setState(State.Connecting);\n                }\n                _vpnConnectionDao.persist(conn);\n                return conn;\n            }\n            conn.setState(State.Error);\n            _vpnConnectionDao.persist(conn);\n            throw new ResourceUnavailableException(\"Failed to apply site-to-site VPN\", Site2SiteVpnConnection.class, id);\n        } finally {\n            _vpnConnectionDao.releaseFromLockTable(conn.getId());\n        }\n    }\n","date":"2021-08-18 19:26:19","endLine":361,"groupId":"101874","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"startVpnConnection","params":"(longid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5b/444c292a67e879172d094bbadac578260265d5.src","preCode":"    public Site2SiteVpnConnection startVpnConnection(long id) throws ResourceUnavailableException {\n        Site2SiteVpnConnectionVO conn = _vpnConnectionDao.acquireInLockTable(id);\n        if (conn == null) {\n            throw new CloudRuntimeException(\"Unable to acquire lock on \" + conn);\n        }\n        try {\n            if (conn.getState() != State.Pending && conn.getState() != State.Disconnected) {\n                throw new InvalidParameterValueException(\n                    \"Site to site VPN connection with specified connectionId not in correct state(pending or disconnected) to process!\");\n            }\n\n            conn.setState(State.Pending);\n            _vpnConnectionDao.persist(conn);\n\n            boolean result = true;\n            for (Site2SiteVpnServiceProvider element : _s2sProviders) {\n                result = result & element.startSite2SiteVpn(conn);\n            }\n\n            if (result) {\n                if (conn.isPassive()) {\n                    conn.setState(State.Disconnected);\n                } else {\n                    conn.setState(State.Connected);\n                }\n                _vpnConnectionDao.persist(conn);\n                return conn;\n            }\n            conn.setState(State.Error);\n            _vpnConnectionDao.persist(conn);\n            throw new ResourceUnavailableException(\"Failed to apply site-to-site VPN\", Site2SiteVpnConnection.class, id);\n        } finally {\n            _vpnConnectionDao.releaseFromLockTable(conn.getId());\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private void stopVpnConnection(Long id) throws ResourceUnavailableException {\n        Site2SiteVpnConnectionVO conn = _vpnConnectionDao.acquireInLockTable(id);\n        if (conn == null) {\n            throw new CloudRuntimeException(\"Unable to acquire lock on \" + conn);\n        }\n        try {\n            if (conn.getState() == State.Pending) {\n                throw new InvalidParameterValueException(\"Site to site VPN connection with specified id is currently Pending, unable to Disconnect!\");\n            }\n\n            conn.setState(State.Disconnected);\n            _vpnConnectionDao.persist(conn);\n\n            boolean result = true;\n            for (Site2SiteVpnServiceProvider element : _s2sProviders) {\n                result = result & element.stopSite2SiteVpn(conn);\n            }\n\n            if (!result) {\n                conn.setState(State.Error);\n                _vpnConnectionDao.persist(conn);\n                throw new ResourceUnavailableException(\"Failed to apply site-to-site VPN\", Site2SiteVpnConnection.class, id);\n            }\n        } finally {\n            _vpnConnectionDao.releaseFromLockTable(conn.getId());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":549,"groupId":"101874","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"stopVpnConnection","params":"(Longid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ae/bc87174850974a2502b2f035b15d2a69cddc7c.src","preCode":"    private void stopVpnConnection(Long id) throws ResourceUnavailableException {\n        Site2SiteVpnConnectionVO conn = _vpnConnectionDao.acquireInLockTable(id);\n        if (conn == null) {\n            throw new CloudRuntimeException(\"Unable to acquire lock on \" + conn);\n        }\n        try {\n            if (conn.getState() == State.Pending) {\n                throw new InvalidParameterValueException(\"Site to site VPN connection with specified id is currently Pending, unable to Disconnect!\");\n            }\n\n            conn.setState(State.Disconnected);\n            _vpnConnectionDao.persist(conn);\n\n            boolean result = true;\n            for (Site2SiteVpnServiceProvider element : _s2sProviders) {\n                result = result & element.stopSite2SiteVpn(conn);\n            }\n\n            if (!result) {\n                conn.setState(State.Error);\n                _vpnConnectionDao.persist(conn);\n                throw new ResourceUnavailableException(\"Failed to apply site-to-site VPN\", Site2SiteVpnConnection.class, id);\n            }\n        } finally {\n            _vpnConnectionDao.releaseFromLockTable(conn.getId());\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":523,"status":"N"}],"commitId":"953f5b81ed44e61a45f4bfeab2a10afdc5daaacf","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15' into main\n","date":"2021-08-18 19:26:19","modifiedFileCount":"3","status":"M","submitter":"Rohit Yadav"}]
