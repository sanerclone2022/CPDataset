[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public Pair<List<? extends GuestOS>, Integer> listGuestOSByCriteria(final ListGuestOsCmd cmd) {\n        final Filter searchFilter = new Filter(GuestOSVO.class, \"displayName\", true, cmd.getStartIndex(), cmd.getPageSizeVal());\n        final Long id = cmd.getId();\n        final Long osCategoryId = cmd.getOsCategoryId();\n        final String description = cmd.getDescription();\n        final String keyword = cmd.getKeyword();\n\n        final SearchCriteria<GuestOSVO> sc = _guestOSDao.createSearchCriteria();\n\n        if (id != null) {\n            sc.addAnd(\"id\", SearchCriteria.Op.EQ, id);\n        }\n\n        if (osCategoryId != null) {\n            sc.addAnd(\"categoryId\", SearchCriteria.Op.EQ, osCategoryId);\n        }\n\n        if (description != null) {\n            sc.addAnd(\"displayName\", SearchCriteria.Op.LIKE, \"%\" + description + \"%\");\n        }\n\n        if (keyword != null) {\n            sc.addAnd(\"displayName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n        }\n\n        final Pair<List<GuestOSVO>, Integer> result = _guestOSDao.searchAndCount(sc, searchFilter);\n        return new Pair<List<? extends GuestOS>, Integer>(result.first(), result.second());\n    }\n","date":"2018-01-20 05:49:27","endLine":2001,"groupId":"10949","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"listGuestOSByCriteria","params":"(finalListGuestOsCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/56/c912d29c1214a445a5fb7dbc190fcd1e7fb2b7.src","preCode":"    public Pair<List<? extends GuestOS>, Integer> listGuestOSByCriteria(final ListGuestOsCmd cmd) {\n        final Filter searchFilter = new Filter(GuestOSVO.class, \"displayName\", true, cmd.getStartIndex(), cmd.getPageSizeVal());\n        final Long id = cmd.getId();\n        final Long osCategoryId = cmd.getOsCategoryId();\n        final String description = cmd.getDescription();\n        final String keyword = cmd.getKeyword();\n\n        final SearchCriteria<GuestOSVO> sc = _guestOSDao.createSearchCriteria();\n\n        if (id != null) {\n            sc.addAnd(\"id\", SearchCriteria.Op.EQ, id);\n        }\n\n        if (osCategoryId != null) {\n            sc.addAnd(\"categoryId\", SearchCriteria.Op.EQ, osCategoryId);\n        }\n\n        if (description != null) {\n            sc.addAnd(\"displayName\", SearchCriteria.Op.LIKE, \"%\" + description + \"%\");\n        }\n\n        if (keyword != null) {\n            sc.addAnd(\"displayName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n        }\n\n        final Pair<List<GuestOSVO>, Integer> result = _guestOSDao.searchAndCount(sc, searchFilter);\n        return new Pair<List<? extends GuestOS>, Integer>(result.first(), result.second());\n    }\n","realPath":"server/src/main/java/com/cloud/server/ManagementServerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1974,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public Pair<List<? extends PhysicalNetwork>, Integer> searchPhysicalNetworks(Long id, Long zoneId, String keyword, Long startIndex, Long pageSize, String name) {\n        Filter searchFilter = new Filter(PhysicalNetworkVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n        SearchCriteria<PhysicalNetworkVO> sc = _physicalNetworkDao.createSearchCriteria();\n\n        if (id != null) {\n            sc.addAnd(\"id\", SearchCriteria.Op.EQ, id);\n        }\n\n        if (zoneId != null) {\n            sc.addAnd(\"dataCenterId\", SearchCriteria.Op.EQ, zoneId);\n        }\n\n        if (name != null) {\n            sc.addAnd(\"name\", SearchCriteria.Op.LIKE, \"%\" + name + \"%\");\n        }\n\n        Pair<List<PhysicalNetworkVO>, Integer> result =  _physicalNetworkDao.searchAndCount(sc, searchFilter);\n        return new Pair<List<? extends PhysicalNetwork>, Integer>(result.first(), result.second());\n    }\n","date":"2018-01-20 05:49:27","endLine":2930,"groupId":"20851","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"searchPhysicalNetworks","params":"(Longid@LongzoneId@Stringkeyword@LongstartIndex@LongpageSize@Stringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d7/ae6276f85511393488e99fb7d4ffb01a44b673.src","preCode":"    public Pair<List<? extends PhysicalNetwork>, Integer> searchPhysicalNetworks(Long id, Long zoneId, String keyword, Long startIndex, Long pageSize, String name) {\n        Filter searchFilter = new Filter(PhysicalNetworkVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n        SearchCriteria<PhysicalNetworkVO> sc = _physicalNetworkDao.createSearchCriteria();\n\n        if (id != null) {\n            sc.addAnd(\"id\", SearchCriteria.Op.EQ, id);\n        }\n\n        if (zoneId != null) {\n            sc.addAnd(\"dataCenterId\", SearchCriteria.Op.EQ, zoneId);\n        }\n\n        if (name != null) {\n            sc.addAnd(\"name\", SearchCriteria.Op.LIKE, \"%\" + name + \"%\");\n        }\n\n        Pair<List<PhysicalNetworkVO>, Integer> result =  _physicalNetworkDao.searchAndCount(sc, searchFilter);\n        return new Pair<List<? extends PhysicalNetwork>, Integer>(result.first(), result.second());\n    }\n","realPath":"server/src/main/java/com/cloud/network/NetworkServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2912,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2020-12-11 15:44:41","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public Pair<List<? extends GuestOS>, Integer> listGuestOSByCriteria(final ListGuestOsCmd cmd) {\n        final Filter searchFilter = new Filter(GuestOSVO.class, \"displayName\", true, cmd.getStartIndex(), cmd.getPageSizeVal());\n        final Long id = cmd.getId();\n        final Long osCategoryId = cmd.getOsCategoryId();\n        final String description = cmd.getDescription();\n        final String keyword = cmd.getKeyword();\n\n        final SearchCriteria<GuestOSVO> sc = _guestOSDao.createSearchCriteria();\n\n        if (id != null) {\n            sc.addAnd(\"id\", SearchCriteria.Op.EQ, id);\n        }\n\n        if (osCategoryId != null) {\n            sc.addAnd(\"categoryId\", SearchCriteria.Op.EQ, osCategoryId);\n        }\n\n        if (description != null) {\n            sc.addAnd(\"displayName\", SearchCriteria.Op.LIKE, \"%\" + description + \"%\");\n        }\n\n        if (keyword != null) {\n            sc.addAnd(\"displayName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n        }\n\n        final Pair<List<GuestOSVO>, Integer> result = _guestOSDao.searchAndCount(sc, searchFilter);\n        return new Pair<List<? extends GuestOS>, Integer>(result.first(), result.second());\n    }\n","date":"2018-01-20 05:49:27","endLine":2001,"groupId":"101315","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"listGuestOSByCriteria","params":"(finalListGuestOsCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/56/c912d29c1214a445a5fb7dbc190fcd1e7fb2b7.src","preCode":"    public Pair<List<? extends GuestOS>, Integer> listGuestOSByCriteria(final ListGuestOsCmd cmd) {\n        final Filter searchFilter = new Filter(GuestOSVO.class, \"displayName\", true, cmd.getStartIndex(), cmd.getPageSizeVal());\n        final Long id = cmd.getId();\n        final Long osCategoryId = cmd.getOsCategoryId();\n        final String description = cmd.getDescription();\n        final String keyword = cmd.getKeyword();\n\n        final SearchCriteria<GuestOSVO> sc = _guestOSDao.createSearchCriteria();\n\n        if (id != null) {\n            sc.addAnd(\"id\", SearchCriteria.Op.EQ, id);\n        }\n\n        if (osCategoryId != null) {\n            sc.addAnd(\"categoryId\", SearchCriteria.Op.EQ, osCategoryId);\n        }\n\n        if (description != null) {\n            sc.addAnd(\"displayName\", SearchCriteria.Op.LIKE, \"%\" + description + \"%\");\n        }\n\n        if (keyword != null) {\n            sc.addAnd(\"displayName\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n        }\n\n        final Pair<List<GuestOSVO>, Integer> result = _guestOSDao.searchAndCount(sc, searchFilter);\n        return new Pair<List<? extends GuestOS>, Integer>(result.first(), result.second());\n    }\n","realPath":"server/src/main/java/com/cloud/server/ManagementServerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1974,"status":"N"},{"authorDate":"2020-12-11 15:44:41","commitOrder":2,"curCode":"    public Pair<List<? extends PhysicalNetwork>, Integer> searchPhysicalNetworks(Long id, Long zoneId, String keyword, Long startIndex, Long pageSize, String name) {\n        Filter searchFilter = new Filter(PhysicalNetworkVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n        SearchCriteria<PhysicalNetworkVO> sc = _physicalNetworkDao.createSearchCriteria();\n\n        if (id != null) {\n            sc.addAnd(\"id\", SearchCriteria.Op.EQ, id);\n        }\n\n        if (zoneId != null) {\n            sc.addAnd(\"dataCenterId\", SearchCriteria.Op.EQ, zoneId);\n        }\n\n        if (name != null) {\n            sc.addAnd(\"name\", SearchCriteria.Op.LIKE, \"%\" + name + \"%\");\n        }\n\n        if (keyword != null) {\n            sc.addAnd(\"name\", SearchCriteria.Op.LIKE, \"%\" + keyword + \"%\");\n        }\n\n        Pair<List<PhysicalNetworkVO>, Integer> result = _physicalNetworkDao.searchAndCount(sc, searchFilter);\n        return new Pair<List<? extends PhysicalNetwork>, Integer>(result.first(), result.second());\n    }\n","date":"2020-12-11 15:44:41","endLine":3077,"groupId":"101315","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"searchPhysicalNetworks","params":"(Longid@LongzoneId@Stringkeyword@LongstartIndex@LongpageSize@Stringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/4a/4603c7baaddd298edd5b44d1f9e717f0e95005.src","preCode":"    public Pair<List<? extends PhysicalNetwork>, Integer> searchPhysicalNetworks(Long id, Long zoneId, String keyword, Long startIndex, Long pageSize, String name) {\n        Filter searchFilter = new Filter(PhysicalNetworkVO.class, \"id\", Boolean.TRUE, startIndex, pageSize);\n        SearchCriteria<PhysicalNetworkVO> sc = _physicalNetworkDao.createSearchCriteria();\n\n        if (id != null) {\n            sc.addAnd(\"id\", SearchCriteria.Op.EQ, id);\n        }\n\n        if (zoneId != null) {\n            sc.addAnd(\"dataCenterId\", SearchCriteria.Op.EQ, zoneId);\n        }\n\n        if (name != null) {\n            sc.addAnd(\"name\", SearchCriteria.Op.LIKE, \"%\" + name + \"%\");\n        }\n\n        Pair<List<PhysicalNetworkVO>, Integer> result = _physicalNetworkDao.searchAndCount(sc, searchFilter);\n        return new Pair<List<? extends PhysicalNetwork>, Integer>(result.first(), result.second());\n    }\n","realPath":"server/src/main/java/com/cloud/network/NetworkServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":3055,"status":"M"}],"commitId":"28c67d267bfe86a53564cd484dcf695ea734fd2a","commitMessage":"@@@listphysicalnetworks: Honouring keyword parameter (#4511)\n\n","date":"2020-12-11 15:44:41","modifiedFileCount":"1","status":"M","submitter":"davidjumani"}]
