[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public String[] createApiKeyAndSecretKey(RegisterCmd cmd) {\n        Account caller = CallContext.current().getCallingAccount();\n        final Long userId = cmd.getId();\n\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"unable to find user by id\");\n        }\n\n        Account account = _accountDao.findById(user.getAccountId());\n        checkAccess(caller, null, true, account);\n\n        \r\n        if (user.getId() == User.UID_SYSTEM) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n        \r\n        if (BaremetalUtils.BAREMETAL_SYSTEM_ACCOUNT_NAME.equals(user.getUsername())) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n\n        \r\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = createUserApiKey(userId);\n                keys[1] = createUserSecretKey(userId);\n            }\n        });\n\n        return keys;\n    }\n","date":"2018-01-20 05:49:27","endLine":2385,"groupId":"9078","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createApiKeyAndSecretKey","params":"(RegisterCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/dc/9fdc0a9e5ceb84c525bebd7b3cf2e1c8004aaa.src","preCode":"    public String[] createApiKeyAndSecretKey(RegisterCmd cmd) {\n        Account caller = CallContext.current().getCallingAccount();\n        final Long userId = cmd.getId();\n\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"unable to find user by id\");\n        }\n\n        Account account = _accountDao.findById(user.getAccountId());\n        checkAccess(caller, null, true, account);\n\n        \r\n        if (user.getId() == User.UID_SYSTEM) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n        \r\n        if (BaremetalUtils.BAREMETAL_SYSTEM_ACCOUNT_NAME.equals(user.getUsername())) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n\n        \r\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = createUserApiKey(userId);\n                keys[1] = createUserSecretKey(userId);\n            }\n        });\n\n        return keys;\n    }\n","realPath":"server/src/main/java/com/cloud/user/AccountManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2353,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public String[] createApiKeyAndSecretKey(final long userId) {\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"Unable to find user by id\");\n        }\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = AccountManagerImpl.this.createUserApiKey(userId);\n                keys[1] = AccountManagerImpl.this.createUserSecretKey(userId);\n            }\n        });\n        return keys;\n    }\n","date":"2018-01-20 05:49:27","endLine":2404,"groupId":"6846","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createApiKeyAndSecretKey","params":"(finallonguserId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/dc/9fdc0a9e5ceb84c525bebd7b3cf2e1c8004aaa.src","preCode":"    public String[] createApiKeyAndSecretKey(final long userId) {\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"Unable to find user by id\");\n        }\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = AccountManagerImpl.this.createUserApiKey(userId);\n                keys[1] = AccountManagerImpl.this.createUserSecretKey(userId);\n            }\n        });\n        return keys;\n    }\n","realPath":"server/src/main/java/com/cloud/user/AccountManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2390,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-05-02 20:19:06","commitOrder":2,"curCode":"    public String[] createApiKeyAndSecretKey(RegisterCmd cmd) {\n        Account caller = getCurrentCallingAccount();\n        final Long userId = cmd.getId();\n\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"unable to find user by id\");\n        }\n\n        Account account = _accountDao.findById(user.getAccountId());\n        checkAccess(caller, null, true, account);\n\n        \r\n        if (user.getId() == User.UID_SYSTEM) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n        \r\n        if (BaremetalUtils.BAREMETAL_SYSTEM_ACCOUNT_NAME.equals(user.getUsername())) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n\n        \r\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = createUserApiKey(userId);\n                keys[1] = createUserSecretKey(userId);\n            }\n        });\n\n        return keys;\n    }\n","date":"2018-05-02 20:19:06","endLine":2465,"groupId":"9078","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createApiKeyAndSecretKey","params":"(RegisterCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b4/4e2803df637044ec277825515b969210de4054.src","preCode":"    public String[] createApiKeyAndSecretKey(RegisterCmd cmd) {\n        Account caller = CallContext.current().getCallingAccount();\n        final Long userId = cmd.getId();\n\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"unable to find user by id\");\n        }\n\n        Account account = _accountDao.findById(user.getAccountId());\n        checkAccess(caller, null, true, account);\n\n        \r\n        if (user.getId() == User.UID_SYSTEM) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n        \r\n        if (BaremetalUtils.BAREMETAL_SYSTEM_ACCOUNT_NAME.equals(user.getUsername())) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n\n        \r\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = createUserApiKey(userId);\n                keys[1] = createUserSecretKey(userId);\n            }\n        });\n\n        return keys;\n    }\n","realPath":"server/src/main/java/com/cloud/user/AccountManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2433,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public String[] createApiKeyAndSecretKey(final long userId) {\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"Unable to find user by id\");\n        }\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = AccountManagerImpl.this.createUserApiKey(userId);\n                keys[1] = AccountManagerImpl.this.createUserSecretKey(userId);\n            }\n        });\n        return keys;\n    }\n","date":"2018-01-20 05:49:27","endLine":2404,"groupId":"6846","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createApiKeyAndSecretKey","params":"(finallonguserId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/dc/9fdc0a9e5ceb84c525bebd7b3cf2e1c8004aaa.src","preCode":"    public String[] createApiKeyAndSecretKey(final long userId) {\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"Unable to find user by id\");\n        }\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = AccountManagerImpl.this.createUserApiKey(userId);\n                keys[1] = AccountManagerImpl.this.createUserSecretKey(userId);\n            }\n        });\n        return keys;\n    }\n","realPath":"server/src/main/java/com/cloud/user/AccountManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2390,"status":"N"}],"commitId":"3adc2b8485d8a56634a3d4c54074321431bf2fda","commitMessage":"@@@[CLOUDSTACK-5235] ask users current password when they are executing a password update (#2574)\n\n* [CLOUDSTACK-5235] Force users to enter old password when updating password\n\n* Formatting for checkstyle\n\n* Remove an unused import in AccountManagerImpl\n\n* Apply Nitin's suggestions\n\n* Change 'oldPassword' to 'currentPassword'\n\n* Second review of Resmo\n\n* Fix typos found by Nitin\n","date":"2018-05-02 20:19:06","modifiedFileCount":"11","status":"M","submitter":"Rafael Weing?rtner"},{"authorTime":"2021-04-26 17:03:58","codes":[{"authorDate":"2018-05-02 20:19:06","commitOrder":3,"curCode":"    public String[] createApiKeyAndSecretKey(RegisterCmd cmd) {\n        Account caller = getCurrentCallingAccount();\n        final Long userId = cmd.getId();\n\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"unable to find user by id\");\n        }\n\n        Account account = _accountDao.findById(user.getAccountId());\n        checkAccess(caller, null, true, account);\n\n        \r\n        if (user.getId() == User.UID_SYSTEM) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n        \r\n        if (BaremetalUtils.BAREMETAL_SYSTEM_ACCOUNT_NAME.equals(user.getUsername())) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n\n        \r\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = createUserApiKey(userId);\n                keys[1] = createUserSecretKey(userId);\n            }\n        });\n\n        return keys;\n    }\n","date":"2018-05-02 20:19:06","endLine":2465,"groupId":"112054","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createApiKeyAndSecretKey","params":"(RegisterCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b4/4e2803df637044ec277825515b969210de4054.src","preCode":"    public String[] createApiKeyAndSecretKey(RegisterCmd cmd) {\n        Account caller = getCurrentCallingAccount();\n        final Long userId = cmd.getId();\n\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"unable to find user by id\");\n        }\n\n        Account account = _accountDao.findById(user.getAccountId());\n        checkAccess(caller, null, true, account);\n\n        \r\n        if (user.getId() == User.UID_SYSTEM) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n        \r\n        if (BaremetalUtils.BAREMETAL_SYSTEM_ACCOUNT_NAME.equals(user.getUsername())) {\n            throw new PermissionDeniedException(\"user id : \" + user.getId() + \" is system account, update is not allowed\");\n        }\n\n        \r\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = createUserApiKey(userId);\n                keys[1] = createUserSecretKey(userId);\n            }\n        });\n\n        return keys;\n    }\n","realPath":"server/src/main/java/com/cloud/user/AccountManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2433,"status":"N"},{"authorDate":"2021-04-26 17:03:58","commitOrder":3,"curCode":"    public String[] createApiKeyAndSecretKey(final long userId) {\n        Account caller = getCurrentCallingAccount();\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"Unable to find user by id\");\n        }\n        Account account = _accountDao.findById(user.getAccountId());\n        checkAccess(caller, null, true, account);\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = AccountManagerImpl.this.createUserApiKey(userId);\n                keys[1] = AccountManagerImpl.this.createUserSecretKey(userId);\n            }\n        });\n        return keys;\n    }\n","date":"2021-04-26 17:03:58","endLine":2506,"groupId":"112054","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createApiKeyAndSecretKey","params":"(finallonguserId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/05/4c3342204f896419ffd3540332ef4ee38cd2da.src","preCode":"    public String[] createApiKeyAndSecretKey(final long userId) {\n        User user = getUserIncludingRemoved(userId);\n        if (user == null) {\n            throw new InvalidParameterValueException(\"Unable to find user by id\");\n        }\n        final String[] keys = new String[2];\n        Transaction.execute(new TransactionCallbackNoReturn() {\n            @Override\n            public void doInTransactionWithoutResult(TransactionStatus status) {\n                keys[0] = AccountManagerImpl.this.createUserApiKey(userId);\n                keys[1] = AccountManagerImpl.this.createUserSecretKey(userId);\n            }\n        });\n        return keys;\n    }\n","realPath":"server/src/main/java/com/cloud/user/AccountManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2489,"status":"M"}],"commitId":"42c83b08f54ceaf1a363c29b125f3970480c7b0d","commitMessage":"@@@Merge remote-tracking branch 'apache/4.15'\n","date":"2021-04-26 17:03:58","modifiedFileCount":"15","status":"M","submitter":"Abhishek Kumar"}]
