[{"authorTime":"2013-12-19 21:30:01","codes":[{"authorDate":"2013-12-19 21:30:01","commitOrder":1,"curCode":"    public <T> T listAllNodes() throws NeutronRestApiException {\n        String uri = NeutronNorthboundEnum.PORTS_URI.getUri();\n        String bodystring = executeGet(uri, Collections.<String, String> emptyMap());\n\n        Type returnType = new TypeToken<NeutronNodesList<NeutronNodeWrapper>>() {\n        }.getType();\n\n        T returnValue = (T) gsonNeutronNode.fromJson(bodystring, returnType);\n\n        return returnValue;\n    }\n","date":"2014-01-08 23:00:39","endLine":57,"groupId":"9094","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"listAllNodes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/89/1ca162cb1ae0d3a8a39857fb44e4975e072666.src","preCode":"    public <T> T listAllNodes() throws NeutronRestApiException {\n        String uri = NeutronNorthboundEnum.PORTS_URI.getUri();\n        String bodystring = executeGet(uri, Collections.<String, String> emptyMap());\n\n        Type returnType = new TypeToken<NeutronNodesList<NeutronNodeWrapper>>() {\n        }.getType();\n\n        T returnValue = (T) gsonNeutronNode.fromJson(bodystring, returnType);\n\n        return returnValue;\n    }\n","realPath":"plugins/network-elements/opendaylight/src/main/java/org/apache/cloudstack/network/opendaylight/api/resources/NeutronNodesNorthboundAction.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2013-12-19 21:30:01","commitOrder":1,"curCode":"    public <T> T listAllNetworks() throws NeutronRestApiException {\n        String uri = NeutronNorthboundEnum.NETWORKS_URI.getUri();\n        String bodystring = executeGet(uri, Collections.<String, String> emptyMap());\n\n        Type returnType = new TypeToken<NeutronNetworksList<NeutronNetworkWrapper>>() {\n        }.getType();\n\n        T returnValue = (T) gsonNeutronNetwork.fromJson(bodystring, returnType);\n\n        return returnValue;\n    }\n","date":"2014-01-08 23:00:39","endLine":59,"groupId":"9094","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"listAllNetworks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2d/4f7c9c7ae257f84ad15694fa8fde13d6efc7fb.src","preCode":"    public <T> T listAllNetworks() throws NeutronRestApiException {\n        String uri = NeutronNorthboundEnum.NETWORKS_URI.getUri();\n        String bodystring = executeGet(uri, Collections.<String, String> emptyMap());\n\n        Type returnType = new TypeToken<NeutronNetworksList<NeutronNetworkWrapper>>() {\n        }.getType();\n\n        T returnValue = (T) gsonNeutronNetwork.fromJson(bodystring, returnType);\n\n        return returnValue;\n    }\n","realPath":"plugins/network-elements/opendaylight/src/main/java/org/apache/cloudstack/network/opendaylight/api/resources/NeutronNetworksNorthboundAction.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"}],"commitId":"f3f93a96f549203e00046bd681ddc87e174c2a6b","commitMessage":"@@@Adding OpenDayLight Neutron API. It includes 24 unit tests and 3 integration tests. Everythin passed the build.\n\nSigned-off-by: Hugo Trippaers <htrippaers@schubergphilis.com>\n","date":"2014-01-08 23:00:39","modifiedFileCount":"0","status":"B","submitter":"wrodrigues"},{"authorTime":"2014-01-03 17:49:03","codes":[{"authorDate":"2013-12-19 21:30:01","commitOrder":2,"curCode":"    public <T> T listAllNodes() throws NeutronRestApiException {\n        String uri = NeutronNorthboundEnum.PORTS_URI.getUri();\n        String bodystring = executeGet(uri, Collections.<String, String> emptyMap());\n\n        Type returnType = new TypeToken<NeutronNodesList<NeutronNodeWrapper>>() {\n        }.getType();\n\n        T returnValue = (T) gsonNeutronNode.fromJson(bodystring, returnType);\n\n        return returnValue;\n    }\n","date":"2014-01-08 23:00:39","endLine":57,"groupId":"104127","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"listAllNodes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/89/1ca162cb1ae0d3a8a39857fb44e4975e072666.src","preCode":"    public <T> T listAllNodes() throws NeutronRestApiException {\n        String uri = NeutronNorthboundEnum.PORTS_URI.getUri();\n        String bodystring = executeGet(uri, Collections.<String, String> emptyMap());\n\n        Type returnType = new TypeToken<NeutronNodesList<NeutronNodeWrapper>>() {\n        }.getType();\n\n        T returnValue = (T) gsonNeutronNode.fromJson(bodystring, returnType);\n\n        return returnValue;\n    }\n","realPath":"plugins/network-elements/opendaylight/src/main/java/org/apache/cloudstack/network/opendaylight/api/resources/NeutronNodesNorthboundAction.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2014-01-03 17:49:03","commitOrder":2,"curCode":"    public <T> T listAllNetworks() throws NeutronRestApiException {\n        String uri = NeutronNorthboundEnum.NETWORKS_URI.getUri();\n        String bodystring = executeGet(uri, Collections.<String, String> emptyMap());\n\n        Type returnType = new TypeToken<NeutronNetworksList<NeutronNetwork>>() {\n        }.getType();\n\n        T returnValue = (T) gsonNeutronNetwork.fromJson(bodystring, returnType);\n\n        return returnValue;\n    }\n","date":"2014-01-08 23:00:59","endLine":61,"groupId":"104127","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"listAllNetworks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3a/8c187e11fe778eeba2d8f066b9a751611f3f5f.src","preCode":"    public <T> T listAllNetworks() throws NeutronRestApiException {\n        String uri = NeutronNorthboundEnum.NETWORKS_URI.getUri();\n        String bodystring = executeGet(uri, Collections.<String, String> emptyMap());\n\n        Type returnType = new TypeToken<NeutronNetworksList<NeutronNetworkWrapper>>() {\n        }.getType();\n\n        T returnValue = (T) gsonNeutronNetwork.fromJson(bodystring, returnType);\n\n        return returnValue;\n    }\n","realPath":"plugins/network-elements/opendaylight/src/main/java/org/apache/cloudstack/network/opendaylight/api/resources/NeutronNetworksNorthboundAction.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"8ddcc9ba808041fbf42fc45f478574502dcad256","commitMessage":"@@@Set unique gre key for every network.\n\nSet interface id to nic uuid when creating the vif.\n","date":"2014-01-08 23:00:59","modifiedFileCount":"3","status":"M","submitter":"Hugo Trippaers"}]
