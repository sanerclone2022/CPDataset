[{"authorTime":"2018-05-04 15:09:53","codes":[{"authorDate":"2018-05-04 15:09:53","commitOrder":1,"curCode":"    public static PublicKey decodePublicKey(String publicKey) {\n        byte[] sigBytes = org.bouncycastle.util.encoders.Base64.decode(publicKey);\n        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(sigBytes);\n        KeyFactory keyFactory = CertUtils.getKeyFactory();\n        if (keyFactory == null)\n            return null;\n        try {\n            return keyFactory.generatePublic(x509KeySpec);\n        } catch (InvalidKeySpecException e) {\n            s_logger.error(\"Unable to create PrivateKey from privateKey string:\" + e.getMessage());\n        }\n        return null;\n    }\n","date":"2018-05-04 15:09:53","endLine":338,"groupId":"16695","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"decodePublicKey","params":"(StringpublicKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5b/00d4733b69a8ea5b3b1dacd3ece0f8a3c4ef59.src","preCode":"    public static PublicKey decodePublicKey(String publicKey) {\n        byte[] sigBytes = org.bouncycastle.util.encoders.Base64.decode(publicKey);\n        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(sigBytes);\n        KeyFactory keyFactory = CertUtils.getKeyFactory();\n        if (keyFactory == null)\n            return null;\n        try {\n            return keyFactory.generatePublic(x509KeySpec);\n        } catch (InvalidKeySpecException e) {\n            s_logger.error(\"Unable to create PrivateKey from privateKey string:\" + e.getMessage());\n        }\n        return null;\n    }\n","realPath":"plugins/user-authenticators/saml2/src/main/java/org/apache/cloudstack/saml/SAMLUtils.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"B"},{"authorDate":"2018-05-04 15:09:53","commitOrder":1,"curCode":"    public static PrivateKey decodePrivateKey(String privateKey) {\n        byte[] sigBytes = org.bouncycastle.util.encoders.Base64.decode(privateKey);\n        PKCS8EncodedKeySpec pkscs8KeySpec = new PKCS8EncodedKeySpec(sigBytes);\n        KeyFactory keyFactory = CertUtils.getKeyFactory();\n        if (keyFactory == null)\n            return null;\n        try {\n            return keyFactory.generatePrivate(pkscs8KeySpec);\n        } catch (InvalidKeySpecException e) {\n            s_logger.error(\"Unable to create PrivateKey from privateKey string:\" + e.getMessage());\n        }\n        return null;\n    }\n","date":"2018-05-04 15:09:53","endLine":357,"groupId":"16696","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"decodePrivateKey","params":"(StringprivateKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5b/00d4733b69a8ea5b3b1dacd3ece0f8a3c4ef59.src","preCode":"    public static PrivateKey decodePrivateKey(String privateKey) {\n        byte[] sigBytes = org.bouncycastle.util.encoders.Base64.decode(privateKey);\n        PKCS8EncodedKeySpec pkscs8KeySpec = new PKCS8EncodedKeySpec(sigBytes);\n        KeyFactory keyFactory = CertUtils.getKeyFactory();\n        if (keyFactory == null)\n            return null;\n        try {\n            return keyFactory.generatePrivate(pkscs8KeySpec);\n        } catch (InvalidKeySpecException e) {\n            s_logger.error(\"Unable to create PrivateKey from privateKey string:\" + e.getMessage());\n        }\n        return null;\n    }\n","realPath":"plugins/user-authenticators/saml2/src/main/java/org/apache/cloudstack/saml/SAMLUtils.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"B"}],"commitId":"e7bd73e72b67ce20b6c39b6daaf8776add2a57c5","commitMessage":"@@@Merge branch '4.11'\n","date":"2018-05-04 15:09:53","modifiedFileCount":"8","status":"B","submitter":"Rohit Yadav"},{"authorTime":"2018-05-04 15:09:53","codes":[{"authorDate":"2018-08-16 15:49:43","commitOrder":2,"curCode":"    public static PublicKey decodePublicKey(String publicKey) {\n        byte[] sigBytes = org.bouncycastle.util.encoders.Base64.decode(publicKey);\n        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(sigBytes);\n        KeyFactory keyFactory = CertUtils.getKeyFactory();\n        if (keyFactory == null)\n            return null;\n        try {\n            return keyFactory.generatePublic(x509KeySpec);\n        } catch (InvalidKeySpecException e) {\n            s_logger.error(\"Unable to create PublicKey from PublicKey string:\" + e.getMessage());\n        }\n        return null;\n    }\n","date":"2018-08-16 15:49:43","endLine":338,"groupId":"104372","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"decodePublicKey","params":"(StringpublicKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/61/10cc52288be5a40c043c664b188de9c1fe79d3.src","preCode":"    public static PublicKey decodePublicKey(String publicKey) {\n        byte[] sigBytes = org.bouncycastle.util.encoders.Base64.decode(publicKey);\n        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(sigBytes);\n        KeyFactory keyFactory = CertUtils.getKeyFactory();\n        if (keyFactory == null)\n            return null;\n        try {\n            return keyFactory.generatePublic(x509KeySpec);\n        } catch (InvalidKeySpecException e) {\n            s_logger.error(\"Unable to create PrivateKey from privateKey string:\" + e.getMessage());\n        }\n        return null;\n    }\n","realPath":"plugins/user-authenticators/saml2/src/main/java/org/apache/cloudstack/saml/SAMLUtils.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"M"},{"authorDate":"2018-05-04 15:09:53","commitOrder":2,"curCode":"    public static PrivateKey decodePrivateKey(String privateKey) {\n        byte[] sigBytes = org.bouncycastle.util.encoders.Base64.decode(privateKey);\n        PKCS8EncodedKeySpec pkscs8KeySpec = new PKCS8EncodedKeySpec(sigBytes);\n        KeyFactory keyFactory = CertUtils.getKeyFactory();\n        if (keyFactory == null)\n            return null;\n        try {\n            return keyFactory.generatePrivate(pkscs8KeySpec);\n        } catch (InvalidKeySpecException e) {\n            s_logger.error(\"Unable to create PrivateKey from privateKey string:\" + e.getMessage());\n        }\n        return null;\n    }\n","date":"2018-05-04 15:09:53","endLine":357,"groupId":"104372","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"decodePrivateKey","params":"(StringprivateKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5b/00d4733b69a8ea5b3b1dacd3ece0f8a3c4ef59.src","preCode":"    public static PrivateKey decodePrivateKey(String privateKey) {\n        byte[] sigBytes = org.bouncycastle.util.encoders.Base64.decode(privateKey);\n        PKCS8EncodedKeySpec pkscs8KeySpec = new PKCS8EncodedKeySpec(sigBytes);\n        KeyFactory keyFactory = CertUtils.getKeyFactory();\n        if (keyFactory == null)\n            return null;\n        try {\n            return keyFactory.generatePrivate(pkscs8KeySpec);\n        } catch (InvalidKeySpecException e) {\n            s_logger.error(\"Unable to create PrivateKey from privateKey string:\" + e.getMessage());\n        }\n        return null;\n    }\n","realPath":"plugins/user-authenticators/saml2/src/main/java/org/apache/cloudstack/saml/SAMLUtils.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"N"}],"commitId":"e57003f93f2067b876864b26071e1ef9952a9be1","commitMessage":"@@@Fix some log messages that do not match with their function (#2796)\n\n\n","date":"2018-08-16 15:49:43","modifiedFileCount":"13","status":"M","submitter":"lzh3636"}]
