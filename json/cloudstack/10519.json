[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testSendStopWithOkAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        StopAnswer answer = new StopAnswer(new StopCommand(vm, false, false), \"ok\", true);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(_agentMgr.send(anyLong(), (Command)any())).thenReturn(answer);\n\n        boolean actual = _vmMgr.sendStop(guru, profile, false, false);\n\n        Assert.assertTrue(actual);\n    }\n","date":"2018-01-20 05:49:27","endLine":487,"groupId":"20278","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendStopWithOkAnswer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9b/c22c49274dca1ee0922ed00c219492ce61b0f7.src","preCode":"    public void testSendStopWithOkAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        StopAnswer answer = new StopAnswer(new StopCommand(vm, false, false), \"ok\", true);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(_agentMgr.send(anyLong(), (Command)any())).thenReturn(answer);\n\n        boolean actual = _vmMgr.sendStop(guru, profile, false, false);\n\n        Assert.assertTrue(actual);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":475,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testSendStopWithNullAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(_agentMgr.send(anyLong(), (Command)any())).thenReturn(null);\n\n        boolean actual = _vmMgr.sendStop(guru, profile, false, false);\n\n        Assert.assertFalse(actual);\n    }\n","date":"2018-01-20 05:49:27","endLine":516,"groupId":"16330","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendStopWithNullAnswer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9b/c22c49274dca1ee0922ed00c219492ce61b0f7.src","preCode":"    public void testSendStopWithNullAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(_agentMgr.send(anyLong(), (Command)any())).thenReturn(null);\n\n        boolean actual = _vmMgr.sendStop(guru, profile, false, false);\n\n        Assert.assertFalse(actual);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":505,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-03-08 05:23:15","codes":[{"authorDate":"2018-03-08 05:23:15","commitOrder":2,"curCode":"    public void testSendStopWithOkAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        StopAnswer answer = new StopAnswer(new StopCommand(vm, false, false), \"ok\", true);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(agentManagerMock.send(anyLong(), (Command)any())).thenReturn(answer);\n\n        boolean actual = virtualMachineManagerImpl.sendStop(guru, profile, false, false);\n\n        Assert.assertTrue(actual);\n    }\n","date":"2018-03-08 05:23:15","endLine":109,"groupId":"20278","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendStopWithOkAnswer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f3/3cc9699ebe196f51f67f5ad63025c328184c90.src","preCode":"    public void testSendStopWithOkAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        StopAnswer answer = new StopAnswer(new StopCommand(vm, false, false), \"ok\", true);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(_agentMgr.send(anyLong(), (Command)any())).thenReturn(answer);\n\n        boolean actual = _vmMgr.sendStop(guru, profile, false, false);\n\n        Assert.assertTrue(actual);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2018-03-08 05:23:15","commitOrder":2,"curCode":"    public void testSendStopWithNullAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(agentManagerMock.send(anyLong(), (Command)any())).thenReturn(null);\n\n        boolean actual = virtualMachineManagerImpl.sendStop(guru, profile, false, false);\n\n        Assert.assertFalse(actual);\n    }\n","date":"2018-03-08 05:23:15","endLine":138,"groupId":"16330","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendStopWithNullAnswer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f3/3cc9699ebe196f51f67f5ad63025c328184c90.src","preCode":"    public void testSendStopWithNullAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(_agentMgr.send(anyLong(), (Command)any())).thenReturn(null);\n\n        boolean actual = _vmMgr.sendStop(guru, profile, false, false);\n\n        Assert.assertFalse(actual);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"f2efbcececb3cfb06a51e5d3a2e77417c19c667f","commitMessage":"@@@[CLOUDSTACK-10240] ACS cannot migrate a local volume to shared storage (#2425)\n\n* [CLOUDSTACK-10240] ACS cannot migrate a volume from local to shared storage.\n\nCloudStack is logically restricting the migration of local storages to shared storage and vice versa. This restriction is a logical one and can be removed for XenServer deployments. Therefore.  we will enable migration of volumes between local-shared storages in XenServers independently of their service offering. This will work as an override mechanism to the disk offering used by volumes. If administrators want to migrate local volumes to a shared storage.  they should be able to do so (the hypervisor already allows that). The same the other way around.\n\n* Cleanups implemented while working on [CLOUDSTACK-10240]\n\n* Fix test case test_03_migrate_options_storage_tags\n\nThe changes applied were:\n- When loading hypervisors capabilities we must use \"default\" instead of nulls\n- \"Enable\" storage migration for simulator hypervisor\n- Remove restriction on \"ClusterScopeStoragePoolAllocator\" to find shared pools\n","date":"2018-03-08 05:23:15","modifiedFileCount":"10","status":"M","submitter":"Rafael Weing?rtner"},{"authorTime":"2019-01-25 20:05:13","codes":[{"authorDate":"2018-03-08 05:23:15","commitOrder":3,"curCode":"    public void testSendStopWithOkAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        StopAnswer answer = new StopAnswer(new StopCommand(vm, false, false), \"ok\", true);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(agentManagerMock.send(anyLong(), (Command)any())).thenReturn(answer);\n\n        boolean actual = virtualMachineManagerImpl.sendStop(guru, profile, false, false);\n\n        Assert.assertTrue(actual);\n    }\n","date":"2018-03-08 05:23:15","endLine":109,"groupId":"10519","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendStopWithOkAnswer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f3/3cc9699ebe196f51f67f5ad63025c328184c90.src","preCode":"    public void testSendStopWithOkAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        StopAnswer answer = new StopAnswer(new StopCommand(vm, false, false), \"ok\", true);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(agentManagerMock.send(anyLong(), (Command)any())).thenReturn(answer);\n\n        boolean actual = virtualMachineManagerImpl.sendStop(guru, profile, false, false);\n\n        Assert.assertTrue(actual);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"N"},{"authorDate":"2019-01-25 20:05:13","commitOrder":3,"curCode":"    public void testSendStopWithNullAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(agentManagerMock.send(anyLong(), (Command)any())).thenReturn(null);\n\n        boolean actual = virtualMachineManagerImpl.sendStop(guru, profile, false, false);\n\n        assertFalse(actual);\n    }\n","date":"2019-01-25 20:05:13","endLine":198,"groupId":"10519","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendStopWithNullAnswer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0e/7579ea5fd3782c101e59841b92df8987dddde4.src","preCode":"    public void testSendStopWithNullAnswer() throws Exception {\n        VirtualMachineGuru guru = mock(VirtualMachineGuru.class);\n        VirtualMachine vm = mock(VirtualMachine.class);\n        VirtualMachineProfile profile = mock(VirtualMachineProfile.class);\n        when(profile.getVirtualMachine()).thenReturn(vm);\n        when(vm.getHostId()).thenReturn(1L);\n        when(agentManagerMock.send(anyLong(), (Command)any())).thenReturn(null);\n\n        boolean actual = virtualMachineManagerImpl.sendStop(guru, profile, false, false);\n\n        Assert.assertFalse(actual);\n    }\n","realPath":"engine/orchestration/src/test/java/com/cloud/vm/VirtualMachineManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"}],"commitId":"b363fd49f70ac2092ebe6226a72a3d911dc99e1f","commitMessage":"@@@Vmware offline migration (#2848)\n\n* - Offline VM and Volume migration on Vmware hypervisor hosts\n- Also add VM disk consolidation call on successful VM migrations\n\n* Fix indentation of marvin test file and reformat against PEP8\n\n* * Fix few comment typos\n* Refactor debug messages to use String.format() when debug log level is enabled.\n\n* Send list of commands returned by hypervisor Guru instead of explicitly selecting the first one\n\n* Fix unhandled NPE during VM migration\n\n* Revert back to distinct event descriptions for VM to host or storage pool migration\n\n* Reformat test_primary_storage file against PEP-8 and Remove unused imports\n\n* Revert back the deprecation messages in the custom StringUtils class to favour the use of the ApacheUtils\n","date":"2019-01-25 20:05:13","modifiedFileCount":"35","status":"M","submitter":"dahn"}]
