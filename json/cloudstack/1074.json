[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void deleteRecordsForAccount(Long accountId) {\n        String sql = ((accountId == null) ? DELETE_ALL : DELETE_ALL_BY_ACCOUNTID);\n        TransactionLegacy txn = TransactionLegacy.open(TransactionLegacy.USAGE_DB);\n        PreparedStatement pstmt = null;\n        try {\n            txn.start();\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            if (accountId != null) {\n                pstmt.setLong(1, accountId.longValue());\n            }\n            pstmt.executeUpdate();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error retrieving usage vm instances for account id: \" + accountId);\n        } finally {\n            txn.close();\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":98,"groupId":"16370","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteRecordsForAccount","params":"(LongaccountId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/62/6b8ccf2bef64bbc1f4adcf89b46f52f4d7255a.src","preCode":"    public void deleteRecordsForAccount(Long accountId) {\n        String sql = ((accountId == null) ? DELETE_ALL : DELETE_ALL_BY_ACCOUNTID);\n        TransactionLegacy txn = TransactionLegacy.open(TransactionLegacy.USAGE_DB);\n        PreparedStatement pstmt = null;\n        try {\n            txn.start();\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            if (accountId != null) {\n                pstmt.setLong(1, accountId.longValue());\n            }\n            pstmt.executeUpdate();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error retrieving usage vm instances for account id: \" + accountId);\n        } finally {\n            txn.close();\n        }\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/usage/dao/UsageDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void removeOldUsageRecords(int days) {\n        String sql = DELETE_ALL_BY_INTERVAL;\n        TransactionLegacy txn = TransactionLegacy.open(TransactionLegacy.USAGE_DB);\n        PreparedStatement pstmt = null;\n        try {\n            txn.start();\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            pstmt.setLong(1, days);\n            pstmt.executeUpdate();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error removing old cloud_usage records for interval: \" + days);\n        } finally {\n            txn.close();\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":478,"groupId":"16370","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeOldUsageRecords","params":"(intdays)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/62/6b8ccf2bef64bbc1f4adcf89b46f52f4d7255a.src","preCode":"    public void removeOldUsageRecords(int days) {\n        String sql = DELETE_ALL_BY_INTERVAL;\n        TransactionLegacy txn = TransactionLegacy.open(TransactionLegacy.USAGE_DB);\n        PreparedStatement pstmt = null;\n        try {\n            txn.start();\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            pstmt.setLong(1, days);\n            pstmt.executeUpdate();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error removing old cloud_usage records for interval: \" + days);\n        } finally {\n            txn.close();\n        }\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/usage/dao/UsageDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":462,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-04-16 15:07:16","commitOrder":2,"curCode":"    public void deleteRecordsForAccount(Long accountId) {\n        String sql = ((accountId == null) ? DELETE_ALL : DELETE_ALL_BY_ACCOUNTID);\n        TransactionLegacy txn = TransactionLegacy.open(TransactionLegacy.USAGE_DB);\n        PreparedStatement pstmt = null;\n        try {\n            txn.start();\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            if (accountId != null) {\n                pstmt.setLong(1, accountId.longValue());\n            }\n            pstmt.executeUpdate();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error retrieving usage vm instances for account id: \" + accountId, ex);\n        } finally {\n            txn.close();\n        }\n    }\n","date":"2018-04-16 15:07:16","endLine":98,"groupId":"1074","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteRecordsForAccount","params":"(LongaccountId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f5/4db8dcd29703a8af580f93581fa2fb08423683.src","preCode":"    public void deleteRecordsForAccount(Long accountId) {\n        String sql = ((accountId == null) ? DELETE_ALL : DELETE_ALL_BY_ACCOUNTID);\n        TransactionLegacy txn = TransactionLegacy.open(TransactionLegacy.USAGE_DB);\n        PreparedStatement pstmt = null;\n        try {\n            txn.start();\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            if (accountId != null) {\n                pstmt.setLong(1, accountId.longValue());\n            }\n            pstmt.executeUpdate();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error retrieving usage vm instances for account id: \" + accountId);\n        } finally {\n            txn.close();\n        }\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/usage/dao/UsageDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void removeOldUsageRecords(int days) {\n        String sql = DELETE_ALL_BY_INTERVAL;\n        TransactionLegacy txn = TransactionLegacy.open(TransactionLegacy.USAGE_DB);\n        PreparedStatement pstmt = null;\n        try {\n            txn.start();\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            pstmt.setLong(1, days);\n            pstmt.executeUpdate();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error removing old cloud_usage records for interval: \" + days);\n        } finally {\n            txn.close();\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":478,"groupId":"1074","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeOldUsageRecords","params":"(intdays)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/62/6b8ccf2bef64bbc1f4adcf89b46f52f4d7255a.src","preCode":"    public void removeOldUsageRecords(int days) {\n        String sql = DELETE_ALL_BY_INTERVAL;\n        TransactionLegacy txn = TransactionLegacy.open(TransactionLegacy.USAGE_DB);\n        PreparedStatement pstmt = null;\n        try {\n            txn.start();\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            pstmt.setLong(1, days);\n            pstmt.executeUpdate();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error removing old cloud_usage records for interval: \" + days);\n        } finally {\n            txn.close();\n        }\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/usage/dao/UsageDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":462,"status":"N"}],"commitId":"106a9a34e12843a76cd67d9ab13837f56d79785a","commitMessage":"@@@Update inconsistent debugging info in catch block (#2553)\n\n* Add stack traces information\n\n* update stack trace info\n\n* update stack trace to make them consistent\n\n* update stack traces\n\n* update stacktraces\n\n* update stacktraces for other similar situations\n\n* fix some other situations\n\n* enhance other situations\n","date":"2018-04-16 15:07:16","modifiedFileCount":"11","status":"M","submitter":"lzh3636"}]
