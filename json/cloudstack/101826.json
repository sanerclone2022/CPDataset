[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean finalizeVirtualMachineProfile(final VirtualMachineProfile profile, final DeployDestination dest, final ReservationContext context) {\n\n        \r\n        \r\n        \r\n\n        final StringBuilder buf = profile.getBootArgsBuilder();\n        buf.append(\" template=domP\");\n        buf.append(\" name=\").append(profile.getHostName());\n\n        if (Boolean.valueOf(_configDao.getValue(\"system.vm.random.password\"))) {\n            buf.append(\" vmpassword=\").append(_configDao.getValue(\"system.vm.password\"));\n        }\n\n        NicProfile controlNic = null;\n        Network guestNetwork = null;\n\n        for (final NicProfile nic : profile.getNics()) {\n            final int deviceId = nic.getDeviceId();\n            buf.append(\" eth\").append(deviceId).append(\"ip=\").append(nic.getIPv4Address());\n            buf.append(\" eth\").append(deviceId).append(\"mask=\").append(nic.getIPv4Netmask());\n\n            if (nic.isDefaultNic()) {\n                buf.append(\" gateway=\").append(nic.getIPv4Gateway());\n                buf.append(\" dns1=\").append(nic.getIPv4Gateway());\n            }\n\n            if (nic.getTrafficType() == TrafficType.Guest) {\n                guestNetwork = _ntwkModel.getNetwork(nic.getNetworkId());\n            } else if (nic.getTrafficType() == TrafficType.Management) {\n                buf.append(\" localgw=\").append(dest.getPod().getGateway());\n            } else if (nic.getTrafficType() == TrafficType.Control) {\n                controlNic = nic;\n                \r\n                if (dest.getHost().getHypervisorType() == HypervisorType.VMware) {\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Check if we need to add management server explicit route to Internal LB. pod cidr: \" + dest.getPod().getCidrAddress() + \"/\" +\n                                dest.getPod().getCidrSize() + \", pod gateway: \" + dest.getPod().getGateway() + \", management host: \" + _mgmtHost);\n                    }\n\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Add management server explicit route to Internal LB.\");\n                    }\n\n                    buf.append(\" mgmtcidr=\").append(_mgmtCidr);\n                    buf.append(\" localgw=\").append(dest.getPod().getGateway());\n                }\n            }\n        }\n\n        if (controlNic == null) {\n            throw new CloudRuntimeException(\"Didn't start a control port\");\n        }\n\n        if (guestNetwork != null) {\n            final String domain = guestNetwork.getNetworkDomain();\n            if (domain != null) {\n                buf.append(\" domain=\" + domain);\n            }\n        }\n\n        final String type = \"ilbvm\";\n        buf.append(\" type=\" + type);\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Boot Args for \" + profile + \": \" + buf.toString());\n        }\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":242,"groupId":"16208","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"finalizeVirtualMachineProfile","params":"(finalVirtualMachineProfileprofile@finalDeployDestinationdest@finalReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/52/ecebc08bcfe21b12ef4861a469e743c51bb7c3.src","preCode":"    public boolean finalizeVirtualMachineProfile(final VirtualMachineProfile profile, final DeployDestination dest, final ReservationContext context) {\n\n        \r\n        \r\n        \r\n\n        final StringBuilder buf = profile.getBootArgsBuilder();\n        buf.append(\" template=domP\");\n        buf.append(\" name=\").append(profile.getHostName());\n\n        if (Boolean.valueOf(_configDao.getValue(\"system.vm.random.password\"))) {\n            buf.append(\" vmpassword=\").append(_configDao.getValue(\"system.vm.password\"));\n        }\n\n        NicProfile controlNic = null;\n        Network guestNetwork = null;\n\n        for (final NicProfile nic : profile.getNics()) {\n            final int deviceId = nic.getDeviceId();\n            buf.append(\" eth\").append(deviceId).append(\"ip=\").append(nic.getIPv4Address());\n            buf.append(\" eth\").append(deviceId).append(\"mask=\").append(nic.getIPv4Netmask());\n\n            if (nic.isDefaultNic()) {\n                buf.append(\" gateway=\").append(nic.getIPv4Gateway());\n                buf.append(\" dns1=\").append(nic.getIPv4Gateway());\n            }\n\n            if (nic.getTrafficType() == TrafficType.Guest) {\n                guestNetwork = _ntwkModel.getNetwork(nic.getNetworkId());\n            } else if (nic.getTrafficType() == TrafficType.Management) {\n                buf.append(\" localgw=\").append(dest.getPod().getGateway());\n            } else if (nic.getTrafficType() == TrafficType.Control) {\n                controlNic = nic;\n                \r\n                if (dest.getHost().getHypervisorType() == HypervisorType.VMware) {\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Check if we need to add management server explicit route to Internal LB. pod cidr: \" + dest.getPod().getCidrAddress() + \"/\" +\n                                dest.getPod().getCidrSize() + \", pod gateway: \" + dest.getPod().getGateway() + \", management host: \" + _mgmtHost);\n                    }\n\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Add management server explicit route to Internal LB.\");\n                    }\n\n                    buf.append(\" mgmtcidr=\").append(_mgmtCidr);\n                    buf.append(\" localgw=\").append(dest.getPod().getGateway());\n                }\n            }\n        }\n\n        if (controlNic == null) {\n            throw new CloudRuntimeException(\"Didn't start a control port\");\n        }\n\n        if (guestNetwork != null) {\n            final String domain = guestNetwork.getNetworkDomain();\n            if (domain != null) {\n                buf.append(\" domain=\" + domain);\n            }\n        }\n\n        final String type = \"ilbvm\";\n        buf.append(\" type=\" + type);\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Boot Args for \" + profile + \": \" + buf.toString());\n        }\n\n        return true;\n    }\n","realPath":"plugins/network-elements/internal-loadbalancer/src/main/java/org/apache/cloudstack/network/lb/InternalLoadBalancerVMManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean finalizeVirtualMachineProfile(VirtualMachineProfile profile, DeployDestination dest, ReservationContext context) {\n\n        List<NicProfile> elbNics = profile.getNics();\n        Long guestNtwkId = null;\n        for (NicProfile routerNic : elbNics) {\n            if (routerNic.getTrafficType() == TrafficType.Guest) {\n                guestNtwkId = routerNic.getNetworkId();\n                break;\n            }\n        }\n\n        NetworkVO guestNetwork = _networkDao.findById(guestNtwkId);\n\n        DataCenter dc = dest.getDataCenter();\n\n        StringBuilder buf = profile.getBootArgsBuilder();\n        buf.append(\" template=domP type=\" + SystemVmType);\n        buf.append(\" name=\").append(profile.getHostName());\n        NicProfile controlNic = null;\n        String defaultDns1 = null;\n        String defaultDns2 = null;\n\n        for (NicProfile nic : profile.getNics()) {\n            int deviceId = nic.getDeviceId();\n            buf.append(\" eth\").append(deviceId).append(\"ip=\").append(nic.getIPv4Address());\n            buf.append(\" eth\").append(deviceId).append(\"mask=\").append(nic.getIPv4Netmask());\n            if (nic.isDefaultNic()) {\n                buf.append(\" gateway=\").append(nic.getIPv4Gateway());\n                defaultDns1 = nic.getIPv4Dns1();\n                defaultDns2 = nic.getIPv4Dns2();\n            }\n            if (nic.getTrafficType() == TrafficType.Management) {\n                buf.append(\" localgw=\").append(dest.getPod().getGateway());\n            } else if (nic.getTrafficType() == TrafficType.Control) {\n                \r\n                if (dest.getHost().getHypervisorType() == HypervisorType.VMware) {\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Check if we need to add management server explicit route to ELB vm. pod cidr: \" + dest.getPod().getCidrAddress() + \"/\"\n                                + dest.getPod().getCidrSize() + \", pod gateway: \" + dest.getPod().getGateway() + \", management host: \"\n                                + ApiServiceConfiguration.ManagementHostIPAdr.value());\n                    }\n\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Added management server explicit route to ELB vm.\");\n                    }\n                    \r\n                    buf.append(\" mgmtcidr=\").append(_mgmtCidr);\n                    buf.append(\" localgw=\").append(dest.getPod().getGateway());\n\n                    if (dc.getNetworkType() == NetworkType.Basic) {\n                        \r\n                        buf.append(\" sshonguest=true\");\n                    }\n\n                }\n\n                controlNic = nic;\n            }\n        }\n        String domain = guestNetwork.getNetworkDomain();\n        if (domain != null) {\n            buf.append(\" domain=\" + domain);\n        }\n\n        buf.append(\" dns1=\").append(defaultDns1);\n        if (defaultDns2 != null) {\n            buf.append(\" dns2=\").append(defaultDns2);\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Boot Args for \" + profile + \": \" + buf.toString());\n        }\n\n        if (controlNic == null) {\n            throw new CloudRuntimeException(\"Didn't start a control port\");\n        }\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":489,"groupId":"25736","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"finalizeVirtualMachineProfile","params":"(VirtualMachineProfileprofile@DeployDestinationdest@ReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d9/175548649da5cdd85c73d61dfd57f4dafcbfa2.src","preCode":"    public boolean finalizeVirtualMachineProfile(VirtualMachineProfile profile, DeployDestination dest, ReservationContext context) {\n\n        List<NicProfile> elbNics = profile.getNics();\n        Long guestNtwkId = null;\n        for (NicProfile routerNic : elbNics) {\n            if (routerNic.getTrafficType() == TrafficType.Guest) {\n                guestNtwkId = routerNic.getNetworkId();\n                break;\n            }\n        }\n\n        NetworkVO guestNetwork = _networkDao.findById(guestNtwkId);\n\n        DataCenter dc = dest.getDataCenter();\n\n        StringBuilder buf = profile.getBootArgsBuilder();\n        buf.append(\" template=domP type=\" + SystemVmType);\n        buf.append(\" name=\").append(profile.getHostName());\n        NicProfile controlNic = null;\n        String defaultDns1 = null;\n        String defaultDns2 = null;\n\n        for (NicProfile nic : profile.getNics()) {\n            int deviceId = nic.getDeviceId();\n            buf.append(\" eth\").append(deviceId).append(\"ip=\").append(nic.getIPv4Address());\n            buf.append(\" eth\").append(deviceId).append(\"mask=\").append(nic.getIPv4Netmask());\n            if (nic.isDefaultNic()) {\n                buf.append(\" gateway=\").append(nic.getIPv4Gateway());\n                defaultDns1 = nic.getIPv4Dns1();\n                defaultDns2 = nic.getIPv4Dns2();\n            }\n            if (nic.getTrafficType() == TrafficType.Management) {\n                buf.append(\" localgw=\").append(dest.getPod().getGateway());\n            } else if (nic.getTrafficType() == TrafficType.Control) {\n                \r\n                if (dest.getHost().getHypervisorType() == HypervisorType.VMware) {\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Check if we need to add management server explicit route to ELB vm. pod cidr: \" + dest.getPod().getCidrAddress() + \"/\"\n                                + dest.getPod().getCidrSize() + \", pod gateway: \" + dest.getPod().getGateway() + \", management host: \"\n                                + ApiServiceConfiguration.ManagementHostIPAdr.value());\n                    }\n\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Added management server explicit route to ELB vm.\");\n                    }\n                    \r\n                    buf.append(\" mgmtcidr=\").append(_mgmtCidr);\n                    buf.append(\" localgw=\").append(dest.getPod().getGateway());\n\n                    if (dc.getNetworkType() == NetworkType.Basic) {\n                        \r\n                        buf.append(\" sshonguest=true\");\n                    }\n\n                }\n\n                controlNic = nic;\n            }\n        }\n        String domain = guestNetwork.getNetworkDomain();\n        if (domain != null) {\n            buf.append(\" domain=\" + domain);\n        }\n\n        buf.append(\" dns1=\").append(defaultDns1);\n        if (defaultDns2 != null) {\n            buf.append(\" dns2=\").append(defaultDns2);\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Boot Args for \" + profile + \": \" + buf.toString());\n        }\n\n        if (controlNic == null) {\n            throw new CloudRuntimeException(\"Didn't start a control port\");\n        }\n\n        return true;\n    }\n","realPath":"plugins/network-elements/elastic-loadbalancer/src/main/java/com/cloud/network/lb/ElasticLoadBalancerManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-03-15 19:16:50","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public boolean finalizeVirtualMachineProfile(final VirtualMachineProfile profile, final DeployDestination dest, final ReservationContext context) {\n\n        \r\n        \r\n        \r\n\n        final StringBuilder buf = profile.getBootArgsBuilder();\n        buf.append(\" template=domP\");\n        buf.append(\" name=\").append(profile.getHostName());\n\n        if (Boolean.valueOf(_configDao.getValue(\"system.vm.random.password\"))) {\n            buf.append(\" vmpassword=\").append(_configDao.getValue(\"system.vm.password\"));\n        }\n\n        NicProfile controlNic = null;\n        Network guestNetwork = null;\n\n        for (final NicProfile nic : profile.getNics()) {\n            final int deviceId = nic.getDeviceId();\n            buf.append(\" eth\").append(deviceId).append(\"ip=\").append(nic.getIPv4Address());\n            buf.append(\" eth\").append(deviceId).append(\"mask=\").append(nic.getIPv4Netmask());\n\n            if (nic.isDefaultNic()) {\n                buf.append(\" gateway=\").append(nic.getIPv4Gateway());\n                buf.append(\" dns1=\").append(nic.getIPv4Gateway());\n            }\n\n            if (nic.getTrafficType() == TrafficType.Guest) {\n                guestNetwork = _ntwkModel.getNetwork(nic.getNetworkId());\n            } else if (nic.getTrafficType() == TrafficType.Management) {\n                buf.append(\" localgw=\").append(dest.getPod().getGateway());\n            } else if (nic.getTrafficType() == TrafficType.Control) {\n                controlNic = nic;\n                \r\n                if (dest.getHost().getHypervisorType() == HypervisorType.VMware) {\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Check if we need to add management server explicit route to Internal LB. pod cidr: \" + dest.getPod().getCidrAddress() + \"/\" +\n                                dest.getPod().getCidrSize() + \", pod gateway: \" + dest.getPod().getGateway() + \", management host: \" + _mgmtHost);\n                    }\n\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Add management server explicit route to Internal LB.\");\n                    }\n\n                    buf.append(\" mgmtcidr=\").append(_mgmtCidr);\n                    buf.append(\" localgw=\").append(dest.getPod().getGateway());\n                }\n            }\n        }\n\n        if (controlNic == null) {\n            throw new CloudRuntimeException(\"Didn't start a control port\");\n        }\n\n        if (guestNetwork != null) {\n            final String domain = guestNetwork.getNetworkDomain();\n            if (domain != null) {\n                buf.append(\" domain=\" + domain);\n            }\n        }\n\n        final String type = \"ilbvm\";\n        buf.append(\" type=\" + type);\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Boot Args for \" + profile + \": \" + buf.toString());\n        }\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":242,"groupId":"101826","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"finalizeVirtualMachineProfile","params":"(finalVirtualMachineProfileprofile@finalDeployDestinationdest@finalReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/52/ecebc08bcfe21b12ef4861a469e743c51bb7c3.src","preCode":"    public boolean finalizeVirtualMachineProfile(final VirtualMachineProfile profile, final DeployDestination dest, final ReservationContext context) {\n\n        \r\n        \r\n        \r\n\n        final StringBuilder buf = profile.getBootArgsBuilder();\n        buf.append(\" template=domP\");\n        buf.append(\" name=\").append(profile.getHostName());\n\n        if (Boolean.valueOf(_configDao.getValue(\"system.vm.random.password\"))) {\n            buf.append(\" vmpassword=\").append(_configDao.getValue(\"system.vm.password\"));\n        }\n\n        NicProfile controlNic = null;\n        Network guestNetwork = null;\n\n        for (final NicProfile nic : profile.getNics()) {\n            final int deviceId = nic.getDeviceId();\n            buf.append(\" eth\").append(deviceId).append(\"ip=\").append(nic.getIPv4Address());\n            buf.append(\" eth\").append(deviceId).append(\"mask=\").append(nic.getIPv4Netmask());\n\n            if (nic.isDefaultNic()) {\n                buf.append(\" gateway=\").append(nic.getIPv4Gateway());\n                buf.append(\" dns1=\").append(nic.getIPv4Gateway());\n            }\n\n            if (nic.getTrafficType() == TrafficType.Guest) {\n                guestNetwork = _ntwkModel.getNetwork(nic.getNetworkId());\n            } else if (nic.getTrafficType() == TrafficType.Management) {\n                buf.append(\" localgw=\").append(dest.getPod().getGateway());\n            } else if (nic.getTrafficType() == TrafficType.Control) {\n                controlNic = nic;\n                \r\n                if (dest.getHost().getHypervisorType() == HypervisorType.VMware) {\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Check if we need to add management server explicit route to Internal LB. pod cidr: \" + dest.getPod().getCidrAddress() + \"/\" +\n                                dest.getPod().getCidrSize() + \", pod gateway: \" + dest.getPod().getGateway() + \", management host: \" + _mgmtHost);\n                    }\n\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Add management server explicit route to Internal LB.\");\n                    }\n\n                    buf.append(\" mgmtcidr=\").append(_mgmtCidr);\n                    buf.append(\" localgw=\").append(dest.getPod().getGateway());\n                }\n            }\n        }\n\n        if (controlNic == null) {\n            throw new CloudRuntimeException(\"Didn't start a control port\");\n        }\n\n        if (guestNetwork != null) {\n            final String domain = guestNetwork.getNetworkDomain();\n            if (domain != null) {\n                buf.append(\" domain=\" + domain);\n            }\n        }\n\n        final String type = \"ilbvm\";\n        buf.append(\" type=\" + type);\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Boot Args for \" + profile + \": \" + buf.toString());\n        }\n\n        return true;\n    }\n","realPath":"plugins/network-elements/internal-loadbalancer/src/main/java/org/apache/cloudstack/network/lb/InternalLoadBalancerVMManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"N"},{"authorDate":"2018-03-15 19:16:50","commitOrder":2,"curCode":"    public boolean finalizeVirtualMachineProfile(VirtualMachineProfile profile, DeployDestination dest, ReservationContext context) {\n\n        List<NicProfile> elbNics = profile.getNics();\n        Long guestNtwkId = null;\n        for (NicProfile routerNic : elbNics) {\n            if (routerNic.getTrafficType() == TrafficType.Guest) {\n                guestNtwkId = routerNic.getNetworkId();\n                break;\n            }\n        }\n\n        NetworkVO guestNetwork = _networkDao.findById(guestNtwkId);\n\n        DataCenter dc = dest.getDataCenter();\n\n        StringBuilder buf = profile.getBootArgsBuilder();\n        buf.append(\" template=domP type=\" + SystemVmType);\n        buf.append(\" name=\").append(profile.getHostName());\n        NicProfile controlNic = null;\n        String defaultDns1 = null;\n        String defaultDns2 = null;\n\n        for (NicProfile nic : profile.getNics()) {\n            int deviceId = nic.getDeviceId();\n            buf.append(\" eth\").append(deviceId).append(\"ip=\").append(nic.getIPv4Address());\n            buf.append(\" eth\").append(deviceId).append(\"mask=\").append(nic.getIPv4Netmask());\n            if (nic.isDefaultNic()) {\n                buf.append(\" gateway=\").append(nic.getIPv4Gateway());\n                defaultDns1 = nic.getIPv4Dns1();\n                defaultDns2 = nic.getIPv4Dns2();\n            }\n            if (nic.getTrafficType() == TrafficType.Management) {\n                buf.append(\" localgw=\").append(dest.getPod().getGateway());\n            } else if (nic.getTrafficType() == TrafficType.Control) {\n                \r\n                if (dest.getHost().getHypervisorType() == HypervisorType.VMware) {\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Check if we need to add management server explicit route to ELB vm. pod cidr: \" + dest.getPod().getCidrAddress() + \"/\"\n                                + dest.getPod().getCidrSize() + \", pod gateway: \" + dest.getPod().getGateway() + \", management host: \"\n                                + ApiServiceConfiguration.ManagementServerAddresses.value());\n                    }\n\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Added management server explicit route to ELB vm.\");\n                    }\n                    \r\n                    buf.append(\" mgmtcidr=\").append(_mgmtCidr);\n                    buf.append(\" localgw=\").append(dest.getPod().getGateway());\n\n                    if (dc.getNetworkType() == NetworkType.Basic) {\n                        \r\n                        buf.append(\" sshonguest=true\");\n                    }\n\n                }\n\n                controlNic = nic;\n            }\n        }\n        String domain = guestNetwork.getNetworkDomain();\n        if (domain != null) {\n            buf.append(\" domain=\" + domain);\n        }\n\n        buf.append(\" dns1=\").append(defaultDns1);\n        if (defaultDns2 != null) {\n            buf.append(\" dns2=\").append(defaultDns2);\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Boot Args for \" + profile + \": \" + buf.toString());\n        }\n\n        if (controlNic == null) {\n            throw new CloudRuntimeException(\"Didn't start a control port\");\n        }\n\n        return true;\n    }\n","date":"2018-03-15 19:16:50","endLine":489,"groupId":"101826","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"finalizeVirtualMachineProfile","params":"(VirtualMachineProfileprofile@DeployDestinationdest@ReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/78/e04b5dc53f85c3653ce0db00097a3cfde8376a.src","preCode":"    public boolean finalizeVirtualMachineProfile(VirtualMachineProfile profile, DeployDestination dest, ReservationContext context) {\n\n        List<NicProfile> elbNics = profile.getNics();\n        Long guestNtwkId = null;\n        for (NicProfile routerNic : elbNics) {\n            if (routerNic.getTrafficType() == TrafficType.Guest) {\n                guestNtwkId = routerNic.getNetworkId();\n                break;\n            }\n        }\n\n        NetworkVO guestNetwork = _networkDao.findById(guestNtwkId);\n\n        DataCenter dc = dest.getDataCenter();\n\n        StringBuilder buf = profile.getBootArgsBuilder();\n        buf.append(\" template=domP type=\" + SystemVmType);\n        buf.append(\" name=\").append(profile.getHostName());\n        NicProfile controlNic = null;\n        String defaultDns1 = null;\n        String defaultDns2 = null;\n\n        for (NicProfile nic : profile.getNics()) {\n            int deviceId = nic.getDeviceId();\n            buf.append(\" eth\").append(deviceId).append(\"ip=\").append(nic.getIPv4Address());\n            buf.append(\" eth\").append(deviceId).append(\"mask=\").append(nic.getIPv4Netmask());\n            if (nic.isDefaultNic()) {\n                buf.append(\" gateway=\").append(nic.getIPv4Gateway());\n                defaultDns1 = nic.getIPv4Dns1();\n                defaultDns2 = nic.getIPv4Dns2();\n            }\n            if (nic.getTrafficType() == TrafficType.Management) {\n                buf.append(\" localgw=\").append(dest.getPod().getGateway());\n            } else if (nic.getTrafficType() == TrafficType.Control) {\n                \r\n                if (dest.getHost().getHypervisorType() == HypervisorType.VMware) {\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Check if we need to add management server explicit route to ELB vm. pod cidr: \" + dest.getPod().getCidrAddress() + \"/\"\n                                + dest.getPod().getCidrSize() + \", pod gateway: \" + dest.getPod().getGateway() + \", management host: \"\n                                + ApiServiceConfiguration.ManagementHostIPAdr.value());\n                    }\n\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Added management server explicit route to ELB vm.\");\n                    }\n                    \r\n                    buf.append(\" mgmtcidr=\").append(_mgmtCidr);\n                    buf.append(\" localgw=\").append(dest.getPod().getGateway());\n\n                    if (dc.getNetworkType() == NetworkType.Basic) {\n                        \r\n                        buf.append(\" sshonguest=true\");\n                    }\n\n                }\n\n                controlNic = nic;\n            }\n        }\n        String domain = guestNetwork.getNetworkDomain();\n        if (domain != null) {\n            buf.append(\" domain=\" + domain);\n        }\n\n        buf.append(\" dns1=\").append(defaultDns1);\n        if (defaultDns2 != null) {\n            buf.append(\" dns2=\").append(defaultDns2);\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Boot Args for \" + profile + \": \" + buf.toString());\n        }\n\n        if (controlNic == null) {\n            throw new CloudRuntimeException(\"Didn't start a control port\");\n        }\n\n        return true;\n    }\n","realPath":"plugins/network-elements/elastic-loadbalancer/src/main/java/com/cloud/network/lb/ElasticLoadBalancerManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"M"}],"commitId":"8ef131745a5ef0e5e6ddc7e498f3a0208f1bfb71","commitMessage":"@@@Merge branch '4.11'\n","date":"2018-03-15 19:16:50","modifiedFileCount":"28","status":"M","submitter":"Rohit Yadav"}]
