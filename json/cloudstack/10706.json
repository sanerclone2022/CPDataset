[{"authorTime":"2019-01-25 20:05:13","codes":[{"authorDate":"2019-01-25 20:05:13","commitOrder":1,"curCode":"    private void cleanUpVolumesForFailedMigrations(DataObject srcData, DataObject destData) {\n        VolumeVO destinationVO = volDao.findById(destData.getId());\n        VolumeVO sourceVO = volDao.findById(srcData.getId());\n        sourceVO.setState(Volume.State.Ready);\n        volDao.update(sourceVO.getId(), sourceVO);\n        destinationVO.setState(Volume.State.Expunged);\n        destinationVO.setRemoved(new Date());\n        volDao.update(destinationVO.getId(), destinationVO);\n    }\n","date":"2019-01-25 20:05:13","endLine":99,"groupId":"6757","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanUpVolumesForFailedMigrations","params":"(DataObjectsrcData@DataObjectdestData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c2/724e648241283368a698707b07a993d9b85065.src","preCode":"    private void cleanUpVolumesForFailedMigrations(DataObject srcData, DataObject destData) {\n        VolumeVO destinationVO = volDao.findById(destData.getId());\n        VolumeVO sourceVO = volDao.findById(srcData.getId());\n        sourceVO.setState(Volume.State.Ready);\n        volDao.update(sourceVO.getId(), sourceVO);\n        destinationVO.setState(Volume.State.Expunged);\n        destinationVO.setRemoved(new Date());\n        volDao.update(destinationVO.getId(), destinationVO);\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/DataMotionServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2019-01-25 20:05:13","commitOrder":1,"curCode":"    private void updateVolumeAfterMigration(Answer answer, DataObject srcData, DataObject destData) {\n        VolumeVO destinationVO = volDao.findById(destData.getId());\n        if (!(answer instanceof MigrateVolumeAnswer)) {\n            \r\n            VolumeVO sourceVO = volDao.findById(srcData.getId());\n            sourceVO.setState(Volume.State.Ready);\n            volDao.update(sourceVO.getId(), sourceVO);\n            destinationVO.setState(Volume.State.Expunged);\n            destinationVO.setRemoved(new Date());\n            volDao.update(destinationVO.getId(), destinationVO);\n            throw new CloudRuntimeException(\"unexpected answer from hypervisor agent: \" + answer.getDetails());\n        }\n        MigrateVolumeAnswer ans = (MigrateVolumeAnswer) answer;\n        if (s_logger.isDebugEnabled()) {\n            String format = \"retrieved '%s' as new path for volume(%d)\";\n            s_logger.debug(String.format(format, ans.getVolumePath(), destData.getId()));\n        }\n        \r\n        destinationVO.setPath(ans.getVolumePath());\n        volDao.update(destinationVO.getId(), destinationVO);\n    }\n","date":"2019-01-25 20:05:13","endLine":252,"groupId":"6757","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"updateVolumeAfterMigration","params":"(Answeranswer@DataObjectsrcData@DataObjectdestData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/24/63e75c01d3da48cb2a91ea96c391d7b7640f68.src","preCode":"    private void updateVolumeAfterMigration(Answer answer, DataObject srcData, DataObject destData) {\n        VolumeVO destinationVO = volDao.findById(destData.getId());\n        if (!(answer instanceof MigrateVolumeAnswer)) {\n            \r\n            VolumeVO sourceVO = volDao.findById(srcData.getId());\n            sourceVO.setState(Volume.State.Ready);\n            volDao.update(sourceVO.getId(), sourceVO);\n            destinationVO.setState(Volume.State.Expunged);\n            destinationVO.setRemoved(new Date());\n            volDao.update(destinationVO.getId(), destinationVO);\n            throw new CloudRuntimeException(\"unexpected answer from hypervisor agent: \" + answer.getDetails());\n        }\n        MigrateVolumeAnswer ans = (MigrateVolumeAnswer) answer;\n        if (s_logger.isDebugEnabled()) {\n            String format = \"retrieved '%s' as new path for volume(%d)\";\n            s_logger.debug(String.format(format, ans.getVolumePath(), destData.getId()));\n        }\n        \r\n        destinationVO.setPath(ans.getVolumePath());\n        volDao.update(destinationVO.getId(), destinationVO);\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/org/apache/cloudstack/storage/motion/VmwareStorageMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"B"}],"commitId":"b363fd49f70ac2092ebe6226a72a3d911dc99e1f","commitMessage":"@@@Vmware offline migration (#2848)\n\n* - Offline VM and Volume migration on Vmware hypervisor hosts\n- Also add VM disk consolidation call on successful VM migrations\n\n* Fix indentation of marvin test file and reformat against PEP8\n\n* * Fix few comment typos\n* Refactor debug messages to use String.format() when debug log level is enabled.\n\n* Send list of commands returned by hypervisor Guru instead of explicitly selecting the first one\n\n* Fix unhandled NPE during VM migration\n\n* Revert back to distinct event descriptions for VM to host or storage pool migration\n\n* Reformat test_primary_storage file against PEP-8 and Remove unused imports\n\n* Revert back the deprecation messages in the custom StringUtils class to favour the use of the ApacheUtils\n","date":"2019-01-25 20:05:13","modifiedFileCount":"35","status":"B","submitter":"dahn"},{"authorTime":"2021-04-26 17:03:58","codes":[{"authorDate":"2019-01-25 20:05:13","commitOrder":2,"curCode":"    private void cleanUpVolumesForFailedMigrations(DataObject srcData, DataObject destData) {\n        VolumeVO destinationVO = volDao.findById(destData.getId());\n        VolumeVO sourceVO = volDao.findById(srcData.getId());\n        sourceVO.setState(Volume.State.Ready);\n        volDao.update(sourceVO.getId(), sourceVO);\n        destinationVO.setState(Volume.State.Expunged);\n        destinationVO.setRemoved(new Date());\n        volDao.update(destinationVO.getId(), destinationVO);\n    }\n","date":"2019-01-25 20:05:13","endLine":99,"groupId":"10706","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanUpVolumesForFailedMigrations","params":"(DataObjectsrcData@DataObjectdestData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c2/724e648241283368a698707b07a993d9b85065.src","preCode":"    private void cleanUpVolumesForFailedMigrations(DataObject srcData, DataObject destData) {\n        VolumeVO destinationVO = volDao.findById(destData.getId());\n        VolumeVO sourceVO = volDao.findById(srcData.getId());\n        sourceVO.setState(Volume.State.Ready);\n        volDao.update(sourceVO.getId(), sourceVO);\n        destinationVO.setState(Volume.State.Expunged);\n        destinationVO.setRemoved(new Date());\n        volDao.update(destinationVO.getId(), destinationVO);\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/DataMotionServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"},{"authorDate":"2021-04-26 17:03:58","commitOrder":2,"curCode":"    private void updateVolumeAfterMigration(Answer answer, DataObject srcData, DataObject destData) {\n        VolumeVO destinationVO = volDao.findById(destData.getId());\n        if (!(answer instanceof MigrateVolumeAnswer)) {\n            \r\n            VolumeVO sourceVO = volDao.findById(srcData.getId());\n            sourceVO.setState(Volume.State.Ready);\n            volDao.update(sourceVO.getId(), sourceVO);\n            if (destinationVO.getId() != sourceVO.getId()) {\n                destinationVO.setState(Volume.State.Expunged);\n                destinationVO.setRemoved(new Date());\n                volDao.update(destinationVO.getId(), destinationVO);\n            }\n            throw new CloudRuntimeException(\"unexpected answer from hypervisor agent: \" + answer.getDetails());\n        }\n        MigrateVolumeAnswer ans = (MigrateVolumeAnswer) answer;\n        if (s_logger.isDebugEnabled()) {\n            String format = \"retrieved '%s' as new path for volume(%d)\";\n            s_logger.debug(String.format(format, ans.getVolumePath(), destData.getId()));\n        }\n        \r\n        destinationVO.setPoolId(destData.getDataStore().getId());\n        destinationVO.setPath(ans.getVolumePath());\n        volDao.update(destinationVO.getId(), destinationVO);\n    }\n","date":"2021-04-26 17:03:58","endLine":306,"groupId":"10706","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"updateVolumeAfterMigration","params":"(Answeranswer@DataObjectsrcData@DataObjectdestData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/04/111bc3b6be781f1e36b8704adfcf13ed206fa0.src","preCode":"    private void updateVolumeAfterMigration(Answer answer, DataObject srcData, DataObject destData) {\n        VolumeVO destinationVO = volDao.findById(destData.getId());\n        if (!(answer instanceof MigrateVolumeAnswer)) {\n            \r\n            VolumeVO sourceVO = volDao.findById(srcData.getId());\n            sourceVO.setState(Volume.State.Ready);\n            volDao.update(sourceVO.getId(), sourceVO);\n            destinationVO.setState(Volume.State.Expunged);\n            destinationVO.setRemoved(new Date());\n            volDao.update(destinationVO.getId(), destinationVO);\n            throw new CloudRuntimeException(\"unexpected answer from hypervisor agent: \" + answer.getDetails());\n        }\n        MigrateVolumeAnswer ans = (MigrateVolumeAnswer) answer;\n        if (s_logger.isDebugEnabled()) {\n            String format = \"retrieved '%s' as new path for volume(%d)\";\n            s_logger.debug(String.format(format, ans.getVolumePath(), destData.getId()));\n        }\n        \r\n        destinationVO.setPath(ans.getVolumePath());\n        volDao.update(destinationVO.getId(), destinationVO);\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/org/apache/cloudstack/storage/motion/VmwareStorageMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"M"}],"commitId":"42c83b08f54ceaf1a363c29b125f3970480c7b0d","commitMessage":"@@@Merge remote-tracking branch 'apache/4.15'\n","date":"2021-04-26 17:03:58","modifiedFileCount":"15","status":"M","submitter":"Abhishek Kumar"}]
