[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public List<VpcProvider> getVpcElements() {\n        if (vpcElements == null) {\n            vpcElements = new ArrayList<VpcProvider>();\n            vpcElements.add((VpcProvider) _ntwkModel.getElementImplementingProvider(Provider.VPCVirtualRouter.getName()));\n            vpcElements.add((VpcProvider) _ntwkModel.getElementImplementingProvider(Provider.JuniperContrailVpcRouter.getName()));\n        }\n\n        if (vpcElements == null) {\n            throw new CloudRuntimeException(\"Failed to initialize vpc elements\");\n        }\n\n        return vpcElements;\n    }\n","date":"2018-01-20 05:49:27","endLine":1392,"groupId":"12842","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getVpcElements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ab/6441ac5b7e6f8edb855842f28034fb2a8a3cf5.src","preCode":"    public List<VpcProvider> getVpcElements() {\n        if (vpcElements == null) {\n            vpcElements = new ArrayList<VpcProvider>();\n            vpcElements.add((VpcProvider) _ntwkModel.getElementImplementingProvider(Provider.VPCVirtualRouter.getName()));\n            vpcElements.add((VpcProvider) _ntwkModel.getElementImplementingProvider(Provider.JuniperContrailVpcRouter.getName()));\n        }\n\n        if (vpcElements == null) {\n            throw new CloudRuntimeException(\"Failed to initialize vpc elements\");\n        }\n\n        return vpcElements;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1380,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private boolean applyACLToPrivateGw(final PrivateGateway gateway, final List<? extends NetworkACLItem> rules) throws ResourceUnavailableException {\n        List<VpcProvider> vpcElements = null;\n        vpcElements = new ArrayList<VpcProvider>();\n        vpcElements.add((VpcProvider)_ntwkModel.getElementImplementingProvider(Network.Provider.VPCVirtualRouter.getName()));\n\n        if (vpcElements == null) {\n            throw new CloudRuntimeException(\"Failed to initialize vpc elements\");\n        }\n\n        try{\n            for (final VpcProvider provider : vpcElements) {\n                return provider.applyACLItemsToPrivateGw(gateway, rules);\n            }\n        } catch(final Exception ex) {\n            s_logger.debug(\"Failed to apply acl to private gateway \" + gateway);\n        }\n        return false;\n    }\n","date":"2018-01-20 05:49:27","endLine":403,"groupId":"795","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"applyACLToPrivateGw","params":"(finalPrivateGatewaygateway@finalList<?extendsNetworkACLItem>rules)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c6/4a36b7c9fa92bcff4ba4c76fe25c3d8654d334.src","preCode":"    private boolean applyACLToPrivateGw(final PrivateGateway gateway, final List<? extends NetworkACLItem> rules) throws ResourceUnavailableException {\n        List<VpcProvider> vpcElements = null;\n        vpcElements = new ArrayList<VpcProvider>();\n        vpcElements.add((VpcProvider)_ntwkModel.getElementImplementingProvider(Network.Provider.VPCVirtualRouter.getName()));\n\n        if (vpcElements == null) {\n            throw new CloudRuntimeException(\"Failed to initialize vpc elements\");\n        }\n\n        try{\n            for (final VpcProvider provider : vpcElements) {\n                return provider.applyACLItemsToPrivateGw(gateway, rules);\n            }\n        } catch(final Exception ex) {\n            s_logger.debug(\"Failed to apply acl to private gateway \" + gateway);\n        }\n        return false;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpc/NetworkACLManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-03-13 22:07:35","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public List<VpcProvider> getVpcElements() {\n        if (vpcElements == null) {\n            vpcElements = new ArrayList<VpcProvider>();\n            vpcElements.add((VpcProvider) _ntwkModel.getElementImplementingProvider(Provider.VPCVirtualRouter.getName()));\n            vpcElements.add((VpcProvider) _ntwkModel.getElementImplementingProvider(Provider.JuniperContrailVpcRouter.getName()));\n        }\n\n        if (vpcElements == null) {\n            throw new CloudRuntimeException(\"Failed to initialize vpc elements\");\n        }\n\n        return vpcElements;\n    }\n","date":"2018-01-20 05:49:27","endLine":1392,"groupId":"101774","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getVpcElements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ab/6441ac5b7e6f8edb855842f28034fb2a8a3cf5.src","preCode":"    public List<VpcProvider> getVpcElements() {\n        if (vpcElements == null) {\n            vpcElements = new ArrayList<VpcProvider>();\n            vpcElements.add((VpcProvider) _ntwkModel.getElementImplementingProvider(Provider.VPCVirtualRouter.getName()));\n            vpcElements.add((VpcProvider) _ntwkModel.getElementImplementingProvider(Provider.JuniperContrailVpcRouter.getName()));\n        }\n\n        if (vpcElements == null) {\n            throw new CloudRuntimeException(\"Failed to initialize vpc elements\");\n        }\n\n        return vpcElements;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1380,"status":"N"},{"authorDate":"2018-03-13 22:07:35","commitOrder":2,"curCode":"    private boolean applyACLToPrivateGw(final PrivateGateway gateway, final List<? extends NetworkACLItem> rules) throws ResourceUnavailableException {\n        List<VpcProvider> vpcElements = new ArrayList<VpcProvider>();\n        vpcElements.add((VpcProvider)_ntwkModel.getElementImplementingProvider(Network.Provider.VPCVirtualRouter.getName()));\n\n        try {\n            for (final VpcProvider provider : vpcElements) {\n                return provider.applyACLItemsToPrivateGw(gateway, rules);\n            }\n        } catch (final Exception ex) {\n            s_logger.debug(\"Failed to apply acl to private gateway \" + gateway);\n        }\n        return false;\n    }\n","date":"2018-03-13 22:07:35","endLine":368,"groupId":"101774","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"applyACLToPrivateGw","params":"(finalPrivateGatewaygateway@finalList<?extendsNetworkACLItem>rules)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d5/f31d62753c7994f2a4acb33559c1d714250cca.src","preCode":"    private boolean applyACLToPrivateGw(final PrivateGateway gateway, final List<? extends NetworkACLItem> rules) throws ResourceUnavailableException {\n        List<VpcProvider> vpcElements = null;\n        vpcElements = new ArrayList<VpcProvider>();\n        vpcElements.add((VpcProvider)_ntwkModel.getElementImplementingProvider(Network.Provider.VPCVirtualRouter.getName()));\n\n        if (vpcElements == null) {\n            throw new CloudRuntimeException(\"Failed to initialize vpc elements\");\n        }\n\n        try{\n            for (final VpcProvider provider : vpcElements) {\n                return provider.applyACLItemsToPrivateGw(gateway, rules);\n            }\n        } catch(final Exception ex) {\n            s_logger.debug(\"Failed to apply acl to private gateway \" + gateway);\n        }\n        return false;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpc/NetworkACLManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"M"}],"commitId":"7efdaa65f7cef4cc27441fff36165d0042422b94","commitMessage":"@@@[CLOUDSTACK-10314] Add Text-Field to each ACL Rule (#2475)\n\n* [CLOUDSTACK-10314] Add Text-Field to each ACL Rule\n\nIt is interesting to have a text field (e.g. CHAR-256) added to each ACL rule.  which allows to enter a \"reason\" for each FW Rule created. This is valuable for customer documentation.  as well as best practice for an evidence towards auditing the system\n\n* Formatting to make check style happy and code clean ups\n","date":"2018-03-13 22:07:35","modifiedFileCount":"13","status":"M","submitter":"Rafael Weing?rtner"}]
