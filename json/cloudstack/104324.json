[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem && pool.getPoolType() != StoragePoolType.IscsiLUN\n                && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS && pool.getPoolType() != StoragePoolType.SharedMountPoint\n                && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.OCFS2 && pool.getPoolType() != StoragePoolType.RBD\n                && pool.getPoolType() != StoragePoolType.CLVM) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":423,"groupId":"1711","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"createStoragePool","params":"(longhostId@StoragePoolpool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d6/a67b447c57a9865d7b4f20c4fcd59ede95b87d.src","preCode":"    private boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem && pool.getPoolType() != StoragePoolType.IscsiLUN\n                && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS && pool.getPoolType() != StoragePoolType.SharedMountPoint\n                && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.OCFS2 && pool.getPoolType() != StoragePoolType.RBD\n                && pool.getPoolType() != StoragePoolType.CLVM) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","realPath":"plugins/storage/volume/cloudbyte/src/main/java/org/apache/cloudstack/storage/datastore/lifecycle/ElastistorPrimaryDataStoreLifeCycle.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":398,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem &&\n                pool.getPoolType() != StoragePoolType.IscsiLUN && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS &&\n                pool.getPoolType() != StoragePoolType.SharedMountPoint && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.OCFS2 &&\n                pool.getPoolType() != StoragePoolType.RBD && pool.getPoolType() != StoragePoolType.CLVM && pool.getPoolType() != StoragePoolType.SMB &&\n                pool.getPoolType() != StoragePoolType.Gluster) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":383,"groupId":"15266","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createStoragePool","params":"(longhostId@StoragePoolpool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a5/00fdb635438a35576ea08a44829418a8c1255f.src","preCode":"    protected boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem &&\n                pool.getPoolType() != StoragePoolType.IscsiLUN && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS &&\n                pool.getPoolType() != StoragePoolType.SharedMountPoint && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.OCFS2 &&\n                pool.getPoolType() != StoragePoolType.RBD && pool.getPoolType() != StoragePoolType.CLVM && pool.getPoolType() != StoragePoolType.SMB &&\n                pool.getPoolType() != StoragePoolType.Gluster) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","realPath":"plugins/storage/volume/default/src/main/java/org/apache/cloudstack/storage/datastore/lifecycle/CloudStackPrimaryDataStoreLifeCycleImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2020-10-26 21:24:14","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem && pool.getPoolType() != StoragePoolType.IscsiLUN\n                && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS && pool.getPoolType() != StoragePoolType.SharedMountPoint\n                && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.OCFS2 && pool.getPoolType() != StoragePoolType.RBD\n                && pool.getPoolType() != StoragePoolType.CLVM) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":423,"groupId":"1711","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createStoragePool","params":"(longhostId@StoragePoolpool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d6/a67b447c57a9865d7b4f20c4fcd59ede95b87d.src","preCode":"    private boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem && pool.getPoolType() != StoragePoolType.IscsiLUN\n                && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS && pool.getPoolType() != StoragePoolType.SharedMountPoint\n                && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.OCFS2 && pool.getPoolType() != StoragePoolType.RBD\n                && pool.getPoolType() != StoragePoolType.CLVM) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","realPath":"plugins/storage/volume/cloudbyte/src/main/java/org/apache/cloudstack/storage/datastore/lifecycle/ElastistorPrimaryDataStoreLifeCycle.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":398,"status":"N"},{"authorDate":"2020-10-26 21:24:14","commitOrder":2,"curCode":"    protected boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem &&\n                pool.getPoolType() != StoragePoolType.IscsiLUN && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS &&\n                pool.getPoolType() != StoragePoolType.SharedMountPoint && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.DatastoreCluster && pool.getPoolType() != StoragePoolType.OCFS2 &&\n                pool.getPoolType() != StoragePoolType.RBD && pool.getPoolType() != StoragePoolType.CLVM && pool.getPoolType() != StoragePoolType.SMB &&\n                pool.getPoolType() != StoragePoolType.Gluster) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","date":"2020-10-26 21:24:14","endLine":421,"groupId":"8679","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createStoragePool","params":"(longhostId@StoragePoolpool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/06/8b26fe70a3a9ea1404fe274b884e73fbc73df3.src","preCode":"    protected boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem &&\n                pool.getPoolType() != StoragePoolType.IscsiLUN && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS &&\n                pool.getPoolType() != StoragePoolType.SharedMountPoint && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.OCFS2 &&\n                pool.getPoolType() != StoragePoolType.RBD && pool.getPoolType() != StoragePoolType.CLVM && pool.getPoolType() != StoragePoolType.SMB &&\n                pool.getPoolType() != StoragePoolType.Gluster) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","realPath":"plugins/storage/volume/default/src/main/java/org/apache/cloudstack/storage/datastore/lifecycle/CloudStackPrimaryDataStoreLifeCycleImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"M"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"},{"authorTime":"2021-07-17 09:37:42","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    private boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem && pool.getPoolType() != StoragePoolType.IscsiLUN\n                && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS && pool.getPoolType() != StoragePoolType.SharedMountPoint\n                && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.OCFS2 && pool.getPoolType() != StoragePoolType.RBD\n                && pool.getPoolType() != StoragePoolType.CLVM) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":423,"groupId":"104324","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"createStoragePool","params":"(longhostId@StoragePoolpool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d6/a67b447c57a9865d7b4f20c4fcd59ede95b87d.src","preCode":"    private boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem && pool.getPoolType() != StoragePoolType.IscsiLUN\n                && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS && pool.getPoolType() != StoragePoolType.SharedMountPoint\n                && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.OCFS2 && pool.getPoolType() != StoragePoolType.RBD\n                && pool.getPoolType() != StoragePoolType.CLVM) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","realPath":"plugins/storage/volume/cloudbyte/src/main/java/org/apache/cloudstack/storage/datastore/lifecycle/ElastistorPrimaryDataStoreLifeCycle.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":398,"status":"N"},{"authorDate":"2021-07-17 09:37:42","commitOrder":3,"curCode":"    protected boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem &&\n                pool.getPoolType() != StoragePoolType.IscsiLUN && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS &&\n                pool.getPoolType() != StoragePoolType.SharedMountPoint && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.DatastoreCluster && pool.getPoolType() != StoragePoolType.OCFS2 &&\n                pool.getPoolType() != StoragePoolType.RBD && pool.getPoolType() != StoragePoolType.CLVM && pool.getPoolType() != StoragePoolType.SMB &&\n                pool.getPoolType() != StoragePoolType.Gluster) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            storageMgr.updateStorageCapabilities(pool.getId(), false);\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","date":"2021-07-17 09:37:42","endLine":422,"groupId":"104324","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"createStoragePool","params":"(longhostId@StoragePoolpool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f3/9b17076e7ae6b5ed9dbc4dda8dd5cd2855dfdb.src","preCode":"    protected boolean createStoragePool(long hostId, StoragePool pool) {\n        s_logger.debug(\"creating pool \" + pool.getName() + \" on  host \" + hostId);\n\n        if (pool.getPoolType() != StoragePoolType.NetworkFilesystem && pool.getPoolType() != StoragePoolType.Filesystem &&\n                pool.getPoolType() != StoragePoolType.IscsiLUN && pool.getPoolType() != StoragePoolType.Iscsi && pool.getPoolType() != StoragePoolType.VMFS &&\n                pool.getPoolType() != StoragePoolType.SharedMountPoint && pool.getPoolType() != StoragePoolType.PreSetup && pool.getPoolType() != StoragePoolType.DatastoreCluster && pool.getPoolType() != StoragePoolType.OCFS2 &&\n                pool.getPoolType() != StoragePoolType.RBD && pool.getPoolType() != StoragePoolType.CLVM && pool.getPoolType() != StoragePoolType.SMB &&\n                pool.getPoolType() != StoragePoolType.Gluster) {\n            s_logger.warn(\" Doesn't support storage pool type \" + pool.getPoolType());\n            return false;\n        }\n        CreateStoragePoolCommand cmd = new CreateStoragePoolCommand(true, pool);\n        final Answer answer = agentMgr.easySend(hostId, cmd);\n        if (answer != null && answer.getResult()) {\n            return true;\n        } else {\n            primaryDataStoreDao.expunge(pool.getId());\n            String msg = \"\";\n            if (answer != null) {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to \" + answer.getDetails();\n                s_logger.warn(msg);\n            } else {\n                msg = \"Can not create storage pool through host \" + hostId + \" due to CreateStoragePoolCommand returns null\";\n                s_logger.warn(msg);\n            }\n            throw new CloudRuntimeException(msg);\n        }\n    }\n","realPath":"plugins/storage/volume/default/src/main/java/org/apache/cloudstack/storage/datastore/lifecycle/CloudStackPrimaryDataStoreLifeCycleImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"M"}],"commitId":"96c9c5a5e2251174da7da881ab1d0f8e1f323aac","commitMessage":"@@@Added disk provisioning type support for VMWare (#4640)\n\n* Added disk provisioning type support for VMWare\n\n* Review changes\n\n* Fixed unit test\n\n* Review changes\n\n* Added missing licenses\n\n* Review changes\n\n* Update StoragePoolInfo.java\n\nRemoved white space\n\n* Review change - Getting disk provisioning strictness setting using the zone id and not the pool id\n\n* Delete __init__.py\n\n* Merge fix\n\n* Fixed failing test\n\n* Added comment about parameters\n\n* Added error log when update fails\n\n* Added exception when using API\n\n* Ordering storage pool selection to prefer thick disk capable pools if available\n\n* Removed unused parameter\n\n* Reordering changes\n\n* Returning storage pool details after update\n\n* Removed multiple pool update.  updated marvin test.  removed duplicate enum\n\n* Removed comment\n\n* Removed unused import\n\n* Removed for loop\n\n* Added missing return statements for failed checks\n\n* Class name change\n\n* Null pointer\n\n* Added more info when a deployment fails\n\n* Null pointer\n\n* Update api/src/main/java/org/apache/cloudstack/api/BaseListCmd.java\n\nCo-authored-by: dahn <daan.hoogland@gmail.com>\n\n* Small bug fix on API response and added missing bracket\n\n* Removed datastore cluster code\n\n* Removed unused imports.  added missing signature\n\n* Removed duplicate config key\n\n* Revert \"Added more info when a deployment fails\"\n\nThis reverts commit 2486db78dca8e034d8ad2386174dfb11004ce654.\n\nCo-authored-by: dahn <daan.hoogland@gmail.com>","date":"2021-07-17 09:37:42","modifiedFileCount":"23","status":"M","submitter":"Spaceman1984"}]
