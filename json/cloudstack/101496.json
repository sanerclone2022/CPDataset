[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public StoragePoolResponse setStoragePoolForMigrationResponse(StoragePoolResponse response, StoragePoolJoinVO sp) {\n        String tag = sp.getTag();\n        if (tag != null) {\n            if (response.getTags() != null && response.getTags().length() > 0) {\n                response.setTags(response.getTags() + \",\" + tag);\n            } else {\n                response.setTags(tag);\n            }\n        }\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":206,"groupId":"741","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setStoragePoolForMigrationResponse","params":"(StoragePoolResponseresponse@StoragePoolJoinVOsp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b8/b312bd267badddb500856bfa02492620baee1b.src","preCode":"    public StoragePoolResponse setStoragePoolForMigrationResponse(StoragePoolResponse response, StoragePoolJoinVO sp) {\n        String tag = sp.getTag();\n        if (tag != null) {\n            if (response.getTags() != null && response.getTags().length() > 0) {\n                response.setTags(response.getTags() + \",\" + tag);\n            } else {\n                response.setTags(tag);\n            }\n        }\n        return response;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/StoragePoolJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public ImageStoreResponse newImageStoreResponse(ImageStoreJoinVO ids) {\n        ImageStoreResponse osResponse = new ImageStoreResponse();\n        osResponse.setId(ids.getUuid());\n        osResponse.setName(ids.getName());\n        osResponse.setProviderName(ids.getProviderName());\n        osResponse.setProtocol(ids.getProtocol());\n        String url = ids.getUrl();\n        \r\n        if(ids.getProtocol().equals(\"cifs\".toString())) {\n            url = StringUtils.cleanString(url);\n        }\n        osResponse.setUrl(url);\n        osResponse.setScope(ids.getScope());\n        osResponse.setZoneId(ids.getZoneUuid());\n        osResponse.setZoneName(ids.getZoneName());\n\n        osResponse.setObjectName(\"imagestore\");\n        return osResponse;\n    }\n","date":"2018-01-20 05:49:27","endLine":80,"groupId":"741","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newImageStoreResponse","params":"(ImageStoreJoinVOids)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/77/34489dd67698162261157f6dfa9295b86cb2aa.src","preCode":"    public ImageStoreResponse newImageStoreResponse(ImageStoreJoinVO ids) {\n        ImageStoreResponse osResponse = new ImageStoreResponse();\n        osResponse.setId(ids.getUuid());\n        osResponse.setName(ids.getName());\n        osResponse.setProviderName(ids.getProviderName());\n        osResponse.setProtocol(ids.getProtocol());\n        String url = ids.getUrl();\n        \r\n        if(ids.getProtocol().equals(\"cifs\".toString())) {\n            url = StringUtils.cleanString(url);\n        }\n        osResponse.setUrl(url);\n        osResponse.setScope(ids.getScope());\n        osResponse.setZoneId(ids.getZoneUuid());\n        osResponse.setZoneName(ids.getZoneName());\n\n        osResponse.setObjectName(\"imagestore\");\n        return osResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ImageStoreJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2020-06-08 09:35:58","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public StoragePoolResponse setStoragePoolForMigrationResponse(StoragePoolResponse response, StoragePoolJoinVO sp) {\n        String tag = sp.getTag();\n        if (tag != null) {\n            if (response.getTags() != null && response.getTags().length() > 0) {\n                response.setTags(response.getTags() + \",\" + tag);\n            } else {\n                response.setTags(tag);\n            }\n        }\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":206,"groupId":"741","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setStoragePoolForMigrationResponse","params":"(StoragePoolResponseresponse@StoragePoolJoinVOsp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b8/b312bd267badddb500856bfa02492620baee1b.src","preCode":"    public StoragePoolResponse setStoragePoolForMigrationResponse(StoragePoolResponse response, StoragePoolJoinVO sp) {\n        String tag = sp.getTag();\n        if (tag != null) {\n            if (response.getTags() != null && response.getTags().length() > 0) {\n                response.setTags(response.getTags() + \",\" + tag);\n            } else {\n                response.setTags(tag);\n            }\n        }\n        return response;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/StoragePoolJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"N"},{"authorDate":"2020-06-08 09:35:58","commitOrder":2,"curCode":"    public ImageStoreResponse newImageStoreResponse(ImageStoreJoinVO ids) {\n        ImageStoreResponse osResponse = new ImageStoreResponse();\n        osResponse.setId(ids.getUuid());\n        osResponse.setName(ids.getName());\n        osResponse.setProviderName(ids.getProviderName());\n        osResponse.setProtocol(ids.getProtocol());\n        String url = ids.getUrl();\n        \r\n        if(ids.getProtocol().equals(\"cifs\".toString())) {\n            url = StringUtils.cleanString(url);\n        }\n        osResponse.setUrl(url);\n        osResponse.setScope(ids.getScope());\n        osResponse.setZoneId(ids.getZoneUuid());\n        osResponse.setZoneName(ids.getZoneName());\n\n        StorageStats secStorageStats = ApiDBUtils.getSecondaryStorageStatistics(ids.getId());\n        if (secStorageStats != null) {\n            osResponse.setDiskSizeTotal(secStorageStats.getCapacityBytes());\n            osResponse.setDiskSizeUsed(secStorageStats.getByteUsed());\n        }\n\n        osResponse.setObjectName(\"imagestore\");\n        return osResponse;\n    }\n","date":"2020-06-08 09:35:58","endLine":88,"groupId":"741","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newImageStoreResponse","params":"(ImageStoreJoinVOids)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/23/89b57cf4fe9139d1ed31c686bc267de8a3b73e.src","preCode":"    public ImageStoreResponse newImageStoreResponse(ImageStoreJoinVO ids) {\n        ImageStoreResponse osResponse = new ImageStoreResponse();\n        osResponse.setId(ids.getUuid());\n        osResponse.setName(ids.getName());\n        osResponse.setProviderName(ids.getProviderName());\n        osResponse.setProtocol(ids.getProtocol());\n        String url = ids.getUrl();\n        \r\n        if(ids.getProtocol().equals(\"cifs\".toString())) {\n            url = StringUtils.cleanString(url);\n        }\n        osResponse.setUrl(url);\n        osResponse.setScope(ids.getScope());\n        osResponse.setZoneId(ids.getZoneUuid());\n        osResponse.setZoneName(ids.getZoneName());\n\n        osResponse.setObjectName(\"imagestore\");\n        return osResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ImageStoreJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"6bf3769c0987d578d068891e28fe2a5da466291a","commitMessage":"@@@Display image store disk size used and total disk size in (#4046)\n\nlist imagestore api response","date":"2020-06-08 09:35:58","modifiedFileCount":"2","status":"M","submitter":"Rakesh"},{"authorTime":"2020-09-17 12:42:10","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    public StoragePoolResponse setStoragePoolForMigrationResponse(StoragePoolResponse response, StoragePoolJoinVO sp) {\n        String tag = sp.getTag();\n        if (tag != null) {\n            if (response.getTags() != null && response.getTags().length() > 0) {\n                response.setTags(response.getTags() + \",\" + tag);\n            } else {\n                response.setTags(tag);\n            }\n        }\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":206,"groupId":"741","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setStoragePoolForMigrationResponse","params":"(StoragePoolResponseresponse@StoragePoolJoinVOsp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b8/b312bd267badddb500856bfa02492620baee1b.src","preCode":"    public StoragePoolResponse setStoragePoolForMigrationResponse(StoragePoolResponse response, StoragePoolJoinVO sp) {\n        String tag = sp.getTag();\n        if (tag != null) {\n            if (response.getTags() != null && response.getTags().length() > 0) {\n                response.setTags(response.getTags() + \",\" + tag);\n            } else {\n                response.setTags(tag);\n            }\n        }\n        return response;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/StoragePoolJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"N"},{"authorDate":"2020-09-17 12:42:10","commitOrder":3,"curCode":"    public ImageStoreResponse newImageStoreResponse(ImageStoreJoinVO ids) {\n        ImageStoreResponse osResponse = new ImageStoreResponse();\n        osResponse.setId(ids.getUuid());\n        osResponse.setName(ids.getName());\n        osResponse.setProviderName(ids.getProviderName());\n        osResponse.setProtocol(ids.getProtocol());\n        osResponse.setReadonly(ids.isReadonly());\n        String url = ids.getUrl();\n        \r\n        if(ids.getProtocol().equals(\"cifs\".toString())) {\n            url = StringUtils.cleanString(url);\n        }\n        osResponse.setUrl(url);\n        osResponse.setScope(ids.getScope());\n        osResponse.setZoneId(ids.getZoneUuid());\n        osResponse.setZoneName(ids.getZoneName());\n\n        StorageStats secStorageStats = ApiDBUtils.getSecondaryStorageStatistics(ids.getId());\n        if (secStorageStats != null) {\n            osResponse.setDiskSizeTotal(secStorageStats.getCapacityBytes());\n            osResponse.setDiskSizeUsed(secStorageStats.getByteUsed());\n        }\n\n        osResponse.setObjectName(\"imagestore\");\n        return osResponse;\n    }\n","date":"2020-09-17 12:42:10","endLine":89,"groupId":"741","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newImageStoreResponse","params":"(ImageStoreJoinVOids)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b9/1398de9b41d17ef82f19b326594094c9ba3fe0.src","preCode":"    public ImageStoreResponse newImageStoreResponse(ImageStoreJoinVO ids) {\n        ImageStoreResponse osResponse = new ImageStoreResponse();\n        osResponse.setId(ids.getUuid());\n        osResponse.setName(ids.getName());\n        osResponse.setProviderName(ids.getProviderName());\n        osResponse.setProtocol(ids.getProtocol());\n        String url = ids.getUrl();\n        \r\n        if(ids.getProtocol().equals(\"cifs\".toString())) {\n            url = StringUtils.cleanString(url);\n        }\n        osResponse.setUrl(url);\n        osResponse.setScope(ids.getScope());\n        osResponse.setZoneId(ids.getZoneUuid());\n        osResponse.setZoneName(ids.getZoneName());\n\n        StorageStats secStorageStats = ApiDBUtils.getSecondaryStorageStatistics(ids.getId());\n        if (secStorageStats != null) {\n            osResponse.setDiskSizeTotal(secStorageStats.getCapacityBytes());\n            osResponse.setDiskSizeUsed(secStorageStats.getByteUsed());\n        }\n\n        osResponse.setObjectName(\"imagestore\");\n        return osResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ImageStoreJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"b464fe41c67812145731c7c6c3edebb94bc47487","commitMessage":"@@@server: Secondary Storage Usage Improvements (#4053)\n\nThis feature enables the following:\nBalanced migration of data objects from source Image store to destination Image store(s)\nComplete migration of data\nsetting an image store to read-only\nviewing download progress of templates across all data stores\nRelated Primate PR: apache/cloudstack-primate#326","date":"2020-09-17 12:42:10","modifiedFileCount":"55","status":"M","submitter":"Pearl Dsilva"},{"authorTime":"2021-09-08 12:44:06","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":4,"curCode":"    public StoragePoolResponse setStoragePoolForMigrationResponse(StoragePoolResponse response, StoragePoolJoinVO sp) {\n        String tag = sp.getTag();\n        if (tag != null) {\n            if (response.getTags() != null && response.getTags().length() > 0) {\n                response.setTags(response.getTags() + \",\" + tag);\n            } else {\n                response.setTags(tag);\n            }\n        }\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":206,"groupId":"101496","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setStoragePoolForMigrationResponse","params":"(StoragePoolResponseresponse@StoragePoolJoinVOsp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b8/b312bd267badddb500856bfa02492620baee1b.src","preCode":"    public StoragePoolResponse setStoragePoolForMigrationResponse(StoragePoolResponse response, StoragePoolJoinVO sp) {\n        String tag = sp.getTag();\n        if (tag != null) {\n            if (response.getTags() != null && response.getTags().length() > 0) {\n                response.setTags(response.getTags() + \",\" + tag);\n            } else {\n                response.setTags(tag);\n            }\n        }\n        return response;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/StoragePoolJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"N"},{"authorDate":"2021-09-08 12:44:06","commitOrder":4,"curCode":"    public ImageStoreResponse newImageStoreResponse(ImageStoreJoinVO ids) {\n        ImageStoreResponse osResponse = new ImageStoreResponse();\n        osResponse.setId(ids.getUuid());\n        osResponse.setName(ids.getName());\n        osResponse.setProviderName(ids.getProviderName());\n        osResponse.setProtocol(ids.getProtocol());\n        osResponse.setReadonly(ids.isReadonly());\n        String url = ids.getUrl();\n        \r\n        if(ids.getProtocol().equals(\"cifs\".toString())) {\n            url = StringUtils.cleanString(url);\n        }\n        osResponse.setUrl(url);\n        osResponse.setScope(ids.getScope());\n        osResponse.setZoneId(ids.getZoneUuid());\n        osResponse.setZoneName(ids.getZoneName());\n\n        StorageStats secStorageStats = ApiDBUtils.getSecondaryStorageStatistics(ids.getId());\n        if (secStorageStats != null) {\n            osResponse.setDiskSizeTotal(secStorageStats.getCapacityBytes());\n            osResponse.setDiskSizeUsed(secStorageStats.getByteUsed());\n        }\n        osResponse.setHasAnnotation(annotationDao.hasAnnotations(ids.getUuid(), AnnotationService.EntityType.SECONDARY_STORAGE.name(),\n                accountManager.isRootAdmin(CallContext.current().getCallingAccount().getId())));\n\n        osResponse.setObjectName(\"imagestore\");\n        return osResponse;\n    }\n","date":"2021-09-08 12:44:06","endLine":99,"groupId":"101496","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"newImageStoreResponse","params":"(ImageStoreJoinVOids)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/20d18678bbcc6eab2e16a4d05abe2a6740ec38.src","preCode":"    public ImageStoreResponse newImageStoreResponse(ImageStoreJoinVO ids) {\n        ImageStoreResponse osResponse = new ImageStoreResponse();\n        osResponse.setId(ids.getUuid());\n        osResponse.setName(ids.getName());\n        osResponse.setProviderName(ids.getProviderName());\n        osResponse.setProtocol(ids.getProtocol());\n        osResponse.setReadonly(ids.isReadonly());\n        String url = ids.getUrl();\n        \r\n        if(ids.getProtocol().equals(\"cifs\".toString())) {\n            url = StringUtils.cleanString(url);\n        }\n        osResponse.setUrl(url);\n        osResponse.setScope(ids.getScope());\n        osResponse.setZoneId(ids.getZoneUuid());\n        osResponse.setZoneName(ids.getZoneName());\n\n        StorageStats secStorageStats = ApiDBUtils.getSecondaryStorageStatistics(ids.getId());\n        if (secStorageStats != null) {\n            osResponse.setDiskSizeTotal(secStorageStats.getCapacityBytes());\n            osResponse.setDiskSizeUsed(secStorageStats.getByteUsed());\n        }\n\n        osResponse.setObjectName(\"imagestore\");\n        return osResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ImageStoreJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"413d10dd8106af9b3c369c1a393fbcca5e7217ce","commitMessage":"@@@server: Extend the Annotations framework (#5103)\n\n* Extend addAnnotation and listAnnotations APIs\n\n* Allow users to add.  list and remove comments\n\n* Add adminsonly UI and allow admins or owners to remove comments\n\n* New annotations tab\n\n* In progress: new comments section\n\n* Address review comments\n\n* Fix\n\n* Fix annotationfilter and comments section\n\n* Add keyword and delete action\n\n* Fix and rename annotations tab\n\n* Update annotation visibility API and update comments table accordingly\n\n* Allow users seeing all the comments for their owned resources\n\n* Extend comments for volumes and snapshots\n\n* Extend comments to multiple entities\n\n* Add uuid to ssh keypairs\n\n* SSH keypair UI refactor\n\n* Extend comments to the infrastructure entities\n\n* Add missing entities\n\n* Fix upgrade version for ssh keypairs\n\n* Fix typo on DB upgrade schema\n\n* Fix annotations table columns when there is no data\n\n* Extend the list view of items showing they if they have comments\n\n* Remove extra test\n\n* Add annotation permissions\n\n* Address review comments\n\n* Extend marvin tests for annotations\n\n* updating ui stuff\n\n* addition to toggle visibility\n\n* Fix pagination on comments section\n\n* Extend to kubernetes clusters\n\n* Fixes after last review\n\n* Change default value for adminsonly column\n\n* Remove the required field for the annotationfilter parameter\n\n* Small fixes on visibility and other fixes\n\n* Cleanup to reduce files changed\n\n* Rollback extra line\n\n* Address review comments\n\n* Fix cleanup error on smoke test\n\n* Fix sending incorrect parameter to checkPermissions method\n\n* Add check domain access for the calling account for domain networks\n\n* Fix only display annotations icon if there are comments the user can see\n\n* Simply change the Save button label to Submit\n\n* Change order of the Tools menu to provent users getting 404 error on clicking the text instead of expanding\n\n* Remove comments when removing entities\n\n* Address review comments on marvin tests\n\n* Allow users to list annotations for an entity ID\n\n* Allow users to see all comments for allowed entities\n\n* Fix search filters\n\n* Remove username from search filter\n\n* Add pagination to the annotations tab\n\n* Display username for user comments\n\n* Fix add permissions for domain and resource admins\n\n* Fix for domain admins\n\n* Trivial but important UI fix\n\n* Replace pagination for annotations tab\n\n* Add confirmation for delete comment\n\n* Lint warnings\n\n* Fix reduced list as domain admin\n\n* Fix display remove comment button for non admins\n\n* Improve display remove action button\n\n* Remove unused parameter on groupShow\n\n* Include a clock icon to the all comments filter except for root admin\n\n* Move cleanup SQL to the correct file after rebasing main\n\nCo-authored-by: davidjumani <dj.davidjumani1994@gmail.com>","date":"2021-09-08 12:44:06","modifiedFileCount":"109","status":"M","submitter":"Nicolas Vazquez"}]
