[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private PlugNicAnswer execute(PlugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource PlugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO)hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute PlugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String)details.get(\"nicAdapter\"));\n            }\n\n            \r\n            VirtualDevice[] nicDevices = vmMo.getNicDevices();\n            int deviceNumber = -1;\n            for (VirtualDevice device : nicDevices) {\n                if (device.getUnitNumber() > deviceNumber)\n                    deviceNumber = device.getUnitNumber();\n            }\n            deviceNumber++;\n\n            NicTO nicTo = cmd.getNic();\n            VirtualDevice nic;\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                nic = VmwareHelper.prepareDvNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(), dvSwitchUuid,\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n                nic = VmwareHelper.prepareNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(),\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            setNuageVspVrIpInExtraConfig(vmConfigSpec.getExtraConfig(), nicTo, dvSwitchUuid);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running PlugNicCommand\");\n            }\n\n            return new PlugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new PlugNicAnswer(cmd, false, \"Unable to execute PlugNicCommand due to \" + e.toString());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":1166,"groupId":"25094","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(PlugNicCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d2/e8b91d7f0ddd8d262328181eb2e5729b06e226.src","preCode":"    private PlugNicAnswer execute(PlugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource PlugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO)hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute PlugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String)details.get(\"nicAdapter\"));\n            }\n\n            \r\n            VirtualDevice[] nicDevices = vmMo.getNicDevices();\n            int deviceNumber = -1;\n            for (VirtualDevice device : nicDevices) {\n                if (device.getUnitNumber() > deviceNumber)\n                    deviceNumber = device.getUnitNumber();\n            }\n            deviceNumber++;\n\n            NicTO nicTo = cmd.getNic();\n            VirtualDevice nic;\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                nic = VmwareHelper.prepareDvNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(), dvSwitchUuid,\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n                nic = VmwareHelper.prepareNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(),\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            setNuageVspVrIpInExtraConfig(vmConfigSpec.getExtraConfig(), nicTo, dvSwitchUuid);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running PlugNicCommand\");\n            }\n\n            return new PlugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new PlugNicAnswer(cmd, false, \"Unable to execute PlugNicCommand due to \" + e.toString());\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/resource/VmwareResource.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1083,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private ReplugNicAnswer execute(ReplugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource ReplugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO)hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute ReplugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String) details.get(\"nicAdapter\"));\n            }\n\n            NicTO nicTo = cmd.getNic();\n\n            VirtualDevice nic = findVirtualNicDevice(vmMo, nicTo.getMac());\n            if (nic == null) {\n                return new ReplugNicAnswer(cmd, false, \"Nic to replug not found\");\n            }\n\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                VmwareHelper.updateDvNicDevice(nic, networkInfo.first(), dvSwitchUuid);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n\n                VmwareHelper.updateNicDevice(nic, networkInfo.first(), networkInfo.second());\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            \r\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.EDIT);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            setNuageVspVrIpInExtraConfig(vmConfigSpec.getExtraConfig(), nicTo, dvSwitchUuid);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running ReplugNicCommand\");\n            }\n\n            return new ReplugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new ReplugNicAnswer(cmd, false, \"Unable to execute ReplugNicCommand due to \" + e.toString());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":1247,"groupId":"25091","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(ReplugNicCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d2/e8b91d7f0ddd8d262328181eb2e5729b06e226.src","preCode":"    private ReplugNicAnswer execute(ReplugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource ReplugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO)hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute ReplugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String) details.get(\"nicAdapter\"));\n            }\n\n            NicTO nicTo = cmd.getNic();\n\n            VirtualDevice nic = findVirtualNicDevice(vmMo, nicTo.getMac());\n            if (nic == null) {\n                return new ReplugNicAnswer(cmd, false, \"Nic to replug not found\");\n            }\n\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                VmwareHelper.updateDvNicDevice(nic, networkInfo.first(), dvSwitchUuid);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n\n                VmwareHelper.updateNicDevice(nic, networkInfo.first(), networkInfo.second());\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            \r\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.EDIT);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            setNuageVspVrIpInExtraConfig(vmConfigSpec.getExtraConfig(), nicTo, dvSwitchUuid);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running ReplugNicCommand\");\n            }\n\n            return new ReplugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new ReplugNicAnswer(cmd, false, \"Unable to execute ReplugNicCommand due to \" + e.toString());\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/resource/VmwareResource.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1168,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2019-05-14 16:58:24","codes":[{"authorDate":"2019-05-14 16:58:24","commitOrder":2,"curCode":"    private PlugNicAnswer execute(PlugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource PlugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO)hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute PlugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String)details.get(\"nicAdapter\"));\n            }\n\n            \r\n            VirtualDevice[] nicDevices = vmMo.getNicDevices();\n            int deviceNumber = -1;\n            for (VirtualDevice device : nicDevices) {\n                if (device.getUnitNumber() > deviceNumber)\n                    deviceNumber = device.getUnitNumber();\n            }\n            deviceNumber++;\n\n            NicTO nicTo = cmd.getNic();\n            VirtualDevice nic;\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                nic = VmwareHelper.prepareDvNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(), dvSwitchUuid,\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n                nic = VmwareHelper.prepareNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(),\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running PlugNicCommand\");\n            }\n\n            return new PlugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new PlugNicAnswer(cmd, false, \"Unable to execute PlugNicCommand due to \" + e.toString());\n        }\n    }\n","date":"2019-05-14 16:58:24","endLine":1183,"groupId":"25094","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(PlugNicCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/22/b878c2e0e3e3645666b9e22711c474aeb5d778.src","preCode":"    private PlugNicAnswer execute(PlugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource PlugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO)hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute PlugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String)details.get(\"nicAdapter\"));\n            }\n\n            \r\n            VirtualDevice[] nicDevices = vmMo.getNicDevices();\n            int deviceNumber = -1;\n            for (VirtualDevice device : nicDevices) {\n                if (device.getUnitNumber() > deviceNumber)\n                    deviceNumber = device.getUnitNumber();\n            }\n            deviceNumber++;\n\n            NicTO nicTo = cmd.getNic();\n            VirtualDevice nic;\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                nic = VmwareHelper.prepareDvNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(), dvSwitchUuid,\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n                nic = VmwareHelper.prepareNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(),\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            setNuageVspVrIpInExtraConfig(vmConfigSpec.getExtraConfig(), nicTo, dvSwitchUuid);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running PlugNicCommand\");\n            }\n\n            return new PlugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new PlugNicAnswer(cmd, false, \"Unable to execute PlugNicCommand due to \" + e.toString());\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/resource/VmwareResource.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1101,"status":"M"},{"authorDate":"2019-05-14 16:58:24","commitOrder":2,"curCode":"    private ReplugNicAnswer execute(ReplugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource ReplugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO)hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute ReplugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String) details.get(\"nicAdapter\"));\n            }\n\n            NicTO nicTo = cmd.getNic();\n\n            VirtualDevice nic = findVirtualNicDevice(vmMo, nicTo.getMac());\n            if (nic == null) {\n                return new ReplugNicAnswer(cmd, false, \"Nic to replug not found\");\n            }\n\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                VmwareHelper.updateDvNicDevice(nic, networkInfo.first(), dvSwitchUuid);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n\n                VmwareHelper.updateNicDevice(nic, networkInfo.first(), networkInfo.second());\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            \r\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.EDIT);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running ReplugNicCommand\");\n            }\n\n            return new ReplugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new ReplugNicAnswer(cmd, false, \"Unable to execute ReplugNicCommand due to \" + e.toString());\n        }\n    }\n","date":"2019-05-14 16:58:24","endLine":1263,"groupId":"25091","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(ReplugNicCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/22/b878c2e0e3e3645666b9e22711c474aeb5d778.src","preCode":"    private ReplugNicAnswer execute(ReplugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource ReplugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO)hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute ReplugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String) details.get(\"nicAdapter\"));\n            }\n\n            NicTO nicTo = cmd.getNic();\n\n            VirtualDevice nic = findVirtualNicDevice(vmMo, nicTo.getMac());\n            if (nic == null) {\n                return new ReplugNicAnswer(cmd, false, \"Nic to replug not found\");\n            }\n\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                VmwareHelper.updateDvNicDevice(nic, networkInfo.first(), dvSwitchUuid);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n\n                VmwareHelper.updateNicDevice(nic, networkInfo.first(), networkInfo.second());\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            \r\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.EDIT);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            setNuageVspVrIpInExtraConfig(vmConfigSpec.getExtraConfig(), nicTo, dvSwitchUuid);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running ReplugNicCommand\");\n            }\n\n            return new ReplugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new ReplugNicAnswer(cmd, false, \"Unable to execute ReplugNicCommand due to \" + e.toString());\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/resource/VmwareResource.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1185,"status":"M"}],"commitId":"e11f7ee1bad4f5a91b9cb82fdabb34231c04c102","commitMessage":"@@@RIP Nuage Cloudstack Plugin (#3146)\n\nmay it rest in peaces","date":"2019-05-14 16:58:24","modifiedFileCount":"16","status":"M","submitter":"Frank Maximus"},{"authorTime":"2019-05-14 16:58:24","codes":[{"authorDate":"2020-09-24 13:29:39","commitOrder":3,"curCode":"    private PlugNicAnswer execute(PlugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource PlugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO) hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute PlugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String) details.get(\"nicAdapter\"));\n            }\n\n            \r\n            VirtualDevice[] nicDevices = vmMo.getSortedNicDevices();\n            int deviceNumber = -1;\n            for (VirtualDevice device : nicDevices) {\n                if (device.getUnitNumber() > deviceNumber)\n                    deviceNumber = device.getUnitNumber();\n            }\n            deviceNumber++;\n\n            NicTO nicTo = cmd.getNic();\n            VirtualDevice nic;\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                nic = VmwareHelper.prepareDvNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(), dvSwitchUuid,\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n                nic = VmwareHelper.prepareNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(),\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running PlugNicCommand\");\n            }\n\n            return new PlugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new PlugNicAnswer(cmd, false, \"Unable to execute PlugNicCommand due to \" + e.toString());\n        }\n    }\n","date":"2020-09-24 13:29:39","endLine":1224,"groupId":"112979","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(PlugNicCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/86/e06b6e8320344ecc2ab15c10076307ad55a9b1.src","preCode":"    private PlugNicAnswer execute(PlugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource PlugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO) hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute PlugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String) details.get(\"nicAdapter\"));\n            }\n\n            \r\n            VirtualDevice[] nicDevices = vmMo.getNicDevices();\n            int deviceNumber = -1;\n            for (VirtualDevice device : nicDevices) {\n                if (device.getUnitNumber() > deviceNumber)\n                    deviceNumber = device.getUnitNumber();\n            }\n            deviceNumber++;\n\n            NicTO nicTo = cmd.getNic();\n            VirtualDevice nic;\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                nic = VmwareHelper.prepareDvNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(), dvSwitchUuid,\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n                nic = VmwareHelper.prepareNicDevice(vmMo, networkInfo.first(), nicDeviceType, networkInfo.second(),\n                        nicTo.getMac(), deviceNumber + 1, true, true);\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running PlugNicCommand\");\n            }\n\n            return new PlugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new PlugNicAnswer(cmd, false, \"Unable to execute PlugNicCommand due to \" + e.toString());\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/resource/VmwareResource.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1142,"status":"M"},{"authorDate":"2019-05-14 16:58:24","commitOrder":3,"curCode":"    private ReplugNicAnswer execute(ReplugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource ReplugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO)hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute ReplugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String) details.get(\"nicAdapter\"));\n            }\n\n            NicTO nicTo = cmd.getNic();\n\n            VirtualDevice nic = findVirtualNicDevice(vmMo, nicTo.getMac());\n            if (nic == null) {\n                return new ReplugNicAnswer(cmd, false, \"Nic to replug not found\");\n            }\n\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                VmwareHelper.updateDvNicDevice(nic, networkInfo.first(), dvSwitchUuid);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n\n                VmwareHelper.updateNicDevice(nic, networkInfo.first(), networkInfo.second());\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            \r\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.EDIT);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running ReplugNicCommand\");\n            }\n\n            return new ReplugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new ReplugNicAnswer(cmd, false, \"Unable to execute ReplugNicCommand due to \" + e.toString());\n        }\n    }\n","date":"2019-05-14 16:58:24","endLine":1263,"groupId":"112979","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(ReplugNicCommandcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/22/b878c2e0e3e3645666b9e22711c474aeb5d778.src","preCode":"    private ReplugNicAnswer execute(ReplugNicCommand cmd) {\n        if (s_logger.isInfoEnabled()) {\n            s_logger.info(\"Executing resource ReplugNicCommand \" + _gson.toJson(cmd));\n        }\n\n        getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);\n        VmwareContext context = getServiceContext();\n        try {\n            VmwareHypervisorHost hyperHost = getHyperHost(context);\n\n            String vmName = cmd.getVmName();\n            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n\n            if (vmMo == null) {\n                if (hyperHost instanceof HostMO) {\n                    ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), ((HostMO)hyperHost).getParentMor());\n                    vmMo = clusterMo.findVmOnHyperHost(vmName);\n                }\n            }\n\n            if (vmMo == null) {\n                String msg = \"Router \" + vmName + \" no longer exists to execute ReplugNic command\";\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\n            \r\n            VirtualEthernetCardType nicDeviceType = VirtualEthernetCardType.E1000;\n            Map<String, String> details = cmd.getDetails();\n            if (details != null) {\n                nicDeviceType = VirtualEthernetCardType.valueOf((String) details.get(\"nicAdapter\"));\n            }\n\n            NicTO nicTo = cmd.getNic();\n\n            VirtualDevice nic = findVirtualNicDevice(vmMo, nicTo.getMac());\n            if (nic == null) {\n                return new ReplugNicAnswer(cmd, false, \"Nic to replug not found\");\n            }\n\n            Pair<ManagedObjectReference, String> networkInfo = prepareNetworkFromNicInfo(vmMo.getRunningHost(), nicTo, false, cmd.getVMType());\n            String dvSwitchUuid = null;\n            if (VmwareHelper.isDvPortGroup(networkInfo.first())) {\n                ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n                DatacenterMO dataCenterMo = new DatacenterMO(context, dcMor);\n                ManagedObjectReference dvsMor = dataCenterMo.getDvSwitchMor(networkInfo.first());\n                dvSwitchUuid = dataCenterMo.getDvSwitchUuid(dvsMor);\n                s_logger.info(\"Preparing NIC device on dvSwitch : \" + dvSwitchUuid);\n                VmwareHelper.updateDvNicDevice(nic, networkInfo.first(), dvSwitchUuid);\n            } else {\n                s_logger.info(\"Preparing NIC device on network \" + networkInfo.second());\n\n                VmwareHelper.updateNicDevice(nic, networkInfo.first(), networkInfo.second());\n            }\n\n            VirtualMachineConfigSpec vmConfigSpec = new VirtualMachineConfigSpec();\n            \r\n            VirtualDeviceConfigSpec deviceConfigSpec = new VirtualDeviceConfigSpec();\n            deviceConfigSpec.setDevice(nic);\n            deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.EDIT);\n\n            vmConfigSpec.getDeviceChange().add(deviceConfigSpec);\n            if (!vmMo.configureVm(vmConfigSpec)) {\n                throw new Exception(\"Failed to configure devices when running ReplugNicCommand\");\n            }\n\n            return new ReplugNicAnswer(cmd, true, \"success\");\n        } catch (Exception e) {\n            s_logger.error(\"Unexpected exception: \", e);\n            return new ReplugNicAnswer(cmd, false, \"Unable to execute ReplugNicCommand due to \" + e.toString());\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/resource/VmwareResource.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1185,"status":"N"}],"commitId":"4f8b88baea2a175760510d00ed8c1fe2bc652444","commitMessage":"@@@vmware: while plugging in nics get existing sorted nic devices (#4336)\n\nIn large environments.  with VR having multiple nics when plugging in\nnic.  it must get existing nics by sorted device ID otherwise it may\ncause incorrect nic plugging/order.\n\nFixes #4246\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-09-24 13:29:39","modifiedFileCount":"2","status":"M","submitter":"Rohit Yadav"}]
