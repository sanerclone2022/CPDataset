[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected boolean destroySnapshotOnPrimaryStorageExceptThis(final Connection conn, final String volumeUuid, final String avoidSnapshotUuid) {\n        try {\n            final VDI volume = getVDIbyUuid(conn, volumeUuid);\n            if (volume == null) {\n                throw new InternalErrorException(\"Could not destroy snapshot on volume \" + volumeUuid + \" due to can not find it\");\n            }\n            \r\n            VDI avoidSnapshot = getVDIbyUuid(conn, avoidSnapshotUuid);\n            if (avoidSnapshot == null) {\n                throw new InternalErrorException(\"Could not find current snapshot \" + avoidSnapshotUuid);\n            }\n            final Set<VDI> snapshots = volume.getSnapshots(conn);\n            for (final VDI snapshot : snapshots) {\n                try {\n                    if (!snapshot.getUuid(conn).equals(avoidSnapshotUuid) && snapshot.getSnapshotTime(conn).before(avoidSnapshot.getSnapshotTime(conn)) && snapshot.getVBDs(conn).isEmpty()) {\n                        snapshot.destroy(conn);\n                    }\n                } catch (final Exception e) {\n                    final String msg = \"Destroying snapshot: \" + snapshot + \" on primary storage failed due to \" + e.toString();\n                    s_logger.warn(msg, e);\n                }\n            }\n            s_logger.debug(\"Successfully destroyed snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid);\n            return true;\n        } catch (final XenAPIException e) {\n            final String msg = \"Destroying snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.error(msg, e);\n        } catch (final Exception e) {\n            final String msg = \"Destroying snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.warn(msg, e);\n        }\n\n        return false;\n    }\n","date":"2018-01-20 05:49:27","endLine":1072,"groupId":"9166","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"destroySnapshotOnPrimaryStorageExceptThis","params":"(finalConnectionconn@finalStringvolumeUuid@finalStringavoidSnapshotUuid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/25/7c6a23e41517d2d2e166e1fecd2d9f65dd26cc.src","preCode":"    protected boolean destroySnapshotOnPrimaryStorageExceptThis(final Connection conn, final String volumeUuid, final String avoidSnapshotUuid) {\n        try {\n            final VDI volume = getVDIbyUuid(conn, volumeUuid);\n            if (volume == null) {\n                throw new InternalErrorException(\"Could not destroy snapshot on volume \" + volumeUuid + \" due to can not find it\");\n            }\n            \r\n            VDI avoidSnapshot = getVDIbyUuid(conn, avoidSnapshotUuid);\n            if (avoidSnapshot == null) {\n                throw new InternalErrorException(\"Could not find current snapshot \" + avoidSnapshotUuid);\n            }\n            final Set<VDI> snapshots = volume.getSnapshots(conn);\n            for (final VDI snapshot : snapshots) {\n                try {\n                    if (!snapshot.getUuid(conn).equals(avoidSnapshotUuid) && snapshot.getSnapshotTime(conn).before(avoidSnapshot.getSnapshotTime(conn)) && snapshot.getVBDs(conn).isEmpty()) {\n                        snapshot.destroy(conn);\n                    }\n                } catch (final Exception e) {\n                    final String msg = \"Destroying snapshot: \" + snapshot + \" on primary storage failed due to \" + e.toString();\n                    s_logger.warn(msg, e);\n                }\n            }\n            s_logger.debug(\"Successfully destroyed snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid);\n            return true;\n        } catch (final XenAPIException e) {\n            final String msg = \"Destroying snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.error(msg, e);\n        } catch (final Exception e) {\n            final String msg = \"Destroying snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.warn(msg, e);\n        }\n\n        return false;\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/XenServerStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1039,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private boolean destroySnapshotOnPrimaryStorage(final Connection conn, final String lastSnapshotUuid) {\n        try {\n            final VDI snapshot = getVDIbyUuid(conn, lastSnapshotUuid);\n            if (snapshot == null) {\n                \r\n                s_logger.warn(\"Could not destroy snapshot \" + lastSnapshotUuid + \" due to can not find it\");\n                return false;\n            }\n            snapshot.destroy(conn);\n            return true;\n        } catch (final XenAPIException e) {\n            final String msg = \"Destroying snapshot: \" + lastSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.error(msg, e);\n        } catch (final Exception e) {\n            final String msg = \"Destroying snapshot: \" + lastSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.warn(msg, e);\n        }\n        return false;\n    }\n","date":"2018-01-20 05:49:27","endLine":1092,"groupId":"7906","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"destroySnapshotOnPrimaryStorage","params":"(finalConnectionconn@finalStringlastSnapshotUuid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/25/7c6a23e41517d2d2e166e1fecd2d9f65dd26cc.src","preCode":"    private boolean destroySnapshotOnPrimaryStorage(final Connection conn, final String lastSnapshotUuid) {\n        try {\n            final VDI snapshot = getVDIbyUuid(conn, lastSnapshotUuid);\n            if (snapshot == null) {\n                \r\n                s_logger.warn(\"Could not destroy snapshot \" + lastSnapshotUuid + \" due to can not find it\");\n                return false;\n            }\n            snapshot.destroy(conn);\n            return true;\n        } catch (final XenAPIException e) {\n            final String msg = \"Destroying snapshot: \" + lastSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.error(msg, e);\n        } catch (final Exception e) {\n            final String msg = \"Destroying snapshot: \" + lastSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.warn(msg, e);\n        }\n        return false;\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/XenServerStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1074,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-02-09 18:53:02","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    protected boolean destroySnapshotOnPrimaryStorageExceptThis(final Connection conn, final String volumeUuid, final String avoidSnapshotUuid) {\n        try {\n            final VDI volume = getVDIbyUuid(conn, volumeUuid);\n            if (volume == null) {\n                throw new InternalErrorException(\"Could not destroy snapshot on volume \" + volumeUuid + \" due to can not find it\");\n            }\n            \r\n            VDI avoidSnapshot = getVDIbyUuid(conn, avoidSnapshotUuid);\n            if (avoidSnapshot == null) {\n                throw new InternalErrorException(\"Could not find current snapshot \" + avoidSnapshotUuid);\n            }\n            final Set<VDI> snapshots = volume.getSnapshots(conn);\n            for (final VDI snapshot : snapshots) {\n                try {\n                    if (!snapshot.getUuid(conn).equals(avoidSnapshotUuid) && snapshot.getSnapshotTime(conn).before(avoidSnapshot.getSnapshotTime(conn)) && snapshot.getVBDs(conn).isEmpty()) {\n                        snapshot.destroy(conn);\n                    }\n                } catch (final Exception e) {\n                    final String msg = \"Destroying snapshot: \" + snapshot + \" on primary storage failed due to \" + e.toString();\n                    s_logger.warn(msg, e);\n                }\n            }\n            s_logger.debug(\"Successfully destroyed snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid);\n            return true;\n        } catch (final XenAPIException e) {\n            final String msg = \"Destroying snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.error(msg, e);\n        } catch (final Exception e) {\n            final String msg = \"Destroying snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.warn(msg, e);\n        }\n\n        return false;\n    }\n","date":"2018-01-20 05:49:27","endLine":1072,"groupId":"102913","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"destroySnapshotOnPrimaryStorageExceptThis","params":"(finalConnectionconn@finalStringvolumeUuid@finalStringavoidSnapshotUuid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/25/7c6a23e41517d2d2e166e1fecd2d9f65dd26cc.src","preCode":"    protected boolean destroySnapshotOnPrimaryStorageExceptThis(final Connection conn, final String volumeUuid, final String avoidSnapshotUuid) {\n        try {\n            final VDI volume = getVDIbyUuid(conn, volumeUuid);\n            if (volume == null) {\n                throw new InternalErrorException(\"Could not destroy snapshot on volume \" + volumeUuid + \" due to can not find it\");\n            }\n            \r\n            VDI avoidSnapshot = getVDIbyUuid(conn, avoidSnapshotUuid);\n            if (avoidSnapshot == null) {\n                throw new InternalErrorException(\"Could not find current snapshot \" + avoidSnapshotUuid);\n            }\n            final Set<VDI> snapshots = volume.getSnapshots(conn);\n            for (final VDI snapshot : snapshots) {\n                try {\n                    if (!snapshot.getUuid(conn).equals(avoidSnapshotUuid) && snapshot.getSnapshotTime(conn).before(avoidSnapshot.getSnapshotTime(conn)) && snapshot.getVBDs(conn).isEmpty()) {\n                        snapshot.destroy(conn);\n                    }\n                } catch (final Exception e) {\n                    final String msg = \"Destroying snapshot: \" + snapshot + \" on primary storage failed due to \" + e.toString();\n                    s_logger.warn(msg, e);\n                }\n            }\n            s_logger.debug(\"Successfully destroyed snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid);\n            return true;\n        } catch (final XenAPIException e) {\n            final String msg = \"Destroying snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.error(msg, e);\n        } catch (final Exception e) {\n            final String msg = \"Destroying snapshot on volume: \" + volumeUuid + \" execept this current snapshot \" + avoidSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.warn(msg, e);\n        }\n\n        return false;\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/XenServerStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1039,"status":"N"},{"authorDate":"2018-02-09 18:53:02","commitOrder":2,"curCode":"    protected boolean destroySnapshotOnPrimaryStorage(final Connection conn, final String lastSnapshotUuid) {\n        try {\n            final VDI snapshot = getVDIbyUuid(conn, lastSnapshotUuid);\n            if (snapshot == null) {\n                \r\n                s_logger.warn(\"Could not destroy snapshot \" + lastSnapshotUuid + \" due to can not find it\");\n                return false;\n            }\n            snapshot.destroy(conn);\n            return true;\n        } catch (final XenAPIException e) {\n            final String msg = \"Destroying snapshot: \" + lastSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.error(msg, e);\n        } catch (final Exception e) {\n            final String msg = \"Destroying snapshot: \" + lastSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.warn(msg, e);\n        }\n        return false;\n    }\n","date":"2018-02-09 18:53:20","endLine":1092,"groupId":"102913","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"destroySnapshotOnPrimaryStorage","params":"(finalConnectionconn@finalStringlastSnapshotUuid)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b5/75fdb4f0277e91b0b519d3ec17d1154673b4d9.src","preCode":"    private boolean destroySnapshotOnPrimaryStorage(final Connection conn, final String lastSnapshotUuid) {\n        try {\n            final VDI snapshot = getVDIbyUuid(conn, lastSnapshotUuid);\n            if (snapshot == null) {\n                \r\n                s_logger.warn(\"Could not destroy snapshot \" + lastSnapshotUuid + \" due to can not find it\");\n                return false;\n            }\n            snapshot.destroy(conn);\n            return true;\n        } catch (final XenAPIException e) {\n            final String msg = \"Destroying snapshot: \" + lastSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.error(msg, e);\n        } catch (final Exception e) {\n            final String msg = \"Destroying snapshot: \" + lastSnapshotUuid + \" failed due to \" + e.toString();\n            s_logger.warn(msg, e);\n        }\n        return false;\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/XenServerStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1074,"status":"M"}],"commitId":"1c26b2ec2ec5f3da88b4782c365cf898cd611193","commitMessage":"@@@Merge remote-tracking branch 'origin/4.11'\n\nCLOUDSTACK-10269: On deletion of role set name to null (#2444)\nCLOUDSTACK-10146 checksum in java instead of script (#2405)\nCLOUDSTACK-10222: Clean snaphosts from primary storage when taking (#2398)\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2018-02-09 18:53:20","modifiedFileCount":"4","status":"M","submitter":"Rohit Yadav"}]
