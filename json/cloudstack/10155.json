[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instance\", AllFieldsSearch.entity().getInstanceId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"gateway\", AllFieldsSearch.entity().getIPv4Gateway(), Op.EQ);\n        AllFieldsSearch.and(\"vmType\", AllFieldsSearch.entity().getVmType(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIPv4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"isDefault\", AllFieldsSearch.entity().isDefaultNic(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"secondaryip\", AllFieldsSearch.entity().getSecondaryIp(), Op.EQ);\n        AllFieldsSearch.and(\"nicid\", AllFieldsSearch.entity().getId(), Op.EQ);\n        AllFieldsSearch.and(\"strategy\", AllFieldsSearch.entity().getReservationStrategy(), Op.EQ);\n        AllFieldsSearch.and(\"reserverName\",AllFieldsSearch.entity().getReserver(),Op.EQ);\n        AllFieldsSearch.and(\"macAddress\", AllFieldsSearch.entity().getMacAddress(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIPv4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIPv4Address(), Op.NNULL);\n        IpSearch.done();\n\n        NonReleasedSearch = createSearchBuilder();\n        NonReleasedSearch.and(\"instance\", NonReleasedSearch.entity().getInstanceId(), Op.EQ);\n        NonReleasedSearch.and(\"network\", NonReleasedSearch.entity().getNetworkId(), Op.EQ);\n        NonReleasedSearch.and(\"state\", NonReleasedSearch.entity().getState(), Op.NOTIN);\n        NonReleasedSearch.done();\n\n        deviceIdSearch = createSearchBuilder(Integer.class);\n        deviceIdSearch.select(null, Func.DISTINCT, deviceIdSearch.entity().getDeviceId());\n        deviceIdSearch.and(\"instance\", deviceIdSearch.entity().getInstanceId(), Op.EQ);\n        deviceIdSearch.done();\n\n        CountByForStartingVms = createSearchBuilder(Integer.class);\n        CountByForStartingVms.select(null, Func.COUNT, CountByForStartingVms.entity().getId());\n        CountByForStartingVms.and(\"networkId\", CountByForStartingVms.entity().getNetworkId(), Op.EQ);\n        CountByForStartingVms.and(\"removed\", CountByForStartingVms.entity().getRemoved(), Op.NULL);\n        SearchBuilder<VMInstanceVO> join1 = _vmDao.createSearchBuilder();\n        join1.and(\"state\", join1.entity().getState(), Op.EQ);\n        CountByForStartingVms.join(\"vm\", join1, CountByForStartingVms.entity().getInstanceId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountByForStartingVms.done();\n\n        PeerRouterSearch = createSearchBuilder();\n        PeerRouterSearch.and(\"instanceId\", PeerRouterSearch.entity().getInstanceId(), Op.NEQ);\n        PeerRouterSearch.and(\"macAddress\", PeerRouterSearch.entity().getMacAddress(), Op.EQ);\n        PeerRouterSearch.and(\"vmType\", PeerRouterSearch.entity().getVmType(), Op.EQ);\n        PeerRouterSearch.done();\n    }\n","date":"2018-01-20 05:49:27","endLine":105,"groupId":"3519","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f9/53a4c1f93e6457cda99ab582d944a679619054.src","preCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instance\", AllFieldsSearch.entity().getInstanceId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"gateway\", AllFieldsSearch.entity().getIPv4Gateway(), Op.EQ);\n        AllFieldsSearch.and(\"vmType\", AllFieldsSearch.entity().getVmType(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIPv4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"isDefault\", AllFieldsSearch.entity().isDefaultNic(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"secondaryip\", AllFieldsSearch.entity().getSecondaryIp(), Op.EQ);\n        AllFieldsSearch.and(\"nicid\", AllFieldsSearch.entity().getId(), Op.EQ);\n        AllFieldsSearch.and(\"strategy\", AllFieldsSearch.entity().getReservationStrategy(), Op.EQ);\n        AllFieldsSearch.and(\"reserverName\",AllFieldsSearch.entity().getReserver(),Op.EQ);\n        AllFieldsSearch.and(\"macAddress\", AllFieldsSearch.entity().getMacAddress(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIPv4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIPv4Address(), Op.NNULL);\n        IpSearch.done();\n\n        NonReleasedSearch = createSearchBuilder();\n        NonReleasedSearch.and(\"instance\", NonReleasedSearch.entity().getInstanceId(), Op.EQ);\n        NonReleasedSearch.and(\"network\", NonReleasedSearch.entity().getNetworkId(), Op.EQ);\n        NonReleasedSearch.and(\"state\", NonReleasedSearch.entity().getState(), Op.NOTIN);\n        NonReleasedSearch.done();\n\n        deviceIdSearch = createSearchBuilder(Integer.class);\n        deviceIdSearch.select(null, Func.DISTINCT, deviceIdSearch.entity().getDeviceId());\n        deviceIdSearch.and(\"instance\", deviceIdSearch.entity().getInstanceId(), Op.EQ);\n        deviceIdSearch.done();\n\n        CountByForStartingVms = createSearchBuilder(Integer.class);\n        CountByForStartingVms.select(null, Func.COUNT, CountByForStartingVms.entity().getId());\n        CountByForStartingVms.and(\"networkId\", CountByForStartingVms.entity().getNetworkId(), Op.EQ);\n        CountByForStartingVms.and(\"removed\", CountByForStartingVms.entity().getRemoved(), Op.NULL);\n        SearchBuilder<VMInstanceVO> join1 = _vmDao.createSearchBuilder();\n        join1.and(\"state\", join1.entity().getState(), Op.EQ);\n        CountByForStartingVms.join(\"vm\", join1, CountByForStartingVms.entity().getInstanceId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountByForStartingVms.done();\n\n        PeerRouterSearch = createSearchBuilder();\n        PeerRouterSearch.and(\"instanceId\", PeerRouterSearch.entity().getInstanceId(), Op.NEQ);\n        PeerRouterSearch.and(\"macAddress\", PeerRouterSearch.entity().getMacAddress(), Op.EQ);\n        PeerRouterSearch.and(\"vmType\", PeerRouterSearch.entity().getVmType(), Op.EQ);\n        PeerRouterSearch.done();\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/vm/dao/NicDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected NicSecondaryIpDaoImpl() {\n        super();\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instanceId\", AllFieldsSearch.entity().getVmId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIp4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"nicId\", AllFieldsSearch.entity().getNicId(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIp4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIp4Address(), Op.NNULL);\n        IpSearch.done();\n\n        CountByNicId = createSearchBuilder(Long.class);\n        CountByNicId.select(null, Func.COUNT, null);\n        CountByNicId.and(\"nic\", CountByNicId.entity().getNicId(), SearchCriteria.Op.EQ);\n        CountByNicId.done();\n    }\n","date":"2018-01-20 05:49:27","endLine":58,"groupId":"22860","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"NicSecondaryIpDaoImpl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/01/f53bc99fb35ebec447b0eadbd0d179d346b03e.src","preCode":"    protected NicSecondaryIpDaoImpl() {\n        super();\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instanceId\", AllFieldsSearch.entity().getVmId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIp4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"nicId\", AllFieldsSearch.entity().getNicId(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIp4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIp4Address(), Op.NNULL);\n        IpSearch.done();\n\n        CountByNicId = createSearchBuilder(Long.class);\n        CountByNicId.select(null, Func.COUNT, null);\n        CountByNicId.and(\"nic\", CountByNicId.entity().getNicId(), SearchCriteria.Op.EQ);\n        CountByNicId.done();\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/vm/dao/NicSecondaryIpDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-09-11 23:03:19","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instance\", AllFieldsSearch.entity().getInstanceId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"gateway\", AllFieldsSearch.entity().getIPv4Gateway(), Op.EQ);\n        AllFieldsSearch.and(\"vmType\", AllFieldsSearch.entity().getVmType(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIPv4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"isDefault\", AllFieldsSearch.entity().isDefaultNic(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"secondaryip\", AllFieldsSearch.entity().getSecondaryIp(), Op.EQ);\n        AllFieldsSearch.and(\"nicid\", AllFieldsSearch.entity().getId(), Op.EQ);\n        AllFieldsSearch.and(\"strategy\", AllFieldsSearch.entity().getReservationStrategy(), Op.EQ);\n        AllFieldsSearch.and(\"reserverName\",AllFieldsSearch.entity().getReserver(),Op.EQ);\n        AllFieldsSearch.and(\"macAddress\", AllFieldsSearch.entity().getMacAddress(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIPv4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIPv4Address(), Op.NNULL);\n        IpSearch.done();\n\n        NonReleasedSearch = createSearchBuilder();\n        NonReleasedSearch.and(\"instance\", NonReleasedSearch.entity().getInstanceId(), Op.EQ);\n        NonReleasedSearch.and(\"network\", NonReleasedSearch.entity().getNetworkId(), Op.EQ);\n        NonReleasedSearch.and(\"state\", NonReleasedSearch.entity().getState(), Op.NOTIN);\n        NonReleasedSearch.done();\n\n        deviceIdSearch = createSearchBuilder(Integer.class);\n        deviceIdSearch.select(null, Func.DISTINCT, deviceIdSearch.entity().getDeviceId());\n        deviceIdSearch.and(\"instance\", deviceIdSearch.entity().getInstanceId(), Op.EQ);\n        deviceIdSearch.done();\n\n        CountByForStartingVms = createSearchBuilder(Integer.class);\n        CountByForStartingVms.select(null, Func.COUNT, CountByForStartingVms.entity().getId());\n        CountByForStartingVms.and(\"networkId\", CountByForStartingVms.entity().getNetworkId(), Op.EQ);\n        CountByForStartingVms.and(\"removed\", CountByForStartingVms.entity().getRemoved(), Op.NULL);\n        SearchBuilder<VMInstanceVO> join1 = _vmDao.createSearchBuilder();\n        join1.and(\"state\", join1.entity().getState(), Op.EQ);\n        CountByForStartingVms.join(\"vm\", join1, CountByForStartingVms.entity().getInstanceId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountByForStartingVms.done();\n\n        PeerRouterSearch = createSearchBuilder();\n        PeerRouterSearch.and(\"instanceId\", PeerRouterSearch.entity().getInstanceId(), Op.NEQ);\n        PeerRouterSearch.and(\"macAddress\", PeerRouterSearch.entity().getMacAddress(), Op.EQ);\n        PeerRouterSearch.and(\"vmType\", PeerRouterSearch.entity().getVmType(), Op.EQ);\n        PeerRouterSearch.done();\n    }\n","date":"2018-01-20 05:49:27","endLine":105,"groupId":"3519","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f9/53a4c1f93e6457cda99ab582d944a679619054.src","preCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instance\", AllFieldsSearch.entity().getInstanceId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"gateway\", AllFieldsSearch.entity().getIPv4Gateway(), Op.EQ);\n        AllFieldsSearch.and(\"vmType\", AllFieldsSearch.entity().getVmType(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIPv4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"isDefault\", AllFieldsSearch.entity().isDefaultNic(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"secondaryip\", AllFieldsSearch.entity().getSecondaryIp(), Op.EQ);\n        AllFieldsSearch.and(\"nicid\", AllFieldsSearch.entity().getId(), Op.EQ);\n        AllFieldsSearch.and(\"strategy\", AllFieldsSearch.entity().getReservationStrategy(), Op.EQ);\n        AllFieldsSearch.and(\"reserverName\",AllFieldsSearch.entity().getReserver(),Op.EQ);\n        AllFieldsSearch.and(\"macAddress\", AllFieldsSearch.entity().getMacAddress(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIPv4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIPv4Address(), Op.NNULL);\n        IpSearch.done();\n\n        NonReleasedSearch = createSearchBuilder();\n        NonReleasedSearch.and(\"instance\", NonReleasedSearch.entity().getInstanceId(), Op.EQ);\n        NonReleasedSearch.and(\"network\", NonReleasedSearch.entity().getNetworkId(), Op.EQ);\n        NonReleasedSearch.and(\"state\", NonReleasedSearch.entity().getState(), Op.NOTIN);\n        NonReleasedSearch.done();\n\n        deviceIdSearch = createSearchBuilder(Integer.class);\n        deviceIdSearch.select(null, Func.DISTINCT, deviceIdSearch.entity().getDeviceId());\n        deviceIdSearch.and(\"instance\", deviceIdSearch.entity().getInstanceId(), Op.EQ);\n        deviceIdSearch.done();\n\n        CountByForStartingVms = createSearchBuilder(Integer.class);\n        CountByForStartingVms.select(null, Func.COUNT, CountByForStartingVms.entity().getId());\n        CountByForStartingVms.and(\"networkId\", CountByForStartingVms.entity().getNetworkId(), Op.EQ);\n        CountByForStartingVms.and(\"removed\", CountByForStartingVms.entity().getRemoved(), Op.NULL);\n        SearchBuilder<VMInstanceVO> join1 = _vmDao.createSearchBuilder();\n        join1.and(\"state\", join1.entity().getState(), Op.EQ);\n        CountByForStartingVms.join(\"vm\", join1, CountByForStartingVms.entity().getInstanceId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountByForStartingVms.done();\n\n        PeerRouterSearch = createSearchBuilder();\n        PeerRouterSearch.and(\"instanceId\", PeerRouterSearch.entity().getInstanceId(), Op.NEQ);\n        PeerRouterSearch.and(\"macAddress\", PeerRouterSearch.entity().getMacAddress(), Op.EQ);\n        PeerRouterSearch.and(\"vmType\", PeerRouterSearch.entity().getVmType(), Op.EQ);\n        PeerRouterSearch.done();\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/vm/dao/NicDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"},{"authorDate":"2018-09-11 23:03:19","commitOrder":2,"curCode":"    public NicSecondaryIpDaoImpl() {\n        super();\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instanceId\", AllFieldsSearch.entity().getVmId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIp4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"ip6address\", AllFieldsSearch.entity().getIp6Address(), Op.LIKE);\n        AllFieldsSearch.and(\"nicId\", AllFieldsSearch.entity().getNicId(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIp4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIp4Address(), Op.NNULL);\n        IpSearch.done();\n\n        CountByNicId = createSearchBuilder(Long.class);\n        CountByNicId.select(null, Func.COUNT, null);\n        CountByNicId.and(\"nic\", CountByNicId.entity().getNicId(), SearchCriteria.Op.EQ);\n        CountByNicId.done();\n    }\n","date":"2018-09-11 23:03:19","endLine":59,"groupId":"22860","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"NicSecondaryIpDaoImpl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ba/3a5c7917a121f6db0a607df2b943fcb21703ab.src","preCode":"    protected NicSecondaryIpDaoImpl() {\n        super();\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instanceId\", AllFieldsSearch.entity().getVmId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIp4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"nicId\", AllFieldsSearch.entity().getNicId(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIp4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIp4Address(), Op.NNULL);\n        IpSearch.done();\n\n        CountByNicId = createSearchBuilder(Long.class);\n        CountByNicId.select(null, Func.COUNT, null);\n        CountByNicId.and(\"nic\", CountByNicId.entity().getNicId(), SearchCriteria.Op.EQ);\n        CountByNicId.done();\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/vm/dao/NicSecondaryIpDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"fbf488497fb863c13fc0908281e3f4f86906df43","commitMessage":"@@@Support IPv6 address in addIpToNic (#2773)\n\nThe admin will manually need to add the address to the Instance.  but the\nSecurity Grouping should allow it.","date":"2018-09-11 23:03:19","modifiedFileCount":"24","status":"M","submitter":"Gabriel Beims Br?scher"},{"authorTime":"2018-09-11 23:03:19","codes":[{"authorDate":"2020-02-19 22:02:12","commitOrder":3,"curCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instance\", AllFieldsSearch.entity().getInstanceId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"gateway\", AllFieldsSearch.entity().getIPv4Gateway(), Op.EQ);\n        AllFieldsSearch.and(\"vmType\", AllFieldsSearch.entity().getVmType(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIPv4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"isDefault\", AllFieldsSearch.entity().isDefaultNic(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"secondaryip\", AllFieldsSearch.entity().getSecondaryIp(), Op.EQ);\n        AllFieldsSearch.and(\"nicid\", AllFieldsSearch.entity().getId(), Op.EQ);\n        AllFieldsSearch.and(\"strategy\", AllFieldsSearch.entity().getReservationStrategy(), Op.EQ);\n        AllFieldsSearch.and(\"reserverName\",AllFieldsSearch.entity().getReserver(),Op.EQ);\n        AllFieldsSearch.and(\"macAddress\", AllFieldsSearch.entity().getMacAddress(), Op.EQ);\n        AllFieldsSearch.and(\"deviceid\", AllFieldsSearch.entity().getDeviceId(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIPv4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIPv4Address(), Op.NNULL);\n        IpSearch.done();\n\n        NonReleasedSearch = createSearchBuilder();\n        NonReleasedSearch.and(\"instance\", NonReleasedSearch.entity().getInstanceId(), Op.EQ);\n        NonReleasedSearch.and(\"network\", NonReleasedSearch.entity().getNetworkId(), Op.EQ);\n        NonReleasedSearch.and(\"state\", NonReleasedSearch.entity().getState(), Op.NOTIN);\n        NonReleasedSearch.done();\n\n        deviceIdSearch = createSearchBuilder(Integer.class);\n        deviceIdSearch.select(null, Func.DISTINCT, deviceIdSearch.entity().getDeviceId());\n        deviceIdSearch.and(\"instance\", deviceIdSearch.entity().getInstanceId(), Op.EQ);\n        deviceIdSearch.done();\n\n        CountByForStartingVms = createSearchBuilder(Integer.class);\n        CountByForStartingVms.select(null, Func.COUNT, CountByForStartingVms.entity().getId());\n        CountByForStartingVms.and(\"networkId\", CountByForStartingVms.entity().getNetworkId(), Op.EQ);\n        CountByForStartingVms.and(\"removed\", CountByForStartingVms.entity().getRemoved(), Op.NULL);\n        SearchBuilder<VMInstanceVO> join1 = _vmDao.createSearchBuilder();\n        join1.and(\"state\", join1.entity().getState(), Op.EQ);\n        CountByForStartingVms.join(\"vm\", join1, CountByForStartingVms.entity().getInstanceId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountByForStartingVms.done();\n\n        PeerRouterSearch = createSearchBuilder();\n        PeerRouterSearch.and(\"instanceId\", PeerRouterSearch.entity().getInstanceId(), Op.NEQ);\n        PeerRouterSearch.and(\"macAddress\", PeerRouterSearch.entity().getMacAddress(), Op.EQ);\n        PeerRouterSearch.and(\"vmType\", PeerRouterSearch.entity().getVmType(), Op.EQ);\n        PeerRouterSearch.done();\n    }\n","date":"2020-02-19 22:02:12","endLine":106,"groupId":"10155","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/63/14ca0391ba52cbebbe6afc8d8eab58748f7fc2.src","preCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instance\", AllFieldsSearch.entity().getInstanceId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"gateway\", AllFieldsSearch.entity().getIPv4Gateway(), Op.EQ);\n        AllFieldsSearch.and(\"vmType\", AllFieldsSearch.entity().getVmType(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIPv4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"isDefault\", AllFieldsSearch.entity().isDefaultNic(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"secondaryip\", AllFieldsSearch.entity().getSecondaryIp(), Op.EQ);\n        AllFieldsSearch.and(\"nicid\", AllFieldsSearch.entity().getId(), Op.EQ);\n        AllFieldsSearch.and(\"strategy\", AllFieldsSearch.entity().getReservationStrategy(), Op.EQ);\n        AllFieldsSearch.and(\"reserverName\",AllFieldsSearch.entity().getReserver(),Op.EQ);\n        AllFieldsSearch.and(\"macAddress\", AllFieldsSearch.entity().getMacAddress(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIPv4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIPv4Address(), Op.NNULL);\n        IpSearch.done();\n\n        NonReleasedSearch = createSearchBuilder();\n        NonReleasedSearch.and(\"instance\", NonReleasedSearch.entity().getInstanceId(), Op.EQ);\n        NonReleasedSearch.and(\"network\", NonReleasedSearch.entity().getNetworkId(), Op.EQ);\n        NonReleasedSearch.and(\"state\", NonReleasedSearch.entity().getState(), Op.NOTIN);\n        NonReleasedSearch.done();\n\n        deviceIdSearch = createSearchBuilder(Integer.class);\n        deviceIdSearch.select(null, Func.DISTINCT, deviceIdSearch.entity().getDeviceId());\n        deviceIdSearch.and(\"instance\", deviceIdSearch.entity().getInstanceId(), Op.EQ);\n        deviceIdSearch.done();\n\n        CountByForStartingVms = createSearchBuilder(Integer.class);\n        CountByForStartingVms.select(null, Func.COUNT, CountByForStartingVms.entity().getId());\n        CountByForStartingVms.and(\"networkId\", CountByForStartingVms.entity().getNetworkId(), Op.EQ);\n        CountByForStartingVms.and(\"removed\", CountByForStartingVms.entity().getRemoved(), Op.NULL);\n        SearchBuilder<VMInstanceVO> join1 = _vmDao.createSearchBuilder();\n        join1.and(\"state\", join1.entity().getState(), Op.EQ);\n        CountByForStartingVms.join(\"vm\", join1, CountByForStartingVms.entity().getInstanceId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountByForStartingVms.done();\n\n        PeerRouterSearch = createSearchBuilder();\n        PeerRouterSearch.and(\"instanceId\", PeerRouterSearch.entity().getInstanceId(), Op.NEQ);\n        PeerRouterSearch.and(\"macAddress\", PeerRouterSearch.entity().getMacAddress(), Op.EQ);\n        PeerRouterSearch.and(\"vmType\", PeerRouterSearch.entity().getVmType(), Op.EQ);\n        PeerRouterSearch.done();\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/vm/dao/NicDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2018-09-11 23:03:19","commitOrder":3,"curCode":"    public NicSecondaryIpDaoImpl() {\n        super();\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instanceId\", AllFieldsSearch.entity().getVmId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIp4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"ip6address\", AllFieldsSearch.entity().getIp6Address(), Op.LIKE);\n        AllFieldsSearch.and(\"nicId\", AllFieldsSearch.entity().getNicId(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIp4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIp4Address(), Op.NNULL);\n        IpSearch.done();\n\n        CountByNicId = createSearchBuilder(Long.class);\n        CountByNicId.select(null, Func.COUNT, null);\n        CountByNicId.and(\"nic\", CountByNicId.entity().getNicId(), SearchCriteria.Op.EQ);\n        CountByNicId.done();\n    }\n","date":"2018-09-11 23:03:19","endLine":59,"groupId":"10155","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"NicSecondaryIpDaoImpl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ba/3a5c7917a121f6db0a607df2b943fcb21703ab.src","preCode":"    public NicSecondaryIpDaoImpl() {\n        super();\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"instanceId\", AllFieldsSearch.entity().getVmId(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"address\", AllFieldsSearch.entity().getIp4Address(), Op.LIKE);\n        AllFieldsSearch.and(\"ip6address\", AllFieldsSearch.entity().getIp6Address(), Op.LIKE);\n        AllFieldsSearch.and(\"nicId\", AllFieldsSearch.entity().getNicId(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IpSearch = createSearchBuilder(String.class);\n        IpSearch.select(null, Func.DISTINCT, IpSearch.entity().getIp4Address());\n        IpSearch.and(\"network\", IpSearch.entity().getNetworkId(), Op.EQ);\n        IpSearch.and(\"address\", IpSearch.entity().getIp4Address(), Op.NNULL);\n        IpSearch.done();\n\n        CountByNicId = createSearchBuilder(Long.class);\n        CountByNicId.select(null, Func.COUNT, null);\n        CountByNicId.and(\"nic\", CountByNicId.entity().getNicId(), SearchCriteria.Op.EQ);\n        CountByNicId.done();\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/vm/dao/NicSecondaryIpDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"N"}],"commitId":"458d3b5b4753b16b1f07bfa1fe667037cb2623d6","commitMessage":"@@@Multiple networks support for vms in advanced zone with securit? (#3639)\n\n","date":"2020-02-19 22:02:12","modifiedFileCount":"16","status":"M","submitter":"Wei Zhou"}]
