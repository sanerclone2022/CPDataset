[{"authorTime":"2018-12-08 01:12:52","codes":[{"authorDate":"2018-12-08 01:12:52","commitOrder":1,"curCode":"    public void updateVirtualMachineTestDisplayChanged() throws ResourceUnavailableException, InsufficientCapacityException {\n        configureDoNothingForMethodsThatWeDoNotWantToTest();\n\n        Mockito.when(userVmVoMock.isDisplay()).thenReturn(true);\n        Mockito.doNothing().when(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n\n        userVmManagerImpl.updateVirtualMachine(updateVmCommand);\n        verifyMethodsThatAreAlwaysExecuted();\n\n        Mockito.verify(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n        Mockito.verify(userVmDetailVO, Mockito.times(0)).removeDetails(vmId);\n    }\n","date":"2018-12-08 01:12:52","endLine":147,"groupId":"4101","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"updateVirtualMachineTestDisplayChanged","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/27/44714c67ba2c3233e203553e697ea3058cd011.src","preCode":"    public void updateVirtualMachineTestDisplayChanged() throws ResourceUnavailableException, InsufficientCapacityException {\n        configureDoNothingForMethodsThatWeDoNotWantToTest();\n\n        Mockito.when(userVmVoMock.isDisplay()).thenReturn(true);\n        Mockito.doNothing().when(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n\n        userVmManagerImpl.updateVirtualMachine(updateVmCommand);\n        verifyMethodsThatAreAlwaysExecuted();\n\n        Mockito.verify(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n        Mockito.verify(userVmDetailVO, Mockito.times(0)).removeDetails(vmId);\n    }\n","realPath":"server/src/test/java/com/cloud/vm/UserVmManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"B"},{"authorDate":"2018-12-08 01:12:52","commitOrder":1,"curCode":"    public void updateVirtualMachineTestCleanUpTrue() throws ResourceUnavailableException, InsufficientCapacityException {\n        configureDoNothingForMethodsThatWeDoNotWantToTest();\n\n        Mockito.when(updateVmCommand.isCleanupDetails()).thenReturn(true);\n\n        Mockito.doNothing().when(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n        Mockito.doNothing().when(userVmDetailVO).removeDetails(vmId);\n\n        userVmManagerImpl.updateVirtualMachine(updateVmCommand);\n        verifyMethodsThatAreAlwaysExecuted();\n        Mockito.verify(userVmDetailVO).removeDetails(vmId);\n        Mockito.verify(userVmManagerImpl, Mockito.times(0)).updateDisplayVmFlag(false, vmId, userVmVoMock);\n    }\n","date":"2018-12-08 01:12:52","endLine":162,"groupId":"4098","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"updateVirtualMachineTestCleanUpTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/27/44714c67ba2c3233e203553e697ea3058cd011.src","preCode":"    public void updateVirtualMachineTestCleanUpTrue() throws ResourceUnavailableException, InsufficientCapacityException {\n        configureDoNothingForMethodsThatWeDoNotWantToTest();\n\n        Mockito.when(updateVmCommand.isCleanupDetails()).thenReturn(true);\n\n        Mockito.doNothing().when(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n        Mockito.doNothing().when(userVmDetailVO).removeDetails(vmId);\n\n        userVmManagerImpl.updateVirtualMachine(updateVmCommand);\n        verifyMethodsThatAreAlwaysExecuted();\n        Mockito.verify(userVmDetailVO).removeDetails(vmId);\n        Mockito.verify(userVmManagerImpl, Mockito.times(0)).updateDisplayVmFlag(false, vmId, userVmVoMock);\n    }\n","realPath":"server/src/test/java/com/cloud/vm/UserVmManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"B"}],"commitId":"d36e1a63a741c8c8b0376ba8b6fea765e689fe19","commitMessage":"@@@server/test: Move test files to right location (#3085)\n\nThese files were not in the right directory and thus not being executed\nby Maven.\n\nBy moving the files we make sure these tests are run again.\n\nSigned-off-by: Wido den Hollander <wido@widodh.nl>","date":"2018-12-08 01:12:52","modifiedFileCount":"0","status":"B","submitter":"Wido den Hollander"},{"authorTime":"2020-02-12 15:28:25","codes":[{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void updateVirtualMachineTestDisplayChanged() throws ResourceUnavailableException, InsufficientCapacityException {\n        configureDoNothingForMethodsThatWeDoNotWantToTest();\n        ServiceOffering offering = getSvcoffering(512);\n        Mockito.when(_serviceOfferingDao.findById(Mockito.anyLong(), Mockito.anyLong())).thenReturn((ServiceOfferingVO) offering);\n        Mockito.when(userVmVoMock.isDisplay()).thenReturn(true);\n        Mockito.doNothing().when(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n        userVmManagerImpl.updateVirtualMachine(updateVmCommand);\n        verifyMethodsThatAreAlwaysExecuted();\n\n        Mockito.verify(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n        Mockito.verify(userVmDetailVO, Mockito.times(0)).removeDetails(vmId);\n    }\n","date":"2020-02-12 15:28:25","endLine":226,"groupId":"10939","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"updateVirtualMachineTestDisplayChanged","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f9/f91d15d1a8b3250a56f9b7e91b2bfa98805f18.src","preCode":"    public void updateVirtualMachineTestDisplayChanged() throws ResourceUnavailableException, InsufficientCapacityException {\n        configureDoNothingForMethodsThatWeDoNotWantToTest();\n\n        Mockito.when(userVmVoMock.isDisplay()).thenReturn(true);\n        Mockito.doNothing().when(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n\n        userVmManagerImpl.updateVirtualMachine(updateVmCommand);\n        verifyMethodsThatAreAlwaysExecuted();\n\n        Mockito.verify(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n        Mockito.verify(userVmDetailVO, Mockito.times(0)).removeDetails(vmId);\n    }\n","realPath":"server/src/test/java/com/cloud/vm/UserVmManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"},{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void updateVirtualMachineTestCleanUpTrue() throws ResourceUnavailableException, InsufficientCapacityException {\n        configureDoNothingForMethodsThatWeDoNotWantToTest();\n        ServiceOffering offering = getSvcoffering(512);\n        Mockito.when(_serviceOfferingDao.findById(Mockito.anyLong(), Mockito.anyLong())).thenReturn((ServiceOfferingVO) offering);\n        Mockito.when(updateVmCommand.isCleanupDetails()).thenReturn(true);\n        Mockito.lenient().doNothing().when(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n        Mockito.doNothing().when(userVmDetailVO).removeDetails(vmId);\n\n        userVmManagerImpl.updateVirtualMachine(updateVmCommand);\n        verifyMethodsThatAreAlwaysExecuted();\n        Mockito.verify(userVmDetailVO).removeDetails(vmId);\n        Mockito.verify(userVmManagerImpl, Mockito.times(0)).updateDisplayVmFlag(false, vmId, userVmVoMock);\n    }\n","date":"2020-02-12 15:28:25","endLine":241,"groupId":"10939","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"updateVirtualMachineTestCleanUpTrue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f9/f91d15d1a8b3250a56f9b7e91b2bfa98805f18.src","preCode":"    public void updateVirtualMachineTestCleanUpTrue() throws ResourceUnavailableException, InsufficientCapacityException {\n        configureDoNothingForMethodsThatWeDoNotWantToTest();\n\n        Mockito.when(updateVmCommand.isCleanupDetails()).thenReturn(true);\n\n        Mockito.doNothing().when(userVmManagerImpl).updateDisplayVmFlag(false, vmId, userVmVoMock);\n        Mockito.doNothing().when(userVmDetailVO).removeDetails(vmId);\n\n        userVmManagerImpl.updateVirtualMachine(updateVmCommand);\n        verifyMethodsThatAreAlwaysExecuted();\n        Mockito.verify(userVmDetailVO).removeDetails(vmId);\n        Mockito.verify(userVmManagerImpl, Mockito.times(0)).updateDisplayVmFlag(false, vmId, userVmVoMock);\n    }\n","realPath":"server/src/test/java/com/cloud/vm/UserVmManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
