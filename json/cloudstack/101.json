[{"authorTime":"2013-01-25 21:11:59","codes":[{"authorDate":"2013-01-25 21:11:59","commitOrder":1,"curCode":"\tpublic void generateToc() {\n\t\ttry {\n\t\t    TransformerFactory tFactory = TransformerFactory.newInstance();\n\t\t    \r\n\t\t    Transformer transformer =\n\t\t      tFactory.newTransformer\n\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t            (\"generatetocforuser.xsl\"));\n\t\t    \r\n\t\t    transformer.transform\n\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t            (\"regular_user/regularUserSummary.xml\"),\n\t\t       new javax.xml.transform.stream.StreamResult\n\t\t            ( new FileOutputStream(\"html/TOC_User.html\")));\n\t\t    \r\n\t\t    Transformer transformer1 =\n\t\t      tFactory.newTransformer\n\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t            (\"generatetocforadmin.xsl\"));\n\t\t    \r\n\t\t    transformer1.transform\n\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t            (\"root_admin/rootAdminSummary.xml\"),\n\t\t    \r\n\t\t       new javax.xml.transform.stream.StreamResult\n\t\t            ( new FileOutputStream(\"html/TOC_Root_Admin.html\")));\n\t\t    \r\n\t\t    Transformer transformer2 =\n\t\t      tFactory.newTransformer\n\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t            (\"generatetocfordomainadmin.xsl\"));\n\t\t    \n\t\t    \r\n\t\t    \r\n\t\t    transformer2.transform\n\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t            (\"domain_admin/domainAdminSummary.xml\"),\n\t\t    \r\n\t\t       new javax.xml.transform.stream.StreamResult\n\t\t            ( new FileOutputStream(\"html/TOC_Domain_Admin.html\")));\n\t\t    \n\t\t}\n\t\tcatch (Exception e) {\n\t\t    e.printStackTrace( );\n\t\t}\n\t}\n","date":"2013-01-25 21:11:59","endLine":74,"groupId":"906","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"generateToc","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8b/7cfccb0f69b14794ba909087183420d3773359.src","preCode":"\tpublic void generateToc() {\n\t\ttry {\n\t\t    TransformerFactory tFactory = TransformerFactory.newInstance();\n\t\t    \r\n\t\t    Transformer transformer =\n\t\t      tFactory.newTransformer\n\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t            (\"generatetocforuser.xsl\"));\n\t\t    \r\n\t\t    transformer.transform\n\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t            (\"regular_user/regularUserSummary.xml\"),\n\t\t       new javax.xml.transform.stream.StreamResult\n\t\t            ( new FileOutputStream(\"html/TOC_User.html\")));\n\t\t    \r\n\t\t    Transformer transformer1 =\n\t\t      tFactory.newTransformer\n\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t            (\"generatetocforadmin.xsl\"));\n\t\t    \r\n\t\t    transformer1.transform\n\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t            (\"root_admin/rootAdminSummary.xml\"),\n\t\t    \r\n\t\t       new javax.xml.transform.stream.StreamResult\n\t\t            ( new FileOutputStream(\"html/TOC_Root_Admin.html\")));\n\t\t    \r\n\t\t    Transformer transformer2 =\n\t\t      tFactory.newTransformer\n\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t            (\"generatetocfordomainadmin.xsl\"));\n\t\t    \n\t\t    \r\n\t\t    \r\n\t\t    transformer2.transform\n\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t            (\"domain_admin/domainAdminSummary.xml\"),\n\t\t    \r\n\t\t       new javax.xml.transform.stream.StreamResult\n\t\t            ( new FileOutputStream(\"html/TOC_Domain_Admin.html\")));\n\t\t    \n\t\t}\n\t\tcatch (Exception e) {\n\t\t    e.printStackTrace( );\n\t\t}\n\t}\n","realPath":"tools/apidoc/XmlToHtmlConverter.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":29,"status":"B"},{"authorDate":"2013-01-25 21:11:59","commitOrder":1,"curCode":"\tpublic void generateIndividualCommandPages() {\n\t\tfor(String commandName : rootAdminCommandNames) {\n\t\t\n\t\t\t\ttry {\n\t\t\t\n\t\t\t\t    TransformerFactory tFactory = TransformerFactory.newInstance();\n\t\t\t\t    Transformer transformer =\n\t\t\t\t      tFactory.newTransformer\n\t\t\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t\t\t            (\"generateadmincommands.xsl\"));\n\t\t\t\t\n\t\t\t\t    transformer.transform\n\t\t\t\t    \r\n\t\t\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t\t\t            (\"root_admin/\"+commandName+\".xml\"),\n\t\t\t\t    \r\n\t\t\t\t       new javax.xml.transform.stream.StreamResult\n\t\t\t\t            ( new FileOutputStream(\"html/root_admin/\"+commandName+\".html\")));\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t    e.printStackTrace( );\n\t\t\t\t}\n\t\t}\n\t\t\n\t\tfor(String commandName : domainAdminCommandNames) {\n\t\t\t\n\t\t\ttry {\n\t\t\n\t\t\t    TransformerFactory tFactory = TransformerFactory.newInstance();\n\t\t\t    Transformer transformer =\n\t\t\t      tFactory.newTransformer\n\t\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t\t            (\"generatedomainadmincommands.xsl\"));\n\t\t\t\n\t\t\t    transformer.transform\n\t\t\t    \r\n\t\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t\t            (\"domain_admin/\"+commandName+\".xml\"),\n\t\t\t    \r\n\t\t\t       new javax.xml.transform.stream.StreamResult\n\t\t\t            ( new FileOutputStream(\"html/domain_admin/\"+commandName+\".html\")));\n\t\t\t} catch (Exception e) {\n\t\t\t    e.printStackTrace( );\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(String commandName : userCommandNames) {\n\t\t\t\n\t\t\ttry {\n\t\t\n\t\t\t    TransformerFactory tFactory = TransformerFactory.newInstance();\n\t\t\t\n\t\t\t    Transformer transformer =\n\t\t\t      tFactory.newTransformer\n\t\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t\t            (\"generateusercommands.xsl\"));\n\t\t\t\n\t\t\t    transformer.transform\n\t\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t\t            (\"regular_user/\"+commandName+\".xml\"),\n\t\t\t       new javax.xml.transform.stream.StreamResult\n\t\t\t            ( new FileOutputStream(\"html/user/\"+commandName+\".html\")));\n\t\t\t} catch (Exception e) {\n\t\t\t    e.printStackTrace( );\n\t\t\t}\n\t\t}\n\t}\n","date":"2013-01-25 21:11:59","endLine":142,"groupId":"6370","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"generateIndividualCommandPages","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8b/7cfccb0f69b14794ba909087183420d3773359.src","preCode":"\tpublic void generateIndividualCommandPages() {\n\t\tfor(String commandName : rootAdminCommandNames) {\n\t\t\n\t\t\t\ttry {\n\t\t\t\n\t\t\t\t    TransformerFactory tFactory = TransformerFactory.newInstance();\n\t\t\t\t    Transformer transformer =\n\t\t\t\t      tFactory.newTransformer\n\t\t\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t\t\t            (\"generateadmincommands.xsl\"));\n\t\t\t\t\n\t\t\t\t    transformer.transform\n\t\t\t\t    \r\n\t\t\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t\t\t            (\"root_admin/\"+commandName+\".xml\"),\n\t\t\t\t    \r\n\t\t\t\t       new javax.xml.transform.stream.StreamResult\n\t\t\t\t            ( new FileOutputStream(\"html/root_admin/\"+commandName+\".html\")));\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t    e.printStackTrace( );\n\t\t\t\t}\n\t\t}\n\t\t\n\t\tfor(String commandName : domainAdminCommandNames) {\n\t\t\t\n\t\t\ttry {\n\t\t\n\t\t\t    TransformerFactory tFactory = TransformerFactory.newInstance();\n\t\t\t    Transformer transformer =\n\t\t\t      tFactory.newTransformer\n\t\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t\t            (\"generatedomainadmincommands.xsl\"));\n\t\t\t\n\t\t\t    transformer.transform\n\t\t\t    \r\n\t\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t\t            (\"domain_admin/\"+commandName+\".xml\"),\n\t\t\t    \r\n\t\t\t       new javax.xml.transform.stream.StreamResult\n\t\t\t            ( new FileOutputStream(\"html/domain_admin/\"+commandName+\".html\")));\n\t\t\t} catch (Exception e) {\n\t\t\t    e.printStackTrace( );\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(String commandName : userCommandNames) {\n\t\t\t\n\t\t\ttry {\n\t\t\n\t\t\t    TransformerFactory tFactory = TransformerFactory.newInstance();\n\t\t\t\n\t\t\t    Transformer transformer =\n\t\t\t      tFactory.newTransformer\n\t\t\t         (new javax.xml.transform.stream.StreamSource\n\t\t\t            (\"generateusercommands.xsl\"));\n\t\t\t\n\t\t\t    transformer.transform\n\t\t\t      (new javax.xml.transform.stream.StreamSource\n\t\t\t            (\"regular_user/\"+commandName+\".xml\"),\n\t\t\t       new javax.xml.transform.stream.StreamResult\n\t\t\t            ( new FileOutputStream(\"html/user/\"+commandName+\".html\")));\n\t\t\t} catch (Exception e) {\n\t\t\t    e.printStackTrace( );\n\t\t\t}\n\t\t}\n\t}\n","realPath":"tools/apidoc/XmlToHtmlConverter.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"1f57d925eb48596574f3c21f6db94bbe08f4958b","commitMessage":"@@@Apply API refactoring changes. Make changes to Regions API to work with new code\n","date":"2013-01-25 21:11:59","modifiedFileCount":"840","status":"B","submitter":"Kishan Kavala"},{"authorTime":"2016-05-11 14:03:49","codes":[{"authorDate":"2016-05-11 14:03:49","commitOrder":2,"curCode":"    public void generateToc() {\n        try {\n            TransformerFactory tFactory = TransformerFactory.newInstance();\n            \r\n            Transformer transformer1 = tFactory.newTransformer(new javax.xml.transform.stream.StreamSource(\"generatetoc.xsl\"));\n            \r\n            transformer1.transform(new javax.xml.transform.stream.StreamSource(\"apis/apiSummarySorted.xml\"),\n            \r\n                    new javax.xml.transform.stream.StreamResult(new FileOutputStream(\"html/index.html\")));\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n","date":"2016-05-11 14:03:50","endLine":43,"groupId":"101","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"generateToc","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/63/eb68eed427d5526388fc0881e7aa08cb4cbb33.src","preCode":"    public void generateToc() {\n        try {\n            TransformerFactory tFactory = TransformerFactory.newInstance();\n            \r\n            Transformer transformer = tFactory.newTransformer(new javax.xml.transform.stream.StreamSource(\"generatetocforuser.xsl\"));\n            \r\n            transformer.transform(new javax.xml.transform.stream.StreamSource(\"regular_user/regularUserSummary.xml\"), new javax.xml.transform.stream.StreamResult(\n                    new FileOutputStream(\"html/TOC_User.html\")));\n            \r\n            Transformer transformer1 = tFactory.newTransformer(new javax.xml.transform.stream.StreamSource(\"generatetocforadmin.xsl\"));\n            \r\n            transformer1.transform(new javax.xml.transform.stream.StreamSource(\"root_admin/rootAdminSummary.xml\"),\n            \r\n                    new javax.xml.transform.stream.StreamResult(new FileOutputStream(\"html/TOC_Root_Admin.html\")));\n            \r\n            Transformer transformer2 = tFactory.newTransformer(new javax.xml.transform.stream.StreamSource(\"generatetocfordomainadmin.xsl\"));\n\n            \r\n            \r\n            transformer2.transform(new javax.xml.transform.stream.StreamSource(\"domain_admin/domainAdminSummary.xml\"),\n            \r\n                    new javax.xml.transform.stream.StreamResult(new FileOutputStream(\"html/TOC_Domain_Admin.html\")));\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n","realPath":"tools/apidoc/XmlToHtmlConverter.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"M"},{"authorDate":"2016-05-11 14:03:49","commitOrder":2,"curCode":"    public void generateIndividualCommandPages() {\n        for (String commandName : allCommandNames) {\n\n            try {\n\n                TransformerFactory tFactory = TransformerFactory.newInstance();\n                Transformer transformer = tFactory.newTransformer(new javax.xml.transform.stream.StreamSource(\"generatecommands.xsl\"));\n\n                transformer.transform\n                \r\n                        (new javax.xml.transform.stream.StreamSource(\"apis/\" + commandName + \".xml\"),\n                        \r\n                                new javax.xml.transform.stream.StreamResult(new FileOutputStream(\"html/apis/\" + commandName + \".html\")));\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","date":"2016-05-11 14:03:50","endLine":63,"groupId":"101","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"generateIndividualCommandPages","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/63/eb68eed427d5526388fc0881e7aa08cb4cbb33.src","preCode":"    public void generateIndividualCommandPages() {\n        for (String commandName : rootAdminCommandNames) {\n\n            try {\n\n                TransformerFactory tFactory = TransformerFactory.newInstance();\n                Transformer transformer = tFactory.newTransformer(new javax.xml.transform.stream.StreamSource(\"generateadmincommands.xsl\"));\n\n                transformer.transform\n                \r\n                        (new javax.xml.transform.stream.StreamSource(\"root_admin/\" + commandName + \".xml\"),\n                        \r\n                                new javax.xml.transform.stream.StreamResult(new FileOutputStream(\"html/root_admin/\" + commandName + \".html\")));\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n\n        for (String commandName : domainAdminCommandNames) {\n\n            try {\n\n                TransformerFactory tFactory = TransformerFactory.newInstance();\n                Transformer transformer = tFactory.newTransformer(new javax.xml.transform.stream.StreamSource(\"generatedomainadmincommands.xsl\"));\n\n                transformer.transform\n                \r\n                        (new javax.xml.transform.stream.StreamSource(\"domain_admin/\" + commandName + \".xml\"),\n                        \r\n                                new javax.xml.transform.stream.StreamResult(new FileOutputStream(\"html/domain_admin/\" + commandName + \".html\")));\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n\n        for (String commandName : userCommandNames) {\n\n            try {\n\n                TransformerFactory tFactory = TransformerFactory.newInstance();\n\n                Transformer transformer = tFactory.newTransformer(new javax.xml.transform.stream.StreamSource(\"generateusercommands.xsl\"));\n\n                transformer.transform(new javax.xml.transform.stream.StreamSource(\"regular_user/\" + commandName + \".xml\"), new javax.xml.transform.stream.StreamResult(\n                        new FileOutputStream(\"html/user/\" + commandName + \".html\")));\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","realPath":"tools/apidoc/XmlToHtmlConverter.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"bee2bdc299844e081ef30ccc5de0c2e01b2a0581","commitMessage":"@@@Merge pull request #1489 from shapeblue/dynamicroles-master\n\nCLOUDSTACK-8562: Dynamic Role-Based API Checker for CloudStack\n CLOUDSTACK-8562: DB-Backed Dynamic Role Based API Access Checker\n\nThis feature allows root administrators to define new roles and associate API\npermissions to them.\n\nA limited form of role-based access control for the CloudStack management server\nAPI is provided through a properties file.  commands.properties.  embedded in the\nWAR distribution. Therefore.  customizing API permissions requires unpacking the\ndistribution and modifying this file consistently on all servers. The old system\nalso does not permit the specification of additional roles.\n\nFS:\nhttps://cwiki.apache.org/confluence/display/CLOUDSTACK/Dynamic+Role+Based+API+Access+Checker+for+CloudStack\n\nDB-Backed Dynamic Role Based API Access Checker for CloudStack brings following\nchanges.  features and use-cases:\n- Moves the API access definitions from commands.properties to the mgmt server DB\n- Allows defining custom roles (such as a read-only ROOT admin) beyond the\n  current set of four (4) roles\n- All roles will resolve to one of the four known roles types (Admin.  Resource\n  Admin.  Domain Admin and User) which maintains this association by requiring\n  all new defined roles to specify a role type.\n- Allows changes to roles and API permissions per role at runtime including additions or\n  removal of roles and/or modifications of permissions.  without the need\n  of restarting management server(s)\n\nUpgrade/installation notes:\n- The feature will be enabled by default for new installations.  existing\n  deployments will continue to use the older static role based api access checker\n  with an option to enable this feature\n- During fresh installation or upgrade.  the upgrade paths will add four default\n  roles based on the four default role types\n- For ease of migration.  at the time of upgrade commands.properties will be used\n  to add existing set of permissions to the default roles. cloud.account\n  will have a new role_id column which will be populated based on default roles\n  as well\n\nDynamic-roles migration tool: scripts/util/migrate-dynamicroles.py\n- Allows admins to migrate to the dynamic role based checker at a future date\n- Performs a harder one-way migrate and update\n- Migrates rules from existing commands.properties file into db and deprecates it\n- Enables an internal hidden switch to enable dynamic role based checker feature\n\n* pr/1489:\n  maven: Fix jstl version usage\n  CLOUDSTACK-8562: Deprecate commands.properties\n  CLOUDSTACK-8562: DB-Backed Dynamic Role Based API Access Checker\n  CLOUDSTACK-9361: Centrally handle API validations\n\nSigned-off-by: Will Stevens <williamstevens@gmail.com>\n","date":"2016-05-11 14:03:50","modifiedFileCount":"43","status":"M","submitter":"Will Stevens"}]
