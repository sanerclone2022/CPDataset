[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public SecondaryStorageVmVO startNew(long dataCenterId, SecondaryStorageVm.Role role) {\n\n        if (!isSecondaryStorageVmRequired(dataCenterId)) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Secondary storage vm not required in zone \" + dataCenterId + \" acc. to zone config\");\n            }\n            return null;\n        }\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Assign secondary storage vm from a newly started instance for request from data center : \" + dataCenterId);\n        }\n\n        Map<String, Object> context = createSecStorageVmInstance(dataCenterId, role);\n\n        long secStorageVmId = (Long)context.get(\"secStorageVmId\");\n        if (secStorageVmId == 0) {\n            if (s_logger.isTraceEnabled()) {\n                s_logger.trace(\"Creating secondary storage vm instance failed, data center id : \" + dataCenterId);\n            }\n\n            return null;\n        }\n\n        SecondaryStorageVmVO secStorageVm = _secStorageVmDao.findById(secStorageVmId);\n        \r\n        \r\n        if (secStorageVm != null) {\n            SubscriptionMgr.getInstance().notifySubscribers(ALERT_SUBJECT, this,\n                new SecStorageVmAlertEventArgs(SecStorageVmAlertEventArgs.SSVM_CREATED, dataCenterId, secStorageVmId, secStorageVm, null));\n            return secStorageVm;\n        } else {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Unable to allocate secondary storage vm storage, remove the secondary storage vm record from DB, secondary storage vm id: \" +\n                    secStorageVmId);\n            }\n            SubscriptionMgr.getInstance().notifySubscribers(ALERT_SUBJECT, this,\n                new SecStorageVmAlertEventArgs(SecStorageVmAlertEventArgs.SSVM_CREATE_FAILURE, dataCenterId, secStorageVmId, null, \"Unable to allocate storage\"));\n        }\n        return null;\n    }\n","date":"2018-01-20 05:49:27","endLine":530,"groupId":"10603","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startNew","params":"(longdataCenterId@SecondaryStorageVm.Rolerole)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a1/58c9c0e6824403a7fc6575a694f76829e8889a.src","preCode":"    public SecondaryStorageVmVO startNew(long dataCenterId, SecondaryStorageVm.Role role) {\n\n        if (!isSecondaryStorageVmRequired(dataCenterId)) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Secondary storage vm not required in zone \" + dataCenterId + \" acc. to zone config\");\n            }\n            return null;\n        }\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Assign secondary storage vm from a newly started instance for request from data center : \" + dataCenterId);\n        }\n\n        Map<String, Object> context = createSecStorageVmInstance(dataCenterId, role);\n\n        long secStorageVmId = (Long)context.get(\"secStorageVmId\");\n        if (secStorageVmId == 0) {\n            if (s_logger.isTraceEnabled()) {\n                s_logger.trace(\"Creating secondary storage vm instance failed, data center id : \" + dataCenterId);\n            }\n\n            return null;\n        }\n\n        SecondaryStorageVmVO secStorageVm = _secStorageVmDao.findById(secStorageVmId);\n        \r\n        \r\n        if (secStorageVm != null) {\n            SubscriptionMgr.getInstance().notifySubscribers(ALERT_SUBJECT, this,\n                new SecStorageVmAlertEventArgs(SecStorageVmAlertEventArgs.SSVM_CREATED, dataCenterId, secStorageVmId, secStorageVm, null));\n            return secStorageVm;\n        } else {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Unable to allocate secondary storage vm storage, remove the secondary storage vm record from DB, secondary storage vm id: \" +\n                    secStorageVmId);\n            }\n            SubscriptionMgr.getInstance().notifySubscribers(ALERT_SUBJECT, this,\n                new SecStorageVmAlertEventArgs(SecStorageVmAlertEventArgs.SSVM_CREATE_FAILURE, dataCenterId, secStorageVmId, null, \"Unable to allocate storage\"));\n        }\n        return null;\n    }\n","realPath":"services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":491,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean isPoolReadyForScan(Long pool) {\n        \r\n        long dataCenterId = pool.longValue();\n\n        if (!isZoneReady(_zoneHostInfoMap, dataCenterId)) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Zone \" + dataCenterId + \" is not ready to launch secondary storage VM yet\");\n            }\n            return false;\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Zone \" + dataCenterId + \" is ready to launch secondary storage VM\");\n        }\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":1362,"groupId":"18701","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"isPoolReadyForScan","params":"(Longpool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a1/58c9c0e6824403a7fc6575a694f76829e8889a.src","preCode":"    public boolean isPoolReadyForScan(Long pool) {\n        \r\n        long dataCenterId = pool.longValue();\n\n        if (!isZoneReady(_zoneHostInfoMap, dataCenterId)) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Zone \" + dataCenterId + \" is not ready to launch secondary storage VM yet\");\n            }\n            return false;\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Zone \" + dataCenterId + \" is ready to launch secondary storage VM\");\n        }\n        return true;\n    }\n","realPath":"services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1347,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2021-05-10 15:47:42","codes":[{"authorDate":"2021-05-10 15:47:42","commitOrder":2,"curCode":"    public SecondaryStorageVmVO startNew(long dataCenterId, SecondaryStorageVm.Role role) {\n\n        if (!isSecondaryStorageVmRequired(dataCenterId)) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(String.format(\"Secondary storage VM not required in zone [%s] account to zone config.\", dataCenterId));\n            }\n            return null;\n        }\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(String.format(\"Assign secondary storage VM from a newly started instance for request from data center [%s].\", dataCenterId));\n        }\n\n        Map<String, Object> context = createSecStorageVmInstance(dataCenterId, role);\n\n        long secStorageVmId = (Long)context.get(\"secStorageVmId\");\n        if (secStorageVmId == 0) {\n            s_logger.debug(String.format(\"Creating secondary storage VM instance failed on data center [%s].\", dataCenterId));\n            return null;\n        }\n\n        SecondaryStorageVmVO secStorageVm = _secStorageVmDao.findById(secStorageVmId);\n\n        if (secStorageVm != null) {\n            SubscriptionMgr.getInstance().notifySubscribers(ALERT_SUBJECT, this,\n                new SecStorageVmAlertEventArgs(SecStorageVmAlertEventArgs.SSVM_CREATED, dataCenterId, secStorageVmId, secStorageVm, null));\n            return secStorageVm;\n        } else {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(String.format(\"Unable to allocate secondary storage VM [%s] due to it was not found on database.\", secStorageVmId));\n            }\n            SubscriptionMgr.getInstance().notifySubscribers(ALERT_SUBJECT, this,\n                new SecStorageVmAlertEventArgs(SecStorageVmAlertEventArgs.SSVM_CREATE_FAILURE, dataCenterId, secStorageVmId, null, \"Unable to allocate storage\"));\n        }\n        return null;\n    }\n","date":"2021-05-10 15:47:42","endLine":503,"groupId":"104732","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"startNew","params":"(longdataCenterId@SecondaryStorageVm.Rolerole)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/85/f8bbb803bc65cb60ba132e109ff04fc94b63b5.src","preCode":"    public SecondaryStorageVmVO startNew(long dataCenterId, SecondaryStorageVm.Role role) {\n\n        if (!isSecondaryStorageVmRequired(dataCenterId)) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Secondary storage vm not required in zone \" + dataCenterId + \" acc. to zone config\");\n            }\n            return null;\n        }\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Assign secondary storage vm from a newly started instance for request from data center : \" + dataCenterId);\n        }\n\n        Map<String, Object> context = createSecStorageVmInstance(dataCenterId, role);\n\n        long secStorageVmId = (Long)context.get(\"secStorageVmId\");\n        if (secStorageVmId == 0) {\n            if (s_logger.isTraceEnabled()) {\n                s_logger.trace(\"Creating secondary storage vm instance failed, data center id : \" + dataCenterId);\n            }\n\n            return null;\n        }\n\n        SecondaryStorageVmVO secStorageVm = _secStorageVmDao.findById(secStorageVmId);\n        \r\n        \r\n        if (secStorageVm != null) {\n            SubscriptionMgr.getInstance().notifySubscribers(ALERT_SUBJECT, this,\n                new SecStorageVmAlertEventArgs(SecStorageVmAlertEventArgs.SSVM_CREATED, dataCenterId, secStorageVmId, secStorageVm, null));\n            return secStorageVm;\n        } else {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Unable to allocate secondary storage vm storage, remove the secondary storage vm record from DB, secondary storage vm id: \" +\n                    secStorageVmId);\n            }\n            SubscriptionMgr.getInstance().notifySubscribers(ALERT_SUBJECT, this,\n                new SecStorageVmAlertEventArgs(SecStorageVmAlertEventArgs.SSVM_CREATE_FAILURE, dataCenterId, secStorageVmId, null, \"Unable to allocate storage\"));\n        }\n        return null;\n    }\n","realPath":"services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":469,"status":"M"},{"authorDate":"2021-05-10 15:47:42","commitOrder":2,"curCode":"    public boolean isPoolReadyForScan(Long dataCenterId) {\n        if (!isZoneReady(_zoneHostInfoMap, dataCenterId)) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(String.format(\"Zone [%s] is not ready to launch secondary storage VM.\", dataCenterId));\n            }\n            return false;\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(String.format(\"Zone [%s] is ready to launch secondary storage VM.\", dataCenterId));\n        }\n        return true;\n    }\n","date":"2021-05-10 15:47:42","endLine":1307,"groupId":"104732","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"isPoolReadyForScan","params":"(LongdataCenterId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/85/f8bbb803bc65cb60ba132e109ff04fc94b63b5.src","preCode":"    public boolean isPoolReadyForScan(Long pool) {\n        \r\n        long dataCenterId = pool.longValue();\n\n        if (!isZoneReady(_zoneHostInfoMap, dataCenterId)) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Zone \" + dataCenterId + \" is not ready to launch secondary storage VM yet\");\n            }\n            return false;\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Zone \" + dataCenterId + \" is ready to launch secondary storage VM\");\n        }\n        return true;\n    }\n","realPath":"services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1295,"status":"M"}],"commitId":"3674e80219d0be9e940bd948060fa10a467e4b7e","commitMessage":"@@@Improve logs on SecondaryStorageManagerImpl and few refactors (#4955)\n\nCo-authored-by: Daniel Augusto Veronezi Salvador <daniel@scclouds.com.br>","date":"2021-05-10 15:47:42","modifiedFileCount":"4","status":"M","submitter":"Daniel Augusto Veronezi Salvador"}]
