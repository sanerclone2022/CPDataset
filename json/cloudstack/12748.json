[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void performSnapshotAndCopyOnHostSide(VolumeInfo volumeInfo, SnapshotInfo snapshotInfo) {\n        Map<String, String> sourceDetails = null;\n\n        VolumeVO volumeVO = volumeDao.findById(volumeInfo.getId());\n\n        Long vmInstanceId = volumeVO.getInstanceId();\n        VMInstanceVO vmInstanceVO = vmInstanceDao.findById(vmInstanceId);\n\n        Long hostId = null;\n\n        \r\n        if (vmInstanceVO != null) {\n            hostId = vmInstanceVO.getHostId();\n\n            \r\n            if (hostId == null) {\n                hostId = vmInstanceVO.getLastHostId();\n\n                if (hostId == null) {\n                    sourceDetails = getSourceDetails(volumeInfo);\n                }\n            }\n        }\n        \r\n        else {\n            sourceDetails = getSourceDetails(volumeInfo);\n        }\n\n        HostVO hostVO = null;\n\n        if (hostId != null) {\n            hostVO = hostDao.findById(hostId);\n        }\n        else {\n            Optional<HostVO> optHostVO = getHost(volumeInfo.getDataCenterId(), false);\n\n            if (optHostVO.isPresent()) {\n                hostVO = optHostVO.get();\n            }\n        }\n\n        if (hostVO == null) {\n            final String errMsg = \"Unable to locate an applicable host\";\n\n            s_logger.error(\"performSnapshotAndCopyOnHostSide: \" + errMsg);\n\n            throw new CloudRuntimeException(errMsg);\n        }\n\n        long storagePoolId = volumeVO.getPoolId();\n        StoragePoolVO storagePoolVO = storagePoolDao.findById(storagePoolId);\n        DataStore dataStore = dataStoreMgr.getDataStore(storagePoolId, DataStoreRole.Primary);\n\n        Map<String, String> destDetails = getDestDetails(storagePoolVO, snapshotInfo);\n\n        SnapshotAndCopyCommand snapshotAndCopyCommand = new SnapshotAndCopyCommand(volumeInfo.getPath(), sourceDetails, destDetails);\n\n        SnapshotAndCopyAnswer snapshotAndCopyAnswer;\n\n        try {\n            \r\n            if (sourceDetails != null) {\n                volService.grantAccess(volumeInfo, hostVO, dataStore);\n            }\n\n            volService.grantAccess(snapshotInfo, hostVO, dataStore);\n\n            snapshotAndCopyAnswer = (SnapshotAndCopyAnswer)agentMgr.send(hostVO.getId(), snapshotAndCopyCommand);\n        }\n        catch (Exception ex) {\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n        finally {\n            try {\n                volService.revokeAccess(snapshotInfo, hostVO, dataStore);\n\n                \r\n                if (sourceDetails != null) {\n                    volService.revokeAccess(volumeInfo, hostVO, dataStore);\n                }\n            }\n            catch (Exception ex) {\n                s_logger.debug(ex.getMessage(), ex);\n            }\n        }\n\n        if (snapshotAndCopyAnswer == null || !snapshotAndCopyAnswer.getResult()) {\n            final String errMsg;\n\n            if (snapshotAndCopyAnswer != null && snapshotAndCopyAnswer.getDetails() != null && !snapshotAndCopyAnswer.getDetails().isEmpty()) {\n                errMsg = snapshotAndCopyAnswer.getDetails();\n            }\n            else {\n                errMsg = \"Unable to perform host-side operation\";\n            }\n\n            throw new CloudRuntimeException(errMsg);\n        }\n\n        String path = snapshotAndCopyAnswer.getPath(); \r\n\n        SnapshotDetailsVO snapshotDetail = new SnapshotDetailsVO(snapshotInfo.getId(),\n                DiskTO.PATH,\n                path,\n                false);\n\n        snapshotDetailsDao.persist(snapshotDetail);\n    }\n","date":"2018-01-20 05:49:27","endLine":755,"groupId":"17270","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"performSnapshotAndCopyOnHostSide","params":"(VolumeInfovolumeInfo@SnapshotInfosnapshotInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/88/c385b4e617584a9920c5f4486623c8cdff5619.src","preCode":"    private void performSnapshotAndCopyOnHostSide(VolumeInfo volumeInfo, SnapshotInfo snapshotInfo) {\n        Map<String, String> sourceDetails = null;\n\n        VolumeVO volumeVO = volumeDao.findById(volumeInfo.getId());\n\n        Long vmInstanceId = volumeVO.getInstanceId();\n        VMInstanceVO vmInstanceVO = vmInstanceDao.findById(vmInstanceId);\n\n        Long hostId = null;\n\n        \r\n        if (vmInstanceVO != null) {\n            hostId = vmInstanceVO.getHostId();\n\n            \r\n            if (hostId == null) {\n                hostId = vmInstanceVO.getLastHostId();\n\n                if (hostId == null) {\n                    sourceDetails = getSourceDetails(volumeInfo);\n                }\n            }\n        }\n        \r\n        else {\n            sourceDetails = getSourceDetails(volumeInfo);\n        }\n\n        HostVO hostVO = null;\n\n        if (hostId != null) {\n            hostVO = hostDao.findById(hostId);\n        }\n        else {\n            Optional<HostVO> optHostVO = getHost(volumeInfo.getDataCenterId(), false);\n\n            if (optHostVO.isPresent()) {\n                hostVO = optHostVO.get();\n            }\n        }\n\n        if (hostVO == null) {\n            final String errMsg = \"Unable to locate an applicable host\";\n\n            s_logger.error(\"performSnapshotAndCopyOnHostSide: \" + errMsg);\n\n            throw new CloudRuntimeException(errMsg);\n        }\n\n        long storagePoolId = volumeVO.getPoolId();\n        StoragePoolVO storagePoolVO = storagePoolDao.findById(storagePoolId);\n        DataStore dataStore = dataStoreMgr.getDataStore(storagePoolId, DataStoreRole.Primary);\n\n        Map<String, String> destDetails = getDestDetails(storagePoolVO, snapshotInfo);\n\n        SnapshotAndCopyCommand snapshotAndCopyCommand = new SnapshotAndCopyCommand(volumeInfo.getPath(), sourceDetails, destDetails);\n\n        SnapshotAndCopyAnswer snapshotAndCopyAnswer;\n\n        try {\n            \r\n            if (sourceDetails != null) {\n                volService.grantAccess(volumeInfo, hostVO, dataStore);\n            }\n\n            volService.grantAccess(snapshotInfo, hostVO, dataStore);\n\n            snapshotAndCopyAnswer = (SnapshotAndCopyAnswer)agentMgr.send(hostVO.getId(), snapshotAndCopyCommand);\n        }\n        catch (Exception ex) {\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n        finally {\n            try {\n                volService.revokeAccess(snapshotInfo, hostVO, dataStore);\n\n                \r\n                if (sourceDetails != null) {\n                    volService.revokeAccess(volumeInfo, hostVO, dataStore);\n                }\n            }\n            catch (Exception ex) {\n                s_logger.debug(ex.getMessage(), ex);\n            }\n        }\n\n        if (snapshotAndCopyAnswer == null || !snapshotAndCopyAnswer.getResult()) {\n            final String errMsg;\n\n            if (snapshotAndCopyAnswer != null && snapshotAndCopyAnswer.getDetails() != null && !snapshotAndCopyAnswer.getDetails().isEmpty()) {\n                errMsg = snapshotAndCopyAnswer.getDetails();\n            }\n            else {\n                errMsg = \"Unable to perform host-side operation\";\n            }\n\n            throw new CloudRuntimeException(errMsg);\n        }\n\n        String path = snapshotAndCopyAnswer.getPath(); \r\n\n        SnapshotDetailsVO snapshotDetail = new SnapshotDetailsVO(snapshotInfo.getId(),\n                DiskTO.PATH,\n                path,\n                false);\n\n        snapshotDetailsDao.persist(snapshotDetail);\n    }\n","realPath":"engine/storage/snapshot/src/main/java/org/apache/cloudstack/storage/snapshot/StorageSystemSnapshotStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":648,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private HostVO getHost(long volumeId) {\n        VolumeVO volumeVO = volumeDao.findById(volumeId);\n\n        Long vmInstanceId = volumeVO.getInstanceId();\n        VMInstanceVO vmInstanceVO = vmInstanceDao.findById(vmInstanceId);\n\n        Long hostId = null;\n\n        \r\n        if (vmInstanceVO != null) {\n            hostId = vmInstanceVO.getHostId();\n\n            \r\n            if (hostId == null) {\n                hostId = vmInstanceVO.getLastHostId();\n            }\n        }\n\n        return getHost(volumeVO.getDataCenterId(), hostId);\n    }\n","date":"2018-01-20 05:49:27","endLine":828,"groupId":"17270","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getHost","params":"(longvolumeId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/88/c385b4e617584a9920c5f4486623c8cdff5619.src","preCode":"    private HostVO getHost(long volumeId) {\n        VolumeVO volumeVO = volumeDao.findById(volumeId);\n\n        Long vmInstanceId = volumeVO.getInstanceId();\n        VMInstanceVO vmInstanceVO = vmInstanceDao.findById(vmInstanceId);\n\n        Long hostId = null;\n\n        \r\n        if (vmInstanceVO != null) {\n            hostId = vmInstanceVO.getHostId();\n\n            \r\n            if (hostId == null) {\n                hostId = vmInstanceVO.getLastHostId();\n            }\n        }\n\n        return getHost(volumeVO.getDataCenterId(), hostId);\n    }\n","realPath":"engine/storage/snapshot/src/main/java/org/apache/cloudstack/storage/snapshot/StorageSystemSnapshotStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":809,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-03-30 18:51:06","commitOrder":2,"curCode":"    private void performSnapshotAndCopyOnHostSide(VolumeInfo volumeInfo, SnapshotInfo snapshotInfo) {\n        Map<String, String> sourceDetails = null;\n\n        VolumeVO volumeVO = volumeDao.findById(volumeInfo.getId());\n\n        Long vmInstanceId = volumeVO.getInstanceId();\n        VMInstanceVO vmInstanceVO = vmInstanceDao.findById(vmInstanceId);\n\n        Long hostId = null;\n\n        \r\n        if (vmInstanceVO != null) {\n            hostId = vmInstanceVO.getHostId();\n\n            \r\n            if (hostId == null) {\n                hostId = vmInstanceVO.getLastHostId();\n\n                if (hostId == null) {\n                    sourceDetails = getSourceDetails(volumeInfo);\n                }\n            }\n        }\n        \r\n        else {\n            sourceDetails = getSourceDetails(volumeInfo);\n        }\n\n        HostVO hostVO = null;\n\n        if (hostId != null) {\n            hostVO = hostDao.findById(hostId);\n        }\n\n        if (hostVO == null || !ResourceState.Enabled.equals(hostVO.getResourceState())) {\n            Optional<HostVO> optHostVO = getHost(volumeInfo.getDataCenterId(), false);\n\n            if (optHostVO.isPresent()) {\n                hostVO = optHostVO.get();\n            }\n        }\n\n        if (hostVO == null) {\n            final String errMsg = \"Unable to locate an applicable host\";\n\n            s_logger.error(\"performSnapshotAndCopyOnHostSide: \" + errMsg);\n\n            throw new CloudRuntimeException(errMsg);\n        }\n\n        long storagePoolId = volumeVO.getPoolId();\n        StoragePoolVO storagePoolVO = storagePoolDao.findById(storagePoolId);\n        DataStore dataStore = dataStoreMgr.getDataStore(storagePoolId, DataStoreRole.Primary);\n\n        Map<String, String> destDetails = getDestDetails(storagePoolVO, snapshotInfo);\n\n        SnapshotAndCopyCommand snapshotAndCopyCommand = new SnapshotAndCopyCommand(volumeInfo.getPath(), sourceDetails, destDetails);\n\n        SnapshotAndCopyAnswer snapshotAndCopyAnswer;\n\n        try {\n            \r\n            if (sourceDetails != null) {\n                volService.grantAccess(volumeInfo, hostVO, dataStore);\n            }\n\n            volService.grantAccess(snapshotInfo, hostVO, dataStore);\n\n            snapshotAndCopyAnswer = (SnapshotAndCopyAnswer)agentMgr.send(hostVO.getId(), snapshotAndCopyCommand);\n        }\n        catch (Exception ex) {\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n        finally {\n            try {\n                volService.revokeAccess(snapshotInfo, hostVO, dataStore);\n\n                \r\n                if (sourceDetails != null) {\n                    volService.revokeAccess(volumeInfo, hostVO, dataStore);\n                }\n            }\n            catch (Exception ex) {\n                s_logger.debug(ex.getMessage(), ex);\n            }\n        }\n\n        if (snapshotAndCopyAnswer == null || !snapshotAndCopyAnswer.getResult()) {\n            final String errMsg;\n\n            if (snapshotAndCopyAnswer != null && snapshotAndCopyAnswer.getDetails() != null && !snapshotAndCopyAnswer.getDetails().isEmpty()) {\n                errMsg = snapshotAndCopyAnswer.getDetails();\n            }\n            else {\n                errMsg = \"Unable to perform host-side operation\";\n            }\n\n            throw new CloudRuntimeException(errMsg);\n        }\n\n        String path = snapshotAndCopyAnswer.getPath(); \r\n\n        SnapshotDetailsVO snapshotDetail = new SnapshotDetailsVO(snapshotInfo.getId(),\n                DiskTO.PATH,\n                path,\n                false);\n\n        snapshotDetailsDao.persist(snapshotDetail);\n    }\n","date":"2018-03-30 18:51:06","endLine":746,"groupId":"12748","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"performSnapshotAndCopyOnHostSide","params":"(VolumeInfovolumeInfo@SnapshotInfosnapshotInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a6/fe50e258198da00666d5e33c7c6222038d81e1.src","preCode":"    private void performSnapshotAndCopyOnHostSide(VolumeInfo volumeInfo, SnapshotInfo snapshotInfo) {\n        Map<String, String> sourceDetails = null;\n\n        VolumeVO volumeVO = volumeDao.findById(volumeInfo.getId());\n\n        Long vmInstanceId = volumeVO.getInstanceId();\n        VMInstanceVO vmInstanceVO = vmInstanceDao.findById(vmInstanceId);\n\n        Long hostId = null;\n\n        \r\n        if (vmInstanceVO != null) {\n            hostId = vmInstanceVO.getHostId();\n\n            \r\n            if (hostId == null) {\n                hostId = vmInstanceVO.getLastHostId();\n\n                if (hostId == null) {\n                    sourceDetails = getSourceDetails(volumeInfo);\n                }\n            }\n        }\n        \r\n        else {\n            sourceDetails = getSourceDetails(volumeInfo);\n        }\n\n        HostVO hostVO = null;\n\n        if (hostId != null) {\n            hostVO = hostDao.findById(hostId);\n        }\n        else {\n            Optional<HostVO> optHostVO = getHost(volumeInfo.getDataCenterId(), false);\n\n            if (optHostVO.isPresent()) {\n                hostVO = optHostVO.get();\n            }\n        }\n\n        if (hostVO == null) {\n            final String errMsg = \"Unable to locate an applicable host\";\n\n            s_logger.error(\"performSnapshotAndCopyOnHostSide: \" + errMsg);\n\n            throw new CloudRuntimeException(errMsg);\n        }\n\n        long storagePoolId = volumeVO.getPoolId();\n        StoragePoolVO storagePoolVO = storagePoolDao.findById(storagePoolId);\n        DataStore dataStore = dataStoreMgr.getDataStore(storagePoolId, DataStoreRole.Primary);\n\n        Map<String, String> destDetails = getDestDetails(storagePoolVO, snapshotInfo);\n\n        SnapshotAndCopyCommand snapshotAndCopyCommand = new SnapshotAndCopyCommand(volumeInfo.getPath(), sourceDetails, destDetails);\n\n        SnapshotAndCopyAnswer snapshotAndCopyAnswer;\n\n        try {\n            \r\n            if (sourceDetails != null) {\n                volService.grantAccess(volumeInfo, hostVO, dataStore);\n            }\n\n            volService.grantAccess(snapshotInfo, hostVO, dataStore);\n\n            snapshotAndCopyAnswer = (SnapshotAndCopyAnswer)agentMgr.send(hostVO.getId(), snapshotAndCopyCommand);\n        }\n        catch (Exception ex) {\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n        finally {\n            try {\n                volService.revokeAccess(snapshotInfo, hostVO, dataStore);\n\n                \r\n                if (sourceDetails != null) {\n                    volService.revokeAccess(volumeInfo, hostVO, dataStore);\n                }\n            }\n            catch (Exception ex) {\n                s_logger.debug(ex.getMessage(), ex);\n            }\n        }\n\n        if (snapshotAndCopyAnswer == null || !snapshotAndCopyAnswer.getResult()) {\n            final String errMsg;\n\n            if (snapshotAndCopyAnswer != null && snapshotAndCopyAnswer.getDetails() != null && !snapshotAndCopyAnswer.getDetails().isEmpty()) {\n                errMsg = snapshotAndCopyAnswer.getDetails();\n            }\n            else {\n                errMsg = \"Unable to perform host-side operation\";\n            }\n\n            throw new CloudRuntimeException(errMsg);\n        }\n\n        String path = snapshotAndCopyAnswer.getPath(); \r\n\n        SnapshotDetailsVO snapshotDetail = new SnapshotDetailsVO(snapshotInfo.getId(),\n                DiskTO.PATH,\n                path,\n                false);\n\n        snapshotDetailsDao.persist(snapshotDetail);\n    }\n","realPath":"engine/storage/snapshot/src/main/java/org/apache/cloudstack/storage/snapshot/StorageSystemSnapshotStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":638,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private HostVO getHost(long volumeId) {\n        VolumeVO volumeVO = volumeDao.findById(volumeId);\n\n        Long vmInstanceId = volumeVO.getInstanceId();\n        VMInstanceVO vmInstanceVO = vmInstanceDao.findById(vmInstanceId);\n\n        Long hostId = null;\n\n        \r\n        if (vmInstanceVO != null) {\n            hostId = vmInstanceVO.getHostId();\n\n            \r\n            if (hostId == null) {\n                hostId = vmInstanceVO.getLastHostId();\n            }\n        }\n\n        return getHost(volumeVO.getDataCenterId(), hostId);\n    }\n","date":"2018-01-20 05:49:27","endLine":828,"groupId":"12748","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getHost","params":"(longvolumeId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/88/c385b4e617584a9920c5f4486623c8cdff5619.src","preCode":"    private HostVO getHost(long volumeId) {\n        VolumeVO volumeVO = volumeDao.findById(volumeId);\n\n        Long vmInstanceId = volumeVO.getInstanceId();\n        VMInstanceVO vmInstanceVO = vmInstanceDao.findById(vmInstanceId);\n\n        Long hostId = null;\n\n        \r\n        if (vmInstanceVO != null) {\n            hostId = vmInstanceVO.getHostId();\n\n            \r\n            if (hostId == null) {\n                hostId = vmInstanceVO.getLastHostId();\n            }\n        }\n\n        return getHost(volumeVO.getDataCenterId(), hostId);\n    }\n","realPath":"engine/storage/snapshot/src/main/java/org/apache/cloudstack/storage/snapshot/StorageSystemSnapshotStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":809,"status":"N"}],"commitId":"41895561a79c980966583ba27798cf46114de2c5","commitMessage":"@@@Merge branch '4.11'\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2018-03-30 18:51:06","modifiedFileCount":"2","status":"M","submitter":"Rohit Yadav"}]
