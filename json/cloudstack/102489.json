[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void execute() {\n        Pair<List<? extends VirtualMachine>, Integer> systemVMs = _mgr.searchForSystemVm(this);\n        ListResponse<SystemVmResponse> response = new ListResponse<SystemVmResponse>();\n        List<SystemVmResponse> vmResponses = new ArrayList<SystemVmResponse>();\n        for (VirtualMachine systemVM : systemVMs.first()) {\n            SystemVmResponse vmResponse = _responseGenerator.createSystemVmResponse(systemVM);\n            vmResponse.setObjectName(\"systemvm\");\n            vmResponses.add(vmResponse);\n        }\n\n        response.setResponses(vmResponses, systemVMs.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","date":"2018-01-20 05:49:27","endLine":144,"groupId":"24396","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2b/2faf50113db0c575bbd347ad895453e2ffc1b9.src","preCode":"    public void execute() {\n        Pair<List<? extends VirtualMachine>, Integer> systemVMs = _mgr.searchForSystemVm(this);\n        ListResponse<SystemVmResponse> response = new ListResponse<SystemVmResponse>();\n        List<SystemVmResponse> vmResponses = new ArrayList<SystemVmResponse>();\n        for (VirtualMachine systemVM : systemVMs.first()) {\n            SystemVmResponse vmResponse = _responseGenerator.createSystemVmResponse(systemVM);\n            vmResponse.setObjectName(\"systemvm\");\n            vmResponses.add(vmResponse);\n        }\n\n        response.setResponses(vmResponses, systemVMs.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/admin/systemvm/ListSystemVMsCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void execute() {\n        Pair<List<? extends Network>, Integer> networks = _networkService.searchForNetworks(this);\n        ListResponse<NetworkResponse> response = new ListResponse<NetworkResponse>();\n        List<NetworkResponse> networkResponses = new ArrayList<NetworkResponse>();\n        for (Network network : networks.first()) {\n            NetworkResponse networkResponse = _responseGenerator.createNetworkResponse(ResponseView.Restricted, network);\n            networkResponses.add(networkResponse);\n        }\n        response.setResponses(networkResponses, networks.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","date":"2018-01-20 05:49:27","endLine":173,"groupId":"7909","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/04/1d64170445563384e15832a0fbe4fa3cf058c9.src","preCode":"    public void execute() {\n        Pair<List<? extends Network>, Integer> networks = _networkService.searchForNetworks(this);\n        ListResponse<NetworkResponse> response = new ListResponse<NetworkResponse>();\n        List<NetworkResponse> networkResponses = new ArrayList<NetworkResponse>();\n        for (Network network : networks.first()) {\n            NetworkResponse networkResponse = _responseGenerator.createNetworkResponse(ResponseView.Restricted, network);\n            networkResponses.add(networkResponse);\n        }\n        response.setResponses(networkResponses, networks.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/network/ListNetworksCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2019-07-27 22:51:43","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void execute() {\n        Pair<List<? extends VirtualMachine>, Integer> systemVMs = _mgr.searchForSystemVm(this);\n        ListResponse<SystemVmResponse> response = new ListResponse<SystemVmResponse>();\n        List<SystemVmResponse> vmResponses = new ArrayList<SystemVmResponse>();\n        for (VirtualMachine systemVM : systemVMs.first()) {\n            SystemVmResponse vmResponse = _responseGenerator.createSystemVmResponse(systemVM);\n            vmResponse.setObjectName(\"systemvm\");\n            vmResponses.add(vmResponse);\n        }\n\n        response.setResponses(vmResponses, systemVMs.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","date":"2018-01-20 05:49:27","endLine":144,"groupId":"24396","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2b/2faf50113db0c575bbd347ad895453e2ffc1b9.src","preCode":"    public void execute() {\n        Pair<List<? extends VirtualMachine>, Integer> systemVMs = _mgr.searchForSystemVm(this);\n        ListResponse<SystemVmResponse> response = new ListResponse<SystemVmResponse>();\n        List<SystemVmResponse> vmResponses = new ArrayList<SystemVmResponse>();\n        for (VirtualMachine systemVM : systemVMs.first()) {\n            SystemVmResponse vmResponse = _responseGenerator.createSystemVmResponse(systemVM);\n            vmResponse.setObjectName(\"systemvm\");\n            vmResponses.add(vmResponse);\n        }\n\n        response.setResponses(vmResponses, systemVMs.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/admin/systemvm/ListSystemVMsCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"N"},{"authorDate":"2019-07-27 22:51:43","commitOrder":2,"curCode":"    public void execute() {\n        Pair<List<? extends Network>, Integer> networks = _networkService.searchForNetworks(this);\n        ListResponse<NetworkResponse> response = new ListResponse<NetworkResponse>();\n        List<NetworkResponse> networkResponses = new ArrayList<NetworkResponse>();\n        for (Network network : networks.first()) {\n            NetworkResponse networkResponse = _responseGenerator.createNetworkResponse(getResponseView(), network);\n            networkResponses.add(networkResponse);\n        }\n        response.setResponses(networkResponses, networks.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","date":"2019-07-27 22:51:43","endLine":174,"groupId":"10660","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b7/37212e599819962a0f987335651ec9978f3711.src","preCode":"    public void execute() {\n        Pair<List<? extends Network>, Integer> networks = _networkService.searchForNetworks(this);\n        ListResponse<NetworkResponse> response = new ListResponse<NetworkResponse>();\n        List<NetworkResponse> networkResponses = new ArrayList<NetworkResponse>();\n        for (Network network : networks.first()) {\n            NetworkResponse networkResponse = _responseGenerator.createNetworkResponse(ResponseView.Restricted, network);\n            networkResponses.add(networkResponse);\n        }\n        response.setResponses(networkResponses, networks.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/network/ListNetworksCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"7a27e35a612f13a0ce43459b22e01d9b69627220","commitMessage":"@@@Refactoring to remove duplicate code. (#3152)\n\nMake use of Java 8 default implementation in interfaces. \nto remove code duplication between XxxCmd and XxxCmdAsAdmin.\n\nRefactor checkFormat by pre-calculating the supported\nextensions. Also make use of this in ImageStoreUtil.\nMakes it easier to add new file and compression formats.\n","date":"2019-07-27 22:51:43","modifiedFileCount":"111","status":"M","submitter":"Frank Maximus"},{"authorTime":"2019-08-02 20:19:44","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    public void execute() {\n        Pair<List<? extends VirtualMachine>, Integer> systemVMs = _mgr.searchForSystemVm(this);\n        ListResponse<SystemVmResponse> response = new ListResponse<SystemVmResponse>();\n        List<SystemVmResponse> vmResponses = new ArrayList<SystemVmResponse>();\n        for (VirtualMachine systemVM : systemVMs.first()) {\n            SystemVmResponse vmResponse = _responseGenerator.createSystemVmResponse(systemVM);\n            vmResponse.setObjectName(\"systemvm\");\n            vmResponses.add(vmResponse);\n        }\n\n        response.setResponses(vmResponses, systemVMs.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","date":"2018-01-20 05:49:27","endLine":144,"groupId":"24396","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2b/2faf50113db0c575bbd347ad895453e2ffc1b9.src","preCode":"    public void execute() {\n        Pair<List<? extends VirtualMachine>, Integer> systemVMs = _mgr.searchForSystemVm(this);\n        ListResponse<SystemVmResponse> response = new ListResponse<SystemVmResponse>();\n        List<SystemVmResponse> vmResponses = new ArrayList<SystemVmResponse>();\n        for (VirtualMachine systemVM : systemVMs.first()) {\n            SystemVmResponse vmResponse = _responseGenerator.createSystemVmResponse(systemVM);\n            vmResponse.setObjectName(\"systemvm\");\n            vmResponses.add(vmResponse);\n        }\n\n        response.setResponses(vmResponses, systemVMs.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/admin/systemvm/ListSystemVMsCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"N"},{"authorDate":"2019-08-02 20:19:44","commitOrder":3,"curCode":"    public void execute() {\n        Pair<List<? extends Network>, Integer> networks = _networkService.searchForNetworks(this);\n        ListResponse<NetworkResponse> response = new ListResponse<NetworkResponse>();\n        List<NetworkResponse> networkResponses = new ArrayList<NetworkResponse>();\n        for (Network network : networks.first()) {\n            NetworkResponse networkResponse = _responseGenerator.createNetworkResponse(ResponseView.Restricted, network);\n            networkResponses.add(networkResponse);\n        }\n        response.setResponses(networkResponses, networks.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","date":"2019-08-02 20:19:44","endLine":173,"groupId":"7909","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a6/1c59734c600b5ceb946483d95052741d8398ac.src","preCode":"    public void execute() {\n        Pair<List<? extends Network>, Integer> networks = _networkService.searchForNetworks(this);\n        ListResponse<NetworkResponse> response = new ListResponse<NetworkResponse>();\n        List<NetworkResponse> networkResponses = new ArrayList<NetworkResponse>();\n        for (Network network : networks.first()) {\n            NetworkResponse networkResponse = _responseGenerator.createNetworkResponse(getResponseView(), network);\n            networkResponses.add(networkResponse);\n        }\n        response.setResponses(networkResponses, networks.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/network/ListNetworksCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"3dad7f313404546a7a6f46951e44c91240df5b84","commitMessage":"@@@Merge pull request #3537 from shapeblue/upload-iso-template-fix\n\nRevert #3152","date":"2019-08-02 20:19:44","modifiedFileCount":"111","status":"M","submitter":"Andrija Panic"},{"authorTime":"2019-09-25 12:51:35","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":4,"curCode":"    public void execute() {\n        Pair<List<? extends VirtualMachine>, Integer> systemVMs = _mgr.searchForSystemVm(this);\n        ListResponse<SystemVmResponse> response = new ListResponse<SystemVmResponse>();\n        List<SystemVmResponse> vmResponses = new ArrayList<SystemVmResponse>();\n        for (VirtualMachine systemVM : systemVMs.first()) {\n            SystemVmResponse vmResponse = _responseGenerator.createSystemVmResponse(systemVM);\n            vmResponse.setObjectName(\"systemvm\");\n            vmResponses.add(vmResponse);\n        }\n\n        response.setResponses(vmResponses, systemVMs.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","date":"2018-01-20 05:49:27","endLine":144,"groupId":"24396","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2b/2faf50113db0c575bbd347ad895453e2ffc1b9.src","preCode":"    public void execute() {\n        Pair<List<? extends VirtualMachine>, Integer> systemVMs = _mgr.searchForSystemVm(this);\n        ListResponse<SystemVmResponse> response = new ListResponse<SystemVmResponse>();\n        List<SystemVmResponse> vmResponses = new ArrayList<SystemVmResponse>();\n        for (VirtualMachine systemVM : systemVMs.first()) {\n            SystemVmResponse vmResponse = _responseGenerator.createSystemVmResponse(systemVM);\n            vmResponse.setObjectName(\"systemvm\");\n            vmResponses.add(vmResponse);\n        }\n\n        response.setResponses(vmResponses, systemVMs.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/admin/systemvm/ListSystemVMsCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"N"},{"authorDate":"2019-09-25 12:51:35","commitOrder":4,"curCode":"    public void execute() {\n        Pair<List<? extends Network>, Integer> networks = _networkService.searchForNetworks(this);\n        ListResponse<NetworkResponse> response = new ListResponse<NetworkResponse>();\n        List<NetworkResponse> networkResponses = new ArrayList<NetworkResponse>();\n        for (Network network : networks.first()) {\n            NetworkResponse networkResponse = _responseGenerator.createNetworkResponse(getResponseView(), network);\n            networkResponses.add(networkResponse);\n        }\n        response.setResponses(networkResponses, networks.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","date":"2019-09-25 12:51:35","endLine":174,"groupId":"10660","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b7/37212e599819962a0f987335651ec9978f3711.src","preCode":"    public void execute() {\n        Pair<List<? extends Network>, Integer> networks = _networkService.searchForNetworks(this);\n        ListResponse<NetworkResponse> response = new ListResponse<NetworkResponse>();\n        List<NetworkResponse> networkResponses = new ArrayList<NetworkResponse>();\n        for (Network network : networks.first()) {\n            NetworkResponse networkResponse = _responseGenerator.createNetworkResponse(ResponseView.Restricted, network);\n            networkResponses.add(networkResponse);\n        }\n        response.setResponses(networkResponses, networks.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/network/ListNetworksCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"7f91964aa918657c77156915020c24d496658e5d","commitMessage":"@@@refactoring: Remove duplicate code (by Frank/Nuage) (#3538)\n\nRefactor: Cleanup duplicate code\n\nMake use of Java 8 default implementation in interfaces. \nto remove code duplication between XxxCmd and XxxCmdAsAdmin.\nRefactor checkFormat by pre-calculating the supported\nextensions. Also make use of this in ImageStoreUtil.\nMakes it easier to add new file and compression formats.","date":"2019-09-25 12:51:35","modifiedFileCount":"112","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2021-09-15 11:50:42","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":5,"curCode":"    public void execute() {\n        Pair<List<? extends VirtualMachine>, Integer> systemVMs = _mgr.searchForSystemVm(this);\n        ListResponse<SystemVmResponse> response = new ListResponse<SystemVmResponse>();\n        List<SystemVmResponse> vmResponses = new ArrayList<SystemVmResponse>();\n        for (VirtualMachine systemVM : systemVMs.first()) {\n            SystemVmResponse vmResponse = _responseGenerator.createSystemVmResponse(systemVM);\n            vmResponse.setObjectName(\"systemvm\");\n            vmResponses.add(vmResponse);\n        }\n\n        response.setResponses(vmResponses, systemVMs.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","date":"2018-01-20 05:49:27","endLine":144,"groupId":"102489","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2b/2faf50113db0c575bbd347ad895453e2ffc1b9.src","preCode":"    public void execute() {\n        Pair<List<? extends VirtualMachine>, Integer> systemVMs = _mgr.searchForSystemVm(this);\n        ListResponse<SystemVmResponse> response = new ListResponse<SystemVmResponse>();\n        List<SystemVmResponse> vmResponses = new ArrayList<SystemVmResponse>();\n        for (VirtualMachine systemVM : systemVMs.first()) {\n            SystemVmResponse vmResponse = _responseGenerator.createSystemVmResponse(systemVM);\n            vmResponse.setObjectName(\"systemvm\");\n            vmResponses.add(vmResponse);\n        }\n\n        response.setResponses(vmResponses, systemVMs.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/admin/systemvm/ListSystemVMsCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"N"},{"authorDate":"2021-09-15 11:50:42","commitOrder":5,"curCode":"    public void execute() {\n        Pair<List<? extends Network>, Integer> networks = _networkService.searchForNetworks(this);\n        ListResponse<NetworkResponse> response = new ListResponse<NetworkResponse>();\n        List<NetworkResponse> networkResponses = new ArrayList<NetworkResponse>();\n        for (Network network : networks.first()) {\n            NetworkResponse networkResponse = _responseGenerator.createNetworkResponse(getResponseView(), network);\n            networkResponses.add(networkResponse);\n        }\n        response.setResponses(networkResponses, networks.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n        if (response != null && response.getCount() > 0 && getShowIcon()) {\n            updateNetworkResponse(response.getResponses());\n        }\n    }\n","date":"2021-09-15 11:50:42","endLine":204,"groupId":"102489","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/51/49d4e7af6884ce06a32cfdc5b91a62854667fe.src","preCode":"    public void execute() {\n        Pair<List<? extends Network>, Integer> networks = _networkService.searchForNetworks(this);\n        ListResponse<NetworkResponse> response = new ListResponse<NetworkResponse>();\n        List<NetworkResponse> networkResponses = new ArrayList<NetworkResponse>();\n        for (Network network : networks.first()) {\n            NetworkResponse networkResponse = _responseGenerator.createNetworkResponse(getResponseView(), network);\n            networkResponses.add(networkResponse);\n        }\n        response.setResponses(networkResponses, networks.second());\n        response.setResponseName(getCommandName());\n        setResponseObject(response);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/network/ListNetworksCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"}],"commitId":"3f827ef22bfa76439fcedc4c191204ac69f8d1f4","commitMessage":"@@@UI: Support to upload resource icons (#5157)\n\n* Resource Icon support - backend\n\n* Add API support for resourceicon\n\n* update reponse params + ui support\n\n* Add exclusive list api for icons and UI changes\n\n* refactor upload view\n\n* UI changes to support resource icon wherever necessary\n\n* convert api to POST + refactor icon view\n\n* Add response name to list API + cosmetic changes in UI\n\n* Added support for the following:\nresource icon support for vpcs.  networks.  domains.  and projects\nadd icons to list view if reosurces support icons to be added\nsupport for showing project icons in the project switching drop-down menu\n\n* List resourceicon cmds to be allowed for user role too\nUsers to inherit account icon if present (in listUsers response)\nMove common code to plugin.js\nAdd icon to project list view - while switching between projects - Dashboard page\nShow icons against zones - Capacity Dashboard view\nShow user / account icon at the login button if present\n\n* cosmetic changes\n\n* optimize ui code\n\n* fix reload issue for domain view\n\n* add access check for delete operation\n\n* ui-related changes to show iso icons\n\n* iso image in uservm response\n\n* add icons to custom form's list resources\n\n* some more custom forms aligned to show icon for resources\n\n* conmitic changes + add listing of icons to listdomainchildren cmd\n\n* Add backend/server-side validation for base64 string passed for image\n\n* change preview border\n\n* preselect zone if there's only one\n\n* add default icon\n\n* show icon for network list in deploy vm view\n\n* add custom icons if any to the import-export VM view\n\n* preselect zone persistence on clearing cache\n\n* prevent root vol from inheriting template/iso icon\n\n* show tempalte icon in the info card details\n\n* fix icon not being show on hard-refresh / initial traversal\n\n* fx success message","date":"2021-09-15 11:50:42","modifiedFileCount":"47","status":"M","submitter":"Pearl Dsilva"}]
