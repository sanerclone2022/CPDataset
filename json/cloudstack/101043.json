[{"authorTime":"2019-01-23 20:05:16","codes":[{"authorDate":"2019-01-23 20:05:16","commitOrder":1,"curCode":"    public void assertSourceNatImplementedNetwork() {\n\n        NetworkVO networkImplemented = Mockito.mock(NetworkVO.class);\n        when(networkImplemented.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        when(networkImplemented.getNetworkOfferingId()).thenReturn(8L);\n        when(networkImplemented.getState()).thenReturn(Network.State.Implemented);\n        when(networkImplemented.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkImplemented.getVpcId()).thenReturn(null);\n        when(networkImplemented.getId()).thenReturn(1L);\n\n        Mockito.when(networkDao.findById(1L)).thenReturn(networkImplemented);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 1L);\n\n        boolean isSourceNat = ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkImplemented);\n\n        assertTrue(\"Source NAT should be true\", isSourceNat);\n    }\n","date":"2019-01-23 20:05:16","endLine":171,"groupId":"10873","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertSourceNatImplementedNetwork","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/09/519b9f18866f3995eea606300b97a588f02257.src","preCode":"    public void assertSourceNatImplementedNetwork() {\n\n        NetworkVO networkImplemented = Mockito.mock(NetworkVO.class);\n        when(networkImplemented.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        when(networkImplemented.getNetworkOfferingId()).thenReturn(8L);\n        when(networkImplemented.getState()).thenReturn(Network.State.Implemented);\n        when(networkImplemented.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkImplemented.getVpcId()).thenReturn(null);\n        when(networkImplemented.getId()).thenReturn(1L);\n\n        Mockito.when(networkDao.findById(1L)).thenReturn(networkImplemented);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 1L);\n\n        boolean isSourceNat = ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkImplemented);\n\n        assertTrue(\"Source NAT should be true\", isSourceNat);\n    }\n","realPath":"server/src/test/java/com/cloud/network/IpAddressManagerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"},{"authorDate":"2019-01-23 20:05:16","commitOrder":1,"curCode":"    public void assertSourceNatAllocatedNetwork() {\n\n        NetworkVO networkAllocated = Mockito.mock(NetworkVO.class);\n        when(networkAllocated.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        when(networkAllocated.getNetworkOfferingId()).thenReturn(8L);\n        when(networkAllocated.getState()).thenReturn(Network.State.Allocated);\n        when(networkAllocated.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkAllocated.getVpcId()).thenReturn(null);\n        when(networkAllocated.getId()).thenReturn(2L);\n\n        Mockito.when(networkDao.findById(2L)).thenReturn(networkAllocated);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 2L);\n\n        ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkAllocated);\n    }\n","date":"2019-01-23 20:05:16","endLine":188,"groupId":"10873","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSourceNatAllocatedNetwork","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/09/519b9f18866f3995eea606300b97a588f02257.src","preCode":"    public void assertSourceNatAllocatedNetwork() {\n\n        NetworkVO networkAllocated = Mockito.mock(NetworkVO.class);\n        when(networkAllocated.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        when(networkAllocated.getNetworkOfferingId()).thenReturn(8L);\n        when(networkAllocated.getState()).thenReturn(Network.State.Allocated);\n        when(networkAllocated.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkAllocated.getVpcId()).thenReturn(null);\n        when(networkAllocated.getId()).thenReturn(2L);\n\n        Mockito.when(networkDao.findById(2L)).thenReturn(networkAllocated);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 2L);\n\n        ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkAllocated);\n    }\n","realPath":"server/src/test/java/com/cloud/network/IpAddressManagerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"B"}],"commitId":"323f791efca6f1d5b8bb63573d9e385c97c427e1","commitMessage":"@@@IP address acquired with associate ip address is marked as source nat (#3125)\n\n* CLOUDSTACK-4045 added a check for network state when determining whether a new IP should be source NAT. this prevents associated IP's to be marked as source NAT when the network is in allocated state.  causing disassociateIpAddress to fail later\n\n* Remove mock object that cause other tests to fail\n\n* Remove underscores from variable types and add documentation for the created method\n\n* Improve exception message to include network name\n\n* Include network UUID with the Exception message and fix failing marvin test\n\n* Rebase against latest master and format AssociateIPAddrCmd class\n","date":"2019-01-23 20:05:16","modifiedFileCount":"3","status":"B","submitter":"Dingane Hlaluku"},{"authorTime":"2019-07-14 19:53:11","codes":[{"authorDate":"2019-01-23 20:05:16","commitOrder":2,"curCode":"    public void assertSourceNatImplementedNetwork() {\n\n        NetworkVO networkImplemented = Mockito.mock(NetworkVO.class);\n        when(networkImplemented.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        when(networkImplemented.getNetworkOfferingId()).thenReturn(8L);\n        when(networkImplemented.getState()).thenReturn(Network.State.Implemented);\n        when(networkImplemented.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkImplemented.getVpcId()).thenReturn(null);\n        when(networkImplemented.getId()).thenReturn(1L);\n\n        Mockito.when(networkDao.findById(1L)).thenReturn(networkImplemented);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 1L);\n\n        boolean isSourceNat = ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkImplemented);\n\n        assertTrue(\"Source NAT should be true\", isSourceNat);\n    }\n","date":"2019-01-23 20:05:16","endLine":171,"groupId":"10873","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertSourceNatImplementedNetwork","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/09/519b9f18866f3995eea606300b97a588f02257.src","preCode":"    public void assertSourceNatImplementedNetwork() {\n\n        NetworkVO networkImplemented = Mockito.mock(NetworkVO.class);\n        when(networkImplemented.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        when(networkImplemented.getNetworkOfferingId()).thenReturn(8L);\n        when(networkImplemented.getState()).thenReturn(Network.State.Implemented);\n        when(networkImplemented.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkImplemented.getVpcId()).thenReturn(null);\n        when(networkImplemented.getId()).thenReturn(1L);\n\n        Mockito.when(networkDao.findById(1L)).thenReturn(networkImplemented);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 1L);\n\n        boolean isSourceNat = ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkImplemented);\n\n        assertTrue(\"Source NAT should be true\", isSourceNat);\n    }\n","realPath":"server/src/test/java/com/cloud/network/IpAddressManagerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"N"},{"authorDate":"2019-07-14 19:53:11","commitOrder":2,"curCode":"    public void assertSourceNatAllocatedNetwork() {\n\n        NetworkVO networkAllocated = Mockito.mock(NetworkVO.class);\n        when(networkAllocated.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        when(networkAllocated.getNetworkOfferingId()).thenReturn(8L);\n        when(networkAllocated.getState()).thenReturn(Network.State.Allocated);\n        when(networkAllocated.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkAllocated.getVpcId()).thenReturn(null);\n        when(networkAllocated.getId()).thenReturn(2L);\n\n        Mockito.when(networkDao.findById(2L)).thenReturn(networkAllocated);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 2L);\n\n        assertTrue(ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkAllocated));\n    }\n","date":"2019-07-14 19:53:11","endLine":187,"groupId":"10873","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertSourceNatAllocatedNetwork","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/74/deb2d3a995a382b95fdcc881dd0a0c0aebf8a3.src","preCode":"    public void assertSourceNatAllocatedNetwork() {\n\n        NetworkVO networkAllocated = Mockito.mock(NetworkVO.class);\n        when(networkAllocated.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        when(networkAllocated.getNetworkOfferingId()).thenReturn(8L);\n        when(networkAllocated.getState()).thenReturn(Network.State.Allocated);\n        when(networkAllocated.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkAllocated.getVpcId()).thenReturn(null);\n        when(networkAllocated.getId()).thenReturn(2L);\n\n        Mockito.when(networkDao.findById(2L)).thenReturn(networkAllocated);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 2L);\n\n        ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkAllocated);\n    }\n","realPath":"server/src/test/java/com/cloud/network/IpAddressManagerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"98e84e372fbe57339f1d657708c14f00012e7294","commitMessage":"@@@server: fix public IP association/disassociation to new network (#3489)\n\nFixes #3321\n\nThis changes removes exception throwing while associating an IP address to a new isolated network which is in Allocated state. And it allows disassociating an IP address when it is used for source NAT purpose but network is in allocated state.\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>\n","date":"2019-07-14 19:53:11","modifiedFileCount":"3","status":"M","submitter":"Abhishek Kumar"},{"authorTime":"2020-02-12 15:28:25","codes":[{"authorDate":"2020-02-12 15:28:25","commitOrder":3,"curCode":"    public void assertSourceNatImplementedNetwork() {\n\n        NetworkVO networkImplemented = Mockito.mock(NetworkVO.class);\n        lenient().when(networkImplemented.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        lenient().when(networkImplemented.getNetworkOfferingId()).thenReturn(8L);\n        lenient().when(networkImplemented.getState()).thenReturn(Network.State.Implemented);\n        when(networkImplemented.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkImplemented.getVpcId()).thenReturn(null);\n        when(networkImplemented.getId()).thenReturn(1L);\n\n        Mockito.lenient().when(networkDao.findById(1L)).thenReturn(networkImplemented);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 1L);\n\n        boolean isSourceNat = ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkImplemented);\n\n        assertTrue(\"Source NAT should be true\", isSourceNat);\n    }\n","date":"2020-02-12 15:28:25","endLine":171,"groupId":"101043","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"assertSourceNatImplementedNetwork","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3c/f550ae88223094fbfa13de12182f91da3d826b.src","preCode":"    public void assertSourceNatImplementedNetwork() {\n\n        NetworkVO networkImplemented = Mockito.mock(NetworkVO.class);\n        when(networkImplemented.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        when(networkImplemented.getNetworkOfferingId()).thenReturn(8L);\n        when(networkImplemented.getState()).thenReturn(Network.State.Implemented);\n        when(networkImplemented.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkImplemented.getVpcId()).thenReturn(null);\n        when(networkImplemented.getId()).thenReturn(1L);\n\n        Mockito.when(networkDao.findById(1L)).thenReturn(networkImplemented);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 1L);\n\n        boolean isSourceNat = ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkImplemented);\n\n        assertTrue(\"Source NAT should be true\", isSourceNat);\n    }\n","realPath":"server/src/test/java/com/cloud/network/IpAddressManagerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"},{"authorDate":"2020-02-12 15:28:25","commitOrder":3,"curCode":"    public void assertSourceNatAllocatedNetwork() {\n\n        NetworkVO networkAllocated = Mockito.mock(NetworkVO.class);\n        lenient().when(networkAllocated.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        when(networkAllocated.getNetworkOfferingId()).thenReturn(8L);\n        lenient().when(networkAllocated.getState()).thenReturn(Network.State.Allocated);\n        when(networkAllocated.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkAllocated.getVpcId()).thenReturn(null);\n        when(networkAllocated.getId()).thenReturn(2L);\n\n        Mockito.lenient().when(networkDao.findById(2L)).thenReturn(networkAllocated);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 2L);\n\n        assertTrue(ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkAllocated));\n    }\n","date":"2020-02-12 15:28:25","endLine":188,"groupId":"101043","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"assertSourceNatAllocatedNetwork","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3c/f550ae88223094fbfa13de12182f91da3d826b.src","preCode":"    public void assertSourceNatAllocatedNetwork() {\n\n        NetworkVO networkAllocated = Mockito.mock(NetworkVO.class);\n        when(networkAllocated.getTrafficType()).thenReturn(Networks.TrafficType.Guest);\n        when(networkAllocated.getNetworkOfferingId()).thenReturn(8L);\n        when(networkAllocated.getState()).thenReturn(Network.State.Allocated);\n        when(networkAllocated.getGuestType()).thenReturn(Network.GuestType.Isolated);\n        when(networkAllocated.getVpcId()).thenReturn(null);\n        when(networkAllocated.getId()).thenReturn(2L);\n\n        Mockito.when(networkDao.findById(2L)).thenReturn(networkAllocated);\n        doReturn(null).when(ipAddressManager).getExistingSourceNatInNetwork(1L, 2L);\n\n        assertTrue(ipAddressManager.isSourceNatAvailableForNetwork(account, ipAddressVO, networkAllocated));\n    }\n","realPath":"server/src/test/java/com/cloud/network/IpAddressManagerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
