[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (answer == null || !answer.getResult()) {\n            if (answer != null) {\n                s_logger.warn(\"Unable to ssh to the VM: \" + answer.getDetails());\n            } else {\n                s_logger.warn(\"Unable to ssh to the VM: null answer\");\n            }\n            return false;\n        }\n\n        try {\n            \r\n            _rulesMgr.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = _ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                ConsoleProxyVO consoleVm = _consoleProxyDao.findById(profile.getId());\n                \r\n                consoleVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                _consoleProxyDao.update(consoleVm.getId(), consoleVm);\n            }\n        } catch (Exception ex) {\n            s_logger.warn(\"Failed to get system ip and enable static nat for the vm \" + profile.getVirtualMachine() + \" due to exception \", ex);\n            return false;\n        }\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":1510,"groupId":"23631","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"finalizeStart","params":"(VirtualMachineProfileprofile@longhostId@Commandscmds@ReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/28/fff3c7219cceb44a61a820fcddfdef364d7f89.src","preCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (answer == null || !answer.getResult()) {\n            if (answer != null) {\n                s_logger.warn(\"Unable to ssh to the VM: \" + answer.getDetails());\n            } else {\n                s_logger.warn(\"Unable to ssh to the VM: null answer\");\n            }\n            return false;\n        }\n\n        try {\n            \r\n            _rulesMgr.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = _ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                ConsoleProxyVO consoleVm = _consoleProxyDao.findById(profile.getId());\n                \r\n                consoleVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                _consoleProxyDao.update(consoleVm.getId(), consoleVm);\n            }\n        } catch (Exception ex) {\n            s_logger.warn(\"Failed to get system ip and enable static nat for the vm \" + profile.getVirtualMachine() + \" due to exception \", ex);\n            return false;\n        }\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/consoleproxy/ConsoleProxyManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1483,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (!answer.getResult()) {\n            s_logger.warn(\"Unable to ssh to the VM: \" + answer.getDetails());\n            return false;\n        }\n\n        try {\n            \r\n            _rulesMgr.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = _ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                SecondaryStorageVmVO secVm = _secStorageVmDao.findById(profile.getId());\n                \r\n                secVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                _secStorageVmDao.update(secVm.getId(), secVm);\n            }\n        } catch (Exception ex) {\n            s_logger.warn(\"Failed to get system ip and enable static nat for the vm \" + profile.getVirtualMachine() + \" due to exception \", ex);\n            return false;\n        }\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":1291,"groupId":"23631","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"finalizeStart","params":"(VirtualMachineProfileprofile@longhostId@Commandscmds@ReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a1/58c9c0e6824403a7fc6575a694f76829e8889a.src","preCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (!answer.getResult()) {\n            s_logger.warn(\"Unable to ssh to the VM: \" + answer.getDetails());\n            return false;\n        }\n\n        try {\n            \r\n            _rulesMgr.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = _ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                SecondaryStorageVmVO secVm = _secStorageVmDao.findById(profile.getId());\n                \r\n                secVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                _secStorageVmDao.update(secVm.getId(), secVm);\n            }\n        } catch (Exception ex) {\n            s_logger.warn(\"Failed to get system ip and enable static nat for the vm \" + profile.getVirtualMachine() + \" due to exception \", ex);\n            return false;\n        }\n\n        return true;\n    }\n","realPath":"services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1268,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2021-05-10 15:47:42","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (answer == null || !answer.getResult()) {\n            if (answer != null) {\n                s_logger.warn(\"Unable to ssh to the VM: \" + answer.getDetails());\n            } else {\n                s_logger.warn(\"Unable to ssh to the VM: null answer\");\n            }\n            return false;\n        }\n\n        try {\n            \r\n            _rulesMgr.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = _ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                ConsoleProxyVO consoleVm = _consoleProxyDao.findById(profile.getId());\n                \r\n                consoleVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                _consoleProxyDao.update(consoleVm.getId(), consoleVm);\n            }\n        } catch (Exception ex) {\n            s_logger.warn(\"Failed to get system ip and enable static nat for the vm \" + profile.getVirtualMachine() + \" due to exception \", ex);\n            return false;\n        }\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":1510,"groupId":"23631","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"finalizeStart","params":"(VirtualMachineProfileprofile@longhostId@Commandscmds@ReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/28/fff3c7219cceb44a61a820fcddfdef364d7f89.src","preCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (answer == null || !answer.getResult()) {\n            if (answer != null) {\n                s_logger.warn(\"Unable to ssh to the VM: \" + answer.getDetails());\n            } else {\n                s_logger.warn(\"Unable to ssh to the VM: null answer\");\n            }\n            return false;\n        }\n\n        try {\n            \r\n            _rulesMgr.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = _ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                ConsoleProxyVO consoleVm = _consoleProxyDao.findById(profile.getId());\n                \r\n                consoleVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                _consoleProxyDao.update(consoleVm.getId(), consoleVm);\n            }\n        } catch (Exception ex) {\n            s_logger.warn(\"Failed to get system ip and enable static nat for the vm \" + profile.getVirtualMachine() + \" due to exception \", ex);\n            return false;\n        }\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/consoleproxy/ConsoleProxyManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1483,"status":"N"},{"authorDate":"2021-05-10 15:47:42","commitOrder":2,"curCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (!answer.getResult()) {\n            s_logger.warn(String.format(\"Unable to connect via SSH to the VM [%s] due to [%s] \", profile.toString(), answer.getDetails()));\n            return false;\n        }\n\n        try {\n            _rulesMgr.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = _ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                SecondaryStorageVmVO secVm = _secStorageVmDao.findById(profile.getId());\n                secVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                _secStorageVmDao.update(secVm.getId(), secVm);\n            }\n        } catch (InsufficientAddressCapacityException ex) {\n            s_logger.error(String.format(\"Failed to get system IP and enable static NAT for the VM [%s] due to [%s].\", profile.toString(), ex.getMessage()), ex);\n            return false;\n        }\n\n        return true;\n    }\n","date":"2021-05-10 15:47:42","endLine":1241,"groupId":"21451","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"finalizeStart","params":"(VirtualMachineProfileprofile@longhostId@Commandscmds@ReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/85/f8bbb803bc65cb60ba132e109ff04fc94b63b5.src","preCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (!answer.getResult()) {\n            s_logger.warn(\"Unable to ssh to the VM: \" + answer.getDetails());\n            return false;\n        }\n\n        try {\n            \r\n            _rulesMgr.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = _ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                SecondaryStorageVmVO secVm = _secStorageVmDao.findById(profile.getId());\n                \r\n                secVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                _secStorageVmDao.update(secVm.getId(), secVm);\n            }\n        } catch (Exception ex) {\n            s_logger.warn(\"Failed to get system ip and enable static nat for the vm \" + profile.getVirtualMachine() + \" due to exception \", ex);\n            return false;\n        }\n\n        return true;\n    }\n","realPath":"services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1220,"status":"M"}],"commitId":"3674e80219d0be9e940bd948060fa10a467e4b7e","commitMessage":"@@@Improve logs on SecondaryStorageManagerImpl and few refactors (#4955)\n\nCo-authored-by: Daniel Augusto Veronezi Salvador <daniel@scclouds.com.br>","date":"2021-05-10 15:47:42","modifiedFileCount":"4","status":"M","submitter":"Daniel Augusto Veronezi Salvador"},{"authorTime":"2021-05-10 15:47:42","codes":[{"authorDate":"2021-07-28 06:56:14","commitOrder":3,"curCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (answer == null || !answer.getResult()) {\n            s_logger.warn(String.format(\"Unable to use SSH on the VM [%s] due to [%s].\", profile.toString(), answer == null ? \"null answer\" : answer.getDetails()));\n            return false;\n        }\n\n        try {\n            rulesManager.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                ConsoleProxyVO consoleVm = consoleProxyDao.findById(profile.getId());\n                consoleVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                consoleProxyDao.update(consoleVm.getId(), consoleVm);\n            }\n        } catch (InsufficientAddressCapacityException ex) {\n            s_logger.warn(String.format(\"Unable to retrieve system IP and enable static NAT for the VM [%s] due to [%s].\", profile.toString(), ex.getMessage()), ex);\n            return false;\n        }\n\n        return true;\n    }\n","date":"2021-07-28 06:56:14","endLine":1358,"groupId":"101994","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"finalizeStart","params":"(VirtualMachineProfileprofile@longhostId@Commandscmds@ReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/6c/c0ace1e05600559e196cd0be536313c3c1cd80.src","preCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (answer == null || !answer.getResult()) {\n            if (answer != null) {\n                s_logger.warn(\"Unable to ssh to the VM: \" + answer.getDetails());\n            } else {\n                s_logger.warn(\"Unable to ssh to the VM: null answer\");\n            }\n            return false;\n        }\n\n        try {\n            \r\n            _rulesMgr.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = _ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                ConsoleProxyVO consoleVm = _consoleProxyDao.findById(profile.getId());\n                \r\n                consoleVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                _consoleProxyDao.update(consoleVm.getId(), consoleVm);\n            }\n        } catch (Exception ex) {\n            s_logger.warn(\"Failed to get system ip and enable static nat for the vm \" + profile.getVirtualMachine() + \" due to exception \", ex);\n            return false;\n        }\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/consoleproxy/ConsoleProxyManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1337,"status":"M"},{"authorDate":"2021-05-10 15:47:42","commitOrder":3,"curCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (!answer.getResult()) {\n            s_logger.warn(String.format(\"Unable to connect via SSH to the VM [%s] due to [%s] \", profile.toString(), answer.getDetails()));\n            return false;\n        }\n\n        try {\n            _rulesMgr.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = _ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                SecondaryStorageVmVO secVm = _secStorageVmDao.findById(profile.getId());\n                secVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                _secStorageVmDao.update(secVm.getId(), secVm);\n            }\n        } catch (InsufficientAddressCapacityException ex) {\n            s_logger.error(String.format(\"Failed to get system IP and enable static NAT for the VM [%s] due to [%s].\", profile.toString(), ex.getMessage()), ex);\n            return false;\n        }\n\n        return true;\n    }\n","date":"2021-05-10 15:47:42","endLine":1241,"groupId":"101994","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"finalizeStart","params":"(VirtualMachineProfileprofile@longhostId@Commandscmds@ReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/85/f8bbb803bc65cb60ba132e109ff04fc94b63b5.src","preCode":"    public boolean finalizeStart(VirtualMachineProfile profile, long hostId, Commands cmds, ReservationContext context) {\n        CheckSshAnswer answer = (CheckSshAnswer)cmds.getAnswer(\"checkSsh\");\n        if (!answer.getResult()) {\n            s_logger.warn(String.format(\"Unable to connect via SSH to the VM [%s] due to [%s] \", profile.toString(), answer.getDetails()));\n            return false;\n        }\n\n        try {\n            _rulesMgr.getSystemIpAndEnableStaticNatForVm(profile.getVirtualMachine(), false);\n            IPAddressVO ipaddr = _ipAddressDao.findByAssociatedVmId(profile.getVirtualMachine().getId());\n            if (ipaddr != null && ipaddr.getSystem()) {\n                SecondaryStorageVmVO secVm = _secStorageVmDao.findById(profile.getId());\n                secVm.setPublicIpAddress(ipaddr.getAddress().addr());\n                _secStorageVmDao.update(secVm.getId(), secVm);\n            }\n        } catch (InsufficientAddressCapacityException ex) {\n            s_logger.error(String.format(\"Failed to get system IP and enable static NAT for the VM [%s] due to [%s].\", profile.toString(), ex.getMessage()), ex);\n            return false;\n        }\n\n        return true;\n    }\n","realPath":"services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1220,"status":"N"}],"commitId":"1f5ee5b3e3855c7f46d7e850465a8a0ec3a5c19c","commitMessage":"@@@Improve logs on ConsoleProxyManagerImpl and refactor a few process (#4959)\n\n","date":"2021-07-28 06:56:14","modifiedFileCount":"3","status":"M","submitter":"Daniel Augusto Veronezi Salvador"}]
