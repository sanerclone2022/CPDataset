[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private String getMountPoint(String storageUrl) {\n        String mountPoint = null;\n        synchronized (_storageMounts) {\n            mountPoint = _storageMounts.get(storageUrl);\n            if (mountPoint != null) {\n                return mountPoint;\n            }\n\n            URI uri;\n            try {\n                uri = new URI(storageUrl);\n            } catch (URISyntaxException e) {\n                s_logger.error(\"Invalid storage URL format \", e);\n                throw new CloudRuntimeException(\"Unable to create mount point due to invalid storage URL format \" + storageUrl);\n            }\n\n            mountPoint = mount(File.separator + File.separator + uri.getHost() + uri.getPath(), getMountParent(),\n                uri.getScheme(), uri.getQuery());\n            if (mountPoint == null) {\n                s_logger.error(\"Unable to create mount point for \" + storageUrl);\n                return \"/mnt/sec\";\n            }\n\n            _storageMounts.put(storageUrl, mountPoint);\n            return mountPoint;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":222,"groupId":"23683","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getMountPoint","params":"(StringstorageUrl)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9d/63726d3474b358705ab6800d56fabb11436575.src","preCode":"    private String getMountPoint(String storageUrl) {\n        String mountPoint = null;\n        synchronized (_storageMounts) {\n            mountPoint = _storageMounts.get(storageUrl);\n            if (mountPoint != null) {\n                return mountPoint;\n            }\n\n            URI uri;\n            try {\n                uri = new URI(storageUrl);\n            } catch (URISyntaxException e) {\n                s_logger.error(\"Invalid storage URL format \", e);\n                throw new CloudRuntimeException(\"Unable to create mount point due to invalid storage URL format \" + storageUrl);\n            }\n\n            mountPoint = mount(File.separator + File.separator + uri.getHost() + uri.getPath(), getMountParent(),\n                uri.getScheme(), uri.getQuery());\n            if (mountPoint == null) {\n                s_logger.error(\"Unable to create mount point for \" + storageUrl);\n                return \"/mnt/sec\";\n            }\n\n            _storageMounts.put(storageUrl, mountPoint);\n            return mountPoint;\n        }\n    }\n","realPath":"plugins/hypervisors/hyperv/src/main/java/com/cloud/hypervisor/hyperv/manager/HypervManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public String getMountPoint(String storageUrl, Integer nfsVersion) {\n        String mountPoint = null;\n        synchronized (_storageMounts) {\n            mountPoint = _storageMounts.get(storageUrl);\n            if (mountPoint != null) {\n                return mountPoint;\n            }\n\n            URI uri;\n            try {\n                uri = new URI(storageUrl);\n            } catch (URISyntaxException e) {\n                s_logger.error(\"Invalid storage URL format \", e);\n                throw new CloudRuntimeException(\"Unable to create mount point due to invalid storage URL format \" + storageUrl);\n            }\n\n            mountPoint = mount(uri.getHost() + \":\" + uri.getPath(), _mountParent, nfsVersion);\n            if (mountPoint == null) {\n                s_logger.error(\"Unable to create mount point for \" + storageUrl);\n                return \"/mnt/sec\"; \r\n            }\n\n            _storageMounts.put(storageUrl, mountPoint);\n            return mountPoint;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":707,"groupId":"15100","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getMountPoint","params":"(StringstorageUrl@IntegernfsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b7/149ab2bf9e06d565f1dc55c3096f39040582fe.src","preCode":"    public String getMountPoint(String storageUrl, Integer nfsVersion) {\n        String mountPoint = null;\n        synchronized (_storageMounts) {\n            mountPoint = _storageMounts.get(storageUrl);\n            if (mountPoint != null) {\n                return mountPoint;\n            }\n\n            URI uri;\n            try {\n                uri = new URI(storageUrl);\n            } catch (URISyntaxException e) {\n                s_logger.error(\"Invalid storage URL format \", e);\n                throw new CloudRuntimeException(\"Unable to create mount point due to invalid storage URL format \" + storageUrl);\n            }\n\n            mountPoint = mount(uri.getHost() + \":\" + uri.getPath(), _mountParent, nfsVersion);\n            if (mountPoint == null) {\n                s_logger.error(\"Unable to create mount point for \" + storageUrl);\n                return \"/mnt/sec\"; \r\n            }\n\n            _storageMounts.put(storageUrl, mountPoint);\n            return mountPoint;\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":682,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2020-08-19 17:23:38","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private String getMountPoint(String storageUrl) {\n        String mountPoint = null;\n        synchronized (_storageMounts) {\n            mountPoint = _storageMounts.get(storageUrl);\n            if (mountPoint != null) {\n                return mountPoint;\n            }\n\n            URI uri;\n            try {\n                uri = new URI(storageUrl);\n            } catch (URISyntaxException e) {\n                s_logger.error(\"Invalid storage URL format \", e);\n                throw new CloudRuntimeException(\"Unable to create mount point due to invalid storage URL format \" + storageUrl);\n            }\n\n            mountPoint = mount(File.separator + File.separator + uri.getHost() + uri.getPath(), getMountParent(),\n                uri.getScheme(), uri.getQuery());\n            if (mountPoint == null) {\n                s_logger.error(\"Unable to create mount point for \" + storageUrl);\n                return \"/mnt/sec\";\n            }\n\n            _storageMounts.put(storageUrl, mountPoint);\n            return mountPoint;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":222,"groupId":"102092","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getMountPoint","params":"(StringstorageUrl)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9d/63726d3474b358705ab6800d56fabb11436575.src","preCode":"    private String getMountPoint(String storageUrl) {\n        String mountPoint = null;\n        synchronized (_storageMounts) {\n            mountPoint = _storageMounts.get(storageUrl);\n            if (mountPoint != null) {\n                return mountPoint;\n            }\n\n            URI uri;\n            try {\n                uri = new URI(storageUrl);\n            } catch (URISyntaxException e) {\n                s_logger.error(\"Invalid storage URL format \", e);\n                throw new CloudRuntimeException(\"Unable to create mount point due to invalid storage URL format \" + storageUrl);\n            }\n\n            mountPoint = mount(File.separator + File.separator + uri.getHost() + uri.getPath(), getMountParent(),\n                uri.getScheme(), uri.getQuery());\n            if (mountPoint == null) {\n                s_logger.error(\"Unable to create mount point for \" + storageUrl);\n                return \"/mnt/sec\";\n            }\n\n            _storageMounts.put(storageUrl, mountPoint);\n            return mountPoint;\n        }\n    }\n","realPath":"plugins/hypervisors/hyperv/src/main/java/com/cloud/hypervisor/hyperv/manager/HypervManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"N"},{"authorDate":"2020-08-19 17:23:38","commitOrder":2,"curCode":"    public String getMountPoint(String storageUrl, String nfsVersion) {\n        String mountPoint = null;\n        synchronized (_storageMounts) {\n            mountPoint = _storageMounts.get(storageUrl);\n            if (mountPoint != null) {\n                return mountPoint;\n            }\n\n            URI uri;\n            try {\n                uri = new URI(storageUrl);\n            } catch (URISyntaxException e) {\n                s_logger.error(\"Invalid storage URL format \", e);\n                throw new CloudRuntimeException(\"Unable to create mount point due to invalid storage URL format \" + storageUrl);\n            }\n\n            mountPoint = mount(uri.getHost() + \":\" + uri.getPath(), _mountParent, nfsVersion);\n            if (mountPoint == null) {\n                s_logger.error(\"Unable to create mount point for \" + storageUrl);\n                return \"/mnt/sec\"; \r\n            }\n\n            _storageMounts.put(storageUrl, mountPoint);\n            return mountPoint;\n        }\n    }\n","date":"2020-08-19 17:23:38","endLine":757,"groupId":"102092","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getMountPoint","params":"(StringstorageUrl@StringnfsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/baaf7a55c19b30e68605dad4ee9b3da1938511.src","preCode":"    public String getMountPoint(String storageUrl, Integer nfsVersion) {\n        String mountPoint = null;\n        synchronized (_storageMounts) {\n            mountPoint = _storageMounts.get(storageUrl);\n            if (mountPoint != null) {\n                return mountPoint;\n            }\n\n            URI uri;\n            try {\n                uri = new URI(storageUrl);\n            } catch (URISyntaxException e) {\n                s_logger.error(\"Invalid storage URL format \", e);\n                throw new CloudRuntimeException(\"Unable to create mount point due to invalid storage URL format \" + storageUrl);\n            }\n\n            mountPoint = mount(uri.getHost() + \":\" + uri.getPath(), _mountParent, nfsVersion);\n            if (mountPoint == null) {\n                s_logger.error(\"Unable to create mount point for \" + storageUrl);\n                return \"/mnt/sec\"; \r\n            }\n\n            _storageMounts.put(storageUrl, mountPoint);\n            return mountPoint;\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":732,"status":"M"}],"commitId":"d57aa835174c9dd045930d1396ce4bee9a275a60","commitMessage":"@@@server: Added nfs minor version support (#4180)\n\nThis PR adds minor version support when mounting nfs on the SSVM as requested in #2861\n\nThe global setting \"secstorage.nfs.version\" has been changed to use the String data type which allows any minor version to be specified.","date":"2020-08-19 17:23:38","modifiedFileCount":"30","status":"M","submitter":"Spaceman1984"}]
