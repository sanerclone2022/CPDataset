[{"authorTime":"2021-08-12 11:01:15","codes":[{"authorDate":"2021-08-12 11:01:15","commitOrder":1,"curCode":"    private Optional<StoragePool> getPreferredStoragePool(List<StoragePool> poolList, VirtualMachine vm) {\n        String accountStoragePoolUuid = StorageManager.PreferredStoragePool.valueIn(vm.getAccountId());\n        Optional<StoragePool> storagePool = getMatchingStoragePool(accountStoragePoolUuid, poolList);\n\n        if (storagePool.isPresent()) {\n            s_logger.debug(\"A storage pool is specified for this account, so we will use this storage pool for allocation: \"\n                    + storagePool.get().getUuid());\n        } else {\n            String globalStoragePoolUuid = StorageManager.PreferredStoragePool.value();\n            storagePool = getMatchingStoragePool(globalStoragePoolUuid, poolList);\n            storagePool.ifPresent(pool -> s_logger.debug(\"A storage pool is specified in global setting, so we will use this storage pool for allocation: \"\n                    + pool.getUuid()));\n        }\n        return storagePool;\n    }\n","date":"2021-08-12 11:01:15","endLine":327,"groupId":"23350","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPreferredStoragePool","params":"(List<StoragePool>poolList@VirtualMachinevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/93/22481f211f58e14e65f85f1f863f2eedf5f8f6.src","preCode":"    private Optional<StoragePool> getPreferredStoragePool(List<StoragePool> poolList, VirtualMachine vm) {\n        String accountStoragePoolUuid = StorageManager.PreferredStoragePool.valueIn(vm.getAccountId());\n        Optional<StoragePool> storagePool = getMatchingStoragePool(accountStoragePoolUuid, poolList);\n\n        if (storagePool.isPresent()) {\n            s_logger.debug(\"A storage pool is specified for this account, so we will use this storage pool for allocation: \"\n                    + storagePool.get().getUuid());\n        } else {\n            String globalStoragePoolUuid = StorageManager.PreferredStoragePool.value();\n            storagePool = getMatchingStoragePool(globalStoragePoolUuid, poolList);\n            storagePool.ifPresent(pool -> s_logger.debug(\"A storage pool is specified in global setting, so we will use this storage pool for allocation: \"\n                    + pool.getUuid()));\n        }\n        return storagePool;\n    }\n","realPath":"engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/VolumeOrchestrator.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"B"},{"authorDate":"2021-08-12 11:01:15","commitOrder":1,"curCode":"    private Optional<StoragePool> getPreferredStoragePool(List<StoragePool> poolList, VirtualMachine vm) {\n        String accountStoragePoolUuid = StorageManager.PreferredStoragePool.valueIn(vm.getAccountId());\n        Optional<StoragePool> storagePool = getMatchingStoragePool(accountStoragePoolUuid, poolList);\n\n        if (storagePool.isPresent()) {\n            s_logger.debug(\"A storage pool is specified for this account, so we will use this storage pool for allocation: \"\n                    + storagePool.get().getUuid());\n        } else {\n            String globalStoragePoolUuid = StorageManager.PreferredStoragePool.value();\n            storagePool = getMatchingStoragePool(globalStoragePoolUuid, poolList);\n            storagePool.ifPresent(pool -> s_logger.debug(\"A storage pool is specified in global setting, so we will use this storage pool for allocation: \"\n                    + pool.getUuid()));\n        }\n        return storagePool;\n    }\n","date":"2021-08-12 11:01:15","endLine":1754,"groupId":"23350","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPreferredStoragePool","params":"(List<StoragePool>poolList@VirtualMachinevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a2/25015ebffd88d35750df99330aa6c31fee2a52.src","preCode":"    private Optional<StoragePool> getPreferredStoragePool(List<StoragePool> poolList, VirtualMachine vm) {\n        String accountStoragePoolUuid = StorageManager.PreferredStoragePool.valueIn(vm.getAccountId());\n        Optional<StoragePool> storagePool = getMatchingStoragePool(accountStoragePoolUuid, poolList);\n\n        if (storagePool.isPresent()) {\n            s_logger.debug(\"A storage pool is specified for this account, so we will use this storage pool for allocation: \"\n                    + storagePool.get().getUuid());\n        } else {\n            String globalStoragePoolUuid = StorageManager.PreferredStoragePool.value();\n            storagePool = getMatchingStoragePool(globalStoragePoolUuid, poolList);\n            storagePool.ifPresent(pool -> s_logger.debug(\"A storage pool is specified in global setting, so we will use this storage pool for allocation: \"\n                    + pool.getUuid()));\n        }\n        return storagePool;\n    }\n","realPath":"server/src/main/java/com/cloud/deploy/DeploymentPlanningManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1740,"status":"B"}],"commitId":"2a4c2c250696a154ccf8a7c8fff8604d893e9258","commitMessage":"@@@Global setting to select preferred storage pool (#5249)\n\n* Global setting to select preferred storage pool\n\nCurrently all the volumes are allocated on storage pools\nbased on the capacity or the algorithm selected. Sometimes\nwe need to deploy all volumes of particular account in a\nspecific storage pool and in that case its not possible.\n\nwith this change.  we can specify the uuid of the preferred\nstorage pool.  so that all volumes of the account will be\ndeployed in this pool\n\n* code feedback\n\nCo-authored-by: Rakesh Venkatesh <rakeshv@apache.org>","date":"2021-08-12 11:01:15","modifiedFileCount":"4","status":"B","submitter":"Rakesh"},{"authorTime":"2021-08-12 11:01:15","codes":[{"authorDate":"2021-09-09 02:13:33","commitOrder":2,"curCode":"    private Optional<StoragePool> getPreferredStoragePool(List<StoragePool> poolList, VirtualMachine vm) {\n        String accountStoragePoolUuid = null;\n        if (vm != null) {\n            accountStoragePoolUuid = StorageManager.PreferredStoragePool.valueIn(vm.getAccountId());\n        }\n        Optional<StoragePool> storagePool = getMatchingStoragePool(accountStoragePoolUuid, poolList);\n\n        if (storagePool.isPresent()) {\n            s_logger.debug(\"A storage pool is specified for this account, so we will use this storage pool for allocation: \"\n                    + storagePool.get().getUuid());\n        } else {\n            String globalStoragePoolUuid = StorageManager.PreferredStoragePool.value();\n            storagePool = getMatchingStoragePool(globalStoragePoolUuid, poolList);\n            storagePool.ifPresent(pool -> s_logger.debug(\"A storage pool is specified in global setting, so we will use this storage pool for allocation: \"\n                    + pool.getUuid()));\n        }\n        return storagePool;\n    }\n","date":"2021-09-09 02:13:33","endLine":332,"groupId":"10635","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getPreferredStoragePool","params":"(List<StoragePool>poolList@VirtualMachinevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3b/9397782f54eecc8f6a73d76f79e4abeb61c0db.src","preCode":"    private Optional<StoragePool> getPreferredStoragePool(List<StoragePool> poolList, VirtualMachine vm) {\n        String accountStoragePoolUuid = StorageManager.PreferredStoragePool.valueIn(vm.getAccountId());\n        Optional<StoragePool> storagePool = getMatchingStoragePool(accountStoragePoolUuid, poolList);\n\n        if (storagePool.isPresent()) {\n            s_logger.debug(\"A storage pool is specified for this account, so we will use this storage pool for allocation: \"\n                    + storagePool.get().getUuid());\n        } else {\n            String globalStoragePoolUuid = StorageManager.PreferredStoragePool.value();\n            storagePool = getMatchingStoragePool(globalStoragePoolUuid, poolList);\n            storagePool.ifPresent(pool -> s_logger.debug(\"A storage pool is specified in global setting, so we will use this storage pool for allocation: \"\n                    + pool.getUuid()));\n        }\n        return storagePool;\n    }\n","realPath":"engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/VolumeOrchestrator.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"M"},{"authorDate":"2021-08-12 11:01:15","commitOrder":2,"curCode":"    private Optional<StoragePool> getPreferredStoragePool(List<StoragePool> poolList, VirtualMachine vm) {\n        String accountStoragePoolUuid = StorageManager.PreferredStoragePool.valueIn(vm.getAccountId());\n        Optional<StoragePool> storagePool = getMatchingStoragePool(accountStoragePoolUuid, poolList);\n\n        if (storagePool.isPresent()) {\n            s_logger.debug(\"A storage pool is specified for this account, so we will use this storage pool for allocation: \"\n                    + storagePool.get().getUuid());\n        } else {\n            String globalStoragePoolUuid = StorageManager.PreferredStoragePool.value();\n            storagePool = getMatchingStoragePool(globalStoragePoolUuid, poolList);\n            storagePool.ifPresent(pool -> s_logger.debug(\"A storage pool is specified in global setting, so we will use this storage pool for allocation: \"\n                    + pool.getUuid()));\n        }\n        return storagePool;\n    }\n","date":"2021-08-12 11:01:15","endLine":1754,"groupId":"10635","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPreferredStoragePool","params":"(List<StoragePool>poolList@VirtualMachinevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a2/25015ebffd88d35750df99330aa6c31fee2a52.src","preCode":"    private Optional<StoragePool> getPreferredStoragePool(List<StoragePool> poolList, VirtualMachine vm) {\n        String accountStoragePoolUuid = StorageManager.PreferredStoragePool.valueIn(vm.getAccountId());\n        Optional<StoragePool> storagePool = getMatchingStoragePool(accountStoragePoolUuid, poolList);\n\n        if (storagePool.isPresent()) {\n            s_logger.debug(\"A storage pool is specified for this account, so we will use this storage pool for allocation: \"\n                    + storagePool.get().getUuid());\n        } else {\n            String globalStoragePoolUuid = StorageManager.PreferredStoragePool.value();\n            storagePool = getMatchingStoragePool(globalStoragePoolUuid, poolList);\n            storagePool.ifPresent(pool -> s_logger.debug(\"A storage pool is specified in global setting, so we will use this storage pool for allocation: \"\n                    + pool.getUuid()));\n        }\n        return storagePool;\n    }\n","realPath":"server/src/main/java/com/cloud/deploy/DeploymentPlanningManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1740,"status":"N"}],"commitId":"f6073052aa3d592d6d737990a95c44e702908d59","commitMessage":"@@@Fix potential NullPointerException in findStoragePool (VolumeOrchestrator) (#5358)\n\n* fix null pointer exception when vm is null\n\n* add null checker to getPreferredStoragePool method\n\nCo-authored-by: junxuan <atrocitythemetms@gmail.com>","date":"2021-09-09 02:13:33","modifiedFileCount":"1","status":"M","submitter":"Junxuan Wu"}]
