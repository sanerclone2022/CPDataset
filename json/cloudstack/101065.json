[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testGetRouterControlIp() {\n        \r\n        List<NicVO> nics = new ArrayList<>();\n        NicVO nic1 = mock(NicVO.class);\n        NicVO nic2 = mock(NicVO.class);\n        \r\n        NicVO nic3 = mock(NicVO.class);\n        when(nic1.getNetworkId()).thenReturn(NW_ID_1);\n        when(nic2.getNetworkId()).thenReturn(NW_ID_2);\n        when(nic2.getIPv4Address()).thenReturn(IP4_ADDRES1);\n        when(nic3.getNetworkId()).thenReturn(NW_ID_3);\n        when(nic3.getIPv4Address()).thenReturn(IP4_ADDRES2);\n        nics.add(nic1);\n        nics.add(nic2);\n        nics.add(nic3);\n        when(this.nicDao.listByVmId(ROUTER_ID)).thenReturn(nics);\n\n        NetworkVO nw1 = mock(NetworkVO.class);\n        when(nw1.getTrafficType()).thenReturn(TrafficType.Public);\n        NetworkVO nw2 = mock(NetworkVO.class);\n        when(nw2.getTrafficType()).thenReturn(TrafficType.Control);\n        NetworkVO nw3 = mock(NetworkVO.class);\n        when(nw3.getTrafficType()).thenReturn(TrafficType.Control);\n        when(this.nwDao.findById(NW_ID_1)).thenReturn(nw1);\n        when(this.nwDao.findById(NW_ID_2)).thenReturn(nw2);\n        when(this.nwDao.findById(NW_ID_3)).thenReturn(nw3);\n\n        \r\n        final String ip4address = this.routerControlHelper.getRouterControlIp(ROUTER_ID);\n\n        \r\n        assertEquals(DIDN_T_GET_THE_EXPECTED_IP4_ADDRESS, IP4_ADDRES1, ip4address);\n    }\n","date":"2018-01-20 05:49:27","endLine":94,"groupId":"20132","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetRouterControlIp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/41/f4c27f22b567eba371e2c4d37fcd87b7bc05bb.src","preCode":"    public void testGetRouterControlIp() {\n        \r\n        List<NicVO> nics = new ArrayList<>();\n        NicVO nic1 = mock(NicVO.class);\n        NicVO nic2 = mock(NicVO.class);\n        \r\n        NicVO nic3 = mock(NicVO.class);\n        when(nic1.getNetworkId()).thenReturn(NW_ID_1);\n        when(nic2.getNetworkId()).thenReturn(NW_ID_2);\n        when(nic2.getIPv4Address()).thenReturn(IP4_ADDRES1);\n        when(nic3.getNetworkId()).thenReturn(NW_ID_3);\n        when(nic3.getIPv4Address()).thenReturn(IP4_ADDRES2);\n        nics.add(nic1);\n        nics.add(nic2);\n        nics.add(nic3);\n        when(this.nicDao.listByVmId(ROUTER_ID)).thenReturn(nics);\n\n        NetworkVO nw1 = mock(NetworkVO.class);\n        when(nw1.getTrafficType()).thenReturn(TrafficType.Public);\n        NetworkVO nw2 = mock(NetworkVO.class);\n        when(nw2.getTrafficType()).thenReturn(TrafficType.Control);\n        NetworkVO nw3 = mock(NetworkVO.class);\n        when(nw3.getTrafficType()).thenReturn(TrafficType.Control);\n        when(this.nwDao.findById(NW_ID_1)).thenReturn(nw1);\n        when(this.nwDao.findById(NW_ID_2)).thenReturn(nw2);\n        when(this.nwDao.findById(NW_ID_3)).thenReturn(nw3);\n\n        \r\n        final String ip4address = this.routerControlHelper.getRouterControlIp(ROUTER_ID);\n\n        \r\n        assertEquals(DIDN_T_GET_THE_EXPECTED_IP4_ADDRESS, IP4_ADDRES1, ip4address);\n    }\n","realPath":"server/src/test/java/com/cloud/network/router/RouterControlHelperTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testGetRouterControlIpWithRouterIp() {\n        \r\n        List<NicVO> nics = new ArrayList<>();\n        NicVO nic1 = mock(NicVO.class);\n        when(nic1.getNetworkId()).thenReturn(NW_ID_1);\n        when(nic1.getIPv4Address()).thenReturn(null);\n        nics.add(nic1);\n        when(this.nicDao.listByVmId(ROUTER_ID)).thenReturn(nics);\n\n        NetworkVO nw1 = mock(NetworkVO.class);\n        when(nw1.getTrafficType()).thenReturn(TrafficType.Public);\n        when(this.nwDao.findById(NW_ID_1)).thenReturn(nw1);\n\n        DomainRouterVO router = mock(DomainRouterVO.class);\n        when(this.routerDao.findById(ROUTER_ID)).thenReturn(router);\n        when(router.getPrivateIpAddress()).thenReturn(IP4_ADDRES1);\n\n        \r\n        final String ip4address = this.routerControlHelper.getRouterControlIp(ROUTER_ID);\n\n        \r\n        assertEquals(DIDN_T_GET_THE_EXPECTED_IP4_ADDRESS, IP4_ADDRES1, ip4address);\n    }\n","date":"2018-01-20 05:49:27","endLine":119,"groupId":"20131","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetRouterControlIpWithRouterIp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/41/f4c27f22b567eba371e2c4d37fcd87b7bc05bb.src","preCode":"    public void testGetRouterControlIpWithRouterIp() {\n        \r\n        List<NicVO> nics = new ArrayList<>();\n        NicVO nic1 = mock(NicVO.class);\n        when(nic1.getNetworkId()).thenReturn(NW_ID_1);\n        when(nic1.getIPv4Address()).thenReturn(null);\n        nics.add(nic1);\n        when(this.nicDao.listByVmId(ROUTER_ID)).thenReturn(nics);\n\n        NetworkVO nw1 = mock(NetworkVO.class);\n        when(nw1.getTrafficType()).thenReturn(TrafficType.Public);\n        when(this.nwDao.findById(NW_ID_1)).thenReturn(nw1);\n\n        DomainRouterVO router = mock(DomainRouterVO.class);\n        when(this.routerDao.findById(ROUTER_ID)).thenReturn(router);\n        when(router.getPrivateIpAddress()).thenReturn(IP4_ADDRES1);\n\n        \r\n        final String ip4address = this.routerControlHelper.getRouterControlIp(ROUTER_ID);\n\n        \r\n        assertEquals(DIDN_T_GET_THE_EXPECTED_IP4_ADDRESS, IP4_ADDRES1, ip4address);\n    }\n","realPath":"server/src/test/java/com/cloud/network/router/RouterControlHelperTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2020-02-12 15:28:25","codes":[{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void testGetRouterControlIp() {\n        \r\n        List<NicVO> nics = new ArrayList<>();\n        NicVO nic1 = mock(NicVO.class);\n        NicVO nic2 = mock(NicVO.class);\n        \r\n        NicVO nic3 = mock(NicVO.class);\n        when(nic1.getNetworkId()).thenReturn(NW_ID_1);\n        when(nic2.getNetworkId()).thenReturn(NW_ID_2);\n        lenient().when(nic2.getIPv4Address()).thenReturn(IP4_ADDRES1);\n        lenient().when(nic3.getNetworkId()).thenReturn(NW_ID_3);\n        lenient().when(nic3.getIPv4Address()).thenReturn(IP4_ADDRES2);\n        nics.add(nic1);\n        nics.add(nic2);\n        nics.add(nic3);\n        when(this.nicDao.listByVmId(ROUTER_ID)).thenReturn(nics);\n\n        NetworkVO nw1 = mock(NetworkVO.class);\n        when(nw1.getTrafficType()).thenReturn(TrafficType.Public);\n        NetworkVO nw2 = mock(NetworkVO.class);\n        when(nw2.getTrafficType()).thenReturn(TrafficType.Control);\n        NetworkVO nw3 = mock(NetworkVO.class);\n        lenient().when(nw3.getTrafficType()).thenReturn(TrafficType.Control);\n        when(this.nwDao.findById(NW_ID_1)).thenReturn(nw1);\n        when(this.nwDao.findById(NW_ID_2)).thenReturn(nw2);\n        lenient().when(this.nwDao.findById(NW_ID_3)).thenReturn(nw3);\n\n        \r\n        final String ip4address = this.routerControlHelper.getRouterControlIp(ROUTER_ID);\n\n        \r\n        assertEquals(DIDN_T_GET_THE_EXPECTED_IP4_ADDRESS, IP4_ADDRES1, ip4address);\n    }\n","date":"2020-02-12 15:28:25","endLine":95,"groupId":"101065","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testGetRouterControlIp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a3/040f1fece4205567cde35c0860d3fa885d3c7a.src","preCode":"    public void testGetRouterControlIp() {\n        \r\n        List<NicVO> nics = new ArrayList<>();\n        NicVO nic1 = mock(NicVO.class);\n        NicVO nic2 = mock(NicVO.class);\n        \r\n        NicVO nic3 = mock(NicVO.class);\n        when(nic1.getNetworkId()).thenReturn(NW_ID_1);\n        when(nic2.getNetworkId()).thenReturn(NW_ID_2);\n        when(nic2.getIPv4Address()).thenReturn(IP4_ADDRES1);\n        when(nic3.getNetworkId()).thenReturn(NW_ID_3);\n        when(nic3.getIPv4Address()).thenReturn(IP4_ADDRES2);\n        nics.add(nic1);\n        nics.add(nic2);\n        nics.add(nic3);\n        when(this.nicDao.listByVmId(ROUTER_ID)).thenReturn(nics);\n\n        NetworkVO nw1 = mock(NetworkVO.class);\n        when(nw1.getTrafficType()).thenReturn(TrafficType.Public);\n        NetworkVO nw2 = mock(NetworkVO.class);\n        when(nw2.getTrafficType()).thenReturn(TrafficType.Control);\n        NetworkVO nw3 = mock(NetworkVO.class);\n        when(nw3.getTrafficType()).thenReturn(TrafficType.Control);\n        when(this.nwDao.findById(NW_ID_1)).thenReturn(nw1);\n        when(this.nwDao.findById(NW_ID_2)).thenReturn(nw2);\n        when(this.nwDao.findById(NW_ID_3)).thenReturn(nw3);\n\n        \r\n        final String ip4address = this.routerControlHelper.getRouterControlIp(ROUTER_ID);\n\n        \r\n        assertEquals(DIDN_T_GET_THE_EXPECTED_IP4_ADDRESS, IP4_ADDRES1, ip4address);\n    }\n","realPath":"server/src/test/java/com/cloud/network/router/RouterControlHelperTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void testGetRouterControlIpWithRouterIp() {\n        \r\n        List<NicVO> nics = new ArrayList<>();\n        NicVO nic1 = mock(NicVO.class);\n        when(nic1.getNetworkId()).thenReturn(NW_ID_1);\n        lenient().when(nic1.getIPv4Address()).thenReturn(null);\n        nics.add(nic1);\n        when(this.nicDao.listByVmId(ROUTER_ID)).thenReturn(nics);\n\n        NetworkVO nw1 = mock(NetworkVO.class);\n        when(nw1.getTrafficType()).thenReturn(TrafficType.Public);\n        when(this.nwDao.findById(NW_ID_1)).thenReturn(nw1);\n\n        DomainRouterVO router = mock(DomainRouterVO.class);\n        when(this.routerDao.findById(ROUTER_ID)).thenReturn(router);\n        when(router.getPrivateIpAddress()).thenReturn(IP4_ADDRES1);\n\n        \r\n        final String ip4address = this.routerControlHelper.getRouterControlIp(ROUTER_ID);\n\n        \r\n        assertEquals(DIDN_T_GET_THE_EXPECTED_IP4_ADDRESS, IP4_ADDRES1, ip4address);\n    }\n","date":"2020-02-12 15:28:25","endLine":120,"groupId":"101065","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testGetRouterControlIpWithRouterIp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a3/040f1fece4205567cde35c0860d3fa885d3c7a.src","preCode":"    public void testGetRouterControlIpWithRouterIp() {\n        \r\n        List<NicVO> nics = new ArrayList<>();\n        NicVO nic1 = mock(NicVO.class);\n        when(nic1.getNetworkId()).thenReturn(NW_ID_1);\n        when(nic1.getIPv4Address()).thenReturn(null);\n        nics.add(nic1);\n        when(this.nicDao.listByVmId(ROUTER_ID)).thenReturn(nics);\n\n        NetworkVO nw1 = mock(NetworkVO.class);\n        when(nw1.getTrafficType()).thenReturn(TrafficType.Public);\n        when(this.nwDao.findById(NW_ID_1)).thenReturn(nw1);\n\n        DomainRouterVO router = mock(DomainRouterVO.class);\n        when(this.routerDao.findById(ROUTER_ID)).thenReturn(router);\n        when(router.getPrivateIpAddress()).thenReturn(IP4_ADDRES1);\n\n        \r\n        final String ip4address = this.routerControlHelper.getRouterControlIp(ROUTER_ID);\n\n        \r\n        assertEquals(DIDN_T_GET_THE_EXPECTED_IP4_ADDRESS, IP4_ADDRES1, ip4address);\n    }\n","realPath":"server/src/test/java/com/cloud/network/router/RouterControlHelperTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
