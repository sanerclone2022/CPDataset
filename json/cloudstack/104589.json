[{"authorTime":"2020-05-19 20:14:04","codes":[{"authorDate":"2020-05-19 20:14:04","commitOrder":2,"curCode":"    public static ConsoleProxyClient getAjaxVncViewer(ConsoleProxyClientParam param, String ajaxSession) throws Exception {\n\n        boolean reportLoadChange = false;\n        String clientKey = param.getClientMapKey();\n        synchronized (connectionMap) {\n            ConsoleProxyClient viewer = connectionMap.get(clientKey);\n            if (viewer == null || viewer.getClass() == ConsoleProxyNoVncClient.class) {\n                authenticationExternally(param);\n                viewer = getClient(param);\n                viewer.initClient(param);\n\n                connectionMap.put(clientKey, viewer);\n                s_logger.info(\"Added viewer object \" + viewer);\n                reportLoadChange = true;\n            } else {\n                \r\n                if (ajaxSession != null) {\n                    long ajaxSessionIdFromUrl = Long.parseLong(ajaxSession);\n                    if (ajaxSessionIdFromUrl != viewer.getAjaxSessionId())\n                        throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": modified AJAX session id\");\n                }\n\n                if (param.getClientHostPassword() == null || param.getClientHostPassword().isEmpty() ||\n                        !param.getClientHostPassword().equals(viewer.getClientHostPassword()))\n                    throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": bad sid\");\n\n                if (!viewer.isFrontEndAlive()) {\n\n                    authenticationExternally(param);\n                    viewer.initClient(param);\n                    reportLoadChange = true;\n                }\n            }\n\n            if (reportLoadChange) {\n                ConsoleProxyClientStatsCollector statsCollector = getStatsCollector();\n                String loadInfo = statsCollector.getStatsReport();\n                reportLoadInfo(loadInfo);\n                if (s_logger.isDebugEnabled())\n                    s_logger.debug(\"Report load change : \" + loadInfo);\n            }\n            return viewer;\n        }\n    }\n","date":"2020-05-19 20:14:04","endLine":480,"groupId":"20180","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAjaxVncViewer","params":"(ConsoleProxyClientParamparam@StringajaxSession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/7a/70a38b78688e8e511de8c8dc9b6ab3781527bb.src","preCode":"    public static ConsoleProxyClient getAjaxVncViewer(ConsoleProxyClientParam param, String ajaxSession) throws Exception {\n\n        boolean reportLoadChange = false;\n        String clientKey = param.getClientMapKey();\n        synchronized (connectionMap) {\n            ConsoleProxyClient viewer = connectionMap.get(clientKey);\n            if (viewer == null || viewer.getClass() == ConsoleProxyNoVncClient.class) {\n                authenticationExternally(param);\n                viewer = getClient(param);\n                viewer.initClient(param);\n\n                connectionMap.put(clientKey, viewer);\n                s_logger.info(\"Added viewer object \" + viewer);\n                reportLoadChange = true;\n            } else {\n                \r\n                if (ajaxSession != null) {\n                    long ajaxSessionIdFromUrl = Long.parseLong(ajaxSession);\n                    if (ajaxSessionIdFromUrl != viewer.getAjaxSessionId())\n                        throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": modified AJAX session id\");\n                }\n\n                if (param.getClientHostPassword() == null || param.getClientHostPassword().isEmpty() ||\n                        !param.getClientHostPassword().equals(viewer.getClientHostPassword()))\n                    throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": bad sid\");\n\n                if (!viewer.isFrontEndAlive()) {\n\n                    authenticationExternally(param);\n                    viewer.initClient(param);\n                    reportLoadChange = true;\n                }\n            }\n\n            if (reportLoadChange) {\n                ConsoleProxyClientStatsCollector statsCollector = getStatsCollector();\n                String loadInfo = statsCollector.getStatsReport();\n                reportLoadInfo(loadInfo);\n                if (s_logger.isDebugEnabled())\n                    s_logger.debug(\"Report load change : \" + loadInfo);\n            }\n            return viewer;\n        }\n    }\n","realPath":"services/console-proxy/server/src/main/java/com/cloud/consoleproxy/ConsoleProxy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"MB"},{"authorDate":"2020-05-19 20:14:04","commitOrder":2,"curCode":"    public static ConsoleProxyNoVncClient getNoVncViewer(ConsoleProxyClientParam param, String ajaxSession,\n            Session session) throws AuthenticationException {\n        boolean reportLoadChange = false;\n        String clientKey = param.getClientMapKey();\n        synchronized (connectionMap) {\n            ConsoleProxyClient viewer = connectionMap.get(clientKey);\n            if (viewer == null || viewer.getClass() != ConsoleProxyNoVncClient.class) {\n                authenticationExternally(param);\n                viewer = new ConsoleProxyNoVncClient(session);\n                viewer.initClient(param);\n\n                connectionMap.put(clientKey, viewer);\n                reportLoadChange = true;\n            } else {\n                if (param.getClientHostPassword() == null || param.getClientHostPassword().isEmpty() ||\n                        !param.getClientHostPassword().equals(viewer.getClientHostPassword()))\n                    throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": bad sid\");\n\n                if (!viewer.isFrontEndAlive()) {\n                    authenticationExternally(param);\n                    viewer.initClient(param);\n                    reportLoadChange = true;\n                }\n            }\n\n            if (reportLoadChange) {\n                ConsoleProxyClientStatsCollector statsCollector = getStatsCollector();\n                String loadInfo = statsCollector.getStatsReport();\n                reportLoadInfo(loadInfo);\n                if (s_logger.isDebugEnabled())\n                    s_logger.debug(\"Report load change : \" + loadInfo);\n            }\n            return (ConsoleProxyNoVncClient)viewer;\n        }\n    }\n","date":"2020-05-19 20:14:04","endLine":570,"groupId":"20180","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getNoVncViewer","params":"(ConsoleProxyClientParamparam@StringajaxSession@Sessionsession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/7a/70a38b78688e8e511de8c8dc9b6ab3781527bb.src","preCode":"    public static ConsoleProxyNoVncClient getNoVncViewer(ConsoleProxyClientParam param, String ajaxSession,\n            Session session) throws AuthenticationException {\n        boolean reportLoadChange = false;\n        String clientKey = param.getClientMapKey();\n        synchronized (connectionMap) {\n            ConsoleProxyClient viewer = connectionMap.get(clientKey);\n            if (viewer == null || viewer.getClass() != ConsoleProxyNoVncClient.class) {\n                authenticationExternally(param);\n                viewer = new ConsoleProxyNoVncClient(session);\n                viewer.initClient(param);\n\n                connectionMap.put(clientKey, viewer);\n                reportLoadChange = true;\n            } else {\n                if (param.getClientHostPassword() == null || param.getClientHostPassword().isEmpty() ||\n                        !param.getClientHostPassword().equals(viewer.getClientHostPassword()))\n                    throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": bad sid\");\n\n                if (!viewer.isFrontEndAlive()) {\n                    authenticationExternally(param);\n                    viewer.initClient(param);\n                    reportLoadChange = true;\n                }\n            }\n\n            if (reportLoadChange) {\n                ConsoleProxyClientStatsCollector statsCollector = getStatsCollector();\n                String loadInfo = statsCollector.getStatsReport();\n                reportLoadInfo(loadInfo);\n                if (s_logger.isDebugEnabled())\n                    s_logger.debug(\"Report load change : \" + loadInfo);\n            }\n            return (ConsoleProxyNoVncClient)viewer;\n        }\n    }\n","realPath":"services/console-proxy/server/src/main/java/com/cloud/consoleproxy/ConsoleProxy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":536,"status":"B"}],"commitId":"1756b0f64a30e7d2ffdbad99c64b7a633daae27e","commitMessage":"@@@noVNC console integration (#3967)\n\n* Adding noVNC repo\n\n* Adding support for noVNC\n\n* Adding Ctl+Esc\n\n* Removing device name from novnc header","date":"2020-05-19 20:14:04","modifiedFileCount":"5","status":"M","submitter":"davidjumani"},{"authorTime":"2021-03-06 18:32:09","codes":[{"authorDate":"2020-05-19 20:14:04","commitOrder":3,"curCode":"    public static ConsoleProxyClient getAjaxVncViewer(ConsoleProxyClientParam param, String ajaxSession) throws Exception {\n\n        boolean reportLoadChange = false;\n        String clientKey = param.getClientMapKey();\n        synchronized (connectionMap) {\n            ConsoleProxyClient viewer = connectionMap.get(clientKey);\n            if (viewer == null || viewer.getClass() == ConsoleProxyNoVncClient.class) {\n                authenticationExternally(param);\n                viewer = getClient(param);\n                viewer.initClient(param);\n\n                connectionMap.put(clientKey, viewer);\n                s_logger.info(\"Added viewer object \" + viewer);\n                reportLoadChange = true;\n            } else {\n                \r\n                if (ajaxSession != null) {\n                    long ajaxSessionIdFromUrl = Long.parseLong(ajaxSession);\n                    if (ajaxSessionIdFromUrl != viewer.getAjaxSessionId())\n                        throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": modified AJAX session id\");\n                }\n\n                if (param.getClientHostPassword() == null || param.getClientHostPassword().isEmpty() ||\n                        !param.getClientHostPassword().equals(viewer.getClientHostPassword()))\n                    throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": bad sid\");\n\n                if (!viewer.isFrontEndAlive()) {\n\n                    authenticationExternally(param);\n                    viewer.initClient(param);\n                    reportLoadChange = true;\n                }\n            }\n\n            if (reportLoadChange) {\n                ConsoleProxyClientStatsCollector statsCollector = getStatsCollector();\n                String loadInfo = statsCollector.getStatsReport();\n                reportLoadInfo(loadInfo);\n                if (s_logger.isDebugEnabled())\n                    s_logger.debug(\"Report load change : \" + loadInfo);\n            }\n            return viewer;\n        }\n    }\n","date":"2020-05-19 20:14:04","endLine":480,"groupId":"104589","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getAjaxVncViewer","params":"(ConsoleProxyClientParamparam@StringajaxSession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/7a/70a38b78688e8e511de8c8dc9b6ab3781527bb.src","preCode":"    public static ConsoleProxyClient getAjaxVncViewer(ConsoleProxyClientParam param, String ajaxSession) throws Exception {\n\n        boolean reportLoadChange = false;\n        String clientKey = param.getClientMapKey();\n        synchronized (connectionMap) {\n            ConsoleProxyClient viewer = connectionMap.get(clientKey);\n            if (viewer == null || viewer.getClass() == ConsoleProxyNoVncClient.class) {\n                authenticationExternally(param);\n                viewer = getClient(param);\n                viewer.initClient(param);\n\n                connectionMap.put(clientKey, viewer);\n                s_logger.info(\"Added viewer object \" + viewer);\n                reportLoadChange = true;\n            } else {\n                \r\n                if (ajaxSession != null) {\n                    long ajaxSessionIdFromUrl = Long.parseLong(ajaxSession);\n                    if (ajaxSessionIdFromUrl != viewer.getAjaxSessionId())\n                        throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": modified AJAX session id\");\n                }\n\n                if (param.getClientHostPassword() == null || param.getClientHostPassword().isEmpty() ||\n                        !param.getClientHostPassword().equals(viewer.getClientHostPassword()))\n                    throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": bad sid\");\n\n                if (!viewer.isFrontEndAlive()) {\n\n                    authenticationExternally(param);\n                    viewer.initClient(param);\n                    reportLoadChange = true;\n                }\n            }\n\n            if (reportLoadChange) {\n                ConsoleProxyClientStatsCollector statsCollector = getStatsCollector();\n                String loadInfo = statsCollector.getStatsReport();\n                reportLoadInfo(loadInfo);\n                if (s_logger.isDebugEnabled())\n                    s_logger.debug(\"Report load change : \" + loadInfo);\n            }\n            return viewer;\n        }\n    }\n","realPath":"services/console-proxy/server/src/main/java/com/cloud/consoleproxy/ConsoleProxy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":437,"status":"N"},{"authorDate":"2021-03-06 18:32:09","commitOrder":3,"curCode":"    public static ConsoleProxyNoVncClient getNoVncViewer(ConsoleProxyClientParam param, String ajaxSession,\n            Session session) throws AuthenticationException {\n        boolean reportLoadChange = false;\n        String clientKey = param.getClientMapKey();\n        synchronized (connectionMap) {\n            ConsoleProxyClient viewer = connectionMap.get(clientKey);\n            if (viewer == null || viewer.getClass() != ConsoleProxyNoVncClient.class) {\n                authenticationExternally(param);\n                viewer = new ConsoleProxyNoVncClient(session);\n                viewer.initClient(param);\n\n                connectionMap.put(clientKey, viewer);\n                reportLoadChange = true;\n            } else {\n                if (param.getClientHostPassword() == null || param.getClientHostPassword().isEmpty() ||\n                        !param.getClientHostPassword().equals(viewer.getClientHostPassword()))\n                    throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": bad sid\");\n\n                try {\n                    authenticationExternally(param);\n                } catch (Exception e) {\n                    s_logger.error(\"Authencation failed for param: \" + param);\n                    return null;\n                }\n                s_logger.info(\"Initializing new novnc client and disconnecting existing session\");\n                try {\n                    ((ConsoleProxyNoVncClient)viewer).getSession().disconnect();\n                } catch (IOException e) {\n                    s_logger.error(\"Exception while disconnect session of novnc viewer object: \" + viewer, e);\n                }\n                removeViewer(viewer);\n                viewer = new ConsoleProxyNoVncClient(session);\n                viewer.initClient(param);\n                connectionMap.put(clientKey, viewer);\n                reportLoadChange = true;\n            }\n\n            if (reportLoadChange) {\n                ConsoleProxyClientStatsCollector statsCollector = getStatsCollector();\n                String loadInfo = statsCollector.getStatsReport();\n                reportLoadInfo(loadInfo);\n                if (s_logger.isDebugEnabled())\n                    s_logger.debug(\"Report load change : \" + loadInfo);\n            }\n            return (ConsoleProxyNoVncClient)viewer;\n        }\n    }\n","date":"2021-03-06 18:32:09","endLine":588,"groupId":"104589","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getNoVncViewer","params":"(ConsoleProxyClientParamparam@StringajaxSession@Sessionsession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3c/9d2721ce9bc24443252c5c71f95ffdae5a1803.src","preCode":"    public static ConsoleProxyNoVncClient getNoVncViewer(ConsoleProxyClientParam param, String ajaxSession,\n            Session session) throws AuthenticationException {\n        boolean reportLoadChange = false;\n        String clientKey = param.getClientMapKey();\n        synchronized (connectionMap) {\n            ConsoleProxyClient viewer = connectionMap.get(clientKey);\n            if (viewer == null || viewer.getClass() != ConsoleProxyNoVncClient.class) {\n                authenticationExternally(param);\n                viewer = new ConsoleProxyNoVncClient(session);\n                viewer.initClient(param);\n\n                connectionMap.put(clientKey, viewer);\n                reportLoadChange = true;\n            } else {\n                if (param.getClientHostPassword() == null || param.getClientHostPassword().isEmpty() ||\n                        !param.getClientHostPassword().equals(viewer.getClientHostPassword()))\n                    throw new AuthenticationException(\"Cannot use the existing viewer \" + viewer + \": bad sid\");\n\n                if (!viewer.isFrontEndAlive()) {\n                    authenticationExternally(param);\n                    viewer.initClient(param);\n                    reportLoadChange = true;\n                }\n            }\n\n            if (reportLoadChange) {\n                ConsoleProxyClientStatsCollector statsCollector = getStatsCollector();\n                String loadInfo = statsCollector.getStatsReport();\n                reportLoadInfo(loadInfo);\n                if (s_logger.isDebugEnabled())\n                    s_logger.debug(\"Report load change : \" + loadInfo);\n            }\n            return (ConsoleProxyNoVncClient)viewer;\n        }\n    }\n","realPath":"services/console-proxy/server/src/main/java/com/cloud/consoleproxy/ConsoleProxy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":542,"status":"M"}],"commitId":"a1be9b02a6cc2b629a29b6cd6a712e9254f4eaa0","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n","date":"2021-03-06 18:32:09","modifiedFileCount":"16","status":"M","submitter":"Rohit Yadav"}]
