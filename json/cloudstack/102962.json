[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private Answer migrateVmWithVolumesAcrossCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n        \r\n\n        try {\n            verifyNoSnapshotsOnManagedStorageVolumes(volumeToPool);\n\n            List<Pair<VolumeTO, String>> volumeToStorageUuid = new ArrayList<>();\n\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volumeInfo = entry.getKey();\n                StoragePool storagePool = storagePoolDao.findById(volumeInfo.getPoolId());\n                VolumeTO volumeTo = new VolumeTO(volumeInfo, storagePool);\n\n                if (storagePool.isManaged()) {\n                    String iqn = handleManagedVolumePreMigration(volumeInfo, storagePool, destHost);\n\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, iqn));\n                }\n                else {\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, ((StoragePool)entry.getValue()).getPath()));\n                }\n            }\n\n            \r\n            \r\n            \r\n            \r\n\n            MigrateWithStorageReceiveCommand receiveCmd = new MigrateWithStorageReceiveCommand(to, volumeToStorageUuid);\n            MigrateWithStorageReceiveAnswer receiveAnswer = (MigrateWithStorageReceiveAnswer)agentMgr.send(destHost.getId(), receiveCmd);\n\n            if (receiveAnswer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!receiveAnswer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + receiveAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageSendCommand sendCmd =\n                    new MigrateWithStorageSendCommand(to, receiveAnswer.getVolumeToSr(), receiveAnswer.getNicToNetwork(), receiveAnswer.getToken());\n            MigrateWithStorageSendAnswer sendAnswer = (MigrateWithStorageSendAnswer)agentMgr.send(srcHost.getId(), sendCmd);\n\n            if (sendAnswer == null) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!sendAnswer.getResult()) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + sendAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageCompleteCommand command = new MigrateWithStorageCompleteCommand(to);\n            MigrateWithStorageCompleteAnswer answer = (MigrateWithStorageCompleteAnswer)agentMgr.send(destHost.getId(), command);\n\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else {\n                \r\n                updateVolumePathsAfterMigration(volumeToPool, answer.getVolumeTos(), srcHost);\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":384,"groupId":"21677","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"migrateVmWithVolumesAcrossCluster","params":"(VMInstanceVOvm@VirtualMachineTOto@HostsrcHost@HostdestHost@Map<VolumeInfo@DataStore>volumeToPool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/10/6fd9ea3fd6db980aea5b31f10860687712445c.src","preCode":"    private Answer migrateVmWithVolumesAcrossCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n        \r\n\n        try {\n            verifyNoSnapshotsOnManagedStorageVolumes(volumeToPool);\n\n            List<Pair<VolumeTO, String>> volumeToStorageUuid = new ArrayList<>();\n\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volumeInfo = entry.getKey();\n                StoragePool storagePool = storagePoolDao.findById(volumeInfo.getPoolId());\n                VolumeTO volumeTo = new VolumeTO(volumeInfo, storagePool);\n\n                if (storagePool.isManaged()) {\n                    String iqn = handleManagedVolumePreMigration(volumeInfo, storagePool, destHost);\n\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, iqn));\n                }\n                else {\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, ((StoragePool)entry.getValue()).getPath()));\n                }\n            }\n\n            \r\n            \r\n            \r\n            \r\n\n            MigrateWithStorageReceiveCommand receiveCmd = new MigrateWithStorageReceiveCommand(to, volumeToStorageUuid);\n            MigrateWithStorageReceiveAnswer receiveAnswer = (MigrateWithStorageReceiveAnswer)agentMgr.send(destHost.getId(), receiveCmd);\n\n            if (receiveAnswer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!receiveAnswer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + receiveAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageSendCommand sendCmd =\n                    new MigrateWithStorageSendCommand(to, receiveAnswer.getVolumeToSr(), receiveAnswer.getNicToNetwork(), receiveAnswer.getToken());\n            MigrateWithStorageSendAnswer sendAnswer = (MigrateWithStorageSendAnswer)agentMgr.send(srcHost.getId(), sendCmd);\n\n            if (sendAnswer == null) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!sendAnswer.getResult()) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + sendAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageCompleteCommand command = new MigrateWithStorageCompleteCommand(to);\n            MigrateWithStorageCompleteAnswer answer = (MigrateWithStorageCompleteAnswer)agentMgr.send(destHost.getId(), command);\n\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else {\n                \r\n                updateVolumePathsAfterMigration(volumeToPool, answer.getVolumeTos(), srcHost);\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/org/apache/cloudstack/storage/motion/XenServerStorageMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private Answer migrateVmWithVolumesWithinCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n\n        \r\n        try {\n            List<Pair<VolumeTO, StorageFilerTO>> volumeToFilerto = new ArrayList<Pair<VolumeTO, StorageFilerTO>>();\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volume = entry.getKey();\n                VolumeTO volumeTo = new VolumeTO(volume, storagePoolDao.findById(volume.getPoolId()));\n                StorageFilerTO filerTo = new StorageFilerTO((StoragePool)entry.getValue());\n                volumeToFilerto.add(new Pair<VolumeTO, StorageFilerTO>(volumeTo, filerTo));\n            }\n\n            MigrateWithStorageCommand command = new MigrateWithStorageCommand(to, volumeToFilerto, destHost.getGuid());\n            MigrateWithStorageAnswer answer = (MigrateWithStorageAnswer)agentMgr.send(srcHost.getId(), command);\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost + \". \" + answer.getDetails());\n            } else {\n                \r\n                updateVolumesAfterMigration(volumeToPool, answer.getVolumeTos());\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":187,"groupId":"24611","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"migrateVmWithVolumesWithinCluster","params":"(VMInstanceVOvm@VirtualMachineTOto@HostsrcHost@HostdestHost@Map<VolumeInfo@DataStore>volumeToPool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/23/b32a3d255c7348d7986c2cedf67c7dead73dd4.src","preCode":"    private Answer migrateVmWithVolumesWithinCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n\n        \r\n        try {\n            List<Pair<VolumeTO, StorageFilerTO>> volumeToFilerto = new ArrayList<Pair<VolumeTO, StorageFilerTO>>();\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volume = entry.getKey();\n                VolumeTO volumeTo = new VolumeTO(volume, storagePoolDao.findById(volume.getPoolId()));\n                StorageFilerTO filerTo = new StorageFilerTO((StoragePool)entry.getValue());\n                volumeToFilerto.add(new Pair<VolumeTO, StorageFilerTO>(volumeTo, filerTo));\n            }\n\n            MigrateWithStorageCommand command = new MigrateWithStorageCommand(to, volumeToFilerto, destHost.getGuid());\n            MigrateWithStorageAnswer answer = (MigrateWithStorageAnswer)agentMgr.send(srcHost.getId(), command);\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost + \". \" + answer.getDetails());\n            } else {\n                \r\n                updateVolumesAfterMigration(volumeToPool, answer.getVolumeTos());\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/org/apache/cloudstack/storage/motion/VmwareStorageMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-06-08 16:15:31","commitOrder":2,"curCode":"    private Answer migrateVmWithVolumesAcrossCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n        \r\n\n        try {\n            verifyNoSnapshotsOnManagedStorageVolumes(volumeToPool);\n\n            List<Pair<VolumeTO, String>> volumeToStorageUuid = new ArrayList<>();\n\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volumeInfo = entry.getKey();\n                StoragePool storagePool = storagePoolDao.findById(volumeInfo.getPoolId());\n                VolumeTO volumeTo = new VolumeTO(volumeInfo, storagePool);\n\n                if (storagePool.isManaged()) {\n                    String iqn = handleManagedVolumePreMigration(volumeInfo, storagePool, destHost);\n\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, iqn));\n                }\n                else {\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, ((StoragePool)entry.getValue()).getUuid()));\n                }\n            }\n\n            \r\n            \r\n            \r\n            \r\n\n            MigrateWithStorageReceiveCommand receiveCmd = new MigrateWithStorageReceiveCommand(to, volumeToStorageUuid);\n            MigrateWithStorageReceiveAnswer receiveAnswer = (MigrateWithStorageReceiveAnswer)agentMgr.send(destHost.getId(), receiveCmd);\n\n            if (receiveAnswer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!receiveAnswer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + receiveAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageSendCommand sendCmd =\n                    new MigrateWithStorageSendCommand(to, receiveAnswer.getVolumeToSr(), receiveAnswer.getNicToNetwork(), receiveAnswer.getToken());\n            MigrateWithStorageSendAnswer sendAnswer = (MigrateWithStorageSendAnswer)agentMgr.send(srcHost.getId(), sendCmd);\n\n            if (sendAnswer == null) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!sendAnswer.getResult()) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + sendAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageCompleteCommand command = new MigrateWithStorageCompleteCommand(to);\n            MigrateWithStorageCompleteAnswer answer = (MigrateWithStorageCompleteAnswer)agentMgr.send(destHost.getId(), command);\n\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else {\n                \r\n                updateVolumePathsAfterMigration(volumeToPool, answer.getVolumeTos(), srcHost);\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","date":"2018-06-08 16:15:31","endLine":384,"groupId":"21677","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"migrateVmWithVolumesAcrossCluster","params":"(VMInstanceVOvm@VirtualMachineTOto@HostsrcHost@HostdestHost@Map<VolumeInfo@DataStore>volumeToPool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ee/56f699bda201908b821798f94fb5fc53837b08.src","preCode":"    private Answer migrateVmWithVolumesAcrossCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n        \r\n\n        try {\n            verifyNoSnapshotsOnManagedStorageVolumes(volumeToPool);\n\n            List<Pair<VolumeTO, String>> volumeToStorageUuid = new ArrayList<>();\n\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volumeInfo = entry.getKey();\n                StoragePool storagePool = storagePoolDao.findById(volumeInfo.getPoolId());\n                VolumeTO volumeTo = new VolumeTO(volumeInfo, storagePool);\n\n                if (storagePool.isManaged()) {\n                    String iqn = handleManagedVolumePreMigration(volumeInfo, storagePool, destHost);\n\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, iqn));\n                }\n                else {\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, ((StoragePool)entry.getValue()).getPath()));\n                }\n            }\n\n            \r\n            \r\n            \r\n            \r\n\n            MigrateWithStorageReceiveCommand receiveCmd = new MigrateWithStorageReceiveCommand(to, volumeToStorageUuid);\n            MigrateWithStorageReceiveAnswer receiveAnswer = (MigrateWithStorageReceiveAnswer)agentMgr.send(destHost.getId(), receiveCmd);\n\n            if (receiveAnswer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!receiveAnswer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + receiveAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageSendCommand sendCmd =\n                    new MigrateWithStorageSendCommand(to, receiveAnswer.getVolumeToSr(), receiveAnswer.getNicToNetwork(), receiveAnswer.getToken());\n            MigrateWithStorageSendAnswer sendAnswer = (MigrateWithStorageSendAnswer)agentMgr.send(srcHost.getId(), sendCmd);\n\n            if (sendAnswer == null) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!sendAnswer.getResult()) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + sendAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageCompleteCommand command = new MigrateWithStorageCompleteCommand(to);\n            MigrateWithStorageCompleteAnswer answer = (MigrateWithStorageCompleteAnswer)agentMgr.send(destHost.getId(), command);\n\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else {\n                \r\n                updateVolumePathsAfterMigration(volumeToPool, answer.getVolumeTos(), srcHost);\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/org/apache/cloudstack/storage/motion/XenServerStorageMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private Answer migrateVmWithVolumesWithinCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n\n        \r\n        try {\n            List<Pair<VolumeTO, StorageFilerTO>> volumeToFilerto = new ArrayList<Pair<VolumeTO, StorageFilerTO>>();\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volume = entry.getKey();\n                VolumeTO volumeTo = new VolumeTO(volume, storagePoolDao.findById(volume.getPoolId()));\n                StorageFilerTO filerTo = new StorageFilerTO((StoragePool)entry.getValue());\n                volumeToFilerto.add(new Pair<VolumeTO, StorageFilerTO>(volumeTo, filerTo));\n            }\n\n            MigrateWithStorageCommand command = new MigrateWithStorageCommand(to, volumeToFilerto, destHost.getGuid());\n            MigrateWithStorageAnswer answer = (MigrateWithStorageAnswer)agentMgr.send(srcHost.getId(), command);\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost + \". \" + answer.getDetails());\n            } else {\n                \r\n                updateVolumesAfterMigration(volumeToPool, answer.getVolumeTos());\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":187,"groupId":"24611","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"migrateVmWithVolumesWithinCluster","params":"(VMInstanceVOvm@VirtualMachineTOto@HostsrcHost@HostdestHost@Map<VolumeInfo@DataStore>volumeToPool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/23/b32a3d255c7348d7986c2cedf67c7dead73dd4.src","preCode":"    private Answer migrateVmWithVolumesWithinCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n\n        \r\n        try {\n            List<Pair<VolumeTO, StorageFilerTO>> volumeToFilerto = new ArrayList<Pair<VolumeTO, StorageFilerTO>>();\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volume = entry.getKey();\n                VolumeTO volumeTo = new VolumeTO(volume, storagePoolDao.findById(volume.getPoolId()));\n                StorageFilerTO filerTo = new StorageFilerTO((StoragePool)entry.getValue());\n                volumeToFilerto.add(new Pair<VolumeTO, StorageFilerTO>(volumeTo, filerTo));\n            }\n\n            MigrateWithStorageCommand command = new MigrateWithStorageCommand(to, volumeToFilerto, destHost.getGuid());\n            MigrateWithStorageAnswer answer = (MigrateWithStorageAnswer)agentMgr.send(srcHost.getId(), command);\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost + \". \" + answer.getDetails());\n            } else {\n                \r\n                updateVolumesAfterMigration(volumeToPool, answer.getVolumeTos());\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/org/apache/cloudstack/storage/motion/VmwareStorageMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"}],"commitId":"1d132d0e58b38219bdce9d742640ae5a4ff31612","commitMessage":"@@@Merge branch '4.11'\n","date":"2018-06-08 16:15:31","modifiedFileCount":"3","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-04-05 17:29:15","commitOrder":3,"curCode":"    private Answer migrateVmWithVolumesAcrossCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n        \r\n\n        try {\n            verifyNoSnapshotsOnManagedStorageVolumes(volumeToPool);\n\n            List<Pair<VolumeTO, String>> volumeToStorageUuid = new ArrayList<>();\n\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volumeInfo = entry.getKey();\n                StoragePool storagePool = storagePoolDao.findById(volumeInfo.getPoolId());\n                VolumeTO volumeTo = new VolumeTO(volumeInfo, storagePool);\n\n                if (storagePool.isManaged()) {\n                    String iqn = handleManagedVolumePreMigration(volumeInfo, storagePool, destHost);\n\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, iqn));\n                }\n                else {\n                    StoragePool pool = (StoragePool)entry.getValue();\n                    String srNameLabel = CitrixHelper.getSRNameLabel(pool.getUuid(), pool.getPoolType(), pool.getPath());\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, srNameLabel));\n                }\n            }\n\n            \r\n            \r\n            \r\n            \r\n\n            MigrateWithStorageReceiveCommand receiveCmd = new MigrateWithStorageReceiveCommand(to, volumeToStorageUuid);\n            MigrateWithStorageReceiveAnswer receiveAnswer = (MigrateWithStorageReceiveAnswer)agentMgr.send(destHost.getId(), receiveCmd);\n\n            if (receiveAnswer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!receiveAnswer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + receiveAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageSendCommand sendCmd =\n                    new MigrateWithStorageSendCommand(to, receiveAnswer.getVolumeToSr(), receiveAnswer.getNicToNetwork(), receiveAnswer.getToken());\n            MigrateWithStorageSendAnswer sendAnswer = (MigrateWithStorageSendAnswer)agentMgr.send(srcHost.getId(), sendCmd);\n\n            if (sendAnswer == null) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!sendAnswer.getResult()) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + sendAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageCompleteCommand command = new MigrateWithStorageCompleteCommand(to);\n            MigrateWithStorageCompleteAnswer answer = (MigrateWithStorageCompleteAnswer)agentMgr.send(destHost.getId(), command);\n\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else {\n                \r\n                updateVolumePathsAfterMigration(volumeToPool, answer.getVolumeTos(), srcHost);\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","date":"2021-04-05 17:29:15","endLine":387,"groupId":"102962","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"migrateVmWithVolumesAcrossCluster","params":"(VMInstanceVOvm@VirtualMachineTOto@HostsrcHost@HostdestHost@Map<VolumeInfo@DataStore>volumeToPool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9d/93f97f5c35af3f62c6938a5d7c864a69e2a60a.src","preCode":"    private Answer migrateVmWithVolumesAcrossCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n        \r\n\n        try {\n            verifyNoSnapshotsOnManagedStorageVolumes(volumeToPool);\n\n            List<Pair<VolumeTO, String>> volumeToStorageUuid = new ArrayList<>();\n\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volumeInfo = entry.getKey();\n                StoragePool storagePool = storagePoolDao.findById(volumeInfo.getPoolId());\n                VolumeTO volumeTo = new VolumeTO(volumeInfo, storagePool);\n\n                if (storagePool.isManaged()) {\n                    String iqn = handleManagedVolumePreMigration(volumeInfo, storagePool, destHost);\n\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, iqn));\n                }\n                else {\n                    volumeToStorageUuid.add(new Pair<>(volumeTo, ((StoragePool)entry.getValue()).getUuid()));\n                }\n            }\n\n            \r\n            \r\n            \r\n            \r\n\n            MigrateWithStorageReceiveCommand receiveCmd = new MigrateWithStorageReceiveCommand(to, volumeToStorageUuid);\n            MigrateWithStorageReceiveAnswer receiveAnswer = (MigrateWithStorageReceiveAnswer)agentMgr.send(destHost.getId(), receiveCmd);\n\n            if (receiveAnswer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!receiveAnswer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + receiveAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageSendCommand sendCmd =\n                    new MigrateWithStorageSendCommand(to, receiveAnswer.getVolumeToSr(), receiveAnswer.getNicToNetwork(), receiveAnswer.getToken());\n            MigrateWithStorageSendAnswer sendAnswer = (MigrateWithStorageSendAnswer)agentMgr.send(srcHost.getId(), sendCmd);\n\n            if (sendAnswer == null) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" to host \" + destHost + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!sendAnswer.getResult()) {\n                handleManagedVolumesAfterFailedMigration(volumeToPool, destHost);\n\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + sendAnswer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            }\n\n            MigrateWithStorageCompleteCommand command = new MigrateWithStorageCompleteCommand(to);\n            MigrateWithStorageCompleteAnswer answer = (MigrateWithStorageCompleteAnswer)agentMgr.send(destHost.getId(), command);\n\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else {\n                \r\n                updateVolumePathsAfterMigration(volumeToPool, answer.getVolumeTos(), srcHost);\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/org/apache/cloudstack/storage/motion/XenServerStorageMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    private Answer migrateVmWithVolumesWithinCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n\n        \r\n        try {\n            List<Pair<VolumeTO, StorageFilerTO>> volumeToFilerto = new ArrayList<Pair<VolumeTO, StorageFilerTO>>();\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volume = entry.getKey();\n                VolumeTO volumeTo = new VolumeTO(volume, storagePoolDao.findById(volume.getPoolId()));\n                StorageFilerTO filerTo = new StorageFilerTO((StoragePool)entry.getValue());\n                volumeToFilerto.add(new Pair<VolumeTO, StorageFilerTO>(volumeTo, filerTo));\n            }\n\n            MigrateWithStorageCommand command = new MigrateWithStorageCommand(to, volumeToFilerto, destHost.getGuid());\n            MigrateWithStorageAnswer answer = (MigrateWithStorageAnswer)agentMgr.send(srcHost.getId(), command);\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost + \". \" + answer.getDetails());\n            } else {\n                \r\n                updateVolumesAfterMigration(volumeToPool, answer.getVolumeTos());\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":187,"groupId":"102962","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"migrateVmWithVolumesWithinCluster","params":"(VMInstanceVOvm@VirtualMachineTOto@HostsrcHost@HostdestHost@Map<VolumeInfo@DataStore>volumeToPool)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/23/b32a3d255c7348d7986c2cedf67c7dead73dd4.src","preCode":"    private Answer migrateVmWithVolumesWithinCluster(VMInstanceVO vm, VirtualMachineTO to, Host srcHost, Host destHost, Map<VolumeInfo, DataStore> volumeToPool)\n            throws AgentUnavailableException {\n\n        \r\n        try {\n            List<Pair<VolumeTO, StorageFilerTO>> volumeToFilerto = new ArrayList<Pair<VolumeTO, StorageFilerTO>>();\n            for (Map.Entry<VolumeInfo, DataStore> entry : volumeToPool.entrySet()) {\n                VolumeInfo volume = entry.getKey();\n                VolumeTO volumeTo = new VolumeTO(volume, storagePoolDao.findById(volume.getPoolId()));\n                StorageFilerTO filerTo = new StorageFilerTO((StoragePool)entry.getValue());\n                volumeToFilerto.add(new Pair<VolumeTO, StorageFilerTO>(volumeTo, filerTo));\n            }\n\n            MigrateWithStorageCommand command = new MigrateWithStorageCommand(to, volumeToFilerto, destHost.getGuid());\n            MigrateWithStorageAnswer answer = (MigrateWithStorageAnswer)agentMgr.send(srcHost.getId(), command);\n            if (answer == null) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed.\");\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost);\n            } else if (!answer.getResult()) {\n                s_logger.error(\"Migration with storage of vm \" + vm + \" failed. Details: \" + answer.getDetails());\n                throw new CloudRuntimeException(\"Error while migrating the vm \" + vm + \" to host \" + destHost + \". \" + answer.getDetails());\n            } else {\n                \r\n                updateVolumesAfterMigration(volumeToPool, answer.getVolumeTos());\n            }\n\n            return answer;\n        } catch (OperationTimedoutException e) {\n            s_logger.error(\"Error while migrating vm \" + vm + \" to host \" + destHost, e);\n            throw new AgentUnavailableException(\"Operation timed out on storage motion for \" + vm, destHost.getId());\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/org/apache/cloudstack/storage/motion/VmwareStorageMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"}],"commitId":"3066c955482cd6e4436e70b76cc740ba08ba33f8","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n","date":"2021-04-05 17:29:15","modifiedFileCount":"9","status":"M","submitter":"Rohit Yadav"}]
