[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testSendCommandsToRouter()\n            throws AgentUnavailableException, OperationTimedoutException, ResourceUnavailableException {\n        \r\n        NetworkHelperImpl nwHelperUT = spy(this.nwHelper);\n        VirtualRouter vr = mock(VirtualRouter.class);\n        when(vr.getHostId()).thenReturn(HOST_ID);\n        doReturn(true).when(nwHelperUT).checkRouterVersion(vr);\n\n        Commands commands = mock(Commands.class);\n        when(commands.size()).thenReturn(3);\n        Answer answer1 = mock(Answer.class);\n        Answer answer2 = mock(Answer.class);\n        Answer answer3 = mock(Answer.class);\n        \r\n        Answer[] answers = {answer1, answer2, answer3};\n        when(answer1.getResult()).thenReturn(true);\n        when(answer2.getResult()).thenReturn(false);\n        when(answer3.getResult()).thenReturn(false);\n        when(this.agentManager.send(HOST_ID, commands)).thenReturn(answers);\n\n        \r\n        final boolean result = nwHelperUT.sendCommandsToRouter(vr, commands);\n\n        \r\n        verify(this.agentManager, times(1)).send(HOST_ID, commands);\n        verify(answer1, times(1)).getResult();\n        verify(answer2, times(1)).getResult();\n        verify(answer3, times(0)).getResult();\n        assertFalse(result);\n    }\n","date":"2018-01-20 05:49:27","endLine":100,"groupId":"4355","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendCommandsToRouter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/95/2818d7aea0d63a1ef2dae590196834eb0463cf.src","preCode":"    public void testSendCommandsToRouter()\n            throws AgentUnavailableException, OperationTimedoutException, ResourceUnavailableException {\n        \r\n        NetworkHelperImpl nwHelperUT = spy(this.nwHelper);\n        VirtualRouter vr = mock(VirtualRouter.class);\n        when(vr.getHostId()).thenReturn(HOST_ID);\n        doReturn(true).when(nwHelperUT).checkRouterVersion(vr);\n\n        Commands commands = mock(Commands.class);\n        when(commands.size()).thenReturn(3);\n        Answer answer1 = mock(Answer.class);\n        Answer answer2 = mock(Answer.class);\n        Answer answer3 = mock(Answer.class);\n        \r\n        Answer[] answers = {answer1, answer2, answer3};\n        when(answer1.getResult()).thenReturn(true);\n        when(answer2.getResult()).thenReturn(false);\n        when(answer3.getResult()).thenReturn(false);\n        when(this.agentManager.send(HOST_ID, commands)).thenReturn(answers);\n\n        \r\n        final boolean result = nwHelperUT.sendCommandsToRouter(vr, commands);\n\n        \r\n        verify(this.agentManager, times(1)).send(HOST_ID, commands);\n        verify(answer1, times(1)).getResult();\n        verify(answer2, times(1)).getResult();\n        verify(answer3, times(0)).getResult();\n        assertFalse(result);\n    }\n","realPath":"server/src/test/java/com/cloud/network/router/NetworkHelperImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testSendCommandsToRouterWithNoAnswers()\n            throws AgentUnavailableException, OperationTimedoutException, ResourceUnavailableException {\n        \r\n        NetworkHelperImpl nwHelperUT = spy(this.nwHelper);\n        VirtualRouter vr = mock(VirtualRouter.class);\n        when(vr.getHostId()).thenReturn(HOST_ID);\n        doReturn(true).when(nwHelperUT).checkRouterVersion(vr);\n\n        Commands commands = mock(Commands.class);\n        when(commands.size()).thenReturn(3);\n        Answer answer1 = mock(Answer.class);\n        Answer answer2 = mock(Answer.class);\n        \r\n        Answer[] answers = {answer1, answer2};\n        when(this.agentManager.send(HOST_ID, commands)).thenReturn(answers);\n\n        \r\n        final boolean result = nwHelperUT.sendCommandsToRouter(vr, commands);\n\n        \r\n        verify(this.agentManager, times(1)).send(HOST_ID, commands);\n        verify(answer1, times(0)).getResult();\n        assertFalse(result);\n    }\n","date":"2018-01-20 05:49:27","endLine":170,"groupId":"4355","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendCommandsToRouterWithNoAnswers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/95/2818d7aea0d63a1ef2dae590196834eb0463cf.src","preCode":"    public void testSendCommandsToRouterWithNoAnswers()\n            throws AgentUnavailableException, OperationTimedoutException, ResourceUnavailableException {\n        \r\n        NetworkHelperImpl nwHelperUT = spy(this.nwHelper);\n        VirtualRouter vr = mock(VirtualRouter.class);\n        when(vr.getHostId()).thenReturn(HOST_ID);\n        doReturn(true).when(nwHelperUT).checkRouterVersion(vr);\n\n        Commands commands = mock(Commands.class);\n        when(commands.size()).thenReturn(3);\n        Answer answer1 = mock(Answer.class);\n        Answer answer2 = mock(Answer.class);\n        \r\n        Answer[] answers = {answer1, answer2};\n        when(this.agentManager.send(HOST_ID, commands)).thenReturn(answers);\n\n        \r\n        final boolean result = nwHelperUT.sendCommandsToRouter(vr, commands);\n\n        \r\n        verify(this.agentManager, times(1)).send(HOST_ID, commands);\n        verify(answer1, times(0)).getResult();\n        assertFalse(result);\n    }\n","realPath":"server/src/test/java/com/cloud/network/router/NetworkHelperImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void testSendCommandsToRouter()\n            throws AgentUnavailableException, OperationTimedoutException, ResourceUnavailableException {\n        \r\n        NetworkHelperImpl nwHelperUT = spy(this.nwHelper);\n        VirtualRouter vr = mock(VirtualRouter.class);\n        when(vr.getHostId()).thenReturn(HOST_ID);\n        doReturn(true).when(nwHelperUT).checkRouterVersion(vr);\n\n        Commands commands = mock(Commands.class);\n        when(commands.size()).thenReturn(3);\n        Answer answer1 = mock(Answer.class);\n        Answer answer2 = mock(Answer.class);\n        Answer answer3 = mock(Answer.class);\n        \r\n        Answer[] answers = {answer1, answer2, answer3};\n        when(answer1.getResult()).thenReturn(true);\n        when(answer2.getResult()).thenReturn(false);\n        lenient().when(answer3.getResult()).thenReturn(false);\n        when(this.agentManager.send(HOST_ID, commands)).thenReturn(answers);\n\n        \r\n        final boolean result = nwHelperUT.sendCommandsToRouter(vr, commands);\n\n        \r\n        verify(this.agentManager, times(1)).send(HOST_ID, commands);\n        verify(answer1, times(1)).getResult();\n        verify(answer2, times(1)).getResult();\n        verify(answer3, times(0)).getResult();\n        assertFalse(result);\n    }\n","date":"2020-02-12 15:28:25","endLine":101,"groupId":"101063","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testSendCommandsToRouter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/42/67b71d24faa5a5222391c9be17eef2ee71a06f.src","preCode":"    public void testSendCommandsToRouter()\n            throws AgentUnavailableException, OperationTimedoutException, ResourceUnavailableException {\n        \r\n        NetworkHelperImpl nwHelperUT = spy(this.nwHelper);\n        VirtualRouter vr = mock(VirtualRouter.class);\n        when(vr.getHostId()).thenReturn(HOST_ID);\n        doReturn(true).when(nwHelperUT).checkRouterVersion(vr);\n\n        Commands commands = mock(Commands.class);\n        when(commands.size()).thenReturn(3);\n        Answer answer1 = mock(Answer.class);\n        Answer answer2 = mock(Answer.class);\n        Answer answer3 = mock(Answer.class);\n        \r\n        Answer[] answers = {answer1, answer2, answer3};\n        when(answer1.getResult()).thenReturn(true);\n        when(answer2.getResult()).thenReturn(false);\n        when(answer3.getResult()).thenReturn(false);\n        when(this.agentManager.send(HOST_ID, commands)).thenReturn(answers);\n\n        \r\n        final boolean result = nwHelperUT.sendCommandsToRouter(vr, commands);\n\n        \r\n        verify(this.agentManager, times(1)).send(HOST_ID, commands);\n        verify(answer1, times(1)).getResult();\n        verify(answer2, times(1)).getResult();\n        verify(answer3, times(0)).getResult();\n        assertFalse(result);\n    }\n","realPath":"server/src/test/java/com/cloud/network/router/NetworkHelperImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void testSendCommandsToRouterWithNoAnswers()\n            throws AgentUnavailableException, OperationTimedoutException, ResourceUnavailableException {\n        \r\n        NetworkHelperImpl nwHelperUT = spy(this.nwHelper);\n        VirtualRouter vr = mock(VirtualRouter.class);\n        when(vr.getHostId()).thenReturn(HOST_ID);\n        doReturn(true).when(nwHelperUT).checkRouterVersion(vr);\n\n        Commands commands = mock(Commands.class);\n        when(commands.size()).thenReturn(3);\n        Answer answer1 = mock(Answer.class);\n        Answer answer2 = mock(Answer.class);\n        \r\n        Answer[] answers = {answer1, answer2};\n        when(this.agentManager.send(HOST_ID, commands)).thenReturn(answers);\n\n        \r\n        final boolean result = nwHelperUT.sendCommandsToRouter(vr, commands);\n\n        \r\n        verify(this.agentManager, times(1)).send(HOST_ID, commands);\n        verify(answer1, times(0)).getResult();\n        assertFalse(result);\n    }\n","date":"2018-01-20 05:49:27","endLine":170,"groupId":"101063","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendCommandsToRouterWithNoAnswers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/95/2818d7aea0d63a1ef2dae590196834eb0463cf.src","preCode":"    public void testSendCommandsToRouterWithNoAnswers()\n            throws AgentUnavailableException, OperationTimedoutException, ResourceUnavailableException {\n        \r\n        NetworkHelperImpl nwHelperUT = spy(this.nwHelper);\n        VirtualRouter vr = mock(VirtualRouter.class);\n        when(vr.getHostId()).thenReturn(HOST_ID);\n        doReturn(true).when(nwHelperUT).checkRouterVersion(vr);\n\n        Commands commands = mock(Commands.class);\n        when(commands.size()).thenReturn(3);\n        Answer answer1 = mock(Answer.class);\n        Answer answer2 = mock(Answer.class);\n        \r\n        Answer[] answers = {answer1, answer2};\n        when(this.agentManager.send(HOST_ID, commands)).thenReturn(answers);\n\n        \r\n        final boolean result = nwHelperUT.sendCommandsToRouter(vr, commands);\n\n        \r\n        verify(this.agentManager, times(1)).send(HOST_ID, commands);\n        verify(answer1, times(0)).getResult();\n        assertFalse(result);\n    }\n","realPath":"server/src/test/java/com/cloud/network/router/NetworkHelperImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"N"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
