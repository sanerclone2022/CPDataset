[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDomain(offering.getDomainName());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n\n        return diskOfferingResponse;\n    }\n","date":"2018-01-20 05:49:27","endLine":83,"groupId":"8330","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newDiskOfferingResponse","params":"(DiskOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/a44872fec1fc3bd1f80af3bdda9c527e28948d.src","preCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDomain(offering.getDomainName());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n\n        return diskOfferingResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/DiskOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setDetails(ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering));\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n\n        return offeringResponse;\n    }\n","date":"2018-01-20 05:49:27","endLine":88,"groupId":"6561","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newServiceOfferingResponse","params":"(ServiceOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/36/270696b6b9bab7c5a01d37629c34560a13a4fe.src","preCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setDetails(ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering));\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n\n        return offeringResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ServiceOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2019-02-05 05:47:44","codes":[{"authorDate":"2019-02-05 05:47:44","commitOrder":2,"curCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDomain(offering.getDomainName());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n\n        return diskOfferingResponse;\n    }\n","date":"2019-02-05 05:47:44","endLine":91,"groupId":"8330","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newDiskOfferingResponse","params":"(DiskOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b4/6fbd0deb67d69ed8b94d9718cbb9dabcf2e2c7.src","preCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDomain(offering.getDomainName());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n\n        return diskOfferingResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/DiskOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2019-02-05 05:47:44","commitOrder":2,"curCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        offeringResponse.setDetails(ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering));\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n\n        return offeringResponse;\n    }\n","date":"2019-02-05 05:47:44","endLine":96,"groupId":"6561","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newServiceOfferingResponse","params":"(ServiceOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f3/0bfad5cf048598700b2791cdab8a259f378edb.src","preCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setDetails(ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering));\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n\n        return offeringResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ServiceOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"637cc6ec4ec4f1d15ceb4c792ac737a14330b3a7","commitMessage":"@@@feature: add libvirt / qemu io bursting (#3133)\n\n* feature: add libvirt / qemu io bursting\n\nAdds the ability to set bursting features from libvirt / qemu\n\nThis allows you to utilize the iops and bytes temporary \"burst\" mode\nintroduced with libvirt 2.4 and improved upon with libvirt 2.6.\n\nhttps://blogs.igalia.com/berto/2016/05/24/io-bursts-with-qemu-2-6/\n\n* updates per rafael et al\n","date":"2019-02-05 05:47:44","modifiedFileCount":"20","status":"M","submitter":"Nathan Johnson"},{"authorTime":"2019-07-16 17:25:35","codes":[{"authorDate":"2019-07-16 17:25:35","commitOrder":3,"curCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n\n        return diskOfferingResponse;\n    }\n","date":"2019-07-16 17:25:35","endLine":113,"groupId":"13903","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"newDiskOfferingResponse","params":"(DiskOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/92/20974897c5085db01f0fab011964d9cd7401fb.src","preCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDomain(offering.getDomainName());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n\n        return diskOfferingResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/DiskOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"},{"authorDate":"2019-07-16 17:25:35","commitOrder":3,"curCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        offeringResponse.setDetails(ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering));\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n\n        return offeringResponse;\n    }\n","date":"2019-07-16 17:25:35","endLine":107,"groupId":"6561","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newServiceOfferingResponse","params":"(ServiceOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/13/98044147165d608b3e4a51053840078935bebb.src","preCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        offeringResponse.setDetails(ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering));\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n\n        return offeringResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ServiceOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"e15c3112e4ff26bab341e8ca3127853b12764790","commitMessage":"@@@Merge pull request #3248 from shapeblue/storage-offering-domains-zones\n\nEnable service offerings to be scoped to domain(s) and zone(s) ","date":"2019-07-16 17:25:35","modifiedFileCount":"80","status":"M","submitter":"Paul Angus"},{"authorTime":"2020-03-09 20:17:21","codes":[{"authorDate":"2019-07-16 17:25:35","commitOrder":4,"curCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n\n        return diskOfferingResponse;\n    }\n","date":"2019-07-16 17:25:35","endLine":113,"groupId":"13903","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"newDiskOfferingResponse","params":"(DiskOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/92/20974897c5085db01f0fab011964d9cd7401fb.src","preCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n\n        return diskOfferingResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/DiskOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"N"},{"authorDate":"2020-03-09 20:17:21","commitOrder":4,"curCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        offeringResponse.setDetails(ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering));\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n        offeringResponse.setCacheMode(offering.getCacheMode());\n\n        return offeringResponse;\n    }\n","date":"2020-03-09 20:17:21","endLine":108,"groupId":"6561","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"newServiceOfferingResponse","params":"(ServiceOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ad/d64155375fbf9637e637861bfb6d4b65d26caf.src","preCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        offeringResponse.setDetails(ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering));\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n\n        return offeringResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ServiceOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"d549f3bdc8e70400c3c0330ab97afc9df5efc0ea","commitMessage":"@@@Add cache mode param properly (#3925)\n\n","date":"2020-03-09 20:17:21","modifiedFileCount":"8","status":"M","submitter":"Radu Todirica"},{"authorTime":"2020-10-26 21:24:14","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":5,"curCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceTag.ResourceObjectType.DiskOffering);\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    diskOfferingResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        return diskOfferingResponse;\n    }\n","date":"2020-10-26 21:24:14","endLine":133,"groupId":"13903","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"newDiskOfferingResponse","params":"(DiskOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a6/2fbcdce20fe6e1dcadd854841fa4096dabbc4f.src","preCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n\n        return diskOfferingResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/DiskOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2020-10-26 21:24:14","commitOrder":5,"curCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering);\n        offeringResponse.setDetails(offeringDetails);\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n        offeringResponse.setCacheMode(offering.getCacheMode());\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    offeringResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n        return offeringResponse;\n    }\n","date":"2020-10-26 21:24:14","endLine":125,"groupId":"6561","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"newServiceOfferingResponse","params":"(ServiceOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/4c/025b99e9dcb6d2a7f10a610330564b24157808.src","preCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        offeringResponse.setDetails(ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering));\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n        offeringResponse.setCacheMode(offering.getCacheMode());\n\n        return offeringResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ServiceOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"},{"authorTime":"2020-10-30 23:56:11","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":6,"curCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceTag.ResourceObjectType.DiskOffering);\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    diskOfferingResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        return diskOfferingResponse;\n    }\n","date":"2020-10-26 21:24:14","endLine":133,"groupId":"13903","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"newDiskOfferingResponse","params":"(DiskOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a6/2fbcdce20fe6e1dcadd854841fa4096dabbc4f.src","preCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceTag.ResourceObjectType.DiskOffering);\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    diskOfferingResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        return diskOfferingResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/DiskOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2020-10-30 23:56:11","commitOrder":6,"curCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering);\n        offeringResponse.setDetails(offeringDetails);\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n        offeringResponse.setCacheMode(offering.getCacheMode());\n\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    offeringResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        offeringResponse.setRootDiskSize(offering.getRootDiskSize());\n\n        return offeringResponse;\n    }\n","date":"2020-10-30 23:56:11","endLine":129,"groupId":"6561","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"newServiceOfferingResponse","params":"(ServiceOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/87/b03748dbcd449bfd4a0a7e88ac3da1697a8f60.src","preCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering);\n        offeringResponse.setDetails(offeringDetails);\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n        offeringResponse.setCacheMode(offering.getCacheMode());\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    offeringResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n        return offeringResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ServiceOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"b3a1cb41c81bec1ee661a87741451a54daa83509","commitMessage":"@@@Allow to configure root disk size via Service Offering (diskoffering of type Service). (#4341)\n\n","date":"2020-10-30 23:56:11","modifiedFileCount":"9","status":"M","submitter":"Gabriel Beims Br?scher"},{"authorTime":"2021-06-08 19:40:00","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":7,"curCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceTag.ResourceObjectType.DiskOffering);\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    diskOfferingResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        return diskOfferingResponse;\n    }\n","date":"2020-10-26 21:24:14","endLine":133,"groupId":"13903","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"newDiskOfferingResponse","params":"(DiskOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a6/2fbcdce20fe6e1dcadd854841fa4096dabbc4f.src","preCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceTag.ResourceObjectType.DiskOffering);\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    diskOfferingResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        return diskOfferingResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/DiskOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2021-06-08 19:40:00","commitOrder":7,"curCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering);\n        offeringResponse.setDetails(offeringDetails);\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n        offeringResponse.setCacheMode(offering.getCacheMode());\n        offeringResponse.setDynamicScalingEnabled(offering.isDynamicScalingEnabled());\n\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    offeringResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        offeringResponse.setRootDiskSize(offering.getRootDiskSize());\n\n        return offeringResponse;\n    }\n","date":"2021-06-08 19:40:00","endLine":130,"groupId":"6561","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"newServiceOfferingResponse","params":"(ServiceOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/55/faa391df04f3b648f9bbfba726f23ffd21ba79.src","preCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering);\n        offeringResponse.setDetails(offeringDetails);\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n        offeringResponse.setCacheMode(offering.getCacheMode());\n\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    offeringResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        offeringResponse.setRootDiskSize(offering.getRootDiskSize());\n\n        return offeringResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ServiceOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"083646b3c3f05f4100c5de0c28b231109ebc98c3","commitMessage":"@@@server: VM dynamic scaling option granularity (#4643)\n\nThis PR introduces new granularity levels to configure VM dynamic scalability. Previously VM is configured to be dynamically scalable based on the template and global setting. Now we bringing this option to configure at service offering and VM level also.\n\nVM can dynamically scale only when all flags are ON at VM level.  template.  service offering and global setting. If any of the flags is set to false then VM cannot be scalable. This result will be persisted in DB for each VM and will be honoured for that VM till it is updated.\n\nWe are introducing 'dynamicscalingallowed' parameter with permitted values of true or false for deployVM API and createServiceOffering API.\n\nFollowing are the API parameter changes:\ncreateServiceOffering API: \n          dynamicscalingenabled: an optional parameter of type Boolean with default value ?true?.\ndeployVirtualMachine API: \n          dynamicscalingenabled: an optional parameter of type Boolean with default value ?true?.\n\nFollowing are the UI changes:\nService offering creation has ON/OFF switch for dynamic scaling enabled with default value true","date":"2021-06-08 19:40:00","modifiedFileCount":"26","status":"M","submitter":"Harikrishna"},{"authorTime":"2021-06-10 15:09:44","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":8,"curCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceTag.ResourceObjectType.DiskOffering);\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    diskOfferingResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        return diskOfferingResponse;\n    }\n","date":"2020-10-26 21:24:14","endLine":133,"groupId":"13903","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"newDiskOfferingResponse","params":"(DiskOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a6/2fbcdce20fe6e1dcadd854841fa4096dabbc4f.src","preCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceTag.ResourceObjectType.DiskOffering);\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    diskOfferingResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        return diskOfferingResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/DiskOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2021-06-10 15:09:44","commitOrder":8,"curCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering);\n        offeringResponse.setDetails(offeringDetails);\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n        offeringResponse.setCacheMode(offering.getCacheMode());\n        offeringResponse.setDynamicScalingEnabled(offering.isDynamicScalingEnabled());\n\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    offeringResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        long rootDiskSizeInGb = (long) offering.getRootDiskSize() / GB_TO_BYTES;\n        offeringResponse.setRootDiskSize(rootDiskSizeInGb);\n\n        return offeringResponse;\n    }\n","date":"2021-06-10 15:09:44","endLine":138,"groupId":"6561","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"newServiceOfferingResponse","params":"(ServiceOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5e/2959d52355373a3cdca23fc743d2032ed884d5.src","preCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering);\n        offeringResponse.setDetails(offeringDetails);\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n        offeringResponse.setCacheMode(offering.getCacheMode());\n        offeringResponse.setDynamicScalingEnabled(offering.isDynamicScalingEnabled());\n\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    offeringResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        offeringResponse.setRootDiskSize(offering.getRootDiskSize());\n\n        return offeringResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ServiceOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"a0788f58164b299c40fbd9f6b96892db86bf2172","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n","date":"2021-06-10 15:09:44","modifiedFileCount":"5","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2021-09-08 12:44:06","codes":[{"authorDate":"2021-09-08 12:44:06","commitOrder":9,"curCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setHasAnnotation(annotationDao.hasAnnotations(offering.getUuid(), AnnotationService.EntityType.DISK_OFFERING.name(),\n                accountManager.isRootAdmin(CallContext.current().getCallingAccount().getId())));\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceTag.ResourceObjectType.DiskOffering);\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    diskOfferingResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        return diskOfferingResponse;\n    }\n","date":"2021-09-08 12:44:06","endLine":144,"groupId":"101467","id":17,"instanceNumber":1,"isCurCommit":1,"methodName":"newDiskOfferingResponse","params":"(DiskOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/68/5f30169b4b6d5a79925942c9815a901404b12e.src","preCode":"    public DiskOfferingResponse newDiskOfferingResponse(DiskOfferingJoinVO offering) {\n\n        DiskOfferingResponse diskOfferingResponse = new DiskOfferingResponse();\n        diskOfferingResponse.setId(offering.getUuid());\n        diskOfferingResponse.setName(offering.getName());\n        diskOfferingResponse.setDisplayText(offering.getDisplayText());\n        diskOfferingResponse.setProvisioningType(offering.getProvisioningType().toString());\n        diskOfferingResponse.setCreated(offering.getCreated());\n        diskOfferingResponse.setDiskSize(offering.getDiskSize() / (1024 * 1024 * 1024));\n        diskOfferingResponse.setMinIops(offering.getMinIops());\n        diskOfferingResponse.setMaxIops(offering.getMaxIops());\n\n        diskOfferingResponse.setDisplayOffering(offering.isDisplayOffering());\n        diskOfferingResponse.setDomainId(offering.getDomainUuid());\n        diskOfferingResponse.setDomain(offering.getDomainPath());\n        diskOfferingResponse.setZoneId(offering.getZoneUuid());\n        diskOfferingResponse.setZone(offering.getZoneName());\n\n        diskOfferingResponse.setTags(offering.getTags());\n        diskOfferingResponse.setCustomized(offering.isCustomized());\n        diskOfferingResponse.setCustomizedIops(offering.isCustomizedIops());\n        diskOfferingResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        diskOfferingResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        diskOfferingResponse.setBytesReadRate(offering.getBytesReadRate());\n        diskOfferingResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        diskOfferingResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        diskOfferingResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        diskOfferingResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        diskOfferingResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        diskOfferingResponse.setIopsReadRate(offering.getIopsReadRate());\n        diskOfferingResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        diskOfferingResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        diskOfferingResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        diskOfferingResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        diskOfferingResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        diskOfferingResponse.setCacheMode(offering.getCacheMode());\n        diskOfferingResponse.setObjectName(\"diskoffering\");\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceTag.ResourceObjectType.DiskOffering);\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    diskOfferingResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        return diskOfferingResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/DiskOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2021-09-08 12:44:06","commitOrder":9,"curCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering);\n        offeringResponse.setDetails(offeringDetails);\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n        offeringResponse.setCacheMode(offering.getCacheMode());\n        offeringResponse.setDynamicScalingEnabled(offering.isDynamicScalingEnabled());\n\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    offeringResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        long rootDiskSizeInGb = (long) offering.getRootDiskSize() / GB_TO_BYTES;\n        offeringResponse.setRootDiskSize(rootDiskSizeInGb);\n\n        offeringResponse.setHasAnnotation(annotationDao.hasAnnotations(offering.getUuid(), AnnotationService.EntityType.SERVICE_OFFERING.name(),\n                accountManager.isRootAdmin(CallContext.current().getCallingAccount().getId())));\n\n        return offeringResponse;\n    }\n","date":"2021-09-08 12:44:06","endLine":149,"groupId":"101467","id":18,"instanceNumber":2,"isCurCommit":1,"methodName":"newServiceOfferingResponse","params":"(ServiceOfferingJoinVOoffering)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/33/81848b198ce616460c0cbc56f8501cb4fa4248.src","preCode":"    public ServiceOfferingResponse newServiceOfferingResponse(ServiceOfferingJoinVO offering) {\n\n        ServiceOfferingResponse offeringResponse = new ServiceOfferingResponse();\n        offeringResponse.setId(offering.getUuid());\n        offeringResponse.setName(offering.getName());\n        offeringResponse.setIsSystemOffering(offering.isSystemUse());\n        offeringResponse.setDefaultUse(offering.isDefaultUse());\n        offeringResponse.setSystemVmType(offering.getSystemVmType());\n        offeringResponse.setDisplayText(offering.getDisplayText());\n        offeringResponse.setProvisioningType(offering.getProvisioningType().toString());\n        offeringResponse.setCpuNumber(offering.getCpu());\n        offeringResponse.setCpuSpeed(offering.getSpeed());\n        offeringResponse.setMemory(offering.getRamSize());\n        offeringResponse.setCreated(offering.getCreated());\n        offeringResponse.setStorageType(offering.isUseLocalStorage() ? ServiceOffering.StorageType.local.toString() : ServiceOffering.StorageType.shared.toString());\n        offeringResponse.setOfferHa(offering.isOfferHA());\n        offeringResponse.setLimitCpuUse(offering.isLimitCpuUse());\n        offeringResponse.setVolatileVm(offering.getVolatileVm());\n        offeringResponse.setTags(offering.getTags());\n        offeringResponse.setDomain(offering.getDomainName());\n        offeringResponse.setDomainId(offering.getDomainUuid());\n        offeringResponse.setZone(offering.getZoneName());\n        offeringResponse.setZoneId(offering.getZoneUuid());\n        offeringResponse.setNetworkRate(offering.getRateMbps());\n        offeringResponse.setHostTag(offering.getHostTag());\n        offeringResponse.setDeploymentPlanner(offering.getDeploymentPlanner());\n        offeringResponse.setCustomizedIops(offering.isCustomizedIops());\n        offeringResponse.setMinIops(offering.getMinIops());\n        offeringResponse.setMaxIops(offering.getMaxIops());\n        offeringResponse.setHypervisorSnapshotReserve(offering.getHypervisorSnapshotReserve());\n        offeringResponse.setBytesReadRate(offering.getBytesReadRate());\n        offeringResponse.setBytesReadRateMax(offering.getBytesReadRateMax());\n        offeringResponse.setBytesReadRateMaxLength(offering.getBytesReadRateMaxLength());\n        offeringResponse.setBytesWriteRate(offering.getBytesWriteRate());\n        offeringResponse.setBytesWriteRateMax(offering.getBytesWriteRateMax());\n        offeringResponse.setBytesWriteRateMaxLength(offering.getBytesWriteRateMaxLength());\n        offeringResponse.setIopsReadRate(offering.getIopsReadRate());\n        offeringResponse.setIopsReadRateMax(offering.getIopsReadRateMax());\n        offeringResponse.setIopsReadRateMaxLength(offering.getIopsReadRateMaxLength());\n        offeringResponse.setIopsWriteRate(offering.getIopsWriteRate());\n        offeringResponse.setIopsWriteRateMax(offering.getIopsWriteRateMax());\n        offeringResponse.setIopsWriteRateMaxLength(offering.getIopsWriteRateMaxLength());\n        Map<String, String> offeringDetails = ApiDBUtils.getResourceDetails(offering.getId(), ResourceObjectType.ServiceOffering);\n        offeringResponse.setDetails(offeringDetails);\n        offeringResponse.setObjectName(\"serviceoffering\");\n        offeringResponse.setIscutomized(offering.isDynamic());\n        offeringResponse.setCacheMode(offering.getCacheMode());\n        offeringResponse.setDynamicScalingEnabled(offering.isDynamicScalingEnabled());\n\n        if (offeringDetails != null && !offeringDetails.isEmpty()) {\n            String vsphereStoragePolicyId = offeringDetails.get(ApiConstants.STORAGE_POLICY);\n            if (vsphereStoragePolicyId != null) {\n                VsphereStoragePolicyVO vsphereStoragePolicyVO = _vsphereStoragePolicyDao.findById(Long.parseLong(vsphereStoragePolicyId));\n                if (vsphereStoragePolicyVO != null)\n                    offeringResponse.setVsphereStoragePolicy(vsphereStoragePolicyVO.getName());\n            }\n        }\n\n        long rootDiskSizeInGb = (long) offering.getRootDiskSize() / GB_TO_BYTES;\n        offeringResponse.setRootDiskSize(rootDiskSizeInGb);\n\n        return offeringResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/ServiceOfferingJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"413d10dd8106af9b3c369c1a393fbcca5e7217ce","commitMessage":"@@@server: Extend the Annotations framework (#5103)\n\n* Extend addAnnotation and listAnnotations APIs\n\n* Allow users to add.  list and remove comments\n\n* Add adminsonly UI and allow admins or owners to remove comments\n\n* New annotations tab\n\n* In progress: new comments section\n\n* Address review comments\n\n* Fix\n\n* Fix annotationfilter and comments section\n\n* Add keyword and delete action\n\n* Fix and rename annotations tab\n\n* Update annotation visibility API and update comments table accordingly\n\n* Allow users seeing all the comments for their owned resources\n\n* Extend comments for volumes and snapshots\n\n* Extend comments to multiple entities\n\n* Add uuid to ssh keypairs\n\n* SSH keypair UI refactor\n\n* Extend comments to the infrastructure entities\n\n* Add missing entities\n\n* Fix upgrade version for ssh keypairs\n\n* Fix typo on DB upgrade schema\n\n* Fix annotations table columns when there is no data\n\n* Extend the list view of items showing they if they have comments\n\n* Remove extra test\n\n* Add annotation permissions\n\n* Address review comments\n\n* Extend marvin tests for annotations\n\n* updating ui stuff\n\n* addition to toggle visibility\n\n* Fix pagination on comments section\n\n* Extend to kubernetes clusters\n\n* Fixes after last review\n\n* Change default value for adminsonly column\n\n* Remove the required field for the annotationfilter parameter\n\n* Small fixes on visibility and other fixes\n\n* Cleanup to reduce files changed\n\n* Rollback extra line\n\n* Address review comments\n\n* Fix cleanup error on smoke test\n\n* Fix sending incorrect parameter to checkPermissions method\n\n* Add check domain access for the calling account for domain networks\n\n* Fix only display annotations icon if there are comments the user can see\n\n* Simply change the Save button label to Submit\n\n* Change order of the Tools menu to provent users getting 404 error on clicking the text instead of expanding\n\n* Remove comments when removing entities\n\n* Address review comments on marvin tests\n\n* Allow users to list annotations for an entity ID\n\n* Allow users to see all comments for allowed entities\n\n* Fix search filters\n\n* Remove username from search filter\n\n* Add pagination to the annotations tab\n\n* Display username for user comments\n\n* Fix add permissions for domain and resource admins\n\n* Fix for domain admins\n\n* Trivial but important UI fix\n\n* Replace pagination for annotations tab\n\n* Add confirmation for delete comment\n\n* Lint warnings\n\n* Fix reduced list as domain admin\n\n* Fix display remove comment button for non admins\n\n* Improve display remove action button\n\n* Remove unused parameter on groupShow\n\n* Include a clock icon to the all comments filter except for root admin\n\n* Move cleanup SQL to the correct file after rebasing main\n\nCo-authored-by: davidjumani <dj.davidjumani1994@gmail.com>","date":"2021-09-08 12:44:06","modifiedFileCount":"109","status":"M","submitter":"Nicolas Vazquez"}]
