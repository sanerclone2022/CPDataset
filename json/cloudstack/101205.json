[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testFindDomainByIdOrPathValidPathAndInvalidId() {\n        final DomainVO domain = new DomainVO(\"someDomain\", 123, 1L, \"network.domain\");\n        Mockito.when(_domainDao.findDomainByPath(Mockito.eq(\"/someDomain/\"))).thenReturn(domain);\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(null, \"/someDomain/\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(0L, \" /someDomain/\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(-1L, \"/someDomain/ \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(null, \"   /someDomain/   \"));\n    }\n","date":"2018-01-20 05:49:27","endLine":153,"groupId":"16366","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindDomainByIdOrPathValidPathAndInvalidId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/03/ab340a2dc76f30836d966c3620c71dc3e42872.src","preCode":"    public void testFindDomainByIdOrPathValidPathAndInvalidId() {\n        final DomainVO domain = new DomainVO(\"someDomain\", 123, 1L, \"network.domain\");\n        Mockito.when(_domainDao.findDomainByPath(Mockito.eq(\"/someDomain/\"))).thenReturn(domain);\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(null, \"/someDomain/\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(0L, \" /someDomain/\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(-1L, \"/someDomain/ \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(null, \"   /someDomain/   \"));\n    }\n","realPath":"server/src/test/java/com/cloud/user/DomainManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testFindDomainByIdOrPathValidId() {\n        final DomainVO domain = new DomainVO(\"someDomain\", 123, 1L, \"network.domain\");\n        Mockito.when(_domainDao.findById(1L)).thenReturn(domain);\n        Mockito.when(_domainDao.findDomainByPath(Mockito.eq(\"/validDomain/\"))).thenReturn(new DomainVO());\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, null));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \" \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"       \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"/validDomain/\"));\n    }\n","date":"2018-01-20 05:49:27","endLine":175,"groupId":"413","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindDomainByIdOrPathValidId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/03/ab340a2dc76f30836d966c3620c71dc3e42872.src","preCode":"    public void testFindDomainByIdOrPathValidId() {\n        final DomainVO domain = new DomainVO(\"someDomain\", 123, 1L, \"network.domain\");\n        Mockito.when(_domainDao.findById(1L)).thenReturn(domain);\n        Mockito.when(_domainDao.findDomainByPath(Mockito.eq(\"/validDomain/\"))).thenReturn(new DomainVO());\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, null));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \" \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"       \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"/validDomain/\"));\n    }\n","realPath":"server/src/test/java/com/cloud/user/DomainManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2020-02-12 15:28:25","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void testFindDomainByIdOrPathValidPathAndInvalidId() {\n        final DomainVO domain = new DomainVO(\"someDomain\", 123, 1L, \"network.domain\");\n        Mockito.when(_domainDao.findDomainByPath(Mockito.eq(\"/someDomain/\"))).thenReturn(domain);\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(null, \"/someDomain/\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(0L, \" /someDomain/\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(-1L, \"/someDomain/ \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(null, \"   /someDomain/   \"));\n    }\n","date":"2018-01-20 05:49:27","endLine":153,"groupId":"101205","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindDomainByIdOrPathValidPathAndInvalidId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/03/ab340a2dc76f30836d966c3620c71dc3e42872.src","preCode":"    public void testFindDomainByIdOrPathValidPathAndInvalidId() {\n        final DomainVO domain = new DomainVO(\"someDomain\", 123, 1L, \"network.domain\");\n        Mockito.when(_domainDao.findDomainByPath(Mockito.eq(\"/someDomain/\"))).thenReturn(domain);\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(null, \"/someDomain/\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(0L, \" /someDomain/\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(-1L, \"/someDomain/ \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(null, \"   /someDomain/   \"));\n    }\n","realPath":"server/src/test/java/com/cloud/user/DomainManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"N"},{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void testFindDomainByIdOrPathValidId() {\n        final DomainVO domain = new DomainVO(\"someDomain\", 123, 1L, \"network.domain\");\n        Mockito.when(_domainDao.findById(1L)).thenReturn(domain);\n        Mockito.lenient().when(_domainDao.findDomainByPath(Mockito.eq(\"/validDomain/\"))).thenReturn(new DomainVO());\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, null));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \" \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"       \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"/validDomain/\"));\n    }\n","date":"2020-02-12 15:28:25","endLine":174,"groupId":"101205","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindDomainByIdOrPathValidId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d8/f564dea8f0f585d19c3ef2839b8b4e318bb1a4.src","preCode":"    public void testFindDomainByIdOrPathValidId() {\n        final DomainVO domain = new DomainVO(\"someDomain\", 123, 1L, \"network.domain\");\n        Mockito.when(_domainDao.findById(1L)).thenReturn(domain);\n        Mockito.when(_domainDao.findDomainByPath(Mockito.eq(\"/validDomain/\"))).thenReturn(new DomainVO());\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, null));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"\"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \" \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"       \"));\n        Assert.assertEquals(domain, domainManager.findDomainByIdOrPath(1L, \"/validDomain/\"));\n    }\n","realPath":"server/src/test/java/com/cloud/user/DomainManagerImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
