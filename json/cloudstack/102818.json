[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void prepareSecondaryStorageStore(String storageUrl) {\n        String mountPoint = getMountPoint(storageUrl);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (!destIso.exists()) {\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" +\n                            srcIso.getAbsolutePath() + \", destination: \" + destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":194,"groupId":"5225","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareSecondaryStorageStore","params":"(StringstorageUrl)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9d/63726d3474b358705ab6800d56fabb11436575.src","preCode":"    private void prepareSecondaryStorageStore(String storageUrl) {\n        String mountPoint = getMountPoint(storageUrl);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (!destIso.exists()) {\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" +\n                            srcIso.getAbsolutePath() + \", destination: \" + destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","realPath":"plugins/hypervisors/hyperv/src/main/java/com/cloud/hypervisor/hyperv/manager/HypervManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void prepareSecondaryStorageStore(String storageUrl, Long storeId) {\n        Integer nfsVersion = imageStoreDetailsUtil.getNfsVersion(storeId);\n        String mountPoint = getMountPoint(storageUrl, nfsVersion);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (!destIso.exists()) {\n                        s_logger.info(\"Inject SSH key pairs before copying systemvm.iso into secondary storage\");\n                        _configServer.updateKeyPairs();\n\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" + srcIso.getAbsolutePath() + \", destination: \" +\n                                destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":631,"groupId":"16436","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareSecondaryStorageStore","params":"(StringstorageUrl@LongstoreId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b7/149ab2bf9e06d565f1dc55c3096f39040582fe.src","preCode":"    public void prepareSecondaryStorageStore(String storageUrl, Long storeId) {\n        Integer nfsVersion = imageStoreDetailsUtil.getNfsVersion(storeId);\n        String mountPoint = getMountPoint(storageUrl, nfsVersion);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (!destIso.exists()) {\n                        s_logger.info(\"Inject SSH key pairs before copying systemvm.iso into secondary storage\");\n                        _configServer.updateKeyPairs();\n\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" + srcIso.getAbsolutePath() + \", destination: \" +\n                                destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":585,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2020-08-19 17:23:38","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private void prepareSecondaryStorageStore(String storageUrl) {\n        String mountPoint = getMountPoint(storageUrl);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (!destIso.exists()) {\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" +\n                            srcIso.getAbsolutePath() + \", destination: \" + destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":194,"groupId":"5225","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareSecondaryStorageStore","params":"(StringstorageUrl)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9d/63726d3474b358705ab6800d56fabb11436575.src","preCode":"    private void prepareSecondaryStorageStore(String storageUrl) {\n        String mountPoint = getMountPoint(storageUrl);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (!destIso.exists()) {\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" +\n                            srcIso.getAbsolutePath() + \", destination: \" + destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","realPath":"plugins/hypervisors/hyperv/src/main/java/com/cloud/hypervisor/hyperv/manager/HypervManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"N"},{"authorDate":"2020-08-19 17:23:38","commitOrder":2,"curCode":"    public void prepareSecondaryStorageStore(String storageUrl, Long storeId) {\n        String nfsVersion = imageStoreDetailsUtil.getNfsVersion(storeId);\n        String mountPoint = getMountPoint(storageUrl, nfsVersion);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (!destIso.exists()) {\n                        s_logger.info(\"Inject SSH key pairs before copying systemvm.iso into secondary storage\");\n                        _configServer.updateKeyPairs();\n\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" + srcIso.getAbsolutePath() + \", destination: \" +\n                                destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","date":"2020-08-19 17:23:38","endLine":681,"groupId":"16436","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepareSecondaryStorageStore","params":"(StringstorageUrl@LongstoreId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/baaf7a55c19b30e68605dad4ee9b3da1938511.src","preCode":"    public void prepareSecondaryStorageStore(String storageUrl, Long storeId) {\n        Integer nfsVersion = imageStoreDetailsUtil.getNfsVersion(storeId);\n        String mountPoint = getMountPoint(storageUrl, nfsVersion);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (!destIso.exists()) {\n                        s_logger.info(\"Inject SSH key pairs before copying systemvm.iso into secondary storage\");\n                        _configServer.updateKeyPairs();\n\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" + srcIso.getAbsolutePath() + \", destination: \" +\n                                destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":635,"status":"M"}],"commitId":"d57aa835174c9dd045930d1396ce4bee9a275a60","commitMessage":"@@@server: Added nfs minor version support (#4180)\n\nThis PR adds minor version support when mounting nfs on the SSVM as requested in #2861\n\nThe global setting \"secstorage.nfs.version\" has been changed to use the String data type which allows any minor version to be specified.","date":"2020-08-19 17:23:38","modifiedFileCount":"30","status":"M","submitter":"Spaceman1984"},{"authorTime":"2021-09-02 18:43:33","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    private void prepareSecondaryStorageStore(String storageUrl) {\n        String mountPoint = getMountPoint(storageUrl);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (!destIso.exists()) {\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" +\n                            srcIso.getAbsolutePath() + \", destination: \" + destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":194,"groupId":"102818","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"prepareSecondaryStorageStore","params":"(StringstorageUrl)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9d/63726d3474b358705ab6800d56fabb11436575.src","preCode":"    private void prepareSecondaryStorageStore(String storageUrl) {\n        String mountPoint = getMountPoint(storageUrl);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (!destIso.exists()) {\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" +\n                            srcIso.getAbsolutePath() + \", destination: \" + destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","realPath":"plugins/hypervisors/hyperv/src/main/java/com/cloud/hypervisor/hyperv/manager/HypervManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"N"},{"authorDate":"2021-09-02 18:43:33","commitOrder":3,"curCode":"    public void prepareSecondaryStorageStore(String storageUrl, Long storeId) {\n        String nfsVersion = imageStoreDetailsUtil.getNfsVersion(storeId);\n        String mountPoint = getMountPoint(storageUrl, nfsVersion);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (isSystemVmIsoCopyNeeded(srcIso, destIso)) {\n                        s_logger.info(\"Inject SSH key pairs before copying systemvm.iso into secondary storage\");\n                        _configServer.updateKeyPairs();\n\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" + srcIso.getAbsolutePath() + \", destination: \" +\n                                destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","date":"2021-09-02 18:43:33","endLine":758,"groupId":"102818","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"prepareSecondaryStorageStore","params":"(StringstorageUrl@LongstoreId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8b/ef78759e1dc7942305edda6de7f4519a490ba0.src","preCode":"    public void prepareSecondaryStorageStore(String storageUrl, Long storeId) {\n        String nfsVersion = imageStoreDetailsUtil.getNfsVersion(storeId);\n        String mountPoint = getMountPoint(storageUrl, nfsVersion);\n\n        GlobalLock lock = GlobalLock.getInternLock(\"prepare.systemvm\");\n        try {\n            if (lock.lock(3600)) {\n                try {\n                    File patchFolder = new File(mountPoint + \"/systemvm\");\n                    if (!patchFolder.exists()) {\n                        if (!patchFolder.mkdirs()) {\n                            String msg = \"Unable to create systemvm folder on secondary storage. location: \" + patchFolder.toString();\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    }\n\n                    File srcIso = getSystemVMPatchIsoFile();\n                    File destIso = new File(mountPoint + \"/systemvm/\" + getSystemVMIsoFileNameOnDatastore());\n                    if (!destIso.exists()) {\n                        s_logger.info(\"Inject SSH key pairs before copying systemvm.iso into secondary storage\");\n                        _configServer.updateKeyPairs();\n\n                        s_logger.info(\"Copy System VM patch ISO file to secondary storage. source ISO: \" + srcIso.getAbsolutePath() + \", destination: \" +\n                                destIso.getAbsolutePath());\n                        try {\n                            FileUtil.copyfile(srcIso, destIso);\n                        } catch (IOException e) {\n                            s_logger.error(\"Unexpected exception \", e);\n\n                            String msg = \"Unable to copy systemvm ISO on secondary storage. src location: \" + srcIso.toString() + \", dest location: \" + destIso;\n                            s_logger.error(msg);\n                            throw new CloudRuntimeException(msg);\n                        }\n                    } else {\n                        if (s_logger.isTraceEnabled()) {\n                            s_logger.trace(\"SystemVM ISO file \" + destIso.getPath() + \" already exists\");\n                        }\n                    }\n                } finally {\n                    lock.unlock();\n                }\n            }\n        } finally {\n            lock.releaseRef();\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":712,"status":"M"}],"commitId":"56f4da6dce8aefc106c4697d9fbbfe47755336ca","commitMessage":"@@@Merge remote-tracking branch 'apache/4.15' into main\n","date":"2021-09-02 18:43:33","modifiedFileCount":"15","status":"M","submitter":"Abhishek Kumar"}]
