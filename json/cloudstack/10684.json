[{"authorTime":"2018-12-14 19:01:28","codes":[{"authorDate":"2018-12-14 19:01:28","commitOrder":1,"curCode":"    public void internalCanHandleTestNonManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(false, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap);\n            if (storagePoolTypeArray[i] == StoragePoolType.Filesystem || storagePoolTypeArray[i] == StoragePoolType.NetworkFilesystem) {\n                Assert.assertEquals(StrategyPriority.HYPERVISOR, strategyPriority);\n            } else {\n                Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n            }\n        }\n    }\n","date":"2018-12-14 19:01:28","endLine":119,"groupId":"537","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"internalCanHandleTestNonManaged","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b3/44f83569a40508ed61b1802f2b1c042d62cc72.src","preCode":"    public void internalCanHandleTestNonManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(false, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap);\n            if (storagePoolTypeArray[i] == StoragePoolType.Filesystem || storagePoolTypeArray[i] == StoragePoolType.NetworkFilesystem) {\n                Assert.assertEquals(StrategyPriority.HYPERVISOR, strategyPriority);\n            } else {\n                Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n            }\n        }\n    }\n","realPath":"engine/storage/datamotion/src/test/java/org/apache/cloudstack/storage/motion/KvmNonManagedStorageSystemDataMotionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"},{"authorDate":"2018-12-14 19:01:28","commitOrder":1,"curCode":"    public void internalCanHandleTestIsManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(true, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap);\n            Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n        }\n    }\n","date":"2018-12-14 19:01:28","endLine":129,"groupId":"538","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"internalCanHandleTestIsManaged","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b3/44f83569a40508ed61b1802f2b1c042d62cc72.src","preCode":"    public void internalCanHandleTestIsManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(true, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap);\n            Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n        }\n    }\n","realPath":"engine/storage/datamotion/src/test/java/org/apache/cloudstack/storage/motion/KvmNonManagedStorageSystemDataMotionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"}],"commitId":"bf209405e7d60b6a5abf87677d368c429359d98a","commitMessage":"@@@Allow KVM VM live migration with ROOT volume on file storage type (#2997)\n\n* Allow KVM VM live migration with ROOT volume on file\n\n* Allow KVM VM live migration with ROOT volume on file\n- Add JUnit tests\n\n* Address reviewers and change some variable names to ease future\nimplementation (developers can easily guess the name and use\nautocomplete)\n","date":"2018-12-14 19:01:28","modifiedFileCount":"14","status":"B","submitter":"Gabriel Beims Br?scher"},{"authorTime":"2019-06-10 18:05:26","codes":[{"authorDate":"2019-06-10 18:05:26","commitOrder":2,"curCode":"    public void internalCanHandleTestNonManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(false, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap, new HostVO(\"sourceHostUuid\"), new HostVO(\"destHostUuid\"));\n            if (storagePoolTypeArray[i] == StoragePoolType.Filesystem || storagePoolTypeArray[i] == StoragePoolType.NetworkFilesystem) {\n                Assert.assertEquals(StrategyPriority.HYPERVISOR, strategyPriority);\n            } else {\n                Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n            }\n        }\n    }\n","date":"2019-06-10 18:05:26","endLine":171,"groupId":"537","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"internalCanHandleTestNonManaged","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5b/8d3aff2b8b1a9f8a0ce59a5beeccd22250579b.src","preCode":"    public void internalCanHandleTestNonManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(false, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap);\n            if (storagePoolTypeArray[i] == StoragePoolType.Filesystem || storagePoolTypeArray[i] == StoragePoolType.NetworkFilesystem) {\n                Assert.assertEquals(StrategyPriority.HYPERVISOR, strategyPriority);\n            } else {\n                Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n            }\n        }\n    }\n","realPath":"engine/storage/datamotion/src/test/java/org/apache/cloudstack/storage/motion/KvmNonManagedStorageSystemDataMotionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"},{"authorDate":"2019-06-10 18:05:26","commitOrder":2,"curCode":"    public void internalCanHandleTestIsManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(true, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap, null, null);\n            Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n        }\n    }\n","date":"2019-06-10 18:05:26","endLine":181,"groupId":"538","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"internalCanHandleTestIsManaged","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5b/8d3aff2b8b1a9f8a0ce59a5beeccd22250579b.src","preCode":"    public void internalCanHandleTestIsManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(true, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap);\n            Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n        }\n    }\n","realPath":"engine/storage/datamotion/src/test/java/org/apache/cloudstack/storage/motion/KvmNonManagedStorageSystemDataMotionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"}],"commitId":"0fbf5006b87b6c5bc6188e3e1dd226a98c3bb453","commitMessage":"@@@kvm: live storage migration intra cluster from NFS source and destination (#2983)\n\nFeature Specification: https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=95653548\n\nLive storage migration on KVM under these conditions:\n\nFrom source and destination hosts within the same cluster\nFrom NFS primary storage to NFS cluster-wide primary storage\nSource NFS and destination NFS storage mounted on hosts\nIn order to enable this functionality.  database should be updated in order to enable live storage capacibilty for KVM.  if previous conditions are met. This is due to existing conflicts between qemu and libvirt versions. This has been tested on CentOS 6 hosts.\n\nAdditional notes:\n\nTo use this feature set the storage_motion_supported=1 in the hypervisor_capability table for KVM. This is done by default as the feature may not work in some environments.  read below.\nThis feature of online storage+VM migration for KVM will only work with CentOS6 and possible Ubuntu as KVM hosts but not with CentOS7 due to:\nhttps://bugs.centos.org/view.php?id=14026\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1219541\nOn CentOS7 the error we see is: \" error: unable to execute QEMU command 'migrate': this feature or command is not currently supported\" (reference https://ask.openstack.org/en/question/94186/live-migration-unable-to-execute-qemu-command-migrate/). Reading through various lists looks like the migrate feature with qemu may be available with paid versions of RHEL-EV but not centos7 however this works with CentOS6.\nFix for CentOS 7:\n\nCreate repo file on /etc/yum.repos.d/:\n[qemu-kvm-rhev]\nname=oVirt rebuilds of qemu-kvm-rhev\nbaseurl=http://resources.ovirt.org/pub/ovirt-3.5/rpm/el7Server/\nmirrorlist=http://resources.ovirt.org/pub/yum-repo/mirrorlist-ovirt-3.5-el7Server\nenabled=1\nskip_if_unavailable=1\ngpgcheck=0\nyum install qemu-kvm-common-ev-2.3.0-29.1.el7.x86_64 qemu-kvm-ev-2.3.0-29.1.el7.x86_64 qemu-img-ev-2.3.0-29.1.el7.x86_64\nReboot host\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2019-06-10 18:05:26","modifiedFileCount":"25","status":"M","submitter":"Nicolas Vazquez"},{"authorTime":"2019-06-10 18:05:26","codes":[{"authorDate":"2021-08-16 23:32:19","commitOrder":3,"curCode":"    public void internalCanHandleTestNonManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(false, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap, new HostVO(\"sourceHostUuid\"), new HostVO(\"destHostUuid\"));\n\n            if (supportStoragePoolType(storagePoolTypeArray[i])) {\n                Assert.assertEquals(StrategyPriority.HYPERVISOR, strategyPriority);\n            } else {\n                Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n            }\n        }\n    }\n","date":"2021-08-16 23:32:19","endLine":188,"groupId":"10684","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"internalCanHandleTestNonManaged","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/60/1f6bbd104c3e8979b584ed8c60dbf9144399ed.src","preCode":"    public void internalCanHandleTestNonManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(false, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap, new HostVO(\"sourceHostUuid\"), new HostVO(\"destHostUuid\"));\n            if (storagePoolTypeArray[i] == StoragePoolType.Filesystem || storagePoolTypeArray[i] == StoragePoolType.NetworkFilesystem) {\n                Assert.assertEquals(StrategyPriority.HYPERVISOR, strategyPriority);\n            } else {\n                Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n            }\n        }\n    }\n","realPath":"engine/storage/datamotion/src/test/java/org/apache/cloudstack/storage/motion/KvmNonManagedStorageSystemDataMotionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"},{"authorDate":"2019-06-10 18:05:26","commitOrder":3,"curCode":"    public void internalCanHandleTestIsManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(true, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap, null, null);\n            Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n        }\n    }\n","date":"2019-06-10 18:05:26","endLine":181,"groupId":"10684","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"internalCanHandleTestIsManaged","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5b/8d3aff2b8b1a9f8a0ce59a5beeccd22250579b.src","preCode":"    public void internalCanHandleTestIsManaged() {\n        StoragePoolType[] storagePoolTypeArray = StoragePoolType.values();\n        for (int i = 0; i < storagePoolTypeArray.length; i++) {\n            Map<VolumeInfo, DataStore> volumeMap = configureTestInternalCanHandle(true, storagePoolTypeArray[i]);\n            StrategyPriority strategyPriority = kvmNonManagedStorageDataMotionStrategy.internalCanHandle(volumeMap, null, null);\n            Assert.assertEquals(StrategyPriority.CANT_HANDLE, strategyPriority);\n        }\n    }\n","realPath":"engine/storage/datamotion/src/test/java/org/apache/cloudstack/storage/motion/KvmNonManagedStorageSystemDataMotionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"N"}],"commitId":"65a48dcb74e53ea977ea133b46f4acc10378ab34","commitMessage":"@@@Add SharedMountPoint to KVMs supported storage pool types (#4780)\n\n* Add SharedMountPoint to KVMs supported storage pool types\n\n* Fix live migration to iSCSI and improve logs\n\nCo-authored-by: Daniel Augusto Veronezi Salvador <daniel@scclouds.com.br>","date":"2021-08-16 23:32:19","modifiedFileCount":"5","status":"M","submitter":"Daniel Augusto Veronezi Salvador"}]
