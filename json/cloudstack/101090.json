[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void setUp() {\n        ComponentContext.initComponentsLifeCycle();\n        Account account = new AccountVO(\"testaccount\", 1, \"testdomain\", (short)0, UUID.randomUUID().toString());\n        UserVO user = new UserVO(1, \"testuser\", \"password\", \"firstname\", \"lastName\", \"email\", \"timezone\", UUID.randomUUID().toString(), User.Source.UNKNOWN);\n\n        CallContext.register(user, account);\n\n        createACLItemCmd = new CreateNetworkACLCmd() {\n            @Override\n            public Long getACLId() {\n                return 3L;\n            }\n\n            @Override\n            public Integer getNumber() {\n                return 1;\n            }\n\n            @Override\n            public String getProtocol() {\n                return \"TCP\";\n            }\n        };\n\n        acl = new NetworkACLVO() {\n            @Override\n            public Long getVpcId() {\n                return 1L;\n            }\n\n            @Override\n            public long getId() {\n                return 1L;\n            }\n\n        };\n\n        aclItem = new NetworkACLItemVO() {\n            @Override\n            public long getAclId() {\n                return 4L;\n            }\n        };\n    }\n","date":"2018-01-20 05:49:27","endLine":147,"groupId":"13413","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/19/09a4f500bf928426297af683f70fe234b01cb1.src","preCode":"    public void setUp() {\n        ComponentContext.initComponentsLifeCycle();\n        Account account = new AccountVO(\"testaccount\", 1, \"testdomain\", (short)0, UUID.randomUUID().toString());\n        UserVO user = new UserVO(1, \"testuser\", \"password\", \"firstname\", \"lastName\", \"email\", \"timezone\", UUID.randomUUID().toString(), User.Source.UNKNOWN);\n\n        CallContext.register(user, account);\n\n        createACLItemCmd = new CreateNetworkACLCmd() {\n            @Override\n            public Long getACLId() {\n                return 3L;\n            }\n\n            @Override\n            public Integer getNumber() {\n                return 1;\n            }\n\n            @Override\n            public String getProtocol() {\n                return \"TCP\";\n            }\n        };\n\n        acl = new NetworkACLVO() {\n            @Override\n            public Long getVpcId() {\n                return 1L;\n            }\n\n            @Override\n            public long getId() {\n                return 1L;\n            }\n\n        };\n\n        aclItem = new NetworkACLItemVO() {\n            @Override\n            public long getAclId() {\n                return 4L;\n            }\n        };\n    }\n","realPath":"server/src/test/java/com/cloud/vpc/NetworkACLServiceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void setUp() {\n        Account account = new AccountVO(\"testaccount\", 1, \"networkdomain\", (short)0, UUID.randomUUID().toString());\n\n        UserVO user = new UserVO(1, \"testuser\", \"password\", \"firstname\", \"lastName\", \"email\", \"timezone\", UUID.randomUUID().toString(), User.Source.UNKNOWN);\n\n        CallContext.register(user, account);\n    }\n","date":"2018-01-20 05:49:27","endLine":77,"groupId":"13413","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/68/0f126621110b3ee52380754fe014932fa003ea.src","preCode":"    public void setUp() {\n        Account account = new AccountVO(\"testaccount\", 1, \"networkdomain\", (short)0, UUID.randomUUID().toString());\n\n        UserVO user = new UserVO(1, \"testuser\", \"password\", \"firstname\", \"lastName\", \"email\", \"timezone\", UUID.randomUUID().toString(), User.Source.UNKNOWN);\n\n        CallContext.register(user, account);\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-03-13 22:07:35","commitOrder":2,"curCode":"    public void setUp() {\n        ComponentContext.initComponentsLifeCycle();\n        Account account = new AccountVO(\"testaccount\", 1, \"testdomain\", (short)0, UUID.randomUUID().toString());\n        UserVO user = new UserVO(1, \"testuser\", \"password\", \"firstname\", \"lastName\", \"email\", \"timezone\", UUID.randomUUID().toString(), User.Source.UNKNOWN);\n\n        CallContext.register(user, account);\n    }\n","date":"2018-03-13 22:07:35","endLine":96,"groupId":"101090","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/35/a94a2914bee1dda040b4a033456cd46a946d24.src","preCode":"    public void setUp() {\n        ComponentContext.initComponentsLifeCycle();\n        Account account = new AccountVO(\"testaccount\", 1, \"testdomain\", (short)0, UUID.randomUUID().toString());\n        UserVO user = new UserVO(1, \"testuser\", \"password\", \"firstname\", \"lastName\", \"email\", \"timezone\", UUID.randomUUID().toString(), User.Source.UNKNOWN);\n\n        CallContext.register(user, account);\n\n        createACLItemCmd = new CreateNetworkACLCmd() {\n            @Override\n            public Long getACLId() {\n                return 3L;\n            }\n\n            @Override\n            public Integer getNumber() {\n                return 1;\n            }\n\n            @Override\n            public String getProtocol() {\n                return \"TCP\";\n            }\n        };\n\n        acl = new NetworkACLVO() {\n            @Override\n            public Long getVpcId() {\n                return 1L;\n            }\n\n            @Override\n            public long getId() {\n                return 1L;\n            }\n\n        };\n\n        aclItem = new NetworkACLItemVO() {\n            @Override\n            public long getAclId() {\n                return 4L;\n            }\n        };\n    }\n","realPath":"server/src/test/java/com/cloud/vpc/NetworkACLServiceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void setUp() {\n        Account account = new AccountVO(\"testaccount\", 1, \"networkdomain\", (short)0, UUID.randomUUID().toString());\n\n        UserVO user = new UserVO(1, \"testuser\", \"password\", \"firstname\", \"lastName\", \"email\", \"timezone\", UUID.randomUUID().toString(), User.Source.UNKNOWN);\n\n        CallContext.register(user, account);\n    }\n","date":"2018-01-20 05:49:27","endLine":77,"groupId":"101090","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/68/0f126621110b3ee52380754fe014932fa003ea.src","preCode":"    public void setUp() {\n        Account account = new AccountVO(\"testaccount\", 1, \"networkdomain\", (short)0, UUID.randomUUID().toString());\n\n        UserVO user = new UserVO(1, \"testuser\", \"password\", \"firstname\", \"lastName\", \"email\", \"timezone\", UUID.randomUUID().toString(), User.Source.UNKNOWN);\n\n        CallContext.register(user, account);\n    }\n","realPath":"server/src/test/java/org/apache/cloudstack/region/gslb/GlobalLoadBalancingRulesServiceImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"N"}],"commitId":"7efdaa65f7cef4cc27441fff36165d0042422b94","commitMessage":"@@@[CLOUDSTACK-10314] Add Text-Field to each ACL Rule (#2475)\n\n* [CLOUDSTACK-10314] Add Text-Field to each ACL Rule\n\nIt is interesting to have a text field (e.g. CHAR-256) added to each ACL rule.  which allows to enter a \"reason\" for each FW Rule created. This is valuable for customer documentation.  as well as best practice for an evidence towards auditing the system\n\n* Formatting to make check style happy and code clean ups\n","date":"2018-03-13 22:07:35","modifiedFileCount":"13","status":"M","submitter":"Rafael Weing?rtner"}]
