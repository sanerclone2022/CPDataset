[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().getRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().getSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().getIsPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n    }\n","date":"2018-01-20 05:49:27","endLine":248,"groupId":"9623","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/11/444b0d008a9601a3ca478d70e2d344512e8762.src","preCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().getRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().getSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().getIsPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/network/dao/NetworkDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","date":"2018-01-20 05:49:27","endLine":62,"groupId":"20860","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"SyncQueueItemDaoImpl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/29/c3f1b289fb1bad852a3bac114a9352bc526fc0.src","preCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","realPath":"framework/jobs/src/main/java/org/apache/cloudstack/framework/jobs/dao/SyncQueueItemDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-05-11 15:35:36","commitOrder":2,"curCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        AllFieldsSearch.and(\"redundant\", AllFieldsSearch.entity().isRedundant(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().getRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().getSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().getIsPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n    }\n","date":"2018-05-11 15:39:03","endLine":249,"groupId":"9623","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/1e/33b6ac535f8648d851cff88492406163694e95.src","preCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().getRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().getSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().getIsPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/network/dao/NetworkDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","date":"2018-01-20 05:49:27","endLine":62,"groupId":"20860","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"SyncQueueItemDaoImpl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/29/c3f1b289fb1bad852a3bac114a9352bc526fc0.src","preCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","realPath":"framework/jobs/src/main/java/org/apache/cloudstack/framework/jobs/dao/SyncQueueItemDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"}],"commitId":"65511c4335eb5060fb7a3b4577e99d54b72ae6c3","commitMessage":"@@@Merge branch '4.11': Reduce VR downtime during network restart (#2508)\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2018-05-11 15:39:03","modifiedFileCount":"21","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-09-22 23:20:48","commitOrder":3,"curCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        AllFieldsSearch.and(\"redundant\", AllFieldsSearch.entity().isRedundant(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().isRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().isSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().isPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n    }\n","date":"2018-09-22 23:20:48","endLine":249,"groupId":"9623","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/23/936cbdeab1b78ae5feb7dfa0f7d9451227ec45.src","preCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        AllFieldsSearch.and(\"redundant\", AllFieldsSearch.entity().isRedundant(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().getRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().getSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().getIsPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/network/dao/NetworkDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","date":"2018-01-20 05:49:27","endLine":62,"groupId":"20860","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"SyncQueueItemDaoImpl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/29/c3f1b289fb1bad852a3bac114a9352bc526fc0.src","preCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","realPath":"framework/jobs/src/main/java/org/apache/cloudstack/framework/jobs/dao/SyncQueueItemDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"}],"commitId":"d53fc944857eb6e6d9542eef915f14066dab5861","commitMessage":"@@@CLOUDSTACK-10365: Change the \"getXXX\" boolean method names to \"isXXX\" (#2847)\n\nThese boolean-return methods are named as \"getXXX\".\nOther boolean-return methods are named as \"isXXX\".\nConsidering there methods will return boolean values.  it should be more clear and consistent to rename them as \"isXXX\".\n(rebase #2602 and #2816)\n","date":"2018-09-22 23:20:48","modifiedFileCount":"77","status":"M","submitter":"Kui LIU"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-01-31 18:22:42","commitOrder":4,"curCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"name\", AllFieldsSearch.entity().getName(), Op.EQ);\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        AllFieldsSearch.and(\"redundant\", AllFieldsSearch.entity().isRedundant(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().isRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().isSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().isPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n    }\n","date":"2020-01-31 18:22:42","endLine":250,"groupId":"9623","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/88/9bbc084676cfdc9e35ef286545f99869aba727.src","preCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        AllFieldsSearch.and(\"redundant\", AllFieldsSearch.entity().isRedundant(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().isRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().isSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().isPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/network/dao/NetworkDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":4,"curCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","date":"2018-01-20 05:49:27","endLine":62,"groupId":"20860","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"SyncQueueItemDaoImpl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/29/c3f1b289fb1bad852a3bac114a9352bc526fc0.src","preCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","realPath":"framework/jobs/src/main/java/org/apache/cloudstack/framework/jobs/dao/SyncQueueItemDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"}],"commitId":"a2a4968f51e08bba3a80af2dda402ff994144835","commitMessage":"@@@server: Allow creating network with duplicate name (#3807)\n\nAdd a global setting to disable creating networks with same name in an account\n\nAdd a global setting to disable creating network without\nmentioning the start and end IPv4 or IPv6 address\n\nBy default we can create networks with the same name in the account.\nSometimes we should not create the networks with same name.\nThis change adds a global setting which prevents creating the network with same name.\nThe default value is true and set it to false to prevent creating network with same names.\n\nAlso its possible to create a shared network without mentioning the\nstart and the end IPv4 or IPv6 address.\nThis change adds a global setting which prevents creating a shared\nnetwork without specifying the start and the end IPv4 or IPv6 address","date":"2020-01-31 18:22:42","modifiedFileCount":"4","status":"M","submitter":"Rakesh"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-02-24 05:21:08","commitOrder":5,"curCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"name\", AllFieldsSearch.entity().getName(), Op.EQ);\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        AllFieldsSearch.and(\"redundant\", AllFieldsSearch.entity().isRedundant(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().isRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().isSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().isPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n        PrivateNetworkSearch = createSearchBuilder();\n        PrivateNetworkSearch.and(\"cidr\", PrivateNetworkSearch.entity().getCidr(), Op.EQ);\n        PrivateNetworkSearch.and(\"offering\", PrivateNetworkSearch.entity().getNetworkOfferingId(), Op.EQ);\n        PrivateNetworkSearch.and(\"datacenter\", PrivateNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        PrivateNetworkSearch.and(\"broadcastUri\", PrivateNetworkSearch.entity().getBroadcastUri(), Op.EQ);\n        final SearchBuilder<VpcGatewayVO> join10 = _vpcGatewayDao.createSearchBuilder();\n        join10.and(\"vpc\", join10.entity().getVpcId(), Op.EQ);\n        PrivateNetworkSearch.join(\"vpcgateways\", join10, PrivateNetworkSearch.entity().getId(), join10.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        PrivateNetworkSearch.done();\n    }\n","date":"2020-02-24 05:21:08","endLine":268,"groupId":"9623","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/71/1da1fa7f7130dd0b2dbcb716932c93ada66928.src","preCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"name\", AllFieldsSearch.entity().getName(), Op.EQ);\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        AllFieldsSearch.and(\"redundant\", AllFieldsSearch.entity().isRedundant(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().isRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().isSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().isPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/network/dao/NetworkDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":5,"curCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","date":"2018-01-20 05:49:27","endLine":62,"groupId":"20860","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"SyncQueueItemDaoImpl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/29/c3f1b289fb1bad852a3bac114a9352bc526fc0.src","preCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","realPath":"framework/jobs/src/main/java/org/apache/cloudstack/framework/jobs/dao/SyncQueueItemDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"}],"commitId":"ce894238d904a9c49c1140371f612a51d251efc1","commitMessage":"@@@vpc: add bypassvlanoverlapcheck parameter when create private g? (#3899)\n\n","date":"2020-02-24 05:21:08","modifiedFileCount":"12","status":"M","submitter":"Wei Zhou"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-04-05 17:07:11","commitOrder":6,"curCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"name\", AllFieldsSearch.entity().getName(), Op.EQ);\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        AllFieldsSearch.and(\"redundant\", AllFieldsSearch.entity().isRedundant(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().isRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PersistentNetworkSearch = createSearchBuilder();\n        PersistentNetworkSearch.and(\"id\", PersistentNetworkSearch.entity().getId(), Op.NEQ);\n        PersistentNetworkSearch.and(\"guestType\", PersistentNetworkSearch.entity().getGuestType(), Op.IN);\n        PersistentNetworkSearch.and(\"broadcastUri\", PersistentNetworkSearch.entity().getBroadcastUri(), Op.EQ);\n        PersistentNetworkSearch.and(\"removed\", PersistentNetworkSearch.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> persistentNtwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        persistentNtwkOffJoin.and(\"persistent\", persistentNtwkOffJoin.entity().isPersistent(), Op.EQ);\n        PersistentNetworkSearch.join(\"persistent\", persistentNtwkOffJoin, PersistentNetworkSearch.entity().getNetworkOfferingId(), persistentNtwkOffJoin.entity().getId(), JoinType.INNER);\n        PersistentNetworkSearch.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().isSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().isPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n        PrivateNetworkSearch = createSearchBuilder();\n        PrivateNetworkSearch.and(\"cidr\", PrivateNetworkSearch.entity().getCidr(), Op.EQ);\n        PrivateNetworkSearch.and(\"offering\", PrivateNetworkSearch.entity().getNetworkOfferingId(), Op.EQ);\n        PrivateNetworkSearch.and(\"datacenter\", PrivateNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        PrivateNetworkSearch.and(\"broadcastUri\", PrivateNetworkSearch.entity().getBroadcastUri(), Op.EQ);\n        final SearchBuilder<VpcGatewayVO> join10 = _vpcGatewayDao.createSearchBuilder();\n        join10.and(\"vpc\", join10.entity().getVpcId(), Op.EQ);\n        PrivateNetworkSearch.join(\"vpcgateways\", join10, PrivateNetworkSearch.entity().getId(), join10.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        PrivateNetworkSearch.done();\n    }\n","date":"2021-04-05 17:07:11","endLine":279,"groupId":"10338","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a2/7a22dc147aa5ba3b56e4303e085f247510b488.src","preCode":"    protected void init() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"name\", AllFieldsSearch.entity().getName(), Op.EQ);\n        AllFieldsSearch.and(\"trafficType\", AllFieldsSearch.entity().getTrafficType(), Op.EQ);\n        AllFieldsSearch.and(\"cidr\", AllFieldsSearch.entity().getCidr(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastType\", AllFieldsSearch.entity().getBroadcastDomainType(), Op.EQ);\n        AllFieldsSearch.and(\"offering\", AllFieldsSearch.entity().getNetworkOfferingId(), Op.EQ);\n        AllFieldsSearch.and(\"datacenter\", AllFieldsSearch.entity().getDataCenterId(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"related\", AllFieldsSearch.entity().getRelated(), Op.EQ);\n        AllFieldsSearch.and(\"guestType\", AllFieldsSearch.entity().getGuestType(), Op.EQ);\n        AllFieldsSearch.and(\"physicalNetwork\", AllFieldsSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"broadcastUri\", AllFieldsSearch.entity().getBroadcastUri(), Op.EQ);\n        AllFieldsSearch.and(\"vpcId\", AllFieldsSearch.entity().getVpcId(), Op.EQ);\n        AllFieldsSearch.and(\"aclId\", AllFieldsSearch.entity().getNetworkACLId(), Op.EQ);\n        AllFieldsSearch.and(\"redundant\", AllFieldsSearch.entity().isRedundant(), Op.EQ);\n        final SearchBuilder<NetworkOfferingVO> join1 = _ntwkOffDao.createSearchBuilder();\n        join1.and(\"isSystem\", join1.entity().isSystemOnly(), Op.EQ);\n        join1.and(\"isRedundant\", join1.entity().isRedundantRouter(), Op.EQ);\n        AllFieldsSearch.join(\"offerings\", join1, AllFieldsSearch.entity().getNetworkOfferingId(), join1.entity().getId(), JoinBuilder.JoinType.INNER);\n        AllFieldsSearch.done();\n\n        AccountSearch = createSearchBuilder();\n        AccountSearch.and(\"offering\", AccountSearch.entity().getNetworkOfferingId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join = _accountsDao.createSearchBuilder();\n        join.and(\"account\", join.entity().getAccountId(), Op.EQ);\n        AccountSearch.join(\"accounts\", join, AccountSearch.entity().getId(), join.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountSearch.and(\"datacenter\", AccountSearch.entity().getDataCenterId(), Op.EQ);\n        AccountSearch.and(\"cidr\", AccountSearch.entity().getCidr(), Op.EQ);\n        AccountSearch.and(\"vpcId\", AccountSearch.entity().getVpcId(), Op.EQ);\n        AccountSearch.done();\n\n        RelatedConfigSearch = createSearchBuilder();\n        RelatedConfigSearch.and(\"offering\", RelatedConfigSearch.entity().getNetworkOfferingId(), Op.EQ);\n        RelatedConfigSearch.and(\"datacenter\", RelatedConfigSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> join2 = _accountsDao.createSearchBuilder();\n        join2.and(\"account\", join2.entity().getAccountId(), Op.EQ);\n        RelatedConfigSearch.join(\"account\", join2, join2.entity().getNetworkId(), RelatedConfigSearch.entity().getId(), JoinType.INNER);\n        RelatedConfigSearch.done();\n\n        AccountNetworkSearch = createSearchBuilder();\n        AccountNetworkSearch.and(\"networkId\", AccountNetworkSearch.entity().getId(), Op.EQ);\n        final SearchBuilder<NetworkAccountVO> mapJoin = _accountsDao.createSearchBuilder();\n        mapJoin.and(\"accountId\", mapJoin.entity().getAccountId(), Op.EQ);\n        AccountNetworkSearch.join(\"networkSearch\", mapJoin, AccountNetworkSearch.entity().getId(), mapJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        AccountNetworkSearch.done();\n\n        ZoneBroadcastUriSearch = createSearchBuilder();\n        ZoneBroadcastUriSearch.and(\"dataCenterId\", ZoneBroadcastUriSearch.entity().getDataCenterId(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"broadcastUri\", ZoneBroadcastUriSearch.entity().getBroadcastUri(), Op.EQ);\n        ZoneBroadcastUriSearch.and(\"guestType\", ZoneBroadcastUriSearch.entity().getGuestType(), Op.EQ);\n        ZoneBroadcastUriSearch.done();\n\n        ZoneSecurityGroupSearch = createSearchBuilder();\n        ZoneSecurityGroupSearch.and(\"dataCenterId\", ZoneSecurityGroupSearch.entity().getDataCenterId(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> offJoin = _ntwkSvcMap.createSearchBuilder();\n        offJoin.and(\"service\", offJoin.entity().getService(), Op.EQ);\n        ZoneSecurityGroupSearch.join(\"services\", offJoin, ZoneSecurityGroupSearch.entity().getId(), offJoin.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        ZoneSecurityGroupSearch.done();\n\n        CountBy = createSearchBuilder(Integer.class);\n        CountBy.select(null, Func.COUNT, CountBy.entity().getId());\n        CountBy.and(\"offeringId\", CountBy.entity().getNetworkOfferingId(), Op.EQ);\n        CountBy.and(\"vpcId\", CountBy.entity().getVpcId(), Op.EQ);\n        CountBy.and(\"removed\", CountBy.entity().getRemoved(), Op.NULL);\n        final SearchBuilder<NetworkOfferingVO> ntwkOffJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOffJoin.and(\"isSystem\", ntwkOffJoin.entity().isSystemOnly(), Op.EQ);\n        CountBy.join(\"offerings\", ntwkOffJoin, CountBy.entity().getNetworkOfferingId(), ntwkOffJoin.entity().getId(), JoinBuilder.JoinType.INNER);\n        CountBy.done();\n\n        PhysicalNetworkSearch = createSearchBuilder();\n        PhysicalNetworkSearch.and(\"physicalNetworkId\", PhysicalNetworkSearch.entity().getPhysicalNetworkId(), Op.EQ);\n        PhysicalNetworkSearch.done();\n\n        SecurityGroupSearch = createSearchBuilder();\n        final SearchBuilder<NetworkServiceMapVO> join3 = _ntwkSvcMap.createSearchBuilder();\n        join3.and(\"service\", join3.entity().getService(), Op.EQ);\n        SecurityGroupSearch.join(\"services\", join3, SecurityGroupSearch.entity().getId(), join3.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SecurityGroupSearch.done();\n\n        NetworksCount = createSearchBuilder(Integer.class);\n        NetworksCount.select(null, Func.COUNT, NetworksCount.entity().getId());\n        NetworksCount.and(\"networkOfferingId\", NetworksCount.entity().getNetworkOfferingId(), SearchCriteria.Op.EQ);\n        NetworksCount.done();\n\n        NetworksRegularUserCanCreateSearch = createSearchBuilder(Long.class);\n        NetworksRegularUserCanCreateSearch.and(\"aclType\", NetworksRegularUserCanCreateSearch.entity().getAclType(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.and(\"displayNetwork\", NetworksRegularUserCanCreateSearch.entity().getDisplayNetwork(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.select(null, Func.COUNT, NetworksRegularUserCanCreateSearch.entity().getId());\n        final SearchBuilder<NetworkAccountVO> join4 = _accountsDao.createSearchBuilder();\n        join4.and(\"account\", join4.entity().getAccountId(), Op.EQ);\n        join4.and(\"isOwner\", join4.entity().isOwner(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"accounts\", join4, NetworksRegularUserCanCreateSearch.entity().getId(), join4.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join5 = _ntwkOffDao.createSearchBuilder();\n        join5.and(\"specifyVlan\", join5.entity().isSpecifyVlan(), Op.EQ);\n        NetworksRegularUserCanCreateSearch.join(\"ntwkOff\", join5, NetworksRegularUserCanCreateSearch.entity().getNetworkOfferingId(), join5.entity().getId(),\n                JoinBuilder.JoinType.INNER);\n        NetworksRegularUserCanCreateSearch.done();\n\n        _tgMacAddress = _tgs.get(\"macAddress\");\n\n        SourceNATSearch = createSearchBuilder();\n        SourceNATSearch.and(\"account\", SourceNATSearch.entity().getAccountId(), Op.EQ);\n        SourceNATSearch.and(\"datacenter\", SourceNATSearch.entity().getDataCenterId(), Op.EQ);\n        SourceNATSearch.and(\"guestType\", SourceNATSearch.entity().getGuestType(), Op.EQ);\n        final SearchBuilder<NetworkServiceMapVO> join6 = _ntwkSvcMap.createSearchBuilder();\n        join6.and(\"service\", join6.entity().getService(), Op.EQ);\n        SourceNATSearch.join(\"services\", join6, SourceNATSearch.entity().getId(), join6.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        SourceNATSearch.done();\n\n        VpcNetworksCount = createSearchBuilder(Long.class);\n        VpcNetworksCount.and(\"vpcId\", VpcNetworksCount.entity().getVpcId(), Op.EQ);\n        VpcNetworksCount.select(null, Func.COUNT, VpcNetworksCount.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> join9 = _ntwkOffDao.createSearchBuilder();\n        join9.and(\"isSystem\", join9.entity().isSystemOnly(), Op.EQ);\n        VpcNetworksCount.join(\"offerings\", join9, VpcNetworksCount.entity().getNetworkOfferingId(), join9.entity().getId(), JoinBuilder.JoinType.INNER);\n        VpcNetworksCount.done();\n\n        OfferingAccountNetworkSearch = createSearchBuilder();\n        OfferingAccountNetworkSearch.select(null, Func.DISTINCT, OfferingAccountNetworkSearch.entity().getId());\n        final SearchBuilder<NetworkOfferingVO> ntwkOfferingJoin = _ntwkOffDao.createSearchBuilder();\n        ntwkOfferingJoin.and(\"isSystem\", ntwkOfferingJoin.entity().isSystemOnly(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkOfferingSearch\", ntwkOfferingJoin, OfferingAccountNetworkSearch.entity().getNetworkOfferingId(), ntwkOfferingJoin.entity()\n                .getId(), JoinBuilder.JoinType.LEFT);\n        final SearchBuilder<NetworkAccountVO> ntwkAccountJoin = _accountsDao.createSearchBuilder();\n        ntwkAccountJoin.and(\"accountId\", ntwkAccountJoin.entity().getAccountId(), Op.EQ);\n        OfferingAccountNetworkSearch.join(\"ntwkAccountSearch\", ntwkAccountJoin, OfferingAccountNetworkSearch.entity().getId(), ntwkAccountJoin.entity().getNetworkId(),\n                JoinBuilder.JoinType.INNER);\n        OfferingAccountNetworkSearch.and(\"zoneId\", OfferingAccountNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        OfferingAccountNetworkSearch.and(\"type\", OfferingAccountNetworkSearch.entity().getGuestType(), Op.EQ);\n        OfferingAccountNetworkSearch.done();\n\n        GarbageCollectedSearch = createSearchBuilder(Long.class);\n        GarbageCollectedSearch.selectFields(GarbageCollectedSearch.entity().getId());\n        final SearchBuilder<NetworkOpVO> join7 = _ntwkOpDao.createSearchBuilder();\n        join7.and(\"activenics\", join7.entity().getActiveNicsCount(), Op.EQ);\n        join7.and(\"gc\", join7.entity().isGarbageCollected(), Op.EQ);\n        join7.and(\"check\", join7.entity().isCheckForGc(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOpGC\", join7, GarbageCollectedSearch.entity().getId(), join7.entity().getId(), JoinBuilder.JoinType.INNER);\n        final SearchBuilder<NetworkOfferingVO> join8 = _ntwkOffDao.createSearchBuilder();\n        join8.and(\"isPersistent\", join8.entity().isPersistent(), Op.EQ);\n        GarbageCollectedSearch.join(\"ntwkOffGC\", join8, GarbageCollectedSearch.entity().getNetworkOfferingId(), join8.entity().getId(), JoinBuilder.JoinType.INNER);\n        GarbageCollectedSearch.done();\n\n        PrivateNetworkSearch = createSearchBuilder();\n        PrivateNetworkSearch.and(\"cidr\", PrivateNetworkSearch.entity().getCidr(), Op.EQ);\n        PrivateNetworkSearch.and(\"offering\", PrivateNetworkSearch.entity().getNetworkOfferingId(), Op.EQ);\n        PrivateNetworkSearch.and(\"datacenter\", PrivateNetworkSearch.entity().getDataCenterId(), Op.EQ);\n        PrivateNetworkSearch.and(\"broadcastUri\", PrivateNetworkSearch.entity().getBroadcastUri(), Op.EQ);\n        final SearchBuilder<VpcGatewayVO> join10 = _vpcGatewayDao.createSearchBuilder();\n        join10.and(\"vpc\", join10.entity().getVpcId(), Op.EQ);\n        PrivateNetworkSearch.join(\"vpcgateways\", join10, PrivateNetworkSearch.entity().getId(), join10.entity().getNetworkId(), JoinBuilder.JoinType.INNER);\n        PrivateNetworkSearch.done();\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/network/dao/NetworkDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":6,"curCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","date":"2018-01-20 05:49:27","endLine":62,"groupId":"10338","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"SyncQueueItemDaoImpl","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/29/c3f1b289fb1bad852a3bac114a9352bc526fc0.src","preCode":"    public SyncQueueItemDaoImpl() {\n        super();\n        queueIdSearch = createSearchBuilder(Long.class);\n        queueIdSearch.and(\"contentId\", queueIdSearch.entity().getContentId(), Op.EQ);\n        queueIdSearch.and(\"contentType\", queueIdSearch.entity().getContentType(), Op.EQ);\n        queueIdSearch.selectFields(queueIdSearch.entity().getId());\n        queueIdSearch.done();\n\n        queueActiveItemSearch = createSearchBuilder(Integer.class);\n        queueActiveItemSearch.and(\"queueId\", queueActiveItemSearch.entity().getQueueId(), Op.EQ);\n        queueActiveItemSearch.and(\"processNumber\", queueActiveItemSearch.entity().getLastProcessNumber(), Op.NNULL);\n        queueActiveItemSearch.select(null, Func.COUNT, queueActiveItemSearch.entity().getId());\n        queueActiveItemSearch.done();\n    }\n","realPath":"framework/jobs/src/main/java/org/apache/cloudstack/framework/jobs/dao/SyncQueueItemDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"}],"commitId":"0dbeb262e4f483e06ca335aadcee9664cf7f35c4","commitMessage":"@@@server: Support for persistence mode in L2 networks (#4561)\n\nThis PR aims at introducing persistence mode in L2 networks and enhancing the behavior in Isolated networks\nDoc PR apache/cloudstack-documentation#183\n\nCo-authored-by: Pearl Dsilva <pearl.dsilva@shapeblue.com>","date":"2021-04-05 17:07:11","modifiedFileCount":"27","status":"M","submitter":"Pearl Dsilva"}]
