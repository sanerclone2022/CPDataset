[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testNetworkRulesVmSecondaryIpCommand() {\n        final String vmName = \"Test\";\n        final String vmMac = \"00:00:00:00\";\n        final String secondaryIp = \"127.0.0.1\";\n        final boolean action = true;\n\n        final NetworkRulesVmSecondaryIpCommand command = new NetworkRulesVmSecondaryIpCommand(vmName, vmMac, secondaryIp, action );\n\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n        final Connect conn = Mockito.mock(Connect.class);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenReturn(conn);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        when(libvirtComputingResource.configureNetworkRulesVMSecondaryIP(conn, command.getVmName(), command.getVmSecIp(), command.getAction())).thenReturn(true);\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertTrue(answer.getResult());\n\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(command.getVmName());\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        verify(libvirtComputingResource, times(1)).configureNetworkRulesVMSecondaryIP(conn, command.getVmName(), command.getVmSecIp(), command.getAction());\n    }\n","date":"2018-01-20 05:49:27","endLine":2395,"groupId":"21072","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNetworkRulesVmSecondaryIpCommand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2f/d7692df58eba74eb0aa325e4562be65e6cf043.src","preCode":"    public void testNetworkRulesVmSecondaryIpCommand() {\n        final String vmName = \"Test\";\n        final String vmMac = \"00:00:00:00\";\n        final String secondaryIp = \"127.0.0.1\";\n        final boolean action = true;\n\n        final NetworkRulesVmSecondaryIpCommand command = new NetworkRulesVmSecondaryIpCommand(vmName, vmMac, secondaryIp, action );\n\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n        final Connect conn = Mockito.mock(Connect.class);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenReturn(conn);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        when(libvirtComputingResource.configureNetworkRulesVMSecondaryIP(conn, command.getVmName(), command.getVmSecIp(), command.getAction())).thenReturn(true);\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertTrue(answer.getResult());\n\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(command.getVmName());\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        verify(libvirtComputingResource, times(1)).configureNetworkRulesVMSecondaryIP(conn, command.getVmName(), command.getVmSecIp(), command.getAction());\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2363,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testNetworkRulesSystemVmCommand() {\n        final String vmName = \"Test\";\n        final Type type = Type.SecondaryStorageVm;\n\n        final NetworkRulesSystemVmCommand command = new NetworkRulesSystemVmCommand(vmName, type);\n\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n        final Connect conn = Mockito.mock(Connect.class);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenReturn(conn);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        when(libvirtComputingResource.configureDefaultNetworkRulesForSystemVm(conn, command.getVmName())).thenReturn(true);\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertTrue(answer.getResult());\n\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(command.getVmName());\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        verify(libvirtComputingResource, times(1)).configureDefaultNetworkRulesForSystemVm(conn, command.getVmName());\n    }\n","date":"2018-01-20 05:49:27","endLine":2460,"groupId":"21072","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNetworkRulesSystemVmCommand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2f/d7692df58eba74eb0aa325e4562be65e6cf043.src","preCode":"    public void testNetworkRulesSystemVmCommand() {\n        final String vmName = \"Test\";\n        final Type type = Type.SecondaryStorageVm;\n\n        final NetworkRulesSystemVmCommand command = new NetworkRulesSystemVmCommand(vmName, type);\n\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n        final Connect conn = Mockito.mock(Connect.class);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenReturn(conn);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        when(libvirtComputingResource.configureDefaultNetworkRulesForSystemVm(conn, command.getVmName())).thenReturn(true);\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertTrue(answer.getResult());\n\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(command.getVmName());\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        verify(libvirtComputingResource, times(1)).configureDefaultNetworkRulesForSystemVm(conn, command.getVmName());\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2430,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-02-19 22:02:12","commitOrder":2,"curCode":"    public void testNetworkRulesVmSecondaryIpCommand() {\n        final String vmName = \"Test\";\n        final String vmMac = \"00:00:00:00\";\n        final String secondaryIp = \"127.0.0.1\";\n        final boolean action = true;\n\n        final NetworkRulesVmSecondaryIpCommand command = new NetworkRulesVmSecondaryIpCommand(vmName, vmMac, secondaryIp, action );\n\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n        final Connect conn = Mockito.mock(Connect.class);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenReturn(conn);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        when(libvirtComputingResource.configureNetworkRulesVMSecondaryIP(conn, command.getVmName(), command.getVmMac(), command.getVmSecIp(), command.getAction())).thenReturn(true);\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertTrue(answer.getResult());\n\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(command.getVmName());\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        verify(libvirtComputingResource, times(1)).configureNetworkRulesVMSecondaryIP(conn, command.getVmName(), command.getVmMac(), command.getVmSecIp(), command.getAction());\n    }\n","date":"2020-02-19 22:02:12","endLine":2431,"groupId":"103199","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNetworkRulesVmSecondaryIpCommand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/1b/f27d06ef685a3b7c7052f1db4a5dd086a30ec1.src","preCode":"    public void testNetworkRulesVmSecondaryIpCommand() {\n        final String vmName = \"Test\";\n        final String vmMac = \"00:00:00:00\";\n        final String secondaryIp = \"127.0.0.1\";\n        final boolean action = true;\n\n        final NetworkRulesVmSecondaryIpCommand command = new NetworkRulesVmSecondaryIpCommand(vmName, vmMac, secondaryIp, action );\n\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n        final Connect conn = Mockito.mock(Connect.class);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenReturn(conn);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        when(libvirtComputingResource.configureNetworkRulesVMSecondaryIP(conn, command.getVmName(), command.getVmSecIp(), command.getAction())).thenReturn(true);\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertTrue(answer.getResult());\n\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(command.getVmName());\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        verify(libvirtComputingResource, times(1)).configureNetworkRulesVMSecondaryIP(conn, command.getVmName(), command.getVmSecIp(), command.getAction());\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2399,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void testNetworkRulesSystemVmCommand() {\n        final String vmName = \"Test\";\n        final Type type = Type.SecondaryStorageVm;\n\n        final NetworkRulesSystemVmCommand command = new NetworkRulesSystemVmCommand(vmName, type);\n\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n        final Connect conn = Mockito.mock(Connect.class);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenReturn(conn);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        when(libvirtComputingResource.configureDefaultNetworkRulesForSystemVm(conn, command.getVmName())).thenReturn(true);\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertTrue(answer.getResult());\n\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(command.getVmName());\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        verify(libvirtComputingResource, times(1)).configureDefaultNetworkRulesForSystemVm(conn, command.getVmName());\n    }\n","date":"2018-01-20 05:49:27","endLine":2460,"groupId":"103199","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNetworkRulesSystemVmCommand","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2f/d7692df58eba74eb0aa325e4562be65e6cf043.src","preCode":"    public void testNetworkRulesSystemVmCommand() {\n        final String vmName = \"Test\";\n        final Type type = Type.SecondaryStorageVm;\n\n        final NetworkRulesSystemVmCommand command = new NetworkRulesSystemVmCommand(vmName, type);\n\n        final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock(LibvirtUtilitiesHelper.class);\n        final Connect conn = Mockito.mock(Connect.class);\n\n        when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);\n        try {\n            when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenReturn(conn);\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        when(libvirtComputingResource.configureDefaultNetworkRulesForSystemVm(conn, command.getVmName())).thenReturn(true);\n\n        final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance();\n        assertNotNull(wrapper);\n\n        final Answer answer = wrapper.execute(command, libvirtComputingResource);\n        assertTrue(answer.getResult());\n\n        try {\n            verify(libvirtUtilitiesHelper, times(1)).getConnectionByVmName(command.getVmName());\n        } catch (final LibvirtException e) {\n            fail(e.getMessage());\n        }\n        verify(libvirtComputingResource, times(1)).getLibvirtUtilitiesHelper();\n        verify(libvirtComputingResource, times(1)).configureDefaultNetworkRulesForSystemVm(conn, command.getVmName());\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2430,"status":"N"}],"commitId":"458d3b5b4753b16b1f07bfa1fe667037cb2623d6","commitMessage":"@@@Multiple networks support for vms in advanced zone with securit? (#3639)\n\n","date":"2020-02-19 22:02:12","modifiedFileCount":"16","status":"M","submitter":"Wei Zhou"}]
