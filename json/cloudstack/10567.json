[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void handlePowerOnReportWithNoPendingJobsOnVM(final VMInstanceVO vm) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        switch (vm.getState()) {\n        case Starting:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n\n            \r\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName()\n                    + \") state is sync-ed (Starting -> Running) from out-of-context transition. VM network environment may need to be reset\");\n            break;\n\n        case Running:\n            try {\n                if (vm.getHostId() != null && vm.getHostId().longValue() != vm.getPowerHostId().longValue()) {\n                    s_logger.info(\"Detected out of band VM migration from host \" + vm.getHostId() + \" to host \" + vm.getPowerHostId());\n                }\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n\n            break;\n\n        case Stopping:\n        case Stopped:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName() + \") state is sync-ed (\" + vm.getState()\n                    + \" -> Running) from out-of-context transition. VM network environment may need to be reset\");\n\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n            break;\n\n        case Destroyed:\n        case Expunging:\n            s_logger.info(\"Receive power on report when VM is in destroyed or expunging state. vm: \"\n                    + vm.getId() + \", state: \" + vm.getState());\n            break;\n\n        case Migrating:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n            break;\n\n        case Error:\n        default:\n            s_logger.info(\"Receive power on report when VM is in error or unexpected state. vm: \"\n                    + vm.getId() + \", state: \" + vm.getState());\n            break;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":4150,"groupId":"22900","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handlePowerOnReportWithNoPendingJobsOnVM","params":"(finalVMInstanceVOvm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/37/5b091062473ccd85428a27886ac001b7c6652b.src","preCode":"    private void handlePowerOnReportWithNoPendingJobsOnVM(final VMInstanceVO vm) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        switch (vm.getState()) {\n        case Starting:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n\n            \r\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName()\n                    + \") state is sync-ed (Starting -> Running) from out-of-context transition. VM network environment may need to be reset\");\n            break;\n\n        case Running:\n            try {\n                if (vm.getHostId() != null && vm.getHostId().longValue() != vm.getPowerHostId().longValue()) {\n                    s_logger.info(\"Detected out of band VM migration from host \" + vm.getHostId() + \" to host \" + vm.getPowerHostId());\n                }\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n\n            break;\n\n        case Stopping:\n        case Stopped:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName() + \") state is sync-ed (\" + vm.getState()\n                    + \" -> Running) from out-of-context transition. VM network environment may need to be reset\");\n\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n            break;\n\n        case Destroyed:\n        case Expunging:\n            s_logger.info(\"Receive power on report when VM is in destroyed or expunging state. vm: \"\n                    + vm.getId() + \", state: \" + vm.getState());\n            break;\n\n        case Migrating:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n            break;\n\n        case Error:\n        default:\n            s_logger.info(\"Receive power on report when VM is in error or unexpected state. vm: \"\n                    + vm.getId() + \", state: \" + vm.getState());\n            break;\n        }\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":4075,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void scanStalledVMInTransitionStateOnDisconnectedHosts() {\n        final Date cutTime = new Date(DateUtil.currentGMTTime().getTime() - VmOpWaitInterval.value() * 1000);\n        final List<Long> stuckAndUncontrollableVMs = listStalledVMInTransitionStateOnDisconnectedHosts(cutTime);\n        for (final Long vmId : stuckAndUncontrollableVMs) {\n            final VMInstanceVO vm = _vmDao.findById(vmId);\n\n            \r\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName() + \") is stuck in \" + vm.getState()\n                    + \" state and its host is unreachable for too long\");\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":4254,"groupId":"22466","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"scanStalledVMInTransitionStateOnDisconnectedHosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/37/5b091062473ccd85428a27886ac001b7c6652b.src","preCode":"    private void scanStalledVMInTransitionStateOnDisconnectedHosts() {\n        final Date cutTime = new Date(DateUtil.currentGMTTime().getTime() - VmOpWaitInterval.value() * 1000);\n        final List<Long> stuckAndUncontrollableVMs = listStalledVMInTransitionStateOnDisconnectedHosts(cutTime);\n        for (final Long vmId : stuckAndUncontrollableVMs) {\n            final VMInstanceVO vm = _vmDao.findById(vmId);\n\n            \r\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName() + \") is stuck in \" + vm.getState()\n                    + \" state and its host is unreachable for too long\");\n        }\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":4243,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-07-14 04:35:59","commitOrder":2,"curCode":"    private void handlePowerOnReportWithNoPendingJobsOnVM(final VMInstanceVO vm) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        Host host = _hostDao.findById(vm.getHostId());\n        Host poweredHost = _hostDao.findById(vm.getPowerHostId());\n        switch (vm.getState()) {\n        case Starting:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n\n            \r\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName()\n                    + \") state is sync-ed (Starting -> Running) from out-of-context transition. VM network environment may need to be reset\");\n            break;\n\n        case Running:\n            try {\n                if (vm.getHostId() != null && vm.getHostId().longValue() != vm.getPowerHostId().longValue()) {\n                    s_logger.info(String.format(\"Detected out of band VM migration from %s to %s\", host, poweredHost));\n                }\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n\n            break;\n\n        case Stopping:\n        case Stopped:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName() + \") state is sync-ed (\" + vm.getState()\n                    + \" -> Running) from out-of-context transition. VM network environment may need to be reset\");\n\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n            break;\n\n        case Destroyed:\n        case Expunging:\n            s_logger.info(\"Receive power on report when VM is in destroyed or expunging state. vm: \"\n                    + vm.getId() + \", state: \" + vm.getState());\n            break;\n\n        case Migrating:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n            break;\n\n        case Error:\n        default:\n            s_logger.info(\"Receive power on report when VM is in error or unexpected state. vm: \"\n                    + vm.getId() + \", state: \" + vm.getState());\n            break;\n        }\n    }\n","date":"2021-07-14 04:35:59","endLine":4921,"groupId":"10567","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handlePowerOnReportWithNoPendingJobsOnVM","params":"(finalVMInstanceVOvm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ec/a0852060d8514e997ef2619b228166581bb284.src","preCode":"    private void handlePowerOnReportWithNoPendingJobsOnVM(final VMInstanceVO vm) {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        switch (vm.getState()) {\n        case Starting:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n\n            \r\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName()\n                    + \") state is sync-ed (Starting -> Running) from out-of-context transition. VM network environment may need to be reset\");\n            break;\n\n        case Running:\n            try {\n                if (vm.getHostId() != null && vm.getHostId().longValue() != vm.getPowerHostId().longValue()) {\n                    s_logger.info(\"Detected out of band VM migration from host \" + vm.getHostId() + \" to host \" + vm.getPowerHostId());\n                }\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n\n            break;\n\n        case Stopping:\n        case Stopped:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName() + \") state is sync-ed (\" + vm.getState()\n                    + \" -> Running) from out-of-context transition. VM network environment may need to be reset\");\n\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n            break;\n\n        case Destroyed:\n        case Expunging:\n            s_logger.info(\"Receive power on report when VM is in destroyed or expunging state. vm: \"\n                    + vm.getId() + \", state: \" + vm.getState());\n            break;\n\n        case Migrating:\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is at \" + vm.getState() + \" and we received a power-on report while there is no pending jobs on it\");\n            try {\n                stateTransitTo(vm, VirtualMachine.Event.FollowAgentPowerOnReport, vm.getPowerHostId());\n            } catch (final NoTransitionException e) {\n                s_logger.warn(\"Unexpected VM state transition exception, race-condition?\", e);\n            }\n            s_logger.info(\"VM \" + vm.getInstanceName() + \" is sync-ed to at Running state according to power-on report from hypervisor\");\n            break;\n\n        case Error:\n        default:\n            s_logger.info(\"Receive power on report when VM is in error or unexpected state. vm: \"\n                    + vm.getId() + \", state: \" + vm.getState());\n            break;\n        }\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":4844,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private void scanStalledVMInTransitionStateOnDisconnectedHosts() {\n        final Date cutTime = new Date(DateUtil.currentGMTTime().getTime() - VmOpWaitInterval.value() * 1000);\n        final List<Long> stuckAndUncontrollableVMs = listStalledVMInTransitionStateOnDisconnectedHosts(cutTime);\n        for (final Long vmId : stuckAndUncontrollableVMs) {\n            final VMInstanceVO vm = _vmDao.findById(vmId);\n\n            \r\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName() + \") is stuck in \" + vm.getState()\n                    + \" state and its host is unreachable for too long\");\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":4254,"groupId":"10567","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"scanStalledVMInTransitionStateOnDisconnectedHosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/37/5b091062473ccd85428a27886ac001b7c6652b.src","preCode":"    private void scanStalledVMInTransitionStateOnDisconnectedHosts() {\n        final Date cutTime = new Date(DateUtil.currentGMTTime().getTime() - VmOpWaitInterval.value() * 1000);\n        final List<Long> stuckAndUncontrollableVMs = listStalledVMInTransitionStateOnDisconnectedHosts(cutTime);\n        for (final Long vmId : stuckAndUncontrollableVMs) {\n            final VMInstanceVO vm = _vmDao.findById(vmId);\n\n            \r\n            _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_SYNC, vm.getDataCenterId(), vm.getPodIdToDeployIn(),\n                    VM_SYNC_ALERT_SUBJECT, \"VM \" + vm.getHostName() + \"(\" + vm.getInstanceName() + \") is stuck in \" + vm.getState()\n                    + \" state and its host is unreachable for too long\");\n        }\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":4243,"status":"N"}],"commitId":"ca78f5b38687bee264d9df2212e8ae4d0cac9a4c","commitMessage":"@@@Enhance log messages with host name (#4575)\n\n* Enhance log messages with hostName\n\n* Use host.toString() on most of host logs.\n\n* Remove redundant \"Host\" in logs and enhance logs\n\n* duplicated \"for\"\n\n* Adopt String.format.  and enhance code\n\n* Address reviews enhancing log messages\n\nUpdate server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\n    -- server/src/main/java/com/cloud/vm/UserVmManagerImpl.java\n    -- server/src/main/java/com/cloud/resource/RollingMaintenanceManagerImpl.java\n\nCo-authored-by: Daniel Augusto Veronezi Salvador <38945620+GutoVeronezi@users.noreply.github.com>\n\n* Fix String.format issue and change log message from debug to warn\n\n* Fix checkstyle issue\n\n* Fix string.format log\n\n* Address review: enhance logs\n\n* Enhance log of hosts in maintenance avoid list\n\n* Remove \"VM\" on logs as vm.toString() already appends VM-<details>\n\n* Add more details of the VM when postStateTransitionEvent\n\n* Address reviewer and enhance VMInstanceVO.toString()\n\nCo-authored-by: Daniel Augusto Veronezi Salvador <38945620+GutoVeronezi@users.noreply.github.com>","date":"2021-07-14 04:35:59","modifiedFileCount":"11","status":"M","submitter":"Gabriel Beims Br?scher"}]
