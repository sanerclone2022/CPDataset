[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private String matchPifFileInDirectory(final String bridgeName) {\n        final File brif = new File(\"/sys/devices/virtual/net/\" + bridgeName + \"/brif\");\n\n        if (!brif.isDirectory()) {\n            final File pif = new File(\"/sys/class/net/\" + bridgeName);\n            if (pif.isDirectory()) {\n                \r\n                return bridgeName;\n            }\n            s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", does \" + brif.getAbsolutePath() + \"exist?\");\n            return \"\";\n        }\n\n        final File[] interfaces = brif.listFiles();\n\n        for (File anInterface : interfaces) {\n            final String fname = anInterface.getName();\n            s_logger.debug(\"matchPifFileInDirectory: file name '\" + fname + \"'\");\n            if (isInterface(fname)) {\n                return fname;\n            }\n        }\n\n        s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", did not find an eth*, bond*, team*, vlan*, em*, p*p*, ens*, eno*, enp*, or enx* in \" + brif.getAbsolutePath());\n        return \"\";\n    }\n","date":"2018-01-20 05:49:27","endLine":180,"groupId":"15307","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"matchPifFileInDirectory","params":"(finalStringbridgeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/11/b22c494f46f1276bb7fddf6e98ed95a4b36882.src","preCode":"    private String matchPifFileInDirectory(final String bridgeName) {\n        final File brif = new File(\"/sys/devices/virtual/net/\" + bridgeName + \"/brif\");\n\n        if (!brif.isDirectory()) {\n            final File pif = new File(\"/sys/class/net/\" + bridgeName);\n            if (pif.isDirectory()) {\n                \r\n                return bridgeName;\n            }\n            s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", does \" + brif.getAbsolutePath() + \"exist?\");\n            return \"\";\n        }\n\n        final File[] interfaces = brif.listFiles();\n\n        for (File anInterface : interfaces) {\n            final String fname = anInterface.getName();\n            s_logger.debug(\"matchPifFileInDirectory: file name '\" + fname + \"'\");\n            if (isInterface(fname)) {\n                return fname;\n            }\n        }\n\n        s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", did not find an eth*, bond*, team*, vlan*, em*, p*p*, ens*, eno*, enp*, or enx* in \" + brif.getAbsolutePath());\n        return \"\";\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/BridgeVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private String matchPifFileInDirectory(final String bridgeName) {\n        final File brif = new File(\"/sys/devices/virtual/net/\" + bridgeName + \"/brif\");\n\n        if (!brif.isDirectory()) {\n            final File pif = new File(\"/sys/class/net/\" + bridgeName);\n            if (pif.isDirectory()) {\n                \r\n                return bridgeName;\n            }\n            s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", does \" + brif.getAbsolutePath() + \"exist?\");\n            return \"\";\n        }\n\n        final File[] interfaces = brif.listFiles();\n\n        for (int i = 0; i < interfaces.length; i++) {\n            final String fname = interfaces[i].getName();\n            s_logger.debug(\"matchPifFileInDirectory: file name '\" + fname + \"'\");\n            if (isInterface(fname)) {\n                return fname;\n            }\n        }\n\n        s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", did not find an eth*, bond*, team*, vlan*, em*, p*p*, ens*, eno*, enp*, or enx* in \" + brif.getAbsolutePath());\n        return \"\";\n    }\n","date":"2018-01-20 05:49:27","endLine":1292,"groupId":"3500","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"matchPifFileInDirectory","params":"(finalStringbridgeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9b/7fb2ea0139852633e459ee1d9cc6507a8d43c5.src","preCode":"    private String matchPifFileInDirectory(final String bridgeName) {\n        final File brif = new File(\"/sys/devices/virtual/net/\" + bridgeName + \"/brif\");\n\n        if (!brif.isDirectory()) {\n            final File pif = new File(\"/sys/class/net/\" + bridgeName);\n            if (pif.isDirectory()) {\n                \r\n                return bridgeName;\n            }\n            s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", does \" + brif.getAbsolutePath() + \"exist?\");\n            return \"\";\n        }\n\n        final File[] interfaces = brif.listFiles();\n\n        for (int i = 0; i < interfaces.length; i++) {\n            final String fname = interfaces[i].getName();\n            s_logger.debug(\"matchPifFileInDirectory: file name '\" + fname + \"'\");\n            if (isInterface(fname)) {\n                return fname;\n            }\n        }\n\n        s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", did not find an eth*, bond*, team*, vlan*, em*, p*p*, ens*, eno*, enp*, or enx* in \" + brif.getAbsolutePath());\n        return \"\";\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResource.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1267,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-12-07 04:29:00","commitOrder":2,"curCode":"    private String matchPifFileInDirectory(final String bridgeName) {\n        final File brif = new File(\"/sys/devices/virtual/net/\" + bridgeName + \"/brif\");\n\n        if (!brif.isDirectory()) {\n            final File pif = new File(\"/sys/class/net/\" + bridgeName);\n            if (pif.isDirectory()) {\n                \r\n                return bridgeName;\n            }\n            s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", does \" + brif.getAbsolutePath() + \"exist?\");\n            return \"\";\n        }\n\n        final File[] interfaces = brif.listFiles();\n\n        for (File anInterface : interfaces) {\n            final String fname = anInterface.getName();\n            s_logger.debug(\"matchPifFileInDirectory: file name '\" + fname + \"'\");\n            if (LibvirtComputingResource.isInterface(fname)) {\n                return fname;\n            }\n        }\n\n        s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", did not find an eth*, bond*, team*, vlan*, em*, p*p*, ens*, eno*, enp*, or enx* in \" + brif.getAbsolutePath());\n        return \"\";\n    }\n","date":"2018-12-07 04:29:00","endLine":180,"groupId":"103280","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"matchPifFileInDirectory","params":"(finalStringbridgeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/eb/af23f1ca790e03e9c870700e7f3eec2f651d60.src","preCode":"    private String matchPifFileInDirectory(final String bridgeName) {\n        final File brif = new File(\"/sys/devices/virtual/net/\" + bridgeName + \"/brif\");\n\n        if (!brif.isDirectory()) {\n            final File pif = new File(\"/sys/class/net/\" + bridgeName);\n            if (pif.isDirectory()) {\n                \r\n                return bridgeName;\n            }\n            s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", does \" + brif.getAbsolutePath() + \"exist?\");\n            return \"\";\n        }\n\n        final File[] interfaces = brif.listFiles();\n\n        for (File anInterface : interfaces) {\n            final String fname = anInterface.getName();\n            s_logger.debug(\"matchPifFileInDirectory: file name '\" + fname + \"'\");\n            if (isInterface(fname)) {\n                return fname;\n            }\n        }\n\n        s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", did not find an eth*, bond*, team*, vlan*, em*, p*p*, ens*, eno*, enp*, or enx* in \" + brif.getAbsolutePath());\n        return \"\";\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/BridgeVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private String matchPifFileInDirectory(final String bridgeName) {\n        final File brif = new File(\"/sys/devices/virtual/net/\" + bridgeName + \"/brif\");\n\n        if (!brif.isDirectory()) {\n            final File pif = new File(\"/sys/class/net/\" + bridgeName);\n            if (pif.isDirectory()) {\n                \r\n                return bridgeName;\n            }\n            s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", does \" + brif.getAbsolutePath() + \"exist?\");\n            return \"\";\n        }\n\n        final File[] interfaces = brif.listFiles();\n\n        for (int i = 0; i < interfaces.length; i++) {\n            final String fname = interfaces[i].getName();\n            s_logger.debug(\"matchPifFileInDirectory: file name '\" + fname + \"'\");\n            if (isInterface(fname)) {\n                return fname;\n            }\n        }\n\n        s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", did not find an eth*, bond*, team*, vlan*, em*, p*p*, ens*, eno*, enp*, or enx* in \" + brif.getAbsolutePath());\n        return \"\";\n    }\n","date":"2018-01-20 05:49:27","endLine":1292,"groupId":"103280","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"matchPifFileInDirectory","params":"(finalStringbridgeName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9b/7fb2ea0139852633e459ee1d9cc6507a8d43c5.src","preCode":"    private String matchPifFileInDirectory(final String bridgeName) {\n        final File brif = new File(\"/sys/devices/virtual/net/\" + bridgeName + \"/brif\");\n\n        if (!brif.isDirectory()) {\n            final File pif = new File(\"/sys/class/net/\" + bridgeName);\n            if (pif.isDirectory()) {\n                \r\n                return bridgeName;\n            }\n            s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", does \" + brif.getAbsolutePath() + \"exist?\");\n            return \"\";\n        }\n\n        final File[] interfaces = brif.listFiles();\n\n        for (int i = 0; i < interfaces.length; i++) {\n            final String fname = interfaces[i].getName();\n            s_logger.debug(\"matchPifFileInDirectory: file name '\" + fname + \"'\");\n            if (isInterface(fname)) {\n                return fname;\n            }\n        }\n\n        s_logger.debug(\"failing to get physical interface from bridge \" + bridgeName + \", did not find an eth*, bond*, team*, vlan*, em*, p*p*, ens*, eno*, enp*, or enx* in \" + brif.getAbsolutePath());\n        return \"\";\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResource.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1267,"status":"N"}],"commitId":"9dce8a5dea508a69d31dd4159c566fdf119c223e","commitMessage":"@@@kvm: Added two more device name patterns to valid bridge slaves (lo* and dummy*) (#3000)\n\nAdded dummy and lo devices to be treated as a normal bridge slave devs.\nFixes #2998  \nAdded two more device names (lo* and dummy*). Implemented tests. Code was refactored.\nImproved paths concatenation code from \"+\" to Paths.get.","date":"2018-12-07 04:29:00","modifiedFileCount":"3","status":"M","submitter":"Bitworks LLC"}]
