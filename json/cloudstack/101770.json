[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean deleteVpcOffering(final long offId) {\n        CallContext.current().setEventDetails(\" Id: \" + offId);\n\n        \r\n        final VpcOfferingVO offering = _vpcOffDao.findById(offId);\n        if (offering == null) {\n            throw new InvalidParameterValueException(\"unable to find vpc offering \" + offId);\n        }\n\n        \r\n        if (offering.isDefault() == true) {\n            throw new InvalidParameterValueException(\"Default network offering can't be deleted\");\n        }\n\n        \r\n        \r\n        final int vpcCount = _vpcDao.getVpcCountByOfferingId(offId);\n        if (vpcCount > 0) {\n            throw new InvalidParameterValueException(\"Can't delete vpc offering \" + offId + \" as its used by \" + vpcCount + \" vpcs. \"\n                    + \"To make the network offering unavaiable, disable it\");\n        }\n\n        if (_vpcOffDao.remove(offId)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":684,"groupId":"14891","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteVpcOffering","params":"(finallongoffId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ab/6441ac5b7e6f8edb855842f28034fb2a8a3cf5.src","preCode":"    public boolean deleteVpcOffering(final long offId) {\n        CallContext.current().setEventDetails(\" Id: \" + offId);\n\n        \r\n        final VpcOfferingVO offering = _vpcOffDao.findById(offId);\n        if (offering == null) {\n            throw new InvalidParameterValueException(\"unable to find vpc offering \" + offId);\n        }\n\n        \r\n        if (offering.isDefault() == true) {\n            throw new InvalidParameterValueException(\"Default network offering can't be deleted\");\n        }\n\n        \r\n        \r\n        final int vpcCount = _vpcDao.getVpcCountByOfferingId(offId);\n        if (vpcCount > 0) {\n            throw new InvalidParameterValueException(\"Can't delete vpc offering \" + offId + \" as its used by \" + vpcCount + \" vpcs. \"\n                    + \"To make the network offering unavaiable, disable it\");\n        }\n\n        if (_vpcOffDao.remove(offId)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":657,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean deleteNetworkOffering(final DeleteNetworkOfferingCmd cmd) {\n        final Long offeringId = cmd.getId();\n        CallContext.current().setEventDetails(\" Id: \" + offeringId);\n\n        \r\n        final NetworkOfferingVO offering = _networkOfferingDao.findById(offeringId);\n        if (offering == null) {\n            throw new InvalidParameterValueException(\"unable to find network offering \" + offeringId);\n        } else if (offering.getRemoved() != null || offering.isSystemOnly()) {\n            throw new InvalidParameterValueException(\"unable to find network offering \" + offeringId);\n        }\n\n        \r\n        if (offering.isDefault() == true) {\n            throw new InvalidParameterValueException(\"Default network offering can't be deleted\");\n        }\n\n        \r\n        \r\n        \r\n        final int networkCount = _networkDao.getNetworkCountByNetworkOffId(offeringId);\n        if (networkCount > 0) {\n            throw new InvalidParameterValueException(\"Can't delete network offering \" + offeringId + \" as its used by \" + networkCount + \" networks. \"\n                    + \"To make the network offering unavaiable, disable it\");\n        }\n\n        if (_networkOfferingDao.remove(offeringId)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":5140,"groupId":"14891","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteNetworkOffering","params":"(finalDeleteNetworkOfferingCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/16/32da95f95466df841e198f84f058240ae8968b.src","preCode":"    public boolean deleteNetworkOffering(final DeleteNetworkOfferingCmd cmd) {\n        final Long offeringId = cmd.getId();\n        CallContext.current().setEventDetails(\" Id: \" + offeringId);\n\n        \r\n        final NetworkOfferingVO offering = _networkOfferingDao.findById(offeringId);\n        if (offering == null) {\n            throw new InvalidParameterValueException(\"unable to find network offering \" + offeringId);\n        } else if (offering.getRemoved() != null || offering.isSystemOnly()) {\n            throw new InvalidParameterValueException(\"unable to find network offering \" + offeringId);\n        }\n\n        \r\n        if (offering.isDefault() == true) {\n            throw new InvalidParameterValueException(\"Default network offering can't be deleted\");\n        }\n\n        \r\n        \r\n        \r\n        final int networkCount = _networkDao.getNetworkCountByNetworkOffId(offeringId);\n        if (networkCount > 0) {\n            throw new InvalidParameterValueException(\"Can't delete network offering \" + offeringId + \" as its used by \" + networkCount + \" networks. \"\n                    + \"To make the network offering unavaiable, disable it\");\n        }\n\n        if (_networkOfferingDao.remove(offeringId)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":5109,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2021-09-08 12:44:06","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public boolean deleteVpcOffering(final long offId) {\n        CallContext.current().setEventDetails(\" Id: \" + offId);\n\n        \r\n        final VpcOfferingVO offering = _vpcOffDao.findById(offId);\n        if (offering == null) {\n            throw new InvalidParameterValueException(\"unable to find vpc offering \" + offId);\n        }\n\n        \r\n        if (offering.isDefault() == true) {\n            throw new InvalidParameterValueException(\"Default network offering can't be deleted\");\n        }\n\n        \r\n        \r\n        final int vpcCount = _vpcDao.getVpcCountByOfferingId(offId);\n        if (vpcCount > 0) {\n            throw new InvalidParameterValueException(\"Can't delete vpc offering \" + offId + \" as its used by \" + vpcCount + \" vpcs. \"\n                    + \"To make the network offering unavaiable, disable it\");\n        }\n\n        if (_vpcOffDao.remove(offId)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":684,"groupId":"101770","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteVpcOffering","params":"(finallongoffId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ab/6441ac5b7e6f8edb855842f28034fb2a8a3cf5.src","preCode":"    public boolean deleteVpcOffering(final long offId) {\n        CallContext.current().setEventDetails(\" Id: \" + offId);\n\n        \r\n        final VpcOfferingVO offering = _vpcOffDao.findById(offId);\n        if (offering == null) {\n            throw new InvalidParameterValueException(\"unable to find vpc offering \" + offId);\n        }\n\n        \r\n        if (offering.isDefault() == true) {\n            throw new InvalidParameterValueException(\"Default network offering can't be deleted\");\n        }\n\n        \r\n        \r\n        final int vpcCount = _vpcDao.getVpcCountByOfferingId(offId);\n        if (vpcCount > 0) {\n            throw new InvalidParameterValueException(\"Can't delete vpc offering \" + offId + \" as its used by \" + vpcCount + \" vpcs. \"\n                    + \"To make the network offering unavaiable, disable it\");\n        }\n\n        if (_vpcOffDao.remove(offId)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":657,"status":"N"},{"authorDate":"2021-09-08 12:44:06","commitOrder":2,"curCode":"    public boolean deleteNetworkOffering(final DeleteNetworkOfferingCmd cmd) {\n        final Long offeringId = cmd.getId();\n        CallContext.current().setEventDetails(\" Id: \" + offeringId);\n\n        \r\n        final NetworkOfferingVO offering = _networkOfferingDao.findById(offeringId);\n        if (offering == null) {\n            throw new InvalidParameterValueException(\"unable to find network offering \" + offeringId);\n        } else if (offering.getRemoved() != null || offering.isSystemOnly()) {\n            throw new InvalidParameterValueException(\"unable to find network offering \" + offeringId);\n        }\n\n        \r\n        if (offering.isDefault() == true) {\n            throw new InvalidParameterValueException(\"Default network offering can't be deleted\");\n        }\n\n        \r\n        \r\n        \r\n        final int networkCount = _networkDao.getNetworkCountByNetworkOffId(offeringId);\n        if (networkCount > 0) {\n            throw new InvalidParameterValueException(\"Can't delete network offering \" + offeringId + \" as its used by \" + networkCount + \" networks. \"\n                    + \"To make the network offering unavaiable, disable it\");\n        }\n\n        annotationDao.removeByEntityType(AnnotationService.EntityType.NETWORK_OFFERING.name(), offering.getUuid());\n        if (_networkOfferingDao.remove(offeringId)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n","date":"2021-09-08 12:44:06","endLine":5886,"groupId":"101770","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteNetworkOffering","params":"(finalDeleteNetworkOfferingCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/4c/cdf7e2d570f1133d9e0efe31aed69fda167b8f.src","preCode":"    public boolean deleteNetworkOffering(final DeleteNetworkOfferingCmd cmd) {\n        final Long offeringId = cmd.getId();\n        CallContext.current().setEventDetails(\" Id: \" + offeringId);\n\n        \r\n        final NetworkOfferingVO offering = _networkOfferingDao.findById(offeringId);\n        if (offering == null) {\n            throw new InvalidParameterValueException(\"unable to find network offering \" + offeringId);\n        } else if (offering.getRemoved() != null || offering.isSystemOnly()) {\n            throw new InvalidParameterValueException(\"unable to find network offering \" + offeringId);\n        }\n\n        \r\n        if (offering.isDefault() == true) {\n            throw new InvalidParameterValueException(\"Default network offering can't be deleted\");\n        }\n\n        \r\n        \r\n        \r\n        final int networkCount = _networkDao.getNetworkCountByNetworkOffId(offeringId);\n        if (networkCount > 0) {\n            throw new InvalidParameterValueException(\"Can't delete network offering \" + offeringId + \" as its used by \" + networkCount + \" networks. \"\n                    + \"To make the network offering unavaiable, disable it\");\n        }\n\n        if (_networkOfferingDao.remove(offeringId)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":5854,"status":"M"}],"commitId":"413d10dd8106af9b3c369c1a393fbcca5e7217ce","commitMessage":"@@@server: Extend the Annotations framework (#5103)\n\n* Extend addAnnotation and listAnnotations APIs\n\n* Allow users to add.  list and remove comments\n\n* Add adminsonly UI and allow admins or owners to remove comments\n\n* New annotations tab\n\n* In progress: new comments section\n\n* Address review comments\n\n* Fix\n\n* Fix annotationfilter and comments section\n\n* Add keyword and delete action\n\n* Fix and rename annotations tab\n\n* Update annotation visibility API and update comments table accordingly\n\n* Allow users seeing all the comments for their owned resources\n\n* Extend comments for volumes and snapshots\n\n* Extend comments to multiple entities\n\n* Add uuid to ssh keypairs\n\n* SSH keypair UI refactor\n\n* Extend comments to the infrastructure entities\n\n* Add missing entities\n\n* Fix upgrade version for ssh keypairs\n\n* Fix typo on DB upgrade schema\n\n* Fix annotations table columns when there is no data\n\n* Extend the list view of items showing they if they have comments\n\n* Remove extra test\n\n* Add annotation permissions\n\n* Address review comments\n\n* Extend marvin tests for annotations\n\n* updating ui stuff\n\n* addition to toggle visibility\n\n* Fix pagination on comments section\n\n* Extend to kubernetes clusters\n\n* Fixes after last review\n\n* Change default value for adminsonly column\n\n* Remove the required field for the annotationfilter parameter\n\n* Small fixes on visibility and other fixes\n\n* Cleanup to reduce files changed\n\n* Rollback extra line\n\n* Address review comments\n\n* Fix cleanup error on smoke test\n\n* Fix sending incorrect parameter to checkPermissions method\n\n* Add check domain access for the calling account for domain networks\n\n* Fix only display annotations icon if there are comments the user can see\n\n* Simply change the Save button label to Submit\n\n* Change order of the Tools menu to provent users getting 404 error on clicking the text instead of expanding\n\n* Remove comments when removing entities\n\n* Address review comments on marvin tests\n\n* Allow users to list annotations for an entity ID\n\n* Allow users to see all comments for allowed entities\n\n* Fix search filters\n\n* Remove username from search filter\n\n* Add pagination to the annotations tab\n\n* Display username for user comments\n\n* Fix add permissions for domain and resource admins\n\n* Fix for domain admins\n\n* Trivial but important UI fix\n\n* Replace pagination for annotations tab\n\n* Add confirmation for delete comment\n\n* Lint warnings\n\n* Fix reduced list as domain admin\n\n* Fix display remove comment button for non admins\n\n* Improve display remove action button\n\n* Remove unused parameter on groupShow\n\n* Include a clock icon to the all comments filter except for root admin\n\n* Move cleanup SQL to the correct file after rebasing main\n\nCo-authored-by: davidjumani <dj.davidjumani1994@gmail.com>","date":"2021-09-08 12:44:06","modifiedFileCount":"109","status":"M","submitter":"Nicolas Vazquez"}]
