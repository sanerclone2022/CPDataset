[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void updateVmDiskStats(List<VmDiskStatisticsVO> vmDiskStats) {\n        TransactionLegacy txn = TransactionLegacy.currentTxn();\n        try {\n            txn.start();\n            String sql = UPDATE_VM_DISK_STATS;\n            PreparedStatement pstmt = null;\n            pstmt = txn.prepareAutoCloseStatement(sql); \r\n            for (VmDiskStatisticsVO vmDiskStat : vmDiskStats) {\n                pstmt.setLong(1, vmDiskStat.getNetIORead());\n                pstmt.setLong(2, vmDiskStat.getNetIOWrite());\n                pstmt.setLong(3, vmDiskStat.getCurrentIORead());\n                pstmt.setLong(4, vmDiskStat.getCurrentIOWrite());\n                pstmt.setLong(5, vmDiskStat.getAggIORead());\n                pstmt.setLong(6, vmDiskStat.getAggIOWrite());\n                pstmt.setLong(7, vmDiskStat.getNetBytesRead());\n                pstmt.setLong(8, vmDiskStat.getNetBytesWrite());\n                pstmt.setLong(9, vmDiskStat.getCurrentBytesRead());\n                pstmt.setLong(10, vmDiskStat.getCurrentBytesWrite());\n                pstmt.setLong(11, vmDiskStat.getAggBytesRead());\n                pstmt.setLong(12, vmDiskStat.getAggBytesWrite());\n                pstmt.setLong(13, vmDiskStat.getId());\n                pstmt.addBatch();\n            }\n            pstmt.executeBatch();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error saving vm disk stats to cloud_usage db\", ex);\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n\n    }\n","date":"2018-01-20 05:49:27","endLine":347,"groupId":"3611","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"updateVmDiskStats","params":"(List<VmDiskStatisticsVO>vmDiskStats)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/62/6b8ccf2bef64bbc1f4adcf89b46f52f4d7255a.src","preCode":"    public void updateVmDiskStats(List<VmDiskStatisticsVO> vmDiskStats) {\n        TransactionLegacy txn = TransactionLegacy.currentTxn();\n        try {\n            txn.start();\n            String sql = UPDATE_VM_DISK_STATS;\n            PreparedStatement pstmt = null;\n            pstmt = txn.prepareAutoCloseStatement(sql); \r\n            for (VmDiskStatisticsVO vmDiskStat : vmDiskStats) {\n                pstmt.setLong(1, vmDiskStat.getNetIORead());\n                pstmt.setLong(2, vmDiskStat.getNetIOWrite());\n                pstmt.setLong(3, vmDiskStat.getCurrentIORead());\n                pstmt.setLong(4, vmDiskStat.getCurrentIOWrite());\n                pstmt.setLong(5, vmDiskStat.getAggIORead());\n                pstmt.setLong(6, vmDiskStat.getAggIOWrite());\n                pstmt.setLong(7, vmDiskStat.getNetBytesRead());\n                pstmt.setLong(8, vmDiskStat.getNetBytesWrite());\n                pstmt.setLong(9, vmDiskStat.getCurrentBytesRead());\n                pstmt.setLong(10, vmDiskStat.getCurrentBytesWrite());\n                pstmt.setLong(11, vmDiskStat.getAggBytesRead());\n                pstmt.setLong(12, vmDiskStat.getAggBytesWrite());\n                pstmt.setLong(13, vmDiskStat.getId());\n                pstmt.addBatch();\n            }\n            pstmt.executeBatch();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error saving vm disk stats to cloud_usage db\", ex);\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/usage/dao/UsageDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void saveVmDiskStats(List<VmDiskStatisticsVO> vmDiskStats) {\n        TransactionLegacy txn = TransactionLegacy.currentTxn();\n        try {\n            txn.start();\n            String sql = INSERT_VM_DISK_STATS;\n            PreparedStatement pstmt = null;\n            pstmt = txn.prepareAutoCloseStatement(sql); \r\n            for (VmDiskStatisticsVO vmDiskStat : vmDiskStats) {\n                pstmt.setLong(1, vmDiskStat.getId());\n                pstmt.setLong(2, vmDiskStat.getDataCenterId());\n                pstmt.setLong(3, vmDiskStat.getAccountId());\n                if (vmDiskStat.getVmId() != null) {\n                    pstmt.setLong(4, vmDiskStat.getVmId());\n                } else {\n                    pstmt.setNull(4, Types.BIGINT);\n                }\n                if (vmDiskStat.getVolumeId() != null) {\n                    pstmt.setLong(5, vmDiskStat.getVolumeId());\n                } else {\n                    pstmt.setNull(5, Types.BIGINT);\n                }\n                pstmt.setLong(6, vmDiskStat.getNetIORead());\n                pstmt.setLong(7, vmDiskStat.getNetIOWrite());\n                pstmt.setLong(8, vmDiskStat.getCurrentIORead());\n                pstmt.setLong(9, vmDiskStat.getCurrentIOWrite());\n                pstmt.setLong(10, vmDiskStat.getAggIORead());\n                pstmt.setLong(11, vmDiskStat.getAggIOWrite());\n                pstmt.setLong(12, vmDiskStat.getNetBytesRead());\n                pstmt.setLong(13, vmDiskStat.getNetBytesWrite());\n                pstmt.setLong(14, vmDiskStat.getCurrentBytesRead());\n                pstmt.setLong(15, vmDiskStat.getCurrentBytesWrite());\n                pstmt.setLong(16, vmDiskStat.getAggBytesRead());\n                pstmt.setLong(17, vmDiskStat.getAggBytesWrite());\n                pstmt.addBatch();\n            }\n            pstmt.executeBatch();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error saving vm disk stats to cloud_usage db\", ex);\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n\n    }\n","date":"2018-01-20 05:49:27","endLine":393,"groupId":"10211","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"saveVmDiskStats","params":"(List<VmDiskStatisticsVO>vmDiskStats)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/62/6b8ccf2bef64bbc1f4adcf89b46f52f4d7255a.src","preCode":"    public void saveVmDiskStats(List<VmDiskStatisticsVO> vmDiskStats) {\n        TransactionLegacy txn = TransactionLegacy.currentTxn();\n        try {\n            txn.start();\n            String sql = INSERT_VM_DISK_STATS;\n            PreparedStatement pstmt = null;\n            pstmt = txn.prepareAutoCloseStatement(sql); \r\n            for (VmDiskStatisticsVO vmDiskStat : vmDiskStats) {\n                pstmt.setLong(1, vmDiskStat.getId());\n                pstmt.setLong(2, vmDiskStat.getDataCenterId());\n                pstmt.setLong(3, vmDiskStat.getAccountId());\n                if (vmDiskStat.getVmId() != null) {\n                    pstmt.setLong(4, vmDiskStat.getVmId());\n                } else {\n                    pstmt.setNull(4, Types.BIGINT);\n                }\n                if (vmDiskStat.getVolumeId() != null) {\n                    pstmt.setLong(5, vmDiskStat.getVolumeId());\n                } else {\n                    pstmt.setNull(5, Types.BIGINT);\n                }\n                pstmt.setLong(6, vmDiskStat.getNetIORead());\n                pstmt.setLong(7, vmDiskStat.getNetIOWrite());\n                pstmt.setLong(8, vmDiskStat.getCurrentIORead());\n                pstmt.setLong(9, vmDiskStat.getCurrentIOWrite());\n                pstmt.setLong(10, vmDiskStat.getAggIORead());\n                pstmt.setLong(11, vmDiskStat.getAggIOWrite());\n                pstmt.setLong(12, vmDiskStat.getNetBytesRead());\n                pstmt.setLong(13, vmDiskStat.getNetBytesWrite());\n                pstmt.setLong(14, vmDiskStat.getCurrentBytesRead());\n                pstmt.setLong(15, vmDiskStat.getCurrentBytesWrite());\n                pstmt.setLong(16, vmDiskStat.getAggBytesRead());\n                pstmt.setLong(17, vmDiskStat.getAggBytesWrite());\n                pstmt.addBatch();\n            }\n            pstmt.executeBatch();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error saving vm disk stats to cloud_usage db\", ex);\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/usage/dao/UsageDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":350,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-08-16 15:49:43","commitOrder":2,"curCode":"    public void updateVmDiskStats(List<VmDiskStatisticsVO> vmDiskStats) {\n        TransactionLegacy txn = TransactionLegacy.currentTxn();\n        try {\n            txn.start();\n            String sql = UPDATE_VM_DISK_STATS;\n            PreparedStatement pstmt = null;\n            pstmt = txn.prepareAutoCloseStatement(sql); \r\n            for (VmDiskStatisticsVO vmDiskStat : vmDiskStats) {\n                pstmt.setLong(1, vmDiskStat.getNetIORead());\n                pstmt.setLong(2, vmDiskStat.getNetIOWrite());\n                pstmt.setLong(3, vmDiskStat.getCurrentIORead());\n                pstmt.setLong(4, vmDiskStat.getCurrentIOWrite());\n                pstmt.setLong(5, vmDiskStat.getAggIORead());\n                pstmt.setLong(6, vmDiskStat.getAggIOWrite());\n                pstmt.setLong(7, vmDiskStat.getNetBytesRead());\n                pstmt.setLong(8, vmDiskStat.getNetBytesWrite());\n                pstmt.setLong(9, vmDiskStat.getCurrentBytesRead());\n                pstmt.setLong(10, vmDiskStat.getCurrentBytesWrite());\n                pstmt.setLong(11, vmDiskStat.getAggBytesRead());\n                pstmt.setLong(12, vmDiskStat.getAggBytesWrite());\n                pstmt.setLong(13, vmDiskStat.getId());\n                pstmt.addBatch();\n            }\n            pstmt.executeBatch();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error updating vm disk stats to cloud_usage db\", ex);\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n\n    }\n","date":"2018-08-16 15:49:43","endLine":347,"groupId":"1079","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"updateVmDiskStats","params":"(List<VmDiskStatisticsVO>vmDiskStats)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3b/df79a6c023353c8df739c3aae7c202f5cfeecc.src","preCode":"    public void updateVmDiskStats(List<VmDiskStatisticsVO> vmDiskStats) {\n        TransactionLegacy txn = TransactionLegacy.currentTxn();\n        try {\n            txn.start();\n            String sql = UPDATE_VM_DISK_STATS;\n            PreparedStatement pstmt = null;\n            pstmt = txn.prepareAutoCloseStatement(sql); \r\n            for (VmDiskStatisticsVO vmDiskStat : vmDiskStats) {\n                pstmt.setLong(1, vmDiskStat.getNetIORead());\n                pstmt.setLong(2, vmDiskStat.getNetIOWrite());\n                pstmt.setLong(3, vmDiskStat.getCurrentIORead());\n                pstmt.setLong(4, vmDiskStat.getCurrentIOWrite());\n                pstmt.setLong(5, vmDiskStat.getAggIORead());\n                pstmt.setLong(6, vmDiskStat.getAggIOWrite());\n                pstmt.setLong(7, vmDiskStat.getNetBytesRead());\n                pstmt.setLong(8, vmDiskStat.getNetBytesWrite());\n                pstmt.setLong(9, vmDiskStat.getCurrentBytesRead());\n                pstmt.setLong(10, vmDiskStat.getCurrentBytesWrite());\n                pstmt.setLong(11, vmDiskStat.getAggBytesRead());\n                pstmt.setLong(12, vmDiskStat.getAggBytesWrite());\n                pstmt.setLong(13, vmDiskStat.getId());\n                pstmt.addBatch();\n            }\n            pstmt.executeBatch();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error saving vm disk stats to cloud_usage db\", ex);\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/usage/dao/UsageDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void saveVmDiskStats(List<VmDiskStatisticsVO> vmDiskStats) {\n        TransactionLegacy txn = TransactionLegacy.currentTxn();\n        try {\n            txn.start();\n            String sql = INSERT_VM_DISK_STATS;\n            PreparedStatement pstmt = null;\n            pstmt = txn.prepareAutoCloseStatement(sql); \r\n            for (VmDiskStatisticsVO vmDiskStat : vmDiskStats) {\n                pstmt.setLong(1, vmDiskStat.getId());\n                pstmt.setLong(2, vmDiskStat.getDataCenterId());\n                pstmt.setLong(3, vmDiskStat.getAccountId());\n                if (vmDiskStat.getVmId() != null) {\n                    pstmt.setLong(4, vmDiskStat.getVmId());\n                } else {\n                    pstmt.setNull(4, Types.BIGINT);\n                }\n                if (vmDiskStat.getVolumeId() != null) {\n                    pstmt.setLong(5, vmDiskStat.getVolumeId());\n                } else {\n                    pstmt.setNull(5, Types.BIGINT);\n                }\n                pstmt.setLong(6, vmDiskStat.getNetIORead());\n                pstmt.setLong(7, vmDiskStat.getNetIOWrite());\n                pstmt.setLong(8, vmDiskStat.getCurrentIORead());\n                pstmt.setLong(9, vmDiskStat.getCurrentIOWrite());\n                pstmt.setLong(10, vmDiskStat.getAggIORead());\n                pstmt.setLong(11, vmDiskStat.getAggIOWrite());\n                pstmt.setLong(12, vmDiskStat.getNetBytesRead());\n                pstmt.setLong(13, vmDiskStat.getNetBytesWrite());\n                pstmt.setLong(14, vmDiskStat.getCurrentBytesRead());\n                pstmt.setLong(15, vmDiskStat.getCurrentBytesWrite());\n                pstmt.setLong(16, vmDiskStat.getAggBytesRead());\n                pstmt.setLong(17, vmDiskStat.getAggBytesWrite());\n                pstmt.addBatch();\n            }\n            pstmt.executeBatch();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error saving vm disk stats to cloud_usage db\", ex);\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n\n    }\n","date":"2018-01-20 05:49:27","endLine":393,"groupId":"1079","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"saveVmDiskStats","params":"(List<VmDiskStatisticsVO>vmDiskStats)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/62/6b8ccf2bef64bbc1f4adcf89b46f52f4d7255a.src","preCode":"    public void saveVmDiskStats(List<VmDiskStatisticsVO> vmDiskStats) {\n        TransactionLegacy txn = TransactionLegacy.currentTxn();\n        try {\n            txn.start();\n            String sql = INSERT_VM_DISK_STATS;\n            PreparedStatement pstmt = null;\n            pstmt = txn.prepareAutoCloseStatement(sql); \r\n            for (VmDiskStatisticsVO vmDiskStat : vmDiskStats) {\n                pstmt.setLong(1, vmDiskStat.getId());\n                pstmt.setLong(2, vmDiskStat.getDataCenterId());\n                pstmt.setLong(3, vmDiskStat.getAccountId());\n                if (vmDiskStat.getVmId() != null) {\n                    pstmt.setLong(4, vmDiskStat.getVmId());\n                } else {\n                    pstmt.setNull(4, Types.BIGINT);\n                }\n                if (vmDiskStat.getVolumeId() != null) {\n                    pstmt.setLong(5, vmDiskStat.getVolumeId());\n                } else {\n                    pstmt.setNull(5, Types.BIGINT);\n                }\n                pstmt.setLong(6, vmDiskStat.getNetIORead());\n                pstmt.setLong(7, vmDiskStat.getNetIOWrite());\n                pstmt.setLong(8, vmDiskStat.getCurrentIORead());\n                pstmt.setLong(9, vmDiskStat.getCurrentIOWrite());\n                pstmt.setLong(10, vmDiskStat.getAggIORead());\n                pstmt.setLong(11, vmDiskStat.getAggIOWrite());\n                pstmt.setLong(12, vmDiskStat.getNetBytesRead());\n                pstmt.setLong(13, vmDiskStat.getNetBytesWrite());\n                pstmt.setLong(14, vmDiskStat.getCurrentBytesRead());\n                pstmt.setLong(15, vmDiskStat.getCurrentBytesWrite());\n                pstmt.setLong(16, vmDiskStat.getAggBytesRead());\n                pstmt.setLong(17, vmDiskStat.getAggBytesWrite());\n                pstmt.addBatch();\n            }\n            pstmt.executeBatch();\n            txn.commit();\n        } catch (Exception ex) {\n            txn.rollback();\n            s_logger.error(\"error saving vm disk stats to cloud_usage db\", ex);\n            throw new CloudRuntimeException(ex.getMessage());\n        }\n\n    }\n","realPath":"engine/schema/src/main/java/com/cloud/usage/dao/UsageDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":350,"status":"N"}],"commitId":"e57003f93f2067b876864b26071e1ef9952a9be1","commitMessage":"@@@Fix some log messages that do not match with their function (#2796)\n\n\n","date":"2018-08-16 15:49:43","modifiedFileCount":"13","status":"M","submitter":"lzh3636"}]
