[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected AgentAttache notifyMonitorsOfConnection(final AgentAttache attache, final StartupCommand[] cmd, final boolean forRebalance) throws ConnectionException {\n        final long hostId = attache.getId();\n        final HostVO host = _hostDao.findById(hostId);\n        for (final Pair<Integer, Listener> monitor : _hostMonitors) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Sending Connect to listener: \" + monitor.second().getClass().getSimpleName());\n            }\n            for (int i = 0; i < cmd.length; i++) {\n                try {\n                    monitor.second().processConnect(host, cmd[i], forRebalance);\n                } catch (final Exception e) {\n                    if (e instanceof ConnectionException) {\n                        final ConnectionException ce = (ConnectionException) e;\n                        if (ce.isSetupError()) {\n                            s_logger.warn(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says there is an error in the connect process for \" + hostId +\n                                            \" due to \" + e.getMessage());\n                            handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n                            throw ce;\n                        } else {\n                            s_logger.info(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says not to continue the connect process for \" + hostId +\n                                            \" due to \" + e.getMessage());\n                            handleDisconnectWithoutInvestigation(attache, Event.ShutdownRequested, true, true);\n                            return attache;\n                        }\n                    } else if (e instanceof HypervisorVersionChangedException) {\n                        handleDisconnectWithoutInvestigation(attache, Event.ShutdownRequested, true, true);\n                        throw new CloudRuntimeException(\"Unable to connect \" + attache.getId(), e);\n                    } else {\n                        s_logger.error(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says there is an error in the connect process for \" + hostId +\n                                        \" due to \" + e.getMessage(), e);\n                        handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n                        throw new CloudRuntimeException(\"Unable to connect \" + attache.getId(), e);\n                    }\n                }\n            }\n        }\n\n        final Long dcId = host.getDataCenterId();\n        final ReadyCommand ready = new ReadyCommand(dcId, host.getId());\n        final Answer answer = easySend(hostId, ready);\n        if (answer == null || !answer.getResult()) {\n            \r\n            \r\n            \r\n            handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n        }\n\n        agentStatusTransitTo(host, Event.Ready, _nodeId);\n        attache.ready();\n        return attache;\n    }\n","date":"2018-01-20 05:49:27","endLine":605,"groupId":"4283","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"notifyMonitorsOfConnection","params":"(finalAgentAttacheattache@finalStartupCommand[]cmd@finalbooleanforRebalance)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b7/357756c4c6dcd2fab802c6e71025264a42e5a6.src","preCode":"    protected AgentAttache notifyMonitorsOfConnection(final AgentAttache attache, final StartupCommand[] cmd, final boolean forRebalance) throws ConnectionException {\n        final long hostId = attache.getId();\n        final HostVO host = _hostDao.findById(hostId);\n        for (final Pair<Integer, Listener> monitor : _hostMonitors) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Sending Connect to listener: \" + monitor.second().getClass().getSimpleName());\n            }\n            for (int i = 0; i < cmd.length; i++) {\n                try {\n                    monitor.second().processConnect(host, cmd[i], forRebalance);\n                } catch (final Exception e) {\n                    if (e instanceof ConnectionException) {\n                        final ConnectionException ce = (ConnectionException) e;\n                        if (ce.isSetupError()) {\n                            s_logger.warn(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says there is an error in the connect process for \" + hostId +\n                                            \" due to \" + e.getMessage());\n                            handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n                            throw ce;\n                        } else {\n                            s_logger.info(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says not to continue the connect process for \" + hostId +\n                                            \" due to \" + e.getMessage());\n                            handleDisconnectWithoutInvestigation(attache, Event.ShutdownRequested, true, true);\n                            return attache;\n                        }\n                    } else if (e instanceof HypervisorVersionChangedException) {\n                        handleDisconnectWithoutInvestigation(attache, Event.ShutdownRequested, true, true);\n                        throw new CloudRuntimeException(\"Unable to connect \" + attache.getId(), e);\n                    } else {\n                        s_logger.error(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says there is an error in the connect process for \" + hostId +\n                                        \" due to \" + e.getMessage(), e);\n                        handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n                        throw new CloudRuntimeException(\"Unable to connect \" + attache.getId(), e);\n                    }\n                }\n            }\n        }\n\n        final Long dcId = host.getDataCenterId();\n        final ReadyCommand ready = new ReadyCommand(dcId, host.getId());\n        final Answer answer = easySend(hostId, ready);\n        if (answer == null || !answer.getResult()) {\n            \r\n            \r\n            \r\n            handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n        }\n\n        agentStatusTransitTo(host, Event.Ready, _nodeId);\n        attache.ready();\n        return attache;\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/agent/manager/AgentManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":555,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void notifyMonitorsOfRemovedHost(long hostId, long clusterId) {\n        for (final Pair<Integer, Listener> monitor : _hostMonitors) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Sending host removed to listener: \" + monitor.second().getClass().getSimpleName());\n            }\n\n            monitor.second().processHostRemoved(hostId, clusterId);\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":1039,"groupId":"11716","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"notifyMonitorsOfRemovedHost","params":"(longhostId@longclusterId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b7/357756c4c6dcd2fab802c6e71025264a42e5a6.src","preCode":"    public void notifyMonitorsOfRemovedHost(long hostId, long clusterId) {\n        for (final Pair<Integer, Listener> monitor : _hostMonitors) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Sending host removed to listener: \" + monitor.second().getClass().getSimpleName());\n            }\n\n            monitor.second().processHostRemoved(hostId, clusterId);\n        }\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/agent/manager/AgentManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1031,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-08-13 18:25:16","commitOrder":2,"curCode":"    protected AgentAttache notifyMonitorsOfConnection(final AgentAttache attache, final StartupCommand[] cmd, final boolean forRebalance) throws ConnectionException {\n        final long hostId = attache.getId();\n        final HostVO host = _hostDao.findById(hostId);\n        for (final Pair<Integer, Listener> monitor : _hostMonitors) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Sending Connect to listener: \" + monitor.second().getClass().getSimpleName());\n            }\n            for (int i = 0; i < cmd.length; i++) {\n                try {\n                    monitor.second().processConnect(host, cmd[i], forRebalance);\n                } catch (final Exception e) {\n                    if (e instanceof ConnectionException) {\n                        final ConnectionException ce = (ConnectionException)e;\n                        if (ce.isSetupError()) {\n                            s_logger.warn(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says there is an error in the connect process for \" + hostId + \" due to \" + e.getMessage());\n                            handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n                            throw ce;\n                        } else {\n                            s_logger.info(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says not to continue the connect process for \" + hostId + \" due to \" + e.getMessage());\n                            handleDisconnectWithoutInvestigation(attache, Event.ShutdownRequested, true, true);\n                            return attache;\n                        }\n                    } else if (e instanceof HypervisorVersionChangedException) {\n                        handleDisconnectWithoutInvestigation(attache, Event.ShutdownRequested, true, true);\n                        throw new CloudRuntimeException(\"Unable to connect \" + attache.getId(), e);\n                    } else {\n                        s_logger.error(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says there is an error in the connect process for \" + hostId + \" due to \" + e.getMessage(), e);\n                        handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n                        throw new CloudRuntimeException(\"Unable to connect \" + attache.getId(), e);\n                    }\n                }\n            }\n        }\n\n        final Long dcId = host.getDataCenterId();\n        final ReadyCommand ready = new ReadyCommand(dcId, host.getId(), NumbersUtil.enableHumanReadableSizes);\n        final Answer answer = easySend(hostId, ready);\n        if (answer == null || !answer.getResult()) {\n            \r\n            \r\n            \r\n            handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n        }\n\n        agentStatusTransitTo(host, Event.Ready, _nodeId);\n        attache.ready();\n        return attache;\n    }\n","date":"2020-08-13 18:25:16","endLine":601,"groupId":"10592","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"notifyMonitorsOfConnection","params":"(finalAgentAttacheattache@finalStartupCommand[]cmd@finalbooleanforRebalance)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3f/1b50691b29f26604656379c67d35f4855bd4e8.src","preCode":"    protected AgentAttache notifyMonitorsOfConnection(final AgentAttache attache, final StartupCommand[] cmd, final boolean forRebalance) throws ConnectionException {\n        final long hostId = attache.getId();\n        final HostVO host = _hostDao.findById(hostId);\n        for (final Pair<Integer, Listener> monitor : _hostMonitors) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Sending Connect to listener: \" + monitor.second().getClass().getSimpleName());\n            }\n            for (int i = 0; i < cmd.length; i++) {\n                try {\n                    monitor.second().processConnect(host, cmd[i], forRebalance);\n                } catch (final Exception e) {\n                    if (e instanceof ConnectionException) {\n                        final ConnectionException ce = (ConnectionException)e;\n                        if (ce.isSetupError()) {\n                            s_logger.warn(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says there is an error in the connect process for \" + hostId + \" due to \" + e.getMessage());\n                            handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n                            throw ce;\n                        } else {\n                            s_logger.info(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says not to continue the connect process for \" + hostId + \" due to \" + e.getMessage());\n                            handleDisconnectWithoutInvestigation(attache, Event.ShutdownRequested, true, true);\n                            return attache;\n                        }\n                    } else if (e instanceof HypervisorVersionChangedException) {\n                        handleDisconnectWithoutInvestigation(attache, Event.ShutdownRequested, true, true);\n                        throw new CloudRuntimeException(\"Unable to connect \" + attache.getId(), e);\n                    } else {\n                        s_logger.error(\"Monitor \" + monitor.second().getClass().getSimpleName() + \" says there is an error in the connect process for \" + hostId + \" due to \" + e.getMessage(), e);\n                        handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n                        throw new CloudRuntimeException(\"Unable to connect \" + attache.getId(), e);\n                    }\n                }\n            }\n        }\n\n        final Long dcId = host.getDataCenterId();\n        final ReadyCommand ready = new ReadyCommand(dcId, host.getId());\n        final Answer answer = easySend(hostId, ready);\n        if (answer == null || !answer.getResult()) {\n            \r\n            \r\n            \r\n            handleDisconnectWithoutInvestigation(attache, Event.AgentDisconnected, true, true);\n        }\n\n        agentStatusTransitTo(host, Event.Ready, _nodeId);\n        attache.ready();\n        return attache;\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/agent/manager/AgentManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":554,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void notifyMonitorsOfRemovedHost(long hostId, long clusterId) {\n        for (final Pair<Integer, Listener> monitor : _hostMonitors) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Sending host removed to listener: \" + monitor.second().getClass().getSimpleName());\n            }\n\n            monitor.second().processHostRemoved(hostId, clusterId);\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":1039,"groupId":"10592","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"notifyMonitorsOfRemovedHost","params":"(longhostId@longclusterId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b7/357756c4c6dcd2fab802c6e71025264a42e5a6.src","preCode":"    public void notifyMonitorsOfRemovedHost(long hostId, long clusterId) {\n        for (final Pair<Integer, Listener> monitor : _hostMonitors) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Sending host removed to listener: \" + monitor.second().getClass().getSimpleName());\n            }\n\n            monitor.second().processHostRemoved(hostId, clusterId);\n        }\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/agent/manager/AgentManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1031,"status":"N"}],"commitId":"b586eb22f1b31f3cab2f2cb1aaeafca4f4646abd","commitMessage":"@@@Human readable sizes in logs (#4207)\n\nThis PR adds outputting human readable byte sizes in the management server logs.  agent logs.  and usage records. A non-dynamic global variable is added (display.human.readable.sizes) to control switching this feature on and off. This setting is sent to the agent on connection and is only read from the database when the management server is started up. The setting is kept in memory by the use of a static field on the NumbersUtil class and is available throughout the codebase.\n\nInstead of seeing things like:\n2020-07-23 15:31:58. 593 DEBUG [c.c.a.t.Request] (AgentManager-Handler-12:null) (logid:) Seq 8-1863645820801253428: Processing: { Ans: .  MgmtId: 52238089807.  via: 8.  Ver: v1.  Flags: 10.  [{\"com.cloud.agent.api.NetworkUsageAnswer\":{\"routerName\":\"r-224-VM\". \"bytesSent\":\"106496\". \"bytesReceived\":\"0\". \"result\":\"true\". \"details\":\"\". \"wait\":\"0\". }}] }\n\nThe KB MB and GB values will be printed out:\n\n2020-07-23 15:31:58. 593 DEBUG [c.c.a.t.Request] (AgentManager-Handler-12:null) (logid:) Seq 8-1863645820801253428: Processing: { Ans: .  MgmtId: 52238089807.  via: 8.  Ver: v1.  Flags: 10.  [{\"com.cloud.agent.api.NetworkUsageAnswer\":{\"routerName\":\"r-224-VM\". \"bytesSent\":\"(104.00 KB) 106496\". \"bytesReceived\":\"(0 bytes) 0\". \"result\":\"true\". \"details\":\"\". \"wait\":\"0\". }}] }\n\nFS: https://cwiki.apache.org/confluence/display/CLOUDSTACK/Human+Readable+Byte+sizes","date":"2020-08-13 18:25:16","modifiedFileCount":"55","status":"M","submitter":"Spaceman1984"}]
