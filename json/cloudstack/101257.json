[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected void initMocks() {\n        when(mockDestination.getDataCenter()).thenReturn(mockDataCenter);\n        when(mockDataCenter.getId()).thenReturn(DATA_CENTER_ID);\n        when(mockPod.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO1.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO2.getId()).thenReturn(POD_ID2);\n        when(mockHostPodVO3.getId()).thenReturn(POD_ID3);\n        when(mockNw.getId()).thenReturn(NW_ID_1);\n    }\n","date":"2018-01-20 05:49:27","endLine":143,"groupId":"2703","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"initMocks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/62/6c2d7acc6714205794292a481c9765495021c6.src","preCode":"    protected void initMocks() {\n        when(mockDestination.getDataCenter()).thenReturn(mockDataCenter);\n        when(mockDataCenter.getId()).thenReturn(DATA_CENTER_ID);\n        when(mockPod.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO1.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO2.getId()).thenReturn(POD_ID2);\n        when(mockHostPodVO3.getId()).thenReturn(POD_ID3);\n        when(mockNw.getId()).thenReturn(NW_ID_1);\n    }\n","realPath":"server/src/test/java/org/cloud/network/router/deployment/RouterDeploymentDefinitionTestBase.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected void initMocks() {\n        when(mockDestination.getDataCenter()).thenReturn(mockDataCenter);\n        when(mockDataCenter.getId()).thenReturn(DATA_CENTER_ID);\n        when(mockPod.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO1.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO2.getId()).thenReturn(POD_ID2);\n        when(mockHostPodVO3.getId()).thenReturn(POD_ID3);\n        when(mockNw.getId()).thenReturn(NW_ID_1);\n    }\n","date":"2018-01-20 05:49:27","endLine":89,"groupId":"2703","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initMocks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/61/95387dbe228ce289cc127e6db0af2168a6a210.src","preCode":"    protected void initMocks() {\n        when(mockDestination.getDataCenter()).thenReturn(mockDataCenter);\n        when(mockDataCenter.getId()).thenReturn(DATA_CENTER_ID);\n        when(mockPod.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO1.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO2.getId()).thenReturn(POD_ID2);\n        when(mockHostPodVO3.getId()).thenReturn(POD_ID3);\n        when(mockNw.getId()).thenReturn(NW_ID_1);\n    }\n","realPath":"server/src/test/java/org/cloud/network/router/deployment/RouterDeploymentDefinitionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    protected void initMocks() {\n        when(mockDestination.getDataCenter()).thenReturn(mockDataCenter);\n        lenient().when(mockDataCenter.getId()).thenReturn(DATA_CENTER_ID);\n        lenient().when(mockPod.getId()).thenReturn(POD_ID1);\n        lenient().when(mockHostPodVO1.getId()).thenReturn(POD_ID1);\n        lenient().when(mockHostPodVO2.getId()).thenReturn(POD_ID2);\n        lenient().when(mockHostPodVO3.getId()).thenReturn(POD_ID3);\n        lenient().when(mockNw.getId()).thenReturn(NW_ID_1);\n    }\n","date":"2020-02-12 15:28:25","endLine":145,"groupId":"101257","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"initMocks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/04/778b9a7031b246f6518a28c651acd0f869ddc8.src","preCode":"    protected void initMocks() {\n        when(mockDestination.getDataCenter()).thenReturn(mockDataCenter);\n        when(mockDataCenter.getId()).thenReturn(DATA_CENTER_ID);\n        when(mockPod.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO1.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO2.getId()).thenReturn(POD_ID2);\n        when(mockHostPodVO3.getId()).thenReturn(POD_ID3);\n        when(mockNw.getId()).thenReturn(NW_ID_1);\n    }\n","realPath":"server/src/test/java/org/cloud/network/router/deployment/RouterDeploymentDefinitionTestBase.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    protected void initMocks() {\n        when(mockDestination.getDataCenter()).thenReturn(mockDataCenter);\n        when(mockDataCenter.getId()).thenReturn(DATA_CENTER_ID);\n        when(mockPod.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO1.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO2.getId()).thenReturn(POD_ID2);\n        when(mockHostPodVO3.getId()).thenReturn(POD_ID3);\n        when(mockNw.getId()).thenReturn(NW_ID_1);\n    }\n","date":"2018-01-20 05:49:27","endLine":89,"groupId":"101257","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initMocks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/61/95387dbe228ce289cc127e6db0af2168a6a210.src","preCode":"    protected void initMocks() {\n        when(mockDestination.getDataCenter()).thenReturn(mockDataCenter);\n        when(mockDataCenter.getId()).thenReturn(DATA_CENTER_ID);\n        when(mockPod.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO1.getId()).thenReturn(POD_ID1);\n        when(mockHostPodVO2.getId()).thenReturn(POD_ID2);\n        when(mockHostPodVO3.getId()).thenReturn(POD_ID3);\n        when(mockNw.getId()).thenReturn(NW_ID_1);\n    }\n","realPath":"server/src/test/java/org/cloud/network/router/deployment/RouterDeploymentDefinitionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"N"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
