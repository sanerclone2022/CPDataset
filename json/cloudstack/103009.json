[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl, String templatePathAtSecondaryStorage,\n            String templateName, String templateUuid, Integer nfsVersion) throws Exception {\n\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \"\n                + templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = _mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName = secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage + templateName + \".\" + ImageFormat.OVA.getFileExtension();\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg = \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage\n                    + \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n            vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateUuid);\n            vmMo.markAsTemplate();\n        } else {\n            vmMo.destroy();\n            String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":605,"groupId":"2508","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"copyTemplateFromSecondaryToPrimary","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdatastoreMo@StringsecondaryStorageUrl@StringtemplatePathAtSecondaryStorage@StringtemplateName@StringtemplateUuid@IntegernfsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a2/2410f4afebe2deec57f964a9d3c21b6e2251a1.src","preCode":"    private void copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl, String templatePathAtSecondaryStorage,\n            String templateName, String templateUuid, Integer nfsVersion) throws Exception {\n\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \"\n                + templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = _mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName = secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage + templateName + \".\" + ImageFormat.OVA.getFileExtension();\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg = \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage\n                    + \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n            vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateUuid);\n            vmMo.markAsTemplate();\n        } else {\n            vmMo.destroy();\n            String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":552,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private Pair<VirtualMachineMO, Long> copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl,\n                                                                            String templatePathAtSecondaryStorage, String templateName, String templateUuid,\n                                                                            boolean createSnapshot, Integer nfsVersion) throws Exception {\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" +\n                templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName =\n                VmwareStorageLayoutHelper.getTemplateOnSecStorageFilePath(secondaryMountPoint, templatePathAtSecondaryStorage, templateName,\n                        ImageFormat.OVA.getFileExtension());\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg =\n                    \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage +\n                            \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        OVAProcessor processor = new OVAProcessor();\n        Map<String, Object> params = new HashMap<>();\n        params.put(StorageLayer.InstanceConfigKey, _storage);\n        processor.configure(\"OVA Processor\", params);\n        long virtualSize = processor.getTemplateVirtualSize(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage, templateName);\n\n        if (createSnapshot) {\n            if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n                \r\n                \r\n                vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateName);\n                vmMo.markAsTemplate();\n            } else {\n                vmMo.destroy();\n\n                String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n\n                s_logger.error(msg);\n\n                throw new Exception(msg);\n            }\n        }\n\n        return new Pair<>(vmMo, virtualSize);\n    }\n","date":"2018-01-20 05:49:27","endLine":551,"groupId":"2508","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"copyTemplateFromSecondaryToPrimary","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdatastoreMo@StringsecondaryStorageUrl@StringtemplatePathAtSecondaryStorage@StringtemplateName@StringtemplateUuid@booleancreateSnapshot@IntegernfsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0c/ea62f18fa2de99166d6e97e726c857845123b1.src","preCode":"    private Pair<VirtualMachineMO, Long> copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl,\n                                                                            String templatePathAtSecondaryStorage, String templateName, String templateUuid,\n                                                                            boolean createSnapshot, Integer nfsVersion) throws Exception {\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" +\n                templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName =\n                VmwareStorageLayoutHelper.getTemplateOnSecStorageFilePath(secondaryMountPoint, templatePathAtSecondaryStorage, templateName,\n                        ImageFormat.OVA.getFileExtension());\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg =\n                    \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage +\n                            \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        OVAProcessor processor = new OVAProcessor();\n        Map<String, Object> params = new HashMap<>();\n        params.put(StorageLayer.InstanceConfigKey, _storage);\n        processor.configure(\"OVA Processor\", params);\n        long virtualSize = processor.getTemplateVirtualSize(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage, templateName);\n\n        if (createSnapshot) {\n            if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n                \r\n                \r\n                vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateName);\n                vmMo.markAsTemplate();\n            } else {\n                vmMo.destroy();\n\n                String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n\n                s_logger.error(msg);\n\n                throw new Exception(msg);\n            }\n        }\n\n        return new Pair<>(vmMo, virtualSize);\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":480,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2019-08-09 18:44:46","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private void copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl, String templatePathAtSecondaryStorage,\n            String templateName, String templateUuid, Integer nfsVersion) throws Exception {\n\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \"\n                + templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = _mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName = secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage + templateName + \".\" + ImageFormat.OVA.getFileExtension();\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg = \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage\n                    + \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n            vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateUuid);\n            vmMo.markAsTemplate();\n        } else {\n            vmMo.destroy();\n            String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":605,"groupId":"2508","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"copyTemplateFromSecondaryToPrimary","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdatastoreMo@StringsecondaryStorageUrl@StringtemplatePathAtSecondaryStorage@StringtemplateName@StringtemplateUuid@IntegernfsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a2/2410f4afebe2deec57f964a9d3c21b6e2251a1.src","preCode":"    private void copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl, String templatePathAtSecondaryStorage,\n            String templateName, String templateUuid, Integer nfsVersion) throws Exception {\n\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \"\n                + templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = _mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName = secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage + templateName + \".\" + ImageFormat.OVA.getFileExtension();\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg = \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage\n                    + \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n            vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateUuid);\n            vmMo.markAsTemplate();\n        } else {\n            vmMo.destroy();\n            String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":552,"status":"N"},{"authorDate":"2019-08-09 18:44:46","commitOrder":2,"curCode":"    private Pair<VirtualMachineMO, Long> copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl,\n                                                                            String templatePathAtSecondaryStorage, String templateName, String templateUuid,\n                                                                            boolean createSnapshot, Integer nfsVersion) throws Exception {\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" +\n                templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName =\n                VmwareStorageLayoutHelper.getTemplateOnSecStorageFilePath(secondaryMountPoint, templatePathAtSecondaryStorage, templateName,\n                        ImageFormat.OVA.getFileExtension());\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        VmConfigInfo vAppConfig;\n        if (vmMo == null) {\n            String msg =\n                    \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage +\n                            \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        } else {\n            vAppConfig = vmMo.getConfigInfo().getVAppConfig();\n            if (vAppConfig != null) {\n                s_logger.info(\"Found vApp configuration\");\n            }\n        }\n\n        OVAProcessor processor = new OVAProcessor();\n        Map<String, Object> params = new HashMap<>();\n        params.put(StorageLayer.InstanceConfigKey, _storage);\n        processor.configure(\"OVA Processor\", params);\n        long virtualSize = processor.getTemplateVirtualSize(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage, templateName);\n\n        if (createSnapshot) {\n            if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n                \r\n                \r\n                vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateName);\n                if (vAppConfig == null) {\n                    vmMo.markAsTemplate();\n                }\n            } else {\n                vmMo.destroy();\n\n                String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n\n                s_logger.error(msg);\n\n                throw new Exception(msg);\n            }\n        }\n\n        return new Pair<>(vmMo, virtualSize);\n    }\n","date":"2019-08-09 18:44:46","endLine":561,"groupId":"11024","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"copyTemplateFromSecondaryToPrimary","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdatastoreMo@StringsecondaryStorageUrl@StringtemplatePathAtSecondaryStorage@StringtemplateName@StringtemplateUuid@booleancreateSnapshot@IntegernfsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/42/0ac440d670bf7e433599a8fbe86fae470eaf51.src","preCode":"    private Pair<VirtualMachineMO, Long> copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl,\n                                                                            String templatePathAtSecondaryStorage, String templateName, String templateUuid,\n                                                                            boolean createSnapshot, Integer nfsVersion) throws Exception {\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" +\n                templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName =\n                VmwareStorageLayoutHelper.getTemplateOnSecStorageFilePath(secondaryMountPoint, templatePathAtSecondaryStorage, templateName,\n                        ImageFormat.OVA.getFileExtension());\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg =\n                    \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage +\n                            \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        OVAProcessor processor = new OVAProcessor();\n        Map<String, Object> params = new HashMap<>();\n        params.put(StorageLayer.InstanceConfigKey, _storage);\n        processor.configure(\"OVA Processor\", params);\n        long virtualSize = processor.getTemplateVirtualSize(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage, templateName);\n\n        if (createSnapshot) {\n            if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n                \r\n                \r\n                vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateName);\n                vmMo.markAsTemplate();\n            } else {\n                vmMo.destroy();\n\n                String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n\n                s_logger.error(msg);\n\n                throw new Exception(msg);\n            }\n        }\n\n        return new Pair<>(vmMo, virtualSize);\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":482,"status":"M"}],"commitId":"3c2af55d81dbfaf17a3bf0b6247ecd830df12996","commitMessage":"@@@vmware: allow configuring appliances on the VM instance wizard when OVF properties are available (#3271)\n\nProblem: In Vmware.  appliances that have options that are required to be answered before deployments are configurable through vSphere vCenter user interface but it is not possible from the CloudStack user interface.\n\nRoot cause: CloudStack does not handle vApp configuration options during deployments if the appliance contains configurable options. These configurations are mandatory for VM deployment from the appliance on Vmware vSphere vCenter. As shown in the image below.  Vmware detects there are mandatory configurations that the administrator must set before deploy the VM from the appliance (in red on the image below):\n\nSolution:\nOn template registration.  after it is downloaded to secondary storage.  the OVF file is examined and OVF properties are extracted from the file when available.\nOVF properties extracted from templates after being downloaded to secondary storage are stored on the new table 'template_ovf_properties'.\nA new optional section is added to the VM deployment wizard in the UI:\nIf the selected template does not contain OVF properties.  then the optional section is not displayed on the wizard.\nIf the selected template contains OVF properties.  then the optional new section is displayed. Each OVF property is displayed and the user must complete every property before proceeding to the next section.\nIf any configuration property is empty.  then a dialog is displayed indicating that there are empty properties which must be set before proceeding\nimage\nThe specific OVF properties set on deployment are stored on the 'user_vm_details' table with the prefix: 'ovfproperties-'.\nThe VM is configured with the vApp configuration section containing the values that the user provided on the wizard.","date":"2019-08-09 18:44:46","modifiedFileCount":"26","status":"M","submitter":"Nicolas Vazquez"},{"authorTime":"2020-08-19 17:23:38","codes":[{"authorDate":"2020-08-19 17:23:38","commitOrder":3,"curCode":"    private void copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl, String templatePathAtSecondaryStorage,\n                                                    String templateName, String templateUuid, String nfsVersion) throws Exception {\n\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \"\n                + templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = _mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName = secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage + templateName + \".\" + ImageFormat.OVA.getFileExtension();\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg = \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage\n                    + \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n            vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateUuid);\n            vmMo.markAsTemplate();\n        } else {\n            vmMo.destroy();\n            String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n    }\n","date":"2020-08-19 17:23:38","endLine":613,"groupId":"2508","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"copyTemplateFromSecondaryToPrimary","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdatastoreMo@StringsecondaryStorageUrl@StringtemplatePathAtSecondaryStorage@StringtemplateName@StringtemplateUuid@StringnfsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/36/9e5b6ef6e5900494119a28d2c95d115969a2e2.src","preCode":"    private void copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl, String templatePathAtSecondaryStorage,\n            String templateName, String templateUuid, Integer nfsVersion) throws Exception {\n\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \"\n                + templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = _mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName = secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage + templateName + \".\" + ImageFormat.OVA.getFileExtension();\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg = \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage\n                    + \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n            vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateUuid);\n            vmMo.markAsTemplate();\n        } else {\n            vmMo.destroy();\n            String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":560,"status":"M"},{"authorDate":"2020-08-19 17:23:38","commitOrder":3,"curCode":"    private Pair<VirtualMachineMO, Long> copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl,\n                                                                            String templatePathAtSecondaryStorage, String templateName, String templateUuid,\n                                                                            boolean createSnapshot, String nfsVersion) throws Exception {\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" +\n                templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName =\n                VmwareStorageLayoutHelper.getTemplateOnSecStorageFilePath(secondaryMountPoint, templatePathAtSecondaryStorage, templateName,\n                        ImageFormat.OVA.getFileExtension());\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        VmConfigInfo vAppConfig;\n        if (vmMo == null) {\n            String msg =\n                    \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage +\n                            \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        } else {\n            vAppConfig = vmMo.getConfigInfo().getVAppConfig();\n            if (vAppConfig != null) {\n                s_logger.info(\"Found vApp configuration\");\n            }\n        }\n\n        OVAProcessor processor = new OVAProcessor();\n        Map<String, Object> params = new HashMap<>();\n        params.put(StorageLayer.InstanceConfigKey, _storage);\n        processor.configure(\"OVA Processor\", params);\n        long virtualSize = processor.getTemplateVirtualSize(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage, templateName);\n\n        if (createSnapshot) {\n            if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n                \r\n                \r\n                vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateName);\n                if (vAppConfig == null) {\n                    vmMo.markAsTemplate();\n                }\n            } else {\n                vmMo.destroy();\n\n                String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n\n                s_logger.error(msg);\n\n                throw new Exception(msg);\n            }\n        }\n\n        return new Pair<>(vmMo, virtualSize);\n    }\n","date":"2020-08-19 17:23:38","endLine":559,"groupId":"11024","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"copyTemplateFromSecondaryToPrimary","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdatastoreMo@StringsecondaryStorageUrl@StringtemplatePathAtSecondaryStorage@StringtemplateName@StringtemplateUuid@booleancreateSnapshot@StringnfsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e5/fae17ed5156753feec1c44bd2b5a019a77be08.src","preCode":"    private Pair<VirtualMachineMO, Long> copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl,\n                                                                            String templatePathAtSecondaryStorage, String templateName, String templateUuid,\n                                                                            boolean createSnapshot, Integer nfsVersion) throws Exception {\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" +\n                templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName =\n                VmwareStorageLayoutHelper.getTemplateOnSecStorageFilePath(secondaryMountPoint, templatePathAtSecondaryStorage, templateName,\n                        ImageFormat.OVA.getFileExtension());\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        VmConfigInfo vAppConfig;\n        if (vmMo == null) {\n            String msg =\n                    \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage +\n                            \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        } else {\n            vAppConfig = vmMo.getConfigInfo().getVAppConfig();\n            if (vAppConfig != null) {\n                s_logger.info(\"Found vApp configuration\");\n            }\n        }\n\n        OVAProcessor processor = new OVAProcessor();\n        Map<String, Object> params = new HashMap<>();\n        params.put(StorageLayer.InstanceConfigKey, _storage);\n        processor.configure(\"OVA Processor\", params);\n        long virtualSize = processor.getTemplateVirtualSize(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage, templateName);\n\n        if (createSnapshot) {\n            if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n                \r\n                \r\n                vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateName);\n                if (vAppConfig == null) {\n                    vmMo.markAsTemplate();\n                }\n            } else {\n                vmMo.destroy();\n\n                String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n\n                s_logger.error(msg);\n\n                throw new Exception(msg);\n            }\n        }\n\n        return new Pair<>(vmMo, virtualSize);\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":480,"status":"M"}],"commitId":"d57aa835174c9dd045930d1396ce4bee9a275a60","commitMessage":"@@@server: Added nfs minor version support (#4180)\n\nThis PR adds minor version support when mounting nfs on the SSVM as requested in #2861\n\nThe global setting \"secstorage.nfs.version\" has been changed to use the String data type which allows any minor version to be specified.","date":"2020-08-19 17:23:38","modifiedFileCount":"30","status":"M","submitter":"Spaceman1984"},{"authorTime":"2020-10-12 18:24:12","codes":[{"authorDate":"2020-08-19 17:23:38","commitOrder":4,"curCode":"    private void copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl, String templatePathAtSecondaryStorage,\n                                                    String templateName, String templateUuid, String nfsVersion) throws Exception {\n\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \"\n                + templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = _mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName = secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage + templateName + \".\" + ImageFormat.OVA.getFileExtension();\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg = \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage\n                    + \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n            vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateUuid);\n            vmMo.markAsTemplate();\n        } else {\n            vmMo.destroy();\n            String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n    }\n","date":"2020-08-19 17:23:38","endLine":613,"groupId":"2508","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"copyTemplateFromSecondaryToPrimary","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdatastoreMo@StringsecondaryStorageUrl@StringtemplatePathAtSecondaryStorage@StringtemplateName@StringtemplateUuid@StringnfsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/36/9e5b6ef6e5900494119a28d2c95d115969a2e2.src","preCode":"    private void copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl, String templatePathAtSecondaryStorage,\n                                                    String templateName, String templateUuid, String nfsVersion) throws Exception {\n\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \"\n                + templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = _mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName = secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage + templateName + \".\" + ImageFormat.OVA.getFileExtension();\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg = \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage\n                    + \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n            vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateUuid);\n            vmMo.markAsTemplate();\n        } else {\n            vmMo.destroy();\n            String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":560,"status":"N"},{"authorDate":"2020-10-12 18:24:12","commitOrder":4,"curCode":"    private Pair<VirtualMachineMO, Long> copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl,\n                                                                            String templatePathAtSecondaryStorage, String templateName, String templateUuid,\n                                                                            boolean createSnapshot, String nfsVersion) throws Exception {\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" +\n                templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName =\n                VmwareStorageLayoutHelper.getTemplateOnSecStorageFilePath(secondaryMountPoint, templatePathAtSecondaryStorage, templateName,\n                        ImageFormat.OVA.getFileExtension());\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        VmConfigInfo vAppConfig;\n        if (vmMo == null) {\n            String msg =\n                    \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage +\n                            \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        } else {\n            vAppConfig = vmMo.getConfigInfo().getVAppConfig();\n            if (vAppConfig != null) {\n                s_logger.info(\"Found vApp configuration\");\n            }\n        }\n\n        OVAProcessor processor = new OVAProcessor();\n        Map<String, Object> params = new HashMap<>();\n        params.put(StorageLayer.InstanceConfigKey, _storage);\n        processor.configure(\"OVA Processor\", params);\n        long virtualSize = processor.getTemplateVirtualSize(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage, templateName);\n\n        if (createSnapshot) {\n            if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n                \r\n                \r\n                vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateName);\n                if (vAppConfig == null || (vAppConfig.getProperty().size() == 0)) {\n                    vmMo.markAsTemplate();\n                }\n            } else {\n                vmMo.destroy();\n\n                String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n\n                s_logger.error(msg);\n\n                throw new Exception(msg);\n            }\n        }\n\n        return new Pair<>(vmMo, virtualSize);\n    }\n","date":"2020-10-12 18:24:12","endLine":559,"groupId":"11024","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"copyTemplateFromSecondaryToPrimary","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdatastoreMo@StringsecondaryStorageUrl@StringtemplatePathAtSecondaryStorage@StringtemplateName@StringtemplateUuid@booleancreateSnapshot@StringnfsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5c/9c91767bdd648b0999e4e13b1e0d4a60747a22.src","preCode":"    private Pair<VirtualMachineMO, Long> copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl,\n                                                                            String templatePathAtSecondaryStorage, String templateName, String templateUuid,\n                                                                            boolean createSnapshot, String nfsVersion) throws Exception {\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" +\n                templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName =\n                VmwareStorageLayoutHelper.getTemplateOnSecStorageFilePath(secondaryMountPoint, templatePathAtSecondaryStorage, templateName,\n                        ImageFormat.OVA.getFileExtension());\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        VmConfigInfo vAppConfig;\n        if (vmMo == null) {\n            String msg =\n                    \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage +\n                            \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        } else {\n            vAppConfig = vmMo.getConfigInfo().getVAppConfig();\n            if (vAppConfig != null) {\n                s_logger.info(\"Found vApp configuration\");\n            }\n        }\n\n        OVAProcessor processor = new OVAProcessor();\n        Map<String, Object> params = new HashMap<>();\n        params.put(StorageLayer.InstanceConfigKey, _storage);\n        processor.configure(\"OVA Processor\", params);\n        long virtualSize = processor.getTemplateVirtualSize(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage, templateName);\n\n        if (createSnapshot) {\n            if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n                \r\n                \r\n                vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateName);\n                if (vAppConfig == null) {\n                    vmMo.markAsTemplate();\n                }\n            } else {\n                vmMo.destroy();\n\n                String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n\n                s_logger.error(msg);\n\n                throw new Exception(msg);\n            }\n        }\n\n        return new Pair<>(vmMo, virtualSize);\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":480,"status":"M"}],"commitId":"1bbb29d03452120b4ebe0452939cc5d01c9939ff","commitMessage":"@@@Fixed vm-templates not being removed from primary storage with storag? (#4389)\n\n* Fixed vm-templates not being removed from primary storage with storage garbage collection\n\n* Update vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java\n\nCo-authored-by: sureshanaparti <12028987+sureshanaparti@users.noreply.github.com>\n\n* Var name\n\nCo-authored-by: sureshanaparti <12028987+sureshanaparti@users.noreply.github.com>","date":"2020-10-12 18:24:12","modifiedFileCount":"3","status":"M","submitter":"Spaceman1984"},{"authorTime":"2020-10-26 21:24:14","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":5,"curCode":"    private void copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl, String templatePathAtSecondaryStorage,\n                                                    String templateName, String templateUuid, String nfsVersion) throws Exception {\n\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \"\n                + templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = _mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName = secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage + templateName + \".\" + ImageFormat.OVA.getFileExtension();\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\", null);\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg = \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage\n                    + \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n            vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateUuid);\n            vmMo.markAsTemplate();\n        } else {\n            vmMo.destroy();\n            String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n    }\n","date":"2020-10-26 21:24:14","endLine":613,"groupId":"103009","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"copyTemplateFromSecondaryToPrimary","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdatastoreMo@StringsecondaryStorageUrl@StringtemplatePathAtSecondaryStorage@StringtemplateName@StringtemplateUuid@StringnfsVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3e/2b5a02f6c741bc3cd7910996c540a2ddfe6a91.src","preCode":"    private void copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl, String templatePathAtSecondaryStorage,\n                                                    String templateName, String templateUuid, String nfsVersion) throws Exception {\n\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \"\n                + templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = _mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName = secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage + templateName + \".\" + ImageFormat.OVA.getFileExtension();\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        if (vmMo == null) {\n            String msg = \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage\n                    + \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n            vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateUuid);\n            vmMo.markAsTemplate();\n        } else {\n            vmMo.destroy();\n            String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":560,"status":"M"},{"authorDate":"2020-10-26 21:24:14","commitOrder":5,"curCode":"    private Pair<VirtualMachineMO, Long> copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl,\n                                                                            String templatePathAtSecondaryStorage, String templateName, String templateUuid,\n                                                                            boolean createSnapshot, String nfsVersion, String configuration) throws Exception {\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" +\n                templatePathAtSecondaryStorage + \", templateName: \" + templateName + \", configuration: \" + configuration);\n\n        String secondaryMountPoint = mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName =\n                VmwareStorageLayoutHelper.getTemplateOnSecStorageFilePath(secondaryMountPoint, templatePathAtSecondaryStorage, templateName,\n                        ImageFormat.OVA.getFileExtension());\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        if (datastoreMo.getDatastoreType().equalsIgnoreCase(\"VVOL\")) {\n            templateUuid = CustomFieldConstants.CLOUD_UUID + \"-\" + templateUuid;\n        }\n\n        VmConfigInfo vAppConfig;\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(String.format(\"Deploying OVF template %s with configuration %s\", templateName, configuration));\n        }\n        hyperHost.importVmFromOVF(srcFileName, templateUuid, datastoreMo, \"thin\", configuration);\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(templateUuid);\n        if (vmMo == null) {\n            String msg =\n                    \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage +\n                            \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        } else {\n            vAppConfig = vmMo.getConfigInfo().getVAppConfig();\n            if (vAppConfig != null) {\n                s_logger.info(\"Found vApp configuration\");\n            }\n        }\n\n        OVAProcessor processor = new OVAProcessor();\n        Map<String, Object> params = new HashMap<>();\n        params.put(StorageLayer.InstanceConfigKey, _storage);\n        processor.configure(\"OVA Processor\", params);\n        long virtualSize = processor.getTemplateVirtualSize(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage, templateName);\n\n        if (createSnapshot) {\n            if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n                \r\n                \r\n                vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateName);\n                if (vAppConfig == null || (vAppConfig.getProperty().size() == 0)) {\n                    vmMo.markAsTemplate();\n                }\n            } else {\n                vmMo.destroy();\n\n                String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n\n                s_logger.error(msg);\n\n                throw new Exception(msg);\n            }\n        }\n\n        return new Pair<>(vmMo, virtualSize);\n    }\n","date":"2020-10-26 21:24:14","endLine":570,"groupId":"103009","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"copyTemplateFromSecondaryToPrimary","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdatastoreMo@StringsecondaryStorageUrl@StringtemplatePathAtSecondaryStorage@StringtemplateName@StringtemplateUuid@booleancreateSnapshot@StringnfsVersion@Stringconfiguration)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/85/aacd34f42c8bccea920b949c272fc6721f4cf2.src","preCode":"    private Pair<VirtualMachineMO, Long> copyTemplateFromSecondaryToPrimary(VmwareHypervisorHost hyperHost, DatastoreMO datastoreMo, String secondaryStorageUrl,\n                                                                            String templatePathAtSecondaryStorage, String templateName, String templateUuid,\n                                                                            boolean createSnapshot, String nfsVersion) throws Exception {\n        s_logger.info(\"Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" +\n                templatePathAtSecondaryStorage + \", templateName: \" + templateName);\n\n        String secondaryMountPoint = mountService.getMountPoint(secondaryStorageUrl, nfsVersion);\n        s_logger.info(\"Secondary storage mount point: \" + secondaryMountPoint);\n\n        String srcOVAFileName =\n                VmwareStorageLayoutHelper.getTemplateOnSecStorageFilePath(secondaryMountPoint, templatePathAtSecondaryStorage, templateName,\n                        ImageFormat.OVA.getFileExtension());\n\n        String srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            Script command = new Script(\"tar\", 0, s_logger);\n            command.add(\"--no-same-owner\");\n            command.add(\"-xf\", srcOVAFileName);\n            command.setWorkDir(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage);\n            s_logger.info(\"Executing command: \" + command.toString());\n            String result = command.execute();\n            if (result != null) {\n                String msg = \"Unable to unpack snapshot OVA file at: \" + srcOVAFileName;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n        }\n\n        srcFileName = getOVFFilePath(srcOVAFileName);\n        if (srcFileName == null) {\n            String msg = \"Unable to locate OVF file in template package directory: \" + srcOVAFileName;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        }\n\n        String vmName = templateUuid;\n        hyperHost.importVmFromOVF(srcFileName, vmName, datastoreMo, \"thin\");\n\n        VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(vmName);\n        VmConfigInfo vAppConfig;\n        if (vmMo == null) {\n            String msg =\n                    \"Failed to import OVA template. secondaryStorage: \" + secondaryStorageUrl + \", templatePathAtSecondaryStorage: \" + templatePathAtSecondaryStorage +\n                            \", templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n            s_logger.error(msg);\n            throw new Exception(msg);\n        } else {\n            vAppConfig = vmMo.getConfigInfo().getVAppConfig();\n            if (vAppConfig != null) {\n                s_logger.info(\"Found vApp configuration\");\n            }\n        }\n\n        OVAProcessor processor = new OVAProcessor();\n        Map<String, Object> params = new HashMap<>();\n        params.put(StorageLayer.InstanceConfigKey, _storage);\n        processor.configure(\"OVA Processor\", params);\n        long virtualSize = processor.getTemplateVirtualSize(secondaryMountPoint + \"/\" + templatePathAtSecondaryStorage, templateName);\n\n        if (createSnapshot) {\n            if (vmMo.createSnapshot(\"cloud.template.base\", \"Base snapshot\", false, false)) {\n                \r\n                \r\n                vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID, templateName);\n                if (vAppConfig == null || (vAppConfig.getProperty().size() == 0)) {\n                    vmMo.markAsTemplate();\n                }\n            } else {\n                vmMo.destroy();\n\n                String msg = \"Unable to create base snapshot for template, templateName: \" + templateName + \", templateUuid: \" + templateUuid;\n\n                s_logger.error(msg);\n\n                throw new Exception(msg);\n            }\n        }\n\n        return new Pair<>(vmMo, virtualSize);\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"M"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"}]
