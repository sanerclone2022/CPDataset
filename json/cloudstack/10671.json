[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected Void createVolumeFromBaseImageCallBack(AsyncCallbackDispatcher<VolumeServiceImpl, CopyCommandResult> callback,\n            CreateVolumeFromBaseImageContext<VolumeApiResult> context) {\n        DataObject vo = context.vo;\n        DataObject tmplOnPrimary = context.templateOnStore;\n        CopyCommandResult result = callback.getResult();\n        VolumeApiResult volResult = new VolumeApiResult((VolumeObject)vo);\n\n        if (result.isSuccess()) {\n            vo.processEvent(Event.OperationSuccessed, result.getAnswer());\n        } else {\n\n            vo.processEvent(Event.OperationFailed);\n            volResult.setResult(result.getResult());\n            \r\n            \r\n            Answer ans = result.getAnswer();\n            if (ans != null && ans instanceof CopyCmdAnswer && ans.getDetails().contains(\"request template reload\")) {\n                if (tmplOnPrimary != null) {\n                    s_logger.info(\"Reset template_spool_ref entry so that vmware template can be reloaded in next try\");\n                    VMTemplateStoragePoolVO templatePoolRef = _tmpltPoolDao.findByPoolTemplate(tmplOnPrimary.getDataStore().getId(), tmplOnPrimary.getId());\n                    if (templatePoolRef != null) {\n                        long templatePoolRefId = templatePoolRef.getId();\n                        templatePoolRef = _tmpltPoolDao.acquireInLockTable(templatePoolRefId, 1200);\n                        try {\n                            if (templatePoolRef == null) {\n                                s_logger.warn(\"Reset Template State On Pool failed - unable to lock TemplatePoolRef \" + templatePoolRefId);\n                            } else {\n                                templatePoolRef.setTemplateSize(0);\n                                templatePoolRef.setDownloadState(VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n                                templatePoolRef.setState(ObjectInDataStoreStateMachine.State.Allocated);\n\n                                _tmpltPoolDao.update(templatePoolRefId, templatePoolRef);\n                            }\n                        }finally {\n                            _tmpltPoolDao.releaseFromLockTable(templatePoolRefId);\n                        }\n                    }\n                }\n            }\n        }\n\n        AsyncCallFuture<VolumeApiResult> future = context.getFuture();\n        future.complete(volResult);\n        return null;\n    }\n","date":"2018-01-20 05:49:27","endLine":785,"groupId":"16176","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createVolumeFromBaseImageCallBack","params":"(AsyncCallbackDispatcher<VolumeServiceImpl@CopyCommandResult>callback@CreateVolumeFromBaseImageContext<VolumeApiResult>context)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/36/313058e9249fbef2dc1715afeb5d8b7c2c3cf4.src","preCode":"    protected Void createVolumeFromBaseImageCallBack(AsyncCallbackDispatcher<VolumeServiceImpl, CopyCommandResult> callback,\n            CreateVolumeFromBaseImageContext<VolumeApiResult> context) {\n        DataObject vo = context.vo;\n        DataObject tmplOnPrimary = context.templateOnStore;\n        CopyCommandResult result = callback.getResult();\n        VolumeApiResult volResult = new VolumeApiResult((VolumeObject)vo);\n\n        if (result.isSuccess()) {\n            vo.processEvent(Event.OperationSuccessed, result.getAnswer());\n        } else {\n\n            vo.processEvent(Event.OperationFailed);\n            volResult.setResult(result.getResult());\n            \r\n            \r\n            Answer ans = result.getAnswer();\n            if (ans != null && ans instanceof CopyCmdAnswer && ans.getDetails().contains(\"request template reload\")) {\n                if (tmplOnPrimary != null) {\n                    s_logger.info(\"Reset template_spool_ref entry so that vmware template can be reloaded in next try\");\n                    VMTemplateStoragePoolVO templatePoolRef = _tmpltPoolDao.findByPoolTemplate(tmplOnPrimary.getDataStore().getId(), tmplOnPrimary.getId());\n                    if (templatePoolRef != null) {\n                        long templatePoolRefId = templatePoolRef.getId();\n                        templatePoolRef = _tmpltPoolDao.acquireInLockTable(templatePoolRefId, 1200);\n                        try {\n                            if (templatePoolRef == null) {\n                                s_logger.warn(\"Reset Template State On Pool failed - unable to lock TemplatePoolRef \" + templatePoolRefId);\n                            } else {\n                                templatePoolRef.setTemplateSize(0);\n                                templatePoolRef.setDownloadState(VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n                                templatePoolRef.setState(ObjectInDataStoreStateMachine.State.Allocated);\n\n                                _tmpltPoolDao.update(templatePoolRefId, templatePoolRef);\n                            }\n                        }finally {\n                            _tmpltPoolDao.releaseFromLockTable(templatePoolRefId);\n                        }\n                    }\n                }\n            }\n        }\n\n        AsyncCallFuture<VolumeApiResult> future = context.getFuture();\n        future.complete(volResult);\n        return null;\n    }\n","realPath":"engine/storage/volume/src/main/java/org/apache/cloudstack/storage/volume/VolumeServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":741,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean resetTemplateDownloadStateOnPool(long templateStoragePoolRefId) {\n        \r\n        \r\n        VMTemplateStoragePoolVO templateStoragePoolRef = _tmpltPoolDao.acquireInLockTable(templateStoragePoolRefId, 1200);\n\n        if (templateStoragePoolRef == null) {\n            s_logger.warn(\"resetTemplateDownloadStateOnPool failed - unable to lock TemplateStorgePoolRef \" + templateStoragePoolRefId);\n            return false;\n        }\n\n        try {\n            templateStoragePoolRef.setTemplateSize(0);\n            templateStoragePoolRef.setDownloadState(VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n\n            _tmpltPoolDao.update(templateStoragePoolRefId, templateStoragePoolRef);\n        } finally {\n            _tmpltPoolDao.releaseFromLockTable(templateStoragePoolRefId);\n        }\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":725,"groupId":"23993","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"resetTemplateDownloadStateOnPool","params":"(longtemplateStoragePoolRefId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/42/bdd72af63e1c2f51ce15dc4c90a73314e7b919.src","preCode":"    public boolean resetTemplateDownloadStateOnPool(long templateStoragePoolRefId) {\n        \r\n        \r\n        VMTemplateStoragePoolVO templateStoragePoolRef = _tmpltPoolDao.acquireInLockTable(templateStoragePoolRefId, 1200);\n\n        if (templateStoragePoolRef == null) {\n            s_logger.warn(\"resetTemplateDownloadStateOnPool failed - unable to lock TemplateStorgePoolRef \" + templateStoragePoolRefId);\n            return false;\n        }\n\n        try {\n            templateStoragePoolRef.setTemplateSize(0);\n            templateStoragePoolRef.setDownloadState(VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n\n            _tmpltPoolDao.update(templateStoragePoolRefId, templateStoragePoolRef);\n        } finally {\n            _tmpltPoolDao.releaseFromLockTable(templateStoragePoolRefId);\n        }\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/template/TemplateManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":705,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":2,"curCode":"    protected Void createVolumeFromBaseImageCallBack(AsyncCallbackDispatcher<VolumeServiceImpl, CopyCommandResult> callback, CreateVolumeFromBaseImageContext<VolumeApiResult> context) {\n        DataObject vo = context.vo;\n        DataObject tmplOnPrimary = context.templateOnStore;\n        CopyCommandResult result = callback.getResult();\n        VolumeApiResult volResult = new VolumeApiResult((VolumeObject)vo);\n        String deployAsIsConfiguration = context.deployAsIsConfiguration;\n\n        if (result.isSuccess()) {\n            vo.processEvent(Event.OperationSuccessed, result.getAnswer());\n        } else {\n\n            vo.processEvent(Event.OperationFailed);\n            volResult.setResult(result.getResult());\n            \r\n            \r\n            Answer ans = result.getAnswer();\n            if (ans != null && ans instanceof CopyCmdAnswer && ans.getDetails().contains(REQUEST_TEMPLATE_RELOAD)) {\n                if (tmplOnPrimary != null) {\n                    s_logger.info(\"Reset template_spool_ref entry so that vmware template can be reloaded in next try\");\n                    VMTemplateStoragePoolVO templatePoolRef = _tmpltPoolDao.findByPoolTemplate(tmplOnPrimary.getDataStore().getId(), tmplOnPrimary.getId(), deployAsIsConfiguration);\n                    if (templatePoolRef != null) {\n                        long templatePoolRefId = templatePoolRef.getId();\n                        templatePoolRef = _tmpltPoolDao.acquireInLockTable(templatePoolRefId, 1200);\n                        try {\n                            if (templatePoolRef == null) {\n                                s_logger.warn(\"Reset Template State On Pool failed - unable to lock TemplatePoolRef \" + templatePoolRefId);\n                            } else {\n                                templatePoolRef.setTemplateSize(0);\n                                templatePoolRef.setDownloadState(VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n                                templatePoolRef.setState(ObjectInDataStoreStateMachine.State.Allocated);\n\n                                _tmpltPoolDao.update(templatePoolRefId, templatePoolRef);\n                            }\n                        } finally {\n                            _tmpltPoolDao.releaseFromLockTable(templatePoolRefId);\n                        }\n                    }\n                }\n            }\n        }\n\n        AsyncCallFuture<VolumeApiResult> future = context.getFuture();\n        future.complete(volResult);\n        return null;\n    }\n","date":"2020-10-26 21:24:14","endLine":795,"groupId":"10671","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createVolumeFromBaseImageCallBack","params":"(AsyncCallbackDispatcher<VolumeServiceImpl@CopyCommandResult>callback@CreateVolumeFromBaseImageContext<VolumeApiResult>context)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5e/3493a29f1d893b04dd8fd0cdb4b46396f5133f.src","preCode":"    protected Void createVolumeFromBaseImageCallBack(AsyncCallbackDispatcher<VolumeServiceImpl, CopyCommandResult> callback, CreateVolumeFromBaseImageContext<VolumeApiResult> context) {\n        DataObject vo = context.vo;\n        DataObject tmplOnPrimary = context.templateOnStore;\n        CopyCommandResult result = callback.getResult();\n        VolumeApiResult volResult = new VolumeApiResult((VolumeObject)vo);\n\n        if (result.isSuccess()) {\n            vo.processEvent(Event.OperationSuccessed, result.getAnswer());\n        } else {\n\n            vo.processEvent(Event.OperationFailed);\n            volResult.setResult(result.getResult());\n            \r\n            \r\n            Answer ans = result.getAnswer();\n            if (ans != null && ans instanceof CopyCmdAnswer && ans.getDetails().contains(\"request template reload\")) {\n                if (tmplOnPrimary != null) {\n                    s_logger.info(\"Reset template_spool_ref entry so that vmware template can be reloaded in next try\");\n                    VMTemplateStoragePoolVO templatePoolRef = _tmpltPoolDao.findByPoolTemplate(tmplOnPrimary.getDataStore().getId(), tmplOnPrimary.getId());\n                    if (templatePoolRef != null) {\n                        long templatePoolRefId = templatePoolRef.getId();\n                        templatePoolRef = _tmpltPoolDao.acquireInLockTable(templatePoolRefId, 1200);\n                        try {\n                            if (templatePoolRef == null) {\n                                s_logger.warn(\"Reset Template State On Pool failed - unable to lock TemplatePoolRef \" + templatePoolRefId);\n                            } else {\n                                templatePoolRef.setTemplateSize(0);\n                                templatePoolRef.setDownloadState(VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n                                templatePoolRef.setState(ObjectInDataStoreStateMachine.State.Allocated);\n\n                                _tmpltPoolDao.update(templatePoolRefId, templatePoolRef);\n                            }\n                        } finally {\n                            _tmpltPoolDao.releaseFromLockTable(templatePoolRefId);\n                        }\n                    }\n                }\n            }\n        }\n\n        AsyncCallFuture<VolumeApiResult> future = context.getFuture();\n        future.complete(volResult);\n        return null;\n    }\n","realPath":"engine/storage/volume/src/main/java/org/apache/cloudstack/storage/volume/VolumeServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":751,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public boolean resetTemplateDownloadStateOnPool(long templateStoragePoolRefId) {\n        \r\n        \r\n        VMTemplateStoragePoolVO templateStoragePoolRef = _tmpltPoolDao.acquireInLockTable(templateStoragePoolRefId, 1200);\n\n        if (templateStoragePoolRef == null) {\n            s_logger.warn(\"resetTemplateDownloadStateOnPool failed - unable to lock TemplateStorgePoolRef \" + templateStoragePoolRefId);\n            return false;\n        }\n\n        try {\n            templateStoragePoolRef.setTemplateSize(0);\n            templateStoragePoolRef.setDownloadState(VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n\n            _tmpltPoolDao.update(templateStoragePoolRefId, templateStoragePoolRef);\n        } finally {\n            _tmpltPoolDao.releaseFromLockTable(templateStoragePoolRefId);\n        }\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":725,"groupId":"10671","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"resetTemplateDownloadStateOnPool","params":"(longtemplateStoragePoolRefId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/42/bdd72af63e1c2f51ce15dc4c90a73314e7b919.src","preCode":"    public boolean resetTemplateDownloadStateOnPool(long templateStoragePoolRefId) {\n        \r\n        \r\n        VMTemplateStoragePoolVO templateStoragePoolRef = _tmpltPoolDao.acquireInLockTable(templateStoragePoolRefId, 1200);\n\n        if (templateStoragePoolRef == null) {\n            s_logger.warn(\"resetTemplateDownloadStateOnPool failed - unable to lock TemplateStorgePoolRef \" + templateStoragePoolRefId);\n            return false;\n        }\n\n        try {\n            templateStoragePoolRef.setTemplateSize(0);\n            templateStoragePoolRef.setDownloadState(VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED);\n\n            _tmpltPoolDao.update(templateStoragePoolRefId, templateStoragePoolRef);\n        } finally {\n            _tmpltPoolDao.releaseFromLockTable(templateStoragePoolRefId);\n        }\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/template/TemplateManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":705,"status":"N"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"}]
