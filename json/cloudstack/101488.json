[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||  template.getAccountId() == CallContext.current().getCallingAccount().getId() ) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(template.getChecksum());\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (template.getDetailName() != null) {\n            Map<String, String> details = new HashMap<>();\n            details.put(template.getDetailName(), template.getDetailValue());\n            templateResponse.setDetails(details);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","date":"2018-01-20 05:49:27","endLine":234,"groupId":"4894","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newTemplateResponse","params":"(ResponseViewview@TemplateJoinVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/4f/1984257ed33123d06b55053f5aaa43d209be7e.src","preCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||  template.getAccountId() == CallContext.current().getCallingAccount().getId() ) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(template.getChecksum());\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (template.getDetailName() != null) {\n            Map<String, String> details = new HashMap<>();\n            details.put(template.getDetailName(), template.getDetailValue());\n            templateResponse.setDetails(details);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":451,"groupId":"14488","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createQuotaEmailResponse","params":"(QuotaEmailTemplatesVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0f/bf50e9a8f96e00e151e4e2434f4d609eb261ab.src","preCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","realPath":"plugins/database/quota/src/main/java/org/apache/cloudstack/api/response/QuotaResponseBuilderImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-10-23 03:28:48","commitOrder":2,"curCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||  template.getAccountId() == CallContext.current().getCallingAccount().getId() ) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (template.getDetailName() != null) {\n            Map<String, String> details = new HashMap<>();\n            details.put(template.getDetailName(), template.getDetailValue());\n            templateResponse.setDetails(details);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","date":"2018-10-23 03:32:06","endLine":235,"groupId":"14724","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newTemplateResponse","params":"(ResponseViewview@TemplateJoinVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c0/d57d7e4af91dbc595b4ad8e1e9b3ccaeca9e02.src","preCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||  template.getAccountId() == CallContext.current().getCallingAccount().getId() ) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(template.getChecksum());\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (template.getDetailName() != null) {\n            Map<String, String> details = new HashMap<>();\n            details.put(template.getDetailName(), template.getDetailValue());\n            templateResponse.setDetails(details);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":451,"groupId":"14488","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createQuotaEmailResponse","params":"(QuotaEmailTemplatesVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0f/bf50e9a8f96e00e151e4e2434f4d609eb261ab.src","preCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","realPath":"plugins/database/quota/src/main/java/org/apache/cloudstack/api/response/QuotaResponseBuilderImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"N"}],"commitId":"71e5a88fc1014a3e3cf1de44578603099a76c421","commitMessage":"@@@Forward merge client: mgmt server listen default to 0.0.0.0 (#2907)\n","date":"2018-10-23 03:32:06","modifiedFileCount":"4","status":"M","submitter":"Rafael Weing?rtner"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-10-24 18:50:27","commitOrder":3,"curCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||  template.getAccountId() == CallContext.current().getCallingAccount().getId() ) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (template.getDetailName() != null) {\n            Map<String, String> details = new HashMap<>();\n            details.put(template.getDetailName(), template.getDetailValue());\n            templateResponse.setDetails(details);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","date":"2018-10-24 18:50:27","endLine":236,"groupId":"14724","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"newTemplateResponse","params":"(ResponseViewview@TemplateJoinVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e4/e0c442bf41202046f63b1d619e9639a192d336.src","preCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||  template.getAccountId() == CallContext.current().getCallingAccount().getId() ) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (template.getDetailName() != null) {\n            Map<String, String> details = new HashMap<>();\n            details.put(template.getDetailName(), template.getDetailValue());\n            templateResponse.setDetails(details);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":451,"groupId":"14488","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createQuotaEmailResponse","params":"(QuotaEmailTemplatesVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0f/bf50e9a8f96e00e151e4e2434f4d609eb261ab.src","preCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","realPath":"plugins/database/quota/src/main/java/org/apache/cloudstack/api/response/QuotaResponseBuilderImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"N"}],"commitId":"6f44a8d7ba22a45bc9f3827a0335d927bc91750f","commitMessage":"@@@template: Return requireshvm key as part of list template response (#2921)\n\nAdded requireshvm key in the response of list template API.\nFixes #2821\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt@gmail.com>","date":"2018-10-24 18:50:27","modifiedFileCount":"2","status":"M","submitter":"Abhishek"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2019-08-01 16:00:34","commitOrder":4,"curCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (template.getDetailName() != null) {\n            Map<String, String> details = new HashMap<>();\n            details.put(template.getDetailName(), template.getDetailValue());\n            templateResponse.setDetails(details);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","date":"2019-08-01 16:00:34","endLine":238,"groupId":"23225","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"newTemplateResponse","params":"(ResponseViewview@TemplateJoinVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/54/686f73df2a334867441d0ad5bc83ea0e67548e.src","preCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||  template.getAccountId() == CallContext.current().getCallingAccount().getId() ) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (template.getDetailName() != null) {\n            Map<String, String> details = new HashMap<>();\n            details.put(template.getDetailName(), template.getDetailValue());\n            templateResponse.setDetails(details);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":4,"curCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":451,"groupId":"14488","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createQuotaEmailResponse","params":"(QuotaEmailTemplatesVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0f/bf50e9a8f96e00e151e4e2434f4d609eb261ab.src","preCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","realPath":"plugins/database/quota/src/main/java/org/apache/cloudstack/api/response/QuotaResponseBuilderImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"N"}],"commitId":"d3b292ace9b5c6c8f02fb8fcff806dd9b4743775","commitMessage":"@@@server: Fixes API permissions.  global settings and template UX (#3534)\n\nFixes:\n\n- This allows getUploadParamsForIso for all user role types.  also fixes\nauthorised field for getUploadParamsForTemplate API.\n- Fix global setting description to say what is used when value is empty/blank.\n- For VM running/allocated usage description.  use parenthesis to return the instance name and ID.\n- Display template download progress when template is added to a project\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2019-08-01 16:00:34","modifiedFileCount":"5","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-07-29 16:38:02","commitOrder":5,"curCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n        templateResponse.setDetails(details);\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","date":"2020-07-29 16:38:02","endLine":245,"groupId":"23225","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"newTemplateResponse","params":"(ResponseViewview@TemplateJoinVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/61/a101743c915ec0e9f1774603b33a03a211f1e6.src","preCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (template.getDetailName() != null) {\n            Map<String, String> details = new HashMap<>();\n            details.put(template.getDetailName(), template.getDetailValue());\n            templateResponse.setDetails(details);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":5,"curCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":451,"groupId":"14488","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createQuotaEmailResponse","params":"(QuotaEmailTemplatesVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0f/bf50e9a8f96e00e151e4e2434f4d609eb261ab.src","preCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","realPath":"plugins/database/quota/src/main/java/org/apache/cloudstack/api/response/QuotaResponseBuilderImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"N"}],"commitId":"36ef85012f69af59657c87ad88184769549d8792","commitMessage":"@@@Merge remote-tracking branch 'origin/4.14'\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2020-07-29 16:38:02","modifiedFileCount":"13","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-09-17 12:42:10","commitOrder":6,"curCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        List<TemplateDataStoreVO> templatesInStore = _templateStoreDao.listByTemplateNotBypassed(template.getId());\n        List<Map<String, String>> downloadProgressDetails = new ArrayList();\n        HashMap<String, String> downloadDetailInImageStores = null;\n        for (TemplateDataStoreVO templateInStore : templatesInStore) {\n            downloadDetailInImageStores = new HashMap<>();\n            downloadDetailInImageStores.put(\"datastore\", dataStoreDao.findById(templateInStore.getDataStoreId()).getName());\n            downloadDetailInImageStores.put(\"downloadPercent\", Integer.toString(templateInStore.getDownloadPercent()));\n            downloadDetailInImageStores.put(\"downloadState\", (templateInStore.getDownloadState() != null ? templateInStore.getDownloadState().toString() : \"\"));\n            downloadProgressDetails.add(downloadDetailInImageStores);\n        }\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setDownloadProgress(downloadProgressDetails);\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n        templateResponse.setDetails(details);\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","date":"2020-09-17 12:42:10","endLine":263,"groupId":"23225","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"newTemplateResponse","params":"(ResponseViewview@TemplateJoinVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/39/8a63d6383fb8a0f19c7c78c33cb540f93917ff.src","preCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n        templateResponse.setDetails(details);\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":6,"curCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":451,"groupId":"14488","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createQuotaEmailResponse","params":"(QuotaEmailTemplatesVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0f/bf50e9a8f96e00e151e4e2434f4d609eb261ab.src","preCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","realPath":"plugins/database/quota/src/main/java/org/apache/cloudstack/api/response/QuotaResponseBuilderImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"N"}],"commitId":"b464fe41c67812145731c7c6c3edebb94bc47487","commitMessage":"@@@server: Secondary Storage Usage Improvements (#4053)\n\nThis feature enables the following:\nBalanced migration of data objects from source Image store to destination Image store(s)\nComplete migration of data\nsetting an image store to read-only\nviewing download progress of templates across all data stores\nRelated Primate PR: apache/cloudstack-primate#326","date":"2020-09-17 12:42:10","modifiedFileCount":"55","status":"M","submitter":"Pearl Dsilva"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":7,"curCode":"    public TemplateResponse newTemplateResponse(EnumSet<ApiConstants.DomainDetails> detailsView, ResponseView view, TemplateJoinVO template) {\n        List<TemplateDataStoreVO> templatesInStore = _templateStoreDao.listByTemplateNotBypassed(template.getId());\n        List<Map<String, String>> downloadProgressDetails = new ArrayList();\n        HashMap<String, String> downloadDetailInImageStores = null;\n        for (TemplateDataStoreVO templateInStore : templatesInStore) {\n            downloadDetailInImageStores = new HashMap<>();\n            downloadDetailInImageStores.put(\"datastore\", dataStoreDao.findById(templateInStore.getDataStoreId()).getName());\n            downloadDetailInImageStores.put(\"downloadPercent\", Integer.toString(templateInStore.getDownloadPercent()));\n            downloadDetailInImageStores.put(\"downloadState\", (templateInStore.getDownloadState() != null ? templateInStore.getDownloadState().toString() : \"\"));\n            downloadProgressDetails.add(downloadDetailInImageStores);\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setDownloadProgress(downloadProgressDetails);\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (detailsView.contains(ApiConstants.DomainDetails.all)) {\n            Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n            templateResponse.setDetails(details);\n\n            setDeployAsIsDetails(template, templateResponse);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setDeployAsIs(template.isDeployAsIs());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","date":"2020-10-26 21:24:14","endLine":277,"groupId":"23225","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"newTemplateResponse","params":"(EnumSet<ApiConstants.DomainDetails>detailsView@ResponseViewview@TemplateJoinVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/92/072c7a3c5a926a699f31b703a297400b37c6d0.src","preCode":"    public TemplateResponse newTemplateResponse(ResponseView view, TemplateJoinVO template) {\n        List<TemplateDataStoreVO> templatesInStore = _templateStoreDao.listByTemplateNotBypassed(template.getId());\n        List<Map<String, String>> downloadProgressDetails = new ArrayList();\n        HashMap<String, String> downloadDetailInImageStores = null;\n        for (TemplateDataStoreVO templateInStore : templatesInStore) {\n            downloadDetailInImageStores = new HashMap<>();\n            downloadDetailInImageStores.put(\"datastore\", dataStoreDao.findById(templateInStore.getDataStoreId()).getName());\n            downloadDetailInImageStores.put(\"downloadPercent\", Integer.toString(templateInStore.getDownloadPercent()));\n            downloadDetailInImageStores.put(\"downloadState\", (templateInStore.getDownloadState() != null ? templateInStore.getDownloadState().toString() : \"\"));\n            downloadProgressDetails.add(downloadDetailInImageStores);\n        }\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setDownloadProgress(downloadProgressDetails);\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n        templateResponse.setDetails(details);\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":7,"curCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":451,"groupId":"14488","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createQuotaEmailResponse","params":"(QuotaEmailTemplatesVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0f/bf50e9a8f96e00e151e4e2434f4d609eb261ab.src","preCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","realPath":"plugins/database/quota/src/main/java/org/apache/cloudstack/api/response/QuotaResponseBuilderImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"N"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-10-28 18:26:14","commitOrder":8,"curCode":"    public TemplateResponse newTemplateResponse(EnumSet<ApiConstants.DomainDetails> detailsView, ResponseView view, TemplateJoinVO template) {\n        List<TemplateDataStoreVO> templatesInStore = _templateStoreDao.listByTemplateNotBypassed(template.getId());\n        List<Map<String, String>> downloadProgressDetails = new ArrayList();\n        HashMap<String, String> downloadDetailInImageStores = null;\n        for (TemplateDataStoreVO templateInStore : templatesInStore) {\n            downloadDetailInImageStores = new HashMap<>();\n            downloadDetailInImageStores.put(\"datastore\", dataStoreDao.findById(templateInStore.getDataStoreId()).getName());\n            downloadDetailInImageStores.put(\"downloadPercent\", Integer.toString(templateInStore.getDownloadPercent()));\n            downloadDetailInImageStores.put(\"downloadState\", (templateInStore.getDownloadState() != null ? templateInStore.getDownloadState().toString() : \"\"));\n            downloadProgressDetails.add(downloadDetailInImageStores);\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setDownloadProgress(downloadProgressDetails);\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n            templateResponse.setUrl(template.getUrl());\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (detailsView.contains(ApiConstants.DomainDetails.all)) {\n            Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n            templateResponse.setDetails(details);\n\n            setDeployAsIsDetails(template, templateResponse);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setDeployAsIs(template.isDeployAsIs());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","date":"2020-10-28 18:26:14","endLine":278,"groupId":"10797","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"newTemplateResponse","params":"(EnumSet<ApiConstants.DomainDetails>detailsView@ResponseViewview@TemplateJoinVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ad/d5645ea7e386a1e0156aad1518608aaab7af60.src","preCode":"    public TemplateResponse newTemplateResponse(EnumSet<ApiConstants.DomainDetails> detailsView, ResponseView view, TemplateJoinVO template) {\n        List<TemplateDataStoreVO> templatesInStore = _templateStoreDao.listByTemplateNotBypassed(template.getId());\n        List<Map<String, String>> downloadProgressDetails = new ArrayList();\n        HashMap<String, String> downloadDetailInImageStores = null;\n        for (TemplateDataStoreVO templateInStore : templatesInStore) {\n            downloadDetailInImageStores = new HashMap<>();\n            downloadDetailInImageStores.put(\"datastore\", dataStoreDao.findById(templateInStore.getDataStoreId()).getName());\n            downloadDetailInImageStores.put(\"downloadPercent\", Integer.toString(templateInStore.getDownloadPercent()));\n            downloadDetailInImageStores.put(\"downloadState\", (templateInStore.getDownloadState() != null ? templateInStore.getDownloadState().toString() : \"\"));\n            downloadProgressDetails.add(downloadDetailInImageStores);\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setDownloadProgress(downloadProgressDetails);\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (detailsView.contains(ApiConstants.DomainDetails.all)) {\n            Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n            templateResponse.setDetails(details);\n\n            setDeployAsIsDetails(template, templateResponse);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setDeployAsIs(template.isDeployAsIs());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":8,"curCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":451,"groupId":"14488","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"createQuotaEmailResponse","params":"(QuotaEmailTemplatesVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0f/bf50e9a8f96e00e151e4e2434f4d609eb261ab.src","preCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","realPath":"plugins/database/quota/src/main/java/org/apache/cloudstack/api/response/QuotaResponseBuilderImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"N"}],"commitId":"6de8e012e84ec228aac33ebdee7969ca24233b93","commitMessage":"@@@Merge remote-tracking branch 'origin/4.14'\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2020-10-28 18:26:14","modifiedFileCount":"4","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-02-24 20:09:12","commitOrder":9,"curCode":"    public TemplateResponse newTemplateResponse(EnumSet<ApiConstants.DomainDetails> detailsView, ResponseView view, TemplateJoinVO template) {\n        List<TemplateDataStoreVO> templatesInStore = _templateStoreDao.listByTemplateNotBypassed(template.getId());\n        List<Map<String, String>> downloadProgressDetails = new ArrayList();\n        HashMap<String, String> downloadDetailInImageStores = null;\n        for (TemplateDataStoreVO templateInStore : templatesInStore) {\n            downloadDetailInImageStores = new HashMap<>();\n            ImageStoreVO datastore = dataStoreDao.findById(templateInStore.getDataStoreId());\n            if (datastore != null) {\n                downloadDetailInImageStores.put(\"datastore\", datastore.getName());\n                downloadDetailInImageStores.put(\"downloadPercent\", Integer.toString(templateInStore.getDownloadPercent()));\n                downloadDetailInImageStores.put(\"downloadState\", (templateInStore.getDownloadState() != null ? templateInStore.getDownloadState().toString() : \"\"));\n                downloadProgressDetails.add(downloadDetailInImageStores);\n            }\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setDownloadProgress(downloadProgressDetails);\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n            templateResponse.setUrl(template.getUrl());\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (detailsView.contains(ApiConstants.DomainDetails.all)) {\n            Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n            templateResponse.setDetails(details);\n\n            setDeployAsIsDetails(template, templateResponse);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setDeployAsIs(template.isDeployAsIs());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","date":"2021-02-24 20:09:12","endLine":282,"groupId":"10797","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"newTemplateResponse","params":"(EnumSet<ApiConstants.DomainDetails>detailsView@ResponseViewview@TemplateJoinVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a9/a971cb3417bdc54e8114775c7ef82aae44753f.src","preCode":"    public TemplateResponse newTemplateResponse(EnumSet<ApiConstants.DomainDetails> detailsView, ResponseView view, TemplateJoinVO template) {\n        List<TemplateDataStoreVO> templatesInStore = _templateStoreDao.listByTemplateNotBypassed(template.getId());\n        List<Map<String, String>> downloadProgressDetails = new ArrayList();\n        HashMap<String, String> downloadDetailInImageStores = null;\n        for (TemplateDataStoreVO templateInStore : templatesInStore) {\n            downloadDetailInImageStores = new HashMap<>();\n            downloadDetailInImageStores.put(\"datastore\", dataStoreDao.findById(templateInStore.getDataStoreId()).getName());\n            downloadDetailInImageStores.put(\"downloadPercent\", Integer.toString(templateInStore.getDownloadPercent()));\n            downloadDetailInImageStores.put(\"downloadState\", (templateInStore.getDownloadState() != null ? templateInStore.getDownloadState().toString() : \"\"));\n            downloadProgressDetails.add(downloadDetailInImageStores);\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setDownloadProgress(downloadProgressDetails);\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n            templateResponse.setUrl(template.getUrl());\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (detailsView.contains(ApiConstants.DomainDetails.all)) {\n            Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n            templateResponse.setDetails(details);\n\n            setDeployAsIsDetails(template, templateResponse);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setDeployAsIs(template.isDeployAsIs());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":9,"curCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":451,"groupId":"14488","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"createQuotaEmailResponse","params":"(QuotaEmailTemplatesVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0f/bf50e9a8f96e00e151e4e2434f4d609eb261ab.src","preCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","realPath":"plugins/database/quota/src/main/java/org/apache/cloudstack/api/response/QuotaResponseBuilderImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"N"}],"commitId":"1d8a4978e9136094b929ddd70d99241cf8abac92","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2021-02-24 20:09:12","modifiedFileCount":"4","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-09-02 18:43:33","commitOrder":10,"curCode":"    public TemplateResponse newTemplateResponse(EnumSet<ApiConstants.DomainDetails> detailsView, ResponseView view, TemplateJoinVO template) {\n        List<ImageStoreVO> storesInZone = dataStoreDao.listStoresByZoneId(template.getDataCenterId());\n        Long[] storeIds = storesInZone.stream().map(ImageStoreVO::getId).toArray(Long[]::new);\n        List<TemplateDataStoreVO> templatesInStore = _templateStoreDao.listByTemplateNotBypassed(template.getId(), storeIds);\n        List<Map<String, String>> downloadProgressDetails = new ArrayList();\n        HashMap<String, String> downloadDetailInImageStores = null;\n        for (TemplateDataStoreVO templateInStore : templatesInStore) {\n            downloadDetailInImageStores = new HashMap<>();\n            ImageStoreVO datastore = dataStoreDao.findById(templateInStore.getDataStoreId());\n            if (datastore != null) {\n                downloadDetailInImageStores.put(\"datastore\", datastore.getName());\n                downloadDetailInImageStores.put(\"downloadPercent\", Integer.toString(templateInStore.getDownloadPercent()));\n                downloadDetailInImageStores.put(\"downloadState\", (templateInStore.getDownloadState() != null ? templateInStore.getDownloadState().toString() : \"\"));\n                downloadProgressDetails.add(downloadDetailInImageStores);\n            }\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setDownloadProgress(downloadProgressDetails);\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n            templateResponse.setUrl(template.getUrl());\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (detailsView.contains(ApiConstants.DomainDetails.all)) {\n            Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n            templateResponse.setDetails(details);\n\n            setDeployAsIsDetails(template, templateResponse);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setDeployAsIs(template.isDeployAsIs());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","date":"2021-09-02 18:43:33","endLine":283,"groupId":"10797","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"newTemplateResponse","params":"(EnumSet<ApiConstants.DomainDetails>detailsView@ResponseViewview@TemplateJoinVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d0/a7dfe275ef3683a0c0f9e80ca6c6c5e1527b2a.src","preCode":"    public TemplateResponse newTemplateResponse(EnumSet<ApiConstants.DomainDetails> detailsView, ResponseView view, TemplateJoinVO template) {\n        List<TemplateDataStoreVO> templatesInStore = _templateStoreDao.listByTemplateNotBypassed(template.getId());\n        List<Map<String, String>> downloadProgressDetails = new ArrayList();\n        HashMap<String, String> downloadDetailInImageStores = null;\n        for (TemplateDataStoreVO templateInStore : templatesInStore) {\n            downloadDetailInImageStores = new HashMap<>();\n            ImageStoreVO datastore = dataStoreDao.findById(templateInStore.getDataStoreId());\n            if (datastore != null) {\n                downloadDetailInImageStores.put(\"datastore\", datastore.getName());\n                downloadDetailInImageStores.put(\"downloadPercent\", Integer.toString(templateInStore.getDownloadPercent()));\n                downloadDetailInImageStores.put(\"downloadState\", (templateInStore.getDownloadState() != null ? templateInStore.getDownloadState().toString() : \"\"));\n                downloadProgressDetails.add(downloadDetailInImageStores);\n            }\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setDownloadProgress(downloadProgressDetails);\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n            templateResponse.setUrl(template.getUrl());\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (detailsView.contains(ApiConstants.DomainDetails.all)) {\n            Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n            templateResponse.setDetails(details);\n\n            setDeployAsIsDetails(template, templateResponse);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setDeployAsIs(template.isDeployAsIs());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":10,"curCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":451,"groupId":"14488","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"createQuotaEmailResponse","params":"(QuotaEmailTemplatesVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0f/bf50e9a8f96e00e151e4e2434f4d609eb261ab.src","preCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","realPath":"plugins/database/quota/src/main/java/org/apache/cloudstack/api/response/QuotaResponseBuilderImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"N"}],"commitId":"56f4da6dce8aefc106c4697d9fbbfe47755336ca","commitMessage":"@@@Merge remote-tracking branch 'apache/4.15' into main\n","date":"2021-09-02 18:43:33","modifiedFileCount":"15","status":"M","submitter":"Abhishek Kumar"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-09-08 12:44:06","commitOrder":11,"curCode":"    public TemplateResponse newTemplateResponse(EnumSet<ApiConstants.DomainDetails> detailsView, ResponseView view, TemplateJoinVO template) {\n        List<ImageStoreVO> storesInZone = dataStoreDao.listStoresByZoneId(template.getDataCenterId());\n        Long[] storeIds = storesInZone.stream().map(ImageStoreVO::getId).toArray(Long[]::new);\n        List<TemplateDataStoreVO> templatesInStore = _templateStoreDao.listByTemplateNotBypassed(template.getId(), storeIds);\n        List<Map<String, String>> downloadProgressDetails = new ArrayList();\n        HashMap<String, String> downloadDetailInImageStores = null;\n        for (TemplateDataStoreVO templateInStore : templatesInStore) {\n            downloadDetailInImageStores = new HashMap<>();\n            ImageStoreVO datastore = dataStoreDao.findById(templateInStore.getDataStoreId());\n            if (datastore != null) {\n                downloadDetailInImageStores.put(\"datastore\", datastore.getName());\n                downloadDetailInImageStores.put(\"downloadPercent\", Integer.toString(templateInStore.getDownloadPercent()));\n                downloadDetailInImageStores.put(\"downloadState\", (templateInStore.getDownloadState() != null ? templateInStore.getDownloadState().toString() : \"\"));\n                downloadProgressDetails.add(downloadDetailInImageStores);\n            }\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setDownloadProgress(downloadProgressDetails);\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n            templateResponse.setUrl(template.getUrl());\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (detailsView.contains(ApiConstants.DomainDetails.all)) {\n            Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n            templateResponse.setDetails(details);\n\n            setDeployAsIsDetails(template, templateResponse);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setHasAnnotation(annotationDao.hasAnnotations(template.getUuid(), AnnotationService.EntityType.TEMPLATE.name(),\n                _accountService.isRootAdmin(CallContext.current().getCallingAccount().getId())));\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setDeployAsIs(template.isDeployAsIs());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","date":"2021-09-08 12:44:06","endLine":295,"groupId":"101488","id":21,"instanceNumber":1,"isCurCommit":1,"methodName":"newTemplateResponse","params":"(EnumSet<ApiConstants.DomainDetails>detailsView@ResponseViewview@TemplateJoinVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/15/d02ce4997fac809f758044adb1480becad94fd.src","preCode":"    public TemplateResponse newTemplateResponse(EnumSet<ApiConstants.DomainDetails> detailsView, ResponseView view, TemplateJoinVO template) {\n        List<ImageStoreVO> storesInZone = dataStoreDao.listStoresByZoneId(template.getDataCenterId());\n        Long[] storeIds = storesInZone.stream().map(ImageStoreVO::getId).toArray(Long[]::new);\n        List<TemplateDataStoreVO> templatesInStore = _templateStoreDao.listByTemplateNotBypassed(template.getId(), storeIds);\n        List<Map<String, String>> downloadProgressDetails = new ArrayList();\n        HashMap<String, String> downloadDetailInImageStores = null;\n        for (TemplateDataStoreVO templateInStore : templatesInStore) {\n            downloadDetailInImageStores = new HashMap<>();\n            ImageStoreVO datastore = dataStoreDao.findById(templateInStore.getDataStoreId());\n            if (datastore != null) {\n                downloadDetailInImageStores.put(\"datastore\", datastore.getName());\n                downloadDetailInImageStores.put(\"downloadPercent\", Integer.toString(templateInStore.getDownloadPercent()));\n                downloadDetailInImageStores.put(\"downloadState\", (templateInStore.getDownloadState() != null ? templateInStore.getDownloadState().toString() : \"\"));\n                downloadProgressDetails.add(downloadDetailInImageStores);\n            }\n        }\n\n        TemplateResponse templateResponse = new TemplateResponse();\n        templateResponse.setDownloadProgress(downloadProgressDetails);\n        templateResponse.setId(template.getUuid());\n        templateResponse.setName(template.getName());\n        templateResponse.setDisplayText(template.getDisplayText());\n        templateResponse.setPublic(template.isPublicTemplate());\n        templateResponse.setCreated(template.getCreatedOnStore());\n        if (template.getFormat() == Storage.ImageFormat.BAREMETAL) {\n            \r\n            templateResponse.setReady(true);\n        } else {\n            templateResponse.setReady(template.getState() == ObjectInDataStoreStateMachine.State.Ready);\n        }\n        templateResponse.setFeatured(template.isFeatured());\n        templateResponse.setExtractable(template.isExtractable() && !(template.getTemplateType() == TemplateType.SYSTEM));\n        templateResponse.setPasswordEnabled(template.isEnablePassword());\n        templateResponse.setDynamicallyScalable(template.isDynamicallyScalable());\n        templateResponse.setSshKeyEnabled(template.isEnableSshKey());\n        templateResponse.setCrossZones(template.isCrossZones());\n        templateResponse.setFormat(template.getFormat());\n        if (template.getTemplateType() != null) {\n            templateResponse.setTemplateType(template.getTemplateType().toString());\n        }\n\n        templateResponse.setHypervisor(template.getHypervisorType().toString());\n\n        templateResponse.setOsTypeId(template.getGuestOSUuid());\n        templateResponse.setOsTypeName(template.getGuestOSName());\n\n        \r\n        ApiResponseHelper.populateOwner(templateResponse, template);\n\n        \r\n        templateResponse.setDomainId(template.getDomainUuid());\n        templateResponse.setDomainName(template.getDomainName());\n\n        \r\n        if (view == ResponseView.Full ||\n                template.getAccountId() == CallContext.current().getCallingAccount().getId() ||\n                template.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {\n            String templateStatus = getTemplateStatus(template);\n            if (templateStatus != null) {\n                templateResponse.setStatus(templateStatus);\n            }\n            templateResponse.setUrl(template.getUrl());\n        }\n\n        if (template.getDataCenterId() > 0) {\n            templateResponse.setZoneId(template.getDataCenterUuid());\n            templateResponse.setZoneName(template.getDataCenterName());\n        }\n\n        Long templateSize = template.getSize();\n        if (templateSize > 0) {\n            templateResponse.setSize(templateSize);\n        }\n\n        Long templatePhysicalSize = template.getPhysicalSize();\n        if (templatePhysicalSize > 0) {\n            templateResponse.setPhysicalSize(templatePhysicalSize);\n        }\n\n        templateResponse.setChecksum(DigestHelper.getHashValueFromChecksumValue(template.getChecksum()));\n        if (template.getSourceTemplateId() != null) {\n            templateResponse.setSourceTemplateId(template.getSourceTemplateUuid());\n        }\n        templateResponse.setTemplateTag(template.getTemplateTag());\n\n        if (template.getParentTemplateId() != null) {\n            templateResponse.setParentTemplateId(template.getParentTemplateUuid());\n        }\n\n        \r\n        if (detailsView.contains(ApiConstants.DomainDetails.all)) {\n            Map<String, String> details = _templateDetailsDao.listDetailsKeyPairs(template.getId());\n            templateResponse.setDetails(details);\n\n            setDeployAsIsDetails(template, templateResponse);\n        }\n\n        \r\n        long tag_id = template.getTagId();\n        if (tag_id > 0) {\n            addTagInformation(template, templateResponse);\n        }\n\n        templateResponse.setDirectDownload(template.isDirectDownload());\n        templateResponse.setDeployAsIs(template.isDeployAsIs());\n        templateResponse.setRequiresHvm(template.isRequiresHvm());\n\n        \r\n        Set<ChildTemplateResponse> childTemplatesSet = new HashSet<ChildTemplateResponse>();\n        if (template.getHypervisorType() == HypervisorType.VMware) {\n            List<VMTemplateVO> childTemplates = _vmTemplateDao.listByParentTemplatetId(template.getId());\n            for (VMTemplateVO tmpl : childTemplates) {\n                if (tmpl.getTemplateType() != TemplateType.ISODISK) {\n                    ChildTemplateResponse childTempl = new ChildTemplateResponse();\n                    childTempl.setId(tmpl.getUuid());\n                    childTempl.setName(tmpl.getName());\n                    childTempl.setSize(Math.round(tmpl.getSize() / (1024 * 1024 * 1024)));\n                    childTemplatesSet.add(childTempl);\n                }\n            }\n            templateResponse.setChildTemplates(childTemplatesSet);\n        }\n\n        templateResponse.setObjectName(\"template\");\n        return templateResponse;\n    }\n","realPath":"server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":11,"curCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","date":"2018-01-20 05:49:27","endLine":451,"groupId":"101488","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"createQuotaEmailResponse","params":"(QuotaEmailTemplatesVOtemplate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0f/bf50e9a8f96e00e151e4e2434f4d609eb261ab.src","preCode":"    private QuotaEmailTemplateResponse createQuotaEmailResponse(QuotaEmailTemplatesVO template) {\n        QuotaEmailTemplateResponse response = new QuotaEmailTemplateResponse();\n        response.setTemplateType(template.getTemplateName());\n        response.setTemplateSubject(template.getTemplateSubject());\n        response.setTemplateText(template.getTemplateBody());\n        response.setLocale(template.getLocale());\n        response.setLastUpdatedOn(template.getLastUpdated());\n        return response;\n    }\n","realPath":"plugins/database/quota/src/main/java/org/apache/cloudstack/api/response/QuotaResponseBuilderImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":443,"status":"N"}],"commitId":"413d10dd8106af9b3c369c1a393fbcca5e7217ce","commitMessage":"@@@server: Extend the Annotations framework (#5103)\n\n* Extend addAnnotation and listAnnotations APIs\n\n* Allow users to add.  list and remove comments\n\n* Add adminsonly UI and allow admins or owners to remove comments\n\n* New annotations tab\n\n* In progress: new comments section\n\n* Address review comments\n\n* Fix\n\n* Fix annotationfilter and comments section\n\n* Add keyword and delete action\n\n* Fix and rename annotations tab\n\n* Update annotation visibility API and update comments table accordingly\n\n* Allow users seeing all the comments for their owned resources\n\n* Extend comments for volumes and snapshots\n\n* Extend comments to multiple entities\n\n* Add uuid to ssh keypairs\n\n* SSH keypair UI refactor\n\n* Extend comments to the infrastructure entities\n\n* Add missing entities\n\n* Fix upgrade version for ssh keypairs\n\n* Fix typo on DB upgrade schema\n\n* Fix annotations table columns when there is no data\n\n* Extend the list view of items showing they if they have comments\n\n* Remove extra test\n\n* Add annotation permissions\n\n* Address review comments\n\n* Extend marvin tests for annotations\n\n* updating ui stuff\n\n* addition to toggle visibility\n\n* Fix pagination on comments section\n\n* Extend to kubernetes clusters\n\n* Fixes after last review\n\n* Change default value for adminsonly column\n\n* Remove the required field for the annotationfilter parameter\n\n* Small fixes on visibility and other fixes\n\n* Cleanup to reduce files changed\n\n* Rollback extra line\n\n* Address review comments\n\n* Fix cleanup error on smoke test\n\n* Fix sending incorrect parameter to checkPermissions method\n\n* Add check domain access for the calling account for domain networks\n\n* Fix only display annotations icon if there are comments the user can see\n\n* Simply change the Save button label to Submit\n\n* Change order of the Tools menu to provent users getting 404 error on clicking the text instead of expanding\n\n* Remove comments when removing entities\n\n* Address review comments on marvin tests\n\n* Allow users to list annotations for an entity ID\n\n* Allow users to see all comments for allowed entities\n\n* Fix search filters\n\n* Remove username from search filter\n\n* Add pagination to the annotations tab\n\n* Display username for user comments\n\n* Fix add permissions for domain and resource admins\n\n* Fix for domain admins\n\n* Trivial but important UI fix\n\n* Replace pagination for annotations tab\n\n* Add confirmation for delete comment\n\n* Lint warnings\n\n* Fix reduced list as domain admin\n\n* Fix display remove comment button for non admins\n\n* Improve display remove action button\n\n* Remove unused parameter on groupShow\n\n* Include a clock icon to the all comments filter except for root admin\n\n* Move cleanup SQL to the correct file after rebasing main\n\nCo-authored-by: davidjumani <dj.davidjumani1994@gmail.com>","date":"2021-09-08 12:44:06","modifiedFileCount":"109","status":"M","submitter":"Nicolas Vazquez"}]
