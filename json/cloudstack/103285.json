[{"authorTime":"2019-07-25 14:43:39","codes":[{"authorDate":"2019-07-25 14:43:39","commitOrder":1,"curCode":"    public void createControlNetwork(String privBrName)  {\n        deleteExistingLinkLocalRouteTable(privBrName);\n        if (!isExistingBridge(privBrName)) {\n            Script.runSimpleBashScript(\"ip link add name \" + privBrName + \" type bridge\");\n            Script.runSimpleBashScript(\"ip link set \" + privBrName + \" up\");\n            Script.runSimpleBashScript(\"ip address add \" + NetUtils.getLinkLocalAddressFromCIDR(_controlCidr) + \" dev \" + privBrName);\n        }\n    }\n","date":"2019-07-25 14:43:39","endLine":428,"groupId":"11836","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createControlNetwork","params":"(StringprivBrName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d7/bb763d54e45833213fd89f3cf2bbb263c9a524.src","preCode":"    public void createControlNetwork(String privBrName)  {\n        deleteExistingLinkLocalRouteTable(privBrName);\n        if (!isExistingBridge(privBrName)) {\n            Script.runSimpleBashScript(\"ip link add name \" + privBrName + \" type bridge\");\n            Script.runSimpleBashScript(\"ip link set \" + privBrName + \" up\");\n            Script.runSimpleBashScript(\"ip address add \" + NetUtils.getLinkLocalAddressFromCIDR(_controlCidr) + \" dev \" + privBrName);\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/BridgeVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":421,"status":"B"},{"authorDate":"2019-07-25 14:43:39","commitOrder":1,"curCode":"    public void createControlNetwork(String privBrName) {\n        deleteExitingLinkLocalRouteTable(privBrName);\n        if (!isBridgeExists(privBrName)) {\n            Script.runSimpleBashScript(\"brctl addbr \" + privBrName + \"; ip link set \" + privBrName + \" up\");\n            Script.runSimpleBashScript(\"ip address add \" + NetUtils.getLinkLocalAddressFromCIDR(_controlCidr) + \" dev \" + privBrName, _timeout);\n        }\n    }\n","date":"2019-07-25 14:43:39","endLine":288,"groupId":"11836","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createControlNetwork","params":"(StringprivBrName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/85/7a360616cba2edc4ad7acb2e5d797e91f260aa.src","preCode":"    public void createControlNetwork(String privBrName) {\n        deleteExitingLinkLocalRouteTable(privBrName);\n        if (!isBridgeExists(privBrName)) {\n            Script.runSimpleBashScript(\"brctl addbr \" + privBrName + \"; ip link set \" + privBrName + \" up\");\n            Script.runSimpleBashScript(\"ip address add \" + NetUtils.getLinkLocalAddressFromCIDR(_controlCidr) + \" dev \" + privBrName, _timeout);\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/IvsVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"B"}],"commitId":"e894658f8c3584f572a5e6c5fe292a2bae03c79c","commitMessage":"@@@kvm: Allow Link Local Cidr (cloud0 interface) to be configured (#3500)\n\nThere are certain scenarios where the 169.254.0.0/16 subnet is used for different\npurposes then CloudStack on a hypervisor.\n\nOnce of such scenarios is a BGP+EVPN+VXLAN setup using BGP Unnumbered where the\n169.254.0.1 address is used by Frr/Zebra BGP routing to send traffic to the\nneighboring router.\n\nThe following settings can be changed in the agent.properties (default values added):\n\ncontrol.cidr=169.254.0.0/16\n\nMake sure the global setting 'control.cidr' matches the values defined in the agent.propeties!\n\nIn the future the mgmt server can send this parameter to a KVM Agent on startup.  but at the moment\nthis framework is not in place and thus these values can't be send to the Agent in a proper manner.\n\nSigned-off-by: Wido den Hollander <wido@widodh.nl>","date":"2019-07-25 14:43:39","modifiedFileCount":"9","status":"B","submitter":"Wido den Hollander"},{"authorTime":"2019-11-12 00:21:46","codes":[{"authorDate":"2019-07-25 14:43:39","commitOrder":2,"curCode":"    public void createControlNetwork(String privBrName)  {\n        deleteExistingLinkLocalRouteTable(privBrName);\n        if (!isExistingBridge(privBrName)) {\n            Script.runSimpleBashScript(\"ip link add name \" + privBrName + \" type bridge\");\n            Script.runSimpleBashScript(\"ip link set \" + privBrName + \" up\");\n            Script.runSimpleBashScript(\"ip address add \" + NetUtils.getLinkLocalAddressFromCIDR(_controlCidr) + \" dev \" + privBrName);\n        }\n    }\n","date":"2019-07-25 14:43:39","endLine":428,"groupId":"103285","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createControlNetwork","params":"(StringprivBrName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d7/bb763d54e45833213fd89f3cf2bbb263c9a524.src","preCode":"    public void createControlNetwork(String privBrName)  {\n        deleteExistingLinkLocalRouteTable(privBrName);\n        if (!isExistingBridge(privBrName)) {\n            Script.runSimpleBashScript(\"ip link add name \" + privBrName + \" type bridge\");\n            Script.runSimpleBashScript(\"ip link set \" + privBrName + \" up\");\n            Script.runSimpleBashScript(\"ip address add \" + NetUtils.getLinkLocalAddressFromCIDR(_controlCidr) + \" dev \" + privBrName);\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/BridgeVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":421,"status":"N"},{"authorDate":"2019-11-12 00:21:46","commitOrder":2,"curCode":"    public void createControlNetwork(String privBrName) {\n        deleteExitingLinkLocalRouteTable(privBrName);\n        if (!isBridgeExists(privBrName)) {\n            Script.runSimpleBashScript(\"ip link add \" + privBrName + \" type bridge; ip link set \" + privBrName + \" up\");\n            Script.runSimpleBashScript(\"ip address add \" + NetUtils.getLinkLocalAddressFromCIDR(_controlCidr) + \" dev \" + privBrName, _timeout);\n        }\n    }\n","date":"2019-11-12 00:21:46","endLine":288,"groupId":"103285","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createControlNetwork","params":"(StringprivBrName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5f/7066a7a40d7ec11d18b534f07776c44ae92a55.src","preCode":"    public void createControlNetwork(String privBrName) {\n        deleteExitingLinkLocalRouteTable(privBrName);\n        if (!isBridgeExists(privBrName)) {\n            Script.runSimpleBashScript(\"brctl addbr \" + privBrName + \"; ip link set \" + privBrName + \" up\");\n            Script.runSimpleBashScript(\"ip address add \" + NetUtils.getLinkLocalAddressFromCIDR(_controlCidr) + \" dev \" + privBrName, _timeout);\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/IvsVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"M"}],"commitId":"4d7e95ec04b7b0a6ef3cc4edbdaee3f113fbb7be","commitMessage":"@@@kvm: Use 'ip' instead of 'brctl' (#3623)\n\n* kvm: Use 'ip' instead of 'brctl'\n\nThe command 'brctl' is deprecated and should no longer be used.\n\niproute2 supports all the features we need and therefor we should use\nthis instead of the old commands.\n\nFeature wise this does not change anything. It just makes the code more\nrobust towards the future.\n\nSigned-off-by: Wido den Hollander <wido@widodh.nl>\n\n* kvm/modifyvlan: Use 'ip' instead of 'brctl'\n\nbrctl is deprecated and by using iproute2 we are future-proof\n\nSigned-off-by: Wido den Hollander <wido@widodh.nl>\n","date":"2019-11-12 00:21:46","modifiedFileCount":"2","status":"M","submitter":"Wido den Hollander"}]
