[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected boolean canHandle(NetworkOffering offering, final NetworkType networkType, final PhysicalNetwork physicalNetwork) {\n        \r\n        \r\n        if (networkType == NetworkType.Advanced && isMyTrafficType(offering.getTrafficType())\n                && (offering.getGuestType() == Network.GuestType.Isolated || offering.getGuestType() == GuestType.L2)\n                && isMyIsolationMethod(physicalNetwork) && !offering.isSystemOnly()) {\n            return true;\n        } else {\n            s_logger.trace(\"We only take care of Guest networks of type   \" + GuestType.Isolated + \" in zone of type \" + NetworkType.Advanced);\n            return false;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":102,"groupId":"20298","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"canHandle","params":"(NetworkOfferingoffering@finalNetworkTypenetworkType@finalPhysicalNetworkphysicalNetwork)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/69/08a105fe7890b888fb804b94710f4aeb517e2a.src","preCode":"    protected boolean canHandle(NetworkOffering offering, final NetworkType networkType, final PhysicalNetwork physicalNetwork) {\n        \r\n        \r\n        if (networkType == NetworkType.Advanced && isMyTrafficType(offering.getTrafficType())\n                && (offering.getGuestType() == Network.GuestType.Isolated || offering.getGuestType() == GuestType.L2)\n                && isMyIsolationMethod(physicalNetwork) && !offering.isSystemOnly()) {\n            return true;\n        } else {\n            s_logger.trace(\"We only take care of Guest networks of type   \" + GuestType.Isolated + \" in zone of type \" + NetworkType.Advanced);\n            return false;\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/network/guru/ExternalGuestNetworkGuru.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected boolean canHandle(NetworkOffering offering, final NetworkType networkType, final PhysicalNetwork physicalNetwork) {\n        \r\n        if (networkType == NetworkType.Advanced && isMyTrafficType(offering.getTrafficType()) && offering.getGuestType() == Network.GuestType.Isolated &&\n            isMyIsolationMethod(physicalNetwork)) {\n            return true;\n        } else {\n            s_logger.trace(\"We only take care of Guest networks of type   \" + GuestType.Isolated + \" in zone of type \" + NetworkType.Advanced);\n            return false;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":65,"groupId":"7758","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"canHandle","params":"(NetworkOfferingoffering@finalNetworkTypenetworkType@finalPhysicalNetworkphysicalNetwork)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c0/65bd191d0e6a2c6850f07662dfdac9c5b4c08e.src","preCode":"    protected boolean canHandle(NetworkOffering offering, final NetworkType networkType, final PhysicalNetwork physicalNetwork) {\n        \r\n        if (networkType == NetworkType.Advanced && isMyTrafficType(offering.getTrafficType()) && offering.getGuestType() == Network.GuestType.Isolated &&\n            isMyIsolationMethod(physicalNetwork)) {\n            return true;\n        } else {\n            s_logger.trace(\"We only take care of Guest networks of type   \" + GuestType.Isolated + \" in zone of type \" + NetworkType.Advanced);\n            return false;\n        }\n    }\n","realPath":"plugins/network-elements/vxlan/src/main/java/com/cloud/network/guru/VxlanGuestNetworkGuru.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-03-08 19:19:59","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    protected boolean canHandle(NetworkOffering offering, final NetworkType networkType, final PhysicalNetwork physicalNetwork) {\n        \r\n        \r\n        if (networkType == NetworkType.Advanced && isMyTrafficType(offering.getTrafficType())\n                && (offering.getGuestType() == Network.GuestType.Isolated || offering.getGuestType() == GuestType.L2)\n                && isMyIsolationMethod(physicalNetwork) && !offering.isSystemOnly()) {\n            return true;\n        } else {\n            s_logger.trace(\"We only take care of Guest networks of type   \" + GuestType.Isolated + \" in zone of type \" + NetworkType.Advanced);\n            return false;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":102,"groupId":"101614","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"canHandle","params":"(NetworkOfferingoffering@finalNetworkTypenetworkType@finalPhysicalNetworkphysicalNetwork)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/69/08a105fe7890b888fb804b94710f4aeb517e2a.src","preCode":"    protected boolean canHandle(NetworkOffering offering, final NetworkType networkType, final PhysicalNetwork physicalNetwork) {\n        \r\n        \r\n        if (networkType == NetworkType.Advanced && isMyTrafficType(offering.getTrafficType())\n                && (offering.getGuestType() == Network.GuestType.Isolated || offering.getGuestType() == GuestType.L2)\n                && isMyIsolationMethod(physicalNetwork) && !offering.isSystemOnly()) {\n            return true;\n        } else {\n            s_logger.trace(\"We only take care of Guest networks of type   \" + GuestType.Isolated + \" in zone of type \" + NetworkType.Advanced);\n            return false;\n        }\n    }\n","realPath":"server/src/main/java/com/cloud/network/guru/ExternalGuestNetworkGuru.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"},{"authorDate":"2018-03-08 19:19:59","commitOrder":2,"curCode":"    protected boolean canHandle(NetworkOffering offering, final NetworkType networkType, final PhysicalNetwork physicalNetwork) {\n        \r\n        if (networkType == NetworkType.Advanced && isMyTrafficType(offering.getTrafficType()) &&\n                (offering.getGuestType() == Network.GuestType.Isolated || offering.getGuestType() == Network.GuestType.L2) &&\n                isMyIsolationMethod(physicalNetwork)) {\n            return true;\n        } else {\n            s_logger.trace(\"We only take care of Guest networks of type   \" + GuestType.Isolated + \" or \" + GuestType.L2 + \" in zone of type \" + NetworkType.Advanced);\n            return false;\n        }\n    }\n","date":"2018-03-08 19:19:59","endLine":66,"groupId":"101614","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"canHandle","params":"(NetworkOfferingoffering@finalNetworkTypenetworkType@finalPhysicalNetworkphysicalNetwork)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/35/f588fd567ab0234a59c57931fb692c0506e4ef.src","preCode":"    protected boolean canHandle(NetworkOffering offering, final NetworkType networkType, final PhysicalNetwork physicalNetwork) {\n        \r\n        if (networkType == NetworkType.Advanced && isMyTrafficType(offering.getTrafficType()) && offering.getGuestType() == Network.GuestType.Isolated &&\n            isMyIsolationMethod(physicalNetwork)) {\n            return true;\n        } else {\n            s_logger.trace(\"We only take care of Guest networks of type   \" + GuestType.Isolated + \" in zone of type \" + NetworkType.Advanced);\n            return false;\n        }\n    }\n","realPath":"plugins/network-elements/vxlan/src/main/java/com/cloud/network/guru/VxlanGuestNetworkGuru.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"68251e844069a1f8f77ef831d0f6b1f1bda3f3d5","commitMessage":"@@@Merge branch '4.11'\n","date":"2018-03-08 19:19:59","modifiedFileCount":"1","status":"M","submitter":"Rohit Yadav"}]
