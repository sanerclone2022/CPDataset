[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testCreateVMFromSpecWithTopology6() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 12;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","date":"2018-01-20 05:49:27","endLine":252,"groupId":"11725","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateVMFromSpecWithTopology6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2f/d7692df58eba74eb0aa325e4562be65e6cf043.src","preCode":"    public void testCreateVMFromSpecWithTopology6() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 12;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testCreateVMFromSpecWithTopology4() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 8;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","date":"2018-01-20 05:49:27","endLine":282,"groupId":"11725","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateVMFromSpecWithTopology4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/2f/d7692df58eba74eb0aa325e4562be65e6cf043.src","preCode":"    public void testCreateVMFromSpecWithTopology4() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 8;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-12-07 04:29:00","codes":[{"authorDate":"2018-12-07 04:29:00","commitOrder":2,"curCode":"    public void testCreateVMFromSpecWithTopology6() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 12;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        lcr._qemuSocketsPath = new File(\"/var/run/qemu\");\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","date":"2018-12-07 04:29:00","endLine":267,"groupId":"9972","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateVMFromSpecWithTopology6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c2/396e81c17dd31c56be620b72c43a73192b5415.src","preCode":"    public void testCreateVMFromSpecWithTopology6() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 12;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"},{"authorDate":"2018-12-07 04:29:00","commitOrder":2,"curCode":"    public void testCreateVMFromSpecWithTopology4() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 8;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        lcr._qemuSocketsPath = new File(\"/var/run/qemu\");\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","date":"2018-12-07 04:29:00","endLine":299,"groupId":"9972","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateVMFromSpecWithTopology4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c2/396e81c17dd31c56be620b72c43a73192b5415.src","preCode":"    public void testCreateVMFromSpecWithTopology4() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 8;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"M"}],"commitId":"9dce8a5dea508a69d31dd4159c566fdf119c223e","commitMessage":"@@@kvm: Added two more device name patterns to valid bridge slaves (lo* and dummy*) (#3000)\n\nAdded dummy and lo devices to be treated as a normal bridge slave devs.\nFixes #2998  \nAdded two more device names (lo* and dummy*). Implemented tests. Code was refactored.\nImproved paths concatenation code from \"+\" to Paths.get.","date":"2018-12-07 04:29:00","modifiedFileCount":"3","status":"M","submitter":"Bitworks LLC"},{"authorTime":"2018-12-07 04:29:00","codes":[{"authorDate":"2019-11-12 00:31:05","commitOrder":3,"curCode":"    public void testCreateVMFromSpecWithTopology6() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 12;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        lcr._qemuSocketsPath = new File(\"/var/run/qemu\");\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setArch(\"x86_64\");\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","date":"2019-11-12 00:31:05","endLine":286,"groupId":"9972","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateVMFromSpecWithTopology6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/58/d5ee64f63b4e27a0ca73e45f7daf278f2ae93b.src","preCode":"    public void testCreateVMFromSpecWithTopology6() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 12;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        lcr._qemuSocketsPath = new File(\"/var/run/qemu\");\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"},{"authorDate":"2018-12-07 04:29:00","commitOrder":3,"curCode":"    public void testCreateVMFromSpecWithTopology4() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 8;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        lcr._qemuSocketsPath = new File(\"/var/run/qemu\");\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","date":"2018-12-07 04:29:00","endLine":299,"groupId":"9972","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateVMFromSpecWithTopology4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c2/396e81c17dd31c56be620b72c43a73192b5415.src","preCode":"    public void testCreateVMFromSpecWithTopology4() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 8;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        lcr._qemuSocketsPath = new File(\"/var/run/qemu\");\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"N"}],"commitId":"524b995083653bac1ceec334b6193500c0d3b906","commitMessage":"@@@IoT/ARM64 support: allow cloudstack-agent on Raspberry Pi 4 (armv8) to use kvm acceleration (#3644)\n\nKVM is supported on arm64 Linux (https://www.linux-kvm.org/page/Processor_support#ARM:).\nFor a small (IoT) platform such as the new Raspberry Pi 4 that uses armv8 processor\n(cortex-a72) it's possible to run Linux host with `/dev/kvm`\naccleration. This adds support for IoT IaaS in CloudStack.\n\nThis PR is from a fun weekend project where:\n- I set up a Raspberry Pi 4 - 4GB RAM model with 4 CPU cores @ 1.5Ghz.  128GB SD samsung evo plus card\n- Installed Ubuntu 19.10 raspi3 base image: http://cdimage.ubuntu.com/releases/19.10/release/ubuntu-19.10-preinstalled-server-arm64+raspi3.img.xz\n- Build a custom Linux 5.3 kernel with KVM enabled.  deb here: http://dl.rohityadav.cloud/cloudstack-rpi/kernel-19.10/ and install the linux-image and linux-module\n- Then install/setup CloudStack on it (fix some issues around jna.  by manually installing newer libjna-java to /usr/share/cloudstack-agent/lib)\n- Since the host processor is not x86_64.  I had to build a new arm64 (or aarch64) systemvmtemplate: http://dl.rohityadav.cloud/cloudstack-rpi/systemvmtemplate/\n\nI could finally get a 4.13 CloudStack + Adv zone/networking to run on it\nand deployed a KVM based Ubuntu 19.10 environment and NFS storage.\nDeployed a test vm with isolated network.  VR works as expected. Console\nproxy works as well.  for this tested against arm64 openstack Debian 9/10\ntemplates.\n\nI raised the issue of enabling KVM in upstream Ubuntu arm64 build: https://bugs.launchpad.net/ubuntu/+source/linux-raspi2/+bug/1783961\nUbuntu kernel team has come back and future arm64 releases may have \nKVM enabled by default.\n\nLimitation: on my aarch64 env.  it did not support IDE.  therefore all\ndefault bus type for volumes are SCSI by default. With VIRTIO it fails\nsometimes.\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2019-11-12 00:31:05","modifiedFileCount":"5","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2021-07-22 02:07:25","codes":[{"authorDate":"2021-07-22 02:07:25","commitOrder":4,"curCode":"    public void testCreateVMFromSpecWithTopology6() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 12;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setArch(\"x86_64\");\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n        to.setVcpuMaxLimit(cpus + 1);\n\n        final LibvirtVMDef vm = libvirtComputingResourceSpy.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","date":"2021-07-22 02:07:25","endLine":307,"groupId":"19867","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateVMFromSpecWithTopology6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/86/f30bf3bc3d7f631d924db9e58d9d37495b2fc1.src","preCode":"    public void testCreateVMFromSpecWithTopology6() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 12;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        lcr._qemuSocketsPath = new File(\"/var/run/qemu\");\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setArch(\"x86_64\");\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"M"},{"authorDate":"2021-07-22 02:07:25","commitOrder":4,"curCode":"    public void testCreateVMFromSpecWithTopology4() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 8;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        LibvirtVMDef vm = libvirtComputingResourceSpy.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","date":"2021-07-22 02:07:25","endLine":336,"groupId":"19867","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateVMFromSpecWithTopology4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/86/f30bf3bc3d7f631d924db9e58d9d37495b2fc1.src","preCode":"    public void testCreateVMFromSpecWithTopology4() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 8;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final LibvirtComputingResource lcr = new LibvirtComputingResource();\n        lcr._qemuSocketsPath = new File(\"/var/run/qemu\");\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        final LibvirtVMDef vm = lcr.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":313,"status":"M"}],"commitId":"eff2da2518a7908f69d6f62557a3b1c9656aa94d","commitMessage":"@@@Refactor and improvements for method com.cloud.hypervisor.kvm.resource.LibvirtComputingResource.createVMFromSpec() (#5149)\n\n* Refactor method createVMFromSpec\n\n* Add unit tests\n\n* Fix test\n\n* Extract if block to method for add extra configs to VM Domain XML\n\n* Split travis tests trying to isolate which test is causing an error\n\n* Override toString() method\n\n* Update documentation\n\n* Fix checkstyle error (line with trailing spaces)\n\n* Change VirtualMachineTO print of object\n\n* Add try except to find message error. Remove after test\n\n* Fix indent\n\n* Trying to understanding why is happening in this code\n\n* Refactor method createVMFromSpec\n\n* Add unit tests\n\n* Fix test\n\n* Extract if block to method for add extra configs to VM Domain XML\n\n* Split travis tests trying to isolate which test is causing an error\n\n* Override toString() method\n\n* Update documentation\n\n* Fix checkstyle error (line with trailing spaces)\n\n* Remove unnecessary comment\n\n* Revert travis tests\n\nCo-authored-by: SadiJr <17a0db2854@firemailbox.club>","date":"2021-07-22 02:07:25","modifiedFileCount":"3","status":"M","submitter":"SadiJr"},{"authorTime":"2021-08-21 15:29:02","codes":[{"authorDate":"2021-07-22 02:07:25","commitOrder":5,"curCode":"    public void testCreateVMFromSpecWithTopology6() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 12;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setArch(\"x86_64\");\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n        to.setVcpuMaxLimit(cpus + 1);\n\n        final LibvirtVMDef vm = libvirtComputingResourceSpy.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","date":"2021-07-22 02:07:25","endLine":307,"groupId":"103138","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateVMFromSpecWithTopology6","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/86/f30bf3bc3d7f631d924db9e58d9d37495b2fc1.src","preCode":"    public void testCreateVMFromSpecWithTopology6() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 12;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setArch(\"x86_64\");\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n        to.setVcpuMaxLimit(cpus + 1);\n\n        final LibvirtVMDef vm = libvirtComputingResourceSpy.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":282,"status":"N"},{"authorDate":"2021-08-21 15:29:02","commitOrder":5,"curCode":"    public void testCreateVMFromSpecWithTopology4() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 8;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n        to.setVcpuMaxLimit(cpus + 1);\n\n        LibvirtVMDef vm = libvirtComputingResourceSpy.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","date":"2021-08-21 15:29:02","endLine":342,"groupId":"103138","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateVMFromSpecWithTopology4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/fb/f1ec614adae6e30b172e425830471ea9da3c96.src","preCode":"    public void testCreateVMFromSpecWithTopology4() {\n        final int id = random.nextInt(65534);\n        final String name = \"test-instance-1\";\n\n        final int cpus = 8;\n        final int minSpeed = 1024;\n        final int maxSpeed = 2048;\n        final int minRam = 256 * 1024;\n        final int maxRam = 512 * 1024;\n\n        final String os = \"Ubuntu\";\n\n        final String vncAddr = \"\";\n        final String vncPassword = \"mySuperSecretPassword\";\n\n        final VirtualMachineTO to = new VirtualMachineTO(id, name, VirtualMachine.Type.User, cpus, minSpeed, maxSpeed, minRam, maxRam, BootloaderType.HVM, os, false, false, vncPassword);\n        to.setVncAddr(vncAddr);\n        to.setUuid(\"b0f0a72d-7efb-3cad-a8ff-70ebf30b3af9\");\n\n        LibvirtVMDef vm = libvirtComputingResourceSpy.createVMFromSpec(to);\n        vm.setHvsType(hyperVisorType);\n\n        verifyVm(to, vm);\n    }\n","realPath":"plugins/hypervisors/kvm/src/test/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResourceTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"M"}],"commitId":"8a16729fcf10d9e6952fcccc07d8d17952fa6312","commitMessage":"@@@Support vm dynamic scaling with kvm (#4878)\n\n* Create utility to centralize byte convertions\n\n* Add/change toString definitions\n\n* Create Libvirt handler to ScaleVmCommand\n\n* Enable dynamic scalling VM with KVM\n\n* Move config from interface to class and rename it\n\nAs every variable declared in interfaces are already final. \nthis moving will be needed to mock tests in nexts commits\n\n* Configure VM max memory and cpu cores\n\nThe values are according to service offering or global configs\n\n* Extract dpdk configuration to a method and test it\n\n* Extract OS desc config to a method and test it\n\n* Extract guest resource def to a method and test it\n\nImprove libvirt def\n\n* Refactor LibvirtVMDef.GuestResourceDef\n\n* Refactor ScaleVmCommand\n\n* Improve VMInstaVO toString()\n\n* Refactor upgradeRunningVirtualMachine method\n\n* Turn int variables into long on utility\n\n* Verify if VM is scalable on KVMGuru\n\n* Rename some KVMGuruTest's methods\n\n* Change vm's xml to work with max memory\n\n* Verify if service offering is dynamic before scale\n\n* Create methods to retrieve data from domain\n\n* Create def to hotplug memory\n\n* Adjust the way command was scaling the VM\n\n* Fix database persistence before executing command\n\n* Send more info to host to improve log\n\n* Fix var name\n\n* Fix missing \"}\"\n\n* Undo unnecessary changes\n\n* Address review\n\n* Fix scale validation\n\n* Add VM prepared for dynamic scaling validation\n\n* Refactor LibvirtScaleVmCommandWrapper and improve unit tests\n\n* Remove duplicated method\n\n* Add RuntimeException check\n\n* Remove copyright from header\n\n* Remove copyright from header\n\n* Remove copyright from header\n\n* Remove copyright from header\n\n* Remove copyright from header\n\n* Update ByteScaleUtilsTest.java\n\nCo-authored-by: Daniel Augusto Veronezi Salvador <daniel@scclouds.com.br>","date":"2021-08-21 15:29:02","modifiedFileCount":"14","status":"M","submitter":"Daniel Augusto Veronezi Salvador"}]
