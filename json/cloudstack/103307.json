[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void deleteExistingLinkLocalRouteTable(String linkLocalBr) {\n        Script command = new Script(\"/bin/bash\", _timeout);\n        command.add(\"-c\");\n        command.add(\"ip route | grep \" + NetUtils.getLinkLocalCIDR());\n        OutputInterpreter.AllLinesParser parser = new OutputInterpreter.AllLinesParser();\n        String result = command.execute(parser);\n        boolean foundLinkLocalBr = false;\n        if (result == null && parser.getLines() != null) {\n            String[] lines = parser.getLines().split(\"\\\\n\");\n            for (String line : lines) {\n                String[] tokens = line.split(\" \");\n                if (tokens != null && tokens.length < 2) {\n                    continue;\n                }\n                final String device = tokens[2];\n                if (!Strings.isNullOrEmpty(device) && !device.equalsIgnoreCase(linkLocalBr)) {\n                    Script.runSimpleBashScript(\"ip route del \" + NetUtils.getLinkLocalCIDR() + \" dev \" + tokens[2]);\n                } else {\n                    foundLinkLocalBr = true;\n                }\n            }\n        }\n        if (!foundLinkLocalBr) {\n            Script.runSimpleBashScript(\"ip address add 169.254.0.1/16 dev \" + linkLocalBr + \";\" + \"ip route add \" + NetUtils.getLinkLocalCIDR() + \" dev \" + linkLocalBr + \" src \" +\n                NetUtils.getLinkLocalGateway());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":430,"groupId":"18831","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteExistingLinkLocalRouteTable","params":"(StringlinkLocalBr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/11/b22c494f46f1276bb7fddf6e98ed95a4b36882.src","preCode":"    private void deleteExistingLinkLocalRouteTable(String linkLocalBr) {\n        Script command = new Script(\"/bin/bash\", _timeout);\n        command.add(\"-c\");\n        command.add(\"ip route | grep \" + NetUtils.getLinkLocalCIDR());\n        OutputInterpreter.AllLinesParser parser = new OutputInterpreter.AllLinesParser();\n        String result = command.execute(parser);\n        boolean foundLinkLocalBr = false;\n        if (result == null && parser.getLines() != null) {\n            String[] lines = parser.getLines().split(\"\\\\n\");\n            for (String line : lines) {\n                String[] tokens = line.split(\" \");\n                if (tokens != null && tokens.length < 2) {\n                    continue;\n                }\n                final String device = tokens[2];\n                if (!Strings.isNullOrEmpty(device) && !device.equalsIgnoreCase(linkLocalBr)) {\n                    Script.runSimpleBashScript(\"ip route del \" + NetUtils.getLinkLocalCIDR() + \" dev \" + tokens[2]);\n                } else {\n                    foundLinkLocalBr = true;\n                }\n            }\n        }\n        if (!foundLinkLocalBr) {\n            Script.runSimpleBashScript(\"ip address add 169.254.0.1/16 dev \" + linkLocalBr + \";\" + \"ip route add \" + NetUtils.getLinkLocalCIDR() + \" dev \" + linkLocalBr + \" src \" +\n                NetUtils.getLinkLocalGateway());\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/BridgeVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":404,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private void deleteExitingLinkLocalRouteTable(String linkLocalBr) {\n        Script command = new Script(\"/bin/bash\", _timeout);\n        command.add(\"-c\");\n        command.add(\"ip route | grep \" + NetUtils.getLinkLocalCIDR());\n        OutputInterpreter.AllLinesParser parser = new OutputInterpreter.AllLinesParser();\n        String result = command.execute(parser);\n        boolean foundLinkLocalBr = false;\n        if (result == null && parser.getLines() != null) {\n            String[] lines = parser.getLines().split(\"\\\\n\");\n            for (String line : lines) {\n                String[] tokens = line.split(\" \");\n                if (!tokens[2].equalsIgnoreCase(linkLocalBr)) {\n                    Script.runSimpleBashScript(\"ip route del \" + NetUtils.getLinkLocalCIDR());\n                } else {\n                    foundLinkLocalBr = true;\n                }\n            }\n        }\n        if (!foundLinkLocalBr) {\n            Script.runSimpleBashScript(\"ip address add 169.254.0.1/16 dev \" + linkLocalBr + \";\" + \"ip route add \" + NetUtils.getLinkLocalCIDR() + \" dev \" + linkLocalBr + \" src \" +\n                    NetUtils.getLinkLocalGateway());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":191,"groupId":"1880","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteExitingLinkLocalRouteTable","params":"(StringlinkLocalBr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/06/cd1617b78251c4789496be4e060644e75e0ae8.src","preCode":"    private void deleteExitingLinkLocalRouteTable(String linkLocalBr) {\n        Script command = new Script(\"/bin/bash\", _timeout);\n        command.add(\"-c\");\n        command.add(\"ip route | grep \" + NetUtils.getLinkLocalCIDR());\n        OutputInterpreter.AllLinesParser parser = new OutputInterpreter.AllLinesParser();\n        String result = command.execute(parser);\n        boolean foundLinkLocalBr = false;\n        if (result == null && parser.getLines() != null) {\n            String[] lines = parser.getLines().split(\"\\\\n\");\n            for (String line : lines) {\n                String[] tokens = line.split(\" \");\n                if (!tokens[2].equalsIgnoreCase(linkLocalBr)) {\n                    Script.runSimpleBashScript(\"ip route del \" + NetUtils.getLinkLocalCIDR());\n                } else {\n                    foundLinkLocalBr = true;\n                }\n            }\n        }\n        if (!foundLinkLocalBr) {\n            Script.runSimpleBashScript(\"ip address add 169.254.0.1/16 dev \" + linkLocalBr + \";\" + \"ip route add \" + NetUtils.getLinkLocalCIDR() + \" dev \" + linkLocalBr + \" src \" +\n                    NetUtils.getLinkLocalGateway());\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/OvsVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2019-07-25 14:43:39","codes":[{"authorDate":"2019-07-25 14:43:39","commitOrder":2,"curCode":"    private void deleteExistingLinkLocalRouteTable(String linkLocalBr) {\n        Script command = new Script(\"/bin/bash\", _timeout);\n        command.add(\"-c\");\n        command.add(\"ip route | grep \" + _controlCidr);\n        OutputInterpreter.AllLinesParser parser = new OutputInterpreter.AllLinesParser();\n        String result = command.execute(parser);\n        boolean foundLinkLocalBr = false;\n        if (result == null && parser.getLines() != null) {\n            String[] lines = parser.getLines().split(\"\\\\n\");\n            for (String line : lines) {\n                String[] tokens = line.split(\" \");\n                if (tokens != null && tokens.length < 2) {\n                    continue;\n                }\n                final String device = tokens[2];\n                if (!Strings.isNullOrEmpty(device) && !device.equalsIgnoreCase(linkLocalBr)) {\n                    Script.runSimpleBashScript(\"ip route del \" + _controlCidr + \" dev \" + tokens[2]);\n                } else {\n                    foundLinkLocalBr = true;\n                }\n            }\n        }\n\n        if (!foundLinkLocalBr) {\n            Script.runSimpleBashScript(\"ip address add \" + NetUtils.getLinkLocalAddressFromCIDR(_controlCidr) + \" dev \" + linkLocalBr);\n            Script.runSimpleBashScript(\"ip route add \" + _controlCidr + \" dev \" + linkLocalBr + \" src \" + NetUtils.getLinkLocalGateway(_controlCidr));\n        }\n    }\n","date":"2019-07-25 14:43:39","endLine":414,"groupId":"103307","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"deleteExistingLinkLocalRouteTable","params":"(StringlinkLocalBr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d7/bb763d54e45833213fd89f3cf2bbb263c9a524.src","preCode":"    private void deleteExistingLinkLocalRouteTable(String linkLocalBr) {\n        Script command = new Script(\"/bin/bash\", _timeout);\n        command.add(\"-c\");\n        command.add(\"ip route | grep \" + NetUtils.getLinkLocalCIDR());\n        OutputInterpreter.AllLinesParser parser = new OutputInterpreter.AllLinesParser();\n        String result = command.execute(parser);\n        boolean foundLinkLocalBr = false;\n        if (result == null && parser.getLines() != null) {\n            String[] lines = parser.getLines().split(\"\\\\n\");\n            for (String line : lines) {\n                String[] tokens = line.split(\" \");\n                if (tokens != null && tokens.length < 2) {\n                    continue;\n                }\n                final String device = tokens[2];\n                if (!Strings.isNullOrEmpty(device) && !device.equalsIgnoreCase(linkLocalBr)) {\n                    Script.runSimpleBashScript(\"ip route del \" + NetUtils.getLinkLocalCIDR() + \" dev \" + tokens[2]);\n                } else {\n                    foundLinkLocalBr = true;\n                }\n            }\n        }\n        if (!foundLinkLocalBr) {\n            Script.runSimpleBashScript(\"ip address add 169.254.0.1/16 dev \" + linkLocalBr + \";\" + \"ip route add \" + NetUtils.getLinkLocalCIDR() + \" dev \" + linkLocalBr + \" src \" +\n                    NetUtils.getLinkLocalGateway());\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/BridgeVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":387,"status":"M"},{"authorDate":"2019-07-25 14:43:39","commitOrder":2,"curCode":"    private void deleteExitingLinkLocalRouteTable(String linkLocalBr) {\n        Script command = new Script(\"/bin/bash\", _timeout);\n        command.add(\"-c\");\n        command.add(\"ip route | grep \" + _controlCidr);\n        OutputInterpreter.AllLinesParser parser = new OutputInterpreter.AllLinesParser();\n        String result = command.execute(parser);\n        boolean foundLinkLocalBr = false;\n        if (result == null && parser.getLines() != null) {\n            String[] lines = parser.getLines().split(\"\\\\n\");\n            for (String line : lines) {\n                String[] tokens = line.split(\" \");\n                if (!tokens[2].equalsIgnoreCase(linkLocalBr)) {\n                    Script.runSimpleBashScript(\"ip route del \" + _controlCidr);\n                } else {\n                    foundLinkLocalBr = true;\n                }\n            }\n        }\n        if (!foundLinkLocalBr) {\n            Script.runSimpleBashScript(\"ip address add \" + NetUtils.getLinkLocalAddressFromCIDR(_controlCidr) + \" dev \" + linkLocalBr + \";\" + \"ip route add \" + _controlCidr + \" dev \" + linkLocalBr + \" src \" +\n                    NetUtils.getLinkLocalGateway(_controlCidr));\n        }\n    }\n","date":"2019-07-25 14:43:39","endLine":241,"groupId":"103307","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteExitingLinkLocalRouteTable","params":"(StringlinkLocalBr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/7b/f35e6f02175f70e2ebfa6ca08b400e7a2f61bc.src","preCode":"    private void deleteExitingLinkLocalRouteTable(String linkLocalBr) {\n        Script command = new Script(\"/bin/bash\", _timeout);\n        command.add(\"-c\");\n        command.add(\"ip route | grep \" + NetUtils.getLinkLocalCIDR());\n        OutputInterpreter.AllLinesParser parser = new OutputInterpreter.AllLinesParser();\n        String result = command.execute(parser);\n        boolean foundLinkLocalBr = false;\n        if (result == null && parser.getLines() != null) {\n            String[] lines = parser.getLines().split(\"\\\\n\");\n            for (String line : lines) {\n                String[] tokens = line.split(\" \");\n                if (!tokens[2].equalsIgnoreCase(linkLocalBr)) {\n                    Script.runSimpleBashScript(\"ip route del \" + NetUtils.getLinkLocalCIDR());\n                } else {\n                    foundLinkLocalBr = true;\n                }\n            }\n        }\n        if (!foundLinkLocalBr) {\n            Script.runSimpleBashScript(\"ip address add 169.254.0.1/16 dev \" + linkLocalBr + \";\" + \"ip route add \" + NetUtils.getLinkLocalCIDR() + \" dev \" + linkLocalBr + \" src \" +\n                    NetUtils.getLinkLocalGateway());\n        }\n    }\n","realPath":"plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/OvsVifDriver.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"}],"commitId":"e894658f8c3584f572a5e6c5fe292a2bae03c79c","commitMessage":"@@@kvm: Allow Link Local Cidr (cloud0 interface) to be configured (#3500)\n\nThere are certain scenarios where the 169.254.0.0/16 subnet is used for different\npurposes then CloudStack on a hypervisor.\n\nOnce of such scenarios is a BGP+EVPN+VXLAN setup using BGP Unnumbered where the\n169.254.0.1 address is used by Frr/Zebra BGP routing to send traffic to the\nneighboring router.\n\nThe following settings can be changed in the agent.properties (default values added):\n\ncontrol.cidr=169.254.0.0/16\n\nMake sure the global setting 'control.cidr' matches the values defined in the agent.propeties!\n\nIn the future the mgmt server can send this parameter to a KVM Agent on startup.  but at the moment\nthis framework is not in place and thus these values can't be send to the Agent in a proper manner.\n\nSigned-off-by: Wido den Hollander <wido@widodh.nl>","date":"2019-07-25 14:43:39","modifiedFileCount":"9","status":"M","submitter":"Wido den Hollander"}]
