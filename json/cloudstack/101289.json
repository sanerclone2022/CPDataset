[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n\n        \r\n        GuestOSVO guestOS = _guestOsDao.findByIdIncludingRemoved(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n\n        HostVO host = _hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(\"Other\");\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }\n","date":"2018-01-20 05:49:27","endLine":70,"groupId":"16430","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"implement","params":"(VirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/28/5f9628d8d4e8c713af3f26d1322083bd2616ec.src","preCode":"    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n\n        \r\n        GuestOSVO guestOS = _guestOsDao.findByIdIncludingRemoved(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n\n        HostVO host = _hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(\"Other\");\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }\n","realPath":"server/src/main/java/com/cloud/hypervisor/LXCGuru.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        BootloaderType bt = BootloaderType.PyGrub;\n        if (vm.getBootLoaderType() == BootloaderType.CD) {\n            bt = vm.getBootLoaderType();\n        }\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n        UserVmVO userVmVO = userVmDao.findById(vm.getId());\n        if (userVmVO != null) {\n            HostVO host = hostDao.findById(userVmVO.getHostId());\n            if (host != null) {\n                to.setVcpuMaxLimit(MaxNumberOfVCPUSPerVM.valueIn(host.getClusterId()));\n            }\n        }\n\n        to.setBootloader(bt);\n\n        \r\n        GuestOSVO guestOS = guestOsDao.findByIdIncludingRemoved(vm.getVirtualMachine().getGuestOSId());\n\n        Map<String, String> guestOsDetails = guestOsDetailsDao.listDetailsKeyPairs(vm.getVirtualMachine().getGuestOSId());\n\n        to.setGuestOsDetails(guestOsDetails);\n\n        to.setOs(guestOS.getDisplayName());\n        HostVO host = hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(null);\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }\n","date":"2018-01-20 05:49:27","endLine":127,"groupId":"16774","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"implement","params":"(VirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/7d/5279cd7cc50827f811f75aa288d6833f7788e4.src","preCode":"    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        BootloaderType bt = BootloaderType.PyGrub;\n        if (vm.getBootLoaderType() == BootloaderType.CD) {\n            bt = vm.getBootLoaderType();\n        }\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n        UserVmVO userVmVO = userVmDao.findById(vm.getId());\n        if (userVmVO != null) {\n            HostVO host = hostDao.findById(userVmVO.getHostId());\n            if (host != null) {\n                to.setVcpuMaxLimit(MaxNumberOfVCPUSPerVM.valueIn(host.getClusterId()));\n            }\n        }\n\n        to.setBootloader(bt);\n\n        \r\n        GuestOSVO guestOS = guestOsDao.findByIdIncludingRemoved(vm.getVirtualMachine().getGuestOSId());\n\n        Map<String, String> guestOsDetails = guestOsDetailsDao.listDetailsKeyPairs(vm.getVirtualMachine().getGuestOSId());\n\n        to.setGuestOsDetails(guestOsDetails);\n\n        to.setOs(guestOS.getDisplayName());\n        HostVO host = hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(null);\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/XenServerGuru.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2021-04-09 15:51:07","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n\n        \r\n        GuestOSVO guestOS = _guestOsDao.findByIdIncludingRemoved(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n\n        HostVO host = _hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(\"Other\");\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }\n","date":"2018-01-20 05:49:27","endLine":70,"groupId":"101289","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"implement","params":"(VirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/28/5f9628d8d4e8c713af3f26d1322083bd2616ec.src","preCode":"    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n\n        \r\n        GuestOSVO guestOS = _guestOsDao.findByIdIncludingRemoved(vm.getVirtualMachine().getGuestOSId());\n        to.setOs(guestOS.getDisplayName());\n\n        HostVO host = _hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = _guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(\"Other\");\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }\n","realPath":"server/src/main/java/com/cloud/hypervisor/LXCGuru.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"},{"authorDate":"2021-04-09 15:51:07","commitOrder":2,"curCode":"    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        BootloaderType bt = BootloaderType.PyGrub;\n        if (vm.getBootLoaderType() == BootloaderType.CD) {\n            bt = vm.getBootLoaderType();\n        }\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n        UserVmVO userVmVO = userVmDao.findById(vm.getId());\n        if (userVmVO != null) {\n            HostVO host = hostDao.findById(userVmVO.getHostId());\n            if (host != null) {\n                List<HostVO> clusterHosts = hostDao.listByClusterAndHypervisorType(host.getClusterId(), host.getHypervisorType());\n                HostVO hostWithMinSocket = clusterHosts.stream().min(Comparator.comparing(HostVO::getCpuSockets)).orElse(null);\n                Integer vCpus = MaxNumberOfVCPUSPerVM.valueIn(host.getClusterId());\n                if (hostWithMinSocket != null && hostWithMinSocket.getCpuSockets() != null &&\n                        hostWithMinSocket.getCpuSockets() < vCpus) {\n                    vCpus = hostWithMinSocket.getCpuSockets();\n                }\n                to.setVcpuMaxLimit(vCpus);\n            }\n        }\n\n        to.setBootloader(bt);\n\n        \r\n        GuestOSVO guestOS = guestOsDao.findByIdIncludingRemoved(vm.getVirtualMachine().getGuestOSId());\n\n        Map<String, String> guestOsDetails = guestOsDetailsDao.listDetailsKeyPairs(vm.getVirtualMachine().getGuestOSId());\n\n        to.setGuestOsDetails(guestOsDetails);\n\n        to.setOs(guestOS.getDisplayName());\n        HostVO host = hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(null);\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }\n","date":"2021-04-09 15:51:07","endLine":135,"groupId":"101289","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"implement","params":"(VirtualMachineProfilevm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c7/7ac44cdaf4f5c897c1f16968bfe650bb6c69b6.src","preCode":"    public VirtualMachineTO implement(VirtualMachineProfile vm) {\n        BootloaderType bt = BootloaderType.PyGrub;\n        if (vm.getBootLoaderType() == BootloaderType.CD) {\n            bt = vm.getBootLoaderType();\n        }\n        VirtualMachineTO to = toVirtualMachineTO(vm);\n        UserVmVO userVmVO = userVmDao.findById(vm.getId());\n        if (userVmVO != null) {\n            HostVO host = hostDao.findById(userVmVO.getHostId());\n            if (host != null) {\n                to.setVcpuMaxLimit(MaxNumberOfVCPUSPerVM.valueIn(host.getClusterId()));\n            }\n        }\n\n        to.setBootloader(bt);\n\n        \r\n        GuestOSVO guestOS = guestOsDao.findByIdIncludingRemoved(vm.getVirtualMachine().getGuestOSId());\n\n        Map<String, String> guestOsDetails = guestOsDetailsDao.listDetailsKeyPairs(vm.getVirtualMachine().getGuestOSId());\n\n        to.setGuestOsDetails(guestOsDetails);\n\n        to.setOs(guestOS.getDisplayName());\n        HostVO host = hostDao.findById(vm.getVirtualMachine().getHostId());\n        GuestOSHypervisorVO guestOsMapping = null;\n        if (host != null) {\n            guestOsMapping = guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(), getHypervisorType().toString(), host.getHypervisorVersion());\n        }\n        if (guestOsMapping == null || host == null) {\n            to.setPlatformEmulator(null);\n        } else {\n            to.setPlatformEmulator(guestOsMapping.getGuestOsName());\n        }\n\n        return to;\n    }\n","realPath":"plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/XenServerGuru.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"22f6c19248408385007d9e56f357630f5abea6f8","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n","date":"2021-04-09 15:51:07","modifiedFileCount":"6","status":"M","submitter":"Rohit Yadav"}]
