[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public DataStore createPrimaryDataStore() {\n        try {\n            String uuid = UUID.nameUUIDFromBytes(this.getPrimaryStorageUrl().getBytes()).toString();\n            List<StoragePoolVO> pools = primaryDataStoreDao.findPoolByName(this.primaryName);\n            if (pools.size() > 0) {\n                return this.dataStoreMgr.getPrimaryDataStore(pools.get(0).getId());\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n            StoragePoolVO pool = new StoragePoolVO();\n            pool.setClusterId(clusterId);\n            pool.setDataCenterId(dcId);\n            URI uri = new URI(this.getPrimaryStorageUrl());\n            pool.setHostAddress(uri.getHost());\n            pool.setPath(uri.getPath());\n            pool.setPort(0);\n            pool.setName(this.primaryName);\n            pool.setUuid(this.getPrimaryStorageUuid());\n            pool.setStatus(StoragePoolStatus.Up);\n            pool.setPoolType(StoragePoolType.VMFS);\n            pool.setPodId(podId);\n            pool.setScope(ScopeType.CLUSTER);\n            pool.setStorageProviderName(\"cloudstack primary data store provider\");\n            pool = this.primaryStoreDao.persist(pool);\n            DataStore store = this.dataStoreMgr.getPrimaryDataStore(pool.getId());\n            return store;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":315,"groupId":"6345","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createPrimaryDataStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/1f/3aff04f3371d06083d54083b51567d5d449848.src","preCode":"    public DataStore createPrimaryDataStore() {\n        try {\n            String uuid = UUID.nameUUIDFromBytes(this.getPrimaryStorageUrl().getBytes()).toString();\n            List<StoragePoolVO> pools = primaryDataStoreDao.findPoolByName(this.primaryName);\n            if (pools.size() > 0) {\n                return this.dataStoreMgr.getPrimaryDataStore(pools.get(0).getId());\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n            StoragePoolVO pool = new StoragePoolVO();\n            pool.setClusterId(clusterId);\n            pool.setDataCenterId(dcId);\n            URI uri = new URI(this.getPrimaryStorageUrl());\n            pool.setHostAddress(uri.getHost());\n            pool.setPath(uri.getPath());\n            pool.setPort(0);\n            pool.setName(this.primaryName);\n            pool.setUuid(this.getPrimaryStorageUuid());\n            pool.setStatus(StoragePoolStatus.Up);\n            pool.setPoolType(StoragePoolType.VMFS);\n            pool.setPodId(podId);\n            pool.setScope(ScopeType.CLUSTER);\n            pool.setStorageProviderName(\"cloudstack primary data store provider\");\n            pool = this.primaryStoreDao.persist(pool);\n            DataStore store = this.dataStoreMgr.getPrimaryDataStore(pool.getId());\n            return store;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/VolumeTestVmware.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public DataStore createPrimaryDataStore() {\n        try {\n            String uuid = UUID.nameUUIDFromBytes(this.getPrimaryStorageUrl().getBytes()).toString();\n            List<StoragePoolVO> pools = primaryDataStoreDao.findPoolByName(this.primaryName);\n            if (pools.size() > 0) {\n                return this.dataStoreMgr.getPrimaryDataStore(pools.get(0).getId());\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n            StoragePoolVO pool = new StoragePoolVO();\n            pool.setClusterId(clusterId);\n            pool.setDataCenterId(dcId);\n            URI uri = new URI(this.getPrimaryStorageUrl());\n            pool.setHostAddress(uri.getHost());\n            pool.setPath(uri.getPath());\n            pool.setPort(0);\n            pool.setName(this.primaryName);\n            pool.setUuid(this.getPrimaryStorageUuid());\n            pool.setStatus(StoragePoolStatus.Up);\n            pool.setPoolType(StoragePoolType.NetworkFilesystem);\n            pool.setPodId(podId);\n            pool.setScope(ScopeType.CLUSTER);\n            pool.setStorageProviderName(DataStoreProvider.DEFAULT_PRIMARY);\n            pool = this.primaryStoreDao.persist(pool);\n            DataStore store = this.dataStoreMgr.getPrimaryDataStore(pool.getId());\n            return store;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":314,"groupId":"6345","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createPrimaryDataStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c2/74d76d994729c57d93f06e50286d3586be1340.src","preCode":"    public DataStore createPrimaryDataStore() {\n        try {\n            String uuid = UUID.nameUUIDFromBytes(this.getPrimaryStorageUrl().getBytes()).toString();\n            List<StoragePoolVO> pools = primaryDataStoreDao.findPoolByName(this.primaryName);\n            if (pools.size() > 0) {\n                return this.dataStoreMgr.getPrimaryDataStore(pools.get(0).getId());\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n            StoragePoolVO pool = new StoragePoolVO();\n            pool.setClusterId(clusterId);\n            pool.setDataCenterId(dcId);\n            URI uri = new URI(this.getPrimaryStorageUrl());\n            pool.setHostAddress(uri.getHost());\n            pool.setPath(uri.getPath());\n            pool.setPort(0);\n            pool.setName(this.primaryName);\n            pool.setUuid(this.getPrimaryStorageUuid());\n            pool.setStatus(StoragePoolStatus.Up);\n            pool.setPoolType(StoragePoolType.NetworkFilesystem);\n            pool.setPodId(podId);\n            pool.setScope(ScopeType.CLUSTER);\n            pool.setStorageProviderName(DataStoreProvider.DEFAULT_PRIMARY);\n            pool = this.primaryStoreDao.persist(pool);\n            DataStore store = this.dataStoreMgr.getPrimaryDataStore(pool.getId());\n            return store;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/VolumeTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-23 19:19:36","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public DataStore createPrimaryDataStore() {\n        try {\n            String uuid = UUID.nameUUIDFromBytes(this.getPrimaryStorageUrl().getBytes()).toString();\n            List<StoragePoolVO> pools = primaryDataStoreDao.findPoolByName(this.primaryName);\n            if (pools.size() > 0) {\n                return this.dataStoreMgr.getPrimaryDataStore(pools.get(0).getId());\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n            StoragePoolVO pool = new StoragePoolVO();\n            pool.setClusterId(clusterId);\n            pool.setDataCenterId(dcId);\n            URI uri = new URI(this.getPrimaryStorageUrl());\n            pool.setHostAddress(uri.getHost());\n            pool.setPath(uri.getPath());\n            pool.setPort(0);\n            pool.setName(this.primaryName);\n            pool.setUuid(this.getPrimaryStorageUuid());\n            pool.setStatus(StoragePoolStatus.Up);\n            pool.setPoolType(StoragePoolType.VMFS);\n            pool.setPodId(podId);\n            pool.setScope(ScopeType.CLUSTER);\n            pool.setStorageProviderName(\"cloudstack primary data store provider\");\n            pool = this.primaryStoreDao.persist(pool);\n            DataStore store = this.dataStoreMgr.getPrimaryDataStore(pool.getId());\n            return store;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":315,"groupId":"10759","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createPrimaryDataStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/1f/3aff04f3371d06083d54083b51567d5d449848.src","preCode":"    public DataStore createPrimaryDataStore() {\n        try {\n            String uuid = UUID.nameUUIDFromBytes(this.getPrimaryStorageUrl().getBytes()).toString();\n            List<StoragePoolVO> pools = primaryDataStoreDao.findPoolByName(this.primaryName);\n            if (pools.size() > 0) {\n                return this.dataStoreMgr.getPrimaryDataStore(pools.get(0).getId());\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n            StoragePoolVO pool = new StoragePoolVO();\n            pool.setClusterId(clusterId);\n            pool.setDataCenterId(dcId);\n            URI uri = new URI(this.getPrimaryStorageUrl());\n            pool.setHostAddress(uri.getHost());\n            pool.setPath(uri.getPath());\n            pool.setPort(0);\n            pool.setName(this.primaryName);\n            pool.setUuid(this.getPrimaryStorageUuid());\n            pool.setStatus(StoragePoolStatus.Up);\n            pool.setPoolType(StoragePoolType.VMFS);\n            pool.setPodId(podId);\n            pool.setScope(ScopeType.CLUSTER);\n            pool.setStorageProviderName(\"cloudstack primary data store provider\");\n            pool = this.primaryStoreDao.persist(pool);\n            DataStore store = this.dataStoreMgr.getPrimaryDataStore(pool.getId());\n            return store;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/VolumeTestVmware.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"N"},{"authorDate":"2018-01-23 19:19:36","commitOrder":2,"curCode":"    public DataStore createPrimaryDataStore() {\n        try {\n            List<StoragePoolVO> pools = primaryDataStoreDao.findPoolByName(this.primaryName);\n            if (pools.size() > 0) {\n                return this.dataStoreMgr.getPrimaryDataStore(pools.get(0).getId());\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n            StoragePoolVO pool = new StoragePoolVO();\n            pool.setClusterId(clusterId);\n            pool.setDataCenterId(dcId);\n            URI uri = new URI(this.getPrimaryStorageUrl());\n            pool.setHostAddress(uri.getHost());\n            pool.setPath(uri.getPath());\n            pool.setPort(0);\n            pool.setName(this.primaryName);\n            pool.setUuid(this.getPrimaryStorageUuid());\n            pool.setStatus(StoragePoolStatus.Up);\n            pool.setPoolType(StoragePoolType.NetworkFilesystem);\n            pool.setPodId(podId);\n            pool.setScope(ScopeType.CLUSTER);\n            pool.setStorageProviderName(DataStoreProvider.DEFAULT_PRIMARY);\n            pool = this.primaryStoreDao.persist(pool);\n            DataStore store = this.dataStoreMgr.getPrimaryDataStore(pool.getId());\n            return store;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n","date":"2018-01-23 19:19:36","endLine":313,"groupId":"10759","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"createPrimaryDataStore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/86/421742f83d421ca4a8d80c758a3533ea9d7a17.src","preCode":"    public DataStore createPrimaryDataStore() {\n        try {\n            String uuid = UUID.nameUUIDFromBytes(this.getPrimaryStorageUrl().getBytes()).toString();\n            List<StoragePoolVO> pools = primaryDataStoreDao.findPoolByName(this.primaryName);\n            if (pools.size() > 0) {\n                return this.dataStoreMgr.getPrimaryDataStore(pools.get(0).getId());\n            }\n\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n            StoragePoolVO pool = new StoragePoolVO();\n            pool.setClusterId(clusterId);\n            pool.setDataCenterId(dcId);\n            URI uri = new URI(this.getPrimaryStorageUrl());\n            pool.setHostAddress(uri.getHost());\n            pool.setPath(uri.getPath());\n            pool.setPort(0);\n            pool.setName(this.primaryName);\n            pool.setUuid(this.getPrimaryStorageUuid());\n            pool.setStatus(StoragePoolStatus.Up);\n            pool.setPoolType(StoragePoolType.NetworkFilesystem);\n            pool.setPodId(podId);\n            pool.setScope(ScopeType.CLUSTER);\n            pool.setStorageProviderName(DataStoreProvider.DEFAULT_PRIMARY);\n            pool = this.primaryStoreDao.persist(pool);\n            DataStore store = this.dataStoreMgr.getPrimaryDataStore(pool.getId());\n            return store;\n        } catch (Exception e) {\n            return null;\n        }\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/VolumeTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"}],"commitId":"c591c5ad3e270e5e62166a7f1ff6f9895d4b102c","commitMessage":"@@@CLOUDSTACK-10248: Fix errors that appeared after #2283 (#2417)\n\nThis fixes move refactoring error introduced in #2283 \nFor instance.  the class DatadiskTO is supposed to be in com.cloud.agent.api.to package. However.  the folder structure it was placed in is com.cloud.agent.api.api.to.\n\nSkip tests for cloud-plugin-hypervisor-ovm3:\nFor some unknown reason.  there are quite a lot of broken test cases for cloud-plugin-hypervisor-ovm3. They might have appeared after some dependency upgrade and was overlooked by the person updating them. I checked them to see if they could be fixed.  but these tests are not developed in a clear and clean manner. On top of that.  we do not see (at least I) people using OVM3-hypervisor with ACS. Therefore.  I decided to skip them.\n\nIdentention corrected to use spaces instead of tabs in XML files\n","date":"2018-01-23 19:19:36","modifiedFileCount":"9","status":"M","submitter":"Rafael Weing?rtner"}]
