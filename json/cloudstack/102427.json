[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void execute() throws  ResourceUnavailableException, InsufficientCapacityException, ResourceAllocationException, ConcurrentOperationException {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + getVmSnapShotId());\n        UserVm result = _vmSnapshotService.revertToSnapshot(getVmSnapShotId());\n        if (result != null) {\n            UserVmResponse response = _responseGenerator.createUserVmResponse(ResponseView.Restricted,\n                    \"virtualmachine\", result).get(0);\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to revert VM snapshot\");\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":87,"groupId":"17263","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/0c/a500962b3035f465bdc86db54acb3f2b4c77b1.src","preCode":"    public void execute() throws  ResourceUnavailableException, InsufficientCapacityException, ResourceAllocationException, ConcurrentOperationException {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + getVmSnapShotId());\n        UserVm result = _vmSnapshotService.revertToSnapshot(getVmSnapShotId());\n        if (result != null) {\n            UserVmResponse response = _responseGenerator.createUserVmResponse(ResponseView.Restricted,\n                    \"virtualmachine\", result).get(0);\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to revert VM snapshot\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/vmsnapshot/RevertToVMSnapshotCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + getId());\n        boolean result = _vmSnapshotService.deleteVMSnapshot(getId());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete vm snapshot\");\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":80,"groupId":"6769","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/7b/aad7cd5992fb06c1aabccfdaf2bb27ad77823e.src","preCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + getId());\n        boolean result = _vmSnapshotService.deleteVMSnapshot(getId());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete vm snapshot\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/vmsnapshot/DeleteVMSnapshotCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-05-03 19:02:00","codes":[{"authorDate":"2018-05-03 19:02:00","commitOrder":2,"curCode":"    public void execute() throws  ResourceUnavailableException, InsufficientCapacityException, ResourceAllocationException, ConcurrentOperationException {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getVmSnapShotId()));\n        UserVm result = _vmSnapshotService.revertToSnapshot(getVmSnapShotId());\n        if (result != null) {\n            UserVmResponse response = _responseGenerator.createUserVmResponse(ResponseView.Restricted,\n                    \"virtualmachine\", result).get(0);\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to revert VM snapshot\");\n        }\n    }\n","date":"2018-05-03 19:02:00","endLine":87,"groupId":"17263","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8c/3510b820104c000b639b1f5f1fe6732fb421db.src","preCode":"    public void execute() throws  ResourceUnavailableException, InsufficientCapacityException, ResourceAllocationException, ConcurrentOperationException {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + getVmSnapShotId());\n        UserVm result = _vmSnapshotService.revertToSnapshot(getVmSnapShotId());\n        if (result != null) {\n            UserVmResponse response = _responseGenerator.createUserVmResponse(ResponseView.Restricted,\n                    \"virtualmachine\", result).get(0);\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to revert VM snapshot\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/vmsnapshot/RevertToVMSnapshotCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2018-05-03 19:02:00","commitOrder":2,"curCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getId()));\n        boolean result = _vmSnapshotService.deleteVMSnapshot(getId());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete vm snapshot\");\n        }\n    }\n","date":"2018-05-03 19:02:00","endLine":80,"groupId":"6769","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/03/c9d43d9e2d9c4ed22c4dae916e199db926118f.src","preCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + getId());\n        boolean result = _vmSnapshotService.deleteVMSnapshot(getId());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete vm snapshot\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/vmsnapshot/DeleteVMSnapshotCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"1ff171db902b98df5d172ae468c33a07ea1204d5","commitMessage":"@@@CLOUDSTACK-9781: record resource uuid in events instead of integer id (#1940)\n\nThis changes several event logging to use uuid of resource than integer id when creating API events.","date":"2018-05-03 19:02:00","modifiedFileCount":"72","status":"M","submitter":"jayantpatil1234"},{"authorTime":"2018-05-03 19:02:00","codes":[{"authorDate":"2019-07-27 22:51:43","commitOrder":3,"curCode":"    public void execute() throws  ResourceUnavailableException, InsufficientCapacityException, ResourceAllocationException, ConcurrentOperationException {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getVmSnapShotId()));\n        UserVm result = _vmSnapshotService.revertToSnapshot(getVmSnapShotId());\n        if (result != null) {\n            UserVmResponse response = _responseGenerator.createUserVmResponse(getResponseView(),\n                    \"virtualmachine\", result).get(0);\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to revert VM snapshot\");\n        }\n    }\n","date":"2019-07-27 22:51:43","endLine":88,"groupId":"905","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/90/76ac2a8b33cc78959fa97d2d640ed3feddca86.src","preCode":"    public void execute() throws  ResourceUnavailableException, InsufficientCapacityException, ResourceAllocationException, ConcurrentOperationException {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getVmSnapShotId()));\n        UserVm result = _vmSnapshotService.revertToSnapshot(getVmSnapShotId());\n        if (result != null) {\n            UserVmResponse response = _responseGenerator.createUserVmResponse(ResponseView.Restricted,\n                    \"virtualmachine\", result).get(0);\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to revert VM snapshot\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/vmsnapshot/RevertToVMSnapshotCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2018-05-03 19:02:00","commitOrder":3,"curCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getId()));\n        boolean result = _vmSnapshotService.deleteVMSnapshot(getId());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete vm snapshot\");\n        }\n    }\n","date":"2018-05-03 19:02:00","endLine":80,"groupId":"6769","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/03/c9d43d9e2d9c4ed22c4dae916e199db926118f.src","preCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getId()));\n        boolean result = _vmSnapshotService.deleteVMSnapshot(getId());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete vm snapshot\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/vmsnapshot/DeleteVMSnapshotCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"N"}],"commitId":"7a27e35a612f13a0ce43459b22e01d9b69627220","commitMessage":"@@@Refactoring to remove duplicate code. (#3152)\n\nMake use of Java 8 default implementation in interfaces. \nto remove code duplication between XxxCmd and XxxCmdAsAdmin.\n\nRefactor checkFormat by pre-calculating the supported\nextensions. Also make use of this in ImageStoreUtil.\nMakes it easier to add new file and compression formats.\n","date":"2019-07-27 22:51:43","modifiedFileCount":"111","status":"M","submitter":"Frank Maximus"},{"authorTime":"2018-05-03 19:02:00","codes":[{"authorDate":"2019-08-02 20:19:44","commitOrder":4,"curCode":"    public void execute() throws  ResourceUnavailableException, InsufficientCapacityException, ResourceAllocationException, ConcurrentOperationException {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getVmSnapShotId()));\n        UserVm result = _vmSnapshotService.revertToSnapshot(getVmSnapShotId());\n        if (result != null) {\n            UserVmResponse response = _responseGenerator.createUserVmResponse(ResponseView.Restricted,\n                    \"virtualmachine\", result).get(0);\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to revert VM snapshot\");\n        }\n    }\n","date":"2019-08-02 20:19:44","endLine":87,"groupId":"17263","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8c/3510b820104c000b639b1f5f1fe6732fb421db.src","preCode":"    public void execute() throws  ResourceUnavailableException, InsufficientCapacityException, ResourceAllocationException, ConcurrentOperationException {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getVmSnapShotId()));\n        UserVm result = _vmSnapshotService.revertToSnapshot(getVmSnapShotId());\n        if (result != null) {\n            UserVmResponse response = _responseGenerator.createUserVmResponse(getResponseView(),\n                    \"virtualmachine\", result).get(0);\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to revert VM snapshot\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/vmsnapshot/RevertToVMSnapshotCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2018-05-03 19:02:00","commitOrder":4,"curCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getId()));\n        boolean result = _vmSnapshotService.deleteVMSnapshot(getId());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete vm snapshot\");\n        }\n    }\n","date":"2018-05-03 19:02:00","endLine":80,"groupId":"6769","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/03/c9d43d9e2d9c4ed22c4dae916e199db926118f.src","preCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getId()));\n        boolean result = _vmSnapshotService.deleteVMSnapshot(getId());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete vm snapshot\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/vmsnapshot/DeleteVMSnapshotCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"N"}],"commitId":"3dad7f313404546a7a6f46951e44c91240df5b84","commitMessage":"@@@Merge pull request #3537 from shapeblue/upload-iso-template-fix\n\nRevert #3152","date":"2019-08-02 20:19:44","modifiedFileCount":"111","status":"M","submitter":"Andrija Panic"},{"authorTime":"2018-05-03 19:02:00","codes":[{"authorDate":"2019-09-25 12:51:35","commitOrder":5,"curCode":"    public void execute() throws  ResourceUnavailableException, InsufficientCapacityException, ResourceAllocationException, ConcurrentOperationException {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getVmSnapShotId()));\n        UserVm result = _vmSnapshotService.revertToSnapshot(getVmSnapShotId());\n        if (result != null) {\n            UserVmResponse response = _responseGenerator.createUserVmResponse(getResponseView(),\n                    \"virtualmachine\", result).get(0);\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to revert VM snapshot\");\n        }\n    }\n","date":"2019-09-25 12:51:35","endLine":88,"groupId":"102427","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/90/76ac2a8b33cc78959fa97d2d640ed3feddca86.src","preCode":"    public void execute() throws  ResourceUnavailableException, InsufficientCapacityException, ResourceAllocationException, ConcurrentOperationException {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getVmSnapShotId()));\n        UserVm result = _vmSnapshotService.revertToSnapshot(getVmSnapShotId());\n        if (result != null) {\n            UserVmResponse response = _responseGenerator.createUserVmResponse(ResponseView.Restricted,\n                    \"virtualmachine\", result).get(0);\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to revert VM snapshot\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/vmsnapshot/RevertToVMSnapshotCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2018-05-03 19:02:00","commitOrder":5,"curCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getId()));\n        boolean result = _vmSnapshotService.deleteVMSnapshot(getId());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete vm snapshot\");\n        }\n    }\n","date":"2018-05-03 19:02:00","endLine":80,"groupId":"102427","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/03/c9d43d9e2d9c4ed22c4dae916e199db926118f.src","preCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"vmsnapshot id: \" + this._uuidMgr.getUuid(VMSnapshot.class, getId()));\n        boolean result = _vmSnapshotService.deleteVMSnapshot(getId());\n        if (result) {\n            SuccessResponse response = new SuccessResponse(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to delete vm snapshot\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/vmsnapshot/DeleteVMSnapshotCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"N"}],"commitId":"7f91964aa918657c77156915020c24d496658e5d","commitMessage":"@@@refactoring: Remove duplicate code (by Frank/Nuage) (#3538)\n\nRefactor: Cleanup duplicate code\n\nMake use of Java 8 default implementation in interfaces. \nto remove code duplication between XxxCmd and XxxCmdAsAdmin.\nRefactor checkFormat by pre-calculating the supported\nextensions. Also make use of this in ImageStoreUtil.\nMakes it easier to add new file and compression formats.","date":"2019-09-25 12:51:35","modifiedFileCount":"112","status":"M","submitter":"Rohit Yadav"}]
