[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testFindSourceNatIP() throws InsufficientAddressCapacityException, ConcurrentOperationException {\n        \r\n        final PublicIp publicIp = mock(PublicIp.class);\n        when(vpcMgr.assignSourceNatIpAddressToVpc(mockOwner, mockVpc)).thenReturn(publicIp);\n        deployment.isPublicNetwork = true;\n\n        \r\n        deployment.findSourceNatIP();\n\n        \r\n        assertEquals(\"SourceNatIp returned by the VpcManager was not correctly set\", publicIp, deployment.sourceNatIp);\n    }\n","date":"2018-01-20 05:49:27","endLine":277,"groupId":"14075","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindSourceNatIP","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e4/ef9f5fc2728578d997b70687fb31be31fa1514.src","preCode":"    public void testFindSourceNatIP() throws InsufficientAddressCapacityException, ConcurrentOperationException {\n        \r\n        final PublicIp publicIp = mock(PublicIp.class);\n        when(vpcMgr.assignSourceNatIpAddressToVpc(mockOwner, mockVpc)).thenReturn(publicIp);\n        deployment.isPublicNetwork = true;\n\n        \r\n        deployment.findSourceNatIP();\n\n        \r\n        assertEquals(\"SourceNatIp returned by the VpcManager was not correctly set\", publicIp, deployment.sourceNatIp);\n    }\n","realPath":"server/src/test/java/org/cloud/network/router/deployment/VpcRouterDeploymentDefinitionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testFindSourceNatIPNonPublicNw() throws InsufficientAddressCapacityException, ConcurrentOperationException {\n        \r\n        final PublicIp sourceNatIp = mock(PublicIp.class);\n        when(mockIpAddrMgr.assignSourceNatIpAddressToGuestNetwork(\n                mockOwner, mockNw)).thenReturn(sourceNatIp);\n        deployment.isPublicNetwork = false;\n\n        \r\n        assertNull(deployment.sourceNatIp);\n        \r\n        deployment.findSourceNatIP();\n\n        \r\n        assertEquals(\"SourceNatIP should remain null given a non public network\",\n                null, deployment.sourceNatIp);\n    }\n","date":"2018-01-20 05:49:27","endLine":666,"groupId":"16251","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindSourceNatIPNonPublicNw","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/61/95387dbe228ce289cc127e6db0af2168a6a210.src","preCode":"    public void testFindSourceNatIPNonPublicNw() throws InsufficientAddressCapacityException, ConcurrentOperationException {\n        \r\n        final PublicIp sourceNatIp = mock(PublicIp.class);\n        when(mockIpAddrMgr.assignSourceNatIpAddressToGuestNetwork(\n                mockOwner, mockNw)).thenReturn(sourceNatIp);\n        deployment.isPublicNetwork = false;\n\n        \r\n        assertNull(deployment.sourceNatIp);\n        \r\n        deployment.findSourceNatIP();\n\n        \r\n        assertEquals(\"SourceNatIP should remain null given a non public network\",\n                null, deployment.sourceNatIp);\n    }\n","realPath":"server/src/test/java/org/cloud/network/router/deployment/RouterDeploymentDefinitionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":651,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2020-02-12 15:28:25","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void testFindSourceNatIP() throws InsufficientAddressCapacityException, ConcurrentOperationException {\n        \r\n        final PublicIp publicIp = mock(PublicIp.class);\n        when(vpcMgr.assignSourceNatIpAddressToVpc(mockOwner, mockVpc)).thenReturn(publicIp);\n        deployment.isPublicNetwork = true;\n\n        \r\n        deployment.findSourceNatIP();\n\n        \r\n        assertEquals(\"SourceNatIp returned by the VpcManager was not correctly set\", publicIp, deployment.sourceNatIp);\n    }\n","date":"2018-01-20 05:49:27","endLine":277,"groupId":"101268","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindSourceNatIP","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e4/ef9f5fc2728578d997b70687fb31be31fa1514.src","preCode":"    public void testFindSourceNatIP() throws InsufficientAddressCapacityException, ConcurrentOperationException {\n        \r\n        final PublicIp publicIp = mock(PublicIp.class);\n        when(vpcMgr.assignSourceNatIpAddressToVpc(mockOwner, mockVpc)).thenReturn(publicIp);\n        deployment.isPublicNetwork = true;\n\n        \r\n        deployment.findSourceNatIP();\n\n        \r\n        assertEquals(\"SourceNatIp returned by the VpcManager was not correctly set\", publicIp, deployment.sourceNatIp);\n    }\n","realPath":"server/src/test/java/org/cloud/network/router/deployment/VpcRouterDeploymentDefinitionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"N"},{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void testFindSourceNatIPNonPublicNw() throws InsufficientAddressCapacityException, ConcurrentOperationException {\n        \r\n        final PublicIp sourceNatIp = mock(PublicIp.class);\n        lenient().when(mockIpAddrMgr.assignSourceNatIpAddressToGuestNetwork(\n                mockOwner, mockNw)).thenReturn(sourceNatIp);\n        deployment.isPublicNetwork = false;\n\n        \r\n        assertNull(deployment.sourceNatIp);\n        \r\n        deployment.findSourceNatIP();\n\n        \r\n        assertEquals(\"SourceNatIP should remain null given a non public network\",\n                null, deployment.sourceNatIp);\n    }\n","date":"2020-02-12 15:28:25","endLine":667,"groupId":"101268","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testFindSourceNatIPNonPublicNw","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/6f/a1759884d981b0a9fe5956c4f0e8dd209f8c2f.src","preCode":"    public void testFindSourceNatIPNonPublicNw() throws InsufficientAddressCapacityException, ConcurrentOperationException {\n        \r\n        final PublicIp sourceNatIp = mock(PublicIp.class);\n        when(mockIpAddrMgr.assignSourceNatIpAddressToGuestNetwork(\n                mockOwner, mockNw)).thenReturn(sourceNatIp);\n        deployment.isPublicNetwork = false;\n\n        \r\n        assertNull(deployment.sourceNatIp);\n        \r\n        deployment.findSourceNatIP();\n\n        \r\n        assertEquals(\"SourceNatIP should remain null given a non public network\",\n                null, deployment.sourceNatIp);\n    }\n","realPath":"server/src/test/java/org/cloud/network/router/deployment/RouterDeploymentDefinitionTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":652,"status":"M"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
