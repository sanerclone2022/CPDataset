[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testTakeSnapshot() throws URISyntaxException {\n        SnapshotVO snapshotVO = createSnapshotInDb();\n        DataStore store = createDataStore();\n        try {\n            SnapshotInfo snapshotInfo = snapshotDataFactory.getSnapshot(snapshotVO.getId(), store);\n            SnapshotResult result = snapshotService.takeSnapshot(snapshotInfo);\n            Assert.assertTrue(result.isSuccess());\n            SnapshotDataStoreVO storeRef = snapshotDataStoreDao.findByStoreSnapshot(store.getRole(), store.getId(), snapshotVO.getId());\n            Assert.assertTrue(storeRef != null);\n            Assert.assertTrue(storeRef.getState() == ObjectInDataStoreStateMachine.State.Ready);\n            snapshotInfo = result.getSnashot();\n            boolean deletResult = snapshotService.deleteSnapshot(snapshotInfo);\n            Assert.assertTrue(deletResult);\n            snapshotDataStoreDao.expunge(storeRef.getId());\n        } finally {\n            snapshotDao.expunge(snapshotVO.getId());\n            primaryDataStoreDao.remove(store.getId());\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":272,"groupId":"13118","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTakeSnapshot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8c/7b06d872ed4fca1d566c2b36174753f4e701a1.src","preCode":"    public void testTakeSnapshot() throws URISyntaxException {\n        SnapshotVO snapshotVO = createSnapshotInDb();\n        DataStore store = createDataStore();\n        try {\n            SnapshotInfo snapshotInfo = snapshotDataFactory.getSnapshot(snapshotVO.getId(), store);\n            SnapshotResult result = snapshotService.takeSnapshot(snapshotInfo);\n            Assert.assertTrue(result.isSuccess());\n            SnapshotDataStoreVO storeRef = snapshotDataStoreDao.findByStoreSnapshot(store.getRole(), store.getId(), snapshotVO.getId());\n            Assert.assertTrue(storeRef != null);\n            Assert.assertTrue(storeRef.getState() == ObjectInDataStoreStateMachine.State.Ready);\n            snapshotInfo = result.getSnashot();\n            boolean deletResult = snapshotService.deleteSnapshot(snapshotInfo);\n            Assert.assertTrue(deletResult);\n            snapshotDataStoreDao.expunge(storeRef.getId());\n        } finally {\n            snapshotDao.expunge(snapshotVO.getId());\n            primaryDataStoreDao.remove(store.getId());\n        }\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/SnapshotTestWithFakeData.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void testTakeSnapshotWithFailed() throws URISyntaxException {\n        SnapshotVO snapshotVO = createSnapshotInDb();\n        DataStore store = null;\n        try {\n            store = createDataStore();\n            FakePrimaryDataStoreDriver dataStoreDriver = (FakePrimaryDataStoreDriver)store.getDriver();\n            dataStoreDriver.makeTakeSnapshotSucceed(false);\n            SnapshotInfo snapshotInfo = snapshotDataFactory.getSnapshot(snapshotVO.getId(), store);\n            SnapshotResult result = snapshotService.takeSnapshot(snapshotInfo);\n            Assert.assertFalse(result.isSuccess());\n            SnapshotDataStoreVO storeRef = snapshotDataStoreDao.findByStoreSnapshot(store.getRole(), store.getId(), snapshotVO.getId());\n            Assert.assertTrue(storeRef == null);\n        } finally {\n            snapshotDao.expunge(snapshotVO.getId());\n            if (store != null) {\n                primaryDataStoreDao.remove(store.getId());\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":293,"groupId":"13119","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTakeSnapshotWithFailed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8c/7b06d872ed4fca1d566c2b36174753f4e701a1.src","preCode":"    public void testTakeSnapshotWithFailed() throws URISyntaxException {\n        SnapshotVO snapshotVO = createSnapshotInDb();\n        DataStore store = null;\n        try {\n            store = createDataStore();\n            FakePrimaryDataStoreDriver dataStoreDriver = (FakePrimaryDataStoreDriver)store.getDriver();\n            dataStoreDriver.makeTakeSnapshotSucceed(false);\n            SnapshotInfo snapshotInfo = snapshotDataFactory.getSnapshot(snapshotVO.getId(), store);\n            SnapshotResult result = snapshotService.takeSnapshot(snapshotInfo);\n            Assert.assertFalse(result.isSuccess());\n            SnapshotDataStoreVO storeRef = snapshotDataStoreDao.findByStoreSnapshot(store.getRole(), store.getId(), snapshotVO.getId());\n            Assert.assertTrue(storeRef == null);\n        } finally {\n            snapshotDao.expunge(snapshotVO.getId());\n            if (store != null) {\n                primaryDataStoreDao.remove(store.getId());\n            }\n        }\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/SnapshotTestWithFakeData.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":275,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-23 19:19:36","commitOrder":2,"curCode":"    public void testTakeSnapshot() throws URISyntaxException {\n        SnapshotVO snapshotVO = createSnapshotInDb();\n        DataStore store = createDataStore();\n        try {\n            SnapshotInfo snapshotInfo = snapshotDataFactory.getSnapshot(snapshotVO.getId(), store);\n            SnapshotResult result = snapshotService.takeSnapshot(snapshotInfo);\n            Assert.assertTrue(result.isSuccess());\n            SnapshotDataStoreVO storeRef = snapshotDataStoreDao.findByStoreSnapshot(store.getRole(), store.getId(), snapshotVO.getId());\n            Assert.assertTrue(storeRef != null);\n            Assert.assertTrue(storeRef.getState() == ObjectInDataStoreStateMachine.State.Ready);\n            snapshotInfo = result.getSnapshot();\n            boolean deletResult = snapshotService.deleteSnapshot(snapshotInfo);\n            Assert.assertTrue(deletResult);\n            snapshotDataStoreDao.expunge(storeRef.getId());\n        } finally {\n            snapshotDao.expunge(snapshotVO.getId());\n            primaryDataStoreDao.remove(store.getId());\n        }\n    }\n","date":"2018-01-23 19:19:36","endLine":272,"groupId":"10775","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTakeSnapshot","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a3/961ace64bb3db9ada012e3b5b54f164f77dc3e.src","preCode":"    public void testTakeSnapshot() throws URISyntaxException {\n        SnapshotVO snapshotVO = createSnapshotInDb();\n        DataStore store = createDataStore();\n        try {\n            SnapshotInfo snapshotInfo = snapshotDataFactory.getSnapshot(snapshotVO.getId(), store);\n            SnapshotResult result = snapshotService.takeSnapshot(snapshotInfo);\n            Assert.assertTrue(result.isSuccess());\n            SnapshotDataStoreVO storeRef = snapshotDataStoreDao.findByStoreSnapshot(store.getRole(), store.getId(), snapshotVO.getId());\n            Assert.assertTrue(storeRef != null);\n            Assert.assertTrue(storeRef.getState() == ObjectInDataStoreStateMachine.State.Ready);\n            snapshotInfo = result.getSnashot();\n            boolean deletResult = snapshotService.deleteSnapshot(snapshotInfo);\n            Assert.assertTrue(deletResult);\n            snapshotDataStoreDao.expunge(storeRef.getId());\n        } finally {\n            snapshotDao.expunge(snapshotVO.getId());\n            primaryDataStoreDao.remove(store.getId());\n        }\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/SnapshotTestWithFakeData.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void testTakeSnapshotWithFailed() throws URISyntaxException {\n        SnapshotVO snapshotVO = createSnapshotInDb();\n        DataStore store = null;\n        try {\n            store = createDataStore();\n            FakePrimaryDataStoreDriver dataStoreDriver = (FakePrimaryDataStoreDriver)store.getDriver();\n            dataStoreDriver.makeTakeSnapshotSucceed(false);\n            SnapshotInfo snapshotInfo = snapshotDataFactory.getSnapshot(snapshotVO.getId(), store);\n            SnapshotResult result = snapshotService.takeSnapshot(snapshotInfo);\n            Assert.assertFalse(result.isSuccess());\n            SnapshotDataStoreVO storeRef = snapshotDataStoreDao.findByStoreSnapshot(store.getRole(), store.getId(), snapshotVO.getId());\n            Assert.assertTrue(storeRef == null);\n        } finally {\n            snapshotDao.expunge(snapshotVO.getId());\n            if (store != null) {\n                primaryDataStoreDao.remove(store.getId());\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":293,"groupId":"10775","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTakeSnapshotWithFailed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8c/7b06d872ed4fca1d566c2b36174753f4e701a1.src","preCode":"    public void testTakeSnapshotWithFailed() throws URISyntaxException {\n        SnapshotVO snapshotVO = createSnapshotInDb();\n        DataStore store = null;\n        try {\n            store = createDataStore();\n            FakePrimaryDataStoreDriver dataStoreDriver = (FakePrimaryDataStoreDriver)store.getDriver();\n            dataStoreDriver.makeTakeSnapshotSucceed(false);\n            SnapshotInfo snapshotInfo = snapshotDataFactory.getSnapshot(snapshotVO.getId(), store);\n            SnapshotResult result = snapshotService.takeSnapshot(snapshotInfo);\n            Assert.assertFalse(result.isSuccess());\n            SnapshotDataStoreVO storeRef = snapshotDataStoreDao.findByStoreSnapshot(store.getRole(), store.getId(), snapshotVO.getId());\n            Assert.assertTrue(storeRef == null);\n        } finally {\n            snapshotDao.expunge(snapshotVO.getId());\n            if (store != null) {\n                primaryDataStoreDao.remove(store.getId());\n            }\n        }\n    }\n","realPath":"engine/storage/integration-test/src/test/java/org/apache/cloudstack/storage/test/SnapshotTestWithFakeData.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":275,"status":"N"}],"commitId":"c591c5ad3e270e5e62166a7f1ff6f9895d4b102c","commitMessage":"@@@CLOUDSTACK-10248: Fix errors that appeared after #2283 (#2417)\n\nThis fixes move refactoring error introduced in #2283 \nFor instance.  the class DatadiskTO is supposed to be in com.cloud.agent.api.to package. However.  the folder structure it was placed in is com.cloud.agent.api.api.to.\n\nSkip tests for cloud-plugin-hypervisor-ovm3:\nFor some unknown reason.  there are quite a lot of broken test cases for cloud-plugin-hypervisor-ovm3. They might have appeared after some dependency upgrade and was overlooked by the person updating them. I checked them to see if they could be fixed.  but these tests are not developed in a clear and clean manner. On top of that.  we do not see (at least I) people using OVM3-hypervisor with ACS. Therefore.  I decided to skip them.\n\nIdentention corrected to use spaces instead of tabs in XML files\n","date":"2018-01-23 19:19:36","modifiedFileCount":"9","status":"M","submitter":"Rafael Weing?rtner"}]
