[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public static VirtualMachineMO createWorkerVM(VmwareHypervisorHost hyperHost, DatastoreMO dsMo, String vmName) throws Exception {\n\n        \r\n        \r\n        ManagedObjectReference morCluster = hyperHost.getHyperHostCluster();\n        if (morCluster != null)\n            hyperHost = new ClusterMO(hyperHost.getContext(), morCluster);\n\n        VirtualMachineMO workingVM = null;\n        VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n        vmConfig.setName(vmName);\n        vmConfig.setMemoryMB((long)4);\n        vmConfig.setNumCPUs(1);\n        vmConfig.setGuestId(VirtualMachineGuestOsIdentifier.OTHER_GUEST.value());\n        VirtualMachineFileInfo fileInfo = new VirtualMachineFileInfo();\n        fileInfo.setVmPathName(dsMo.getDatastoreRootPath());\n        vmConfig.setFiles(fileInfo);\n\n        VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n        scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n        scsiController.setBusNumber(0);\n        scsiController.setKey(1);\n        VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n        scsiControllerSpec.setDevice(scsiController);\n        scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n        vmConfig.getDeviceChange().add(scsiControllerSpec);\n        if (hyperHost.createVm(vmConfig)) {\n            \r\n            for (int i = 0; i < 10 && workingVM == null; i++) {\n                workingVM = hyperHost.findVmOnHyperHost(vmName);\n\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    s_logger.debug(\"[ignored] interupted while waiting to config vm.\");\n                }\n            }\n        }\n\n        if (workingVM != null) {\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER, \"true\");\n            String workerTag = String.format(\"%d-%s\", System.currentTimeMillis(), hyperHost.getContext().getStockObject(\"noderuninfo\"));\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER_TAG, workerTag);\n        }\n        return workingVM;\n    }\n","date":"2018-01-20 05:49:27","endLine":1621,"groupId":"20569","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createWorkerVM","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdsMo@StringvmName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ba/b697aaafc2120f9547512aabee428747ec875b.src","preCode":"    public static VirtualMachineMO createWorkerVM(VmwareHypervisorHost hyperHost, DatastoreMO dsMo, String vmName) throws Exception {\n\n        \r\n        \r\n        ManagedObjectReference morCluster = hyperHost.getHyperHostCluster();\n        if (morCluster != null)\n            hyperHost = new ClusterMO(hyperHost.getContext(), morCluster);\n\n        VirtualMachineMO workingVM = null;\n        VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n        vmConfig.setName(vmName);\n        vmConfig.setMemoryMB((long)4);\n        vmConfig.setNumCPUs(1);\n        vmConfig.setGuestId(VirtualMachineGuestOsIdentifier.OTHER_GUEST.value());\n        VirtualMachineFileInfo fileInfo = new VirtualMachineFileInfo();\n        fileInfo.setVmPathName(dsMo.getDatastoreRootPath());\n        vmConfig.setFiles(fileInfo);\n\n        VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n        scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n        scsiController.setBusNumber(0);\n        scsiController.setKey(1);\n        VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n        scsiControllerSpec.setDevice(scsiController);\n        scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n        vmConfig.getDeviceChange().add(scsiControllerSpec);\n        if (hyperHost.createVm(vmConfig)) {\n            \r\n            for (int i = 0; i < 10 && workingVM == null; i++) {\n                workingVM = hyperHost.findVmOnHyperHost(vmName);\n\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    s_logger.debug(\"[ignored] interupted while waiting to config vm.\");\n                }\n            }\n        }\n\n        if (workingVM != null) {\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER, \"true\");\n            String workerTag = String.format(\"%d-%s\", System.currentTimeMillis(), hyperHost.getContext().getStockObject(\"noderuninfo\"));\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER_TAG, workerTag);\n        }\n        return workingVM;\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1575,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void ensureScsiDeviceController() throws Exception {\n        int scsiControllerKey = getScsiDeviceControllerKeyNoException();\n        if (scsiControllerKey < 0) {\n            VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n\n            \r\n            VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n            scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n            scsiController.setBusNumber(0);\n            scsiController.setKey(1);\n            VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n            scsiControllerSpec.setDevice(scsiController);\n            scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfig.getDeviceChange().add(scsiControllerSpec);\n            if (configureVm(vmConfig)) {\n                throw new Exception(\"Unable to add Scsi controller\");\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":2338,"groupId":"20569","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureScsiDeviceController","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/00/78793df8d00859a1254d621bc57968df6886ce.src","preCode":"    public void ensureScsiDeviceController() throws Exception {\n        int scsiControllerKey = getScsiDeviceControllerKeyNoException();\n        if (scsiControllerKey < 0) {\n            VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n\n            \r\n            VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n            scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n            scsiController.setBusNumber(0);\n            scsiController.setKey(1);\n            VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n            scsiControllerSpec.setDevice(scsiController);\n            scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfig.getDeviceChange().add(scsiControllerSpec);\n            if (configureVm(vmConfig)) {\n                throw new Exception(\"Unable to add Scsi controller\");\n            }\n        }\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2319,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-10-09 23:06:07","commitOrder":2,"curCode":"    public static VirtualMachineMO createWorkerVM(VmwareHypervisorHost hyperHost, DatastoreMO dsMo, String vmName, String hardwareVersion) throws Exception {\n\n        \r\n        \r\n        ManagedObjectReference morCluster = hyperHost.getHyperHostCluster();\n        if (morCluster != null)\n            hyperHost = new ClusterMO(hyperHost.getContext(), morCluster);\n\n        VirtualMachineMO workingVM = null;\n        VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n        vmConfig.setName(vmName);\n        if (hardwareVersion != null){\n            vmConfig.setVersion((\"vmx-\" + hardwareVersion));\n        }  else {\n            ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), hyperHost.getHyperHostCluster());\n            DatacenterMO dataCenterMo = new DatacenterMO(hyperHost.getContext(), hyperHost.getHyperHostDatacenter());\n            setVMHardwareVersion(vmConfig, clusterMo, dataCenterMo);\n        }\n        vmConfig.setMemoryMB((long)4);\n        vmConfig.setNumCPUs(1);\n        vmConfig.setGuestId(VirtualMachineGuestOsIdentifier.OTHER_GUEST.value());\n        VirtualMachineFileInfo fileInfo = new VirtualMachineFileInfo();\n        fileInfo.setVmPathName(dsMo.getDatastoreRootPath());\n        vmConfig.setFiles(fileInfo);\n\n        VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n        scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n        scsiController.setBusNumber(0);\n        scsiController.setKey(1);\n        VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n        scsiControllerSpec.setDevice(scsiController);\n        scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n        vmConfig.getDeviceChange().add(scsiControllerSpec);\n        if (hyperHost.createVm(vmConfig)) {\n            \r\n            for (int i = 0; i < 10 && workingVM == null; i++) {\n                workingVM = hyperHost.findVmOnHyperHost(vmName);\n\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    s_logger.debug(\"[ignored] interupted while waiting to config vm.\");\n                }\n            }\n        }\n\n        if (workingVM != null) {\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER, \"true\");\n            String workerTag = String.format(\"%d-%s\", System.currentTimeMillis(), hyperHost.getContext().getStockObject(\"noderuninfo\"));\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER_TAG, workerTag);\n        }\n        return workingVM;\n    }\n","date":"2020-10-09 23:06:07","endLine":1660,"groupId":"20569","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createWorkerVM","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdsMo@StringvmName@StringhardwareVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/12/42d25f90c1c34e2fdaa7f352d705cd541a32aa.src","preCode":"    public static VirtualMachineMO createWorkerVM(VmwareHypervisorHost hyperHost, DatastoreMO dsMo, String vmName) throws Exception {\n\n        \r\n        \r\n        ManagedObjectReference morCluster = hyperHost.getHyperHostCluster();\n        if (morCluster != null)\n            hyperHost = new ClusterMO(hyperHost.getContext(), morCluster);\n\n        VirtualMachineMO workingVM = null;\n        VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n        vmConfig.setName(vmName);\n        vmConfig.setMemoryMB((long)4);\n        vmConfig.setNumCPUs(1);\n        vmConfig.setGuestId(VirtualMachineGuestOsIdentifier.OTHER_GUEST.value());\n        VirtualMachineFileInfo fileInfo = new VirtualMachineFileInfo();\n        fileInfo.setVmPathName(dsMo.getDatastoreRootPath());\n        vmConfig.setFiles(fileInfo);\n\n        VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n        scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n        scsiController.setBusNumber(0);\n        scsiController.setKey(1);\n        VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n        scsiControllerSpec.setDevice(scsiController);\n        scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n        vmConfig.getDeviceChange().add(scsiControllerSpec);\n        if (hyperHost.createVm(vmConfig)) {\n            \r\n            for (int i = 0; i < 10 && workingVM == null; i++) {\n                workingVM = hyperHost.findVmOnHyperHost(vmName);\n\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    s_logger.debug(\"[ignored] interupted while waiting to config vm.\");\n                }\n            }\n        }\n\n        if (workingVM != null) {\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER, \"true\");\n            String workerTag = String.format(\"%d-%s\", System.currentTimeMillis(), hyperHost.getContext().getStockObject(\"noderuninfo\"));\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER_TAG, workerTag);\n        }\n        return workingVM;\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1607,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void ensureScsiDeviceController() throws Exception {\n        int scsiControllerKey = getScsiDeviceControllerKeyNoException();\n        if (scsiControllerKey < 0) {\n            VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n\n            \r\n            VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n            scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n            scsiController.setBusNumber(0);\n            scsiController.setKey(1);\n            VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n            scsiControllerSpec.setDevice(scsiController);\n            scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfig.getDeviceChange().add(scsiControllerSpec);\n            if (configureVm(vmConfig)) {\n                throw new Exception(\"Unable to add Scsi controller\");\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":2338,"groupId":"20569","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureScsiDeviceController","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/00/78793df8d00859a1254d621bc57968df6886ce.src","preCode":"    public void ensureScsiDeviceController() throws Exception {\n        int scsiControllerKey = getScsiDeviceControllerKeyNoException();\n        if (scsiControllerKey < 0) {\n            VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n\n            \r\n            VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n            scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n            scsiController.setBusNumber(0);\n            scsiController.setKey(1);\n            VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n            scsiControllerSpec.setDevice(scsiController);\n            scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfig.getDeviceChange().add(scsiControllerSpec);\n            if (configureVm(vmConfig)) {\n                throw new Exception(\"Unable to add Scsi controller\");\n            }\n        }\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2319,"status":"N"}],"commitId":"479ef8aafaa6162daa1d26058d225d885065f4cc","commitMessage":"@@@VMware: match hardware version for worker VM when taking a snapshot (#4321)\n\n* Add hardware version to worker VM\n\n* Added worker VM hardware version when creating a template from a volume and migrating a detached volume\n\n* Add null parameter back that was removed by merge","date":"2020-10-09 23:06:07","modifiedFileCount":"5","status":"M","submitter":"Spaceman1984"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":3,"curCode":"    public static VirtualMachineMO createWorkerVM(VmwareHypervisorHost hyperHost, DatastoreMO dsMo, String vmName, String hardwareVersion) throws Exception {\n\n        \r\n        \r\n        ManagedObjectReference morCluster = hyperHost.getHyperHostCluster();\n        if (morCluster != null)\n            hyperHost = new ClusterMO(hyperHost.getContext(), morCluster);\n\n        if (dsMo.getDatastoreType().equalsIgnoreCase(\"VVOL\") && !vmName.startsWith(CustomFieldConstants.CLOUD_UUID)) {\n            vmName = CustomFieldConstants.CLOUD_UUID + \"-\" + vmName;\n        }\n        VirtualMachineMO workingVM = null;\n        VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n        vmConfig.setName(vmName);\n        if (hardwareVersion != null){\n            vmConfig.setVersion((\"vmx-\" + hardwareVersion));\n        }  else {\n            ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), hyperHost.getHyperHostCluster());\n            DatacenterMO dataCenterMo = new DatacenterMO(hyperHost.getContext(), hyperHost.getHyperHostDatacenter());\n            setVMHardwareVersion(vmConfig, clusterMo, dataCenterMo);\n        }\n        vmConfig.setMemoryMB((long)4);\n        vmConfig.setNumCPUs(1);\n        vmConfig.setGuestId(VirtualMachineGuestOsIdentifier.OTHER_GUEST.value());\n        VirtualMachineFileInfo fileInfo = new VirtualMachineFileInfo();\n        fileInfo.setVmPathName(dsMo.getDatastoreRootPath());\n        vmConfig.setFiles(fileInfo);\n\n        VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n        scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n        scsiController.setBusNumber(0);\n        scsiController.setKey(1);\n        VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n        scsiControllerSpec.setDevice(scsiController);\n        scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n        vmConfig.getDeviceChange().add(scsiControllerSpec);\n        if (hyperHost.createVm(vmConfig)) {\n            \r\n            for (int i = 0; i < 10 && workingVM == null; i++) {\n                workingVM = hyperHost.findVmOnHyperHost(vmName);\n\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    s_logger.debug(\"[ignored] interupted while waiting to config vm.\");\n                }\n            }\n        }\n\n        if (workingVM != null) {\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER, \"true\");\n            String workerTag = String.format(\"%d-%s\", System.currentTimeMillis(), hyperHost.getContext().getStockObject(\"noderuninfo\"));\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER_TAG, workerTag);\n        }\n        return workingVM;\n    }\n","date":"2020-10-26 21:24:14","endLine":1692,"groupId":"20569","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createWorkerVM","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdsMo@StringvmName@StringhardwareVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/37/d97aeaf31316237509f895c58d57b8b7adcad2.src","preCode":"    public static VirtualMachineMO createWorkerVM(VmwareHypervisorHost hyperHost, DatastoreMO dsMo, String vmName, String hardwareVersion) throws Exception {\n\n        \r\n        \r\n        ManagedObjectReference morCluster = hyperHost.getHyperHostCluster();\n        if (morCluster != null)\n            hyperHost = new ClusterMO(hyperHost.getContext(), morCluster);\n\n        VirtualMachineMO workingVM = null;\n        VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n        vmConfig.setName(vmName);\n        if (hardwareVersion != null){\n            vmConfig.setVersion((\"vmx-\" + hardwareVersion));\n        }  else {\n            ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), hyperHost.getHyperHostCluster());\n            DatacenterMO dataCenterMo = new DatacenterMO(hyperHost.getContext(), hyperHost.getHyperHostDatacenter());\n            setVMHardwareVersion(vmConfig, clusterMo, dataCenterMo);\n        }\n        vmConfig.setMemoryMB((long)4);\n        vmConfig.setNumCPUs(1);\n        vmConfig.setGuestId(VirtualMachineGuestOsIdentifier.OTHER_GUEST.value());\n        VirtualMachineFileInfo fileInfo = new VirtualMachineFileInfo();\n        fileInfo.setVmPathName(dsMo.getDatastoreRootPath());\n        vmConfig.setFiles(fileInfo);\n\n        VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n        scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n        scsiController.setBusNumber(0);\n        scsiController.setKey(1);\n        VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n        scsiControllerSpec.setDevice(scsiController);\n        scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n        vmConfig.getDeviceChange().add(scsiControllerSpec);\n        if (hyperHost.createVm(vmConfig)) {\n            \r\n            for (int i = 0; i < 10 && workingVM == null; i++) {\n                workingVM = hyperHost.findVmOnHyperHost(vmName);\n\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    s_logger.debug(\"[ignored] interupted while waiting to config vm.\");\n                }\n            }\n        }\n\n        if (workingVM != null) {\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER, \"true\");\n            String workerTag = String.format(\"%d-%s\", System.currentTimeMillis(), hyperHost.getContext().getStockObject(\"noderuninfo\"));\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER_TAG, workerTag);\n        }\n        return workingVM;\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1636,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    public void ensureScsiDeviceController() throws Exception {\n        int scsiControllerKey = getScsiDeviceControllerKeyNoException();\n        if (scsiControllerKey < 0) {\n            VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n\n            \r\n            VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n            scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n            scsiController.setBusNumber(0);\n            scsiController.setKey(1);\n            VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n            scsiControllerSpec.setDevice(scsiController);\n            scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfig.getDeviceChange().add(scsiControllerSpec);\n            if (configureVm(vmConfig)) {\n                throw new Exception(\"Unable to add Scsi controller\");\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":2338,"groupId":"20569","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureScsiDeviceController","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/00/78793df8d00859a1254d621bc57968df6886ce.src","preCode":"    public void ensureScsiDeviceController() throws Exception {\n        int scsiControllerKey = getScsiDeviceControllerKeyNoException();\n        if (scsiControllerKey < 0) {\n            VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n\n            \r\n            VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n            scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n            scsiController.setBusNumber(0);\n            scsiController.setKey(1);\n            VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n            scsiControllerSpec.setDevice(scsiController);\n            scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfig.getDeviceChange().add(scsiControllerSpec);\n            if (configureVm(vmConfig)) {\n                throw new Exception(\"Unable to add Scsi controller\");\n            }\n        }\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2319,"status":"N"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-04-06 19:20:31","commitOrder":4,"curCode":"    public static VirtualMachineMO createWorkerVM(VmwareHypervisorHost hyperHost, DatastoreMO dsMo, String vmName, String vmxFormattedHardwareVersion) throws Exception {\n\n        \r\n        \r\n        ManagedObjectReference morCluster = hyperHost.getHyperHostCluster();\n        if (morCluster != null)\n            hyperHost = new ClusterMO(hyperHost.getContext(), morCluster);\n\n        if (dsMo.getDatastoreType().equalsIgnoreCase(\"VVOL\") && !vmName.startsWith(CustomFieldConstants.CLOUD_UUID)) {\n            vmName = CustomFieldConstants.CLOUD_UUID + \"-\" + vmName;\n        }\n        VirtualMachineMO workingVM = null;\n        VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n        vmConfig.setName(vmName);\n        if (StringUtils.isNotBlank(vmxFormattedHardwareVersion)){\n            vmConfig.setVersion(vmxFormattedHardwareVersion);\n        }  else {\n            ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), hyperHost.getHyperHostCluster());\n            DatacenterMO dataCenterMo = new DatacenterMO(hyperHost.getContext(), hyperHost.getHyperHostDatacenter());\n            setVMHardwareVersion(vmConfig, clusterMo, dataCenterMo);\n        }\n        vmConfig.setMemoryMB((long)4);\n        vmConfig.setNumCPUs(1);\n        vmConfig.setGuestId(VirtualMachineGuestOsIdentifier.OTHER_GUEST.value());\n        VirtualMachineFileInfo fileInfo = new VirtualMachineFileInfo();\n        fileInfo.setVmPathName(dsMo.getDatastoreRootPath());\n        vmConfig.setFiles(fileInfo);\n\n        VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n        scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n        scsiController.setBusNumber(0);\n        scsiController.setKey(1);\n        VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n        scsiControllerSpec.setDevice(scsiController);\n        scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n        vmConfig.getDeviceChange().add(scsiControllerSpec);\n        if (hyperHost.createVm(vmConfig)) {\n            \r\n            for (int i = 0; i < 10 && workingVM == null; i++) {\n                workingVM = hyperHost.findVmOnHyperHost(vmName);\n\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    s_logger.debug(\"[ignored] interupted while waiting to config vm.\");\n                }\n            }\n        }\n\n        if (workingVM != null) {\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER, \"true\");\n            String workerTag = String.format(\"%d-%s\", System.currentTimeMillis(), hyperHost.getContext().getStockObject(\"noderuninfo\"));\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER_TAG, workerTag);\n        }\n        return workingVM;\n    }\n","date":"2021-04-06 19:20:31","endLine":1738,"groupId":"20569","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createWorkerVM","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdsMo@StringvmName@StringvmxFormattedHardwareVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/89/ed0d1bbdb87cba43db7b6b42fb7e7fc13079d5.src","preCode":"    public static VirtualMachineMO createWorkerVM(VmwareHypervisorHost hyperHost, DatastoreMO dsMo, String vmName, String hardwareVersion) throws Exception {\n\n        \r\n        \r\n        ManagedObjectReference morCluster = hyperHost.getHyperHostCluster();\n        if (morCluster != null)\n            hyperHost = new ClusterMO(hyperHost.getContext(), morCluster);\n\n        if (dsMo.getDatastoreType().equalsIgnoreCase(\"VVOL\") && !vmName.startsWith(CustomFieldConstants.CLOUD_UUID)) {\n            vmName = CustomFieldConstants.CLOUD_UUID + \"-\" + vmName;\n        }\n        VirtualMachineMO workingVM = null;\n        VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n        vmConfig.setName(vmName);\n        if (hardwareVersion != null){\n            vmConfig.setVersion((\"vmx-\" + hardwareVersion));\n        }  else {\n            ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), hyperHost.getHyperHostCluster());\n            DatacenterMO dataCenterMo = new DatacenterMO(hyperHost.getContext(), hyperHost.getHyperHostDatacenter());\n            setVMHardwareVersion(vmConfig, clusterMo, dataCenterMo);\n        }\n        vmConfig.setMemoryMB((long)4);\n        vmConfig.setNumCPUs(1);\n        vmConfig.setGuestId(VirtualMachineGuestOsIdentifier.OTHER_GUEST.value());\n        VirtualMachineFileInfo fileInfo = new VirtualMachineFileInfo();\n        fileInfo.setVmPathName(dsMo.getDatastoreRootPath());\n        vmConfig.setFiles(fileInfo);\n\n        VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n        scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n        scsiController.setBusNumber(0);\n        scsiController.setKey(1);\n        VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n        scsiControllerSpec.setDevice(scsiController);\n        scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n        vmConfig.getDeviceChange().add(scsiControllerSpec);\n        if (hyperHost.createVm(vmConfig)) {\n            \r\n            for (int i = 0; i < 10 && workingVM == null; i++) {\n                workingVM = hyperHost.findVmOnHyperHost(vmName);\n\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    s_logger.debug(\"[ignored] interupted while waiting to config vm.\");\n                }\n            }\n        }\n\n        if (workingVM != null) {\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER, \"true\");\n            String workerTag = String.format(\"%d-%s\", System.currentTimeMillis(), hyperHost.getContext().getStockObject(\"noderuninfo\"));\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER_TAG, workerTag);\n        }\n        return workingVM;\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1682,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":4,"curCode":"    public void ensureScsiDeviceController() throws Exception {\n        int scsiControllerKey = getScsiDeviceControllerKeyNoException();\n        if (scsiControllerKey < 0) {\n            VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n\n            \r\n            VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n            scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n            scsiController.setBusNumber(0);\n            scsiController.setKey(1);\n            VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n            scsiControllerSpec.setDevice(scsiController);\n            scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfig.getDeviceChange().add(scsiControllerSpec);\n            if (configureVm(vmConfig)) {\n                throw new Exception(\"Unable to add Scsi controller\");\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":2338,"groupId":"20569","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureScsiDeviceController","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/00/78793df8d00859a1254d621bc57968df6886ce.src","preCode":"    public void ensureScsiDeviceController() throws Exception {\n        int scsiControllerKey = getScsiDeviceControllerKeyNoException();\n        if (scsiControllerKey < 0) {\n            VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n\n            \r\n            VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n            scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n            scsiController.setBusNumber(0);\n            scsiController.setKey(1);\n            VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n            scsiControllerSpec.setDevice(scsiController);\n            scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfig.getDeviceChange().add(scsiControllerSpec);\n            if (configureVm(vmConfig)) {\n                throw new Exception(\"Unable to add Scsi controller\");\n            }\n        }\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2319,"status":"N"}],"commitId":"76e9c2772b8f850591908b67b328e4aad8f84579","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n","date":"2021-04-06 19:20:31","modifiedFileCount":"4","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-08-31 09:32:27","commitOrder":5,"curCode":"    public static VirtualMachineMO createWorkerVM(VmwareHypervisorHost hyperHost, DatastoreMO dsMo, String vmName, String vmxFormattedHardwareVersion) throws Exception {\n\n        \r\n        \r\n        ManagedObjectReference morCluster = hyperHost.getHyperHostCluster();\n        if (morCluster != null)\n            hyperHost = new ClusterMO(hyperHost.getContext(), morCluster);\n\n        if (dsMo.getDatastoreType().equalsIgnoreCase(\"VVOL\") && !vmName.startsWith(CustomFieldConstants.CLOUD_UUID)) {\n            vmName = CustomFieldConstants.CLOUD_UUID + \"-\" + vmName;\n        }\n        VirtualMachineMO workingVM = null;\n        VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n        vmConfig.setName(vmName);\n        if (StringUtils.isNotBlank(vmxFormattedHardwareVersion)){\n            vmConfig.setVersion(vmxFormattedHardwareVersion);\n        }  else {\n            ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), hyperHost.getHyperHostCluster());\n            DatacenterMO dataCenterMo = new DatacenterMO(hyperHost.getContext(), hyperHost.getHyperHostDatacenter());\n            setVMHardwareVersion(vmConfig, clusterMo, dataCenterMo);\n        }\n        vmConfig.setMemoryMB((long)4);\n        vmConfig.setNumCPUs(1);\n        vmConfig.setGuestId(VirtualMachineGuestOsIdentifier.OTHER_GUEST.value());\n        VirtualMachineFileInfo fileInfo = new VirtualMachineFileInfo();\n        fileInfo.setVmPathName(dsMo.getDatastoreRootPath());\n        vmConfig.setFiles(fileInfo);\n\n        VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n        scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n        scsiController.setBusNumber(0);\n        scsiController.setKey(1);\n        VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n        scsiControllerSpec.setDevice(scsiController);\n        scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n        vmConfig.getDeviceChange().add(scsiControllerSpec);\n        if (hyperHost.createVm(vmConfig)) {\n            \r\n            for (int i = 0; i < 10 && workingVM == null; i++) {\n                workingVM = hyperHost.findVmOnHyperHost(vmName);\n\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    s_logger.debug(\"[ignored] interupted while waiting to config vm.\");\n                }\n            }\n        }\n\n        if (workingVM != null) {\n            workingVM.tagAsWorkerVM();\n        }\n        return workingVM;\n    }\n","date":"2021-08-31 09:32:27","endLine":1733,"groupId":"104426","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createWorkerVM","params":"(VmwareHypervisorHosthyperHost@DatastoreMOdsMo@StringvmName@StringvmxFormattedHardwareVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/11/23852c3b23ac138d11b14fcda5cbbb66faeea9.src","preCode":"    public static VirtualMachineMO createWorkerVM(VmwareHypervisorHost hyperHost, DatastoreMO dsMo, String vmName, String vmxFormattedHardwareVersion) throws Exception {\n\n        \r\n        \r\n        ManagedObjectReference morCluster = hyperHost.getHyperHostCluster();\n        if (morCluster != null)\n            hyperHost = new ClusterMO(hyperHost.getContext(), morCluster);\n\n        if (dsMo.getDatastoreType().equalsIgnoreCase(\"VVOL\") && !vmName.startsWith(CustomFieldConstants.CLOUD_UUID)) {\n            vmName = CustomFieldConstants.CLOUD_UUID + \"-\" + vmName;\n        }\n        VirtualMachineMO workingVM = null;\n        VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n        vmConfig.setName(vmName);\n        if (StringUtils.isNotBlank(vmxFormattedHardwareVersion)){\n            vmConfig.setVersion(vmxFormattedHardwareVersion);\n        }  else {\n            ClusterMO clusterMo = new ClusterMO(hyperHost.getContext(), hyperHost.getHyperHostCluster());\n            DatacenterMO dataCenterMo = new DatacenterMO(hyperHost.getContext(), hyperHost.getHyperHostDatacenter());\n            setVMHardwareVersion(vmConfig, clusterMo, dataCenterMo);\n        }\n        vmConfig.setMemoryMB((long)4);\n        vmConfig.setNumCPUs(1);\n        vmConfig.setGuestId(VirtualMachineGuestOsIdentifier.OTHER_GUEST.value());\n        VirtualMachineFileInfo fileInfo = new VirtualMachineFileInfo();\n        fileInfo.setVmPathName(dsMo.getDatastoreRootPath());\n        vmConfig.setFiles(fileInfo);\n\n        VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n        scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n        scsiController.setBusNumber(0);\n        scsiController.setKey(1);\n        VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n        scsiControllerSpec.setDevice(scsiController);\n        scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n        vmConfig.getDeviceChange().add(scsiControllerSpec);\n        if (hyperHost.createVm(vmConfig)) {\n            \r\n            for (int i = 0; i < 10 && workingVM == null; i++) {\n                workingVM = hyperHost.findVmOnHyperHost(vmName);\n\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    s_logger.debug(\"[ignored] interupted while waiting to config vm.\");\n                }\n            }\n        }\n\n        if (workingVM != null) {\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER, \"true\");\n            String workerTag = String.format(\"%d-%s\", System.currentTimeMillis(), hyperHost.getContext().getStockObject(\"noderuninfo\"));\n            workingVM.setCustomFieldValue(CustomFieldConstants.CLOUD_WORKER_TAG, workerTag);\n        }\n        return workingVM;\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/HypervisorHostHelper.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1679,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":5,"curCode":"    public void ensureScsiDeviceController() throws Exception {\n        int scsiControllerKey = getScsiDeviceControllerKeyNoException();\n        if (scsiControllerKey < 0) {\n            VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n\n            \r\n            VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n            scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n            scsiController.setBusNumber(0);\n            scsiController.setKey(1);\n            VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n            scsiControllerSpec.setDevice(scsiController);\n            scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfig.getDeviceChange().add(scsiControllerSpec);\n            if (configureVm(vmConfig)) {\n                throw new Exception(\"Unable to add Scsi controller\");\n            }\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":2338,"groupId":"104426","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureScsiDeviceController","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/00/78793df8d00859a1254d621bc57968df6886ce.src","preCode":"    public void ensureScsiDeviceController() throws Exception {\n        int scsiControllerKey = getScsiDeviceControllerKeyNoException();\n        if (scsiControllerKey < 0) {\n            VirtualMachineConfigSpec vmConfig = new VirtualMachineConfigSpec();\n\n            \r\n            VirtualLsiLogicController scsiController = new VirtualLsiLogicController();\n            scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);\n            scsiController.setBusNumber(0);\n            scsiController.setKey(1);\n            VirtualDeviceConfigSpec scsiControllerSpec = new VirtualDeviceConfigSpec();\n            scsiControllerSpec.setDevice(scsiController);\n            scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);\n\n            vmConfig.getDeviceChange().add(scsiControllerSpec);\n            if (configureVm(vmConfig)) {\n                throw new Exception(\"Unable to add Scsi controller\");\n            }\n        }\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":2319,"status":"N"}],"commitId":"3ddcf858767ff5f79986457cbbac4c856b73e0bd","commitMessage":"@@@Merge branch '4.15' into main\n","date":"2021-08-31 09:32:27","modifiedFileCount":"4","status":"M","submitter":"nicolas"}]
