[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            CallContext.current().setEventDetails(\"Volume Id: \" + getEntityId() + \" to size \" + getSize() + \"G\");\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","date":"2018-01-20 05:49:27","endLine":188,"groupId":"4545","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/8e/ea632a72ec716514b1cd6b5b94e3bd748df2fb.src","preCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            CallContext.current().setEventDetails(\"Volume Id: \" + getEntityId() + \" to size \" + getSize() + \"G\");\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/ResizeVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","date":"2018-01-20 05:49:27","endLine":153,"groupId":"4545","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a4/8a89b79b4ec623a411dca5e8ad6e61a56dc78d.src","preCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/UploadVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-05-03 19:02:00","commitOrder":2,"curCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            CallContext.current().setEventDetails(\"Volume Id: \" + this._uuidMgr.getUuid(Volume.class, getEntityId()) + \" to size \" + getSize() + \"G\");\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","date":"2018-05-03 19:02:00","endLine":188,"groupId":"4545","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a7/953336ff1d4ad1c88e54b5f80bfc0b588db7ec.src","preCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            CallContext.current().setEventDetails(\"Volume Id: \" + getEntityId() + \" to size \" + getSize() + \"G\");\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/ResizeVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","date":"2018-01-20 05:49:27","endLine":153,"groupId":"4545","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a4/8a89b79b4ec623a411dca5e8ad6e61a56dc78d.src","preCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/UploadVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"N"}],"commitId":"1ff171db902b98df5d172ae468c33a07ea1204d5","commitMessage":"@@@CLOUDSTACK-9781: record resource uuid in events instead of integer id (#1940)\n\nThis changes several event logging to use uuid of resource than integer id when creating API events.","date":"2018-05-03 19:02:00","modifiedFileCount":"72","status":"M","submitter":"jayantpatil1234"},{"authorTime":"2019-07-27 22:51:43","codes":[{"authorDate":"2019-07-27 22:51:43","commitOrder":3,"curCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            CallContext.current().setEventDetails(\"Volume Id: \" + this._uuidMgr.getUuid(Volume.class, getEntityId()) + \" to size \" + getSize() + \"G\");\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(getResponseView(), volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","date":"2019-07-27 22:51:43","endLine":189,"groupId":"4545","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/30/4bb25eefba88bb8cbfcbe7b078202c1216efe9.src","preCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            CallContext.current().setEventDetails(\"Volume Id: \" + this._uuidMgr.getUuid(Volume.class, getEntityId()) + \" to size \" + getSize() + \"G\");\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/ResizeVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2019-07-27 22:51:43","commitOrder":3,"curCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(getResponseView(), volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","date":"2019-07-27 22:51:43","endLine":155,"groupId":"4545","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/23/6a4c8c7a68e96e0d0791baff5d1e199f798b19.src","preCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/UploadVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"7a27e35a612f13a0ce43459b22e01d9b69627220","commitMessage":"@@@Refactoring to remove duplicate code. (#3152)\n\nMake use of Java 8 default implementation in interfaces. \nto remove code duplication between XxxCmd and XxxCmdAsAdmin.\n\nRefactor checkFormat by pre-calculating the supported\nextensions. Also make use of this in ImageStoreUtil.\nMakes it easier to add new file and compression formats.\n","date":"2019-07-27 22:51:43","modifiedFileCount":"111","status":"M","submitter":"Frank Maximus"},{"authorTime":"2019-08-02 20:19:44","codes":[{"authorDate":"2019-08-02 20:19:44","commitOrder":4,"curCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            CallContext.current().setEventDetails(\"Volume Id: \" + this._uuidMgr.getUuid(Volume.class, getEntityId()) + \" to size \" + getSize() + \"G\");\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","date":"2019-08-02 20:19:44","endLine":188,"groupId":"4545","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/21/127a72e9c916155cf34fb0fff991813d5c45eb.src","preCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            CallContext.current().setEventDetails(\"Volume Id: \" + this._uuidMgr.getUuid(Volume.class, getEntityId()) + \" to size \" + getSize() + \"G\");\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(getResponseView(), volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/ResizeVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2019-08-02 20:19:44","commitOrder":4,"curCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","date":"2019-08-02 20:19:44","endLine":154,"groupId":"4545","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/28/02c00aaf3b654eb87d1e997d9eef21ade1128e.src","preCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(getResponseView(), volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/UploadVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"}],"commitId":"3dad7f313404546a7a6f46951e44c91240df5b84","commitMessage":"@@@Merge pull request #3537 from shapeblue/upload-iso-template-fix\n\nRevert #3152","date":"2019-08-02 20:19:44","modifiedFileCount":"111","status":"M","submitter":"Andrija Panic"},{"authorTime":"2019-09-25 12:51:35","codes":[{"authorDate":"2019-09-25 12:51:35","commitOrder":5,"curCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            CallContext.current().setEventDetails(\"Volume Id: \" + this._uuidMgr.getUuid(Volume.class, getEntityId()) + \" to size \" + getSize() + \"G\");\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(getResponseView(), volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","date":"2019-09-25 12:51:35","endLine":189,"groupId":"4545","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/30/4bb25eefba88bb8cbfcbe7b078202c1216efe9.src","preCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            CallContext.current().setEventDetails(\"Volume Id: \" + this._uuidMgr.getUuid(Volume.class, getEntityId()) + \" to size \" + getSize() + \"G\");\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/ResizeVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2019-09-25 12:51:35","commitOrder":5,"curCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(getResponseView(), volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","date":"2019-09-25 12:51:35","endLine":155,"groupId":"4545","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/23/6a4c8c7a68e96e0d0791baff5d1e199f798b19.src","preCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(ResponseView.Restricted, volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/UploadVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"7f91964aa918657c77156915020c24d496658e5d","commitMessage":"@@@refactoring: Remove duplicate code (by Frank/Nuage) (#3538)\n\nRefactor: Cleanup duplicate code\n\nMake use of Java 8 default implementation in interfaces. \nto remove code duplication between XxxCmd and XxxCmdAsAdmin.\nRefactor checkFormat by pre-calculating the supported\nextensions. Also make use of this in ImageStoreUtil.\nMakes it easier to add new file and compression formats.","date":"2019-09-25 12:51:35","modifiedFileCount":"112","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2019-09-25 12:51:35","codes":[{"authorDate":"2020-08-13 18:25:16","commitOrder":6,"curCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            if (size != null) {\n                CallContext.current().setEventDetails(\"Volume Id: \" + this._uuidMgr.getUuid(Volume.class, getEntityId()) + \" to size \" + getSize() + \" GB\");\n            } else {\n                CallContext.current().setEventDetails(\"Volume Id: \" + this._uuidMgr.getUuid(Volume.class, getEntityId()));\n            }\n\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(getResponseView(), volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","date":"2020-08-13 18:25:16","endLine":198,"groupId":"102434","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/24/71c8091b3d02c5f5fb98b7656b0cfabbc4c461.src","preCode":"    public void execute() throws ResourceAllocationException {\n        Volume volume = null;\n        try {\n            CallContext.current().setEventDetails(\"Volume Id: \" + this._uuidMgr.getUuid(Volume.class, getEntityId()) + \" to size \" + getSize() + \"G\");\n            volume = _volumeService.resizeVolume(this);\n        } catch (InvalidParameterValueException ex) {\n            s_logger.info(ex.getMessage());\n            throw new ServerApiException(ApiErrorCode.UNSUPPORTED_ACTION_ERROR, ex.getMessage());\n        }\n\n        if (volume != null) {\n            VolumeResponse response = _responseGenerator.createVolumeResponse(getResponseView(), volume);\n            \r\n            response.setResponseName(getCommandName());\n            setResponseObject(response);\n        } else {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to resize volume\");\n        }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/ResizeVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"},{"authorDate":"2019-09-25 12:51:35","commitOrder":6,"curCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(getResponseView(), volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","date":"2019-09-25 12:51:35","endLine":155,"groupId":"102434","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/23/6a4c8c7a68e96e0d0791baff5d1e199f798b19.src","preCode":"    public void execute() throws ResourceUnavailableException, InsufficientCapacityException, ServerApiException, ConcurrentOperationException,\n        ResourceAllocationException, NetworkRuleConflictException {\n\n            Volume volume = _volumeService.uploadVolume(this);\n            if (volume != null){\n            VolumeResponse response = _responseGenerator.createVolumeResponse(getResponseView(), volume);\n                response.setResponseName(getCommandName());\n                setResponseObject(response);\n            } else {\n                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to upload volume\");\n            }\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/user/volume/UploadVolumeCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"}],"commitId":"b586eb22f1b31f3cab2f2cb1aaeafca4f4646abd","commitMessage":"@@@Human readable sizes in logs (#4207)\n\nThis PR adds outputting human readable byte sizes in the management server logs.  agent logs.  and usage records. A non-dynamic global variable is added (display.human.readable.sizes) to control switching this feature on and off. This setting is sent to the agent on connection and is only read from the database when the management server is started up. The setting is kept in memory by the use of a static field on the NumbersUtil class and is available throughout the codebase.\n\nInstead of seeing things like:\n2020-07-23 15:31:58. 593 DEBUG [c.c.a.t.Request] (AgentManager-Handler-12:null) (logid:) Seq 8-1863645820801253428: Processing: { Ans: .  MgmtId: 52238089807.  via: 8.  Ver: v1.  Flags: 10.  [{\"com.cloud.agent.api.NetworkUsageAnswer\":{\"routerName\":\"r-224-VM\". \"bytesSent\":\"106496\". \"bytesReceived\":\"0\". \"result\":\"true\". \"details\":\"\". \"wait\":\"0\". }}] }\n\nThe KB MB and GB values will be printed out:\n\n2020-07-23 15:31:58. 593 DEBUG [c.c.a.t.Request] (AgentManager-Handler-12:null) (logid:) Seq 8-1863645820801253428: Processing: { Ans: .  MgmtId: 52238089807.  via: 8.  Ver: v1.  Flags: 10.  [{\"com.cloud.agent.api.NetworkUsageAnswer\":{\"routerName\":\"r-224-VM\". \"bytesSent\":\"(104.00 KB) 106496\". \"bytesReceived\":\"(0 bytes) 0\". \"result\":\"true\". \"details\":\"\". \"wait\":\"0\". }}] }\n\nFS: https://cwiki.apache.org/confluence/display/CLOUDSTACK/Human+Readable+Byte+sizes","date":"2020-08-13 18:25:16","modifiedFileCount":"55","status":"M","submitter":"Spaceman1984"}]
