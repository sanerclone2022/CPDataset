[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean isNetworkAvailableInDomain(long networkId, long domainId) {\n        Long networkDomainId = null;\n        Network network = getNetwork(networkId);\n        if (network.getGuestType() != Network.GuestType.Shared) {\n            s_logger.trace(\"Network id=\" + networkId + \" is not shared\");\n            return false;\n        }\n\n        NetworkDomainVO networkDomainMap = _networkDomainDao.getDomainNetworkMapByNetworkId(networkId);\n        if (networkDomainMap == null) {\n            s_logger.trace(\"Network id=\" + networkId + \" is shared, but not domain specific\");\n            return true;\n        } else {\n            networkDomainId = networkDomainMap.getDomainId();\n        }\n\n        if (domainId == networkDomainId.longValue()) {\n            return true;\n        }\n\n        if (networkDomainMap.subdomainAccess) {\n            Set<Long> parentDomains = _domainMgr.getDomainParentIds(domainId);\n\n            if (parentDomains.contains(networkDomainId)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n","date":"2018-01-20 05:49:27","endLine":1831,"groupId":"4410","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"isNetworkAvailableInDomain","params":"(longnetworkId@longdomainId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e5/83b717a16bf390eb5f1aa96040374fb64b9c94.src","preCode":"    public boolean isNetworkAvailableInDomain(long networkId, long domainId) {\n        Long networkDomainId = null;\n        Network network = getNetwork(networkId);\n        if (network.getGuestType() != Network.GuestType.Shared) {\n            s_logger.trace(\"Network id=\" + networkId + \" is not shared\");\n            return false;\n        }\n\n        NetworkDomainVO networkDomainMap = _networkDomainDao.getDomainNetworkMapByNetworkId(networkId);\n        if (networkDomainMap == null) {\n            s_logger.trace(\"Network id=\" + networkId + \" is shared, but not domain specific\");\n            return true;\n        } else {\n            networkDomainId = networkDomainMap.getDomainId();\n        }\n\n        if (domainId == networkDomainId.longValue()) {\n            return true;\n        }\n\n        if (networkDomainMap.subdomainAccess) {\n            Set<Long> parentDomains = _domainMgr.getDomainParentIds(domainId);\n\n            if (parentDomains.contains(networkDomainId)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n","realPath":"server/src/main/java/com/cloud/network/NetworkModelImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1802,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean isAffinityGroupAvailableInDomain(long affinityGroupId, long domainId) {\n        Long groupDomainId = null;\n\n        AffinityGroupDomainMapVO domainMap = _affinityGroupDomainMapDao.findByAffinityGroup(affinityGroupId);\n        if (domainMap == null) {\n            return false;\n        } else {\n            groupDomainId = domainMap.getDomainId();\n        }\n\n        if (domainId == groupDomainId.longValue()) {\n            return true;\n        }\n\n        if (domainMap.subdomainAccess) {\n            Set<Long> parentDomains = _domainMgr.getDomainParentIds(domainId);\n            if (parentDomains.contains(groupDomainId)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n","date":"2018-01-20 05:49:27","endLine":524,"groupId":"4410","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"isAffinityGroupAvailableInDomain","params":"(longaffinityGroupId@longdomainId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/fd/0b937e0690d7f3ac355e33d96a3aef67a475d5.src","preCode":"    public boolean isAffinityGroupAvailableInDomain(long affinityGroupId, long domainId) {\n        Long groupDomainId = null;\n\n        AffinityGroupDomainMapVO domainMap = _affinityGroupDomainMapDao.findByAffinityGroup(affinityGroupId);\n        if (domainMap == null) {\n            return false;\n        } else {\n            groupDomainId = domainMap.getDomainId();\n        }\n\n        if (domainId == groupDomainId.longValue()) {\n            return true;\n        }\n\n        if (domainMap.subdomainAccess) {\n            Set<Long> parentDomains = _domainMgr.getDomainParentIds(domainId);\n            if (parentDomains.contains(groupDomainId)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n","realPath":"server/src/main/java/org/apache/cloudstack/affinity/AffinityGroupServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-02-11 01:32:46","commitOrder":2,"curCode":"    public boolean isNetworkAvailableInDomain(long networkId, long domainId) {\n        Long networkDomainId = null;\n        Network network = getNetwork(networkId);\n        if (network.getGuestType() != GuestType.Shared && network.getGuestType() != GuestType.L2) {\n            s_logger.trace(\"Network id=\" + networkId + \" is not shared or L2\");\n            return false;\n        }\n\n        NetworkDomainVO networkDomainMap = _networkDomainDao.getDomainNetworkMapByNetworkId(networkId);\n        if (networkDomainMap == null) {\n            s_logger.trace(\"Network id=\" + networkId + \" is shared or L2, but not domain specific\");\n            return true;\n        } else {\n            networkDomainId = networkDomainMap.getDomainId();\n        }\n\n        if (domainId == networkDomainId.longValue()) {\n            return true;\n        }\n\n        if (networkDomainMap.subdomainAccess) {\n            Set<Long> parentDomains = _domainMgr.getDomainParentIds(domainId);\n\n            if (parentDomains.contains(networkDomainId)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n","date":"2018-02-11 01:32:46","endLine":1832,"groupId":"101805","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"isNetworkAvailableInDomain","params":"(longnetworkId@longdomainId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a0/08bdfcd1be9af0a6563361e95ab767c8b75a92.src","preCode":"    public boolean isNetworkAvailableInDomain(long networkId, long domainId) {\n        Long networkDomainId = null;\n        Network network = getNetwork(networkId);\n        if (network.getGuestType() != Network.GuestType.Shared) {\n            s_logger.trace(\"Network id=\" + networkId + \" is not shared\");\n            return false;\n        }\n\n        NetworkDomainVO networkDomainMap = _networkDomainDao.getDomainNetworkMapByNetworkId(networkId);\n        if (networkDomainMap == null) {\n            s_logger.trace(\"Network id=\" + networkId + \" is shared, but not domain specific\");\n            return true;\n        } else {\n            networkDomainId = networkDomainMap.getDomainId();\n        }\n\n        if (domainId == networkDomainId.longValue()) {\n            return true;\n        }\n\n        if (networkDomainMap.subdomainAccess) {\n            Set<Long> parentDomains = _domainMgr.getDomainParentIds(domainId);\n\n            if (parentDomains.contains(networkDomainId)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n","realPath":"server/src/main/java/com/cloud/network/NetworkModelImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1803,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public boolean isAffinityGroupAvailableInDomain(long affinityGroupId, long domainId) {\n        Long groupDomainId = null;\n\n        AffinityGroupDomainMapVO domainMap = _affinityGroupDomainMapDao.findByAffinityGroup(affinityGroupId);\n        if (domainMap == null) {\n            return false;\n        } else {\n            groupDomainId = domainMap.getDomainId();\n        }\n\n        if (domainId == groupDomainId.longValue()) {\n            return true;\n        }\n\n        if (domainMap.subdomainAccess) {\n            Set<Long> parentDomains = _domainMgr.getDomainParentIds(domainId);\n            if (parentDomains.contains(groupDomainId)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n","date":"2018-01-20 05:49:27","endLine":524,"groupId":"101805","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"isAffinityGroupAvailableInDomain","params":"(longaffinityGroupId@longdomainId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/fd/0b937e0690d7f3ac355e33d96a3aef67a475d5.src","preCode":"    public boolean isAffinityGroupAvailableInDomain(long affinityGroupId, long domainId) {\n        Long groupDomainId = null;\n\n        AffinityGroupDomainMapVO domainMap = _affinityGroupDomainMapDao.findByAffinityGroup(affinityGroupId);\n        if (domainMap == null) {\n            return false;\n        } else {\n            groupDomainId = domainMap.getDomainId();\n        }\n\n        if (domainId == groupDomainId.longValue()) {\n            return true;\n        }\n\n        if (domainMap.subdomainAccess) {\n            Set<Long> parentDomains = _domainMgr.getDomainParentIds(domainId);\n            if (parentDomains.contains(groupDomainId)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n","realPath":"server/src/main/java/org/apache/cloudstack/affinity/AffinityGroupServiceImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":502,"status":"N"}],"commitId":"b88681de187b99bd4347640ceef150fd15d5a012","commitMessage":"@@@Merge branch '4.11'\n","date":"2018-02-11 01:32:46","modifiedFileCount":"16","status":"M","submitter":"Rohit Yadav"}]
