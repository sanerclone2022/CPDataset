[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":2,"curCode":"    public boolean createFullCloneWithSpecificDisk(String cloneName, ManagedObjectReference morFolder, ManagedObjectReference morResourcePool, ManagedObjectReference morDs, Pair<VirtualDisk, String> volumeDeviceInfo)\n            throws Exception {\n\n        assert (morFolder != null);\n        assert (morResourcePool != null);\n        assert (morDs != null);\n        VirtualDisk requiredDisk = volumeDeviceInfo.first();\n\n        VirtualMachineRelocateSpec rSpec = new VirtualMachineRelocateSpec();\n        List<VirtualMachineRelocateSpecDiskLocator> diskLocator = new ArrayList<VirtualMachineRelocateSpecDiskLocator>(1);\n        VirtualMachineRelocateSpecDiskLocator loc = new VirtualMachineRelocateSpecDiskLocator();\n        loc.setDatastore(morDs);\n        loc.setDiskId(requiredDisk.getKey());\n        loc.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n        diskLocator.add(loc);\n\n        rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n        rSpec.getDisk().addAll(diskLocator);\n        rSpec.setPool(morResourcePool);\n\n        VirtualMachineCloneSpec cloneSpec = new VirtualMachineCloneSpec();\n        cloneSpec.setPowerOn(false);\n        cloneSpec.setTemplate(false);\n        cloneSpec.setLocation(rSpec);\n\n        ManagedObjectReference morTask = _context.getService().cloneVMTask(_mor, morFolder, cloneName, cloneSpec);\n\n        boolean result = _context.getVimClient().waitForTask(morTask);\n        if (result) {\n            _context.waitForTaskProgressDone(morTask);\n            return true;\n        } else {\n            s_logger.error(\"VMware cloneVM_Task failed due to \" + TaskMO.getTaskFailureInfo(_context, morTask));\n        }\n\n        return false;\n    }\n","date":"2020-10-26 21:24:14","endLine":771,"groupId":"19548","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createFullCloneWithSpecificDisk","params":"(StringcloneName@ManagedObjectReferencemorFolder@ManagedObjectReferencemorResourcePool@ManagedObjectReferencemorDs@Pair<VirtualDisk@String>volumeDeviceInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/5f/61b31171ca70b97c77fd3b83ebb72ccac8fc04.src","preCode":"    public boolean createFullCloneWithSpecificDisk(String cloneName, ManagedObjectReference morFolder, ManagedObjectReference morResourcePool, ManagedObjectReference morDs, Pair<VirtualDisk, String> volumeDeviceInfo)\n            throws Exception {\n\n        assert (morFolder != null);\n        assert (morResourcePool != null);\n        assert (morDs != null);\n        VirtualDisk requiredDisk = volumeDeviceInfo.first();\n\n        VirtualMachineRelocateSpec rSpec = new VirtualMachineRelocateSpec();\n        List<VirtualMachineRelocateSpecDiskLocator> diskLocator = new ArrayList<VirtualMachineRelocateSpecDiskLocator>(1);\n        VirtualMachineRelocateSpecDiskLocator loc = new VirtualMachineRelocateSpecDiskLocator();\n        loc.setDatastore(morDs);\n        loc.setDiskId(requiredDisk.getKey());\n        loc.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n        diskLocator.add(loc);\n\n        rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n        rSpec.getDisk().addAll(diskLocator);\n        rSpec.setPool(morResourcePool);\n\n        VirtualMachineCloneSpec cloneSpec = new VirtualMachineCloneSpec();\n        cloneSpec.setPowerOn(false);\n        cloneSpec.setTemplate(false);\n        cloneSpec.setLocation(rSpec);\n\n        ManagedObjectReference morTask = _context.getService().cloneVMTask(_mor, morFolder, cloneName, cloneSpec);\n\n        boolean result = _context.getVimClient().waitForTask(morTask);\n        if (result) {\n            _context.waitForTaskProgressDone(morTask);\n            return true;\n        } else {\n            s_logger.error(\"VMware cloneVM_Task failed due to \" + TaskMO.getTaskFailureInfo(_context, morTask));\n        }\n\n        return false;\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":735,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public boolean createLinkedClone(String cloneName, ManagedObjectReference morBaseSnapshot, ManagedObjectReference morFolder, ManagedObjectReference morResourcePool,\n            ManagedObjectReference morDs) throws Exception {\n\n        assert (morBaseSnapshot != null);\n        assert (morFolder != null);\n        assert (morResourcePool != null);\n        assert (morDs != null);\n\n        VirtualDisk[] independentDisks = getAllIndependentDiskDevice();\n        VirtualMachineRelocateSpec rSpec = new VirtualMachineRelocateSpec();\n        if (independentDisks.length > 0) {\n            List<VirtualMachineRelocateSpecDiskLocator> diskLocator = new ArrayList<VirtualMachineRelocateSpecDiskLocator>(independentDisks.length);\n            for (int i = 0; i < independentDisks.length; i++) {\n                VirtualMachineRelocateSpecDiskLocator loc = new VirtualMachineRelocateSpecDiskLocator();\n                loc.setDatastore(morDs);\n                loc.setDiskId(independentDisks[i].getKey());\n                loc.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n                diskLocator.add(loc);\n            }\n\n            rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.CREATE_NEW_CHILD_DISK_BACKING.value());\n            rSpec.getDisk().addAll(diskLocator);\n        } else {\n            rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.CREATE_NEW_CHILD_DISK_BACKING.value());\n        }\n        rSpec.setPool(morResourcePool);\n\n        VirtualMachineCloneSpec cloneSpec = new VirtualMachineCloneSpec();\n        cloneSpec.setPowerOn(false);\n        cloneSpec.setTemplate(false);\n        cloneSpec.setLocation(rSpec);\n        cloneSpec.setSnapshot(morBaseSnapshot);\n\n        ManagedObjectReference morTask = _context.getService().cloneVMTask(_mor, morFolder, cloneName, cloneSpec);\n\n        boolean result = _context.getVimClient().waitForTask(morTask);\n        if (result) {\n            _context.waitForTaskProgressDone(morTask);\n            return true;\n        } else {\n            s_logger.error(\"VMware cloneVM_Task failed due to \" + TaskMO.getTaskFailureInfo(_context, morTask));\n        }\n\n        return false;\n    }\n","date":"2018-01-20 05:49:27","endLine":774,"groupId":"19548","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createLinkedClone","params":"(StringcloneName@ManagedObjectReferencemorBaseSnapshot@ManagedObjectReferencemorFolder@ManagedObjectReferencemorResourcePool@ManagedObjectReferencemorDs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/00/78793df8d00859a1254d621bc57968df6886ce.src","preCode":"    public boolean createLinkedClone(String cloneName, ManagedObjectReference morBaseSnapshot, ManagedObjectReference morFolder, ManagedObjectReference morResourcePool,\n            ManagedObjectReference morDs) throws Exception {\n\n        assert (morBaseSnapshot != null);\n        assert (morFolder != null);\n        assert (morResourcePool != null);\n        assert (morDs != null);\n\n        VirtualDisk[] independentDisks = getAllIndependentDiskDevice();\n        VirtualMachineRelocateSpec rSpec = new VirtualMachineRelocateSpec();\n        if (independentDisks.length > 0) {\n            List<VirtualMachineRelocateSpecDiskLocator> diskLocator = new ArrayList<VirtualMachineRelocateSpecDiskLocator>(independentDisks.length);\n            for (int i = 0; i < independentDisks.length; i++) {\n                VirtualMachineRelocateSpecDiskLocator loc = new VirtualMachineRelocateSpecDiskLocator();\n                loc.setDatastore(morDs);\n                loc.setDiskId(independentDisks[i].getKey());\n                loc.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n                diskLocator.add(loc);\n            }\n\n            rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.CREATE_NEW_CHILD_DISK_BACKING.value());\n            rSpec.getDisk().addAll(diskLocator);\n        } else {\n            rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.CREATE_NEW_CHILD_DISK_BACKING.value());\n        }\n        rSpec.setPool(morResourcePool);\n\n        VirtualMachineCloneSpec cloneSpec = new VirtualMachineCloneSpec();\n        cloneSpec.setPowerOn(false);\n        cloneSpec.setTemplate(false);\n        cloneSpec.setLocation(rSpec);\n        cloneSpec.setSnapshot(morBaseSnapshot);\n\n        ManagedObjectReference morTask = _context.getService().cloneVMTask(_mor, morFolder, cloneName, cloneSpec);\n\n        boolean result = _context.getVimClient().waitForTask(morTask);\n        if (result) {\n            _context.waitForTaskProgressDone(morTask);\n            return true;\n        } else {\n            s_logger.error(\"VMware cloneVM_Task failed due to \" + TaskMO.getTaskFailureInfo(_context, morTask));\n        }\n\n        return false;\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":730,"status":"NB"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2021-09-03 09:04:12","commitOrder":3,"curCode":"    public boolean createFullCloneWithSpecificDisk(String cloneName, ManagedObjectReference morFolder, ManagedObjectReference morResourcePool, ManagedObjectReference morDs, Pair<VirtualDisk, String> volumeDeviceInfo)\n            throws Exception {\n\n        assert (morFolder != null);\n        assert (morResourcePool != null);\n        assert (morDs != null);\n        VirtualDisk requiredDisk = volumeDeviceInfo.first();\n\n        VirtualMachineRelocateSpec rSpec = new VirtualMachineRelocateSpec();\n        List<VirtualMachineRelocateSpecDiskLocator> diskLocator = new ArrayList<VirtualMachineRelocateSpecDiskLocator>(1);\n        VirtualMachineRelocateSpecDiskLocator loc = new VirtualMachineRelocateSpecDiskLocator();\n        loc.setDatastore(morDs);\n        loc.setDiskId(requiredDisk.getKey());\n        loc.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n        diskLocator.add(loc);\n\n        rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n        rSpec.getDisk().addAll(diskLocator);\n        rSpec.setPool(morResourcePool);\n\n        VirtualMachineCloneSpec cloneSpec = new VirtualMachineCloneSpec();\n        cloneSpec.setPowerOn(false);\n        cloneSpec.setTemplate(false);\n        cloneSpec.setLocation(rSpec);\n\n        ManagedObjectReference morTask = _context.getService().cloneVMTask(_mor, morFolder, cloneName, cloneSpec);\n\n        boolean result = _context.getVimClient().waitForTask(morTask);\n        if (result) {\n            _context.waitForTaskProgressDone(morTask);\n            s_logger.debug(String.format(\"Cloned VM: %s as %s\", getName(), cloneName));\n            return true;\n        } else {\n            s_logger.error(\"VMware cloneVM_Task failed due to \" + TaskMO.getTaskFailureInfo(_context, morTask));\n        }\n\n        return false;\n    }\n","date":"2021-09-03 09:04:12","endLine":791,"groupId":"104428","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createFullCloneWithSpecificDisk","params":"(StringcloneName@ManagedObjectReferencemorFolder@ManagedObjectReferencemorResourcePool@ManagedObjectReferencemorDs@Pair<VirtualDisk@String>volumeDeviceInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/23/8493557c33399e86c386b37a4cc1f5d73a22ed.src","preCode":"    public boolean createFullCloneWithSpecificDisk(String cloneName, ManagedObjectReference morFolder, ManagedObjectReference morResourcePool, ManagedObjectReference morDs, Pair<VirtualDisk, String> volumeDeviceInfo)\n            throws Exception {\n\n        assert (morFolder != null);\n        assert (morResourcePool != null);\n        assert (morDs != null);\n        VirtualDisk requiredDisk = volumeDeviceInfo.first();\n\n        VirtualMachineRelocateSpec rSpec = new VirtualMachineRelocateSpec();\n        List<VirtualMachineRelocateSpecDiskLocator> diskLocator = new ArrayList<VirtualMachineRelocateSpecDiskLocator>(1);\n        VirtualMachineRelocateSpecDiskLocator loc = new VirtualMachineRelocateSpecDiskLocator();\n        loc.setDatastore(morDs);\n        loc.setDiskId(requiredDisk.getKey());\n        loc.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n        diskLocator.add(loc);\n\n        rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n        rSpec.getDisk().addAll(diskLocator);\n        rSpec.setPool(morResourcePool);\n\n        VirtualMachineCloneSpec cloneSpec = new VirtualMachineCloneSpec();\n        cloneSpec.setPowerOn(false);\n        cloneSpec.setTemplate(false);\n        cloneSpec.setLocation(rSpec);\n\n        ManagedObjectReference morTask = _context.getService().cloneVMTask(_mor, morFolder, cloneName, cloneSpec);\n\n        boolean result = _context.getVimClient().waitForTask(morTask);\n        if (result) {\n            _context.waitForTaskProgressDone(morTask);\n            return true;\n        } else {\n            s_logger.error(\"VMware cloneVM_Task failed due to \" + TaskMO.getTaskFailureInfo(_context, morTask));\n        }\n\n        return false;\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":754,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    public boolean createLinkedClone(String cloneName, ManagedObjectReference morBaseSnapshot, ManagedObjectReference morFolder, ManagedObjectReference morResourcePool,\n            ManagedObjectReference morDs) throws Exception {\n\n        assert (morBaseSnapshot != null);\n        assert (morFolder != null);\n        assert (morResourcePool != null);\n        assert (morDs != null);\n\n        VirtualDisk[] independentDisks = getAllIndependentDiskDevice();\n        VirtualMachineRelocateSpec rSpec = new VirtualMachineRelocateSpec();\n        if (independentDisks.length > 0) {\n            List<VirtualMachineRelocateSpecDiskLocator> diskLocator = new ArrayList<VirtualMachineRelocateSpecDiskLocator>(independentDisks.length);\n            for (int i = 0; i < independentDisks.length; i++) {\n                VirtualMachineRelocateSpecDiskLocator loc = new VirtualMachineRelocateSpecDiskLocator();\n                loc.setDatastore(morDs);\n                loc.setDiskId(independentDisks[i].getKey());\n                loc.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n                diskLocator.add(loc);\n            }\n\n            rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.CREATE_NEW_CHILD_DISK_BACKING.value());\n            rSpec.getDisk().addAll(diskLocator);\n        } else {\n            rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.CREATE_NEW_CHILD_DISK_BACKING.value());\n        }\n        rSpec.setPool(morResourcePool);\n\n        VirtualMachineCloneSpec cloneSpec = new VirtualMachineCloneSpec();\n        cloneSpec.setPowerOn(false);\n        cloneSpec.setTemplate(false);\n        cloneSpec.setLocation(rSpec);\n        cloneSpec.setSnapshot(morBaseSnapshot);\n\n        ManagedObjectReference morTask = _context.getService().cloneVMTask(_mor, morFolder, cloneName, cloneSpec);\n\n        boolean result = _context.getVimClient().waitForTask(morTask);\n        if (result) {\n            _context.waitForTaskProgressDone(morTask);\n            return true;\n        } else {\n            s_logger.error(\"VMware cloneVM_Task failed due to \" + TaskMO.getTaskFailureInfo(_context, morTask));\n        }\n\n        return false;\n    }\n","date":"2018-01-20 05:49:27","endLine":774,"groupId":"104428","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createLinkedClone","params":"(StringcloneName@ManagedObjectReferencemorBaseSnapshot@ManagedObjectReferencemorFolder@ManagedObjectReferencemorResourcePool@ManagedObjectReferencemorDs)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/00/78793df8d00859a1254d621bc57968df6886ce.src","preCode":"    public boolean createLinkedClone(String cloneName, ManagedObjectReference morBaseSnapshot, ManagedObjectReference morFolder, ManagedObjectReference morResourcePool,\n            ManagedObjectReference morDs) throws Exception {\n\n        assert (morBaseSnapshot != null);\n        assert (morFolder != null);\n        assert (morResourcePool != null);\n        assert (morDs != null);\n\n        VirtualDisk[] independentDisks = getAllIndependentDiskDevice();\n        VirtualMachineRelocateSpec rSpec = new VirtualMachineRelocateSpec();\n        if (independentDisks.length > 0) {\n            List<VirtualMachineRelocateSpecDiskLocator> diskLocator = new ArrayList<VirtualMachineRelocateSpecDiskLocator>(independentDisks.length);\n            for (int i = 0; i < independentDisks.length; i++) {\n                VirtualMachineRelocateSpecDiskLocator loc = new VirtualMachineRelocateSpecDiskLocator();\n                loc.setDatastore(morDs);\n                loc.setDiskId(independentDisks[i].getKey());\n                loc.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.MOVE_ALL_DISK_BACKINGS_AND_DISALLOW_SHARING.value());\n                diskLocator.add(loc);\n            }\n\n            rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.CREATE_NEW_CHILD_DISK_BACKING.value());\n            rSpec.getDisk().addAll(diskLocator);\n        } else {\n            rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions.CREATE_NEW_CHILD_DISK_BACKING.value());\n        }\n        rSpec.setPool(morResourcePool);\n\n        VirtualMachineCloneSpec cloneSpec = new VirtualMachineCloneSpec();\n        cloneSpec.setPowerOn(false);\n        cloneSpec.setTemplate(false);\n        cloneSpec.setLocation(rSpec);\n        cloneSpec.setSnapshot(morBaseSnapshot);\n\n        ManagedObjectReference morTask = _context.getService().cloneVMTask(_mor, morFolder, cloneName, cloneSpec);\n\n        boolean result = _context.getVimClient().waitForTask(morTask);\n        if (result) {\n            _context.waitForTaskProgressDone(morTask);\n            return true;\n        } else {\n            s_logger.error(\"VMware cloneVM_Task failed due to \" + TaskMO.getTaskFailureInfo(_context, morTask));\n        }\n\n        return false;\n    }\n","realPath":"vmware-base/src/main/java/com/cloud/hypervisor/vmware/mo/VirtualMachineMO.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":730,"status":"N"}],"commitId":"4de35426c459fc90848c28c693576cc9ae6793a3","commitMessage":"@@@Merge branch '4.15' into main\n","date":"2021-09-03 09:04:12","modifiedFileCount":"3","status":"M","submitter":"nicolas"}]
