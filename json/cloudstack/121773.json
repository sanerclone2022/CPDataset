[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected boolean startVpc(final Vpc vpc, final DeployDestination dest, final ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException,\n    InsufficientCapacityException {\n        \r\n        boolean success = true;\n        final List<Provider> providersToImplement = getVpcProviders(vpc.getId());\n        for (final VpcProvider element : getVpcElements()) {\n            if (providersToImplement.contains(element.getProvider())) {\n                if (element.implementVpc(vpc, dest, context)) {\n                    s_logger.debug(\"Vpc \" + vpc + \" has started succesfully\");\n                } else {\n                    s_logger.warn(\"Vpc \" + vpc + \" failed to start\");\n                    success = false;\n                }\n            }\n        }\n        return success;\n    }\n","date":"2018-01-20 05:49:27","endLine":1186,"groupId":"15190","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"startVpc","params":"(finalVpcvpc@finalDeployDestinationdest@finalReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ab/6441ac5b7e6f8edb855842f28034fb2a8a3cf5.src","preCode":"    protected boolean startVpc(final Vpc vpc, final DeployDestination dest, final ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException,\n    InsufficientCapacityException {\n        \r\n        boolean success = true;\n        final List<Provider> providersToImplement = getVpcProviders(vpc.getId());\n        for (final VpcProvider element : getVpcElements()) {\n            if (providersToImplement.contains(element.getProvider())) {\n                if (element.implementVpc(vpc, dest, context)) {\n                    s_logger.debug(\"Vpc \" + vpc + \" has started succesfully\");\n                } else {\n                    s_logger.warn(\"Vpc \" + vpc + \" failed to start\");\n                    success = false;\n                }\n            }\n        }\n        return success;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1170,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean shutdownVpc(final long vpcId) throws ConcurrentOperationException, ResourceUnavailableException {\n        final CallContext ctx = CallContext.current();\n        final Account caller = ctx.getCallingAccount();\n\n        \r\n        final Vpc vpc = _vpcDao.findById(vpcId);\n        if (vpc == null) {\n            throw new InvalidParameterValueException(\"Unable to find vpc by id \" + vpcId);\n        }\n\n        \r\n        _accountMgr.checkAccess(caller, null, false, vpc);\n\n        \r\n        s_logger.debug(\"Shutting down vpc \" + vpc);\n        \r\n\n        boolean success = true;\n        final List<Provider> providersToImplement = getVpcProviders(vpc.getId());\n        final ReservationContext context = new ReservationContextImpl(null, null, _accountMgr.getActiveUser(ctx.getCallingUserId()), caller);\n        for (final VpcProvider element : getVpcElements()) {\n            if (providersToImplement.contains(element.getProvider())) {\n                if (element.shutdownVpc(vpc, context)) {\n                    s_logger.debug(\"Vpc \" + vpc + \" has been shutdown succesfully\");\n                } else {\n                    s_logger.warn(\"Vpc \" + vpc + \" failed to shutdown\");\n                    success = false;\n                }\n            }\n        }\n\n        return success;\n    }\n","date":"2018-01-20 05:49:27","endLine":1221,"groupId":"15190","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shutdownVpc","params":"(finallongvpcId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ab/6441ac5b7e6f8edb855842f28034fb2a8a3cf5.src","preCode":"    public boolean shutdownVpc(final long vpcId) throws ConcurrentOperationException, ResourceUnavailableException {\n        final CallContext ctx = CallContext.current();\n        final Account caller = ctx.getCallingAccount();\n\n        \r\n        final Vpc vpc = _vpcDao.findById(vpcId);\n        if (vpc == null) {\n            throw new InvalidParameterValueException(\"Unable to find vpc by id \" + vpcId);\n        }\n\n        \r\n        _accountMgr.checkAccess(caller, null, false, vpc);\n\n        \r\n        s_logger.debug(\"Shutting down vpc \" + vpc);\n        \r\n\n        boolean success = true;\n        final List<Provider> providersToImplement = getVpcProviders(vpc.getId());\n        final ReservationContext context = new ReservationContextImpl(null, null, _accountMgr.getActiveUser(ctx.getCallingUserId()), caller);\n        for (final VpcProvider element : getVpcElements()) {\n            if (providersToImplement.contains(element.getProvider())) {\n                if (element.shutdownVpc(vpc, context)) {\n                    s_logger.debug(\"Vpc \" + vpc + \" has been shutdown succesfully\");\n                } else {\n                    s_logger.warn(\"Vpc \" + vpc + \" failed to shutdown\");\n                    success = false;\n                }\n            }\n        }\n\n        return success;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1189,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-05-11 15:35:36","commitOrder":2,"curCode":"    protected boolean startVpc(final Vpc vpc, final DeployDestination dest, final ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException,\n    InsufficientCapacityException {\n        \r\n        boolean success = true;\n        final List<Provider> providersToImplement = getVpcProviders(vpc.getId());\n        for (final VpcProvider element : getVpcElements()) {\n            if (providersToImplement.contains(element.getProvider())) {\n                if (element.implementVpc(vpc, dest, context)) {\n                    s_logger.debug(\"Vpc \" + vpc + \" has started successfully\");\n                } else {\n                    s_logger.warn(\"Vpc \" + vpc + \" failed to start\");\n                    success = false;\n                }\n            }\n        }\n        return success;\n    }\n","date":"2018-05-11 15:39:03","endLine":1194,"groupId":"121773","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"startVpc","params":"(finalVpcvpc@finalDeployDestinationdest@finalReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b3/2498b254d8270738cc0adae25626b7c769c64a.src","preCode":"    protected boolean startVpc(final Vpc vpc, final DeployDestination dest, final ReservationContext context) throws ConcurrentOperationException, ResourceUnavailableException,\n    InsufficientCapacityException {\n        \r\n        boolean success = true;\n        final List<Provider> providersToImplement = getVpcProviders(vpc.getId());\n        for (final VpcProvider element : getVpcElements()) {\n            if (providersToImplement.contains(element.getProvider())) {\n                if (element.implementVpc(vpc, dest, context)) {\n                    s_logger.debug(\"Vpc \" + vpc + \" has started succesfully\");\n                } else {\n                    s_logger.warn(\"Vpc \" + vpc + \" failed to start\");\n                    success = false;\n                }\n            }\n        }\n        return success;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1178,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public boolean shutdownVpc(final long vpcId) throws ConcurrentOperationException, ResourceUnavailableException {\n        final CallContext ctx = CallContext.current();\n        final Account caller = ctx.getCallingAccount();\n\n        \r\n        final Vpc vpc = _vpcDao.findById(vpcId);\n        if (vpc == null) {\n            throw new InvalidParameterValueException(\"Unable to find vpc by id \" + vpcId);\n        }\n\n        \r\n        _accountMgr.checkAccess(caller, null, false, vpc);\n\n        \r\n        s_logger.debug(\"Shutting down vpc \" + vpc);\n        \r\n\n        boolean success = true;\n        final List<Provider> providersToImplement = getVpcProviders(vpc.getId());\n        final ReservationContext context = new ReservationContextImpl(null, null, _accountMgr.getActiveUser(ctx.getCallingUserId()), caller);\n        for (final VpcProvider element : getVpcElements()) {\n            if (providersToImplement.contains(element.getProvider())) {\n                if (element.shutdownVpc(vpc, context)) {\n                    s_logger.debug(\"Vpc \" + vpc + \" has been shutdown succesfully\");\n                } else {\n                    s_logger.warn(\"Vpc \" + vpc + \" failed to shutdown\");\n                    success = false;\n                }\n            }\n        }\n\n        return success;\n    }\n","date":"2018-01-20 05:49:27","endLine":1221,"groupId":"121773","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shutdownVpc","params":"(finallongvpcId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ab/6441ac5b7e6f8edb855842f28034fb2a8a3cf5.src","preCode":"    public boolean shutdownVpc(final long vpcId) throws ConcurrentOperationException, ResourceUnavailableException {\n        final CallContext ctx = CallContext.current();\n        final Account caller = ctx.getCallingAccount();\n\n        \r\n        final Vpc vpc = _vpcDao.findById(vpcId);\n        if (vpc == null) {\n            throw new InvalidParameterValueException(\"Unable to find vpc by id \" + vpcId);\n        }\n\n        \r\n        _accountMgr.checkAccess(caller, null, false, vpc);\n\n        \r\n        s_logger.debug(\"Shutting down vpc \" + vpc);\n        \r\n\n        boolean success = true;\n        final List<Provider> providersToImplement = getVpcProviders(vpc.getId());\n        final ReservationContext context = new ReservationContextImpl(null, null, _accountMgr.getActiveUser(ctx.getCallingUserId()), caller);\n        for (final VpcProvider element : getVpcElements()) {\n            if (providersToImplement.contains(element.getProvider())) {\n                if (element.shutdownVpc(vpc, context)) {\n                    s_logger.debug(\"Vpc \" + vpc + \" has been shutdown succesfully\");\n                } else {\n                    s_logger.warn(\"Vpc \" + vpc + \" failed to shutdown\");\n                    success = false;\n                }\n            }\n        }\n\n        return success;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpc/VpcManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1189,"status":"N"}],"commitId":"65511c4335eb5060fb7a3b4577e99d54b72ae6c3","commitMessage":"@@@Merge branch '4.11': Reduce VR downtime during network restart (#2508)\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2018-05-11 15:39:03","modifiedFileCount":"21","status":"M","submitter":"Rohit Yadav"}]
