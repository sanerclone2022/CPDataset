[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-02-11 01:32:46","commitOrder":2,"curCode":"    public void execute() {\n        Role role = roleService.findRole(getRoleId());\n        if (role == null) {\n            throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"Invalid role id provided\");\n        }\n        CallContext.current().setEventDetails(\"Role: \" + getRoleName() + \", type:\" + getRoleType() + \", description: \" + getRoleDescription());\n        role = roleService.updateRole(role, getRoleName(), getRoleType(), getRoleDescription());\n        setupResponse(role);\n    }\n","date":"2018-02-11 01:32:46","endLine":104,"groupId":"3277","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f9/519aeec5a12469f198ef0968d6c70d12eea3c7.src","preCode":"    public void execute() {\n        Role role = roleService.findRole(getRoleId());\n        if (role == null) {\n            throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"Invalid role id provided\");\n        }\n        CallContext.current().setEventDetails(\"Role: \" + getRoleName() + \", type:\" + getRoleType() + \", description: \" + getRoleDescription());\n        role = roleService.updateRole(role, getRoleName(), getRoleType(), getRoleDescription());\n        setupResponse(role);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/admin/acl/UpdateRoleCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"MB"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"Role: \" + getRoleName() + \", type:\" + getRoleType() + \", description: \" + getRoleDescription());\n        final Role role = roleService.createRole(getRoleName(), getRoleType(), getRoleDescription());\n        if (role == null) {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to create role\");\n        }\n        setupResponse(role);\n    }\n","date":"2018-01-20 05:49:27","endLine":104,"groupId":"13967","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/99/4573d179662453fea14053534332f68d1e7f8c.src","preCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"Role: \" + getRoleName() + \", type:\" + getRoleType() + \", description: \" + getRoleDescription());\n        final Role role = roleService.createRole(getRoleName(), getRoleType(), getRoleDescription());\n        if (role == null) {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to create role\");\n        }\n        setupResponse(role);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/admin/acl/CreateRoleCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"NB"}],"commitId":"b88681de187b99bd4347640ceef150fd15d5a012","commitMessage":"@@@Merge branch '4.11'\n","date":"2018-02-11 01:32:46","modifiedFileCount":"16","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2020-07-07 13:26:43","codes":[{"authorDate":"2018-02-11 01:32:46","commitOrder":3,"curCode":"    public void execute() {\n        Role role = roleService.findRole(getRoleId());\n        if (role == null) {\n            throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"Invalid role id provided\");\n        }\n        CallContext.current().setEventDetails(\"Role: \" + getRoleName() + \", type:\" + getRoleType() + \", description: \" + getRoleDescription());\n        role = roleService.updateRole(role, getRoleName(), getRoleType(), getRoleDescription());\n        setupResponse(role);\n    }\n","date":"2018-02-11 01:32:46","endLine":104,"groupId":"102381","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f9/519aeec5a12469f198ef0968d6c70d12eea3c7.src","preCode":"    public void execute() {\n        Role role = roleService.findRole(getRoleId());\n        if (role == null) {\n            throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"Invalid role id provided\");\n        }\n        CallContext.current().setEventDetails(\"Role: \" + getRoleName() + \", type:\" + getRoleType() + \", description: \" + getRoleDescription());\n        role = roleService.updateRole(role, getRoleName(), getRoleType(), getRoleDescription());\n        setupResponse(role);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/admin/acl/UpdateRoleCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"N"},{"authorDate":"2020-07-07 13:26:43","commitOrder":3,"curCode":"    public void execute() {\n        validateRoleParameters();\n\n        Role role = null;\n        if (getRoleId() != null) {\n            Role existingRole = roleService.findRole(getRoleId());\n            if (existingRole == null) {\n                throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"Invalid role id provided\");\n            }\n\n            CallContext.current().setEventDetails(\"Role: \" + getRoleName() + \", from role: \" + getRoleId() + \", description: \" + getRoleDescription());\n            role = roleService.createRole(getRoleName(), existingRole, getRoleDescription());\n        } else {\n            CallContext.current().setEventDetails(\"Role: \" + getRoleName() + \", type: \" + getRoleType() + \", description: \" + getRoleDescription());\n            role = roleService.createRole(getRoleName(), getRoleType(), getRoleDescription());\n        }\n\n        if (role == null) {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to create role\");\n        }\n        setupResponse(role);\n    }\n","date":"2020-07-07 13:26:43","endLine":100,"groupId":"102381","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/82/cdcbd1d4138c0fec7996834c369ed3bf3054c9.src","preCode":"    public void execute() {\n        CallContext.current().setEventDetails(\"Role: \" + getRoleName() + \", type:\" + getRoleType() + \", description: \" + getRoleDescription());\n        final Role role = roleService.createRole(getRoleName(), getRoleType(), getRoleDescription());\n        if (role == null) {\n            throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, \"Failed to create role\");\n        }\n        setupResponse(role);\n    }\n","realPath":"api/src/main/java/org/apache/cloudstack/api/command/admin/acl/CreateRoleCmd.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"5040283db9744175402b53ba9a6c701b9d8e3436","commitMessage":"@@@server: Dynamic roles improvements. Add-on functionality below. (#4071)\n\n- Create a role from any of the existing role.  using new parameter roleid in createRole API\n- Import a role with its rules.  using a new importRole API\n- New default roles for Read-Only and Support Admin & User\n- No modifications allowed for Default roles\n- Cleaned up old NetApp APIs from role_permissions table.","date":"2020-07-07 13:26:43","modifiedFileCount":"18","status":"M","submitter":"sureshanaparti"}]
