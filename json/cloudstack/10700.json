[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        if (cacheStore == null) {\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStore(destScope.getScopeId());\n            if (!imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                s_logger.debug(\"can't find a nfs (or cifs) image store to satisfy the need for a staging store\");\n                return null;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = copyObject(srcData, objOnImageStore);\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n            objOnImageStore.processEvent(Event.CopyingRequested);\n\n            CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(objOnImageStore, destData);\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","date":"2018-01-20 05:49:27","endLine":394,"groupId":"4078","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"copyVolumeBetweenPools","params":"(DataObjectsrcData@DataObjectdestData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/94/71fad84d6fce1865313f187f535ff8cc6a4b89.src","preCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        if (cacheStore == null) {\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStore(destScope.getScopeId());\n            if (!imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                s_logger.debug(\"can't find a nfs (or cifs) image store to satisfy the need for a staging store\");\n                return null;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = copyObject(srcData, objOnImageStore);\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n            objOnImageStore.processEvent(Event.CopyingRequested);\n\n            CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(objOnImageStore, destData);\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            s_logger.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","date":"2018-01-20 05:49:27","endLine":295,"groupId":"24601","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteAsync","params":"(DataStoredataStore@DataObjectdata@AsyncCompletionCallback<CommandResult>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/1c/6f1e70660fef1a381619b146c4fb04e9c8c32c.src","preCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            s_logger.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","realPath":"engine/storage/src/main/java/org/apache/cloudstack/storage/image/BaseImageStoreDriverImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2019-07-31 18:07:59","commitOrder":2,"curCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        if (cacheStore == null) {\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStoreWithFreeCapacity(destScope.getScopeId());\n            if (imageStore == null || !imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                s_logger.debug(\"can't find a nfs (or cifs) image store to satisfy the need for a staging store\");\n                return null;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = copyObject(srcData, objOnImageStore);\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n            objOnImageStore.processEvent(Event.CopyingRequested);\n\n            CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(objOnImageStore, destData);\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","date":"2019-07-31 18:07:59","endLine":395,"groupId":"4078","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"copyVolumeBetweenPools","params":"(DataObjectsrcData@DataObjectdestData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/39/851b47b62f843a508013de60292e325def0bd6.src","preCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        if (cacheStore == null) {\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStore(destScope.getScopeId());\n            if (!imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                s_logger.debug(\"can't find a nfs (or cifs) image store to satisfy the need for a staging store\");\n                return null;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = copyObject(srcData, objOnImageStore);\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n            objOnImageStore.processEvent(Event.CopyingRequested);\n\n            CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(objOnImageStore, destData);\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            s_logger.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","date":"2018-01-20 05:49:27","endLine":295,"groupId":"24601","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteAsync","params":"(DataStoredataStore@DataObjectdata@AsyncCompletionCallback<CommandResult>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/1c/6f1e70660fef1a381619b146c4fb04e9c8c32c.src","preCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            s_logger.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","realPath":"engine/storage/src/main/java/org/apache/cloudstack/storage/image/BaseImageStoreDriverImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"N"}],"commitId":"b2db8979f2249b0b6c0d8d0dfe40e05ba9ef9649","commitMessage":"@@@server: fix for respecting secondary storage threshold limit (#3480)\n\nRetrieval of an image store using ImageStoreProviderManager has been refactored by introducing three different methods. \nDataStore getRandomImageStore(List<DataStore> imageStores);\nTo get an image store for reading purpose. Threshold capacity check will not be used here.\nDataStore getImageStoreWithFreeCapacity(List<DataStore> imageStores);\nTo get an image store for reading purpose. Threshold capacity check will be used here and the store with max free space will be returned. If no store with filled storage less than the threshold is found.  the NULL value will be returned.\nList<DataStore> listImageStoresWithFreeCapacity(List<DataStore> imageStores);\nTo get a list of image stores for writing purpose which fulfills threshold capacity check.\n\nCorrespondingly DataStoreManager methods have been refactored to return similar values for a given zone.\n\nFixes #3287 - NULL value will be returned when secondary storage is needed for writing but there is not store with free space.\nFixes #3041 - Rather than returning random secondary storage for writing.  storage with max. free space will be returned.\nFixes #3478 - For migration on VMware.  all writable secondary storage will be mounted while preparation.\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>\n","date":"2019-07-31 18:07:59","modifiedFileCount":"21","status":"M","submitter":"Abhishek Kumar"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-03-07 02:56:54","commitOrder":3,"curCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        boolean bypassSecondaryStorage = false;\n        if (srcData instanceof VolumeInfo && ((VolumeInfo)srcData).isDirectDownload()) {\n            bypassSecondaryStorage = true;\n        }\n\n        if (cacheStore == null) {\n            if (bypassSecondaryStorage) {\n                CopyCommand cmd = new CopyCommand(srcData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(srcData, destData);\n                Answer answer = null;\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n                return answer;\n            }\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStoreWithFreeCapacity(destScope.getScopeId());\n            if (imageStore == null || !imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                s_logger.debug(\"can't find a nfs (or cifs) image store to satisfy the need for a staging store\");\n                return null;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = copyObject(srcData, objOnImageStore);\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n            objOnImageStore.processEvent(Event.CopyingRequested);\n\n            CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(objOnImageStore, destData);\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","date":"2020-03-07 02:56:54","endLine":413,"groupId":"4078","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"copyVolumeBetweenPools","params":"(DataObjectsrcData@DataObjectdestData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9c/8f4df3b6e2f53c6871a4d8cb337d29d3e70e06.src","preCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        if (cacheStore == null) {\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStoreWithFreeCapacity(destScope.getScopeId());\n            if (imageStore == null || !imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                s_logger.debug(\"can't find a nfs (or cifs) image store to satisfy the need for a staging store\");\n                return null;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = copyObject(srcData, objOnImageStore);\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n            objOnImageStore.processEvent(Event.CopyingRequested);\n\n            CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(objOnImageStore, destData);\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            s_logger.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","date":"2018-01-20 05:49:27","endLine":295,"groupId":"24601","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteAsync","params":"(DataStoredataStore@DataObjectdata@AsyncCompletionCallback<CommandResult>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/1c/6f1e70660fef1a381619b146c4fb04e9c8c32c.src","preCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            s_logger.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","realPath":"engine/storage/src/main/java/org/apache/cloudstack/storage/image/BaseImageStoreDriverImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"N"}],"commitId":"73122fd0a93a5588c69eed1ae8454c09c8e87039","commitMessage":"@@@[KVM] Direct download agnostic of the storage provider (#3828)\n\n* Remove constraint for NFS storage\n\n* Add new property on agent.properties\n\n* Add free disk space on the host prior template download\n\n* Add unit tests for the free space check\n\n* Fix free space check - retrieve avaiable size in bytes\n\n* Update default location for direct download\n\n* Improve the method to retrieve hosts to retry on depending on the destination pool type and scope\n\n* Verify location for temporary download exists before checking free space\n\n* In progress - refactor and extension\n\n* Refactor and fix\n\n* Last fixes and marvin tests\n\n* Remove unused test file\n\n* Improve logging\n\n* Change default path for direct download\n\n* Fix upload certificate\n\n* Fix ISO failure after retry\n\n* Fix metalink filename mismatch error\n\n* Fix iso direct download\n\n* Fix for direct download ISOs on local storage and shared mount point\n\n* Last fix iso\n\n* Fix VM migration with ISO\n\n* Refactor volume migration to remove secondary storage intermediate\n\n* Fix simulator issue","date":"2020-03-07 02:56:54","modifiedFileCount":"28","status":"M","submitter":"Nicolas Vazquez"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-04-24 02:19:30","commitOrder":4,"curCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        boolean bypassSecondaryStorage = false;\n        if (srcData instanceof VolumeInfo && ((VolumeInfo)srcData).isDirectDownload()) {\n            bypassSecondaryStorage = true;\n        }\n\n        if (cacheStore == null) {\n            if (bypassSecondaryStorage) {\n                CopyCommand cmd = new CopyCommand(srcData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(srcData, destData);\n                Answer answer = null;\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n                return answer;\n            }\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStoreWithFreeCapacity(destScope.getScopeId());\n            if (imageStore == null || !imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                String errMsg = \"can't find a nfs (or cifs) image store to satisfy the need for a staging store\";\n                Answer answer = new Answer(null, false, errMsg);\n                return answer;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = copyObject(srcData, objOnImageStore);\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n            objOnImageStore.processEvent(Event.CopyingRequested);\n\n            CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(objOnImageStore, destData);\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","date":"2020-04-24 02:19:30","endLine":414,"groupId":"4078","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"copyVolumeBetweenPools","params":"(DataObjectsrcData@DataObjectdestData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/7c/930fb34c9c5c52ba4f210ae52483af690e74d9.src","preCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        boolean bypassSecondaryStorage = false;\n        if (srcData instanceof VolumeInfo && ((VolumeInfo)srcData).isDirectDownload()) {\n            bypassSecondaryStorage = true;\n        }\n\n        if (cacheStore == null) {\n            if (bypassSecondaryStorage) {\n                CopyCommand cmd = new CopyCommand(srcData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(srcData, destData);\n                Answer answer = null;\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n                return answer;\n            }\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStoreWithFreeCapacity(destScope.getScopeId());\n            if (imageStore == null || !imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                s_logger.debug(\"can't find a nfs (or cifs) image store to satisfy the need for a staging store\");\n                return null;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = copyObject(srcData, objOnImageStore);\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n            objOnImageStore.processEvent(Event.CopyingRequested);\n\n            CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(objOnImageStore, destData);\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":4,"curCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            s_logger.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","date":"2018-01-20 05:49:27","endLine":295,"groupId":"24601","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteAsync","params":"(DataStoredataStore@DataObjectdata@AsyncCompletionCallback<CommandResult>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/1c/6f1e70660fef1a381619b146c4fb04e9c8c32c.src","preCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            s_logger.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","realPath":"engine/storage/src/main/java/org/apache/cloudstack/storage/image/BaseImageStoreDriverImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"N"}],"commitId":"689e529d7b564ea5d472bee4dba55f27e1af5c13","commitMessage":"@@@Merge release branch 4.13 to master\n\n* 4.13:\n  Fixed guest vlan range going missing when using zone wizzard (#4042)\n  Volume migration (#4043)\n","date":"2020-04-24 02:19:30","modifiedFileCount":"1","status":"M","submitter":"Daan Hoogland"},{"authorTime":"2020-10-26 21:24:14","codes":[{"authorDate":"2020-10-26 21:24:14","commitOrder":5,"curCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        boolean bypassSecondaryStorage = false;\n        if (srcData instanceof VolumeInfo && ((VolumeInfo)srcData).isDirectDownload()) {\n            bypassSecondaryStorage = true;\n        }\n\n        if (cacheStore == null) {\n            if (bypassSecondaryStorage) {\n                CopyCommand cmd = new CopyCommand(srcData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(srcData, destData);\n                Answer answer = null;\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n                return answer;\n            }\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStoreWithFreeCapacity(destScope.getScopeId());\n            if (imageStore == null || !imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                String errMsg = \"can't find a nfs (or cifs) image store to satisfy the need for a staging store\";\n                Answer answer = new Answer(null, false, errMsg);\n                return answer;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = null;\n            try {\n                answer = copyObject(srcData, objOnImageStore);\n\n                if (answer == null || !answer.getResult()) {\n                    if (answer != null) {\n                        s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                    }\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                    return answer;\n                }\n\n                objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n                objOnImageStore.processEvent(Event.CopyingRequested);\n\n                CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(objOnImageStore, destData);\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n\n                if (answer == null || !answer.getResult()) {\n                    if (answer != null) {\n                        s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                    }\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                    return answer;\n                }\n            } catch (Exception e) {\n                if (imageStore.exists(objOnImageStore)) {\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                }\n                throw e;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","date":"2020-10-26 21:24:14","endLine":424,"groupId":"8199","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"copyVolumeBetweenPools","params":"(DataObjectsrcData@DataObjectdestData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/c4/9ffba0b82bf3ba06351fcd6183c3687e54569a.src","preCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        boolean bypassSecondaryStorage = false;\n        if (srcData instanceof VolumeInfo && ((VolumeInfo)srcData).isDirectDownload()) {\n            bypassSecondaryStorage = true;\n        }\n\n        if (cacheStore == null) {\n            if (bypassSecondaryStorage) {\n                CopyCommand cmd = new CopyCommand(srcData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(srcData, destData);\n                Answer answer = null;\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n                return answer;\n            }\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStoreWithFreeCapacity(destScope.getScopeId());\n            if (imageStore == null || !imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                String errMsg = \"can't find a nfs (or cifs) image store to satisfy the need for a staging store\";\n                Answer answer = new Answer(null, false, errMsg);\n                return answer;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = copyObject(srcData, objOnImageStore);\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n            objOnImageStore.processEvent(Event.CopyingRequested);\n\n            CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(objOnImageStore, destData);\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n\n            if (answer == null || !answer.getResult()) {\n                if (answer != null) {\n                    s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                }\n                objOnImageStore.processEvent(Event.OperationFailed);\n                imageStore.delete(objOnImageStore);\n                return answer;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2020-10-26 21:24:14","commitOrder":5,"curCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                LOGGER.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            LOGGER.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","date":"2020-10-26 21:24:14","endLine":332,"groupId":"24601","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteAsync","params":"(DataStoredataStore@DataObjectdata@AsyncCompletionCallback<CommandResult>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/37/a7985ce6f60e526525ce364f8fb08c383d1580.src","preCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            s_logger.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","realPath":"engine/storage/src/main/java/org/apache/cloudstack/storage/image/BaseImageStoreDriverImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"M"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"},{"authorTime":"2020-10-26 21:24:14","codes":[{"authorDate":"2021-07-17 09:37:42","commitOrder":6,"curCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        boolean bypassSecondaryStorage = false;\n        if (srcData instanceof VolumeInfo && ((VolumeInfo)srcData).isDirectDownload()) {\n            bypassSecondaryStorage = true;\n        }\n\n        if (cacheStore == null) {\n            if (bypassSecondaryStorage) {\n                CopyCommand cmd = new CopyCommand(srcData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(srcData, destData);\n                Answer answer = null;\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n                return answer;\n            }\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStoreWithFreeCapacity(destScope.getScopeId());\n            if (imageStore == null || !imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                String errMsg = \"can't find a nfs (or cifs) image store to satisfy the need for a staging store\";\n                Answer answer = new Answer(null, false, errMsg);\n                return answer;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = null;\n            try {\n                answer = copyObject(srcData, objOnImageStore);\n\n                if (answer == null || !answer.getResult()) {\n                    if (answer != null) {\n                        s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                    }\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                    return answer;\n                }\n\n                objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n                objOnImageStore.processEvent(Event.CopyingRequested);\n\n                CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneAndDiskprovisiongStrictnessFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(objOnImageStore, destData);\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n\n                if (answer == null || !answer.getResult()) {\n                    if (answer != null) {\n                        s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                    }\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                    return answer;\n                }\n            } catch (Exception e) {\n                if (imageStore.exists(objOnImageStore)) {\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                }\n                throw e;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","date":"2021-07-17 09:37:42","endLine":429,"groupId":"8199","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"copyVolumeBetweenPools","params":"(DataObjectsrcData@DataObjectdestData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e9/c6fc1117259a7bc3a12f6daeaa655a8d234790.src","preCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        boolean bypassSecondaryStorage = false;\n        if (srcData instanceof VolumeInfo && ((VolumeInfo)srcData).isDirectDownload()) {\n            bypassSecondaryStorage = true;\n        }\n\n        if (cacheStore == null) {\n            if (bypassSecondaryStorage) {\n                CopyCommand cmd = new CopyCommand(srcData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(srcData, destData);\n                Answer answer = null;\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n                return answer;\n            }\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStoreWithFreeCapacity(destScope.getScopeId());\n            if (imageStore == null || !imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                String errMsg = \"can't find a nfs (or cifs) image store to satisfy the need for a staging store\";\n                Answer answer = new Answer(null, false, errMsg);\n                return answer;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = null;\n            try {\n                answer = copyObject(srcData, objOnImageStore);\n\n                if (answer == null || !answer.getResult()) {\n                    if (answer != null) {\n                        s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                    }\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                    return answer;\n                }\n\n                objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n                objOnImageStore.processEvent(Event.CopyingRequested);\n\n                CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(objOnImageStore, destData);\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n\n                if (answer == null || !answer.getResult()) {\n                    if (answer != null) {\n                        s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                    }\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                    return answer;\n                }\n            } catch (Exception e) {\n                if (imageStore.exists(objOnImageStore)) {\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                }\n                throw e;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"M"},{"authorDate":"2020-10-26 21:24:14","commitOrder":6,"curCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                LOGGER.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            LOGGER.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","date":"2020-10-26 21:24:14","endLine":332,"groupId":"24601","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteAsync","params":"(DataStoredataStore@DataObjectdata@AsyncCompletionCallback<CommandResult>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/37/a7985ce6f60e526525ce364f8fb08c383d1580.src","preCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                LOGGER.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            LOGGER.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","realPath":"engine/storage/src/main/java/org/apache/cloudstack/storage/image/BaseImageStoreDriverImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"N"}],"commitId":"96c9c5a5e2251174da7da881ab1d0f8e1f323aac","commitMessage":"@@@Added disk provisioning type support for VMWare (#4640)\n\n* Added disk provisioning type support for VMWare\n\n* Review changes\n\n* Fixed unit test\n\n* Review changes\n\n* Added missing licenses\n\n* Review changes\n\n* Update StoragePoolInfo.java\n\nRemoved white space\n\n* Review change - Getting disk provisioning strictness setting using the zone id and not the pool id\n\n* Delete __init__.py\n\n* Merge fix\n\n* Fixed failing test\n\n* Added comment about parameters\n\n* Added error log when update fails\n\n* Added exception when using API\n\n* Ordering storage pool selection to prefer thick disk capable pools if available\n\n* Removed unused parameter\n\n* Reordering changes\n\n* Returning storage pool details after update\n\n* Removed multiple pool update.  updated marvin test.  removed duplicate enum\n\n* Removed comment\n\n* Removed unused import\n\n* Removed for loop\n\n* Added missing return statements for failed checks\n\n* Class name change\n\n* Null pointer\n\n* Added more info when a deployment fails\n\n* Null pointer\n\n* Update api/src/main/java/org/apache/cloudstack/api/BaseListCmd.java\n\nCo-authored-by: dahn <daan.hoogland@gmail.com>\n\n* Small bug fix on API response and added missing bracket\n\n* Removed datastore cluster code\n\n* Removed unused imports.  added missing signature\n\n* Removed duplicate config key\n\n* Revert \"Added more info when a deployment fails\"\n\nThis reverts commit 2486db78dca8e034d8ad2386174dfb11004ce654.\n\nCo-authored-by: dahn <daan.hoogland@gmail.com>","date":"2021-07-17 09:37:42","modifiedFileCount":"23","status":"M","submitter":"Spaceman1984"},{"authorTime":"2020-10-26 21:24:14","codes":[{"authorDate":"2021-08-09 16:51:07","commitOrder":7,"curCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        boolean bypassSecondaryStorage = false;\n        if (srcData instanceof VolumeInfo && ((VolumeInfo)srcData).isDirectDownload()) {\n            bypassSecondaryStorage = true;\n        }\n\n        if (cacheStore == null) {\n            if (bypassSecondaryStorage) {\n                CopyCommand cmd = new CopyCommand(srcData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(srcData, destData);\n                Answer answer = null;\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n                return answer;\n            }\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStoreWithFreeCapacity(destScope.getScopeId());\n            if (imageStore == null || !imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                String errMsg = \"can't find a nfs (or cifs) image store to satisfy the need for a staging store\";\n                Answer answer = new Answer(null, false, errMsg);\n                return answer;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            Answer answer = null;\n            try {\n                objOnImageStore.processEvent(Event.CreateOnlyRequested);\n                answer = copyObject(srcData, objOnImageStore);\n\n                if (answer == null || !answer.getResult()) {\n                    if (answer != null) {\n                        s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                    }\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                    return answer;\n                }\n\n                objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n                objOnImageStore.processEvent(Event.CopyingRequested);\n\n                CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneAndDiskprovisiongStrictnessFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(objOnImageStore, destData);\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n\n                if (answer == null || !answer.getResult()) {\n                    if (answer != null) {\n                        s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                    }\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                    return answer;\n                }\n            } catch (Exception e) {\n                if (imageStore.exists(objOnImageStore)) {\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                }\n                s_logger.error(\"Failed to perform operation: \"+ e.getLocalizedMessage());\n                throw e;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            deleteVolumeOnSecondaryStore(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","date":"2021-08-09 16:51:07","endLine":443,"groupId":"10700","id":13,"instanceNumber":1,"isCurCommit":1,"methodName":"copyVolumeBetweenPools","params":"(DataObjectsrcData@DataObjectdestData)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/51/e0c97a21e582c14112c817e3d4b9451d67273b.src","preCode":"    protected Answer copyVolumeBetweenPools(DataObject srcData, DataObject destData) {\n        String value = configDao.getValue(Config.CopyVolumeWait.key());\n        int _copyvolumewait = NumbersUtil.parseInt(value, Integer.parseInt(Config.CopyVolumeWait.getDefaultValue()));\n\n        Scope destScope = getZoneScope(destData.getDataStore().getScope());\n        DataStore cacheStore = cacheMgr.getCacheStorage(destScope);\n        boolean bypassSecondaryStorage = false;\n        if (srcData instanceof VolumeInfo && ((VolumeInfo)srcData).isDirectDownload()) {\n            bypassSecondaryStorage = true;\n        }\n\n        if (cacheStore == null) {\n            if (bypassSecondaryStorage) {\n                CopyCommand cmd = new CopyCommand(srcData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(srcData, destData);\n                Answer answer = null;\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n                return answer;\n            }\n            \r\n            \r\n            ImageStoreEntity imageStore = (ImageStoreEntity)dataStoreMgr.getImageStoreWithFreeCapacity(destScope.getScopeId());\n            if (imageStore == null || !imageStore.getProtocol().equalsIgnoreCase(\"nfs\") && !imageStore.getProtocol().equalsIgnoreCase(\"cifs\")) {\n                String errMsg = \"can't find a nfs (or cifs) image store to satisfy the need for a staging store\";\n                Answer answer = new Answer(null, false, errMsg);\n                return answer;\n            }\n\n            DataObject objOnImageStore = imageStore.create(srcData);\n            objOnImageStore.processEvent(Event.CreateOnlyRequested);\n\n            Answer answer = null;\n            try {\n                answer = copyObject(srcData, objOnImageStore);\n\n                if (answer == null || !answer.getResult()) {\n                    if (answer != null) {\n                        s_logger.debug(\"copy to image store failed: \" + answer.getDetails());\n                    }\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                    return answer;\n                }\n\n                objOnImageStore.processEvent(Event.OperationSuccessed, answer);\n\n                objOnImageStore.processEvent(Event.CopyingRequested);\n\n                CopyCommand cmd = new CopyCommand(objOnImageStore.getTO(), addFullCloneAndDiskprovisiongStrictnessFlagOnVMwareDest(destData.getTO()), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n                EndPoint ep = selector.select(objOnImageStore, destData);\n                if (ep == null) {\n                    String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                    s_logger.error(errMsg);\n                    answer = new Answer(cmd, false, errMsg);\n                } else {\n                    answer = ep.sendMessage(cmd);\n                }\n\n                if (answer == null || !answer.getResult()) {\n                    if (answer != null) {\n                        s_logger.debug(\"copy to primary store failed: \" + answer.getDetails());\n                    }\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                    return answer;\n                }\n            } catch (Exception e) {\n                if (imageStore.exists(objOnImageStore)) {\n                    objOnImageStore.processEvent(Event.OperationFailed);\n                    imageStore.delete(objOnImageStore);\n                }\n                throw e;\n            }\n\n            objOnImageStore.processEvent(Event.OperationSuccessed);\n            imageStore.delete(objOnImageStore);\n            return answer;\n        } else {\n            DataObject cacheData = cacheMgr.createCacheObject(srcData, destScope);\n            CopyCommand cmd = new CopyCommand(cacheData.getTO(), destData.getTO(), _copyvolumewait, VirtualMachineManager.ExecuteInSequence.value());\n            EndPoint ep = selector.select(cacheData, destData);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                s_logger.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            \r\n            if (cacheData != null) {\n                cacheMgr.deleteCacheObject(cacheData);\n            }\n            return answer;\n        }\n\n    }\n","realPath":"engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/AncientDataMotionStrategy.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":341,"status":"M"},{"authorDate":"2020-10-26 21:24:14","commitOrder":7,"curCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                LOGGER.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            LOGGER.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","date":"2020-10-26 21:24:14","endLine":332,"groupId":"10700","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"deleteAsync","params":"(DataStoredataStore@DataObjectdata@AsyncCompletionCallback<CommandResult>callback)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/37/a7985ce6f60e526525ce364f8fb08c383d1580.src","preCode":"    public void deleteAsync(DataStore dataStore, DataObject data, AsyncCompletionCallback<CommandResult> callback) {\n        CommandResult result = new CommandResult();\n        try {\n            DeleteCommand cmd = new DeleteCommand(data.getTO());\n            EndPoint ep = _epSelector.select(data);\n            Answer answer = null;\n            if (ep == null) {\n                String errMsg = \"No remote endpoint to send command, check if host or ssvm is down?\";\n                LOGGER.error(errMsg);\n                answer = new Answer(cmd, false, errMsg);\n            } else {\n                answer = ep.sendMessage(cmd);\n            }\n            if (answer != null && !answer.getResult()) {\n                result.setResult(answer.getDetails());\n            }\n        } catch (Exception ex) {\n            LOGGER.debug(\"Unable to destoy \" + data.getType().toString() + \": \" + data.getId(), ex);\n            result.setResult(ex.toString());\n        }\n        callback.complete(result);\n    }\n","realPath":"engine/storage/src/main/java/org/apache/cloudstack/storage/image/BaseImageStoreDriverImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"N"}],"commitId":"ea7d3b34d12f636659386cb0e8a58d7272c5fa91","commitMessage":"@@@Cleanup volume information from db when deleted (#4551)\n\n* Cleanup volume information from db when deleted\n\n* reuse search builder\n\n* revert change\n\nCo-authored-by: Pearl Dsilva <pearl.dsilva@shapeblue.com>","date":"2021-08-09 16:51:07","modifiedFileCount":"4","status":"M","submitter":"Pearl Dsilva"}]
