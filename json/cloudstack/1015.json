[{"authorTime":"2018-05-10 00:21:06","codes":[{"authorDate":"2018-04-13 17:23:14","commitOrder":2,"curCode":"    public void testCalculateUpgradePath410to412() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.10.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.12.0.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length >= 1);\n        assertTrue(upgrades[0] instanceof Upgrade41000to41100);\n        assertTrue(upgrades[1] instanceof Upgrade41100to41110);\n        assertTrue(upgrades[2] instanceof Upgrade41110to41200);\n\n        assertTrue(Arrays.equals(new String[] { \"4.11.0.0\", \"4.11.1.0\"},\n                upgrades[1].getUpgradableVersionRange()));\n        assertEquals(currentVersion.toString(), upgrades[2].getUpgradedVersion());\n\n    }\n","date":"2018-04-13 17:23:14","endLine":102,"groupId":"11500","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCalculateUpgradePath410to412","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/bd/06de10806eed688814bcdc4d2015091925e18b.src","preCode":"    public void testCalculateUpgradePath410to412() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.10.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.12.0.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length >= 1);\n        assertTrue(upgrades[0] instanceof Upgrade41000to41100);\n        assertTrue(upgrades[1] instanceof Upgrade41100to41110);\n        assertTrue(upgrades[2] instanceof Upgrade41110to41200);\n\n        assertTrue(Arrays.equals(new String[] { \"4.11.0.0\", \"4.11.1.0\"},\n                upgrades[1].getUpgradableVersionRange()));\n        assertEquals(currentVersion.toString(), upgrades[2].getUpgradedVersion());\n\n    }\n","realPath":"engine/schema/src/test/java/com/cloud/upgrade/DatabaseUpgradeCheckerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"NB"},{"authorDate":"2018-05-10 00:21:06","commitOrder":2,"curCode":"    public void testCalculateUpgradePathUnkownDbVersion() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.99.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.99.1.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length == 1);\n        assertTrue(upgrades[0] instanceof NoopDbUpgrade);\n\n     }\n","date":"2018-05-10 00:21:06","endLine":168,"groupId":"11498","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculateUpgradePathUnkownDbVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3e/2995d7a6e160cae9356610e2fc806e9530daa6.src","preCode":"    public void testCalculateUpgradePathUnkownDbVersion() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.99.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.99.1.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length == 1);\n        assertTrue(upgrades[0] instanceof NoopDbUpgrade);\n\n     }\n","realPath":"engine/schema/src/test/java/com/cloud/upgrade/DatabaseUpgradeCheckerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"B"}],"commitId":"c60dbfd2c884593cc49d3c157ad14e900288dcac","commitMessage":"@@@engine/schema: enhance and cleanup DatabaseUpgradeChecker (#2584)\n\nUsing a hierarchy of database version rather than a flat\nlist of them. Adding a new schema upgrade path was really\ncumbersome and error-prone.  because we needed to maintain\na flat map of versions and their corresponding list of\nupgrade paths (`DbUpgrade`). Instead we're using a logical\nhierarchy structure of versions:\n\n```\nDatabaseVersionHierarchy.builder()\n    .next(\"4.0.0\"   .  new Upgrade40to41())\n    .next(\"4.0.1\"   .  new Upgrade40to41())\n    .next(\"4.0.2\"   .  new Upgrade40to41())\n    .next(\"4.1.0\"   .  new Upgrade410to420())\n    .next(\"4.1.1\"   .  new Upgrade410to420())\n    .next(\"4.2.0\"   .  new Upgrade420to421())\n    ...\n    .next(\"4.2.1\"   .  new Upgrade421to430())\n    .next(\"4.9.3.0\" .  new Upgrade4930to41000())\n    .next(\"4.10.0.0\".  new Upgrade41000to41100())\n    .next(\"4.11.0.0\".  new Upgrade41100to41110())\n    .build();\n```\n\nWith this change.  when we need to add a new version upgrade\npath.  we only need to add it in correct place in the hierarchy\nrather than add that in dozens of places in `_upgradeMap`.","date":"2018-05-10 00:21:06","modifiedFileCount":"2","status":"M","submitter":"Khosrow Moossavi"},{"authorTime":"2018-05-10 00:21:06","codes":[{"authorDate":"2018-09-12 17:50:10","commitOrder":3,"curCode":"    public void testCalculateUpgradePath410to412() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.10.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.12.0.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length >= 1);\n        assertTrue(upgrades[0] instanceof Upgrade41000to41100);\n        assertTrue(upgrades[1] instanceof Upgrade41100to41110);\n        assertTrue(upgrades[2] instanceof Upgrade41110to41120);\n        assertTrue(upgrades[3] instanceof Upgrade41120to41200);\n\n        assertTrue(Arrays.equals(new String[] {\"4.11.0.0\", \"4.11.1.0\"}, upgrades[1].getUpgradableVersionRange()));\n        assertEquals(currentVersion.toString(), upgrades[3].getUpgradedVersion());\n\n    }\n","date":"2018-09-12 17:59:00","endLine":106,"groupId":"11498","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCalculateUpgradePath410to412","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/65/e222df10a23b955d647d3af01b17814ece9232.src","preCode":"    public void testCalculateUpgradePath410to412() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.10.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.12.0.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length >= 1);\n        assertTrue(upgrades[0] instanceof Upgrade41000to41100);\n        assertTrue(upgrades[1] instanceof Upgrade41100to41110);\n        assertTrue(upgrades[2] instanceof Upgrade41110to41200);\n\n        assertTrue(Arrays.equals(new String[] {\"4.11.0.0\", \"4.11.1.0\"}, upgrades[1].getUpgradableVersionRange()));\n        assertEquals(currentVersion.toString(), upgrades[2].getUpgradedVersion());\n\n    }\n","realPath":"engine/schema/src/test/java/com/cloud/upgrade/DatabaseUpgradeCheckerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2018-05-10 00:21:06","commitOrder":3,"curCode":"    public void testCalculateUpgradePathUnkownDbVersion() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.99.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.99.1.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length == 1);\n        assertTrue(upgrades[0] instanceof NoopDbUpgrade);\n\n     }\n","date":"2018-05-10 00:21:06","endLine":168,"groupId":"11498","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculateUpgradePathUnkownDbVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3e/2995d7a6e160cae9356610e2fc806e9530daa6.src","preCode":"    public void testCalculateUpgradePathUnkownDbVersion() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.99.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.99.1.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length == 1);\n        assertTrue(upgrades[0] instanceof NoopDbUpgrade);\n\n     }\n","realPath":"engine/schema/src/test/java/com/cloud/upgrade/DatabaseUpgradeCheckerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"N"}],"commitId":"e559154a416992847aef8b9683706eb26e978aad","commitMessage":"@@@Merge remote-tracking branch 'origin/4.11'\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2018-09-12 17:59:00","modifiedFileCount":"3","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2018-05-10 00:21:06","codes":[{"authorDate":"2019-06-10 21:13:19","commitOrder":4,"curCode":"    public void testCalculateUpgradePath410to412() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.10.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.12.0.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length >= 1);\n        assertTrue(upgrades[0] instanceof Upgrade41000to41100);\n        assertTrue(upgrades[1] instanceof Upgrade41100to41110);\n        assertTrue(upgrades[2] instanceof Upgrade41110to41120);\n        assertTrue(upgrades[3] instanceof Upgrade41120to41130);\n        assertTrue(upgrades[4] instanceof Upgrade41120to41200);\n\n        assertTrue(Arrays.equals(new String[] {\"4.11.0.0\", \"4.11.1.0\"}, upgrades[1].getUpgradableVersionRange()));\n        assertEquals(currentVersion.toString(), upgrades[4].getUpgradedVersion());\n\n    }\n","date":"2019-06-10 21:13:19","endLine":108,"groupId":"1015","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testCalculateUpgradePath410to412","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/98/2a386161b66979e5867d9db718f4e3947a7124.src","preCode":"    public void testCalculateUpgradePath410to412() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.10.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.12.0.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length >= 1);\n        assertTrue(upgrades[0] instanceof Upgrade41000to41100);\n        assertTrue(upgrades[1] instanceof Upgrade41100to41110);\n        assertTrue(upgrades[2] instanceof Upgrade41110to41120);\n        assertTrue(upgrades[3] instanceof Upgrade41120to41200);\n\n        assertTrue(Arrays.equals(new String[] {\"4.11.0.0\", \"4.11.1.0\"}, upgrades[1].getUpgradableVersionRange()));\n        assertEquals(currentVersion.toString(), upgrades[3].getUpgradedVersion());\n\n    }\n","realPath":"engine/schema/src/test/java/com/cloud/upgrade/DatabaseUpgradeCheckerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2018-05-10 00:21:06","commitOrder":4,"curCode":"    public void testCalculateUpgradePathUnkownDbVersion() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.99.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.99.1.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length == 1);\n        assertTrue(upgrades[0] instanceof NoopDbUpgrade);\n\n     }\n","date":"2018-05-10 00:21:06","endLine":168,"groupId":"1015","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculateUpgradePathUnkownDbVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/3e/2995d7a6e160cae9356610e2fc806e9530daa6.src","preCode":"    public void testCalculateUpgradePathUnkownDbVersion() {\n\n        final CloudStackVersion dbVersion = CloudStackVersion.parse(\"4.99.0.0\");\n        assertNotNull(dbVersion);\n\n        final CloudStackVersion currentVersion = CloudStackVersion.parse(\"4.99.1.0\");\n        assertNotNull(currentVersion);\n\n        final DatabaseUpgradeChecker checker = new DatabaseUpgradeChecker();\n        final DbUpgrade[] upgrades = checker.calculateUpgradePath(dbVersion, currentVersion);\n        assertNotNull(upgrades);\n        assertTrue(upgrades.length == 1);\n        assertTrue(upgrades[0] instanceof NoopDbUpgrade);\n\n     }\n","realPath":"engine/schema/src/test/java/com/cloud/upgrade/DatabaseUpgradeCheckerTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"N"}],"commitId":"4b5a415f24b26b2bb18dc459970355317e3adb9d","commitMessage":"@@@Merge remote-tracking branch 'origin/4.12'\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>\n","date":"2019-06-10 21:13:19","modifiedFileCount":"4","status":"M","submitter":"Rohit Yadav"}]
