[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public String getDefaultPublicTrafficLabel(long dcId, HypervisorType hypervisorType) {\n        try {\n            PhysicalNetwork publicPhyNetwork = getOnePhysicalNetworkByZoneAndTrafficType(dcId, TrafficType.Public);\n            PhysicalNetworkTrafficTypeVO publicTraffic = _pNTrafficTypeDao.findBy(publicPhyNetwork.getId(), TrafficType.Public);\n            if (publicTraffic != null) {\n                String label = null;\n                switch (hypervisorType) {\n                    case XenServer:\n                        label = publicTraffic.getXenNetworkLabel();\n                        break;\n                    case KVM:\n                        label = publicTraffic.getKvmNetworkLabel();\n                        break;\n                    case VMware:\n                        label = publicTraffic.getVmwareNetworkLabel();\n                        break;\n                    case Hyperv:\n                        label = publicTraffic.getHypervNetworkLabel();\n                        break;\n                    case Ovm3:\n                        label = publicTraffic.getOvm3NetworkLabel();\n                        break;\n                }\n                return label;\n            }\n        } catch (Exception ex) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Failed to retrieve the default label for public traffic.\" + \"zone: \" + dcId + \" hypervisor: \" + hypervisorType + \" due to: \" +\n                    ex.getMessage());\n            }\n        }\n        return null;\n    }\n","date":"2018-01-20 05:49:27","endLine":1703,"groupId":"18488","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getDefaultPublicTrafficLabel","params":"(longdcId@HypervisorTypehypervisorType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e5/83b717a16bf390eb5f1aa96040374fb64b9c94.src","preCode":"    public String getDefaultPublicTrafficLabel(long dcId, HypervisorType hypervisorType) {\n        try {\n            PhysicalNetwork publicPhyNetwork = getOnePhysicalNetworkByZoneAndTrafficType(dcId, TrafficType.Public);\n            PhysicalNetworkTrafficTypeVO publicTraffic = _pNTrafficTypeDao.findBy(publicPhyNetwork.getId(), TrafficType.Public);\n            if (publicTraffic != null) {\n                String label = null;\n                switch (hypervisorType) {\n                    case XenServer:\n                        label = publicTraffic.getXenNetworkLabel();\n                        break;\n                    case KVM:\n                        label = publicTraffic.getKvmNetworkLabel();\n                        break;\n                    case VMware:\n                        label = publicTraffic.getVmwareNetworkLabel();\n                        break;\n                    case Hyperv:\n                        label = publicTraffic.getHypervNetworkLabel();\n                        break;\n                    case Ovm3:\n                        label = publicTraffic.getOvm3NetworkLabel();\n                        break;\n                }\n                return label;\n            }\n        } catch (Exception ex) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Failed to retrieve the default label for public traffic.\" + \"zone: \" + dcId + \" hypervisor: \" + hypervisorType + \" due to: \" +\n                    ex.getMessage());\n            }\n        }\n        return null;\n    }\n","realPath":"server/src/main/java/com/cloud/network/NetworkModelImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1671,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public String getDefaultGuestTrafficLabel(long dcId, HypervisorType hypervisorType) {\n        try {\n            PhysicalNetwork guestPhyNetwork = getOnePhysicalNetworkByZoneAndTrafficType(dcId, TrafficType.Guest);\n            PhysicalNetworkTrafficTypeVO guestTraffic = _pNTrafficTypeDao.findBy(guestPhyNetwork.getId(), TrafficType.Guest);\n            if (guestTraffic != null) {\n                String label = null;\n                switch (hypervisorType) {\n                    case XenServer:\n                        label = guestTraffic.getXenNetworkLabel();\n                        break;\n                    case KVM:\n                        label = guestTraffic.getKvmNetworkLabel();\n                        break;\n                    case VMware:\n                        label = guestTraffic.getVmwareNetworkLabel();\n                        break;\n                    case Hyperv:\n                        label = guestTraffic.getHypervNetworkLabel();\n                        break;\n                    case Ovm3:\n                        label = guestTraffic.getOvm3NetworkLabel();\n                        break;\n                }\n                return label;\n            }\n        } catch (Exception ex) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Failed to retrive the default label for management traffic:\" + \"zone: \" + dcId + \" hypervisor: \" + hypervisorType + \" due to:\" +\n                    ex.getMessage());\n            }\n        }\n        return null;\n    }\n","date":"2018-01-20 05:49:27","endLine":1738,"groupId":"18488","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getDefaultGuestTrafficLabel","params":"(longdcId@HypervisorTypehypervisorType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e5/83b717a16bf390eb5f1aa96040374fb64b9c94.src","preCode":"    public String getDefaultGuestTrafficLabel(long dcId, HypervisorType hypervisorType) {\n        try {\n            PhysicalNetwork guestPhyNetwork = getOnePhysicalNetworkByZoneAndTrafficType(dcId, TrafficType.Guest);\n            PhysicalNetworkTrafficTypeVO guestTraffic = _pNTrafficTypeDao.findBy(guestPhyNetwork.getId(), TrafficType.Guest);\n            if (guestTraffic != null) {\n                String label = null;\n                switch (hypervisorType) {\n                    case XenServer:\n                        label = guestTraffic.getXenNetworkLabel();\n                        break;\n                    case KVM:\n                        label = guestTraffic.getKvmNetworkLabel();\n                        break;\n                    case VMware:\n                        label = guestTraffic.getVmwareNetworkLabel();\n                        break;\n                    case Hyperv:\n                        label = guestTraffic.getHypervNetworkLabel();\n                        break;\n                    case Ovm3:\n                        label = guestTraffic.getOvm3NetworkLabel();\n                        break;\n                }\n                return label;\n            }\n        } catch (Exception ex) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Failed to retrive the default label for management traffic:\" + \"zone: \" + dcId + \" hypervisor: \" + hypervisorType + \" due to:\" +\n                    ex.getMessage());\n            }\n        }\n        return null;\n    }\n","realPath":"server/src/main/java/com/cloud/network/NetworkModelImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1706,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-04-20 03:03:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public String getDefaultPublicTrafficLabel(long dcId, HypervisorType hypervisorType) {\n        try {\n            PhysicalNetwork publicPhyNetwork = getOnePhysicalNetworkByZoneAndTrafficType(dcId, TrafficType.Public);\n            PhysicalNetworkTrafficTypeVO publicTraffic = _pNTrafficTypeDao.findBy(publicPhyNetwork.getId(), TrafficType.Public);\n            if (publicTraffic != null) {\n                String label = null;\n                switch (hypervisorType) {\n                    case XenServer:\n                        label = publicTraffic.getXenNetworkLabel();\n                        break;\n                    case KVM:\n                        label = publicTraffic.getKvmNetworkLabel();\n                        break;\n                    case VMware:\n                        label = publicTraffic.getVmwareNetworkLabel();\n                        break;\n                    case Hyperv:\n                        label = publicTraffic.getHypervNetworkLabel();\n                        break;\n                    case Ovm3:\n                        label = publicTraffic.getOvm3NetworkLabel();\n                        break;\n                }\n                return label;\n            }\n        } catch (Exception ex) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Failed to retrieve the default label for public traffic.\" + \"zone: \" + dcId + \" hypervisor: \" + hypervisorType + \" due to: \" +\n                    ex.getMessage());\n            }\n        }\n        return null;\n    }\n","date":"2018-01-20 05:49:27","endLine":1703,"groupId":"101802","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getDefaultPublicTrafficLabel","params":"(longdcId@HypervisorTypehypervisorType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e5/83b717a16bf390eb5f1aa96040374fb64b9c94.src","preCode":"    public String getDefaultPublicTrafficLabel(long dcId, HypervisorType hypervisorType) {\n        try {\n            PhysicalNetwork publicPhyNetwork = getOnePhysicalNetworkByZoneAndTrafficType(dcId, TrafficType.Public);\n            PhysicalNetworkTrafficTypeVO publicTraffic = _pNTrafficTypeDao.findBy(publicPhyNetwork.getId(), TrafficType.Public);\n            if (publicTraffic != null) {\n                String label = null;\n                switch (hypervisorType) {\n                    case XenServer:\n                        label = publicTraffic.getXenNetworkLabel();\n                        break;\n                    case KVM:\n                        label = publicTraffic.getKvmNetworkLabel();\n                        break;\n                    case VMware:\n                        label = publicTraffic.getVmwareNetworkLabel();\n                        break;\n                    case Hyperv:\n                        label = publicTraffic.getHypervNetworkLabel();\n                        break;\n                    case Ovm3:\n                        label = publicTraffic.getOvm3NetworkLabel();\n                        break;\n                }\n                return label;\n            }\n        } catch (Exception ex) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Failed to retrieve the default label for public traffic.\" + \"zone: \" + dcId + \" hypervisor: \" + hypervisorType + \" due to: \" +\n                    ex.getMessage());\n            }\n        }\n        return null;\n    }\n","realPath":"server/src/main/java/com/cloud/network/NetworkModelImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1671,"status":"N"},{"authorDate":"2018-04-20 03:03:27","commitOrder":2,"curCode":"    public String getDefaultGuestTrafficLabel(long dcId, HypervisorType hypervisorType) {\n        try {\n            PhysicalNetwork guestPhyNetwork = getOnePhysicalNetworkByZoneAndTrafficType(dcId, TrafficType.Guest);\n            PhysicalNetworkTrafficTypeVO guestTraffic = _pNTrafficTypeDao.findBy(guestPhyNetwork.getId(), TrafficType.Guest);\n            if (guestTraffic != null) {\n                String label = null;\n                switch (hypervisorType) {\n                    case XenServer:\n                        label = guestTraffic.getXenNetworkLabel();\n                        break;\n                    case KVM:\n                        label = guestTraffic.getKvmNetworkLabel();\n                        break;\n                    case VMware:\n                        label = guestTraffic.getVmwareNetworkLabel();\n                        break;\n                    case Hyperv:\n                        label = guestTraffic.getHypervNetworkLabel();\n                        break;\n                    case Ovm3:\n                        label = guestTraffic.getOvm3NetworkLabel();\n                        break;\n                }\n                return label;\n            }\n        } catch (Exception ex) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Failed to retrive the default label for guest traffic:\" + \"zone: \" + dcId + \" hypervisor: \" + hypervisorType + \" due to:\" +\n                    ex.getMessage());\n            }\n        }\n        return null;\n    }\n","date":"2018-04-20 03:03:27","endLine":1739,"groupId":"101802","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getDefaultGuestTrafficLabel","params":"(longdcId@HypervisorTypehypervisorType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/38/0aabf493a069e4791cafd6aceff7ccb5136602.src","preCode":"    public String getDefaultGuestTrafficLabel(long dcId, HypervisorType hypervisorType) {\n        try {\n            PhysicalNetwork guestPhyNetwork = getOnePhysicalNetworkByZoneAndTrafficType(dcId, TrafficType.Guest);\n            PhysicalNetworkTrafficTypeVO guestTraffic = _pNTrafficTypeDao.findBy(guestPhyNetwork.getId(), TrafficType.Guest);\n            if (guestTraffic != null) {\n                String label = null;\n                switch (hypervisorType) {\n                    case XenServer:\n                        label = guestTraffic.getXenNetworkLabel();\n                        break;\n                    case KVM:\n                        label = guestTraffic.getKvmNetworkLabel();\n                        break;\n                    case VMware:\n                        label = guestTraffic.getVmwareNetworkLabel();\n                        break;\n                    case Hyperv:\n                        label = guestTraffic.getHypervNetworkLabel();\n                        break;\n                    case Ovm3:\n                        label = guestTraffic.getOvm3NetworkLabel();\n                        break;\n                }\n                return label;\n            }\n        } catch (Exception ex) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Failed to retrive the default label for management traffic:\" + \"zone: \" + dcId + \" hypervisor: \" + hypervisorType + \" due to:\" +\n                    ex.getMessage());\n            }\n        }\n        return null;\n    }\n","realPath":"server/src/main/java/com/cloud/network/NetworkModelImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1707,"status":"M"}],"commitId":"fed3492b57625f415df556b5e2e44efee2257f50","commitMessage":"@@@CLOUDSTACK-10357: Improve log messages in methods (#2580)\n\nFix several logs that mismatch method.\nAdd stacktraces for throw new statements.","date":"2018-04-20 03:03:27","modifiedFileCount":"12","status":"M","submitter":"lzh3636"}]
