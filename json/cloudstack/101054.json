[{"authorTime":"2018-03-29 16:06:50","codes":[{"authorDate":"2018-03-29 16:06:50","commitOrder":1,"curCode":"    public void transferDataToNetworkAclRulePojoTestPartialUpgradeAllValuesNull() {\n        Mockito.when(updateNetworkACLItemCmdMock.isPartialUpgrade()).thenReturn(true);\n        Mockito.when(updateNetworkACLItemCmdMock.getNumber()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortStart()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortEnd()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourceCidrList()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getProtocol()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpCode()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getAction()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getTrafficType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getCustomId()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getReason()).thenReturn(null);\n\n        Mockito.when(updateNetworkACLItemCmdMock.isDisplay()).thenReturn(false);\n        Mockito.when(networkAclItemVoMock.isDisplay()).thenReturn(false);\n\n        networkAclServiceImpl.transferDataToNetworkAclRulePojo(updateNetworkACLItemCmdMock, networkAclItemVoMock, networkAclMock);\n\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setNumber(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourcePortStart(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourcePortEnd(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourceCidrList(Mockito.anyListOf(String.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setProtocol(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setIcmpCode(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setIcmpType(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setAction(Mockito.any(Action.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setTrafficType(Mockito.any(TrafficType.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setUuid(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setReason(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setDisplay(Mockito.anyBoolean());\n        Mockito.verify(networkAclServiceImpl, Mockito.times(0)).validateAndCreateNetworkAclRuleAction(Mockito.anyString());\n    }\n","date":"2018-03-29 16:06:50","endLine":735,"groupId":"20624","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"transferDataToNetworkAclRulePojoTestPartialUpgradeAllValuesNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ed/8602b181c3b08e030b78b23d3bf25297f662ea.src","preCode":"    public void transferDataToNetworkAclRulePojoTestPartialUpgradeAllValuesNull() {\n        Mockito.when(updateNetworkACLItemCmdMock.isPartialUpgrade()).thenReturn(true);\n        Mockito.when(updateNetworkACLItemCmdMock.getNumber()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortStart()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortEnd()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourceCidrList()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getProtocol()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpCode()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getAction()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getTrafficType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getCustomId()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getReason()).thenReturn(null);\n\n        Mockito.when(updateNetworkACLItemCmdMock.isDisplay()).thenReturn(false);\n        Mockito.when(networkAclItemVoMock.isDisplay()).thenReturn(false);\n\n        networkAclServiceImpl.transferDataToNetworkAclRulePojo(updateNetworkACLItemCmdMock, networkAclItemVoMock, networkAclMock);\n\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setNumber(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourcePortStart(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourcePortEnd(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourceCidrList(Mockito.anyListOf(String.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setProtocol(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setIcmpCode(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setIcmpType(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setAction(Mockito.any(Action.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setTrafficType(Mockito.any(TrafficType.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setUuid(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setReason(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setDisplay(Mockito.anyBoolean());\n        Mockito.verify(networkAclServiceImpl, Mockito.times(0)).validateAndCreateNetworkAclRuleAction(Mockito.anyString());\n    }\n","realPath":"server/src/test/java/com/cloud/network/vpc/NetworkACLServiceImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":703,"status":"B"},{"authorDate":"2018-03-29 16:06:50","commitOrder":1,"curCode":"    public void transferDataToNetworkAclRulePojoTestNotPartialUpgradeAllValuesNull() {\n        Mockito.when(updateNetworkACLItemCmdMock.isPartialUpgrade()).thenReturn(false);\n\n        Mockito.when(updateNetworkACLItemCmdMock.getNumber()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortStart()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortEnd()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourceCidrList()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getProtocol()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpCode()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getAction()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getTrafficType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getCustomId()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getReason()).thenReturn(null);\n\n        Mockito.when(updateNetworkACLItemCmdMock.isDisplay()).thenReturn(false);\n        Mockito.when(networkAclItemVoMock.isDisplay()).thenReturn(false);\n\n        networkAclServiceImpl.transferDataToNetworkAclRulePojo(updateNetworkACLItemCmdMock, networkAclItemVoMock, networkAclMock);\n\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setNumber(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourcePortStart(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourcePortEnd(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourceCidrList(Mockito.anyListOf(String.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setProtocol(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setIcmpCode(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setIcmpType(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setAction(Mockito.any(Action.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setTrafficType(Mockito.any(TrafficType.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setUuid(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setReason(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setDisplay(Mockito.anyBoolean());\n        Mockito.verify(networkAclServiceImpl, Mockito.times(1)).validateAndCreateNetworkAclRuleAction(Mockito.anyString());\n    }\n","date":"2018-03-29 16:06:50","endLine":771,"groupId":"20624","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"transferDataToNetworkAclRulePojoTestNotPartialUpgradeAllValuesNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ed/8602b181c3b08e030b78b23d3bf25297f662ea.src","preCode":"    public void transferDataToNetworkAclRulePojoTestNotPartialUpgradeAllValuesNull() {\n        Mockito.when(updateNetworkACLItemCmdMock.isPartialUpgrade()).thenReturn(false);\n\n        Mockito.when(updateNetworkACLItemCmdMock.getNumber()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortStart()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortEnd()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourceCidrList()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getProtocol()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpCode()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getAction()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getTrafficType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getCustomId()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getReason()).thenReturn(null);\n\n        Mockito.when(updateNetworkACLItemCmdMock.isDisplay()).thenReturn(false);\n        Mockito.when(networkAclItemVoMock.isDisplay()).thenReturn(false);\n\n        networkAclServiceImpl.transferDataToNetworkAclRulePojo(updateNetworkACLItemCmdMock, networkAclItemVoMock, networkAclMock);\n\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setNumber(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourcePortStart(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourcePortEnd(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourceCidrList(Mockito.anyListOf(String.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setProtocol(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setIcmpCode(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setIcmpType(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setAction(Mockito.any(Action.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setTrafficType(Mockito.any(TrafficType.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setUuid(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setReason(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setDisplay(Mockito.anyBoolean());\n        Mockito.verify(networkAclServiceImpl, Mockito.times(1)).validateAndCreateNetworkAclRuleAction(Mockito.anyString());\n    }\n","realPath":"server/src/test/java/com/cloud/network/vpc/NetworkACLServiceImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":738,"status":"B"}],"commitId":"36f4645154bae4b6c79b62d9df93cb94a3323255","commitMessage":"@@@[CLOUDSTACK-10332] Users are not able to change/edit the protocol of an ACL rule (#2496)\n\n* [CLOUDSTACK-10332] Users are not able to change/edit the protocol of an ACL rule\n\n* Code formatting\n","date":"2018-03-29 16:06:50","modifiedFileCount":"4","status":"B","submitter":"Rafael Weing?rtner"},{"authorTime":"2020-02-12 15:28:25","codes":[{"authorDate":"2018-03-29 16:06:50","commitOrder":2,"curCode":"    public void transferDataToNetworkAclRulePojoTestPartialUpgradeAllValuesNull() {\n        Mockito.when(updateNetworkACLItemCmdMock.isPartialUpgrade()).thenReturn(true);\n        Mockito.when(updateNetworkACLItemCmdMock.getNumber()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortStart()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortEnd()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourceCidrList()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getProtocol()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpCode()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getAction()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getTrafficType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getCustomId()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getReason()).thenReturn(null);\n\n        Mockito.when(updateNetworkACLItemCmdMock.isDisplay()).thenReturn(false);\n        Mockito.when(networkAclItemVoMock.isDisplay()).thenReturn(false);\n\n        networkAclServiceImpl.transferDataToNetworkAclRulePojo(updateNetworkACLItemCmdMock, networkAclItemVoMock, networkAclMock);\n\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setNumber(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourcePortStart(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourcePortEnd(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourceCidrList(Mockito.anyListOf(String.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setProtocol(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setIcmpCode(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setIcmpType(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setAction(Mockito.any(Action.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setTrafficType(Mockito.any(TrafficType.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setUuid(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setReason(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setDisplay(Mockito.anyBoolean());\n        Mockito.verify(networkAclServiceImpl, Mockito.times(0)).validateAndCreateNetworkAclRuleAction(Mockito.anyString());\n    }\n","date":"2018-03-29 16:06:50","endLine":735,"groupId":"101054","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"transferDataToNetworkAclRulePojoTestPartialUpgradeAllValuesNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ed/8602b181c3b08e030b78b23d3bf25297f662ea.src","preCode":"    public void transferDataToNetworkAclRulePojoTestPartialUpgradeAllValuesNull() {\n        Mockito.when(updateNetworkACLItemCmdMock.isPartialUpgrade()).thenReturn(true);\n        Mockito.when(updateNetworkACLItemCmdMock.getNumber()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortStart()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortEnd()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourceCidrList()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getProtocol()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpCode()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getAction()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getTrafficType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getCustomId()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getReason()).thenReturn(null);\n\n        Mockito.when(updateNetworkACLItemCmdMock.isDisplay()).thenReturn(false);\n        Mockito.when(networkAclItemVoMock.isDisplay()).thenReturn(false);\n\n        networkAclServiceImpl.transferDataToNetworkAclRulePojo(updateNetworkACLItemCmdMock, networkAclItemVoMock, networkAclMock);\n\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setNumber(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourcePortStart(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourcePortEnd(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setSourceCidrList(Mockito.anyListOf(String.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setProtocol(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setIcmpCode(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setIcmpType(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setAction(Mockito.any(Action.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setTrafficType(Mockito.any(TrafficType.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setUuid(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setReason(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setDisplay(Mockito.anyBoolean());\n        Mockito.verify(networkAclServiceImpl, Mockito.times(0)).validateAndCreateNetworkAclRuleAction(Mockito.anyString());\n    }\n","realPath":"server/src/test/java/com/cloud/network/vpc/NetworkACLServiceImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":703,"status":"N"},{"authorDate":"2020-02-12 15:28:25","commitOrder":2,"curCode":"    public void transferDataToNetworkAclRulePojoTestNotPartialUpgradeAllValuesNull() {\n        Mockito.when(updateNetworkACLItemCmdMock.isPartialUpgrade()).thenReturn(false);\n\n        Mockito.when(updateNetworkACLItemCmdMock.getNumber()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortStart()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortEnd()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourceCidrList()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getProtocol()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpCode()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getAction()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getTrafficType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getCustomId()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getReason()).thenReturn(null);\n\n        Mockito.when(updateNetworkACLItemCmdMock.isDisplay()).thenReturn(false);\n        Mockito.when(networkAclItemVoMock.isDisplay()).thenReturn(false);\n\n        networkAclServiceImpl.transferDataToNetworkAclRulePojo(updateNetworkACLItemCmdMock, networkAclItemVoMock, networkAclMock);\n\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setNumber(nullable(Integer.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourcePortStart(nullable(Integer.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourcePortEnd(nullable(Integer.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourceCidrList(nullable(List.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setProtocol(nullable(String.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setIcmpCode(nullable(Integer.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setIcmpType(nullable(Integer.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setAction(nullable(Action.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setTrafficType(nullable(TrafficType.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setUuid(nullable(String.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setReason(nullable(String.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setDisplay(nullable(Boolean.class));\n        Mockito.verify(networkAclServiceImpl, Mockito.times(1)).validateAndCreateNetworkAclRuleAction(nullable(String.class));\n    }\n","date":"2020-02-12 15:28:25","endLine":826,"groupId":"101054","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"transferDataToNetworkAclRulePojoTestNotPartialUpgradeAllValuesNull","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/f2/1bc2c34961276729165d8504eb798d9c07f20a.src","preCode":"    public void transferDataToNetworkAclRulePojoTestNotPartialUpgradeAllValuesNull() {\n        Mockito.when(updateNetworkACLItemCmdMock.isPartialUpgrade()).thenReturn(false);\n\n        Mockito.when(updateNetworkACLItemCmdMock.getNumber()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortStart()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourcePortEnd()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getSourceCidrList()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getProtocol()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpCode()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getIcmpType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getAction()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getTrafficType()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getCustomId()).thenReturn(null);\n        Mockito.when(updateNetworkACLItemCmdMock.getReason()).thenReturn(null);\n\n        Mockito.when(updateNetworkACLItemCmdMock.isDisplay()).thenReturn(false);\n        Mockito.when(networkAclItemVoMock.isDisplay()).thenReturn(false);\n\n        networkAclServiceImpl.transferDataToNetworkAclRulePojo(updateNetworkACLItemCmdMock, networkAclItemVoMock, networkAclMock);\n\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setNumber(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourcePortStart(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourcePortEnd(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setSourceCidrList(Mockito.anyListOf(String.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setProtocol(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setIcmpCode(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setIcmpType(Mockito.anyInt());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setAction(Mockito.any(Action.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setTrafficType(Mockito.any(TrafficType.class));\n        Mockito.verify(networkAclItemVoMock, Mockito.times(0)).setUuid(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setReason(Mockito.anyString());\n        Mockito.verify(networkAclItemVoMock, Mockito.times(1)).setDisplay(Mockito.anyBoolean());\n        Mockito.verify(networkAclServiceImpl, Mockito.times(1)).validateAndCreateNetworkAclRuleAction(Mockito.anyString());\n    }\n","realPath":"server/src/test/java/com/cloud/network/vpc/NetworkACLServiceImplTest.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":793,"status":"M"}],"commitId":"d90341ebf149d40a4dd03897960136dc29256677","commitMessage":"@@@cloudstack: add JDK11 support (#3601)\n\nThis adds support for JDK11 in CloudStack 4.14+:\n\n- Fixes code to build against JDK11\n- Bump to Debian 9 systemvmtemplate with openjdk-11\n- Fix Travis to run smoketests against openjdk-11\n- Use maven provided jdk11 compatible mysql-connector-java\n- Remove old agent init.d scripts\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2020-02-12 15:28:25","modifiedFileCount":"118","status":"M","submitter":"Rohit Yadav"}]
