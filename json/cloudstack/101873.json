[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public Site2SiteCustomerGateway createCustomerGateway(CreateVpnCustomerGatewayCmd cmd) {\n        Account caller = CallContext.current().getCallingAccount();\n        Account owner = _accountMgr.getAccount(cmd.getEntityOwnerId());\n\n        \r\n        _accountMgr.checkAccess(caller, null, false, owner);\n\n        String name = cmd.getName();\n        String gatewayIp = cmd.getGatewayIp();\n\n        if (!NetUtils.isValidIp4(gatewayIp) && !NetUtils.verifyDomainName(gatewayIp)) {\n            throw new InvalidParameterValueException(\"The customer gateway ip/Domain \" + gatewayIp + \" is invalid!\");\n        }\n        if (name == null) {\n            name = \"VPN-\" + gatewayIp;\n        }\n        String peerCidrList = cmd.getGuestCidrList();\n        if (!NetUtils.isValidCidrList(peerCidrList)) {\n            throw new InvalidParameterValueException(\"The customer gateway peer cidr list \" + peerCidrList + \" contains an invalid cidr!\");\n        }\n        String ipsecPsk = cmd.getIpsecPsk();\n        String ikePolicy = cmd.getIkePolicy();\n        String espPolicy = cmd.getEspPolicy();\n        if (!NetUtils.isValidS2SVpnPolicy(\"ike\", ikePolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway IKE policy \" + ikePolicy + \" is invalid!  Verify the required Diffie Hellman (DH) group is specified.\");\n        }\n        if (!NetUtils.isValidS2SVpnPolicy(\"esp\", espPolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway ESP policy \" + espPolicy + \" is invalid!\");\n        }\n        Long ikeLifetime = cmd.getIkeLifetime();\n        if (ikeLifetime == null) {\n            \r\n            ikeLifetime = (long)86400;\n        }\n        if (ikeLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The IKE lifetime \" + ikeLifetime + \" of vpn connection is invalid!\");\n        }\n        Long espLifetime = cmd.getEspLifetime();\n        if (espLifetime == null) {\n            \r\n            espLifetime = (long)3600;\n        }\n        if (espLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The ESP lifetime \" + espLifetime + \" of vpn connection is invalid!\");\n        }\n\n        Boolean dpd = cmd.getDpd();\n        if (dpd == null) {\n            dpd = false;\n        }\n\n        Boolean encap = cmd.getEncap();\n        if (encap == null) {\n            encap = false;\n        }\n\n        long accountId = owner.getAccountId();\n        if (_customerGatewayDao.findByNameAndAccountId(name, accountId) != null) {\n            throw new InvalidParameterValueException(\"The customer gateway with name \" + name + \" already existed!\");\n        }\n\n        checkCustomerGatewayCidrList(peerCidrList);\n\n        Site2SiteCustomerGatewayVO gw =\n            new Site2SiteCustomerGatewayVO(name, accountId, owner.getDomainId(), gatewayIp, peerCidrList, ipsecPsk, ikePolicy, espPolicy, ikeLifetime, espLifetime, dpd, encap);\n        _customerGatewayDao.persist(gw);\n        return gw;\n    }\n","date":"2018-01-20 05:49:27","endLine":238,"groupId":"4783","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createCustomerGateway","params":"(CreateVpnCustomerGatewayCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ae/bc87174850974a2502b2f035b15d2a69cddc7c.src","preCode":"    public Site2SiteCustomerGateway createCustomerGateway(CreateVpnCustomerGatewayCmd cmd) {\n        Account caller = CallContext.current().getCallingAccount();\n        Account owner = _accountMgr.getAccount(cmd.getEntityOwnerId());\n\n        \r\n        _accountMgr.checkAccess(caller, null, false, owner);\n\n        String name = cmd.getName();\n        String gatewayIp = cmd.getGatewayIp();\n\n        if (!NetUtils.isValidIp4(gatewayIp) && !NetUtils.verifyDomainName(gatewayIp)) {\n            throw new InvalidParameterValueException(\"The customer gateway ip/Domain \" + gatewayIp + \" is invalid!\");\n        }\n        if (name == null) {\n            name = \"VPN-\" + gatewayIp;\n        }\n        String peerCidrList = cmd.getGuestCidrList();\n        if (!NetUtils.isValidCidrList(peerCidrList)) {\n            throw new InvalidParameterValueException(\"The customer gateway peer cidr list \" + peerCidrList + \" contains an invalid cidr!\");\n        }\n        String ipsecPsk = cmd.getIpsecPsk();\n        String ikePolicy = cmd.getIkePolicy();\n        String espPolicy = cmd.getEspPolicy();\n        if (!NetUtils.isValidS2SVpnPolicy(\"ike\", ikePolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway IKE policy \" + ikePolicy + \" is invalid!  Verify the required Diffie Hellman (DH) group is specified.\");\n        }\n        if (!NetUtils.isValidS2SVpnPolicy(\"esp\", espPolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway ESP policy \" + espPolicy + \" is invalid!\");\n        }\n        Long ikeLifetime = cmd.getIkeLifetime();\n        if (ikeLifetime == null) {\n            \r\n            ikeLifetime = (long)86400;\n        }\n        if (ikeLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The IKE lifetime \" + ikeLifetime + \" of vpn connection is invalid!\");\n        }\n        Long espLifetime = cmd.getEspLifetime();\n        if (espLifetime == null) {\n            \r\n            espLifetime = (long)3600;\n        }\n        if (espLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The ESP lifetime \" + espLifetime + \" of vpn connection is invalid!\");\n        }\n\n        Boolean dpd = cmd.getDpd();\n        if (dpd == null) {\n            dpd = false;\n        }\n\n        Boolean encap = cmd.getEncap();\n        if (encap == null) {\n            encap = false;\n        }\n\n        long accountId = owner.getAccountId();\n        if (_customerGatewayDao.findByNameAndAccountId(name, accountId) != null) {\n            throw new InvalidParameterValueException(\"The customer gateway with name \" + name + \" already existed!\");\n        }\n\n        checkCustomerGatewayCidrList(peerCidrList);\n\n        Site2SiteCustomerGatewayVO gw =\n            new Site2SiteCustomerGatewayVO(name, accountId, owner.getDomainId(), gatewayIp, peerCidrList, ipsecPsk, ikePolicy, espPolicy, ikeLifetime, espLifetime, dpd, encap);\n        _customerGatewayDao.persist(gw);\n        return gw;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public Site2SiteCustomerGateway updateCustomerGateway(UpdateVpnCustomerGatewayCmd cmd) {\n        CallContext.current().setEventDetails(\" Id: \" + cmd.getId());\n        Account caller = CallContext.current().getCallingAccount();\n\n        Long id = cmd.getId();\n        Site2SiteCustomerGatewayVO gw = _customerGatewayDao.findById(id);\n        if (gw == null) {\n            throw new InvalidParameterValueException(\"Find to find customer gateway with id \" + id);\n        }\n        _accountMgr.checkAccess(caller, null, false, gw);\n\n        List<Site2SiteVpnConnectionVO> conns = _vpnConnectionDao.listByCustomerGatewayId(id);\n        if (conns != null) {\n            for (Site2SiteVpnConnection conn : conns) {\n                if (conn.getState() != State.Error) {\n                    throw new InvalidParameterValueException(\"Unable to update customer gateway with connections in non-Error state!\");\n                }\n            }\n        }\n        String name = cmd.getName();\n        String gatewayIp = cmd.getGatewayIp();\n\n        if (!NetUtils.isValidIp4(gatewayIp) && !NetUtils.verifyDomainName(gatewayIp)) {\n            throw new InvalidParameterValueException(\"The customer gateway ip/Domain \" + gatewayIp + \" is invalid!\");\n        }\n        if (name == null) {\n            name = \"VPN-\" + gatewayIp;\n        }\n        String guestCidrList = cmd.getGuestCidrList();\n        if (!NetUtils.isValidCidrList(guestCidrList)) {\n            throw new InvalidParameterValueException(\"The customer gateway peer cidr list \" + guestCidrList + \" contains an invalid cidr!\");\n        }\n        String ipsecPsk = cmd.getIpsecPsk();\n        String ikePolicy = cmd.getIkePolicy();\n        String espPolicy = cmd.getEspPolicy();\n        if (!NetUtils.isValidS2SVpnPolicy(\"ike\", ikePolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway IKE policy\" + ikePolicy + \" is invalid!  Verify the required Diffie Hellman (DH) group is specified.\");\n        }\n        if (!NetUtils.isValidS2SVpnPolicy(\"esp\", espPolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway ESP policy\" + espPolicy + \" is invalid!\");\n        }\n        Long ikeLifetime = cmd.getIkeLifetime();\n        if (ikeLifetime == null) {\n            \r\n            ikeLifetime = (long)86400;\n        }\n        if (ikeLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The IKE lifetime \" + ikeLifetime + \" of vpn connection is invalid!\");\n        }\n        Long espLifetime = cmd.getEspLifetime();\n        if (espLifetime == null) {\n            \r\n            espLifetime = (long)3600;\n        }\n        if (espLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The ESP lifetime \" + espLifetime + \" of vpn connection is invalid!\");\n        }\n\n        Boolean dpd = cmd.getDpd();\n        if (dpd == null) {\n            dpd = false;\n        }\n\n        Boolean encap = cmd.getEncap();\n        if (encap == null) {\n            encap = false;\n        }\n\n        checkCustomerGatewayCidrList(guestCidrList);\n\n        long accountId = gw.getAccountId();\n        Site2SiteCustomerGatewayVO existedGw = _customerGatewayDao.findByNameAndAccountId(name, accountId);\n        if (existedGw != null && existedGw.getId() != gw.getId()) {\n            throw new InvalidParameterValueException(\"The customer gateway with name \" + name + \" already existed!\");\n        }\n\n        gw.setName(name);\n        gw.setGatewayIp(gatewayIp);\n        gw.setGuestCidrList(guestCidrList);\n        gw.setIkePolicy(ikePolicy);\n        gw.setEspPolicy(espPolicy);\n        gw.setIpsecPsk(ipsecPsk);\n        gw.setIkeLifetime(ikeLifetime);\n        gw.setEspLifetime(espLifetime);\n        gw.setDpd(dpd);\n        gw.setEncap(encap);\n        _customerGatewayDao.persist(gw);\n        return gw;\n    }\n","date":"2018-01-20 05:49:27","endLine":499,"groupId":"4777","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"updateCustomerGateway","params":"(UpdateVpnCustomerGatewayCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/ae/bc87174850974a2502b2f035b15d2a69cddc7c.src","preCode":"    public Site2SiteCustomerGateway updateCustomerGateway(UpdateVpnCustomerGatewayCmd cmd) {\n        CallContext.current().setEventDetails(\" Id: \" + cmd.getId());\n        Account caller = CallContext.current().getCallingAccount();\n\n        Long id = cmd.getId();\n        Site2SiteCustomerGatewayVO gw = _customerGatewayDao.findById(id);\n        if (gw == null) {\n            throw new InvalidParameterValueException(\"Find to find customer gateway with id \" + id);\n        }\n        _accountMgr.checkAccess(caller, null, false, gw);\n\n        List<Site2SiteVpnConnectionVO> conns = _vpnConnectionDao.listByCustomerGatewayId(id);\n        if (conns != null) {\n            for (Site2SiteVpnConnection conn : conns) {\n                if (conn.getState() != State.Error) {\n                    throw new InvalidParameterValueException(\"Unable to update customer gateway with connections in non-Error state!\");\n                }\n            }\n        }\n        String name = cmd.getName();\n        String gatewayIp = cmd.getGatewayIp();\n\n        if (!NetUtils.isValidIp4(gatewayIp) && !NetUtils.verifyDomainName(gatewayIp)) {\n            throw new InvalidParameterValueException(\"The customer gateway ip/Domain \" + gatewayIp + \" is invalid!\");\n        }\n        if (name == null) {\n            name = \"VPN-\" + gatewayIp;\n        }\n        String guestCidrList = cmd.getGuestCidrList();\n        if (!NetUtils.isValidCidrList(guestCidrList)) {\n            throw new InvalidParameterValueException(\"The customer gateway peer cidr list \" + guestCidrList + \" contains an invalid cidr!\");\n        }\n        String ipsecPsk = cmd.getIpsecPsk();\n        String ikePolicy = cmd.getIkePolicy();\n        String espPolicy = cmd.getEspPolicy();\n        if (!NetUtils.isValidS2SVpnPolicy(\"ike\", ikePolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway IKE policy\" + ikePolicy + \" is invalid!  Verify the required Diffie Hellman (DH) group is specified.\");\n        }\n        if (!NetUtils.isValidS2SVpnPolicy(\"esp\", espPolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway ESP policy\" + espPolicy + \" is invalid!\");\n        }\n        Long ikeLifetime = cmd.getIkeLifetime();\n        if (ikeLifetime == null) {\n            \r\n            ikeLifetime = (long)86400;\n        }\n        if (ikeLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The IKE lifetime \" + ikeLifetime + \" of vpn connection is invalid!\");\n        }\n        Long espLifetime = cmd.getEspLifetime();\n        if (espLifetime == null) {\n            \r\n            espLifetime = (long)3600;\n        }\n        if (espLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The ESP lifetime \" + espLifetime + \" of vpn connection is invalid!\");\n        }\n\n        Boolean dpd = cmd.getDpd();\n        if (dpd == null) {\n            dpd = false;\n        }\n\n        Boolean encap = cmd.getEncap();\n        if (encap == null) {\n            encap = false;\n        }\n\n        checkCustomerGatewayCidrList(guestCidrList);\n\n        long accountId = gw.getAccountId();\n        Site2SiteCustomerGatewayVO existedGw = _customerGatewayDao.findByNameAndAccountId(name, accountId);\n        if (existedGw != null && existedGw.getId() != gw.getId()) {\n            throw new InvalidParameterValueException(\"The customer gateway with name \" + name + \" already existed!\");\n        }\n\n        gw.setName(name);\n        gw.setGatewayIp(gatewayIp);\n        gw.setGuestCidrList(guestCidrList);\n        gw.setIkePolicy(ikePolicy);\n        gw.setEspPolicy(espPolicy);\n        gw.setIpsecPsk(ipsecPsk);\n        gw.setIkeLifetime(ikeLifetime);\n        gw.setEspLifetime(espLifetime);\n        gw.setDpd(dpd);\n        gw.setEncap(encap);\n        _customerGatewayDao.persist(gw);\n        return gw;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2021-05-06 02:57:43","codes":[{"authorDate":"2021-05-06 02:57:43","commitOrder":2,"curCode":"    public Site2SiteCustomerGateway createCustomerGateway(CreateVpnCustomerGatewayCmd cmd) {\n        Account caller = CallContext.current().getCallingAccount();\n        Account owner = _accountMgr.getAccount(cmd.getEntityOwnerId());\n\n        \r\n        _accountMgr.checkAccess(caller, null, false, owner);\n\n        String name = cmd.getName();\n        String gatewayIp = cmd.getGatewayIp();\n\n        if (!NetUtils.isValidIp4(gatewayIp) && !NetUtils.verifyDomainName(gatewayIp)) {\n            throw new InvalidParameterValueException(\"The customer gateway ip/Domain \" + gatewayIp + \" is invalid!\");\n        }\n        if (name == null) {\n            name = \"VPN-\" + gatewayIp;\n        }\n        String peerCidrList = cmd.getGuestCidrList();\n        if (!NetUtils.isValidCidrList(peerCidrList)) {\n            throw new InvalidParameterValueException(\"The customer gateway peer cidr list \" + peerCidrList + \" contains an invalid cidr!\");\n        }\n        String ipsecPsk = cmd.getIpsecPsk();\n        String ikePolicy = cmd.getIkePolicy();\n        String espPolicy = cmd.getEspPolicy();\n        if (!NetUtils.isValidS2SVpnPolicy(\"ike\", ikePolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway IKE policy \" + ikePolicy + \" is invalid!  Verify the required Diffie Hellman (DH) group is specified.\");\n        }\n        if (!NetUtils.isValidS2SVpnPolicy(\"esp\", espPolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway ESP policy \" + espPolicy + \" is invalid!\");\n        }\n        Long ikeLifetime = cmd.getIkeLifetime();\n        if (ikeLifetime == null) {\n            \r\n            ikeLifetime = (long)86400;\n        }\n        if (ikeLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The IKE lifetime \" + ikeLifetime + \" of vpn connection is invalid!\");\n        }\n        Long espLifetime = cmd.getEspLifetime();\n        if (espLifetime == null) {\n            \r\n            espLifetime = (long)3600;\n        }\n        if (espLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The ESP lifetime \" + espLifetime + \" of vpn connection is invalid!\");\n        }\n\n        Boolean dpd = cmd.getDpd();\n        if (dpd == null) {\n            dpd = false;\n        }\n\n        Boolean encap = cmd.getEncap();\n        if (encap == null) {\n            encap = false;\n        }\n\n        long accountId = owner.getAccountId();\n        if (_customerGatewayDao.findByNameAndAccountId(name, accountId) != null) {\n            throw new InvalidParameterValueException(\"The customer gateway with name \" + name + \" already existed!\");\n        }\n\n        Boolean splitConnections = cmd.getSplitConnections();\n        if (splitConnections == null) {\n            splitConnections = false;\n        }\n\n        String ikeVersion = cmd.getIkeVersion();\n        if (ikeVersion == null) {\n            ikeVersion = \"ike\";\n        }\n\n        checkCustomerGatewayCidrList(peerCidrList);\n\n        Site2SiteCustomerGatewayVO gw =\n            new Site2SiteCustomerGatewayVO(name, accountId, owner.getDomainId(), gatewayIp, peerCidrList, ipsecPsk, ikePolicy, espPolicy, ikeLifetime, espLifetime, dpd, encap, splitConnections, ikeVersion);\n        _customerGatewayDao.persist(gw);\n        return gw;\n    }\n","date":"2021-05-06 02:57:43","endLine":249,"groupId":"101873","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createCustomerGateway","params":"(CreateVpnCustomerGatewayCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/63/fcacc6ccd2b674e5b8a5937f645daf9b3a7112.src","preCode":"    public Site2SiteCustomerGateway createCustomerGateway(CreateVpnCustomerGatewayCmd cmd) {\n        Account caller = CallContext.current().getCallingAccount();\n        Account owner = _accountMgr.getAccount(cmd.getEntityOwnerId());\n\n        \r\n        _accountMgr.checkAccess(caller, null, false, owner);\n\n        String name = cmd.getName();\n        String gatewayIp = cmd.getGatewayIp();\n\n        if (!NetUtils.isValidIp4(gatewayIp) && !NetUtils.verifyDomainName(gatewayIp)) {\n            throw new InvalidParameterValueException(\"The customer gateway ip/Domain \" + gatewayIp + \" is invalid!\");\n        }\n        if (name == null) {\n            name = \"VPN-\" + gatewayIp;\n        }\n        String peerCidrList = cmd.getGuestCidrList();\n        if (!NetUtils.isValidCidrList(peerCidrList)) {\n            throw new InvalidParameterValueException(\"The customer gateway peer cidr list \" + peerCidrList + \" contains an invalid cidr!\");\n        }\n        String ipsecPsk = cmd.getIpsecPsk();\n        String ikePolicy = cmd.getIkePolicy();\n        String espPolicy = cmd.getEspPolicy();\n        if (!NetUtils.isValidS2SVpnPolicy(\"ike\", ikePolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway IKE policy \" + ikePolicy + \" is invalid!  Verify the required Diffie Hellman (DH) group is specified.\");\n        }\n        if (!NetUtils.isValidS2SVpnPolicy(\"esp\", espPolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway ESP policy \" + espPolicy + \" is invalid!\");\n        }\n        Long ikeLifetime = cmd.getIkeLifetime();\n        if (ikeLifetime == null) {\n            \r\n            ikeLifetime = (long)86400;\n        }\n        if (ikeLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The IKE lifetime \" + ikeLifetime + \" of vpn connection is invalid!\");\n        }\n        Long espLifetime = cmd.getEspLifetime();\n        if (espLifetime == null) {\n            \r\n            espLifetime = (long)3600;\n        }\n        if (espLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The ESP lifetime \" + espLifetime + \" of vpn connection is invalid!\");\n        }\n\n        Boolean dpd = cmd.getDpd();\n        if (dpd == null) {\n            dpd = false;\n        }\n\n        Boolean encap = cmd.getEncap();\n        if (encap == null) {\n            encap = false;\n        }\n\n        long accountId = owner.getAccountId();\n        if (_customerGatewayDao.findByNameAndAccountId(name, accountId) != null) {\n            throw new InvalidParameterValueException(\"The customer gateway with name \" + name + \" already existed!\");\n        }\n\n        checkCustomerGatewayCidrList(peerCidrList);\n\n        Site2SiteCustomerGatewayVO gw =\n            new Site2SiteCustomerGatewayVO(name, accountId, owner.getDomainId(), gatewayIp, peerCidrList, ipsecPsk, ikePolicy, espPolicy, ikeLifetime, espLifetime, dpd, encap);\n        _customerGatewayDao.persist(gw);\n        return gw;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"},{"authorDate":"2021-05-06 02:57:43","commitOrder":2,"curCode":"    public Site2SiteCustomerGateway updateCustomerGateway(UpdateVpnCustomerGatewayCmd cmd) {\n        CallContext.current().setEventDetails(\" Id: \" + cmd.getId());\n        Account caller = CallContext.current().getCallingAccount();\n\n        Long id = cmd.getId();\n        Site2SiteCustomerGatewayVO gw = _customerGatewayDao.findById(id);\n        if (gw == null) {\n            throw new InvalidParameterValueException(\"Find to find customer gateway with id \" + id);\n        }\n        _accountMgr.checkAccess(caller, null, false, gw);\n\n        String name = cmd.getName();\n        String gatewayIp = cmd.getGatewayIp();\n\n        if (!NetUtils.isValidIp4(gatewayIp) && !NetUtils.verifyDomainName(gatewayIp)) {\n            throw new InvalidParameterValueException(\"The customer gateway ip/Domain \" + gatewayIp + \" is invalid!\");\n        }\n        if (name == null) {\n            name = \"VPN-\" + gatewayIp;\n        }\n        String guestCidrList = cmd.getGuestCidrList();\n        if (!NetUtils.isValidCidrList(guestCidrList)) {\n            throw new InvalidParameterValueException(\"The customer gateway peer cidr list \" + guestCidrList + \" contains an invalid cidr!\");\n        }\n        String ipsecPsk = cmd.getIpsecPsk();\n        String ikePolicy = cmd.getIkePolicy();\n        String espPolicy = cmd.getEspPolicy();\n        if (!NetUtils.isValidS2SVpnPolicy(\"ike\", ikePolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway IKE policy\" + ikePolicy + \" is invalid!  Verify the required Diffie Hellman (DH) group is specified.\");\n        }\n        if (!NetUtils.isValidS2SVpnPolicy(\"esp\", espPolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway ESP policy\" + espPolicy + \" is invalid!\");\n        }\n        Long ikeLifetime = cmd.getIkeLifetime();\n        if (ikeLifetime == null) {\n            \r\n            ikeLifetime = (long)86400;\n        }\n        if (ikeLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The IKE lifetime \" + ikeLifetime + \" of vpn connection is invalid!\");\n        }\n        Long espLifetime = cmd.getEspLifetime();\n        if (espLifetime == null) {\n            \r\n            espLifetime = (long)3600;\n        }\n        if (espLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The ESP lifetime \" + espLifetime + \" of vpn connection is invalid!\");\n        }\n\n        Boolean dpd = cmd.getDpd();\n        if (dpd == null) {\n            dpd = false;\n        }\n\n        Boolean encap = cmd.getEncap();\n        if (encap == null) {\n            encap = false;\n        }\n\n        Boolean splitConnections = cmd.getSplitConnections();\n\n        String ikeVersion = cmd.getIkeVersion();\n\n        checkCustomerGatewayCidrList(guestCidrList);\n\n        long accountId = gw.getAccountId();\n        Site2SiteCustomerGatewayVO existedGw = _customerGatewayDao.findByNameAndAccountId(name, accountId);\n        if (existedGw != null && existedGw.getId() != gw.getId()) {\n            throw new InvalidParameterValueException(\"The customer gateway with name \" + name + \" already existed!\");\n        }\n\n        gw.setName(name);\n        gw.setGatewayIp(gatewayIp);\n        gw.setGuestCidrList(guestCidrList);\n        gw.setIkePolicy(ikePolicy);\n        gw.setEspPolicy(espPolicy);\n        gw.setIpsecPsk(ipsecPsk);\n        gw.setIkeLifetime(ikeLifetime);\n        gw.setEspLifetime(espLifetime);\n        gw.setDpd(dpd);\n        gw.setEncap(encap);\n        gw.setSplitConnections(splitConnections);\n        if (ikeVersion != null) {\n            gw.setIkeVersion(ikeVersion);\n        }\n        _customerGatewayDao.persist(gw);\n\n        setupVpnConnection(caller, id);\n\n        return gw;\n    }\n","date":"2021-05-06 02:57:43","endLine":513,"groupId":"101873","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"updateCustomerGateway","params":"(UpdateVpnCustomerGatewayCmdcmd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/63/fcacc6ccd2b674e5b8a5937f645daf9b3a7112.src","preCode":"    public Site2SiteCustomerGateway updateCustomerGateway(UpdateVpnCustomerGatewayCmd cmd) {\n        CallContext.current().setEventDetails(\" Id: \" + cmd.getId());\n        Account caller = CallContext.current().getCallingAccount();\n\n        Long id = cmd.getId();\n        Site2SiteCustomerGatewayVO gw = _customerGatewayDao.findById(id);\n        if (gw == null) {\n            throw new InvalidParameterValueException(\"Find to find customer gateway with id \" + id);\n        }\n        _accountMgr.checkAccess(caller, null, false, gw);\n\n        List<Site2SiteVpnConnectionVO> conns = _vpnConnectionDao.listByCustomerGatewayId(id);\n        if (conns != null) {\n            for (Site2SiteVpnConnection conn : conns) {\n                if (conn.getState() != State.Error) {\n                    throw new InvalidParameterValueException(\"Unable to update customer gateway with connections in non-Error state!\");\n                }\n            }\n        }\n        String name = cmd.getName();\n        String gatewayIp = cmd.getGatewayIp();\n\n        if (!NetUtils.isValidIp4(gatewayIp) && !NetUtils.verifyDomainName(gatewayIp)) {\n            throw new InvalidParameterValueException(\"The customer gateway ip/Domain \" + gatewayIp + \" is invalid!\");\n        }\n        if (name == null) {\n            name = \"VPN-\" + gatewayIp;\n        }\n        String guestCidrList = cmd.getGuestCidrList();\n        if (!NetUtils.isValidCidrList(guestCidrList)) {\n            throw new InvalidParameterValueException(\"The customer gateway peer cidr list \" + guestCidrList + \" contains an invalid cidr!\");\n        }\n        String ipsecPsk = cmd.getIpsecPsk();\n        String ikePolicy = cmd.getIkePolicy();\n        String espPolicy = cmd.getEspPolicy();\n        if (!NetUtils.isValidS2SVpnPolicy(\"ike\", ikePolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway IKE policy\" + ikePolicy + \" is invalid!  Verify the required Diffie Hellman (DH) group is specified.\");\n        }\n        if (!NetUtils.isValidS2SVpnPolicy(\"esp\", espPolicy)) {\n            throw new InvalidParameterValueException(\"The customer gateway ESP policy\" + espPolicy + \" is invalid!\");\n        }\n        Long ikeLifetime = cmd.getIkeLifetime();\n        if (ikeLifetime == null) {\n            \r\n            ikeLifetime = (long)86400;\n        }\n        if (ikeLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The IKE lifetime \" + ikeLifetime + \" of vpn connection is invalid!\");\n        }\n        Long espLifetime = cmd.getEspLifetime();\n        if (espLifetime == null) {\n            \r\n            espLifetime = (long)3600;\n        }\n        if (espLifetime > 86400) {\n            throw new InvalidParameterValueException(\"The ESP lifetime \" + espLifetime + \" of vpn connection is invalid!\");\n        }\n\n        Boolean dpd = cmd.getDpd();\n        if (dpd == null) {\n            dpd = false;\n        }\n\n        Boolean encap = cmd.getEncap();\n        if (encap == null) {\n            encap = false;\n        }\n\n        checkCustomerGatewayCidrList(guestCidrList);\n\n        long accountId = gw.getAccountId();\n        Site2SiteCustomerGatewayVO existedGw = _customerGatewayDao.findByNameAndAccountId(name, accountId);\n        if (existedGw != null && existedGw.getId() != gw.getId()) {\n            throw new InvalidParameterValueException(\"The customer gateway with name \" + name + \" already existed!\");\n        }\n\n        gw.setName(name);\n        gw.setGatewayIp(gatewayIp);\n        gw.setGuestCidrList(guestCidrList);\n        gw.setIkePolicy(ikePolicy);\n        gw.setEspPolicy(espPolicy);\n        gw.setIpsecPsk(ipsecPsk);\n        gw.setIkeLifetime(ikeLifetime);\n        gw.setEspLifetime(espLifetime);\n        gw.setDpd(dpd);\n        gw.setEncap(encap);\n        _customerGatewayDao.persist(gw);\n        return gw;\n    }\n","realPath":"server/src/main/java/com/cloud/network/vpn/Site2SiteVpnManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":422,"status":"M"}],"commitId":"fce84e62ab36baec70206a1fe88d322fe16717b7","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n","date":"2021-05-06 02:57:43","modifiedFileCount":"15","status":"M","submitter":"Rohit Yadav"}]
