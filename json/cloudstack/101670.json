[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean implement(final Network network, final NetworkOffering offering, final DeployDestination dest, final ReservationContext context)\n            throws ResourceUnavailableException, ConcurrentOperationException, InsufficientCapacityException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n        params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n        final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                .setGuestNetwork(network)\n                .setVpc(vpc)\n                .setDeployDestination(dest)\n                .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                .setParams(params)\n                .build();\n\n        final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n        if (routers == null || routers.size() == 0) {\n            throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n        }\n\n        configureGuestNetwork(network, routers);\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":214,"groupId":"4965","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"implement","params":"(finalNetworknetwork@finalNetworkOfferingoffering@finalDeployDestinationdest@finalReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/99/99ee62cb8f7a1953a3175009c8f2882060d19f.src","preCode":"    public boolean implement(final Network network, final NetworkOffering offering, final DeployDestination dest, final ReservationContext context)\n            throws ResourceUnavailableException, ConcurrentOperationException, InsufficientCapacityException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n        params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n        final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                .setGuestNetwork(network)\n                .setVpc(vpc)\n                .setDeployDestination(dest)\n                .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                .setParams(params)\n                .build();\n\n        final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n        if (routers == null || routers.size() == 0) {\n            throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n        }\n\n        configureGuestNetwork(network, routers);\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/VpcVirtualRouterElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    public boolean prepare(final Network network, final NicProfile nic, final VirtualMachineProfile vm, final DeployDestination dest, final ReservationContext context)\n            throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        if (vm.getType() == VirtualMachine.Type.User) {\n            final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n            params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n            final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                    .setGuestNetwork(network)\n                    .setVpc(vpc)\n                    .setDeployDestination(dest)\n                    .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                    .setParams(params)\n                    .build();\n\n            final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n            if (routers == null || routers.size() == 0) {\n                throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n            }\n\n            configureGuestNetwork(network, routers);\n        }\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":274,"groupId":"4965","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"(finalNetworknetwork@finalNicProfilenic@finalVirtualMachineProfilevm@finalDeployDestinationdest@finalReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/99/99ee62cb8f7a1953a3175009c8f2882060d19f.src","preCode":"    public boolean prepare(final Network network, final NicProfile nic, final VirtualMachineProfile vm, final DeployDestination dest, final ReservationContext context)\n            throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        if (vm.getType() == VirtualMachine.Type.User) {\n            final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n            params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n            final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                    .setGuestNetwork(network)\n                    .setVpc(vpc)\n                    .setDeployDestination(dest)\n                    .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                    .setParams(params)\n                    .build();\n\n            final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n            if (routers == null || routers.size() == 0) {\n                throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n            }\n\n            configureGuestNetwork(network, routers);\n        }\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/VpcVirtualRouterElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-06-06 15:11:18","commitOrder":2,"curCode":"    public boolean implement(final Network network, final NetworkOffering offering, final DeployDestination dest, final ReservationContext context)\n            throws ResourceUnavailableException, ConcurrentOperationException, InsufficientCapacityException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n        params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n        if (network.isRollingRestart()) {\n            params.put(VirtualMachineProfile.Param.RollingRestart, true);\n        }\n\n        final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                .setGuestNetwork(network)\n                .setVpc(vpc)\n                .setDeployDestination(dest)\n                .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                .setParams(params)\n                .build();\n\n        final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n        if (routers == null || routers.size() == 0) {\n            throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n        }\n\n        configureGuestNetwork(network, routers);\n\n        return true;\n    }\n","date":"2018-06-06 15:11:18","endLine":222,"groupId":"20133","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"implement","params":"(finalNetworknetwork@finalNetworkOfferingoffering@finalDeployDestinationdest@finalReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/16/5cb7d28dcd1bc05e19def0ea600f7eba39ebf8.src","preCode":"    public boolean implement(final Network network, final NetworkOffering offering, final DeployDestination dest, final ReservationContext context)\n            throws ResourceUnavailableException, ConcurrentOperationException, InsufficientCapacityException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n        params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n        final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                .setGuestNetwork(network)\n                .setVpc(vpc)\n                .setDeployDestination(dest)\n                .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                .setParams(params)\n                .build();\n\n        final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n        if (routers == null || routers.size() == 0) {\n            throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n        }\n\n        configureGuestNetwork(network, routers);\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/VpcVirtualRouterElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    public boolean prepare(final Network network, final NicProfile nic, final VirtualMachineProfile vm, final DeployDestination dest, final ReservationContext context)\n            throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        if (vm.getType() == VirtualMachine.Type.User) {\n            final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n            params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n            final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                    .setGuestNetwork(network)\n                    .setVpc(vpc)\n                    .setDeployDestination(dest)\n                    .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                    .setParams(params)\n                    .build();\n\n            final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n            if (routers == null || routers.size() == 0) {\n                throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n            }\n\n            configureGuestNetwork(network, routers);\n        }\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":274,"groupId":"4965","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"(finalNetworknetwork@finalNicProfilenic@finalVirtualMachineProfilevm@finalDeployDestinationdest@finalReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/99/99ee62cb8f7a1953a3175009c8f2882060d19f.src","preCode":"    public boolean prepare(final Network network, final NicProfile nic, final VirtualMachineProfile vm, final DeployDestination dest, final ReservationContext context)\n            throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        if (vm.getType() == VirtualMachine.Type.User) {\n            final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n            params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n            final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                    .setGuestNetwork(network)\n                    .setVpc(vpc)\n                    .setDeployDestination(dest)\n                    .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                    .setParams(params)\n                    .build();\n\n            final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n            if (routers == null || routers.size() == 0) {\n                throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n            }\n\n            configureGuestNetwork(network, routers);\n        }\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/VpcVirtualRouterElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"N"}],"commitId":"9146d7b7a0df2867d86e3cec352c631b4826962e","commitMessage":"@@@Merge branch '4.11'\n","date":"2018-06-06 15:11:18","modifiedFileCount":"15","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2020-08-25 17:49:51","commitOrder":3,"curCode":"    public boolean implement(final Network network, final NetworkOffering offering, final DeployDestination dest, final ReservationContext context)\n            throws ResourceUnavailableException, ConcurrentOperationException, InsufficientCapacityException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n        params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n        if (network.isRollingRestart()) {\n            params.put(VirtualMachineProfile.Param.RollingRestart, true);\n            vpc.setRollingRestart(true);\n        }\n\n        final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                .setGuestNetwork(network)\n                .setVpc(vpc)\n                .setDeployDestination(dest)\n                .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                .setParams(params)\n                .build();\n\n        final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n        if (routers == null || routers.size() == 0) {\n            throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n        }\n\n        configureGuestNetwork(network, routers);\n\n        return true;\n    }\n","date":"2020-08-25 17:49:51","endLine":223,"groupId":"101670","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"implement","params":"(finalNetworknetwork@finalNetworkOfferingoffering@finalDeployDestinationdest@finalReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/37/7f18a55d7c3501ab46123497f359db412573e9.src","preCode":"    public boolean implement(final Network network, final NetworkOffering offering, final DeployDestination dest, final ReservationContext context)\n            throws ResourceUnavailableException, ConcurrentOperationException, InsufficientCapacityException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n        params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n        if (network.isRollingRestart()) {\n            params.put(VirtualMachineProfile.Param.RollingRestart, true);\n        }\n\n        final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                .setGuestNetwork(network)\n                .setVpc(vpc)\n                .setDeployDestination(dest)\n                .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                .setParams(params)\n                .build();\n\n        final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n        if (routers == null || routers.size() == 0) {\n            throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n        }\n\n        configureGuestNetwork(network, routers);\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/VpcVirtualRouterElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"},{"authorDate":"2018-01-20 05:49:27","commitOrder":3,"curCode":"    public boolean prepare(final Network network, final NicProfile nic, final VirtualMachineProfile vm, final DeployDestination dest, final ReservationContext context)\n            throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        if (vm.getType() == VirtualMachine.Type.User) {\n            final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n            params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n            final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                    .setGuestNetwork(network)\n                    .setVpc(vpc)\n                    .setDeployDestination(dest)\n                    .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                    .setParams(params)\n                    .build();\n\n            final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n            if (routers == null || routers.size() == 0) {\n                throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n            }\n\n            configureGuestNetwork(network, routers);\n        }\n\n        return true;\n    }\n","date":"2018-01-20 05:49:27","endLine":274,"groupId":"101670","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"(finalNetworknetwork@finalNicProfilenic@finalVirtualMachineProfilevm@finalDeployDestinationdest@finalReservationContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/99/99ee62cb8f7a1953a3175009c8f2882060d19f.src","preCode":"    public boolean prepare(final Network network, final NicProfile nic, final VirtualMachineProfile vm, final DeployDestination dest, final ReservationContext context)\n            throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n\n        final Long vpcId = network.getVpcId();\n        if (vpcId == null) {\n            s_logger.trace(\"Network \" + network + \" is not associated with any VPC\");\n            return false;\n        }\n\n        final Vpc vpc = _vpcMgr.getActiveVpc(vpcId);\n        if (vpc == null) {\n            s_logger.warn(\"Unable to find Enabled VPC by id \" + vpcId);\n            return false;\n        }\n\n        if (vm.getType() == VirtualMachine.Type.User) {\n            final Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n            params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks, true);\n\n            final RouterDeploymentDefinition routerDeploymentDefinition = routerDeploymentDefinitionBuilder.create()\n                    .setGuestNetwork(network)\n                    .setVpc(vpc)\n                    .setDeployDestination(dest)\n                    .setAccountOwner(_accountMgr.getAccount(vpc.getAccountId()))\n                    .setParams(params)\n                    .build();\n\n            final List<DomainRouterVO> routers = routerDeploymentDefinition.deployVirtualRouter();\n\n            if (routers == null || routers.size() == 0) {\n                throw new ResourceUnavailableException(\"Can't find at least one running router!\", DataCenter.class, network.getDataCenterId());\n            }\n\n            configureGuestNetwork(network, routers);\n        }\n\n        return true;\n    }\n","realPath":"server/src/main/java/com/cloud/network/element/VpcVirtualRouterElement.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"N"}],"commitId":"c4922c4289f7674c2aed6889ab3de571e2383ac0","commitMessage":"@@@Fixed rolling restart on VPC network (#4272)\n\nThis PR fixes the problem where restarting a network with cleanup within a VPC destroys the VR first before creating a new one.\n\nFixes: #3815","date":"2020-08-25 17:49:51","modifiedFileCount":"1","status":"M","submitter":"Spaceman1984"}]
