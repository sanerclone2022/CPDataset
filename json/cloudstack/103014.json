[{"authorTime":"2019-05-23 19:18:30","codes":[{"authorDate":"2019-05-23 19:18:30","commitOrder":1,"curCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                Integer nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()));\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2019-05-23 19:18:29","endLine":983,"groupId":"5355","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VirtualMachineMOvmMo@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@IntegernfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/b7/3d25050c067e84284d8a741180b09090ae0e99.src","preCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                Integer nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()));\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":937,"status":"B"},{"authorDate":"2019-05-23 19:18:30","commitOrder":1,"curCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, Integer nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                Pair<VirtualMachineMO, String[]> cloneResult =\n                        vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, diskDevice, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()));\n                clonedVm = cloneResult.first();\n                clonedVm.exportVm(exportPath, exportName, false, false);\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2019-05-23 19:18:29","endLine":1709,"groupId":"11039","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VirtualMachineMOvmMo@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@IntegernfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9d/6aca4f03c33977a5aec21efb5521dfdf324ba8.src","preCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, Integer nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                Pair<VirtualMachineMO, String[]> cloneResult =\n                        vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, diskDevice, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()));\n                clonedVm = cloneResult.first();\n                clonedVm.exportVm(exportPath, exportName, false, false);\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1664,"status":"B"}],"commitId":"4f356392ab8b5ac064966af9b2e29e10f5867132","commitMessage":"@@@vmware: don't use redundant worker VM to extract volume (#3218)\n\nThis fixes the issue that VM with VMsnapshots fails to start after\nextract volume is done on a stopped VM.  on VMware.\n\nSigned-off-by: Rohit Yadav <rohit.yadav@shapeblue.com>","date":"2019-05-23 19:18:29","modifiedFileCount":"2","status":"B","submitter":"Rohit Yadav"},{"authorTime":"2020-08-19 17:23:38","codes":[{"authorDate":"2020-08-19 17:23:38","commitOrder":2,"curCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()));\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2020-08-19 17:23:38","endLine":985,"groupId":"5355","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VirtualMachineMOvmMo@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/36/9e5b6ef6e5900494119a28d2c95d115969a2e2.src","preCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                Integer nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()));\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":939,"status":"M"},{"authorDate":"2020-08-19 17:23:38","commitOrder":2,"curCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                Pair<VirtualMachineMO, String[]> cloneResult =\n                        vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, diskDevice, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()));\n                clonedVm = cloneResult.first();\n                clonedVm.exportVm(exportPath, exportName, false, false);\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2020-08-19 17:23:38","endLine":1716,"groupId":"11039","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VirtualMachineMOvmMo@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/e5/fae17ed5156753feec1c44bd2b5a019a77be08.src","preCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, Integer nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                Pair<VirtualMachineMO, String[]> cloneResult =\n                        vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, diskDevice, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()));\n                clonedVm = cloneResult.first();\n                clonedVm.exportVm(exportPath, exportName, false, false);\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1671,"status":"M"}],"commitId":"d57aa835174c9dd045930d1396ce4bee9a275a60","commitMessage":"@@@server: Added nfs minor version support (#4180)\n\nThis PR adds minor version support when mounting nfs on the SSVM as requested in #2861\n\nThe global setting \"secstorage.nfs.version\" has been changed to use the String data type which allows any minor version to be specified.","date":"2020-08-19 17:23:38","modifiedFileCount":"30","status":"M","submitter":"Spaceman1984"},{"authorTime":"2020-10-09 23:06:07","codes":[{"authorDate":"2020-10-09 23:06:07","commitOrder":3,"curCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), null);\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2020-10-09 23:06:07","endLine":985,"groupId":"5355","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VirtualMachineMOvmMo@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d5/9fcfbdf12171557d6a73a8a242fbea6a33b3c3.src","preCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()));\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":939,"status":"M"},{"authorDate":"2020-10-09 23:06:07","commitOrder":3,"curCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String virtualHardwareVersion = String.valueOf(vmMo.getVirtualHardwareVersion());\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                Pair<VirtualMachineMO, String[]> cloneResult =\n                        vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, diskDevice, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), virtualHardwareVersion);\n                clonedVm = cloneResult.first();\n                clonedVm.exportVm(exportPath, exportName, false, false);\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2020-10-09 23:06:07","endLine":1741,"groupId":"712","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VirtualMachineMOvmMo@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/df/780e76216e329f36a9a70488fde3e5ea99618b.src","preCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                Pair<VirtualMachineMO, String[]> cloneResult =\n                        vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, diskDevice, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()));\n                clonedVm = cloneResult.first();\n                clonedVm.exportVm(exportPath, exportName, false, false);\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1694,"status":"M"}],"commitId":"479ef8aafaa6162daa1d26058d225d885065f4cc","commitMessage":"@@@VMware: match hardware version for worker VM when taking a snapshot (#4321)\n\n* Add hardware version to worker VM\n\n* Added worker VM hardware version when creating a template from a volume and migrating a detached volume\n\n* Add null parameter back that was removed by merge","date":"2020-10-09 23:06:07","modifiedFileCount":"5","status":"M","submitter":"Spaceman1984"},{"authorTime":"2020-10-26 21:24:14","codes":[{"authorDate":"2020-10-09 23:06:07","commitOrder":4,"curCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), null);\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2020-10-09 23:06:07","endLine":985,"groupId":"5355","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VirtualMachineMOvmMo@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/d5/9fcfbdf12171557d6a73a8a242fbea6a33b3c3.src","preCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), null);\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":939,"status":"N"},{"authorDate":"2020-10-26 21:24:14","commitOrder":4,"curCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VmwareContext context, VirtualMachineMO vmMo, VmwareHypervisorHost hyperHost, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String virtualHardwareVersion = String.valueOf(vmMo.getVirtualHardwareVersion());\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                DatacenterMO dcMo = new DatacenterMO(context, hyperHost.getHyperHostDatacenter());\n                ManagedObjectReference morPool = hyperHost.getHyperHostOwnerResourcePool();\n                vmMo.createFullCloneWithSpecificDisk(exportName, dcMo.getVmFolder(), morPool, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), volumeDeviceInfo);\n                clonedVm = dcMo.findVm(exportName);\n                if (clonedVm == null) {\n                    String msg = \"Failed to clone VM. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                vmMo = clonedVm;\n            }\n            vmMo.exportVm(exportPath, exportName, false, false);\n\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2020-10-26 21:24:14","endLine":1859,"groupId":"12459","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VmwareContextcontext@VirtualMachineMOvmMo@VmwareHypervisorHosthyperHost@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/85/aacd34f42c8bccea920b949c272fc6721f4cf2.src","preCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String virtualHardwareVersion = String.valueOf(vmMo.getVirtualHardwareVersion());\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                Pair<VirtualMachineMO, String[]> cloneResult =\n                        vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, diskDevice, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), virtualHardwareVersion);\n                clonedVm = cloneResult.first();\n                clonedVm.exportVm(exportPath, exportName, false, false);\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1806,"status":"M"}],"commitId":"1a75872cd484dd387552bae58996a56679fdb51e","commitMessage":"@@@Merge pull request #4307 from shapeblue/ovfprops-and-vsphere-adv-together\n\n[VMware] vSphere advanced capabilities and Full OVF properties support","date":"2020-10-26 21:24:14","modifiedFileCount":"173","status":"M","submitter":"Boris Stoyanov - a.k.a Bobby"},{"authorTime":"2020-10-26 21:24:14","codes":[{"authorDate":"2021-04-06 19:20:31","commitOrder":5,"curCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                String vmxFormattedVirtualHardwareVersion = VirtualMachineMO.getVmxFormattedVirtualHardwareVersion(vmMo.getVirtualHardwareVersion());\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), vmxFormattedVirtualHardwareVersion);\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2021-04-06 19:20:31","endLine":987,"groupId":"8280","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VirtualMachineMOvmMo@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a9/8032c7fdda51036def77d308ec35f04fd7c9b9.src","preCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), null);\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":940,"status":"M"},{"authorDate":"2020-10-26 21:24:14","commitOrder":5,"curCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VmwareContext context, VirtualMachineMO vmMo, VmwareHypervisorHost hyperHost, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String virtualHardwareVersion = String.valueOf(vmMo.getVirtualHardwareVersion());\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                DatacenterMO dcMo = new DatacenterMO(context, hyperHost.getHyperHostDatacenter());\n                ManagedObjectReference morPool = hyperHost.getHyperHostOwnerResourcePool();\n                vmMo.createFullCloneWithSpecificDisk(exportName, dcMo.getVmFolder(), morPool, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), volumeDeviceInfo);\n                clonedVm = dcMo.findVm(exportName);\n                if (clonedVm == null) {\n                    String msg = \"Failed to clone VM. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                vmMo = clonedVm;\n            }\n            vmMo.exportVm(exportPath, exportName, false, false);\n\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2020-10-26 21:24:14","endLine":1859,"groupId":"12459","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VmwareContextcontext@VirtualMachineMOvmMo@VmwareHypervisorHosthyperHost@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/85/aacd34f42c8bccea920b949c272fc6721f4cf2.src","preCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VmwareContext context, VirtualMachineMO vmMo, VmwareHypervisorHost hyperHost, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String virtualHardwareVersion = String.valueOf(vmMo.getVirtualHardwareVersion());\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                DatacenterMO dcMo = new DatacenterMO(context, hyperHost.getHyperHostDatacenter());\n                ManagedObjectReference morPool = hyperHost.getHyperHostOwnerResourcePool();\n                vmMo.createFullCloneWithSpecificDisk(exportName, dcMo.getVmFolder(), morPool, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), volumeDeviceInfo);\n                clonedVm = dcMo.findVm(exportName);\n                if (clonedVm == null) {\n                    String msg = \"Failed to clone VM. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                vmMo = clonedVm;\n            }\n            vmMo.exportVm(exportPath, exportName, false, false);\n\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1806,"status":"N"}],"commitId":"76e9c2772b8f850591908b67b328e4aad8f84579","commitMessage":"@@@Merge remote-tracking branch 'origin/4.15'\n","date":"2021-04-06 19:20:31","modifiedFileCount":"4","status":"M","submitter":"Rohit Yadav"},{"authorTime":"2021-08-31 09:32:27","codes":[{"authorDate":"2021-04-06 19:20:31","commitOrder":6,"curCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                String vmxFormattedVirtualHardwareVersion = VirtualMachineMO.getVmxFormattedVirtualHardwareVersion(vmMo.getVirtualHardwareVersion());\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), vmxFormattedVirtualHardwareVersion);\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2021-04-06 19:20:31","endLine":987,"groupId":"8280","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VirtualMachineMOvmMo@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/a9/8032c7fdda51036def77d308ec35f04fd7c9b9.src","preCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                String vmxFormattedVirtualHardwareVersion = VirtualMachineMO.getVmxFormattedVirtualHardwareVersion(vmMo.getVirtualHardwareVersion());\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), vmxFormattedVirtualHardwareVersion);\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":940,"status":"N"},{"authorDate":"2021-08-31 09:32:27","commitOrder":6,"curCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VmwareContext context, VirtualMachineMO vmMo, VmwareHypervisorHost hyperHost, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String virtualHardwareVersion = String.valueOf(vmMo.getVirtualHardwareVersion());\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                DatacenterMO dcMo = new DatacenterMO(context, hyperHost.getHyperHostDatacenter());\n                ManagedObjectReference morPool = hyperHost.getHyperHostOwnerResourcePool();\n                vmMo.createFullCloneWithSpecificDisk(exportName, dcMo.getVmFolder(), morPool, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), volumeDeviceInfo);\n                clonedVm = dcMo.findVm(exportName);\n                if (clonedVm == null) {\n                    String msg = \"Failed to clone VM. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.tagAsWorkerVM();\n                vmMo = clonedVm;\n            }\n            vmMo.exportVm(exportPath, exportName, false, false);\n\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2021-08-31 09:32:27","endLine":1860,"groupId":"12459","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VmwareContextcontext@VirtualMachineMOvmMo@VmwareHypervisorHosthyperHost@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/13/1260a39c51603ce3fa2bec2d91700cf122946f.src","preCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VmwareContext context, VirtualMachineMO vmMo, VmwareHypervisorHost hyperHost, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String virtualHardwareVersion = String.valueOf(vmMo.getVirtualHardwareVersion());\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                DatacenterMO dcMo = new DatacenterMO(context, hyperHost.getHyperHostDatacenter());\n                ManagedObjectReference morPool = hyperHost.getHyperHostOwnerResourcePool();\n                vmMo.createFullCloneWithSpecificDisk(exportName, dcMo.getVmFolder(), morPool, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), volumeDeviceInfo);\n                clonedVm = dcMo.findVm(exportName);\n                if (clonedVm == null) {\n                    String msg = \"Failed to clone VM. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                vmMo = clonedVm;\n            }\n            vmMo.exportVm(exportPath, exportName, false, false);\n\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1806,"status":"M"}],"commitId":"3ddcf858767ff5f79986457cbbac4c856b73e0bd","commitMessage":"@@@Merge branch '4.15' into main\n","date":"2021-08-31 09:32:27","modifiedFileCount":"4","status":"M","submitter":"nicolas"},{"authorTime":"2021-09-02 18:43:33","codes":[{"authorDate":"2021-09-02 18:43:33","commitOrder":7,"curCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                String vmxFormattedVirtualHardwareVersion = VirtualMachineMO.getVmxFormattedVirtualHardwareVersion(vmMo.getVirtualHardwareVersion());\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), vmxFormattedVirtualHardwareVersion);\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisksAndDestroy();\n            }\n        }\n    }\n","date":"2021-09-02 18:43:33","endLine":983,"groupId":"8280","id":13,"instanceNumber":1,"isCurCommit":1,"methodName":"exportVolumeToSecondaryStorage","params":"(VirtualMachineMOvmMo@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9e/d1f7d157953d800633d3fce0f3d69921e0e37b.src","preCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                String vmxFormattedVirtualHardwareVersion = VirtualMachineMO.getVmxFormattedVirtualHardwareVersion(vmMo.getVirtualHardwareVersion());\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), vmxFormattedVirtualHardwareVersion);\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":937,"status":"M"},{"authorDate":"2021-09-02 18:43:33","commitOrder":7,"curCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VmwareContext context, VirtualMachineMO vmMo, VmwareHypervisorHost hyperHost, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String virtualHardwareVersion = String.valueOf(vmMo.getVirtualHardwareVersion());\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                DatacenterMO dcMo = new DatacenterMO(context, hyperHost.getHyperHostDatacenter());\n                ManagedObjectReference morPool = hyperHost.getHyperHostOwnerResourcePool();\n                vmMo.createFullCloneWithSpecificDisk(exportName, dcMo.getVmFolder(), morPool, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), volumeDeviceInfo);\n                clonedVm = dcMo.findVm(exportName);\n                if (clonedVm == null) {\n                    String msg = \"Failed to clone VM. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.tagAsWorkerVM();\n                vmMo = clonedVm;\n            }\n            vmMo.exportVm(exportPath, exportName, false, false);\n\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisksAndDestroy();\n            }\n        }\n    }\n","date":"2021-09-02 18:43:33","endLine":1848,"groupId":"12459","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"exportVolumeToSecondaryStorage","params":"(VmwareContextcontext@VirtualMachineMOvmMo@VmwareHypervisorHosthyperHost@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/81/0f355662ad1cc9201a5d818e6a8e758c76960b.src","preCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VmwareContext context, VirtualMachineMO vmMo, VmwareHypervisorHost hyperHost, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String virtualHardwareVersion = String.valueOf(vmMo.getVirtualHardwareVersion());\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                DatacenterMO dcMo = new DatacenterMO(context, hyperHost.getHyperHostDatacenter());\n                ManagedObjectReference morPool = hyperHost.getHyperHostOwnerResourcePool();\n                vmMo.createFullCloneWithSpecificDisk(exportName, dcMo.getVmFolder(), morPool, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), volumeDeviceInfo);\n                clonedVm = dcMo.findVm(exportName);\n                if (clonedVm == null) {\n                    String msg = \"Failed to clone VM. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.tagAsWorkerVM();\n                vmMo = clonedVm;\n            }\n            vmMo.exportVm(exportPath, exportName, false, false);\n\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisks();\n                clonedVm.destroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1795,"status":"M"}],"commitId":"56f4da6dce8aefc106c4697d9fbbfe47755336ca","commitMessage":"@@@Merge remote-tracking branch 'apache/4.15' into main\n","date":"2021-09-02 18:43:33","modifiedFileCount":"15","status":"M","submitter":"Abhishek Kumar"},{"authorTime":"2021-09-03 09:04:12","codes":[{"authorDate":"2021-09-02 18:43:33","commitOrder":8,"curCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                String vmxFormattedVirtualHardwareVersion = VirtualMachineMO.getVmxFormattedVirtualHardwareVersion(vmMo.getVirtualHardwareVersion());\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), vmxFormattedVirtualHardwareVersion);\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisksAndDestroy();\n            }\n        }\n    }\n","date":"2021-09-02 18:43:33","endLine":983,"groupId":"103014","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"exportVolumeToSecondaryStorage","params":"(VirtualMachineMOvmMo@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/9e/d1f7d157953d800633d3fce0f3d69921e0e37b.src","preCode":"    private void exportVolumeToSecondaryStorage(VirtualMachineMO vmMo, String volumePath, String secStorageUrl, String secStorageDir, String exportName, String workerVmName,\n                                                String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = _mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            if (clonedWorkerVMNeeded) {\n                \r\n                String vmxFormattedVirtualHardwareVersion = VirtualMachineMO.getVmxFormattedVirtualHardwareVersion(vmMo.getVirtualHardwareVersion());\n                vmMo.cloneFromCurrentSnapshot(workerVmName, 0, 4, volumeDeviceInfo.second(), VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), vmxFormattedVirtualHardwareVersion);\n                clonedVm = vmMo.getRunningHost().findVmOnHyperHost(workerVmName);\n                if (clonedVm == null) {\n                    String msg = \"Unable to create dummy VM to export volume. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.exportVm(exportPath, exportName, false, false);  \r\n            } else {\n                vmMo.exportVm(exportPath, exportName, false, false);\n            }\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisksAndDestroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/hypervisor/vmware/manager/VmwareStorageManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":937,"status":"N"},{"authorDate":"2021-09-03 09:04:12","commitOrder":8,"curCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VmwareContext context, VirtualMachineMO vmMo, VmwareHypervisorHost hyperHost, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String virtualHardwareVersion = String.valueOf(vmMo.getVirtualHardwareVersion());\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                DatacenterMO dcMo = new DatacenterMO(context, hyperHost.getHyperHostDatacenter());\n                ManagedObjectReference morPool = hyperHost.getHyperHostOwnerResourcePool();\n                vmMo.createFullCloneWithSpecificDisk(exportName, dcMo.getVmFolder(), morPool, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), volumeDeviceInfo);\n                clonedVm = dcMo.findVm(exportName);\n                if (clonedVm == null) {\n                    String msg = \"Failed to clone VM. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.tagAsWorkerVM();\n                vmMo = clonedVm;\n            }\n            vmMo.exportVm(exportPath, exportName, false, false);\n\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                s_logger.debug(String.format(\"Destroying cloned VM: %s with its disks\", clonedVm.getName()));\n                clonedVm.destroy();\n            }\n        }\n    }\n","date":"2021-09-03 09:04:12","endLine":1850,"groupId":"103014","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"exportVolumeToSecondaryStorage","params":"(VmwareContextcontext@VirtualMachineMOvmMo@VmwareHypervisorHosthyperHost@StringvolumePath@StringsecStorageUrl@StringsecStorageDir@StringexportName@StringworkerVmName@StringnfsVersion@booleanclonedWorkerVMNeeded)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/7e/d4e2f4f1be8df00a60e647aaf38e4274da2afe.src","preCode":"    private Pair<String, String[]> exportVolumeToSecondaryStorage(VmwareContext context, VirtualMachineMO vmMo, VmwareHypervisorHost hyperHost, String volumePath, String secStorageUrl, String secStorageDir,\n                                                                  String exportName, String workerVmName, String nfsVersion, boolean clonedWorkerVMNeeded) throws Exception {\n\n        String secondaryMountPoint = mountService.getMountPoint(secStorageUrl, nfsVersion);\n        String exportPath = secondaryMountPoint + \"/\" + secStorageDir + \"/\" + exportName;\n\n        synchronized (exportPath.intern()) {\n            if (!new File(exportPath).exists()) {\n                Script command = new Script(false, \"mkdir\", _timeout, s_logger);\n                command.add(\"-p\");\n                command.add(exportPath);\n                if (command.execute() != null) {\n                    throw new Exception(\"unable to prepare snapshot backup directory\");\n                }\n            }\n        }\n\n        VirtualMachineMO clonedVm = null;\n        try {\n\n            Pair<VirtualDisk, String> volumeDeviceInfo = vmMo.getDiskDevice(volumePath);\n            if (volumeDeviceInfo == null) {\n                String msg = \"Unable to find related disk device for volume. volume path: \" + volumePath;\n                s_logger.error(msg);\n                throw new Exception(msg);\n            }\n\n            String virtualHardwareVersion = String.valueOf(vmMo.getVirtualHardwareVersion());\n\n            String diskDevice = volumeDeviceInfo.second();\n            String disks[] = vmMo.getCurrentSnapshotDiskChainDatastorePaths(diskDevice);\n            if (clonedWorkerVMNeeded) {\n                \r\n                DatacenterMO dcMo = new DatacenterMO(context, hyperHost.getHyperHostDatacenter());\n                ManagedObjectReference morPool = hyperHost.getHyperHostOwnerResourcePool();\n                vmMo.createFullCloneWithSpecificDisk(exportName, dcMo.getVmFolder(), morPool, VmwareHelper.getDiskDeviceDatastore(volumeDeviceInfo.first()), volumeDeviceInfo);\n                clonedVm = dcMo.findVm(exportName);\n                if (clonedVm == null) {\n                    String msg = \"Failed to clone VM. volume path: \" + volumePath;\n                    s_logger.error(msg);\n                    throw new Exception(msg);\n                }\n                clonedVm.tagAsWorkerVM();\n                vmMo = clonedVm;\n            }\n            vmMo.exportVm(exportPath, exportName, false, false);\n\n            return new Pair<>(diskDevice, disks);\n        } finally {\n            if (clonedVm != null) {\n                clonedVm.detachAllDisksAndDestroy();\n            }\n        }\n    }\n","realPath":"plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":1796,"status":"M"}],"commitId":"4de35426c459fc90848c28c693576cc9ae6793a3","commitMessage":"@@@Merge branch '4.15' into main\n","date":"2021-09-03 09:04:12","modifiedFileCount":"3","status":"M","submitter":"nicolas"}]
