[{"authorTime":"2018-01-20 05:49:27","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private Pair<JobInfo.Status, String> orchestrateMigrateWithStorage(final VmWorkMigrateWithStorage work) throws Exception {\n        final VMInstanceVO vm = _entityMgr.findById(VMInstanceVO.class, work.getVmId());\n        if (vm == null) {\n            s_logger.info(\"Unable to find vm \" + work.getVmId());\n        }\n        assert vm != null;\n        orchestrateMigrateWithStorage(vm.getUuid(),\n                work.getSrcHostId(),\n                work.getDestHostId(),\n                work.getVolumeToPool());\n        return new Pair<JobInfo.Status, String>(JobInfo.Status.SUCCEEDED, null);\n    }\n","date":"2018-01-20 05:49:27","endLine":4992,"groupId":"11462","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"orchestrateMigrateWithStorage","params":"(finalVmWorkMigrateWithStoragework)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/37/5b091062473ccd85428a27886ac001b7c6652b.src","preCode":"    private Pair<JobInfo.Status, String> orchestrateMigrateWithStorage(final VmWorkMigrateWithStorage work) throws Exception {\n        final VMInstanceVO vm = _entityMgr.findById(VMInstanceVO.class, work.getVmId());\n        if (vm == null) {\n            s_logger.info(\"Unable to find vm \" + work.getVmId());\n        }\n        assert vm != null;\n        orchestrateMigrateWithStorage(vm.getUuid(),\n                work.getSrcHostId(),\n                work.getDestHostId(),\n                work.getVolumeToPool());\n        return new Pair<JobInfo.Status, String>(JobInfo.Status.SUCCEEDED, null);\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":4981,"status":"B"},{"authorDate":"2018-01-20 05:49:27","commitOrder":1,"curCode":"    private Pair<JobInfo.Status, String> orchestrateStorageMigration(final VmWorkStorageMigration work) throws Exception {\n        final VMInstanceVO vm = _entityMgr.findById(VMInstanceVO.class, work.getVmId());\n        if (vm == null) {\n            s_logger.info(\"Unable to find vm \" + work.getVmId());\n        }\n        assert vm != null;\n        final StoragePool pool = (PrimaryDataStoreInfo)dataStoreMgr.getPrimaryDataStore(work.getDestStoragePoolId());\n        orchestrateStorageMigration(vm.getUuid(), pool);\n\n        return new Pair<JobInfo.Status, String>(JobInfo.Status.SUCCEEDED, null);\n    }\n","date":"2018-01-20 05:49:27","endLine":5086,"groupId":"12975","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"orchestrateStorageMigration","params":"(finalVmWorkStorageMigrationwork)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/37/5b091062473ccd85428a27886ac001b7c6652b.src","preCode":"    private Pair<JobInfo.Status, String> orchestrateStorageMigration(final VmWorkStorageMigration work) throws Exception {\n        final VMInstanceVO vm = _entityMgr.findById(VMInstanceVO.class, work.getVmId());\n        if (vm == null) {\n            s_logger.info(\"Unable to find vm \" + work.getVmId());\n        }\n        assert vm != null;\n        final StoragePool pool = (PrimaryDataStoreInfo)dataStoreMgr.getPrimaryDataStore(work.getDestStoragePoolId());\n        orchestrateStorageMigration(vm.getUuid(), pool);\n\n        return new Pair<JobInfo.Status, String>(JobInfo.Status.SUCCEEDED, null);\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":5076,"status":"B"}],"commitId":"893a88d225276e45f12f9490e6af2c94a81c2965","commitMessage":"@@@CLOUDSTACK-10105: Use maven standard project structure in all projects (#2283)\n\nRemove maven standard module (which only a few were using) and get ride of maven customization for the projects structure.\n\n- moved all directories to src/main/java.  src/main/resources.  src/main/scripts.  src/test/java.  src/test/resources\n- grep scan to search for src/com and src/org left over\n- grep for <project>/scripts to fix pom.xml configuration\n- remove custom <build> configuration in pom.xml\n\nSigned-off-by: Marc-Aur?le Brothier <m@brothier.org>","date":"2018-01-20 05:49:27","modifiedFileCount":"1","status":"B","submitter":"Marc-Aur?le Brothier"},{"authorTime":"2021-02-12 15:11:41","codes":[{"authorDate":"2018-01-20 05:49:27","commitOrder":2,"curCode":"    private Pair<JobInfo.Status, String> orchestrateMigrateWithStorage(final VmWorkMigrateWithStorage work) throws Exception {\n        final VMInstanceVO vm = _entityMgr.findById(VMInstanceVO.class, work.getVmId());\n        if (vm == null) {\n            s_logger.info(\"Unable to find vm \" + work.getVmId());\n        }\n        assert vm != null;\n        orchestrateMigrateWithStorage(vm.getUuid(),\n                work.getSrcHostId(),\n                work.getDestHostId(),\n                work.getVolumeToPool());\n        return new Pair<JobInfo.Status, String>(JobInfo.Status.SUCCEEDED, null);\n    }\n","date":"2018-01-20 05:49:27","endLine":4992,"groupId":"12576","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"orchestrateMigrateWithStorage","params":"(finalVmWorkMigrateWithStoragework)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/37/5b091062473ccd85428a27886ac001b7c6652b.src","preCode":"    private Pair<JobInfo.Status, String> orchestrateMigrateWithStorage(final VmWorkMigrateWithStorage work) throws Exception {\n        final VMInstanceVO vm = _entityMgr.findById(VMInstanceVO.class, work.getVmId());\n        if (vm == null) {\n            s_logger.info(\"Unable to find vm \" + work.getVmId());\n        }\n        assert vm != null;\n        orchestrateMigrateWithStorage(vm.getUuid(),\n                work.getSrcHostId(),\n                work.getDestHostId(),\n                work.getVolumeToPool());\n        return new Pair<JobInfo.Status, String>(JobInfo.Status.SUCCEEDED, null);\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":4981,"status":"N"},{"authorDate":"2021-02-12 15:11:41","commitOrder":2,"curCode":"    private Pair<JobInfo.Status, String> orchestrateStorageMigration(final VmWorkStorageMigration work) throws Exception {\n        final VMInstanceVO vm = _entityMgr.findById(VMInstanceVO.class, work.getVmId());\n        if (vm == null) {\n            s_logger.info(\"Unable to find vm \" + work.getVmId());\n        }\n        assert vm != null;\n        orchestrateStorageMigration(vm.getUuid(), work.getVolumeToPool());\n\n        return new Pair<JobInfo.Status, String>(JobInfo.Status.SUCCEEDED, null);\n    }\n","date":"2021-02-12 15:11:41","endLine":5740,"groupId":"12576","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"orchestrateStorageMigration","params":"(finalVmWorkStorageMigrationwork)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-cloudstack-10-0.7/blobInfo/CC_OUT/blobs/de/1ef20f883ee21b0b04ce2d977f024d7b8f7b32.src","preCode":"    private Pair<JobInfo.Status, String> orchestrateStorageMigration(final VmWorkStorageMigration work) throws Exception {\n        final VMInstanceVO vm = _entityMgr.findById(VMInstanceVO.class, work.getVmId());\n        if (vm == null) {\n            s_logger.info(\"Unable to find vm \" + work.getVmId());\n        }\n        assert vm != null;\n        final StoragePool pool = (PrimaryDataStoreInfo)dataStoreMgr.getPrimaryDataStore(work.getDestStoragePoolId());\n        orchestrateStorageMigration(vm.getUuid(), pool);\n\n        return new Pair<JobInfo.Status, String>(JobInfo.Status.SUCCEEDED, null);\n    }\n","realPath":"engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java","repoName":"cloudstack","snippetEndLine":0,"snippetStartLine":0,"startLine":5731,"status":"M"}],"commitId":"d6e8b53736d92363d0f8689997259769356122de","commitMessage":"@@@vmware: vm migration improvements (#4385)\n\n- Fixes inter-cluster migration of VMs\n- Allows migration of stopped VM with disks attached to different and suitable pools\n- Improves inter-cluster detached volume migration\n- Allows inter-cluster migration (clusters of same Pod) for system VMs.  VRs on VMware\n- Allows storage migration for stopped system VMs.  VRs on VMware within same Pod if StoragePool cluster scopetype\n\nLinked Primate PR: https://github.com/apache/cloudstack-primate/pull/789 [Changes merged in this PR after new UI merge]\nDocumentation PR: https://github.com/apache/cloudstack-documentation/pull/170\n\nSigned-off-by: Abhishek Kumar <abhishek.mrt22@gmail.com>","date":"2021-02-12 15:11:41","modifiedFileCount":"26","status":"M","submitter":"Abhishek Kumar"}]
