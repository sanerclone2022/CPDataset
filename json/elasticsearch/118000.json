[{"authorTime":"2018-06-23 01:11:15","codes":[{"authorDate":"2018-06-23 01:11:15","commitOrder":1,"curCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel,\n                                    Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps());\n            }\n            channel.sendResponse(TransportResponse.Empty.INSTANCE);\n        }\n","date":"2018-06-23 01:11:15","endLine":408,"groupId":"6798","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryPrepareForTranslogOperationsRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/a4697e5cbb574f030fd4da312c8b6a7d145003.src","preCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel,\n                                    Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps());\n            }\n            channel.sendResponse(TransportResponse.Empty.INSTANCE);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":401,"status":"B"},{"authorDate":"2018-06-23 01:11:15","commitOrder":1,"curCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.sourceMetaSnapshot());\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            }\n        }\n","date":"2018-06-23 01:11:15","endLine":563,"groupId":"613","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryCleanFilesRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/a4697e5cbb574f030fd4da312c8b6a7d145003.src","preCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.sourceMetaSnapshot());\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":557,"status":"B"}],"commitId":"1d11fdaad80d19be782b99e3dfede28b40d8f0d1","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-23 01:11:15","modifiedFileCount":"94","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-06-23 01:11:15","codes":[{"authorDate":"2019-01-22 10:35:10","commitOrder":2,"curCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener =\n                    new HandledTransportAction.ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps(),\n                    ActionListener.wrap(nullVal -> listener.onResponse(TransportResponse.Empty.INSTANCE), listener::onFailure));\n            }\n        }\n","date":"2019-01-22 10:35:10","endLine":441,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryPrepareForTranslogOperationsRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bc/2196501fb8ed56b17e5004bd8e35803c502903.src","preCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel,\n                                    Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps());\n            }\n            channel.sendResponse(TransportResponse.Empty.INSTANCE);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":434,"status":"M"},{"authorDate":"2018-06-23 01:11:15","commitOrder":2,"curCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.sourceMetaSnapshot());\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            }\n        }\n","date":"2018-06-23 01:11:15","endLine":563,"groupId":"613","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryCleanFilesRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/a4697e5cbb574f030fd4da312c8b6a7d145003.src","preCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.sourceMetaSnapshot());\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":557,"status":"N"}],"commitId":"7394892b4c36f44d5addb2abd2dbca7453cb2d79","commitMessage":"@@@Make prepare engine step of recovery source non-blocking (#37573)\n\nRelates #37174","date":"2019-01-22 10:35:10","modifiedFileCount":"8","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2018-06-23 01:11:15","codes":[{"authorDate":"2019-01-27 11:01:30","commitOrder":3,"curCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps(),\n                    ActionListener.wrap(nullVal -> listener.onResponse(TransportResponse.Empty.INSTANCE), listener::onFailure));\n            }\n        }\n","date":"2019-01-27 11:01:30","endLine":440,"groupId":"44358","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryPrepareForTranslogOperationsRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/db/baed1132e62825a3bcc6512a60030ce96f77b7.src","preCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener =\n                    new HandledTransportAction.ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps(),\n                    ActionListener.wrap(nullVal -> listener.onResponse(TransportResponse.Empty.INSTANCE), listener::onFailure));\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":434,"status":"M"},{"authorDate":"2018-06-23 01:11:15","commitOrder":3,"curCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.sourceMetaSnapshot());\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            }\n        }\n","date":"2018-06-23 01:11:15","endLine":563,"groupId":"613","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryCleanFilesRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/a4697e5cbb574f030fd4da312c8b6a7d145003.src","preCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.sourceMetaSnapshot());\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":557,"status":"N"}],"commitId":"780b4c72fe90c83ce08b7c5b96f70e91f53b1f73","commitMessage":"@@@Make ChannelActionListener a top-level class (#37797)\n\nWe start using this class more often. Let's make it a top-level class.\n","date":"2019-01-27 11:01:30","modifiedFileCount":"5","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2018-06-23 01:11:15","codes":[{"authorDate":"2019-03-04 17:48:56","commitOrder":4,"curCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","date":"2019-03-04 17:48:56","endLine":440,"groupId":"44358","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryPrepareForTranslogOperationsRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fc/8e0c765b5a62e057a8abfec030989836092dce.src","preCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps(),\n                    ActionListener.wrap(nullVal -> listener.onResponse(TransportResponse.Empty.INSTANCE), listener::onFailure));\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":434,"status":"M"},{"authorDate":"2018-06-23 01:11:15","commitOrder":4,"curCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.sourceMetaSnapshot());\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            }\n        }\n","date":"2018-06-23 01:11:15","endLine":563,"groupId":"613","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryCleanFilesRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/a4697e5cbb574f030fd4da312c8b6a7d145003.src","preCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.sourceMetaSnapshot());\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":557,"status":"N"}],"commitId":"28ca58d494edab132555529c49f570f22cc5b105","commitMessage":"@@@Introduce Mapping ActionListener (#39538)\n\n* Introduce Safer Chaining of Listeners\n\n* The motivation here is to make reasoning about chains of `ActionListener` a little easier.  by providing a safe method for nesting `ActionListener` that guarantees that a response is never dropped. Also.  it dries up the code a little by removing the need to repeat `listener::onFailure` and `listener.onResponse` over and over.\n* Refactored a number of obvious/easy spots to use the new listener constructor","date":"2019-03-04 17:48:56","modifiedFileCount":"15","status":"M","submitter":"Armin Braun"},{"authorTime":"2019-04-05 10:53:48","codes":[{"authorDate":"2019-03-04 17:48:56","commitOrder":5,"curCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","date":"2019-03-04 17:48:56","endLine":440,"groupId":"44358","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryPrepareForTranslogOperationsRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fc/8e0c765b5a62e057a8abfec030989836092dce.src","preCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":434,"status":"N"},{"authorDate":"2019-04-05 10:53:48","commitOrder":5,"curCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.getGlobalCheckpoint(), request.sourceMetaSnapshot());\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            }\n        }\n","date":"2019-04-05 10:53:48","endLine":546,"groupId":"613","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryCleanFilesRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e3/125ce5be97a23f18bc7fcd0a6d29510f3c713f.src","preCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.sourceMetaSnapshot());\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"M"}],"commitId":"b8a4c13e81e65e053f9149655c93abac84dd42bd","commitMessage":"@@@Init global checkpoint after copy commit in peer recovery (#40823)\n\nToday a new replica of a closed index does not have a safe commit\ninvariant when its engine is opened because we won't initialize the\nglobal checkpoint on a recovering replica until the finalize step. With\nthis change.  we can achieve that property by creating a new translog\nwith the global checkpoint from the primary at the end of phase 1.","date":"2019-04-05 10:53:48","modifiedFileCount":"13","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2019-06-30 06:26:08","codes":[{"authorDate":"2019-03-04 17:48:56","commitOrder":6,"curCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","date":"2019-03-04 17:48:56","endLine":440,"groupId":"44358","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryPrepareForTranslogOperationsRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fc/8e0c765b5a62e057a8abfec030989836092dce.src","preCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":434,"status":"N"},{"authorDate":"2019-06-30 06:26:08","commitOrder":6,"curCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.CLEAN_FILES, request);\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.getGlobalCheckpoint(), request.sourceMetaSnapshot(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","date":"2019-06-30 06:26:08","endLine":552,"groupId":"70653","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryCleanFilesRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/50/abeb2fb7a451dea73c63d791d871905f8bd9b1.src","preCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId()\n            )) {\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.getGlobalCheckpoint(), request.sourceMetaSnapshot());\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":546,"status":"M"}],"commitId":"a452fffde5147d55286db8ea572319510fa42ddf","commitMessage":"@@@Make peer recovery clean files step async (#43787)\n\nRelates #36195","date":"2019-06-30 06:26:08","modifiedFileCount":"11","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2019-06-30 06:26:08","codes":[{"authorDate":"2019-08-02 22:04:26","commitOrder":7,"curCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.totalTranslogOps(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","date":"2019-08-02 22:04:26","endLine":373,"groupId":"44358","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryPrepareForTranslogOperationsRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/bc17b3f7ee29b05caac67cd30c6e8bf08c28be.src","preCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.isFileBasedRecovery(), request.totalTranslogOps(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":367,"status":"M"},{"authorDate":"2019-06-30 06:26:08","commitOrder":7,"curCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.CLEAN_FILES, request);\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.getGlobalCheckpoint(), request.sourceMetaSnapshot(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","date":"2019-06-30 06:26:08","endLine":552,"groupId":"70653","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryCleanFilesRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/50/abeb2fb7a451dea73c63d791d871905f8bd9b1.src","preCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.CLEAN_FILES, request);\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.getGlobalCheckpoint(), request.sourceMetaSnapshot(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":546,"status":"N"}],"commitId":"6215f98fa68aedbd8f0be10e0064afb45c970e90","commitMessage":"@@@Remove fileBasedRecovery flag (#45131)\n\nToday `RecoveryTarget#prepareForTranslogOperations` takes a boolean flag\nindicating whether the recovery is file-based or not. This was used in 6.x to\nbootstrap some commit data that were missing in indices created in 5.x:\n\nhttps://github.com/elastic/elasticsearch/blob/b506955f8d442c5c1659fd3840d8db14b3f969d1/server/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java#L298-L300\n\nThis flag no longer has any effect.  so this commit removes it.","date":"2019-08-02 22:04:26","modifiedFileCount":"11","status":"M","submitter":"David Turner"},{"authorTime":"2020-05-27 04:51:13","codes":[{"authorDate":"2020-05-27 04:51:13","commitOrder":8,"curCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<Void> listener = createOrFinishListener(recoveryRef, channel, Actions.PREPARE_TRANSLOG, request);\n                if (listener == null) {\n                    return;\n                }\n\n                recoveryRef.target().prepareForTranslogOperations(request.totalTranslogOps(), listener);\n            }\n        }\n","date":"2020-05-27 04:51:13","endLine":307,"groupId":"24430","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryPrepareForTranslogOperationsRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5b/16d70b49ac9c38acf6fefd9f331769163ce036.src","preCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.PREPARE_TRANSLOG, request);\n                recoveryRef.target().prepareForTranslogOperations(request.totalTranslogOps(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"M"},{"authorDate":"2020-05-27 04:51:13","commitOrder":8,"curCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<Void> listener = createOrFinishListener(recoveryRef, channel, Actions.CLEAN_FILES, request);\n                if (listener == null) {\n                    return;\n                }\n\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.getGlobalCheckpoint(), request.sourceMetaSnapshot(),\n                    listener);\n            }\n        }\n","date":"2020-05-27 04:51:13","endLine":438,"groupId":"24430","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryCleanFilesRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5b/16d70b49ac9c38acf6fefd9f331769163ce036.src","preCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<TransportResponse> listener = new ChannelActionListener<>(channel, Actions.CLEAN_FILES, request);\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.getGlobalCheckpoint(), request.sourceMetaSnapshot(),\n                    ActionListener.map(listener, nullVal -> TransportResponse.Empty.INSTANCE));\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"M"}],"commitId":"579ce2f99cb6ef8933aadfadc539278e94362e16","commitMessage":"@@@Reestablish peer recovery after network errors (#55274)\n\nCurrently a network disruption will fail a peer recovery. This commit\nadds network errors as retryable actions for the source node.\nAdditionally.  it adds sequence numbers to the recovery request to\nensure that the requests are idempotent.\n\nAdditionally it adds a reestablish recovery action. The target node\nwill attempt to reestablish an existing recovery after a network\nfailure. This is necessary to ensure that the retries occurring on the\nsource node provide value in bidirectional failures.","date":"2020-05-27 04:51:13","modifiedFileCount":"16","status":"M","submitter":"Tim Brooks"},{"authorTime":"2020-12-09 18:45:40","codes":[{"authorDate":"2020-05-27 04:51:13","commitOrder":9,"curCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<Void> listener = createOrFinishListener(recoveryRef, channel, Actions.PREPARE_TRANSLOG, request);\n                if (listener == null) {\n                    return;\n                }\n\n                recoveryRef.target().prepareForTranslogOperations(request.totalTranslogOps(), listener);\n            }\n        }\n","date":"2020-05-27 04:51:13","endLine":307,"groupId":"24430","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryPrepareForTranslogOperationsRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5b/16d70b49ac9c38acf6fefd9f331769163ce036.src","preCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<Void> listener = createOrFinishListener(recoveryRef, channel, Actions.PREPARE_TRANSLOG, request);\n                if (listener == null) {\n                    return;\n                }\n\n                recoveryRef.target().prepareForTranslogOperations(request.totalTranslogOps(), listener);\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"N"},{"authorDate":"2020-12-09 18:45:40","commitOrder":9,"curCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<Void> listener = createOrFinishListener(recoveryRef, channel, Actions.CLEAN_FILES, request);\n                if (listener == null) {\n                    return;\n                }\n\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.getGlobalCheckpoint(), request.sourceMetaSnapshot(),\n                        ActionListener.delegateFailure(listener, (r, l) -> {\n                            Releasable reenableMonitor = recoveryRef.target().disableRecoveryMonitor();\n                            recoveryRef.target().indexShard().afterCleanFiles(() -> {\n                                reenableMonitor.close();\n                                listener.onResponse(null);\n                            });\n                        }));\n            }\n        }\n","date":"2020-12-09 18:45:40","endLine":444,"groupId":"24430","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryCleanFilesRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/52/e4441828124167cbf36193149dba80a51cab01.src","preCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<Void> listener = createOrFinishListener(recoveryRef, channel, Actions.CLEAN_FILES, request);\n                if (listener == null) {\n                    return;\n                }\n\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.getGlobalCheckpoint(), request.sourceMetaSnapshot(),\n                    listener);\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"M"}],"commitId":"e189a206d68def06369eb9d9801122617bc6f29a","commitMessage":"@@@Wait for Prewarm when Relocating Searchable Snapshot Shards (#65531)\n\nAdd hooks to enable waiting for a condition before completing the clean files step for relocating searchable snapshot shards and use them to wait for pre-warm before responding to the clean files request.","date":"2020-12-09 18:45:40","modifiedFileCount":"10","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-02-23 14:42:23","codes":[{"authorDate":"2020-05-27 04:51:13","commitOrder":10,"curCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<Void> listener = createOrFinishListener(recoveryRef, channel, Actions.PREPARE_TRANSLOG, request);\n                if (listener == null) {\n                    return;\n                }\n\n                recoveryRef.target().prepareForTranslogOperations(request.totalTranslogOps(), listener);\n            }\n        }\n","date":"2020-05-27 04:51:13","endLine":307,"groupId":"118000","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryPrepareForTranslogOperationsRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5b/16d70b49ac9c38acf6fefd9f331769163ce036.src","preCode":"        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel, Task task) {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<Void> listener = createOrFinishListener(recoveryRef, channel, Actions.PREPARE_TRANSLOG, request);\n                if (listener == null) {\n                    return;\n                }\n\n                recoveryRef.target().prepareForTranslogOperations(request.totalTranslogOps(), listener);\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"N"},{"authorDate":"2021-02-23 14:42:23","commitOrder":10,"curCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<Void> listener = createOrFinishListener(recoveryRef, channel, Actions.CLEAN_FILES, request);\n                if (listener == null) {\n                    return;\n                }\n\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.getGlobalCheckpoint(), request.sourceMetaSnapshot(),\n                    listener.delegateFailure((l, r) -> {\n                            Releasable reenableMonitor = recoveryRef.target().disableRecoveryMonitor();\n                            recoveryRef.target().indexShard().afterCleanFiles(() -> {\n                                reenableMonitor.close();\n                                l.onResponse(null);\n                            });\n                        }));\n            }\n        }\n","date":"2021-02-23 14:42:23","endLine":433,"groupId":"118000","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"messageReceived","params":"(RecoveryCleanFilesRequestrequest@TransportChannelchannel@Tasktask)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/44139cc20db31420616f9975e677172ce378c7.src","preCode":"        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel, Task task) throws Exception {\n            try (RecoveryRef recoveryRef = onGoingRecoveries.getRecoverySafe(request.recoveryId(), request.shardId())) {\n                final ActionListener<Void> listener = createOrFinishListener(recoveryRef, channel, Actions.CLEAN_FILES, request);\n                if (listener == null) {\n                    return;\n                }\n\n                recoveryRef.target().cleanFiles(request.totalTranslogOps(), request.getGlobalCheckpoint(), request.sourceMetaSnapshot(),\n                        ActionListener.delegateFailure(listener, (r, l) -> {\n                            Releasable reenableMonitor = recoveryRef.target().disableRecoveryMonitor();\n                            recoveryRef.target().indexShard().afterCleanFiles(() -> {\n                                reenableMonitor.close();\n                                listener.onResponse(null);\n                            });\n                        }));\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":417,"status":"M"}],"commitId":"ad9760325c337087e76d8ed98961c2a635923d70","commitMessage":"@@@Some Enhancements to ActionListener (#69103)\n\nThis adds best effort `toString` rendering the various wrapping\naction listeners to make `TRACE` logging.  that will currently only print the\ntop level listener `toString` which isn't helpful to find the original of a listener\nin case of wrapped listeners.  more useful (e.g. when logging rejected executions).\nAlso this change makes the `delegateX` methods less verbose to use and makes use of them\nin a few spots where they weren't yet used.\n","date":"2021-02-23 14:42:23","modifiedFileCount":"57","status":"M","submitter":"Armin Braun"}]
