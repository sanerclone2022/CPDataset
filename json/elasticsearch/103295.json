[{"authorTime":"2019-01-03 04:12:24","codes":[{"authorDate":"2018-07-19 02:10:12","commitOrder":3,"curCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n                .field(\"type\", \"text\")\n                .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .startObject(\"prefix_field_alias\")\n                .field(\"type\", \"alias\")\n                .field(\"path\", \"prefix_field\")\n            .endObject()\n        .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","date":"2018-07-19 02:10:12","endLine":74,"groupId":"68520","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"initializeAdditionalMappings","params":"(MapperServicemapperService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7c/459737c771ca2c250932d55b6b0a8dad883047.src","preCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n                .field(\"type\", \"text\")\n                .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .startObject(\"prefix_field_alias\")\n                .field(\"type\", \"alias\")\n                .field(\"path\", \"prefix_field\")\n            .endObject()\n        .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/SpanMultiTermQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"NB"},{"authorDate":"2019-01-03 04:12:24","commitOrder":3,"curCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n            .field(\"type\", \"text\")\n            .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","date":"2019-01-03 04:12:24","endLine":98,"groupId":"9093","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initializeAdditionalMappings","params":"(MapperServicemapperService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ba/a0fed01bbf0ee7d632616c05eb37f122903e1e.src","preCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n            .field(\"type\", \"text\")\n            .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"7a0047744dc6e047ead2391cf49268dae0fe90c3","commitMessage":"@@@`query_string` should use indexed prefixes (#36895)\n\nThe QueryStringQueryBuilder does not currently delegate to the field mapper's prefixQuery\nmethod.  so does not use indexed prefixes. This commit corrects this.\n\nIt also fixes a bug where a query a* would not match the word a if indexed prefixes were used with\na minchar setting of 2.\n","date":"2019-01-03 04:12:24","modifiedFileCount":"4","status":"M","submitter":"Alan Woodward"},{"authorTime":"2019-01-03 04:12:24","codes":[{"authorDate":"2019-01-17 22:10:28","commitOrder":4,"curCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n                .field(\"type\", \"text\")\n                .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .startObject(\"prefix_field_alias\")\n                .field(\"type\", \"alias\")\n                .field(\"path\", \"prefix_field\")\n            .endObject()\n            .startObject(\"body\")\n                .field(\"type\", \"text\")\n            .endObject()\n        .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","date":"2019-01-17 22:10:28","endLine":80,"groupId":"68520","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"initializeAdditionalMappings","params":"(MapperServicemapperService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4c/59e25804a5550fe6b0c90580d00330ff769fe3.src","preCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n                .field(\"type\", \"text\")\n                .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .startObject(\"prefix_field_alias\")\n                .field(\"type\", \"alias\")\n                .field(\"path\", \"prefix_field\")\n            .endObject()\n        .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/SpanMultiTermQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2019-01-03 04:12:24","commitOrder":4,"curCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n            .field(\"type\", \"text\")\n            .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","date":"2019-01-03 04:12:24","endLine":98,"groupId":"9093","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initializeAdditionalMappings","params":"(MapperServicemapperService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ba/a0fed01bbf0ee7d632616c05eb37f122903e1e.src","preCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n            .field(\"type\", \"text\")\n            .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"N"}],"commitId":"4351a5e5375237b8259fbcbd3ff4d7c59cc2d215","commitMessage":"@@@Allow field types to optimize phrase prefix queries (#37436)\n\nThis change adds a way to customize how phrase prefix queries should be created\non field types. The match phrase prefix query is exposed in field types in order\nto allow optimizations based on the options set on the field.\nFor instance the text field uses the configured prefix field (if available) to\nbuild a span near that mixes the original field and the prefix field on the last\nposition.\nThis change also contains a small refactoring of the match/multi_match query that\nsimplifies the interactions between the builders.\n\nCloses #31921","date":"2019-01-17 22:10:28","modifiedFileCount":"16","status":"M","submitter":"Jim Ferenczi"},{"authorTime":"2021-02-02 18:24:26","codes":[{"authorDate":"2019-01-17 22:10:28","commitOrder":5,"curCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n                .field(\"type\", \"text\")\n                .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .startObject(\"prefix_field_alias\")\n                .field(\"type\", \"alias\")\n                .field(\"path\", \"prefix_field\")\n            .endObject()\n            .startObject(\"body\")\n                .field(\"type\", \"text\")\n            .endObject()\n        .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","date":"2019-01-17 22:10:28","endLine":80,"groupId":"103295","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"initializeAdditionalMappings","params":"(MapperServicemapperService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4c/59e25804a5550fe6b0c90580d00330ff769fe3.src","preCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n                .field(\"type\", \"text\")\n                .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .startObject(\"prefix_field_alias\")\n                .field(\"type\", \"alias\")\n                .field(\"path\", \"prefix_field\")\n            .endObject()\n            .startObject(\"body\")\n                .field(\"type\", \"text\")\n            .endObject()\n        .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/SpanMultiTermQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"},{"authorDate":"2021-02-02 18:24:26","commitOrder":5,"curCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n            .field(\"type\", \"text\")\n            .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .startObject(\"ww_keyword\")\n            .field(\"type\", \"keyword\")\n            .field(\"split_queries_on_whitespace\", true)\n            .endObject()\n            .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","date":"2021-02-02 18:24:26","endLine":106,"groupId":"103295","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"initializeAdditionalMappings","params":"(MapperServicemapperService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/29/2c861e5c4d4dbf3f3758b464f100af5cc8eb22.src","preCode":"    protected void initializeAdditionalMappings(MapperService mapperService) throws IOException {\n        XContentBuilder mapping = jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\")\n            .startObject(\"prefix_field\")\n            .field(\"type\", \"text\")\n            .startObject(\"index_prefixes\").endObject()\n            .endObject()\n            .endObject().endObject().endObject();\n\n        mapperService.merge(\"_doc\",\n            new CompressedXContent(Strings.toString(mapping)), MapperService.MergeReason.MAPPING_UPDATE);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"}],"commitId":"e8a5c073ac9ce4cd8ead0c5f32f16d45a1a30482","commitMessage":"@@@Correctly set search quote analyzer for keyword fields (#68315)\n\nKeyword fields with split_queries_on_whitespace=true were also setting\nwhitespace analyzers to be used for quoted queries. Instead.  keyword\nfields should always set their searchQuoteAnalyzer to be the same as the\nindex-time normalizer.\n\nFixes #68313","date":"2021-02-02 18:24:26","modifiedFileCount":"3","status":"M","submitter":"Alan Woodward"}]
