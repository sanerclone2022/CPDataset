[{"authorTime":"2020-04-09 02:07:25","codes":[{"authorDate":"2020-04-09 02:07:25","commitOrder":1,"curCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-04-09 02:07:25","endLine":312,"groupId":"14689","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRejectDuplicateAliasV2UsingComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/36/7a4a36b259f75fd10bda0c0638e73dea537ba0.src","preCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"B"},{"authorDate":"2020-04-09 02:07:25","commitOrder":1,"curCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-04-09 02:07:25","endLine":372,"groupId":"14687","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testHiddenAffectsResolvedV2ComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/36/7a4a36b259f75fd10bda0c0638e73dea537ba0.src","preCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":351,"status":"B"}],"commitId":"e5d6fd49859e1356173f80d360d93bde3e849f47","commitMessage":"@@@Use V2 templates when reading duplicate aliases and ingest pip? (#54902)\n\nWhen a new index is rolled over.  we check to see whether there are any duplicate alias\nconfigurations in the index template configuration. Additionally.  when a new index is created from a\nbulk action.  we check the templates to see if there are any ingest pipelines that need to be applied\nto the index that will be newly created.\n\nBoth of these actions previously checked the v1 templates for their settings.  they now also check\nthe v2 index templates.  with the v2 index templates taking precendence similar to the way they do\nwhen creating an index.\n\nRelates to #53101","date":"2020-04-09 02:07:25","modifiedFileCount":"7","status":"B","submitter":"Lee Hinman"},{"authorTime":"2020-04-19 22:16:16","codes":[{"authorDate":"2020-04-09 02:07:25","commitOrder":2,"curCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-04-09 02:07:25","endLine":312,"groupId":"14689","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRejectDuplicateAliasV2UsingComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/36/7a4a36b259f75fd10bda0c0638e73dea537ba0.src","preCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"N"},{"authorDate":"2020-04-19 22:16:16","commitOrder":2,"curCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, false));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-04-19 22:16:16","endLine":372,"groupId":"14687","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testHiddenAffectsResolvedV2ComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/45/cf8e790ff8d7c465fe93dda3dc2fdc833da13a.src","preCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":351,"status":"M"}],"commitId":"c5b923afec911c6ae8fc5179e65ae6bf55dcc5f1","commitMessage":"@@@Make isHidden a primitive when finding v2 templates (#55408)\n\nisHidden was a `Boolean` in order to treat a special case identified\nwith V1 templates where if the create index request didn't specify if\nthe index should be hidden or not (ie. isHidden was `null`) but the\nindex matched a template that specified the `index.hidden` setting we\nneeded to remove the global templates from the templates we'll apply to\nthe new index (note: this is important with V1 templates as inheritance\nis supported).\n\nWith V2 templates we match only one template with an index so the\nequivalent check did not need to exist (we added a sanity check in\nhttps://github.com/elastic/elasticsearch/pull/55015 where we make sure\nwe don't apply an invalid global template - one that specifes the\n`index.hidden` setting.  but this is a check we make irrespective of the\nuser specifying or not if the index should be hidden)\n\nThis commit makes `isHidden` when matching V2 templates a boolean\nprimitive.  eliminating the need for the `null` state to exist. Note that\nsome methods which use the matching V2 templates still work with a\n`Boolean` object `isHidden` attribute as they are also matching the V1\ntemplates. These methods will pass in `false` instead of `null` when\nfinding the V2 templates.","date":"2020-04-19 22:16:16","modifiedFileCount":"6","status":"M","submitter":"Andrei Dan"},{"authorTime":"2020-04-23 04:48:10","codes":[{"authorDate":"2020-04-09 02:07:25","commitOrder":3,"curCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-04-09 02:07:25","endLine":312,"groupId":"14689","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRejectDuplicateAliasV2UsingComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/36/7a4a36b259f75fd10bda0c0638e73dea537ba0.src","preCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"N"},{"authorDate":"2020-04-23 04:48:10","commitOrder":3,"curCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-04-23 04:48:10","endLine":444,"groupId":"14687","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testHiddenAffectsResolvedV2ComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6e/950822462d480b5f3fc31043f3a78debef35be.src","preCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, false));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":423,"status":"M"}],"commitId":"f6cd01ea2b987d474bcf7c2bbbcf05a6ebea50b6","commitMessage":"@@@Rollover for data streams (#55498)\n\n","date":"2020-04-23 04:48:10","modifiedFileCount":"16","status":"M","submitter":"Dan Hermann"},{"authorTime":"2020-05-12 19:42:59","codes":[{"authorDate":"2020-05-12 19:42:59","commitOrder":4,"curCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-05-12 19:42:59","endLine":384,"groupId":"14689","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testRejectDuplicateAliasV2UsingComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fc/896e95f52f391729742e1e7ec392a98415aca9.src","preCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":367,"status":"M"},{"authorDate":"2020-05-12 19:42:59","commitOrder":4,"curCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-05-12 19:42:59","endLine":444,"groupId":"0","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testHiddenAffectsResolvedV2ComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fc/896e95f52f391729742e1e7ec392a98415aca9.src","preCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":423,"status":"M"}],"commitId":"74e2c011384bab5b171c5efbbfb57b24820f0a07","commitMessage":"@@@Auto create data streams using index templates v2 (#55377)\n\nThis commit adds the ability to auto create data streams using index templates v2.\nIndex templates (v2) now have a data_steam field that includes a timestamp field. \nif provided and index name matches with that template then a data stream\n(plus first backing index) is auto created. \n\nRelates to #53100","date":"2020-05-12 19:42:59","modifiedFileCount":"21","status":"M","submitter":"Martijn van Groningen"},{"authorTime":"2020-05-27 23:32:10","codes":[{"authorDate":"2020-05-27 23:32:10","commitOrder":5,"curCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final ComposableIndexTemplate template = new ComposableIndexTemplate(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-05-27 23:32:10","endLine":385,"groupId":"16890","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testRejectDuplicateAliasV2UsingComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/11/d21ea3e6926e089b02a254fe28563b6ef6af1a.src","preCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":368,"status":"M"},{"authorDate":"2020-05-27 23:32:10","commitOrder":5,"curCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final ComposableIndexTemplate template = new ComposableIndexTemplate(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-05-27 23:32:10","endLine":446,"groupId":"64303","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testHiddenAffectsResolvedV2ComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/11/d21ea3e6926e089b02a254fe28563b6ef6af1a.src","preCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final IndexTemplateV2 template = new IndexTemplateV2(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":425,"status":"M"}],"commitId":"4dc32611fcdc4ffc6ad27373103b636ee53941a8","commitMessage":"@@@Rename template V2 classes to ComposableTemplate (#57183)\n\nThis PR changes the name of the Index Template V2 classes to \"Composable Templates\".  it also ensures there are no mentions of \"V2\" in the documentation or error/warning messages. V1 templates are referred to as \"legacy\" templates.\n\nResolves #56609","date":"2020-05-27 23:32:10","modifiedFileCount":"28","status":"M","submitter":"Lee Hinman"},{"authorTime":"2020-10-26 20:35:36","codes":[{"authorDate":"2020-10-26 20:35:36","commitOrder":6,"curCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final ComposableIndexTemplate template = new ComposableIndexTemplate(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-10-26 20:35:36","endLine":406,"groupId":"16890","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testRejectDuplicateAliasV2UsingComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/b14621ae98b1ba5ba230b66b33a24432d6090c.src","preCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final ComposableIndexTemplate template = new ComposableIndexTemplate(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"M"},{"authorDate":"2020-10-26 20:35:36","commitOrder":6,"curCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final ComposableIndexTemplate template = new ComposableIndexTemplate(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2020-10-26 20:35:36","endLine":467,"groupId":"47986","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testHiddenAffectsResolvedV2ComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/b14621ae98b1ba5ba230b66b33a24432d6090c.src","preCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final ComposableIndexTemplate template = new ComposableIndexTemplate(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":446,"status":"M"}],"commitId":"dc855add492f3b447a2d3ea0a290458f9fc9207e","commitMessage":"@@@Add a template parameter to override auto_create_index value (#61858)\n\nCloses #20640.\n\nThis PR introduces a new parameter to v2 templates.  `allow_auto_create`. \nwhich allows templates to override the cluster setting `auto_create_index`.\nNotes:\n\n   * `AutoCreateIndex` now looks for a matching v2 template.  and if its\n     `allow_auto_create` setting is true.  it overrides the usual logic.\n   * `TransportBulkAction` previously used `AutoCreateIndex` to check\n     whether missing indices should be created. We now rely on\n     `AutoCreateAction`.  which was already differentiating between creating\n     indices and creating data streams.  I've updated `AutoCreateAction` to\n     use `AutoCreateIndex`. Data streams are also influenced by\n     `allow_auto_create`.  in that their default auto-create behaviour can\n     be disabled with this setting.\n   * Most of the Java file changes are due to introducing an extra\n     constructor parameter to `ComposableIndexTemplate`.\n   * I've added the new setting to various x-pack templates\n   * I added a YAML test to check that watches can be created even when\n     `auto_create_index` is `false`.","date":"2020-10-26 20:35:36","modifiedFileCount":"32","status":"M","submitter":"Rory Hunter"},{"authorTime":"2021-01-12 00:32:42","codes":[{"authorDate":"2021-01-12 00:32:42","commitOrder":7,"curCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final ComposableIndexTemplate template = new ComposableIndexTemplate.Builder().indexPatterns(Arrays.asList(\"foo-*\", \"bar-*\"))\n            .componentTemplates(Collections.singletonList(\"ct\")).build();\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2021-01-12 00:32:42","endLine":402,"groupId":"105999","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testRejectDuplicateAliasV2UsingComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/13/85ff12b2f1fbcfeca1df258db44a169783b351.src","preCode":"    public void testRejectDuplicateAliasV2UsingComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final ComposableIndexTemplate template = new ComposableIndexTemplate(Arrays.asList(\"foo-*\", \"bar-*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class,\n            () -> MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomBoolean()));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":385,"status":"M"},{"authorDate":"2021-01-12 00:32:42","commitOrder":7,"curCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final ComposableIndexTemplate template = new ComposableIndexTemplate.Builder().indexPatterns(Collections.singletonList(\"*\"))\n            .componentTemplates(Collections.singletonList(\"ct\")).build();\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","date":"2021-01-12 00:32:42","endLine":462,"groupId":"105999","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testHiddenAffectsResolvedV2ComponentTemplates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/13/85ff12b2f1fbcfeca1df258db44a169783b351.src","preCode":"    public void testHiddenAffectsResolvedV2ComponentTemplates() {\n        Map<String, AliasMetadata> aliases = new HashMap<>();\n        aliases.put(\"foo-write\", AliasMetadata.builder(\"foo-write\").build());\n        aliases.put(\"bar-write\", AliasMetadata.builder(\"bar-write\").writeIndex(randomBoolean()).build());\n        final ComponentTemplate ct = new ComponentTemplate(new Template(null, null, aliases), null, null);\n        final ComposableIndexTemplate template = new ComposableIndexTemplate(Collections.singletonList(\"*\"), null,\n            Collections.singletonList(\"ct\"), null, null, null, null, null);\n\n        final Metadata metadata = Metadata.builder().put(createMetadata(randomAlphaOfLengthBetween(5, 7)), false)\n            .put(\"ct\", ct)\n            .put(\"test-template\", template)\n            .build();\n        String indexName = randomFrom(\"foo-123\", \"bar-xyz\");\n        String aliasName = randomFrom(\"foo-write\", \"bar-write\");\n\n        \r\n        MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, Boolean.TRUE);\n        \r\n        final IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n            MetadataRolloverService.checkNoDuplicatedAliasInIndexTemplate(metadata, indexName, aliasName, randomFrom(Boolean.FALSE, null)));\n        assertThat(ex.getMessage(), containsString(\"index template [test-template]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/rollover/MetadataRolloverServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":441,"status":"M"}],"commitId":"d57dd0a45ad7b0fd4eba2d8ecdc85ac78a11269a","commitMessage":"@@@#60750 Added Composable  Index Template Builder (#61124)\n\n","date":"2021-01-12 00:32:42","modifiedFileCount":"10","status":"M","submitter":"Antariksh"}]
