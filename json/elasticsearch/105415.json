[{"authorTime":"2018-09-07 17:59:10","codes":[{"authorDate":"2018-09-07 17:59:10","commitOrder":1,"curCode":"    public void testSelfReferencingAggStateAfterInit() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SELF_REF).mapScript(MAP_SCRIPT);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs init script)\", ex.getMessage());\n            }\n        }\n    }\n","date":"2018-09-07 17:59:10","endLine":302,"groupId":"58188","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelfReferencingAggStateAfterInit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/56/b8938b6e54b9ced647f1fc233a5f9aa5206adf.src","preCode":"    public void testSelfReferencingAggStateAfterInit() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SELF_REF).mapScript(MAP_SCRIPT);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs init script)\", ex.getMessage());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":287,"status":"B"},{"authorDate":"2018-09-07 17:59:10","commitOrder":1,"curCode":"    public void testSelfReferencingAggStateAfterCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT).combineScript(COMBINE_SCRIPT_SELF_REF);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs combine script)\", ex.getMessage());\n            }\n        }\n    }\n","date":"2018-09-07 17:59:10","endLine":339,"groupId":"37608","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelfReferencingAggStateAfterCombine","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/56/b8938b6e54b9ced647f1fc233a5f9aa5206adf.src","preCode":"    public void testSelfReferencingAggStateAfterCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT).combineScript(COMBINE_SCRIPT_SELF_REF);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs combine script)\", ex.getMessage());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":324,"status":"B"}],"commitId":"017ffe5d127ce0fb33feb8fc4e5fededb8cbfda1","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-07 17:59:10","modifiedFileCount":"370","status":"B","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-10-03 23:11:28","codes":[{"authorDate":"2018-10-03 23:11:28","commitOrder":2,"curCode":"    public void testSelfReferencingAggStateAfterInit() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SELF_REF).mapScript(MAP_SCRIPT)\n                    .combineScript(COMBINE_SCRIPT_PARAMS).reduceScript(REDUCE_SCRIPT);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs init script)\", ex.getMessage());\n            }\n        }\n    }\n","date":"2018-10-03 23:11:28","endLine":326,"groupId":"58188","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelfReferencingAggStateAfterInit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/115a03e300f6323fe6b1e80b791eb761cf2536.src","preCode":"    public void testSelfReferencingAggStateAfterInit() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SELF_REF).mapScript(MAP_SCRIPT);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs init script)\", ex.getMessage());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"},{"authorDate":"2018-10-03 23:11:28","commitOrder":2,"curCode":"    public void testSelfReferencingAggStateAfterCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT)\n                    .combineScript(COMBINE_SCRIPT_SELF_REF).reduceScript(REDUCE_SCRIPT);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs combine script)\", ex.getMessage());\n            }\n        }\n    }\n","date":"2018-10-03 23:11:28","endLine":365,"groupId":"58188","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelfReferencingAggStateAfterCombine","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/115a03e300f6323fe6b1e80b791eb761cf2536.src","preCode":"    public void testSelfReferencingAggStateAfterCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT).combineScript(COMBINE_SCRIPT_SELF_REF);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs combine script)\", ex.getMessage());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":349,"status":"M"}],"commitId":"90c55f5e36ddc9d7cbf2fcde8e88027db8a5e060","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into index-lifecycle\n","date":"2018-10-03 23:11:28","modifiedFileCount":"33","status":"M","submitter":"Lee Hinman"},{"authorTime":"2020-08-07 05:14:20","codes":[{"authorDate":"2020-08-07 05:14:20","commitOrder":3,"curCode":"    public void testSelfReferencingAggStateAfterInit() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SELF_REF).mapScript(MAP_SCRIPT)\n                    .combineScript(COMBINE_SCRIPT_PARAMS).reduceScript(REDUCE_SCRIPT);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    searchAndReduce(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs init script)\", ex.getMessage());\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":450,"groupId":"105415","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelfReferencingAggStateAfterInit","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8d/8b3da169249f41d4459c9e3853a1516f4722ed.src","preCode":"    public void testSelfReferencingAggStateAfterInit() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SELF_REF).mapScript(MAP_SCRIPT)\n                    .combineScript(COMBINE_SCRIPT_PARAMS).reduceScript(REDUCE_SCRIPT);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs init script)\", ex.getMessage());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":434,"status":"M"},{"authorDate":"2020-08-07 05:14:20","commitOrder":3,"curCode":"    public void testSelfReferencingAggStateAfterCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT)\n                    .combineScript(COMBINE_SCRIPT_SELF_REF).reduceScript(REDUCE_SCRIPT);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    searchAndReduce(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs combine script)\", ex.getMessage());\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":489,"groupId":"105415","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelfReferencingAggStateAfterCombine","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8d/8b3da169249f41d4459c9e3853a1516f4722ed.src","preCode":"    public void testSelfReferencingAggStateAfterCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                \r\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT)\n                    .combineScript(COMBINE_SCRIPT_SELF_REF).reduceScript(REDUCE_SCRIPT);\n\n                IllegalArgumentException ex = expectThrows(IllegalArgumentException.class, () ->\n                    search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder)\n                );\n                assertEquals(\"Iterable object is self-referencing itself (Scripted metric aggs combine script)\", ex.getMessage());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":473,"status":"M"}],"commitId":"5e3ea6eb11c68bdcc9adda51715a6e1fea9186d6","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-07 05:14:20","modifiedFileCount":"73","status":"M","submitter":"Nik Everett"}]
