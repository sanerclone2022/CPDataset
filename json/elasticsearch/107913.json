[{"authorTime":"2018-09-07 17:59:10","codes":[{"authorDate":"2018-07-16 16:30:07","commitOrder":4,"curCode":"    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        if (name != null) {\n            builder.field(NAME_FIELD.getPreferredName(), name);\n        }\n        builder.field(IGNORE_UNMAPPED.getPreferredName(), ignoreUnmapped);\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), trackScores);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext, params);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat docValueField : docValueFields) {\n                if (docValueField.format == null) {\n                    builder.value(docValueField.field);\n                } else {\n                    builder.startObject()\n                        .field(\"field\", docValueField.field)\n                        .field(\"format\", docValueField.format)\n                        .endObject();\n                }\n            }\n            builder.endArray();\n        }\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder, params);\n        }\n        if (innerCollapseBuilder != null) {\n            builder.field(COLLAPSE_FIELD.getPreferredName(), innerCollapseBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","date":"2018-07-16 16:30:07","endLine":599,"groupId":"43642","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toXContent","params":"(XContentBuilderbuilder@Paramsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6b/dc55d31cdc9ac517e8b278c62105c285b1f06e.src","preCode":"    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        if (name != null) {\n            builder.field(NAME_FIELD.getPreferredName(), name);\n        }\n        builder.field(IGNORE_UNMAPPED.getPreferredName(), ignoreUnmapped);\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), trackScores);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext, params);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat docValueField : docValueFields) {\n                if (docValueField.format == null) {\n                    builder.value(docValueField.field);\n                } else {\n                    builder.startObject()\n                        .field(\"field\", docValueField.field)\n                        .field(\"format\", docValueField.format)\n                        .endObject();\n                }\n            }\n            builder.endArray();\n        }\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder, params);\n        }\n        if (innerCollapseBuilder != null) {\n            builder.field(COLLAPSE_FIELD.getPreferredName(), innerCollapseBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":546,"status":"NB"},{"authorDate":"2018-09-07 17:59:10","commitOrder":4,"curCode":"    protected XContentBuilder internalXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat dvField : docValueFields) {\n                builder.startObject()\n                    .field(\"field\", dvField.field);\n                if (dvField.format != null) {\n                    builder.field(\"format\", dvField.format);\n                }\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                    sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (trackScores) {\n            builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), true);\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","date":"2018-09-07 17:59:10","endLine":633,"groupId":"46746","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"internalXContent","params":"(XContentBuilderbuilder@Paramsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/38/b783e6b9519b65a8f6fb0061a36be2bddad639.src","preCode":"    protected XContentBuilder internalXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat dvField : docValueFields) {\n                builder.startObject()\n                    .field(\"field\", dvField.field);\n                if (dvField.format != null) {\n                    builder.field(\"format\", dvField.format);\n                }\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                    sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (trackScores) {\n            builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), true);\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/search/aggregations/metrics/TopHitsAggregationBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":587,"status":"B"}],"commitId":"017ffe5d127ce0fb33feb8fc4e5fededb8cbfda1","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-07 17:59:10","modifiedFileCount":"370","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2019-01-23 16:01:58","codes":[{"authorDate":"2019-01-23 16:01:58","commitOrder":5,"curCode":"    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        if (name != null) {\n            builder.field(NAME_FIELD.getPreferredName(), name);\n        }\n        builder.field(IGNORE_UNMAPPED.getPreferredName(), ignoreUnmapped);\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.SEQ_NO_PRIMARY_TERM_FIELD.getPreferredName(), seqNoAndPrimaryTerm);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), trackScores);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext, params);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat docValueField : docValueFields) {\n                if (docValueField.format == null) {\n                    builder.value(docValueField.field);\n                } else {\n                    builder.startObject()\n                        .field(\"field\", docValueField.field)\n                        .field(\"format\", docValueField.format)\n                        .endObject();\n                }\n            }\n            builder.endArray();\n        }\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder, params);\n        }\n        if (innerCollapseBuilder != null) {\n            builder.field(COLLAPSE_FIELD.getPreferredName(), innerCollapseBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","date":"2019-01-23 16:01:58","endLine":502,"groupId":"43642","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"toXContent","params":"(XContentBuilderbuilder@Paramsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/be9650b8d5c1c924abb5f2180f08e491ac0d80.src","preCode":"    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        if (name != null) {\n            builder.field(NAME_FIELD.getPreferredName(), name);\n        }\n        builder.field(IGNORE_UNMAPPED.getPreferredName(), ignoreUnmapped);\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), trackScores);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext, params);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat docValueField : docValueFields) {\n                if (docValueField.format == null) {\n                    builder.value(docValueField.field);\n                } else {\n                    builder.startObject()\n                        .field(\"field\", docValueField.field)\n                        .field(\"format\", docValueField.format)\n                        .endObject();\n                }\n            }\n            builder.endArray();\n        }\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder, params);\n        }\n        if (innerCollapseBuilder != null) {\n            builder.field(COLLAPSE_FIELD.getPreferredName(), innerCollapseBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":448,"status":"M"},{"authorDate":"2019-01-23 16:01:58","commitOrder":5,"curCode":"    protected XContentBuilder internalXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.SEQ_NO_PRIMARY_TERM_FIELD.getPreferredName(), seqNoAndPrimaryTerm);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat dvField : docValueFields) {\n                builder.startObject()\n                    .field(\"field\", dvField.field);\n                if (dvField.format != null) {\n                    builder.field(\"format\", dvField.format);\n                }\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                    sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (trackScores) {\n            builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), true);\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","date":"2019-01-23 16:01:58","endLine":661,"groupId":"46746","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"internalXContent","params":"(XContentBuilderbuilder@Paramsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ba/51099d6bc0023b5f1ef41fea969855f7e534e0.src","preCode":"    protected XContentBuilder internalXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat dvField : docValueFields) {\n                builder.startObject()\n                    .field(\"field\", dvField.field);\n                if (dvField.format != null) {\n                    builder.field(\"format\", dvField.format);\n                }\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                    sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (trackScores) {\n            builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), true);\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/search/aggregations/metrics/TopHitsAggregationBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":614,"status":"M"}],"commitId":"52ba407931093ba86538596639eaf35b2a858d01","commitMessage":"@@@Expose sequence number and primary terms in search responses (#37639)\n\nUsers may require the sequence number and primary terms to perform optimistic concurrency control operations. Currently.  you can get the sequence number via the `docvalues_fields` API but the primary term is not accessible because it is maintained by the `SeqNoFieldMapper` and the infrastructure can't find it. \n\nThis commit adds a dedicated sub fetch phase to return both numbers that is connected to a new `seq_no_primary_term` parameter.","date":"2019-01-23 16:01:58","modifiedFileCount":"26","status":"M","submitter":"Boaz Leskes"},{"authorTime":"2020-09-15 01:08:58","codes":[{"authorDate":"2020-09-15 01:08:58","commitOrder":6,"curCode":"    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        if (name != null) {\n            builder.field(NAME_FIELD.getPreferredName(), name);\n        }\n        builder.field(IGNORE_UNMAPPED.getPreferredName(), ignoreUnmapped);\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.SEQ_NO_PRIMARY_TERM_FIELD.getPreferredName(), seqNoAndPrimaryTerm);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), trackScores);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext, params);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat docValueField : docValueFields) {\n                docValueField.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (fetchFields != null) {\n            builder.startArray(SearchSourceBuilder.FETCH_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat docValueField : fetchFields) {\n                docValueField.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder, params);\n        }\n        if (innerCollapseBuilder != null) {\n            builder.field(COLLAPSE_FIELD.getPreferredName(), innerCollapseBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","date":"2020-09-15 01:08:58","endLine":525,"groupId":"107913","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"toXContent","params":"(XContentBuilderbuilder@Paramsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e0/502d8caa21b3e4e445e4fc8f0ec8b01a80314a.src","preCode":"    public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        if (name != null) {\n            builder.field(NAME_FIELD.getPreferredName(), name);\n        }\n        builder.field(IGNORE_UNMAPPED.getPreferredName(), ignoreUnmapped);\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.SEQ_NO_PRIMARY_TERM_FIELD.getPreferredName(), seqNoAndPrimaryTerm);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), trackScores);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext, params);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat docValueField : docValueFields) {\n                if (docValueField.format == null) {\n                    builder.value(docValueField.field);\n                } else {\n                    builder.startObject()\n                        .field(\"field\", docValueField.field)\n                        .field(\"format\", docValueField.format)\n                        .endObject();\n                }\n            }\n            builder.endArray();\n        }\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder, params);\n        }\n        if (innerCollapseBuilder != null) {\n            builder.field(COLLAPSE_FIELD.getPreferredName(), innerCollapseBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":471,"status":"M"},{"authorDate":"2020-09-15 01:08:58","commitOrder":6,"curCode":"    protected XContentBuilder internalXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.SEQ_NO_PRIMARY_TERM_FIELD.getPreferredName(), seqNoAndPrimaryTerm);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat docValueField : docValueFields) {\n                docValueField.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n\n        if (fetchFields != null) {\n            builder.startArray(SearchSourceBuilder.FETCH_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat docValueField : fetchFields) {\n                docValueField.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                    sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (trackScores) {\n            builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), true);\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","date":"2020-09-15 01:08:58","endLine":699,"groupId":"107913","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"internalXContent","params":"(XContentBuilderbuilder@Paramsparams)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/14/ee73de6b8e2f36be1118e5ec45553b7e724ce3.src","preCode":"    protected XContentBuilder internalXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject();\n        builder.field(SearchSourceBuilder.FROM_FIELD.getPreferredName(), from);\n        builder.field(SearchSourceBuilder.SIZE_FIELD.getPreferredName(), size);\n        builder.field(SearchSourceBuilder.VERSION_FIELD.getPreferredName(), version);\n        builder.field(SearchSourceBuilder.SEQ_NO_PRIMARY_TERM_FIELD.getPreferredName(), seqNoAndPrimaryTerm);\n        builder.field(SearchSourceBuilder.EXPLAIN_FIELD.getPreferredName(), explain);\n        if (fetchSourceContext != null) {\n            builder.field(SearchSourceBuilder._SOURCE_FIELD.getPreferredName(), fetchSourceContext);\n        }\n        if (storedFieldsContext != null) {\n            storedFieldsContext.toXContent(SearchSourceBuilder.STORED_FIELDS_FIELD.getPreferredName(), builder);\n        }\n        if (docValueFields != null) {\n            builder.startArray(SearchSourceBuilder.DOCVALUE_FIELDS_FIELD.getPreferredName());\n            for (FieldAndFormat dvField : docValueFields) {\n                builder.startObject()\n                    .field(\"field\", dvField.field);\n                if (dvField.format != null) {\n                    builder.field(\"format\", dvField.format);\n                }\n                builder.endObject();\n            }\n            builder.endArray();\n        }\n        if (scriptFields != null) {\n            builder.startObject(SearchSourceBuilder.SCRIPT_FIELDS_FIELD.getPreferredName());\n            for (ScriptField scriptField : scriptFields) {\n                scriptField.toXContent(builder, params);\n            }\n            builder.endObject();\n        }\n        if (sorts != null) {\n            builder.startArray(SearchSourceBuilder.SORT_FIELD.getPreferredName());\n            for (SortBuilder<?> sort : sorts) {\n                    sort.toXContent(builder, params);\n            }\n            builder.endArray();\n        }\n        if (trackScores) {\n            builder.field(SearchSourceBuilder.TRACK_SCORES_FIELD.getPreferredName(), true);\n        }\n        if (highlightBuilder != null) {\n            builder.field(SearchSourceBuilder.HIGHLIGHT_FIELD.getPreferredName(), highlightBuilder);\n        }\n        builder.endObject();\n        return builder;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/search/aggregations/metrics/TopHitsAggregationBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":647,"status":"M"}],"commitId":"f29c743a4789d3aa82cf0a677defeefd5bea6dfd","commitMessage":"@@@Support the 'fields' option in inner_hits and top_hits. (#62259)\n\nThis PR adds support for the 'fields' option in the following places:\n* Anytime `inner_hits` is used.  for both fetching nested/ child docs and field collapsing\n* The `top_hits` aggregation\n\nAddresses #61949. ","date":"2020-09-15 01:08:58","modifiedFileCount":"11","status":"M","submitter":"Julie Tibshirani"}]
