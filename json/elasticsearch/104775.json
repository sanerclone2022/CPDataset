[{"authorTime":"2019-08-06 00:15:42","codes":[{"authorDate":"2019-08-06 00:15:42","commitOrder":1,"curCode":"    public void testResolveToAggValue() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.value\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1,\n            DocValueFormat.RAW, Collections.emptyList(), Collections.emptyMap());\n        InternalAggregations internalAggregations = new InternalAggregations(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        Object[] value = (Object[]) resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\");\n        assertThat(value[0], equalTo(2.0));\n    }\n","date":"2019-08-06 00:15:42","endLine":67,"groupId":"37771","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testResolveToAggValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/06/d664efff567c8b7cd0815b77acc4325013d9ae.src","preCode":"    public void testResolveToAggValue() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.value\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1,\n            DocValueFormat.RAW, Collections.emptyList(), Collections.emptyMap());\n        InternalAggregations internalAggregations = new InternalAggregations(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        Object[] value = (Object[]) resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\");\n        assertThat(value[0], equalTo(2.0));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"},{"authorDate":"2019-08-06 00:15:42","commitOrder":1,"curCode":"    public void testResolveToUnknown() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.unknown\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1,\n            DocValueFormat.RAW, Collections.emptyList(), Collections.emptyMap());\n        InternalAggregations internalAggregations = new InternalAggregations(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\"));\n        assertThat(e.getMessage(), equalTo(\"path not supported for [the_avg]: [unknown]\"));\n    }\n","date":"2019-08-06 00:15:42","endLine":97,"groupId":"37771","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testResolveToUnknown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/06/d664efff567c8b7cd0815b77acc4325013d9ae.src","preCode":"    public void testResolveToUnknown() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.unknown\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1,\n            DocValueFormat.RAW, Collections.emptyList(), Collections.emptyMap());\n        InternalAggregations internalAggregations = new InternalAggregations(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\"));\n        assertThat(e.getMessage(), equalTo(\"path not supported for [the_avg]: [unknown]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"}],"commitId":"ae7c071ec794f0b8b0c54c6726e6bddf19ffae81","commitMessage":"@@@Allow pipeline aggs to select specific buckets from multi-bucket aggs (#44179)\n\nThis adjusts the `buckets_path` parser so that pipeline aggs can\nselect specific buckets (via their bucket keys) instead of fetching\nthe entire set of buckets.  This is useful for bucket_script in\nparticular.  which might want specific buckets for calculations.\n\nIt's possible to workaround this with `filter` aggs.  but the workaround\nis hacky and probably less performant.\n\n- Adjusts documentation\n- Adds a barebones AggregatorTestCase for bucket_script\n- Tweaks AggTestCase to use getMockScriptService() for reductions and\npipelines.  Previously pipelines could just pass in a script service\nfor testing.  but this didnt work for regular aggs.  The new\ngetMockScriptService() method fixes that issue.  but needs to be used\nfor pipelines too.  This had a knock-on effect of touching MovFn. \nAvgBucket and ScriptedMetric\n\n","date":"2019-08-06 00:15:42","modifiedFileCount":"6","status":"B","submitter":"Zachary Tong"},{"authorTime":"2020-04-02 22:39:30","codes":[{"authorDate":"2020-04-02 22:39:30","commitOrder":2,"curCode":"    public void testResolveToAggValue() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.value\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1, DocValueFormat.RAW, Collections.emptyMap());\n        InternalAggregations internalAggregations = new InternalAggregations(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        Object[] value = (Object[]) resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\");\n        assertThat(value[0], equalTo(2.0));\n    }\n","date":"2020-04-02 22:39:30","endLine":65,"groupId":"37771","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testResolveToAggValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/47/502f1eef074c2f9075a3835e3610a78a607f73.src","preCode":"    public void testResolveToAggValue() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.value\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1,\n            DocValueFormat.RAW, Collections.emptyList(), Collections.emptyMap());\n        InternalAggregations internalAggregations = new InternalAggregations(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        Object[] value = (Object[]) resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\");\n        assertThat(value[0], equalTo(2.0));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2020-04-02 22:39:30","commitOrder":2,"curCode":"    public void testResolveToUnknown() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.unknown\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1, DocValueFormat.RAW, Collections.emptyMap());\n        InternalAggregations internalAggregations = new InternalAggregations(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\"));\n        assertThat(e.getMessage(), equalTo(\"path not supported for [the_avg]: [unknown]\"));\n    }\n","date":"2020-04-02 22:39:30","endLine":93,"groupId":"37771","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testResolveToUnknown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/47/502f1eef074c2f9075a3835e3610a78a607f73.src","preCode":"    public void testResolveToUnknown() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.unknown\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1,\n            DocValueFormat.RAW, Collections.emptyList(), Collections.emptyMap());\n        InternalAggregations internalAggregations = new InternalAggregations(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\"));\n        assertThat(e.getMessage(), equalTo(\"path not supported for [the_avg]: [unknown]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"dbe9b48b830c4aea5c59abac322e77ca5f98a8af","commitMessage":"@@@Begin to drop pipeline aggs from the result tree (#54311)\n\nRemoves pipeline aggregations from the aggregation result tree as they\nare no longer used. This stops us from building the pipeline aggregators\nat all on data nodes except for backwards compatibility serialization.\nThis will save a tiny bit of space in the aggregation tree which is\nlovely.  but the biggest benefit is that it is a step towards simplifying\npipeline aggregators.\n\nThis only does about half of the work to remove the pipeline aggs from\nthe tree. Removing all of it would.  well.  double the size of the change\nand make it harder to review.\n","date":"2020-04-02 22:39:30","modifiedFileCount":"158","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-07-02 18:25:49","codes":[{"authorDate":"2020-07-02 18:25:49","commitOrder":3,"curCode":"    public void testResolveToAggValue() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.value\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1, DocValueFormat.RAW, Collections.emptyMap());\n        InternalAggregations internalAggregations = InternalAggregations.from(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        Object[] value = (Object[]) resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\");\n        assertThat(value[0], equalTo(2.0));\n    }\n","date":"2020-07-02 18:25:49","endLine":65,"groupId":"104775","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testResolveToAggValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0a/d6b2b2c191cd017daf1a17072413949cc76384.src","preCode":"    public void testResolveToAggValue() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.value\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1, DocValueFormat.RAW, Collections.emptyMap());\n        InternalAggregations internalAggregations = new InternalAggregations(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        Object[] value = (Object[]) resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\");\n        assertThat(value[0], equalTo(2.0));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2020-07-02 18:25:49","commitOrder":3,"curCode":"    public void testResolveToUnknown() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.unknown\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1, DocValueFormat.RAW, Collections.emptyMap());\n        InternalAggregations internalAggregations = InternalAggregations.from(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\"));\n        assertThat(e.getMessage(), equalTo(\"path not supported for [the_avg]: [unknown]\"));\n    }\n","date":"2020-07-02 18:25:49","endLine":93,"groupId":"104775","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testResolveToUnknown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0a/d6b2b2c191cd017daf1a17072413949cc76384.src","preCode":"    public void testResolveToUnknown() {\n        AggregationPath path = AggregationPath.parse(\"the_avg.unknown\");\n        List<LongTerms.Bucket> buckets = new ArrayList<>();\n        InternalAggregation agg = new InternalAvg(\"the_avg\", 2, 1, DocValueFormat.RAW, Collections.emptyMap());\n        InternalAggregations internalAggregations = new InternalAggregations(Collections.singletonList(agg));\n\n        LongTerms.Bucket bucket = new LongTerms.Bucket(1, 1, internalAggregations, false, 0, DocValueFormat.RAW);\n        buckets.add(bucket);\n\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> resolvePropertyFromPath(path.getPathElementsAsStringList(), buckets, \"the_long_terms\"));\n        assertThat(e.getMessage(), equalTo(\"path not supported for [the_avg]: [unknown]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"59fc3d74d58c390828267569022ac177e77ffbd1","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-02 18:25:49","modifiedFileCount":"724","status":"M","submitter":"Luca Cavanna"}]
