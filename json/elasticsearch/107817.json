[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext.indexVersionCreated())) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2018-04-26 03:22:53","endLine":137,"groupId":"9999","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/00/9caf2b8e814fcc1df85f4f1cb66da33116de40.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext.indexVersionCreated())) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name);\n            parseNested(name, node, builder, parserContext);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2018-04-26 03:22:53","endLine":174,"groupId":"60004","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/e3e41798d91a5cacdadf3a98e2f7e0a985e8f6.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name);\n            parseNested(name, node, builder, parserContext);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2019-11-12 18:21:41","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext.indexVersionCreated())) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2018-04-26 03:22:53","endLine":137,"groupId":"9999","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/00/9caf2b8e814fcc1df85f4f1cb66da33116de40.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext.indexVersionCreated())) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"N"},{"authorDate":"2019-11-12 18:21:41","commitOrder":2,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name);\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2019-11-12 18:21:41","endLine":178,"groupId":"60004","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/01a4a2bec9e883b6504441f2f03e3e3535a2ba.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name);\n            parseNested(name, node, builder, parserContext);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"}],"commitId":"293648b4ee71e513305cc6dcec53a75f3ae833e6","commitMessage":"@@@[#40366] Silence some lint warnings in server project (#48927)\n\nPart of #40366. Silence a number of lint warnings in the :server\nproject.  which arise when re-enabling suppressed warnings in\nserver/build.gradle.","date":"2019-11-12 18:21:41","modifiedFileCount":"29","status":"M","submitter":"Rory Hunter"},{"authorTime":"2019-11-12 18:21:41","codes":[{"authorDate":"2020-02-27 18:52:27","commitOrder":3,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2020-02-27 18:52:27","endLine":146,"groupId":"9999","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5d/7957e139599844c43e5776d3f4e7eaf0ec797b.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext.indexVersionCreated())) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2019-11-12 18:21:41","commitOrder":3,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name);\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2019-11-12 18:21:41","endLine":178,"groupId":"60004","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/01a4a2bec9e883b6504441f2f03e3e3535a2ba.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name);\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"N"}],"commitId":"31b29875c9d13bcf6e4851141886b0511c7340bb","commitMessage":"@@@Add validation for dynamic templates (#51233)\n\nTries to load a `Mapper` instance for the mapping snippet of a dynamic template.\nThis should catch things like using an analyzer that is undefined or mapping attributes that are unused.\n\nThis is best effort:\n* If `{{name}}` placeholder is used in the mapping snippet then validation is skipped.\n* If `match_mapping_type` is not specified then validation is performed for all mapping types.\n  If parsing succeeds with a single mapping type then this the dynamic mapping is considered valid.\n\nIf is detected that a dynamic template mapping snippet is invalid at mapping update time then the mapping update is failed for indices created on 8.0.0-alpha1 and later. For indices created on prior version a deprecation warning is omitted instead. In 7.x clusters the mapping update will never fail in case of an invalid dynamic template mapping snippet and a deprecation warning will always be omitted.\n\nCloses #17411\nCloses #24419\n\nCo-authored-by: Adrien Grand <jpountz@gmail.com>","date":"2020-02-27 18:52:27","modifiedFileCount":"4","status":"M","submitter":"Martijn van Groningen"},{"authorTime":"2020-11-05 18:48:39","codes":[{"authorDate":"2020-11-05 18:48:39","commitOrder":4,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2020-11-05 18:48:39","endLine":145,"groupId":"9999","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e2/d4b197bb741213b6adb5703e7f1742aac12c78.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2020-11-05 18:48:39","commitOrder":4,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2020-11-05 18:48:39","endLine":210,"groupId":"60004","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/60/d9fcde9969bb71df2941ce6a85209c7ec2aea0.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name);\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"0fd70ae383620d587a36ea71baca9295da93a76a","commitMessage":"@@@Remove Mapper.BuilderContext (#64625)\n\nMapper.BuilderContext is a simple wrapper around two objects.  some\nIndexSettings and a ContentPath. The IndexSettings are the same as\nthose provided in the ParserContext.  so we can simplify things here\nby removing them and just passing ContentPath directly to\nMapper.Builder#build()","date":"2020-11-05 18:48:39","modifiedFileCount":"103","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-11-05 18:48:39","codes":[{"authorDate":"2021-02-08 19:50:19","commitOrder":5,"curCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-02-08 19:50:19","endLine":148,"groupId":"9999","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b1/d2937299a0d0af262040c18c8f82e74a9559d3.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"},{"authorDate":"2020-11-05 18:48:39","commitOrder":5,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2020-11-05 18:48:39","endLine":210,"groupId":"60004","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/60/d9fcde9969bb71df2941ce6a85209c7ec2aea0.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"N"}],"commitId":"8ad476ad21ac3304bb6369d8a115226bb2903267","commitMessage":"@@@Split Mapping parsing from DocumentMapper construction (#68593)\n\nDocumentMapperParser parses xcontent mappings into a DocumentMapper.  through DocumentMapper.Builder. Most of the work is done to construct a Mapping instance.  that then gets provided to the DocumentMapper.\n\nMoving forward.  we would like to rely more on Mapping and less on the entire DocumentMapper.  but currently it is cumbersome to create Mapping without creating an instance of DocumentMapper.\n\nThis commit removes DocumentMapperParser and DocumentMapper.Builder in favor of a new class called MappingParser that given xcontent mappings returns a Mapping instance.  which can be used on its own or provided to DocumentMapper at its construction time. This will help with further refactorings as well as to possibly have more tests that don't rely on the entire MapperService/DocumentMapper but rather only on the needed components.","date":"2021-02-08 19:50:19","modifiedFileCount":"12","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2021-06-08 06:05:30","codes":[{"authorDate":"2021-06-08 06:05:30","commitOrder":6,"curCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-08 06:05:30","endLine":124,"groupId":"9999","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/db/fde93c7863497020b4be1749bd31d10ae949a6.src","preCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2021-06-08 06:05:30","commitOrder":6,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-08 06:05:30","endLine":127,"groupId":"60004","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fe/7d7f75de7ad946867e50c512b81188543d1326.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"ad111598867545d0dbeae60c6d24dfcd502c0c26","commitMessage":"@@@Merge remote-tracking branch 'elastic/master' into feature/vector-tiles\n","date":"2021-06-08 06:05:30","modifiedFileCount":"156","status":"M","submitter":"Igor Motov"},{"authorTime":"2021-06-17 05:31:31","codes":[{"authorDate":"2021-06-17 05:31:31","commitOrder":7,"curCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-17 05:31:31","endLine":159,"groupId":"9999","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b5/6b9cadb40a115846d4d090210592f9e34c7694.src","preCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2021-06-17 05:31:31","commitOrder":7,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-17 05:31:31","endLine":212,"groupId":"60004","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0b/802eaba948640a739ac82b8c4ad41f8a26c3b2.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"}],"commitId":"6a8f8f3f718bd21bf14176049c9e1f1def13463b","commitMessage":"@@@Merge remote-tracking branch 'elastic/master' into feature/vector-tiles\n","date":"2021-06-17 05:31:31","modifiedFileCount":"4429","status":"M","submitter":"Igor Motov"},{"authorTime":"2021-06-23 15:28:56","codes":[{"authorDate":"2021-06-23 15:28:56","commitOrder":8,"curCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, MappingParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-23 15:28:56","endLine":159,"groupId":"9999","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@MappingParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2a/c7e97011037a4479d13713595bdfd45d32083e.src","preCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2021-06-23 15:28:56","commitOrder":8,"curCode":"        public Mapper.Builder parse(String name,\n                                    Map<String, Object> node,\n                                    MappingParserContext parserContext)\n            throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-23 15:28:56","endLine":215,"groupId":"60004","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@MappingParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1b/c239f6b1a86e7af2f1d758930bd83fbd639a5b.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"}],"commitId":"0d0e403258fe5817da4cda5ed60e769dccdc2ee1","commitMessage":"@@@Move and rename ParserContext (#74402)\n\nParserContext is an inner class of Mapper.TypeParser but is used outside of the context of parsing mappers.  for instance also to parse runtime fields. Its purpose is to be used to parse mappings in general.  and its name is confusing as it differs ever so slightly from ParseContext which is used for parsing incoming documents.\n\nThis commit moves ParserContext to be a top-level class.  and renames it to MappingParserContext.\n","date":"2021-06-23 15:28:56","modifiedFileCount":"25","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2021-07-19 16:44:48","codes":[{"authorDate":"2021-07-19 16:44:48","commitOrder":9,"curCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, MappingParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-07-19 16:44:48","endLine":155,"groupId":"107817","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@MappingParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/6bed13a69c1861e35fbab0781e3ad267135697.src","preCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, MappingParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"},{"authorDate":"2021-07-19 16:44:48","commitOrder":9,"curCode":"        public Mapper.Builder parse(String name,\n                                    Map<String, Object> node,\n                                    MappingParserContext parserContext)\n            throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-07-19 16:44:48","endLine":126,"groupId":"107817","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@MappingParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/50/aa6322634c1f8036b30944d54fe83c1924f825.src","preCode":"        public Mapper.Builder parse(String name,\n                                    Map<String, Object> node,\n                                    MappingParserContext parserContext)\n            throws MapperParsingException {\n            ObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/ObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"cf575f4766e3b3d7a58698be0d91559664f1bd80","commitMessage":"@@@Make NestedObjectMapper its own class (#74410)\n\nNested objects are implemented via a Nested class directly on object mappers. \neven though nested and non-nested objects have quite different semantics. In\naddition.  most call-sites that need to get an object mapper in fact need a nested\nobject mapper. To make it clearer that nested and object mappers are different\nbeasts with different implementations and different requirements.  we should\nsplit them into different classes.","date":"2021-07-19 16:44:48","modifiedFileCount":"39","status":"M","submitter":"Alan Woodward"}]
