[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public TemplateUpgradeService(Settings settings, Client client, ClusterService clusterService, ThreadPool threadPool,\n                                  Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        super(settings);\n        this.client = client;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n        clusterService.addListener(this);\n    }\n","date":"2018-04-26 03:22:53","endLine":94,"groupId":"57679","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"TemplateUpgradeService","params":"(Settingssettings@Clientclient@ClusterServiceclusterService@ThreadPoolthreadPool@Collection<UnaryOperator<Map<String@IndexTemplateMetaData>>>indexTemplateMetaDataUpgraders)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c0/d8d1ceab6d5b3143f444837755fb3c57807166.src","preCode":"    public TemplateUpgradeService(Settings settings, Client client, ClusterService clusterService, ThreadPool threadPool,\n                                  Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        super(settings);\n        this.client = client;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n        clusterService.addListener(this);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/TemplateUpgradeService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public MetaDataUpgrader(Collection<UnaryOperator<Map<String, MetaData.Custom>>> customMetaDataUpgraders,\n                            Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        this.customMetaDataUpgraders = customs -> {\n            Map<String, MetaData.Custom> upgradedCustoms = new HashMap<>(customs);\n            for (UnaryOperator<Map<String, MetaData.Custom>> customMetaDataUpgrader : customMetaDataUpgraders) {\n                upgradedCustoms = customMetaDataUpgrader.apply(upgradedCustoms);\n            }\n            return upgradedCustoms;\n        };\n\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n    }\n","date":"2018-04-26 03:22:53","endLine":55,"groupId":"57679","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"MetaDataUpgrader","params":"(Collection<UnaryOperator<Map<String@MetaData.Custom>>>customMetaDataUpgraders@Collection<UnaryOperator<Map<String@IndexTemplateMetaData>>>indexTemplateMetaDataUpgraders)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/49/dd91901d756196a3e8cad1783f7f7c10aea9dd.src","preCode":"    public MetaDataUpgrader(Collection<UnaryOperator<Map<String, MetaData.Custom>>> customMetaDataUpgraders,\n                            Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        this.customMetaDataUpgraders = customs -> {\n            Map<String, MetaData.Custom> upgradedCustoms = new HashMap<>(customs);\n            for (UnaryOperator<Map<String, MetaData.Custom>> customMetaDataUpgrader : customMetaDataUpgraders) {\n                upgradedCustoms = customMetaDataUpgrader.apply(upgradedCustoms);\n            }\n            return upgradedCustoms;\n        };\n\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n    }\n","realPath":"server/src/main/java/org/elasticsearch/plugins/MetaDataUpgrader.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-11-02 00:05:41","commitOrder":2,"curCode":"    public TemplateUpgradeService(Client client, ClusterService clusterService, ThreadPool threadPool,\n                                  Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        this.client = client;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n        clusterService.addListener(this);\n    }\n","date":"2018-11-02 01:13:02","endLine":90,"groupId":"57679","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"TemplateUpgradeService","params":"(Clientclient@ClusterServiceclusterService@ThreadPoolthreadPool@Collection<UnaryOperator<Map<String@IndexTemplateMetaData>>>indexTemplateMetaDataUpgraders)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/90/26d26a11fd51a5c991fd0e0f4c770376cc21e9.src","preCode":"    public TemplateUpgradeService(Settings settings, Client client, ClusterService clusterService, ThreadPool threadPool,\n                                  Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        super(settings);\n        this.client = client;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n        clusterService.addListener(this);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/TemplateUpgradeService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public MetaDataUpgrader(Collection<UnaryOperator<Map<String, MetaData.Custom>>> customMetaDataUpgraders,\n                            Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        this.customMetaDataUpgraders = customs -> {\n            Map<String, MetaData.Custom> upgradedCustoms = new HashMap<>(customs);\n            for (UnaryOperator<Map<String, MetaData.Custom>> customMetaDataUpgrader : customMetaDataUpgraders) {\n                upgradedCustoms = customMetaDataUpgrader.apply(upgradedCustoms);\n            }\n            return upgradedCustoms;\n        };\n\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n    }\n","date":"2018-04-26 03:22:53","endLine":55,"groupId":"57679","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"MetaDataUpgrader","params":"(Collection<UnaryOperator<Map<String@MetaData.Custom>>>customMetaDataUpgraders@Collection<UnaryOperator<Map<String@IndexTemplateMetaData>>>indexTemplateMetaDataUpgraders)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/49/dd91901d756196a3e8cad1783f7f7c10aea9dd.src","preCode":"    public MetaDataUpgrader(Collection<UnaryOperator<Map<String, MetaData.Custom>>> customMetaDataUpgraders,\n                            Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        this.customMetaDataUpgraders = customs -> {\n            Map<String, MetaData.Custom> upgradedCustoms = new HashMap<>(customs);\n            for (UnaryOperator<Map<String, MetaData.Custom>> customMetaDataUpgrader : customMetaDataUpgraders) {\n                upgradedCustoms = customMetaDataUpgrader.apply(upgradedCustoms);\n            }\n            return upgradedCustoms;\n        };\n\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n    }\n","realPath":"server/src/main/java/org/elasticsearch/plugins/MetaDataUpgrader.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"N"}],"commitId":"c3cf7dd305b3d4636405c292659dbff05307f146","commitMessage":"@@@Merge remote-tracking branch 'upstream/master' into index-lifecycle\n","date":"2018-11-02 01:13:02","modifiedFileCount":"456","status":"M","submitter":"Tal Levy"},{"authorTime":"2019-09-30 23:57:56","codes":[{"authorDate":"2018-11-02 00:05:41","commitOrder":3,"curCode":"    public TemplateUpgradeService(Client client, ClusterService clusterService, ThreadPool threadPool,\n                                  Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        this.client = client;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n        clusterService.addListener(this);\n    }\n","date":"2018-11-02 01:13:02","endLine":90,"groupId":"57679","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"TemplateUpgradeService","params":"(Clientclient@ClusterServiceclusterService@ThreadPoolthreadPool@Collection<UnaryOperator<Map<String@IndexTemplateMetaData>>>indexTemplateMetaDataUpgraders)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/90/26d26a11fd51a5c991fd0e0f4c770376cc21e9.src","preCode":"    public TemplateUpgradeService(Client client, ClusterService clusterService, ThreadPool threadPool,\n                                  Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        this.client = client;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n        clusterService.addListener(this);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/TemplateUpgradeService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"N"},{"authorDate":"2019-09-30 23:57:56","commitOrder":3,"curCode":"    public MetaDataUpgrader(Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n    }\n","date":"2019-09-30 23:57:56","endLine":44,"groupId":"57679","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"MetaDataUpgrader","params":"(Collection<UnaryOperator<Map<String@IndexTemplateMetaData>>>indexTemplateMetaDataUpgraders)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5e/eca9b45bf13a409ee9a6efd192734b12cc2209.src","preCode":"    public MetaDataUpgrader(Collection<UnaryOperator<Map<String, MetaData.Custom>>> customMetaDataUpgraders,\n                            Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        this.customMetaDataUpgraders = customs -> {\n            Map<String, MetaData.Custom> upgradedCustoms = new HashMap<>(customs);\n            for (UnaryOperator<Map<String, MetaData.Custom>> customMetaDataUpgrader : customMetaDataUpgraders) {\n                upgradedCustoms = customMetaDataUpgrader.apply(upgradedCustoms);\n            }\n            return upgradedCustoms;\n        };\n\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n    }\n","realPath":"server/src/main/java/org/elasticsearch/plugins/MetaDataUpgrader.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"}],"commitId":"cb800aba63f1e5dbd46e5f4b34f2749b48f64620","commitMessage":"@@@Remove unused pluggable metadata upgraders (#47297)\n\nToday plugins may provide upgraders for custom metadata and index metadata.  but\nthese upgraders are bypassed during a rolling restart. Fortunately this\nextension mechanism is unused by all known plugins. This commit removes these\nextension points.","date":"2019-09-30 23:57:56","modifiedFileCount":"9","status":"M","submitter":"David Turner"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":4,"curCode":"    public TemplateUpgradeService(Client client, ClusterService clusterService, ThreadPool threadPool,\n                                  Collection<UnaryOperator<Map<String, IndexTemplateMetadata>>> indexTemplateMetadataUpgraders) {\n        this.client = client;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.indexTemplateMetadataUpgraders = templates -> {\n            Map<String, IndexTemplateMetadata> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetadata>> upgrader : indexTemplateMetadataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n        clusterService.addListener(this);\n    }\n","date":"2020-04-01 03:52:01","endLine":94,"groupId":"57679","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"TemplateUpgradeService","params":"(Clientclient@ClusterServiceclusterService@ThreadPoolthreadPool@Collection<UnaryOperator<Map<String@IndexTemplateMetadata>>>indexTemplateMetadataUpgraders)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ec/5e20f015491f67d7ab9dfe7796c7a0d9c29953.src","preCode":"    public TemplateUpgradeService(Client client, ClusterService clusterService, ThreadPool threadPool,\n                                  Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        this.client = client;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n        clusterService.addListener(this);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/TemplateUpgradeService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":4,"curCode":"    public MetadataUpgrader(Collection<UnaryOperator<Map<String, IndexTemplateMetadata>>> indexTemplateMetadataUpgraders) {\n        this.indexTemplateMetadataUpgraders = templates -> {\n            Map<String, IndexTemplateMetadata> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetadata>> upgrader : indexTemplateMetadataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n    }\n","date":"2020-04-01 03:52:01","endLine":44,"groupId":"57679","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"MetadataUpgrader","params":"(Collection<UnaryOperator<Map<String@IndexTemplateMetadata>>>indexTemplateMetadataUpgraders)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/68e99f76ce77d39e13cbd26c0ce634bea3cdaf.src","preCode":"    public MetaDataUpgrader(Collection<UnaryOperator<Map<String, IndexTemplateMetaData>>> indexTemplateMetaDataUpgraders) {\n        this.indexTemplateMetaDataUpgraders = templates -> {\n            Map<String, IndexTemplateMetaData> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetaData>> upgrader : indexTemplateMetaDataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n    }\n","realPath":"server/src/main/java/org/elasticsearch/plugins/MetadataUpgrader.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-10-07 19:19:33","commitOrder":5,"curCode":"    public TemplateUpgradeService(Client client, ClusterService clusterService, ThreadPool threadPool,\n                                  Collection<UnaryOperator<Map<String, IndexTemplateMetadata>>> indexTemplateMetadataUpgraders) {\n        this.client = client;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.indexTemplateMetadataUpgraders = templates -> {\n            Map<String, IndexTemplateMetadata> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetadata>> upgrader : indexTemplateMetadataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n        if (DiscoveryNode.isMasterNode(clusterService.getSettings())) {\n            clusterService.addListener(this);\n        }\n    }\n","date":"2020-10-07 19:19:33","endLine":96,"groupId":"107590","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"TemplateUpgradeService","params":"(Clientclient@ClusterServiceclusterService@ThreadPoolthreadPool@Collection<UnaryOperator<Map<String@IndexTemplateMetadata>>>indexTemplateMetadataUpgraders)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e0/0140dbb41f7e6f1de4171bf1b04919ea82febb.src","preCode":"    public TemplateUpgradeService(Client client, ClusterService clusterService, ThreadPool threadPool,\n                                  Collection<UnaryOperator<Map<String, IndexTemplateMetadata>>> indexTemplateMetadataUpgraders) {\n        this.client = client;\n        this.clusterService = clusterService;\n        this.threadPool = threadPool;\n        this.indexTemplateMetadataUpgraders = templates -> {\n            Map<String, IndexTemplateMetadata> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetadata>> upgrader : indexTemplateMetadataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n        clusterService.addListener(this);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/TemplateUpgradeService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":5,"curCode":"    public MetadataUpgrader(Collection<UnaryOperator<Map<String, IndexTemplateMetadata>>> indexTemplateMetadataUpgraders) {\n        this.indexTemplateMetadataUpgraders = templates -> {\n            Map<String, IndexTemplateMetadata> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetadata>> upgrader : indexTemplateMetadataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n    }\n","date":"2020-04-01 03:52:01","endLine":44,"groupId":"107590","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"MetadataUpgrader","params":"(Collection<UnaryOperator<Map<String@IndexTemplateMetadata>>>indexTemplateMetadataUpgraders)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/68e99f76ce77d39e13cbd26c0ce634bea3cdaf.src","preCode":"    public MetadataUpgrader(Collection<UnaryOperator<Map<String, IndexTemplateMetadata>>> indexTemplateMetadataUpgraders) {\n        this.indexTemplateMetadataUpgraders = templates -> {\n            Map<String, IndexTemplateMetadata> upgradedTemplates = new HashMap<>(templates);\n            for (UnaryOperator<Map<String, IndexTemplateMetadata>> upgrader : indexTemplateMetadataUpgraders) {\n                upgradedTemplates = upgrader.apply(upgradedTemplates);\n            }\n            return upgradedTemplates;\n        };\n    }\n","realPath":"server/src/main/java/org/elasticsearch/plugins/MetadataUpgrader.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"N"}],"commitId":"80ff751e2032790fed67e254256b20144280ca70","commitMessage":"@@@Selectively Add ClusterState Listeners Depending on Node Roles (#63223)\n\nWe were not consistent in checking for node roles before adding listeners.\nIn some cases we did check the necessity of a CS listener and in others we did not.\nThis commit fixes a number of cases of redundant listeners that don't apply to all node roles.","date":"2020-10-07 19:19:33","modifiedFileCount":"10","status":"M","submitter":"Armin Braun"}]
