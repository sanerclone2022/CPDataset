[{"authorTime":"2020-04-03 23:34:50","codes":[{"authorDate":"2020-04-03 23:34:50","commitOrder":1,"curCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean() ? null : randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean() ? null : randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","date":"2020-04-03 23:34:50","endLine":490,"groupId":"13421","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindV2Templates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e6/7268b61ec416ebd9e57e4a678d54c814b129e9.src","preCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean() ? null : randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean() ? null : randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":475,"status":"B"},{"authorDate":"2020-04-03 23:34:50","commitOrder":1,"curCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","date":"2020-04-03 23:34:50","endLine":507,"groupId":"13421","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindV2TemplatesForHiddenIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e6/7268b61ec416ebd9e57e4a678d54c814b129e9.src","preCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":492,"status":"B"}],"commitId":"9f9ade7dcb04c1ffc66e92357f6cd32721dcda38","commitMessage":"@@@Use V2 index templates during index creation (#54669)\n\n* Use V2 index templates during index creation\n\nThis commit changes our index creation code to use (and favor!) V2 index templates during index\ncreation. The creation precedence goes like so.  in order of precedence:\n\n- Existing source `IndexMetadata` - for example.  when recovering from a peer or a shrink/split/clone\n  where index templates should not be applied\n- A matching V2 index template.  if one is found\n  - When a V2 template is found.  all component templates (in the `composed_of` field) are applied\n    in the order that they appear.  with the index template having the 2nd highest precedence (the\n    create index request always has the top priority when it comes to index settings)\n- All matching V1 templates (the old style)\n\nThis also adds index template validation when `PUT`-ing a new v2 index template (because this was\nrequired) and ensures that all index and component templates specify *no* top-level mapping type (it\nis automatically added when the template is added to the cluster state).\n\nThis does not yet implement fine-grained component template merging of mappings.  where we favor\nmerging only a single field's configuration.  that will be done in subsequent work.\n\nThis also keeps the existing hidden index behavior present for v1 templates.  where a hidden index\nwill match v2 index templates unless they are global (`*`) templates.\n\nRelates to #53101","date":"2020-04-03 23:34:50","modifiedFileCount":"11","status":"B","submitter":"Lee Hinman"},{"authorTime":"2020-04-03 23:34:50","codes":[{"authorDate":"2020-04-09 13:43:50","commitOrder":2,"curCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean() ? null : randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), null, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean() ? null : randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","date":"2020-04-09 13:43:50","endLine":490,"groupId":"11565","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindV2Templates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/07/c3d83e1171ea22cd503f2da881b1072a6e9345.src","preCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean() ? null : randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean() ? null : randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":475,"status":"M"},{"authorDate":"2020-04-03 23:34:50","commitOrder":2,"curCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","date":"2020-04-03 23:34:50","endLine":507,"groupId":"13421","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindV2TemplatesForHiddenIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e6/7268b61ec416ebd9e57e4a678d54c814b129e9.src","preCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":492,"status":"N"}],"commitId":"d4394d46d6ff6d016efa148a34a34f081d692175","commitMessage":"@@@Fix NPE in MetadataIndexTemplateService#findV2Template (#54945)\n\nThis commit fixes potential NPE when there's V2 template with `null` priority.\nThis is done by using `null`-safe comparator.","date":"2020-04-09 13:43:50","modifiedFileCount":"2","status":"M","submitter":"Przemko Robakowski"},{"authorTime":"2020-04-03 23:34:50","codes":[{"authorDate":"2020-04-19 22:16:16","commitOrder":3,"curCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), null, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","date":"2020-04-19 22:16:16","endLine":506,"groupId":"11565","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindV2Templates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c6/c26bf1fa00b123052086aa2a59f40e8501ef57.src","preCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean() ? null : randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), null, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean() ? null : randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":491,"status":"M"},{"authorDate":"2020-04-03 23:34:50","commitOrder":3,"curCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","date":"2020-04-03 23:34:50","endLine":507,"groupId":"13421","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindV2TemplatesForHiddenIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e6/7268b61ec416ebd9e57e4a678d54c814b129e9.src","preCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":492,"status":"N"}],"commitId":"c5b923afec911c6ae8fc5179e65ae6bf55dcc5f1","commitMessage":"@@@Make isHidden a primitive when finding v2 templates (#55408)\n\nisHidden was a `Boolean` in order to treat a special case identified\nwith V1 templates where if the create index request didn't specify if\nthe index should be hidden or not (ie. isHidden was `null`) but the\nindex matched a template that specified the `index.hidden` setting we\nneeded to remove the global templates from the templates we'll apply to\nthe new index (note: this is important with V1 templates as inheritance\nis supported).\n\nWith V2 templates we match only one template with an index so the\nequivalent check did not need to exist (we added a sanity check in\nhttps://github.com/elastic/elasticsearch/pull/55015 where we make sure\nwe don't apply an invalid global template - one that specifes the\n`index.hidden` setting.  but this is a check we make irrespective of the\nuser specifying or not if the index should be hidden)\n\nThis commit makes `isHidden` when matching V2 templates a boolean\nprimitive.  eliminating the need for the `null` state to exist. Note that\nsome methods which use the matching V2 templates still work with a\n`Boolean` object `isHidden` attribute as they are also matching the V1\ntemplates. These methods will pass in `false` instead of `null` when\nfinding the V2 templates.","date":"2020-04-19 22:16:16","modifiedFileCount":"6","status":"M","submitter":"Andrei Dan"},{"authorTime":"2020-05-12 19:42:59","codes":[{"authorDate":"2020-05-12 19:42:59","commitOrder":4,"curCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), null, 1L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","date":"2020-05-12 19:42:59","endLine":626,"groupId":"11565","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindV2Templates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/c59c72215d7b5a2c129ae7f3229f004793f7a4.src","preCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), null, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":611,"status":"M"},{"authorDate":"2020-05-12 19:42:59","commitOrder":4,"curCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","date":"2020-05-12 19:42:59","endLine":643,"groupId":"19130","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindV2TemplatesForHiddenIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/c59c72215d7b5a2c129ae7f3229f004793f7a4.src","preCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":628,"status":"M"}],"commitId":"74e2c011384bab5b171c5efbbfb57b24820f0a07","commitMessage":"@@@Auto create data streams using index templates v2 (#55377)\n\nThis commit adds the ability to auto create data streams using index templates v2.\nIndex templates (v2) now have a data_steam field that includes a timestamp field. \nif provided and index name matches with that template then a data stream\n(plus first backing index) is auto created. \n\nRelates to #53100","date":"2020-05-12 19:42:59","modifiedFileCount":"21","status":"M","submitter":"Martijn van Groningen"},{"authorTime":"2020-05-27 23:32:10","codes":[{"authorDate":"2020-05-27 23:32:10","commitOrder":5,"curCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        ComposableIndexTemplate it = new ComposableIndexTemplate(List.of(\"i*\"), null, List.of(\"ct\"), null, 1L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        ComposableIndexTemplate it2 = new ComposableIndexTemplate(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","date":"2020-05-27 23:32:10","endLine":636,"groupId":"60032","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindV2Templates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/22/9e61dabfe4041280ff85475df9eb4e22986d11.src","preCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), null, 1L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":621,"status":"M"},{"authorDate":"2020-05-27 23:32:10","commitOrder":5,"curCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        ComposableIndexTemplate it = new ComposableIndexTemplate(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        ComposableIndexTemplate it2 = new ComposableIndexTemplate(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","date":"2020-05-27 23:32:10","endLine":653,"groupId":"4985","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindV2TemplatesForHiddenIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/22/9e61dabfe4041280ff85475df9eb4e22986d11.src","preCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":638,"status":"M"}],"commitId":"4dc32611fcdc4ffc6ad27373103b636ee53941a8","commitMessage":"@@@Rename template V2 classes to ComposableTemplate (#57183)\n\nThis PR changes the name of the Index Template V2 classes to \"Composable Templates\".  it also ensures there are no mentions of \"V2\" in the documentation or error/warning messages. V1 templates are referred to as \"legacy\" templates.\n\nResolves #56609","date":"2020-05-27 23:32:10","modifiedFileCount":"28","status":"M","submitter":"Lee Hinman"},{"authorTime":"2020-10-26 20:35:36","codes":[{"authorDate":"2020-10-26 20:35:36","commitOrder":6,"curCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        ComposableIndexTemplate it = new ComposableIndexTemplate(List.of(\"i*\"), null, List.of(\"ct\"), null, 1L, null, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        ComposableIndexTemplate it2 = new ComposableIndexTemplate(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","date":"2020-10-26 20:35:36","endLine":695,"groupId":"102040","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testFindV2Templates","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/99/9ace6007901d3543106881246ddf436f778d95.src","preCode":"    public void testFindV2Templates() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean()));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        ComposableIndexTemplate it = new ComposableIndexTemplate(List.of(\"i*\"), null, List.of(\"ct\"), null, 1L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        ComposableIndexTemplate it2 = new ComposableIndexTemplate(List.of(\"in*\"), null, List.of(\"ct\"), 10L, 2L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", randomBoolean());\n\n        assertThat(result, equalTo(\"my-template2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":680,"status":"M"},{"authorDate":"2020-10-26 20:35:36","commitOrder":6,"curCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        ComposableIndexTemplate it = new ComposableIndexTemplate(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        ComposableIndexTemplate it2 = new ComposableIndexTemplate(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","date":"2020-10-26 20:35:36","endLine":712,"groupId":"102040","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testFindV2TemplatesForHiddenIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/99/9ace6007901d3543106881246ddf436f778d95.src","preCode":"    public void testFindV2TemplatesForHiddenIndex() throws Exception {\n        final MetadataIndexTemplateService service = getMetadataIndexTemplateService();\n        ClusterState state = ClusterState.EMPTY_STATE;\n        assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true));\n\n        ComponentTemplate ct = ComponentTemplateTests.randomInstance();\n        state = service.addComponentTemplate(state, true, \"ct\", ct);\n        ComposableIndexTemplate it = new ComposableIndexTemplate(List.of(\"i*\"), null, List.of(\"ct\"), 0L, 1L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template\", it);\n        ComposableIndexTemplate it2 = new ComposableIndexTemplate(List.of(\"*\"), null, List.of(\"ct\"), 10L, 2L, null, null);\n        state = service.addIndexTemplateV2(state, true, \"my-template2\", it2);\n\n        String result = MetadataIndexTemplateService.findV2Template(state.metadata(), \"index\", true);\n\n        assertThat(result, equalTo(\"my-template\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":697,"status":"M"}],"commitId":"dc855add492f3b447a2d3ea0a290458f9fc9207e","commitMessage":"@@@Add a template parameter to override auto_create_index value (#61858)\n\nCloses #20640.\n\nThis PR introduces a new parameter to v2 templates.  `allow_auto_create`. \nwhich allows templates to override the cluster setting `auto_create_index`.\nNotes:\n\n   * `AutoCreateIndex` now looks for a matching v2 template.  and if its\n     `allow_auto_create` setting is true.  it overrides the usual logic.\n   * `TransportBulkAction` previously used `AutoCreateIndex` to check\n     whether missing indices should be created. We now rely on\n     `AutoCreateAction`.  which was already differentiating between creating\n     indices and creating data streams.  I've updated `AutoCreateAction` to\n     use `AutoCreateIndex`. Data streams are also influenced by\n     `allow_auto_create`.  in that their default auto-create behaviour can\n     be disabled with this setting.\n   * Most of the Java file changes are due to introducing an extra\n     constructor parameter to `ComposableIndexTemplate`.\n   * I've added the new setting to various x-pack templates\n   * I added a YAML test to check that watches can be created even when\n     `auto_create_index` is `false`.","date":"2020-10-26 20:35:36","modifiedFileCount":"32","status":"M","submitter":"Rory Hunter"}]
