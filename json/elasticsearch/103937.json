[{"authorTime":"2018-09-28 01:00:37","codes":[{"authorDate":"2018-09-28 01:00:37","commitOrder":1,"curCode":"    void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0);\n        if (gotMillis != expectedMillis) {\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.printer().print(gotMillis) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","date":"2018-09-28 01:00:37","endLine":58,"groupId":"62224","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDateEquals","params":"(longgotMillis@Stringoriginal@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/61/448ce15ea264aef56c23572932699c4acec70e.src","preCode":"    void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0);\n        if (gotMillis != expectedMillis) {\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.printer().print(gotMillis) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JodaDateMathParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2018-09-28 01:00:37","commitOrder":1,"curCode":"    private void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0);\n        if (gotMillis != expectedMillis) {\n            ZonedDateTime zonedDateTime = ZonedDateTime.ofInstant(Instant.ofEpochMilli(gotMillis), ZoneOffset.UTC);\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.format(zonedDateTime) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","date":"2018-09-28 01:00:37","endLine":308,"groupId":"56104","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDateEquals","params":"(longgotMillis@Stringoriginal@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a5/43af0445db12fe7c2dbeace1a5db8cfb5f490c.src","preCode":"    private void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0);\n        if (gotMillis != expectedMillis) {\n            ZonedDateTime zonedDateTime = ZonedDateTime.ofInstant(Instant.ofEpochMilli(gotMillis), ZoneOffset.UTC);\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.format(zonedDateTime) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/time/JavaDateMathParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":297,"status":"B"}],"commitId":"a26cc1a2422c7d6eda7d0c204f7588d79fa597e6","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into index-lifecycle\n","date":"2018-09-28 01:00:37","modifiedFileCount":"338","status":"B","submitter":"Lee Hinman"},{"authorTime":"2018-09-28 01:00:37","codes":[{"authorDate":"2018-12-08 09:23:41","commitOrder":2,"curCode":"    void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0);\n        if (gotMillis != expectedMillis) {\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.formatMillis(gotMillis) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","date":"2018-12-08 09:23:41","endLine":58,"groupId":"48379","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDateEquals","params":"(longgotMillis@Stringoriginal@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4d/7635b03876c608e2ed139c473d23c44474acd8.src","preCode":"    void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0);\n        if (gotMillis != expectedMillis) {\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.printer().print(gotMillis) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JodaDateMathParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2018-09-28 01:00:37","commitOrder":2,"curCode":"    private void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0);\n        if (gotMillis != expectedMillis) {\n            ZonedDateTime zonedDateTime = ZonedDateTime.ofInstant(Instant.ofEpochMilli(gotMillis), ZoneOffset.UTC);\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.format(zonedDateTime) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","date":"2018-09-28 01:00:37","endLine":308,"groupId":"56104","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDateEquals","params":"(longgotMillis@Stringoriginal@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a5/43af0445db12fe7c2dbeace1a5db8cfb5f490c.src","preCode":"    private void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0);\n        if (gotMillis != expectedMillis) {\n            ZonedDateTime zonedDateTime = ZonedDateTime.ofInstant(Instant.ofEpochMilli(gotMillis), ZoneOffset.UTC);\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.format(zonedDateTime) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/time/JavaDateMathParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":297,"status":"N"}],"commitId":"a27f2efca555da798de961722c7b7ad61c3d0288","commitMessage":"@@@Core: Converge FormatDateTimeFormatter and DateFormatter apis (#36390)\n\nThis commit makes FormatDateTimeFormatter and DateFormatter apis close\nto each other.  so that the former can be removed in favor of the latter.\nThis PR does not change the uses of FormatDateTimeFormatter yet.  so that\nthat future change can be purely mechanical.\n","date":"2018-12-08 09:23:41","modifiedFileCount":"42","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2019-01-23 17:40:05","codes":[{"authorDate":"2019-01-23 17:40:05","commitOrder":3,"curCode":"    void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0).toEpochMilli();\n        if (gotMillis != expectedMillis) {\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.formatMillis(gotMillis) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","date":"2019-01-23 17:40:05","endLine":61,"groupId":"103937","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertDateEquals","params":"(longgotMillis@Stringoriginal@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/aea3f19ba3b3afdaca9484e9838b45f87812d3.src","preCode":"    void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0);\n        if (gotMillis != expectedMillis) {\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.formatMillis(gotMillis) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JodaDateMathParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2019-01-23 17:40:05","commitOrder":3,"curCode":"    private void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0).toEpochMilli();\n        if (gotMillis != expectedMillis) {\n            ZonedDateTime zonedDateTime = ZonedDateTime.ofInstant(Instant.ofEpochMilli(gotMillis), ZoneOffset.UTC);\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.format(zonedDateTime) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","date":"2019-01-23 17:40:05","endLine":302,"groupId":"103937","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertDateEquals","params":"(longgotMillis@Stringoriginal@Stringexpected)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2b/8d89bc68baeb7e6ce5756f75a07fcc85b81132.src","preCode":"    private void assertDateEquals(long gotMillis, String original, String expected) {\n        long expectedMillis = parser.parse(expected, () -> 0);\n        if (gotMillis != expectedMillis) {\n            ZonedDateTime zonedDateTime = ZonedDateTime.ofInstant(Instant.ofEpochMilli(gotMillis), ZoneOffset.UTC);\n            fail(\"Date math not equal\\n\" +\n                \"Original              : \" + original + \"\\n\" +\n                \"Parsed                : \" + formatter.format(zonedDateTime) + \"\\n\" +\n                \"Expected              : \" + expected + \"\\n\" +\n                \"Expected milliseconds : \" + expectedMillis + \"\\n\" +\n                \"Actual milliseconds   : \" + gotMillis + \"\\n\");\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/time/JavaDateMathParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":291,"status":"M"}],"commitId":"daa2ec8a605d385a65b9ab3e89d016b3fd0dffe2","commitMessage":"@@@Switch mapping/aggregations over to java time (#36363)\n\nThis commit moves the aggregation and mapping code from joda time to\njava time. This includes field mappers.  root object mappers.  aggregations with date\nhistograms.  query builders and a lot of changes within tests.\n\nThe cut-over to java time is a requirement so that we can support nanoseconds\nproperly in a future field mapper.\n\nRelates #27330","date":"2019-01-23 17:40:05","modifiedFileCount":"154","status":"M","submitter":"Alexander Reelsen"}]
