[{"authorTime":"2019-03-19 15:45:34","codes":[{"authorDate":"2019-03-19 15:45:34","commitOrder":1,"curCode":"    public void testNonFinalReduceTopLevelPipelineAggs() throws IOException  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms)));\n        List<SiblingPipelineAggregator> topLevelPipelineAggs = new ArrayList<>();\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        topLevelPipelineAggs.add((SiblingPipelineAggregator)maxBucketPipelineAggregationBuilder.create());\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, false);\n        InternalAggregations reducedAggs = InternalAggregations.reduce(aggs, topLevelPipelineAggs, reduceContext);\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","date":"2019-03-19 15:45:34","endLine":71,"groupId":"11528","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/00/c8379b8b2bc543ca075bd06992cc3eef71bfbd.src","preCode":"    public void testNonFinalReduceTopLevelPipelineAggs() throws IOException  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms)));\n        List<SiblingPipelineAggregator> topLevelPipelineAggs = new ArrayList<>();\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        topLevelPipelineAggs.add((SiblingPipelineAggregator)maxBucketPipelineAggregationBuilder.create());\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, false);\n        InternalAggregations reducedAggs = InternalAggregations.reduce(aggs, topLevelPipelineAggs, reduceContext);\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2019-03-19 15:45:34","commitOrder":1,"curCode":"    public void testFinalReduceTopLevelPipelineAggs() throws IOException  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        SiblingPipelineAggregator siblingPipelineAggregator = (SiblingPipelineAggregator) maxBucketPipelineAggregationBuilder.create();\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, true);\n        final InternalAggregations reducedAggs;\n        if (randomBoolean()) {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), reduceContext);\n        } else {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms));\n            List<SiblingPipelineAggregator> topLevelPipelineAggs = Collections.singletonList(siblingPipelineAggregator);\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), topLevelPipelineAggs, reduceContext);\n        }\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","date":"2019-03-19 15:45:34","endLine":92,"groupId":"68951","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/00/c8379b8b2bc543ca075bd06992cc3eef71bfbd.src","preCode":"    public void testFinalReduceTopLevelPipelineAggs() throws IOException  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        SiblingPipelineAggregator siblingPipelineAggregator = (SiblingPipelineAggregator) maxBucketPipelineAggregationBuilder.create();\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, true);\n        final InternalAggregations reducedAggs;\n        if (randomBoolean()) {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), reduceContext);\n        } else {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms));\n            List<SiblingPipelineAggregator> topLevelPipelineAggs = Collections.singletonList(siblingPipelineAggregator);\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), topLevelPipelineAggs, reduceContext);\n        }\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"3c8970cccfca4432c24aa25e222a3f2ee427bdc0","commitMessage":"@@@Serialize top-level pipeline aggs as part of InternalAggregations (#40177)\n\nWe currently convert pipeline aggregators to their corresponding\nInternalAggregation instance as part of the final reduction phase.\nThey arrive to the coordinating node as part of QuerySearchResult\nobjects fom the shards and.  despite we may incrementally reduce\naggs (hence we may have some non-final reduce and the final\none later) all the reduction phases happen on the same node.\n\nWith CCS minimizing roundtrips though.  each cluster performs its\nown non-final reduction.  and then serializes the results back to\nthe CCS coordinating node which will perform the final coordination.\nThis breaks the assumptions made up until now around reductions\nhappening all on the same node.\n\nWith #40101 we have made sure that top-level pipeline aggs are not\nreduced as part of the non-final reduction. The next step is to make\nsure that they don't get lost.  meaning that each coordinating node\nneeds to send them back to the CCS coordinating node as part of\nthe top-level `InternalAggregations` object.\n\nCloses #40059","date":"2019-03-19 15:45:34","modifiedFileCount":"3","status":"B","submitter":"Luca Cavanna"},{"authorTime":"2019-03-20 23:14:08","codes":[{"authorDate":"2019-03-20 23:14:08","commitOrder":2,"curCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms)));\n        List<SiblingPipelineAggregator> topLevelPipelineAggs = new ArrayList<>();\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        topLevelPipelineAggs.add((SiblingPipelineAggregator)maxBucketPipelineAggregationBuilder.create());\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, false);\n        InternalAggregations reducedAggs = InternalAggregations.reduce(aggs, topLevelPipelineAggs, reduceContext);\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","date":"2019-03-20 23:14:08","endLine":67,"groupId":"11528","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/81/626459db4f22f893bebbdc9a7e230aef2b0a54.src","preCode":"    public void testNonFinalReduceTopLevelPipelineAggs() throws IOException  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms)));\n        List<SiblingPipelineAggregator> topLevelPipelineAggs = new ArrayList<>();\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        topLevelPipelineAggs.add((SiblingPipelineAggregator)maxBucketPipelineAggregationBuilder.create());\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, false);\n        InternalAggregations reducedAggs = InternalAggregations.reduce(aggs, topLevelPipelineAggs, reduceContext);\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2019-03-20 23:14:08","commitOrder":2,"curCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        SiblingPipelineAggregator siblingPipelineAggregator = (SiblingPipelineAggregator) maxBucketPipelineAggregationBuilder.create();\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, true);\n        final InternalAggregations reducedAggs;\n        if (randomBoolean()) {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), reduceContext);\n        } else {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms));\n            List<SiblingPipelineAggregator> topLevelPipelineAggs = Collections.singletonList(siblingPipelineAggregator);\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), topLevelPipelineAggs, reduceContext);\n        }\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","date":"2019-03-20 23:14:08","endLine":88,"groupId":"68951","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/81/626459db4f22f893bebbdc9a7e230aef2b0a54.src","preCode":"    public void testFinalReduceTopLevelPipelineAggs() throws IOException  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        SiblingPipelineAggregator siblingPipelineAggregator = (SiblingPipelineAggregator) maxBucketPipelineAggregationBuilder.create();\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, true);\n        final InternalAggregations reducedAggs;\n        if (randomBoolean()) {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), reduceContext);\n        } else {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms));\n            List<SiblingPipelineAggregator> topLevelPipelineAggs = Collections.singletonList(siblingPipelineAggregator);\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), topLevelPipelineAggs, reduceContext);\n        }\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"94403c44f841755cf5d2d70012718c5df4385c5d","commitMessage":"@@@Remove throws IOException from PipelineAggregationBuilder#create (#40222)\n\nIOException are never thrown in any of the existing pipeline aggregation\nbuilders. Removing the throws IOException from the create method allows\nto remove it also from a couple of other methods which ends up simplifying\n AggregationPhase (one less catch).","date":"2019-03-20 23:14:08","modifiedFileCount":"21","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2019-03-28 20:04:50","codes":[{"authorDate":"2019-03-28 20:04:50","commitOrder":3,"curCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<SiblingPipelineAggregator> topLevelPipelineAggs = new ArrayList<>();\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        topLevelPipelineAggs.add((SiblingPipelineAggregator)maxBucketPipelineAggregationBuilder.create());\n        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms),\n            topLevelPipelineAggs));\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, false);\n        InternalAggregations reducedAggs = InternalAggregations.reduce(aggs, reduceContext);\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","date":"2019-03-28 20:04:50","endLine":68,"groupId":"25394","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/244ff7a320b250d992a3171014299450a09445.src","preCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms)));\n        List<SiblingPipelineAggregator> topLevelPipelineAggs = new ArrayList<>();\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        topLevelPipelineAggs.add((SiblingPipelineAggregator)maxBucketPipelineAggregationBuilder.create());\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, false);\n        InternalAggregations reducedAggs = InternalAggregations.reduce(aggs, topLevelPipelineAggs, reduceContext);\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2019-03-28 20:04:50","commitOrder":3,"curCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        SiblingPipelineAggregator siblingPipelineAggregator = (SiblingPipelineAggregator) maxBucketPipelineAggregationBuilder.create();\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, true);\n        final InternalAggregations reducedAggs;\n        if (randomBoolean()) {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), reduceContext);\n        } else {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), reduceContext);\n        }\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","date":"2019-03-28 20:04:50","endLine":89,"groupId":"68951","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/244ff7a320b250d992a3171014299450a09445.src","preCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        SiblingPipelineAggregator siblingPipelineAggregator = (SiblingPipelineAggregator) maxBucketPipelineAggregationBuilder.create();\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, true);\n        final InternalAggregations reducedAggs;\n        if (randomBoolean()) {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), reduceContext);\n        } else {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms));\n            List<SiblingPipelineAggregator> topLevelPipelineAggs = Collections.singletonList(siblingPipelineAggregator);\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), topLevelPipelineAggs, reduceContext);\n        }\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"b4d88aad3a40042f1c1bad6a8f1a1ec9512e0afc","commitMessage":"@@@Move top-level pipeline aggs out of QuerySearchResult (#40319)\n\nAs part of #40177 we have added top-level pipeline aggs to\n`InternalAggregations`. Given that `QuerySearchResult` holds an\n`InternalAggregations` instance.  there is no need to keep on setting\ntop-level pipeline aggs separately. Top-level pipeline aggs can then\nalways be transported through `InternalAggregations`. Such change is\nmade in a backwards compatible manner.","date":"2019-03-28 20:04:50","modifiedFileCount":"5","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2019-12-06 05:11:27","codes":[{"authorDate":"2019-12-06 05:11:27","commitOrder":4,"curCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<SiblingPipelineAggregator> topLevelPipelineAggs = new ArrayList<>();\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        topLevelPipelineAggs.add((SiblingPipelineAggregator)maxBucketPipelineAggregationBuilder.create());\n        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms),\n            topLevelPipelineAggs));\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, false);\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, reduceContext);\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","date":"2019-12-06 05:11:27","endLine":68,"groupId":"25394","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/72/36b354ef92b58c90e923e782c0e0e3eb77dfee.src","preCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<SiblingPipelineAggregator> topLevelPipelineAggs = new ArrayList<>();\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        topLevelPipelineAggs.add((SiblingPipelineAggregator)maxBucketPipelineAggregationBuilder.create());\n        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms),\n            topLevelPipelineAggs));\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, false);\n        InternalAggregations reducedAggs = InternalAggregations.reduce(aggs, reduceContext);\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2019-12-06 05:11:27","commitOrder":4,"curCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        SiblingPipelineAggregator siblingPipelineAggregator = (SiblingPipelineAggregator) maxBucketPipelineAggregationBuilder.create();\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, true);\n        final InternalAggregations reducedAggs;\n        if (randomBoolean()) {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs), reduceContext);\n        } else {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs), reduceContext);\n        }\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","date":"2019-12-06 05:11:27","endLine":89,"groupId":"68951","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/72/36b354ef92b58c90e923e782c0e0e3eb77dfee.src","preCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        SiblingPipelineAggregator siblingPipelineAggregator = (SiblingPipelineAggregator) maxBucketPipelineAggregationBuilder.create();\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, true);\n        final InternalAggregations reducedAggs;\n        if (randomBoolean()) {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), reduceContext);\n        } else {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.reduce(Collections.singletonList(aggs), reduceContext);\n        }\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"9c34ff9d520b1fb2e2d7e16b88e73a12e704a7e2","commitMessage":"@@@Decouple pipeline reductions from final agg reduction (#45796)\n\nHistorically only two things happened in the final reduction:\nempty buckets were filled.  and pipeline aggs were reduced (since it\nwas the final reduction.  this was safe).  Usage of the final reduction\nis growing however.  Auto-date-histo might need to perform\nmany reductions on final-reduce to merge down buckets.  CCS\nmay need to side-step the final reduction if sending to a\ndifferent cluster.  etc\n\nHaving pipelines generate their output in the final reduce was\nconvenient.  but is becoming increasingly difficult to manage\nas the rest of the agg framework advances.\n\nThis commit decouples pipeline aggs from the final reduction by\nintroducing a new \"top level\" reduce.  which should be called\nat the beginning of the reduce cycle (e.g. from the SearchPhaseController).\nThis will only reduce pipeline aggs on the final reduce after\nthe non-pipeline agg tree has been fully reduced.\n\nBy separating pipeline reduction into their own set of methods. \naggregations are free to use the final reduction for whatever\npurpose without worrying about generating pipeline results\nwhich are non-reducible\n","date":"2019-12-06 05:11:27","modifiedFileCount":"72","status":"M","submitter":"Zachary Tong"},{"authorTime":"2020-03-17 02:51:54","codes":[{"authorDate":"2020-03-17 02:51:54","commitOrder":5,"curCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<SiblingPipelineAggregator> topLevelPipelineAggs = new ArrayList<>();\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        topLevelPipelineAggs.add((SiblingPipelineAggregator)maxBucketPipelineAggregationBuilder.create());\n        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms),\n            topLevelPipelineAggs));\n        InternalAggregation.ReduceContext reduceContext = InternalAggregationTestCase.emptyReduceContextBuilder().forPartialReduction();\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, reduceContext);\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","date":"2020-03-17 02:51:54","endLine":76,"groupId":"25394","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0f/e02c5e89fd96ae66001f29e46df7d5b7393f68.src","preCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<SiblingPipelineAggregator> topLevelPipelineAggs = new ArrayList<>();\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        topLevelPipelineAggs.add((SiblingPipelineAggregator)maxBucketPipelineAggregationBuilder.create());\n        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms),\n            topLevelPipelineAggs));\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, false);\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, reduceContext);\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2020-03-17 02:51:54","commitOrder":5,"curCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        SiblingPipelineAggregator siblingPipelineAggregator = (SiblingPipelineAggregator) maxBucketPipelineAggregationBuilder.create();\n        InternalAggregation.ReduceContext reduceContext = InternalAggregation.ReduceContext.forFinalReduction(\n                BigArrays.NON_RECYCLING_INSTANCE, null, b -> {}, new PipelineTree(emptyMap(), singletonList(siblingPipelineAggregator)));\n        InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms), emptyList());\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs), reduceContext);\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","date":"2020-03-17 02:51:54","endLine":90,"groupId":"0","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0f/e02c5e89fd96ae66001f29e46df7d5b7393f68.src","preCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        SiblingPipelineAggregator siblingPipelineAggregator = (SiblingPipelineAggregator) maxBucketPipelineAggregationBuilder.create();\n        InternalAggregation.ReduceContext reduceContext = new InternalAggregation.ReduceContext(null, null, true);\n        final InternalAggregations reducedAggs;\n        if (randomBoolean()) {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs), reduceContext);\n        } else {\n            InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms),\n                Collections.singletonList(siblingPipelineAggregator));\n            reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs), reduceContext);\n        }\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"4d81edb6257732a73adc3e5bc5157ad01d1a42c4","commitMessage":"@@@Stop using round-tripped PipelineAggregators (#53423)\n\nThis begins to clean up how `PipelineAggregator`s and executed.\nPreviously.  we would create the `PipelineAggregator`s on the data nodes\nand embed them in the aggregation tree. When it came time to execute the\npipeline aggregation we'd use the `PipelineAggregator`s that were on the\nfirst shard's results. This is inefficient because:\n1. The data node needs to make the `PipelineAggregator` only to\n   serialize it and then throw it away.\n2. The coordinating node needs to deserialize all of the\n   `PipelineAggregator`s even though it only needs one of them.\n3. You end up with many `PipelineAggregator` instances when you only\n   really *need* one per pipeline.\n4. `PipelineAggregator` needs to implement serialization.\n\nThis begins to undo these by building the `PipelineAggregator`s directly\non the coordinating node and using those instead of the\n`PipelineAggregator`s in the aggregtion tree. In a follow up change\nwe'll stop serializing the `PipelineAggregator`s to node versions that\nsupport this behavior. And.  one day.  we'll be able to remove\n`PipelineAggregator` from the aggregation result tree entirely.\n\nImportantly.  this doesn't change how pipeline aggregations are declared\nor parsed or requested. They are still part of the `AggregationBuilder`\ntree because *that* makes sense.\n","date":"2020-03-17 02:51:54","modifiedFileCount":"35","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-03-25 20:52:20","codes":[{"authorDate":"2020-03-25 20:52:20","commitOrder":6,"curCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = singletonList(new InternalAggregations(Collections.singletonList(terms)));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, maxBucketReduceContext().forPartialReduction());\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","date":"2020-03-25 20:52:20","endLine":70,"groupId":"11528","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e1/dacc98789bdf8c0d5212b91c019ffae1b3086d.src","preCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<SiblingPipelineAggregator> topLevelPipelineAggs = new ArrayList<>();\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        topLevelPipelineAggs.add((SiblingPipelineAggregator)maxBucketPipelineAggregationBuilder.create());\n        List<InternalAggregations> aggs = Collections.singletonList(new InternalAggregations(Collections.singletonList(terms),\n            topLevelPipelineAggs));\n        InternalAggregation.ReduceContext reduceContext = InternalAggregationTestCase.emptyReduceContextBuilder().forPartialReduction();\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, reduceContext);\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-03-25 20:52:20","commitOrder":6,"curCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs),\n                maxBucketReduceContext().forFinalReduction());\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","date":"2020-03-25 20:52:20","endLine":81,"groupId":"20730","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e1/dacc98789bdf8c0d5212b91c019ffae1b3086d.src","preCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        MaxBucketPipelineAggregationBuilder maxBucketPipelineAggregationBuilder = new MaxBucketPipelineAggregationBuilder(\"test\", \"test\");\n        SiblingPipelineAggregator siblingPipelineAggregator = (SiblingPipelineAggregator) maxBucketPipelineAggregationBuilder.create();\n        InternalAggregation.ReduceContext reduceContext = InternalAggregation.ReduceContext.forFinalReduction(\n                BigArrays.NON_RECYCLING_INSTANCE, null, b -> {}, new PipelineTree(emptyMap(), singletonList(siblingPipelineAggregator)));\n        InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms), emptyList());\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs), reduceContext);\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"e8c54c73dbee2877637c8dd076d82fb5a94e1b47","commitMessage":"@@@Save a little space in agg tree (#53730)\n\nThis drop the \"top level\" pipeline aggregators from the aggregation\nresult tree which should save a little memory and a few serialization\nbytes. Perhaps more imporantly.  this provides a mechanism by which we\ncan remove *all* pipelines from the aggregation result tree. This will\nsave quite a bit of space when pipelines are deep in the tree.\n\nSadly.  doing this isn't simple because of backwards compatibility. Nodes\nbefore 7.7.0 *need* those pipelines. We provide them by setting passing\na `Supplier<PipelineTree>` into the root of the aggregation tree that we\nonly call if we need to serialize to a version before 7.7.0.\n\nThis solution works for cross cluster search because we always reduce\nthe aggregations in each remote cluster and then forward them back to\nthe coordinating node. Its quite possible that the coordinating node\nneeds the pipeline (say it is version 7.1.0) and the gateway node in the\nremote cluster doesn't (version 7.7.0). In that case the data nodes\nwon't send the pipeline aggregations back to the gateway node.\nCritically.  the gateway node *will* send the pipeline aggregations back\nto the coordinating node. This is all managed with that\n`Supplier<PipelineTree>`.  but *how* it is managed is a bit tricky.\n\n","date":"2020-03-25 20:52:20","modifiedFileCount":"13","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-04-02 22:39:30","codes":[{"authorDate":"2020-04-02 22:39:30","commitOrder":7,"curCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = singletonList(new InternalAggregations(Collections.singletonList(terms)));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, maxBucketReduceContext().forPartialReduction());\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","date":"2020-04-02 22:39:30","endLine":70,"groupId":"11528","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e9/8fe4a6249b8776de09ce77dff65bc8957bf003.src","preCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = singletonList(new InternalAggregations(Collections.singletonList(terms)));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, maxBucketReduceContext().forPartialReduction());\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-04-02 22:39:30","commitOrder":7,"curCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs),\n                maxBucketReduceContext().forFinalReduction());\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","date":"2020-04-02 22:39:30","endLine":81,"groupId":"20730","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e9/8fe4a6249b8776de09ce77dff65bc8957bf003.src","preCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyList(), Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs),\n                maxBucketReduceContext().forFinalReduction());\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"dbe9b48b830c4aea5c59abac322e77ca5f98a8af","commitMessage":"@@@Begin to drop pipeline aggs from the result tree (#54311)\n\nRemoves pipeline aggregations from the aggregation result tree as they\nare no longer used. This stops us from building the pipeline aggregators\nat all on data nodes except for backwards compatibility serialization.\nThis will save a tiny bit of space in the aggregation tree which is\nlovely.  but the biggest benefit is that it is a step towards simplifying\npipeline aggregators.\n\nThis only does about half of the work to remove the pipeline aggs from\nthe tree. Removing all of it would.  well.  double the size of the change\nand make it harder to review.\n","date":"2020-04-02 22:39:30","modifiedFileCount":"158","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-04-15 03:35:54","codes":[{"authorDate":"2020-04-15 03:35:54","commitOrder":8,"curCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = singletonList(new InternalAggregations(Collections.singletonList(terms)));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, maxBucketReduceContext().forPartialReduction());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","date":"2020-04-15 03:35:54","endLine":65,"groupId":"11528","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/e99a9ed1d9acab8fab79757a4f9907be86a1fc.src","preCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = singletonList(new InternalAggregations(Collections.singletonList(terms)));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, maxBucketReduceContext().forPartialReduction());\n        assertEquals(1, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-04-15 03:35:54","commitOrder":8,"curCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs),\n                maxBucketReduceContext().forFinalReduction());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","date":"2020-04-15 03:35:54","endLine":75,"groupId":"20730","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/e99a9ed1d9acab8fab79757a4f9907be86a1fc.src","preCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs),\n                maxBucketReduceContext().forFinalReduction());\n        assertEquals(0, reducedAggs.getTopLevelPipelineAggregators().size());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"af11ec59e019816819bde53ebb244a15e09a28ca","commitMessage":"@@@Remove serialization from pipeline aggregator (#55026)\n\n`master` doesn't need to talk to Elasticsearch versions before 7.8.0 so\n`PipelineAggregator` doesn't need to be writable *at all* in master. New\npipeline aggregations don't need to worry about serializing\n`PipelineAggregator` at all so this drops all of it.\n\nFor the most part we don't need to worry about serialization of\n`PipelineAggregator` at all any more. When backporting a change to an\naggregator that is serialized to previous versions of Elasticsearch it\n*should* be fairly simple to pick a value to serialize. And the compiler\n*should* tell you that you need to do it. In many cases you this'll be a\nnoop. *Hopefully* all cases.\n\nCloses #53742","date":"2020-04-15 03:35:54","modifiedFileCount":"30","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-07-02 18:25:49","codes":[{"authorDate":"2020-07-02 18:25:49","commitOrder":9,"curCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = singletonList(InternalAggregations.from(Collections.singletonList(terms)));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, maxBucketReduceContext().forPartialReduction());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","date":"2020-07-02 18:25:49","endLine":65,"groupId":"11528","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a1/2fdc79ffe4e24ba8ef43b5e42c1f65fcde4357.src","preCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = singletonList(new InternalAggregations(Collections.singletonList(terms)));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, maxBucketReduceContext().forPartialReduction());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-07-02 18:25:49","commitOrder":9,"curCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        InternalAggregations aggs = InternalAggregations.from(Collections.singletonList(terms));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs),\n                maxBucketReduceContext().forFinalReduction());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","date":"2020-07-02 18:25:49","endLine":75,"groupId":"20730","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a1/2fdc79ffe4e24ba8ef43b5e42c1f65fcde4357.src","preCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        InternalAggregations aggs = new InternalAggregations(Collections.singletonList(terms));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs),\n                maxBucketReduceContext().forFinalReduction());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"59fc3d74d58c390828267569022ac177e77ffbd1","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-02 18:25:49","modifiedFileCount":"724","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-09-04 21:08:32","codes":[{"authorDate":"2020-09-04 21:08:32","commitOrder":10,"curCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true), BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = singletonList(InternalAggregations.from(Collections.singletonList(terms)));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, maxBucketReduceContext().forPartialReduction());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","date":"2020-09-04 21:08:32","endLine":64,"groupId":"11528","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ae/44fda8a21c4daa168ff08c7d75ce3c21c051d4.src","preCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = singletonList(InternalAggregations.from(Collections.singletonList(terms)));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, maxBucketReduceContext().forPartialReduction());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2020-09-04 21:08:32","commitOrder":10,"curCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true), BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        InternalAggregations aggs = InternalAggregations.from(Collections.singletonList(terms));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs),\n                maxBucketReduceContext().forFinalReduction());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","date":"2020-09-04 21:08:32","endLine":74,"groupId":"20730","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ae/44fda8a21c4daa168ff08c7d75ce3c21c051d4.src","preCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        InternalAggregations aggs = InternalAggregations.from(Collections.singletonList(terms));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs),\n                maxBucketReduceContext().forFinalReduction());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"49ae2bb56a6bd865effeaaab6ee2940cae997599","commitMessage":"@@@Improve reduction of terms aggregations (#61779)\n\n* Improve reduction of terms aggregations\n\nToday.  the terms aggregation reduces multiple aggregations at once using a map\nto group same buckets together. This operation can be costly since it requires\nto lookup every bucket in a global map with no particular order.\nThis commit changes how term buckets are sorted by shards and partial reduces in\norder to be able to reduce results using a merge-sort strategy.\nFor bwc.  results are merged with the legacy code if any of the aggregations use\na different sort (if it was returned by a node in prior versions).\n\nRelates #51857","date":"2020-09-04 21:08:32","modifiedFileCount":"23","status":"M","submitter":"Jim Ferenczi"},{"authorTime":"2021-07-23 02:18:24","codes":[{"authorDate":"2021-07-23 02:18:24","commitOrder":11,"curCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true), BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0L);\n        List<InternalAggregations> aggs = singletonList(InternalAggregations.from(Collections.singletonList(terms)));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, maxBucketReduceContext().forPartialReduction());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","date":"2021-07-23 02:18:24","endLine":56,"groupId":"105576","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4d/19e76d4a6051db6548148c280da8c1109c3110.src","preCode":"    public void testNonFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true), BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n        List<InternalAggregations> aggs = singletonList(InternalAggregations.from(Collections.singletonList(terms)));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(aggs, maxBucketReduceContext().forPartialReduction());\n        assertEquals(1, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2021-07-23 02:18:24","commitOrder":11,"curCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true), BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0L);\n\n        InternalAggregations aggs = InternalAggregations.from(Collections.singletonList(terms));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs),\n                maxBucketReduceContext().forFinalReduction());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","date":"2021-07-23 02:18:24","endLine":66,"groupId":"105576","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"testFinalReduceTopLevelPipelineAggs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4d/19e76d4a6051db6548148c280da8c1109c3110.src","preCode":"    public void testFinalReduceTopLevelPipelineAggs()  {\n        InternalAggregation terms = new StringTerms(\"name\", BucketOrder.key(true), BucketOrder.key(true),\n            10, 1, Collections.emptyMap(), DocValueFormat.RAW, 25, false, 10, Collections.emptyList(), 0);\n\n        InternalAggregations aggs = InternalAggregations.from(Collections.singletonList(terms));\n        InternalAggregations reducedAggs = InternalAggregations.topLevelReduce(Collections.singletonList(aggs),\n                maxBucketReduceContext().forFinalReduction());\n        assertEquals(2, reducedAggs.aggregations.size());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/InternalAggregationsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"1db17ada9595f598b9a0385cdcc49710834429ac","commitMessage":"@@@Fix wrong error upper bound when performing incremental reductions (#43874)\n\nWhen performing incremental reductions.  0 value of docCountError may mean that \nthe error was not previously calculated.  or that the error was indeed previously \ncalculated and its value was 0. We end up rejecting true values set to 0 this \nway. This may lead to wrong upper bound of error in result. To fix it.  this PR \nmakes docCountError nullable. null values mean that error was not calculated \nyet.\n\nFixes #40005\n\nCo-authored-by: Igor Motov <igor@motovs.org>\nCo-authored-by: Elastic Machine <elasticmachine@users.noreply.github.com>","date":"2021-07-23 02:18:24","modifiedFileCount":"21","status":"M","submitter":"Nikita Glashenko"}]
