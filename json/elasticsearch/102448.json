[{"authorTime":"2020-10-03 03:28:44","codes":[{"authorDate":"2020-10-03 03:28:44","commitOrder":1,"curCode":"    public void testUpdateSnapshotToSuccess() throws Exception {\n        final String repoName = \"test-repo\";\n        final Snapshot sn1 = snapshot(repoName, \"snapshot-1\");\n        final String indexName1 = \"index-1\";\n        final String dataNodeId = uuid();\n        final IndexId indexId1 = indexId(indexName1);\n        final ShardId shardId1 = new ShardId(index(indexName1), 0);\n        final SnapshotsInProgress.Entry snapshotSingleShard =\n                snapshotEntry(sn1, Collections.singletonList(indexId1), shardsMap(shardId1, initShardStatus(dataNodeId)));\n\n        assertThat(snapshotSingleShard.state(), is(SnapshotsInProgress.State.STARTED));\n\n        final SnapshotsService.ShardSnapshotUpdate completeShard = successUpdate(sn1, shardId1, dataNodeId);\n        final ClusterState updatedClusterState = applyUpdates(stateWithSnapshots(snapshotSingleShard), completeShard);\n        final SnapshotsInProgress snapshotsInProgress = updatedClusterState.custom(SnapshotsInProgress.TYPE);\n        final SnapshotsInProgress.Entry updatedSnapshot1 = snapshotsInProgress.entries().get(0);\n        assertThat(updatedSnapshot1.state(), is(SnapshotsInProgress.State.SUCCESS));\n        assertIsNoop(updatedClusterState, completeShard);\n    }\n","date":"2020-10-03 03:28:44","endLine":94,"groupId":"6237","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateSnapshotToSuccess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8e/15d6d5a1e48938509cc2ec382e1ba276b52a0b.src","preCode":"    public void testUpdateSnapshotToSuccess() throws Exception {\n        final String repoName = \"test-repo\";\n        final Snapshot sn1 = snapshot(repoName, \"snapshot-1\");\n        final String indexName1 = \"index-1\";\n        final String dataNodeId = uuid();\n        final IndexId indexId1 = indexId(indexName1);\n        final ShardId shardId1 = new ShardId(index(indexName1), 0);\n        final SnapshotsInProgress.Entry snapshotSingleShard =\n                snapshotEntry(sn1, Collections.singletonList(indexId1), shardsMap(shardId1, initShardStatus(dataNodeId)));\n\n        assertThat(snapshotSingleShard.state(), is(SnapshotsInProgress.State.STARTED));\n\n        final SnapshotsService.ShardSnapshotUpdate completeShard = successUpdate(sn1, shardId1, dataNodeId);\n        final ClusterState updatedClusterState = applyUpdates(stateWithSnapshots(snapshotSingleShard), completeShard);\n        final SnapshotsInProgress snapshotsInProgress = updatedClusterState.custom(SnapshotsInProgress.TYPE);\n        final SnapshotsInProgress.Entry updatedSnapshot1 = snapshotsInProgress.entries().get(0);\n        assertThat(updatedSnapshot1.state(), is(SnapshotsInProgress.State.SUCCESS));\n        assertIsNoop(updatedClusterState, completeShard);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotsServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"},{"authorDate":"2020-10-03 03:28:44","commitOrder":1,"curCode":"    public void testUpdateSnapshotMultipleShards() throws Exception {\n        final String repoName = \"test-repo\";\n        final Snapshot sn1 = snapshot(repoName, \"snapshot-1\");\n        final String indexName1 = \"index-1\";\n        final String dataNodeId = uuid();\n        final IndexId indexId1 = indexId(indexName1);\n        final Index routingIndex1 = index(indexName1);\n        final ShardId shardId1 = new ShardId(routingIndex1, 0);\n        final ShardId shardId2 = new ShardId(routingIndex1, 1);\n        final SnapshotsInProgress.ShardSnapshotStatus shardInitStatus = initShardStatus(dataNodeId);\n        final SnapshotsInProgress.Entry snapshotSingleShard = snapshotEntry(sn1, Collections.singletonList(indexId1),\n                ImmutableOpenMap.builder(shardsMap(shardId1, shardInitStatus)).fPut(shardId2, shardInitStatus).build());\n\n        assertThat(snapshotSingleShard.state(), is(SnapshotsInProgress.State.STARTED));\n\n        final SnapshotsService.ShardSnapshotUpdate completeShard = successUpdate(sn1, shardId1, dataNodeId);\n        final ClusterState updatedClusterState = applyUpdates(stateWithSnapshots(snapshotSingleShard), completeShard);\n        final SnapshotsInProgress snapshotsInProgress = updatedClusterState.custom(SnapshotsInProgress.TYPE);\n        final SnapshotsInProgress.Entry updatedSnapshot1 = snapshotsInProgress.entries().get(0);\n        assertThat(updatedSnapshot1.state(), is(SnapshotsInProgress.State.STARTED));\n        assertIsNoop(updatedClusterState, completeShard);\n    }\n","date":"2020-10-03 03:28:44","endLine":117,"groupId":"6238","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSnapshotMultipleShards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8e/15d6d5a1e48938509cc2ec382e1ba276b52a0b.src","preCode":"    public void testUpdateSnapshotMultipleShards() throws Exception {\n        final String repoName = \"test-repo\";\n        final Snapshot sn1 = snapshot(repoName, \"snapshot-1\");\n        final String indexName1 = \"index-1\";\n        final String dataNodeId = uuid();\n        final IndexId indexId1 = indexId(indexName1);\n        final Index routingIndex1 = index(indexName1);\n        final ShardId shardId1 = new ShardId(routingIndex1, 0);\n        final ShardId shardId2 = new ShardId(routingIndex1, 1);\n        final SnapshotsInProgress.ShardSnapshotStatus shardInitStatus = initShardStatus(dataNodeId);\n        final SnapshotsInProgress.Entry snapshotSingleShard = snapshotEntry(sn1, Collections.singletonList(indexId1),\n                ImmutableOpenMap.builder(shardsMap(shardId1, shardInitStatus)).fPut(shardId2, shardInitStatus).build());\n\n        assertThat(snapshotSingleShard.state(), is(SnapshotsInProgress.State.STARTED));\n\n        final SnapshotsService.ShardSnapshotUpdate completeShard = successUpdate(sn1, shardId1, dataNodeId);\n        final ClusterState updatedClusterState = applyUpdates(stateWithSnapshots(snapshotSingleShard), completeShard);\n        final SnapshotsInProgress snapshotsInProgress = updatedClusterState.custom(SnapshotsInProgress.TYPE);\n        final SnapshotsInProgress.Entry updatedSnapshot1 = snapshotsInProgress.entries().get(0);\n        assertThat(updatedSnapshot1.state(), is(SnapshotsInProgress.State.STARTED));\n        assertIsNoop(updatedClusterState, completeShard);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotsServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"}],"commitId":"f7f239d39aa29ebdbaa05552f42a280ece8c826e","commitMessage":"@@@Clone Snapshot API (#61839)\n\nAdds clone snapshot API to clone part of a snapshot into a new snapshot.","date":"2020-10-03 03:28:44","modifiedFileCount":"10","status":"B","submitter":"Armin Braun"},{"authorTime":"2021-04-27 19:31:29","codes":[{"authorDate":"2021-04-27 19:31:29","commitOrder":2,"curCode":"    public void testUpdateSnapshotToSuccess() throws Exception {\n        final String repoName = \"test-repo\";\n        final Snapshot sn1 = snapshot(repoName, \"snapshot-1\");\n        final String indexName1 = \"index-1\";\n        final String dataNodeId = uuid();\n        final IndexId indexId1 = indexId(indexName1);\n        final ShardId shardId1 = new ShardId(index(indexName1), 0);\n        final SnapshotsInProgress.Entry snapshotSingleShard =\n            snapshotEntry(sn1, Collections.singletonMap(indexId1.getName(), indexId1), shardsMap(shardId1, initShardStatus(dataNodeId)));\n\n        assertThat(snapshotSingleShard.state(), is(SnapshotsInProgress.State.STARTED));\n\n        final SnapshotsService.ShardSnapshotUpdate completeShard = successUpdate(sn1, shardId1, dataNodeId);\n        final ClusterState updatedClusterState = applyUpdates(stateWithSnapshots(snapshotSingleShard), completeShard);\n        final SnapshotsInProgress snapshotsInProgress = updatedClusterState.custom(SnapshotsInProgress.TYPE);\n        final SnapshotsInProgress.Entry updatedSnapshot1 = snapshotsInProgress.entries().get(0);\n        assertThat(updatedSnapshot1.state(), is(SnapshotsInProgress.State.SUCCESS));\n        assertIsNoop(updatedClusterState, completeShard);\n    }\n","date":"2021-04-27 19:31:29","endLine":87,"groupId":"102448","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateSnapshotToSuccess","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f7/f35b8d8d86db9f174db687523a31901de9d390.src","preCode":"    public void testUpdateSnapshotToSuccess() throws Exception {\n        final String repoName = \"test-repo\";\n        final Snapshot sn1 = snapshot(repoName, \"snapshot-1\");\n        final String indexName1 = \"index-1\";\n        final String dataNodeId = uuid();\n        final IndexId indexId1 = indexId(indexName1);\n        final ShardId shardId1 = new ShardId(index(indexName1), 0);\n        final SnapshotsInProgress.Entry snapshotSingleShard =\n                snapshotEntry(sn1, Collections.singletonList(indexId1), shardsMap(shardId1, initShardStatus(dataNodeId)));\n\n        assertThat(snapshotSingleShard.state(), is(SnapshotsInProgress.State.STARTED));\n\n        final SnapshotsService.ShardSnapshotUpdate completeShard = successUpdate(sn1, shardId1, dataNodeId);\n        final ClusterState updatedClusterState = applyUpdates(stateWithSnapshots(snapshotSingleShard), completeShard);\n        final SnapshotsInProgress snapshotsInProgress = updatedClusterState.custom(SnapshotsInProgress.TYPE);\n        final SnapshotsInProgress.Entry updatedSnapshot1 = snapshotsInProgress.entries().get(0);\n        assertThat(updatedSnapshot1.state(), is(SnapshotsInProgress.State.SUCCESS));\n        assertIsNoop(updatedClusterState, completeShard);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotsServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2021-04-27 19:31:29","commitOrder":2,"curCode":"    public void testUpdateSnapshotMultipleShards() throws Exception {\n        final String repoName = \"test-repo\";\n        final Snapshot sn1 = snapshot(repoName, \"snapshot-1\");\n        final String indexName1 = \"index-1\";\n        final String dataNodeId = uuid();\n        final IndexId indexId1 = indexId(indexName1);\n        final Index routingIndex1 = index(indexName1);\n        final ShardId shardId1 = new ShardId(routingIndex1, 0);\n        final ShardId shardId2 = new ShardId(routingIndex1, 1);\n        final SnapshotsInProgress.ShardSnapshotStatus shardInitStatus = initShardStatus(dataNodeId);\n        final SnapshotsInProgress.Entry snapshotSingleShard = snapshotEntry(sn1, Collections.singletonMap(indexId1.getName(), indexId1),\n                ImmutableOpenMap.builder(shardsMap(shardId1, shardInitStatus)).fPut(shardId2, shardInitStatus).build());\n\n        assertThat(snapshotSingleShard.state(), is(SnapshotsInProgress.State.STARTED));\n\n        final SnapshotsService.ShardSnapshotUpdate completeShard = successUpdate(sn1, shardId1, dataNodeId);\n        final ClusterState updatedClusterState = applyUpdates(stateWithSnapshots(snapshotSingleShard), completeShard);\n        final SnapshotsInProgress snapshotsInProgress = updatedClusterState.custom(SnapshotsInProgress.TYPE);\n        final SnapshotsInProgress.Entry updatedSnapshot1 = snapshotsInProgress.entries().get(0);\n        assertThat(updatedSnapshot1.state(), is(SnapshotsInProgress.State.STARTED));\n        assertIsNoop(updatedClusterState, completeShard);\n    }\n","date":"2021-04-27 19:31:29","endLine":110,"groupId":"102448","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSnapshotMultipleShards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f7/f35b8d8d86db9f174db687523a31901de9d390.src","preCode":"    public void testUpdateSnapshotMultipleShards() throws Exception {\n        final String repoName = \"test-repo\";\n        final Snapshot sn1 = snapshot(repoName, \"snapshot-1\");\n        final String indexName1 = \"index-1\";\n        final String dataNodeId = uuid();\n        final IndexId indexId1 = indexId(indexName1);\n        final Index routingIndex1 = index(indexName1);\n        final ShardId shardId1 = new ShardId(routingIndex1, 0);\n        final ShardId shardId2 = new ShardId(routingIndex1, 1);\n        final SnapshotsInProgress.ShardSnapshotStatus shardInitStatus = initShardStatus(dataNodeId);\n        final SnapshotsInProgress.Entry snapshotSingleShard = snapshotEntry(sn1, Collections.singletonList(indexId1),\n                ImmutableOpenMap.builder(shardsMap(shardId1, shardInitStatus)).fPut(shardId2, shardInitStatus).build());\n\n        assertThat(snapshotSingleShard.state(), is(SnapshotsInProgress.State.STARTED));\n\n        final SnapshotsService.ShardSnapshotUpdate completeShard = successUpdate(sn1, shardId1, dataNodeId);\n        final ClusterState updatedClusterState = applyUpdates(stateWithSnapshots(snapshotSingleShard), completeShard);\n        final SnapshotsInProgress snapshotsInProgress = updatedClusterState.custom(SnapshotsInProgress.TYPE);\n        final SnapshotsInProgress.Entry updatedSnapshot1 = snapshotsInProgress.entries().get(0);\n        assertThat(updatedSnapshot1.state(), is(SnapshotsInProgress.State.STARTED));\n        assertIsNoop(updatedClusterState, completeShard);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotsServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"cf360cefb68002fb5871d879f3a07643209904dc","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-04-27 19:31:29","modifiedFileCount":"260","status":"M","submitter":"iverase"}]
