[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        PrecisionAtK testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            IllegalArgumentException exception = expectThrows(IllegalArgumentException.class, () -> PrecisionAtK.fromXContent(parser));\n            assertThat(exception.getMessage(), startsWith(\"[precision] unknown field\"));\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":210,"groupId":"68655","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testXContentParsingIsNotLenient","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3e/fff57920b84593f0949f7ac132eadf1e5bff1a.src","preCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        PrecisionAtK testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            IllegalArgumentException exception = expectThrows(IllegalArgumentException.class, () -> PrecisionAtK.fromXContent(parser));\n            assertThat(exception.getMessage(), startsWith(\"[precision] unknown field\"));\n        }\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/PrecisionAtKTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        DiscountedCumulativeGain testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            IllegalArgumentException exception = expectThrows(IllegalArgumentException.class,\n                    () -> DiscountedCumulativeGain.fromXContent(parser));\n            assertThat(exception.getMessage(), startsWith(\"[dcg_at] unknown field\"));\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":287,"groupId":"68655","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testXContentParsingIsNotLenient","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ba/03a734ec760f944f6bd82b7cb82bd662f4770b.src","preCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        DiscountedCumulativeGain testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            IllegalArgumentException exception = expectThrows(IllegalArgumentException.class,\n                    () -> DiscountedCumulativeGain.fromXContent(parser));\n            assertThat(exception.getMessage(), startsWith(\"[dcg_at] unknown field\"));\n        }\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":275,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-06-05 10:59:49","codes":[{"authorDate":"2018-06-05 10:59:49","commitOrder":2,"curCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        PrecisionAtK testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            XContentParseException exception = expectThrows(XContentParseException.class, () -> PrecisionAtK.fromXContent(parser));\n            assertThat(exception.getMessage(), containsString(\"[precision] unknown field\"));\n        }\n    }\n","date":"2018-06-05 10:59:49","endLine":210,"groupId":"68655","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testXContentParsingIsNotLenient","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c0/035d5dbb72ec7468cb5e7765fb89eb710fd7ac.src","preCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        PrecisionAtK testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            IllegalArgumentException exception = expectThrows(IllegalArgumentException.class, () -> PrecisionAtK.fromXContent(parser));\n            assertThat(exception.getMessage(), startsWith(\"[precision] unknown field\"));\n        }\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/PrecisionAtKTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"},{"authorDate":"2018-06-05 10:59:49","commitOrder":2,"curCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        DiscountedCumulativeGain testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            XContentParseException exception = expectThrows(XContentParseException.class,\n                    () -> DiscountedCumulativeGain.fromXContent(parser));\n            assertThat(exception.getMessage(), containsString(\"[dcg_at] unknown field\"));\n        }\n    }\n","date":"2018-06-05 10:59:49","endLine":288,"groupId":"68655","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testXContentParsingIsNotLenient","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/64/337786b1eb6122e076dec62b97ad42b9eb8ad8.src","preCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        DiscountedCumulativeGain testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            IllegalArgumentException exception = expectThrows(IllegalArgumentException.class,\n                    () -> DiscountedCumulativeGain.fromXContent(parser));\n            assertThat(exception.getMessage(), startsWith(\"[dcg_at] unknown field\"));\n        }\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"M"}],"commitId":"2820dba2d7cbbd39e32df7216bbb00a15a0784ad","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-05 10:59:49","modifiedFileCount":"48","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-06-15 23:28:23","codes":[{"authorDate":"2018-06-05 10:59:49","commitOrder":3,"curCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        PrecisionAtK testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            XContentParseException exception = expectThrows(XContentParseException.class, () -> PrecisionAtK.fromXContent(parser));\n            assertThat(exception.getMessage(), containsString(\"[precision] unknown field\"));\n        }\n    }\n","date":"2018-06-05 10:59:49","endLine":210,"groupId":"10295","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testXContentParsingIsNotLenient","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c0/035d5dbb72ec7468cb5e7765fb89eb710fd7ac.src","preCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        PrecisionAtK testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            XContentParseException exception = expectThrows(XContentParseException.class, () -> PrecisionAtK.fromXContent(parser));\n            assertThat(exception.getMessage(), containsString(\"[precision] unknown field\"));\n        }\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/PrecisionAtKTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"N"},{"authorDate":"2018-06-15 23:28:23","commitOrder":3,"curCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        DiscountedCumulativeGain testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            XContentParseException exception = expectThrows(XContentParseException.class,\n                    () -> DiscountedCumulativeGain.fromXContent(parser));\n            assertThat(exception.getMessage(), containsString(\"[dcg] unknown field\"));\n        }\n    }\n","date":"2018-06-15 23:28:23","endLine":288,"groupId":"10295","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testXContentParsingIsNotLenient","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/24/ac600a11398b737db43fbd1ec73bb3a3323baf.src","preCode":"    public void testXContentParsingIsNotLenient() throws IOException {\n        DiscountedCumulativeGain testItem = createTestItem();\n        XContentType xContentType = randomFrom(XContentType.values());\n        BytesReference originalBytes = toShuffledXContent(testItem, xContentType, ToXContent.EMPTY_PARAMS, randomBoolean());\n        BytesReference withRandomFields = insertRandomFields(xContentType, originalBytes, null, random());\n        try (XContentParser parser = createParser(xContentType.xContent(), withRandomFields)) {\n            parser.nextToken();\n            parser.nextToken();\n            XContentParseException exception = expectThrows(XContentParseException.class,\n                    () -> DiscountedCumulativeGain.fromXContent(parser));\n            assertThat(exception.getMessage(), containsString(\"[dcg_at] unknown field\"));\n        }\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"M"}],"commitId":"85d0613ea6d72671e72c8cb993e1526b20cf3fbb","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-15 23:28:23","modifiedFileCount":"72","status":"M","submitter":"Tal Levy"}]
