[{"authorTime":"2019-08-27 02:21:42","codes":[{"authorDate":"2019-08-27 02:21:42","commitOrder":1,"curCode":"    public void testDoubles() throws Exception {\n        RangeType rangeType = RangeType.DOUBLE;\n        try (Directory dir = newDirectory();\n             RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (RangeFieldMapper.Range range : new RangeFieldMapper.Range[] {\n                new RangeFieldMapper.Range(rangeType, 1.0D, 5.0D, true, true), \r\n                new RangeFieldMapper.Range(rangeType, -3.1, 4.2, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 4.2, 13.3, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 42.5, 49.3, true, true), \r\n            }) {\n                Document doc = new Document();\n                BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range));\n                doc.add(new BinaryDocValuesField(\"field\", encodedRange));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                .field(\"field\")\n                .interval(5);\n            MappedFieldType fieldType = new RangeFieldMapper.Builder(\"field\", rangeType).fieldType();\n            fieldType.setName(\"field\");\n\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertEquals(6, histogram.getBuckets().size());\n\n                assertEquals(-5d, histogram.getBuckets().get(0).getKey());\n                assertEquals(1, histogram.getBuckets().get(0).getDocCount());\n\n                assertEquals(0d, histogram.getBuckets().get(1).getKey());\n                assertEquals(3, histogram.getBuckets().get(1).getDocCount());\n\n                assertEquals(5d, histogram.getBuckets().get(2).getKey());\n                assertEquals(2, histogram.getBuckets().get(2).getDocCount());\n\n                assertEquals(10d, histogram.getBuckets().get(3).getKey());\n                assertEquals(1, histogram.getBuckets().get(3).getDocCount());\n\n                assertEquals(40d, histogram.getBuckets().get(4).getKey());\n                assertEquals(1, histogram.getBuckets().get(4).getDocCount());\n\n                assertEquals(45d, histogram.getBuckets().get(5).getKey());\n                assertEquals(1, histogram.getBuckets().get(5).getDocCount());\n            }\n        }\n    }\n","date":"2019-08-27 02:21:42","endLine":92,"groupId":"12107","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDoubles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/73/dd41e640dda8ff037012de949c8a98428e291d.src","preCode":"    public void testDoubles() throws Exception {\n        RangeType rangeType = RangeType.DOUBLE;\n        try (Directory dir = newDirectory();\n             RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (RangeFieldMapper.Range range : new RangeFieldMapper.Range[] {\n                new RangeFieldMapper.Range(rangeType, 1.0D, 5.0D, true, true), \r\n                new RangeFieldMapper.Range(rangeType, -3.1, 4.2, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 4.2, 13.3, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 42.5, 49.3, true, true), \r\n            }) {\n                Document doc = new Document();\n                BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range));\n                doc.add(new BinaryDocValuesField(\"field\", encodedRange));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                .field(\"field\")\n                .interval(5);\n            MappedFieldType fieldType = new RangeFieldMapper.Builder(\"field\", rangeType).fieldType();\n            fieldType.setName(\"field\");\n\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertEquals(6, histogram.getBuckets().size());\n\n                assertEquals(-5d, histogram.getBuckets().get(0).getKey());\n                assertEquals(1, histogram.getBuckets().get(0).getDocCount());\n\n                assertEquals(0d, histogram.getBuckets().get(1).getKey());\n                assertEquals(3, histogram.getBuckets().get(1).getDocCount());\n\n                assertEquals(5d, histogram.getBuckets().get(2).getKey());\n                assertEquals(2, histogram.getBuckets().get(2).getDocCount());\n\n                assertEquals(10d, histogram.getBuckets().get(3).getKey());\n                assertEquals(1, histogram.getBuckets().get(3).getDocCount());\n\n                assertEquals(40d, histogram.getBuckets().get(4).getKey());\n                assertEquals(1, histogram.getBuckets().get(4).getDocCount());\n\n                assertEquals(45d, histogram.getBuckets().get(5).getKey());\n                assertEquals(1, histogram.getBuckets().get(5).getDocCount());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/RangeHistogramAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2019-08-27 02:21:42","commitOrder":1,"curCode":"    public void testDoubles() throws Exception {\n        try (Directory dir = newDirectory();\n                RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (double value : new double[] {9.3, 3.2, -10, -6.5, 5.3, 50.1}) {\n                Document doc = new Document();\n                doc.add(new SortedNumericDocValuesField(\"field\", NumericUtils.doubleToSortableLong(value)));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                    .field(\"field\")\n                    .interval(5);\n            MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.DOUBLE);\n            fieldType.setName(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertEquals(4, histogram.getBuckets().size());\n                assertEquals(-10d, histogram.getBuckets().get(0).getKey());\n                assertEquals(2, histogram.getBuckets().get(0).getDocCount());\n                assertEquals(0d, histogram.getBuckets().get(1).getKey());\n                assertEquals(1, histogram.getBuckets().get(1).getDocCount());\n                assertEquals(5d, histogram.getBuckets().get(2).getKey());\n                assertEquals(2, histogram.getBuckets().get(2).getDocCount());\n                assertEquals(50d, histogram.getBuckets().get(3).getKey());\n                assertEquals(1, histogram.getBuckets().get(3).getDocCount());\n                assertTrue(AggregationInspectionHelper.hasValue(histogram));\n            }\n        }\n    }\n","date":"2019-08-27 02:21:42","endLine":101,"groupId":"51200","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDoubles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e3/d1b931c71d5869f067227913a3badacbaaba1c.src","preCode":"    public void testDoubles() throws Exception {\n        try (Directory dir = newDirectory();\n                RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (double value : new double[] {9.3, 3.2, -10, -6.5, 5.3, 50.1}) {\n                Document doc = new Document();\n                doc.add(new SortedNumericDocValuesField(\"field\", NumericUtils.doubleToSortableLong(value)));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                    .field(\"field\")\n                    .interval(5);\n            MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.DOUBLE);\n            fieldType.setName(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertEquals(4, histogram.getBuckets().size());\n                assertEquals(-10d, histogram.getBuckets().get(0).getKey());\n                assertEquals(2, histogram.getBuckets().get(0).getDocCount());\n                assertEquals(0d, histogram.getBuckets().get(1).getKey());\n                assertEquals(1, histogram.getBuckets().get(1).getDocCount());\n                assertEquals(5d, histogram.getBuckets().get(2).getKey());\n                assertEquals(2, histogram.getBuckets().get(2).getDocCount());\n                assertEquals(50d, histogram.getBuckets().get(3).getKey());\n                assertEquals(1, histogram.getBuckets().get(3).getDocCount());\n                assertTrue(AggregationInspectionHelper.hasValue(histogram));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/NumericHistogramAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"1a0dddf4ad24b3f2c751a1fe0e024fdbf8754f94","commitMessage":"@@@Range Field support for Histogram and Date Histogram aggregations(#45395)\n\n * Add support for a Range field ValuesSource.  including decode logic for range doc values and exposing RangeType as a first class enum\n * Provide hooks in ValuesSourceConfig for aggregations to control ValuesSource class selection on missing & script values\n * Branch aggregator creation in Histogram and DateHistogram based on ValuesSource class.  to enable specialization based on type.  This is similar to how Terms aggregator works.\n * Prioritize field type when available for selecting the ValuesSource class type to use for an aggregation\n\n","date":"2019-08-27 02:21:42","modifiedFileCount":"44","status":"B","submitter":"Mark Tozzi"},{"authorTime":"2020-05-29 21:54:47","codes":[{"authorDate":"2020-05-29 21:54:47","commitOrder":2,"curCode":"    public void testDoubles() throws Exception {\n        RangeType rangeType = RangeType.DOUBLE;\n        try (Directory dir = newDirectory();\n             RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (RangeFieldMapper.Range range : new RangeFieldMapper.Range[] {\n                new RangeFieldMapper.Range(rangeType, 1.0D, 5.0D, true, true), \r\n                new RangeFieldMapper.Range(rangeType, -3.1, 4.2, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 4.2, 13.3, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 42.5, 49.3, true, true), \r\n            }) {\n                Document doc = new Document();\n                BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range));\n                doc.add(new BinaryDocValuesField(\"field\", encodedRange));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                .field(\"field\")\n                .interval(5);\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram = search(searcher, new MatchAllDocsQuery(), aggBuilder, rangeField(\"field\", rangeType));\n                assertEquals(6, histogram.getBuckets().size());\n\n                assertEquals(-5d, histogram.getBuckets().get(0).getKey());\n                assertEquals(1, histogram.getBuckets().get(0).getDocCount());\n\n                assertEquals(0d, histogram.getBuckets().get(1).getKey());\n                assertEquals(3, histogram.getBuckets().get(1).getDocCount());\n\n                assertEquals(5d, histogram.getBuckets().get(2).getKey());\n                assertEquals(2, histogram.getBuckets().get(2).getDocCount());\n\n                assertEquals(10d, histogram.getBuckets().get(3).getKey());\n                assertEquals(1, histogram.getBuckets().get(3).getDocCount());\n\n                assertEquals(40d, histogram.getBuckets().get(4).getKey());\n                assertEquals(1, histogram.getBuckets().get(4).getDocCount());\n\n                assertEquals(45d, histogram.getBuckets().get(5).getKey());\n                assertEquals(1, histogram.getBuckets().get(5).getDocCount());\n            }\n        }\n    }\n","date":"2020-05-29 21:54:47","endLine":95,"groupId":"12107","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDoubles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9c/c63f3352fa175a004e611b860399619c9ca0a2.src","preCode":"    public void testDoubles() throws Exception {\n        RangeType rangeType = RangeType.DOUBLE;\n        try (Directory dir = newDirectory();\n             RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (RangeFieldMapper.Range range : new RangeFieldMapper.Range[] {\n                new RangeFieldMapper.Range(rangeType, 1.0D, 5.0D, true, true), \r\n                new RangeFieldMapper.Range(rangeType, -3.1, 4.2, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 4.2, 13.3, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 42.5, 49.3, true, true), \r\n            }) {\n                Document doc = new Document();\n                BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range));\n                doc.add(new BinaryDocValuesField(\"field\", encodedRange));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                .field(\"field\")\n                .interval(5);\n            MappedFieldType fieldType = new RangeFieldMapper.Builder(\"field\", rangeType).fieldType();\n            fieldType.setName(\"field\");\n\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertEquals(6, histogram.getBuckets().size());\n\n                assertEquals(-5d, histogram.getBuckets().get(0).getKey());\n                assertEquals(1, histogram.getBuckets().get(0).getDocCount());\n\n                assertEquals(0d, histogram.getBuckets().get(1).getKey());\n                assertEquals(3, histogram.getBuckets().get(1).getDocCount());\n\n                assertEquals(5d, histogram.getBuckets().get(2).getKey());\n                assertEquals(2, histogram.getBuckets().get(2).getDocCount());\n\n                assertEquals(10d, histogram.getBuckets().get(3).getKey());\n                assertEquals(1, histogram.getBuckets().get(3).getDocCount());\n\n                assertEquals(40d, histogram.getBuckets().get(4).getKey());\n                assertEquals(1, histogram.getBuckets().get(4).getDocCount());\n\n                assertEquals(45d, histogram.getBuckets().get(5).getKey());\n                assertEquals(1, histogram.getBuckets().get(5).getDocCount());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/RangeHistogramAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2020-05-29 21:54:47","commitOrder":2,"curCode":"    public void testDoubles() throws Exception {\n        try (Directory dir = newDirectory();\n                RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (double value : new double[] {9.3, 3.2, -10, -6.5, 5.3, 50.1}) {\n                Document doc = new Document();\n                doc.add(new SortedNumericDocValuesField(\"field\", NumericUtils.doubleToSortableLong(value)));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                    .field(\"field\")\n                    .interval(5);\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram = search(searcher, new MatchAllDocsQuery(), aggBuilder, doubleField(\"field\"));\n                assertEquals(4, histogram.getBuckets().size());\n                assertEquals(-10d, histogram.getBuckets().get(0).getKey());\n                assertEquals(2, histogram.getBuckets().get(0).getDocCount());\n                assertEquals(0d, histogram.getBuckets().get(1).getKey());\n                assertEquals(1, histogram.getBuckets().get(1).getDocCount());\n                assertEquals(5d, histogram.getBuckets().get(2).getKey());\n                assertEquals(2, histogram.getBuckets().get(2).getDocCount());\n                assertEquals(50d, histogram.getBuckets().get(3).getKey());\n                assertEquals(1, histogram.getBuckets().get(3).getDocCount());\n                assertTrue(AggregationInspectionHelper.hasValue(histogram));\n            }\n        }\n    }\n","date":"2020-05-29 21:54:47","endLine":111,"groupId":"10874","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDoubles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e0/333147198587658860664381cdf5b1486d4320.src","preCode":"    public void testDoubles() throws Exception {\n        try (Directory dir = newDirectory();\n                RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (double value : new double[] {9.3, 3.2, -10, -6.5, 5.3, 50.1}) {\n                Document doc = new Document();\n                doc.add(new SortedNumericDocValuesField(\"field\", NumericUtils.doubleToSortableLong(value)));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                    .field(\"field\")\n                    .interval(5);\n            MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.DOUBLE);\n            fieldType.setName(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertEquals(4, histogram.getBuckets().size());\n                assertEquals(-10d, histogram.getBuckets().get(0).getKey());\n                assertEquals(2, histogram.getBuckets().get(0).getDocCount());\n                assertEquals(0d, histogram.getBuckets().get(1).getKey());\n                assertEquals(1, histogram.getBuckets().get(1).getDocCount());\n                assertEquals(5d, histogram.getBuckets().get(2).getKey());\n                assertEquals(2, histogram.getBuckets().get(2).getDocCount());\n                assertEquals(50d, histogram.getBuckets().get(3).getKey());\n                assertEquals(1, histogram.getBuckets().get(3).getDocCount());\n                assertTrue(AggregationInspectionHelper.hasValue(histogram));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/NumericHistogramAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"460b204f8e61ac77c6550f1df3b7b0d4413fb0d4","commitMessage":"@@@Save memory when histogram agg is not on top (#57277)\n\nThis saves some memory when the `histogram` aggregation is not a top\nlevel aggregation by dropping `asMultiBucketAggregator` in favor of\nnatively implementing multi-bucket storage in the aggregator. For the\nmost part this just uses the `LongKeyedBucketOrds` that we built the\nfirst time we did this.\n","date":"2020-05-29 21:54:47","modifiedFileCount":"9","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-08-07 05:14:20","codes":[{"authorDate":"2020-08-07 05:14:20","commitOrder":3,"curCode":"    public void testDoubles() throws Exception {\n        RangeType rangeType = RangeType.DOUBLE;\n        try (Directory dir = newDirectory();\n             RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (RangeFieldMapper.Range range : new RangeFieldMapper.Range[] {\n                new RangeFieldMapper.Range(rangeType, 1.0D, 5.0D, true, true), \r\n                new RangeFieldMapper.Range(rangeType, -3.1, 4.2, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 4.2, 13.3, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 22.5, 29.3, true, true), \r\n            }) {\n                Document doc = new Document();\n                BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range));\n                doc.add(new BinaryDocValuesField(\"field\", encodedRange));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                .field(\"field\")\n                .interval(5);\n\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram =\n                    searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, rangeField(\"field\", rangeType));\n                assertEquals(7, histogram.getBuckets().size());\n\n                assertEquals(-5d, histogram.getBuckets().get(0).getKey());\n                assertEquals(1, histogram.getBuckets().get(0).getDocCount());\n\n                assertEquals(0d, histogram.getBuckets().get(1).getKey());\n                assertEquals(3, histogram.getBuckets().get(1).getDocCount());\n\n                assertEquals(5d, histogram.getBuckets().get(2).getKey());\n                assertEquals(2, histogram.getBuckets().get(2).getDocCount());\n\n                assertEquals(10d, histogram.getBuckets().get(3).getKey());\n                assertEquals(1, histogram.getBuckets().get(3).getDocCount());\n\n                assertEquals(15d, histogram.getBuckets().get(4).getKey());\n                assertEquals(0, histogram.getBuckets().get(4).getDocCount());\n\n                assertEquals(20d, histogram.getBuckets().get(5).getKey());\n                assertEquals(1, histogram.getBuckets().get(5).getDocCount());\n\n                assertEquals(25d, histogram.getBuckets().get(6).getKey());\n                assertEquals(1, histogram.getBuckets().get(6).getDocCount());\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":100,"groupId":"105037","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDoubles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/31/2ca43c7286e2af1f9ce4ff4272756b7b9cddb3.src","preCode":"    public void testDoubles() throws Exception {\n        RangeType rangeType = RangeType.DOUBLE;\n        try (Directory dir = newDirectory();\n             RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (RangeFieldMapper.Range range : new RangeFieldMapper.Range[] {\n                new RangeFieldMapper.Range(rangeType, 1.0D, 5.0D, true, true), \r\n                new RangeFieldMapper.Range(rangeType, -3.1, 4.2, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 4.2, 13.3, true, true), \r\n                new RangeFieldMapper.Range(rangeType, 42.5, 49.3, true, true), \r\n            }) {\n                Document doc = new Document();\n                BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range));\n                doc.add(new BinaryDocValuesField(\"field\", encodedRange));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                .field(\"field\")\n                .interval(5);\n\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram = search(searcher, new MatchAllDocsQuery(), aggBuilder, rangeField(\"field\", rangeType));\n                assertEquals(6, histogram.getBuckets().size());\n\n                assertEquals(-5d, histogram.getBuckets().get(0).getKey());\n                assertEquals(1, histogram.getBuckets().get(0).getDocCount());\n\n                assertEquals(0d, histogram.getBuckets().get(1).getKey());\n                assertEquals(3, histogram.getBuckets().get(1).getDocCount());\n\n                assertEquals(5d, histogram.getBuckets().get(2).getKey());\n                assertEquals(2, histogram.getBuckets().get(2).getDocCount());\n\n                assertEquals(10d, histogram.getBuckets().get(3).getKey());\n                assertEquals(1, histogram.getBuckets().get(3).getDocCount());\n\n                assertEquals(40d, histogram.getBuckets().get(4).getKey());\n                assertEquals(1, histogram.getBuckets().get(4).getDocCount());\n\n                assertEquals(45d, histogram.getBuckets().get(5).getKey());\n                assertEquals(1, histogram.getBuckets().get(5).getDocCount());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/RangeHistogramAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2020-08-07 05:14:20","commitOrder":3,"curCode":"    public void testDoubles() throws Exception {\n        try (Directory dir = newDirectory();\n                RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (double value : new double[] {9.3, 3.2, -10, -6.5, 5.3, 15.1}) {\n                Document doc = new Document();\n                doc.add(new SortedNumericDocValuesField(\"field\", NumericUtils.doubleToSortableLong(value)));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                    .field(\"field\")\n                    .interval(5);\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, doubleField(\"field\"));\n                assertEquals(6, histogram.getBuckets().size());\n                assertEquals(6, histogram.getBuckets().size());\n                assertEquals(-10d, histogram.getBuckets().get(0).getKey());\n                assertEquals(2, histogram.getBuckets().get(0).getDocCount());\n                assertEquals(-5d, histogram.getBuckets().get(1).getKey());\n                assertEquals(0, histogram.getBuckets().get(1).getDocCount());\n                assertEquals(0d, histogram.getBuckets().get(2).getKey());\n                assertEquals(1, histogram.getBuckets().get(2).getDocCount());\n                assertEquals(5d, histogram.getBuckets().get(3).getKey());\n                assertEquals(2, histogram.getBuckets().get(3).getDocCount());\n                assertEquals(10d, histogram.getBuckets().get(4).getKey());\n                assertEquals(0, histogram.getBuckets().get(4).getDocCount());\n                assertEquals(15d, histogram.getBuckets().get(5).getKey());\n                assertEquals(1, histogram.getBuckets().get(5).getDocCount());\n                assertTrue(AggregationInspectionHelper.hasValue(histogram));\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":120,"groupId":"105037","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDoubles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/81/426688c3e946b9c1ad90214348c16b97e4d41b.src","preCode":"    public void testDoubles() throws Exception {\n        try (Directory dir = newDirectory();\n                RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            for (double value : new double[] {9.3, 3.2, -10, -6.5, 5.3, 50.1}) {\n                Document doc = new Document();\n                doc.add(new SortedNumericDocValuesField(\"field\", NumericUtils.doubleToSortableLong(value)));\n                w.addDocument(doc);\n            }\n\n            HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\")\n                    .field(\"field\")\n                    .interval(5);\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalHistogram histogram = search(searcher, new MatchAllDocsQuery(), aggBuilder, doubleField(\"field\"));\n                assertEquals(4, histogram.getBuckets().size());\n                assertEquals(-10d, histogram.getBuckets().get(0).getKey());\n                assertEquals(2, histogram.getBuckets().get(0).getDocCount());\n                assertEquals(0d, histogram.getBuckets().get(1).getKey());\n                assertEquals(1, histogram.getBuckets().get(1).getDocCount());\n                assertEquals(5d, histogram.getBuckets().get(2).getKey());\n                assertEquals(2, histogram.getBuckets().get(2).getDocCount());\n                assertEquals(50d, histogram.getBuckets().get(3).getKey());\n                assertEquals(1, histogram.getBuckets().get(3).getDocCount());\n                assertTrue(AggregationInspectionHelper.hasValue(histogram));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/NumericHistogramAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"5e3ea6eb11c68bdcc9adda51715a6e1fea9186d6","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-07 05:14:20","modifiedFileCount":"73","status":"M","submitter":"Nik Everett"}]
