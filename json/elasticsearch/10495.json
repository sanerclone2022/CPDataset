[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testInvalidTimezone() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            new TestTemplateService.MockTemplateScript.Factory(\"invalid_timezone\"), templatize(randomLocale(random())),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"The datetime zone id 'invalid_timezone' is not recognised\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":185,"groupId":"57319","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidTimezone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/ba759aa16f99e3159a9e1739541dc47cc7ab5d.src","preCode":"    public void testInvalidTimezone() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            new TestTemplateService.MockTemplateScript.Factory(\"invalid_timezone\"), templatize(randomLocale(random())),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"The datetime zone id 'invalid_timezone' is not recognised\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testInvalidLocale() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            templatize(UTC), new TestTemplateService.MockTemplateScript.Factory(\"invalid_locale\"),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"Unknown language: invalid\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":197,"groupId":"57319","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/ba759aa16f99e3159a9e1739541dc47cc7ab5d.src","preCode":"    public void testInvalidLocale() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            templatize(UTC), new TestTemplateService.MockTemplateScript.Factory(\"invalid_locale\"),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"Unknown language: invalid\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-12 15:57:39","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public void testInvalidTimezone() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            new TestTemplateService.MockTemplateScript.Factory(\"invalid_timezone\"), templatize(randomLocale(random())),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"The datetime zone id 'invalid_timezone' is not recognised\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":185,"groupId":"57319","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidTimezone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/ba759aa16f99e3159a9e1739541dc47cc7ab5d.src","preCode":"    public void testInvalidTimezone() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            new TestTemplateService.MockTemplateScript.Factory(\"invalid_timezone\"), templatize(randomLocale(random())),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"The datetime zone id 'invalid_timezone' is not recognised\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"N"},{"authorDate":"2018-07-12 15:57:39","commitOrder":2,"curCode":"    public void testInvalidLocale() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            templatize(ZoneOffset.UTC), new TestTemplateService.MockTemplateScript.Factory(\"invalid_locale\"),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"Unknown language: invalid\"));\n    }\n","date":"2018-07-12 15:57:39","endLine":200,"groupId":"57319","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/43/a5f9245b1859a277f35f869442bf78ddc45643.src","preCode":"    public void testInvalidLocale() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            templatize(UTC), new TestTemplateService.MockTemplateScript.Factory(\"invalid_locale\"),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"Unknown language: invalid\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"}],"commitId":"4192f387b41fd02114bae3dba743f701e8bf61e2","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-12 15:57:39","modifiedFileCount":"60","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-07-12 15:57:39","codes":[{"authorDate":"2019-02-01 17:15:18","commitOrder":3,"curCode":"    public void testInvalidTimezone() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            new TestTemplateService.MockTemplateScript.Factory(\"invalid_timezone\"), templatize(randomLocale(random())),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"Unknown time-zone ID: invalid_timezone\"));\n    }\n","date":"2019-02-01 17:15:18","endLine":188,"groupId":"57319","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidTimezone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c9/ab07d82bbccd6b15d16c09d407dab3016a437a.src","preCode":"    public void testInvalidTimezone() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            new TestTemplateService.MockTemplateScript.Factory(\"invalid_timezone\"), templatize(randomLocale(random())),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"The datetime zone id 'invalid_timezone' is not recognised\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"},{"authorDate":"2018-07-12 15:57:39","commitOrder":3,"curCode":"    public void testInvalidLocale() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            templatize(ZoneOffset.UTC), new TestTemplateService.MockTemplateScript.Factory(\"invalid_locale\"),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"Unknown language: invalid\"));\n    }\n","date":"2018-07-12 15:57:39","endLine":200,"groupId":"57319","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/43/a5f9245b1859a277f35f869442bf78ddc45643.src","preCode":"    public void testInvalidLocale() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            templatize(ZoneOffset.UTC), new TestTemplateService.MockTemplateScript.Factory(\"invalid_locale\"),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"Unknown language: invalid\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"N"}],"commitId":"6c5a7387af086381da34db6103fc711dd8350b14","commitMessage":"@@@Replace joda time in ingest-common module (#38088)\n\nThis commit fully replaces any remaining joda time time classes with\njava time implementations.\n\nRelates #27330\n","date":"2019-02-01 17:15:18","modifiedFileCount":"8","status":"M","submitter":"Alexander Reelsen"},{"authorTime":"2020-06-16 05:08:29","codes":[{"authorDate":"2020-06-16 05:08:29","commitOrder":4,"curCode":"    public void testInvalidTimezone() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            null, new TestTemplateService.MockTemplateScript.Factory(\"invalid_timezone\"), templatize(randomLocale(random())),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"Unknown time-zone ID: invalid_timezone\"));\n    }\n","date":"2020-06-16 05:08:29","endLine":214,"groupId":"10495","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testInvalidTimezone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/3fd31ab4ac8266a50f3155597e02060c139834.src","preCode":"    public void testInvalidTimezone() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            new TestTemplateService.MockTemplateScript.Factory(\"invalid_timezone\"), templatize(randomLocale(random())),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"Unknown time-zone ID: invalid_timezone\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"},{"authorDate":"2020-06-16 05:08:29","commitOrder":4,"curCode":"    public void testInvalidLocale() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            null, templatize(ZoneOffset.UTC), new TestTemplateService.MockTemplateScript.Factory(\"invalid_locale\"),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"Unknown language: invalid\"));\n    }\n","date":"2020-06-16 05:08:29","endLine":226,"groupId":"10495","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testInvalidLocale","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/3fd31ab4ac8266a50f3155597e02060c139834.src","preCode":"    public void testInvalidLocale() {\n        DateProcessor processor = new DateProcessor(randomAlphaOfLength(10),\n            templatize(ZoneOffset.UTC), new TestTemplateService.MockTemplateScript.Factory(\"invalid_locale\"),\n            \"date_as_string\", Collections.singletonList(\"yyyy\"), \"date_as_date\");\n        Map<String, Object> document = new HashMap<>();\n        document.put(\"date_as_string\", \"2010\");\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> processor.execute(RandomDocumentPicks.randomIngestDocument(random(), document)));\n        assertThat(e.getMessage(), equalTo(\"unable to parse date [2010]\"));\n        assertThat(e.getCause().getMessage(), equalTo(\"Unknown language: invalid\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"M"}],"commitId":"69a6a18d8dc3f95001cfe6f55c1451ac616f7e84","commitMessage":"@@@Add optional description parameter to ingest processors. (#57906)\n\nThis commit adds an optional field.  `description`.  to all ingest processors\nso that users can explain the purpose of the specific processor instance.\n\nCloses #56000.","date":"2020-06-16 05:08:29","modifiedFileCount":"125","status":"M","submitter":"Tal Levy"}]
