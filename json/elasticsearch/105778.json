[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testExecuteVerboseItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"test-id\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        SimulateDocumentResult actualItemResponse = executionService.executeDocument(pipeline, ingestDocument, true);\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentVerboseResult.class));\n        SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult) actualItemResponse;\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().size(), equalTo(2));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(), equalTo(\"test-id\"));\n        IngestDocument firstProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument();\n        assertThat(firstProcessorIngestDocument, not(sameInstance(this.ingestDocument)));\n        assertIngestDocument(firstProcessorIngestDocument, this.ingestDocument);\n        assertThat(firstProcessorIngestDocument.getSourceAndMetadata(), not(sameInstance(this.ingestDocument.getSourceAndMetadata())));\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(), nullValue());\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(), equalTo(\"test-id\"));\n        IngestDocument secondProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument();\n        assertThat(secondProcessorIngestDocument, not(sameInstance(this.ingestDocument)));\n        assertIngestDocument(secondProcessorIngestDocument, this.ingestDocument);\n        assertThat(secondProcessorIngestDocument.getSourceAndMetadata(), not(sameInstance(this.ingestDocument.getSourceAndMetadata())));\n        assertThat(secondProcessorIngestDocument.getSourceAndMetadata(),\n            not(sameInstance(firstProcessorIngestDocument.getSourceAndMetadata())));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(), nullValue());\n    }\n","date":"2018-04-26 03:22:53","endLine":91,"groupId":"48897","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testExecuteVerboseItem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a4/320d264110edeaefc04e0fd46f22d9dcebe46a.src","preCode":"    public void testExecuteVerboseItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"test-id\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        SimulateDocumentResult actualItemResponse = executionService.executeDocument(pipeline, ingestDocument, true);\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentVerboseResult.class));\n        SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult) actualItemResponse;\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().size(), equalTo(2));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(), equalTo(\"test-id\"));\n        IngestDocument firstProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument();\n        assertThat(firstProcessorIngestDocument, not(sameInstance(this.ingestDocument)));\n        assertIngestDocument(firstProcessorIngestDocument, this.ingestDocument);\n        assertThat(firstProcessorIngestDocument.getSourceAndMetadata(), not(sameInstance(this.ingestDocument.getSourceAndMetadata())));\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(), nullValue());\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(), equalTo(\"test-id\"));\n        IngestDocument secondProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument();\n        assertThat(secondProcessorIngestDocument, not(sameInstance(this.ingestDocument)));\n        assertIngestDocument(secondProcessorIngestDocument, this.ingestDocument);\n        assertThat(secondProcessorIngestDocument.getSourceAndMetadata(), not(sameInstance(this.ingestDocument.getSourceAndMetadata())));\n        assertThat(secondProcessorIngestDocument.getSourceAndMetadata(),\n            not(sameInstance(firstProcessorIngestDocument.getSourceAndMetadata())));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(), nullValue());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/ingest/SimulateExecutionServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testExecuteItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"processor_0\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        SimulateDocumentResult actualItemResponse = executionService.executeDocument(pipeline, ingestDocument, false);\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentBaseResult.class));\n        SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult) actualItemResponse;\n        assertThat(simulateDocumentBaseResult.getIngestDocument(), equalTo(ingestDocument));\n        assertThat(simulateDocumentBaseResult.getFailure(), nullValue());\n    }\n","date":"2018-04-26 03:22:53","endLine":102,"groupId":"68524","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testExecuteItem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a4/320d264110edeaefc04e0fd46f22d9dcebe46a.src","preCode":"    public void testExecuteItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"processor_0\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        SimulateDocumentResult actualItemResponse = executionService.executeDocument(pipeline, ingestDocument, false);\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentBaseResult.class));\n        SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult) actualItemResponse;\n        assertThat(simulateDocumentBaseResult.getIngestDocument(), equalTo(ingestDocument));\n        assertThat(simulateDocumentBaseResult.getFailure(), nullValue());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/ingest/SimulateExecutionServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2019-09-25 22:03:06","codes":[{"authorDate":"2019-09-25 22:03:06","commitOrder":2,"curCode":"    public void testExecuteVerboseItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"test-id\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, true, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentVerboseResult.class));\n        SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult) actualItemResponse;\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().size(), equalTo(2));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(), equalTo(\"test-id\"));\n        IngestDocument firstProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument();\n        assertThat(firstProcessorIngestDocument, not(sameInstance(this.ingestDocument)));\n        assertIngestDocument(firstProcessorIngestDocument, this.ingestDocument);\n        assertThat(firstProcessorIngestDocument.getSourceAndMetadata(), not(sameInstance(this.ingestDocument.getSourceAndMetadata())));\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(), nullValue());\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(), equalTo(\"test-id\"));\n        IngestDocument secondProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument();\n        assertThat(secondProcessorIngestDocument, not(sameInstance(this.ingestDocument)));\n        assertIngestDocument(secondProcessorIngestDocument, this.ingestDocument);\n        assertThat(secondProcessorIngestDocument.getSourceAndMetadata(), not(sameInstance(this.ingestDocument.getSourceAndMetadata())));\n        assertThat(secondProcessorIngestDocument.getSourceAndMetadata(),\n            not(sameInstance(firstProcessorIngestDocument.getSourceAndMetadata())));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(), nullValue());\n    }\n","date":"2019-09-25 22:03:06","endLine":99,"groupId":"48897","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testExecuteVerboseItem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/496ec16fadadeb68362bda4ae37846a211b211.src","preCode":"    public void testExecuteVerboseItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"test-id\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        SimulateDocumentResult actualItemResponse = executionService.executeDocument(pipeline, ingestDocument, true);\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentVerboseResult.class));\n        SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult) actualItemResponse;\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().size(), equalTo(2));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(), equalTo(\"test-id\"));\n        IngestDocument firstProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument();\n        assertThat(firstProcessorIngestDocument, not(sameInstance(this.ingestDocument)));\n        assertIngestDocument(firstProcessorIngestDocument, this.ingestDocument);\n        assertThat(firstProcessorIngestDocument.getSourceAndMetadata(), not(sameInstance(this.ingestDocument.getSourceAndMetadata())));\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(), nullValue());\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(), equalTo(\"test-id\"));\n        IngestDocument secondProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument();\n        assertThat(secondProcessorIngestDocument, not(sameInstance(this.ingestDocument)));\n        assertIngestDocument(secondProcessorIngestDocument, this.ingestDocument);\n        assertThat(secondProcessorIngestDocument.getSourceAndMetadata(), not(sameInstance(this.ingestDocument.getSourceAndMetadata())));\n        assertThat(secondProcessorIngestDocument.getSourceAndMetadata(),\n            not(sameInstance(firstProcessorIngestDocument.getSourceAndMetadata())));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(), nullValue());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/ingest/SimulateExecutionServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2019-09-25 22:03:06","commitOrder":2,"curCode":"    public void testExecuteItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"processor_0\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, false, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentBaseResult.class));\n        SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult) actualItemResponse;\n        assertThat(simulateDocumentBaseResult.getIngestDocument(), equalTo(ingestDocument));\n        assertThat(simulateDocumentBaseResult.getFailure(), nullValue());\n    }\n","date":"2019-09-25 22:03:06","endLine":117,"groupId":"68524","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testExecuteItem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/496ec16fadadeb68362bda4ae37846a211b211.src","preCode":"    public void testExecuteItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"processor_0\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        SimulateDocumentResult actualItemResponse = executionService.executeDocument(pipeline, ingestDocument, false);\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentBaseResult.class));\n        SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult) actualItemResponse;\n        assertThat(simulateDocumentBaseResult.getIngestDocument(), equalTo(ingestDocument));\n        assertThat(simulateDocumentBaseResult.getFailure(), nullValue());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/ingest/SimulateExecutionServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"2c7fd822930b4ecb651d1903d99798e6f0c504b2","commitMessage":"@@@Allow ingest processors to execute in a non blocking manner. (#46241)\n\nThis PR changes the ingest executing to be non blocking\nby adding an additional method to the Processor interface\nthat accepts a BiConsumer as handler and changing\nIngestService#executeBulkRequest(...) to ingest document\nin a non blocking fashion iff a processor executes\nin a non blocking fashion.\n\nThis is the second PR that merges changes made to server module from\nthe enrich branch (see #32789) into the master branch.\n\nThe plan is to merge changes made to the server module separately from\nthe pr that will merge enrich into master.  so that these changes can\nbe reviewed in isolation.\n\nThis change originates from the enrich branch and was introduced there\nin #43361.","date":"2019-09-25 22:03:06","modifiedFileCount":"20","status":"M","submitter":"Martijn van Groningen"},{"authorTime":"2019-09-25 22:03:06","codes":[{"authorDate":"2020-01-15 23:17:05","commitOrder":3,"curCode":"    public void testExecuteVerboseItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"test-id\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, true, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentVerboseResult.class));\n        SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult) actualItemResponse;\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().size(), equalTo(2));\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(), equalTo(\"test-id\"));\n        assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(0), pipeline.getId(), ingestDocument);\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(), nullValue());\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(), equalTo(\"test-id\"));\n        assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(1), pipeline.getId(), ingestDocument);\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument().getSourceAndMetadata(),\n            not(sameInstance(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument().getSourceAndMetadata())));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(), nullValue());\n    }\n","date":"2020-01-15 23:17:05","endLine":104,"groupId":"68524","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testExecuteVerboseItem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/83/4aa57b2d825683ca663adbd9a42beea3917820.src","preCode":"    public void testExecuteVerboseItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"test-id\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, true, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentVerboseResult.class));\n        SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult) actualItemResponse;\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().size(), equalTo(2));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(), equalTo(\"test-id\"));\n        IngestDocument firstProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument();\n        assertThat(firstProcessorIngestDocument, not(sameInstance(this.ingestDocument)));\n        assertIngestDocument(firstProcessorIngestDocument, this.ingestDocument);\n        assertThat(firstProcessorIngestDocument.getSourceAndMetadata(), not(sameInstance(this.ingestDocument.getSourceAndMetadata())));\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(), nullValue());\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(), equalTo(\"test-id\"));\n        IngestDocument secondProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument();\n        assertThat(secondProcessorIngestDocument, not(sameInstance(this.ingestDocument)));\n        assertIngestDocument(secondProcessorIngestDocument, this.ingestDocument);\n        assertThat(secondProcessorIngestDocument.getSourceAndMetadata(), not(sameInstance(this.ingestDocument.getSourceAndMetadata())));\n        assertThat(secondProcessorIngestDocument.getSourceAndMetadata(),\n            not(sameInstance(firstProcessorIngestDocument.getSourceAndMetadata())));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(), nullValue());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/ingest/SimulateExecutionServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2019-09-25 22:03:06","commitOrder":3,"curCode":"    public void testExecuteItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"processor_0\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, false, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentBaseResult.class));\n        SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult) actualItemResponse;\n        assertThat(simulateDocumentBaseResult.getIngestDocument(), equalTo(ingestDocument));\n        assertThat(simulateDocumentBaseResult.getFailure(), nullValue());\n    }\n","date":"2019-09-25 22:03:06","endLine":117,"groupId":"68524","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testExecuteItem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/496ec16fadadeb68362bda4ae37846a211b211.src","preCode":"    public void testExecuteItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"processor_0\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, false, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentBaseResult.class));\n        SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult) actualItemResponse;\n        assertThat(simulateDocumentBaseResult.getIngestDocument(), equalTo(ingestDocument));\n        assertThat(simulateDocumentBaseResult.getFailure(), nullValue());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/ingest/SimulateExecutionServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"N"}],"commitId":"2b2935fd52368928307ff2e8614e9d4e4b56e027","commitMessage":"@@@Add pipeline name to ingest metadata (#50467)\n\nThis commit adds the name of the current pipeline to ingest metadata.\nThis pipeline name is accessible under the following key: '_ingest.pipeline'.\n\nExample usage in pipeline:\nPUT /_ingest/pipeline/2\n{\n    \"processors\": [\n        {\n            \"set\": {\n                \"field\": \"pipeline_name\". \n                \"value\": \"{{_ingest.pipeline}}\"\n            }\n        }\n    ]\n}\n\nCloses #42106","date":"2020-01-15 23:17:05","modifiedFileCount":"6","status":"M","submitter":"Martijn van Groningen"},{"authorTime":"2020-06-16 05:08:29","codes":[{"authorDate":"2020-06-16 05:08:29","commitOrder":4,"curCode":"    public void testExecuteVerboseItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"test-id\", \"mock\", null, ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, true, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentVerboseResult.class));\n        SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult) actualItemResponse;\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().size(), equalTo(2));\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(), equalTo(\"test-id\"));\n        assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(0), pipeline.getId(), ingestDocument);\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(), nullValue());\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(), equalTo(\"test-id\"));\n        assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(1), pipeline.getId(), ingestDocument);\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument().getSourceAndMetadata(),\n            not(sameInstance(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument().getSourceAndMetadata())));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(), nullValue());\n    }\n","date":"2020-06-16 05:08:29","endLine":104,"groupId":"68524","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testExecuteVerboseItem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/83/264ff1cb6b6a5949ce9221218c70f306776805.src","preCode":"    public void testExecuteVerboseItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"test-id\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, true, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentVerboseResult.class));\n        SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult) actualItemResponse;\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().size(), equalTo(2));\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(), equalTo(\"test-id\"));\n        assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(0), pipeline.getId(), ingestDocument);\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(), nullValue());\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(), equalTo(\"test-id\"));\n        assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(1), pipeline.getId(), ingestDocument);\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument().getSourceAndMetadata(),\n            not(sameInstance(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument().getSourceAndMetadata())));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(), nullValue());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/ingest/SimulateExecutionServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2020-06-16 05:08:29","commitOrder":4,"curCode":"    public void testExecuteItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"processor_0\", \"mock\", null, ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, false, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentBaseResult.class));\n        SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult) actualItemResponse;\n        assertThat(simulateDocumentBaseResult.getIngestDocument(), equalTo(ingestDocument));\n        assertThat(simulateDocumentBaseResult.getFailure(), nullValue());\n    }\n","date":"2020-06-16 05:08:29","endLine":121,"groupId":"68524","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testExecuteItem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/83/264ff1cb6b6a5949ce9221218c70f306776805.src","preCode":"    public void testExecuteItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"processor_0\", \"mock\", ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, false, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentBaseResult.class));\n        SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult) actualItemResponse;\n        assertThat(simulateDocumentBaseResult.getIngestDocument(), equalTo(ingestDocument));\n        assertThat(simulateDocumentBaseResult.getFailure(), nullValue());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/ingest/SimulateExecutionServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"69a6a18d8dc3f95001cfe6f55c1451ac616f7e84","commitMessage":"@@@Add optional description parameter to ingest processors. (#57906)\n\nThis commit adds an optional field.  `description`.  to all ingest processors\nso that users can explain the purpose of the specific processor instance.\n\nCloses #56000.","date":"2020-06-16 05:08:29","modifiedFileCount":"125","status":"M","submitter":"Tal Levy"},{"authorTime":"2021-08-11 21:30:36","codes":[{"authorDate":"2021-08-11 21:30:36","commitOrder":5,"curCode":"    public void testExecuteVerboseItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"test-id\", \"mock\", null, ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, null, new CompoundProcessor(processor, processor));\n\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, true, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentVerboseResult.class));\n        SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult) actualItemResponse;\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().size(), equalTo(2));\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(), equalTo(\"test-id\"));\n        assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(0), pipeline.getId(), ingestDocument);\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(), nullValue());\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(), equalTo(\"test-id\"));\n        assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(1), pipeline.getId(), ingestDocument);\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument().getSourceAndMetadata(),\n            not(sameInstance(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument().getSourceAndMetadata())));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(), nullValue());\n    }\n","date":"2021-08-11 21:30:36","endLine":93,"groupId":"105778","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testExecuteVerboseItem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e4/9f21babe483104e8ee5d87ac6de0510b847e27.src","preCode":"    public void testExecuteVerboseItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"test-id\", \"mock\", null, ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, true, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentVerboseResult.class));\n        SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult) actualItemResponse;\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().size(), equalTo(2));\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(), equalTo(\"test-id\"));\n        assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(0), pipeline.getId(), ingestDocument);\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(), nullValue());\n\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(), equalTo(\"test-id\"));\n        assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(1), pipeline.getId(), ingestDocument);\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument().getSourceAndMetadata(),\n            not(sameInstance(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument().getSourceAndMetadata())));\n        assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(), nullValue());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/ingest/SimulateExecutionServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2021-08-11 21:30:36","commitOrder":5,"curCode":"    public void testExecuteItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"processor_0\", \"mock\", null, ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, null, new CompoundProcessor(processor, processor));\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, false, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentBaseResult.class));\n        SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult) actualItemResponse;\n        assertThat(simulateDocumentBaseResult.getIngestDocument(), equalTo(ingestDocument));\n        assertThat(simulateDocumentBaseResult.getFailure(), nullValue());\n    }\n","date":"2021-08-11 21:30:36","endLine":110,"groupId":"105778","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testExecuteItem","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e4/9f21babe483104e8ee5d87ac6de0510b847e27.src","preCode":"    public void testExecuteItem() throws Exception {\n        TestProcessor processor = new TestProcessor(\"processor_0\", \"mock\", null, ingestDocument -> {});\n        Pipeline pipeline = new Pipeline(\"_id\", \"_description\", version, new CompoundProcessor(processor, processor));\n        CountDownLatch latch = new CountDownLatch(1);\n        AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>();\n        executionService.executeDocument(pipeline, ingestDocument, false, (r, e) -> {\n            holder.set(r);\n            latch.countDown();\n        });\n        latch.await();\n        SimulateDocumentResult actualItemResponse = holder.getAcquire();\n        assertThat(processor.getInvokedCounter(), equalTo(2));\n        assertThat(actualItemResponse, instanceOf(SimulateDocumentBaseResult.class));\n        SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult) actualItemResponse;\n        assertThat(simulateDocumentBaseResult.getIngestDocument(), equalTo(ingestDocument));\n        assertThat(simulateDocumentBaseResult.getFailure(), nullValue());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/ingest/SimulateExecutionServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"498684a696fb2d81689a9c5e51fbc3c370e234f6","commitMessage":"@@@Add support for _meta field to ingest pipelines (#75905)\n\nWe are adding a _meta field to many of our REST APIs so that users can attach whatever metadata they\nwant. The data in this field will not be used by Elasticsearch. This commit add the _meta field to ingest\npipelines.","date":"2021-08-11 21:30:36","modifiedFileCount":"13","status":"M","submitter":"Keith Massey"}]
