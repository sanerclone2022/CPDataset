[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataCreateIndexService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(RoutingService.class).asEagerSingleton();\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","date":"2018-04-26 03:22:53","endLine":264,"groupId":"13178","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9b/aa47fbc2600ec83a5f98bad6e30dfecbbc4295.src","preCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataCreateIndexService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(RoutingService.class).asEagerSingleton();\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/ClusterModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportNodesListShardStoreMetaData.class).asEagerSingleton();\n        bind(GlobalCheckpointSyncAction.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n    }\n","date":"2018-04-26 03:22:53","endLine":225,"groupId":"28087","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/faa0a71fda6c96cc6377bfd5ddf13af9aea489.src","preCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportNodesListShardStoreMetaData.class).asEagerSingleton();\n        bind(GlobalCheckpointSyncAction.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n    }\n","realPath":"server/src/main/java/org/elasticsearch/indices/IndicesModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-09-05 16:48:48","commitOrder":2,"curCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(RoutingService.class).asEagerSingleton();\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","date":"2018-09-05 16:48:48","endLine":285,"groupId":"13178","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/79/96059a099087bb3169017a59e6a2ea040d5838.src","preCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataCreateIndexService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(RoutingService.class).asEagerSingleton();\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/ClusterModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":265,"status":"M"},{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportNodesListShardStoreMetaData.class).asEagerSingleton();\n        bind(GlobalCheckpointSyncAction.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n    }\n","date":"2018-04-26 03:22:53","endLine":225,"groupId":"28087","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/faa0a71fda6c96cc6377bfd5ddf13af9aea489.src","preCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportNodesListShardStoreMetaData.class).asEagerSingleton();\n        bind(GlobalCheckpointSyncAction.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n    }\n","realPath":"server/src/main/java/org/elasticsearch/indices/IndicesModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"}],"commitId":"f00a28a909be71e17f0d1bc4c4a6ee15c5fdd0cb","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-05 16:48:48","modifiedFileCount":"122","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2019-06-11 19:16:01","commitOrder":3,"curCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","date":"2019-06-11 19:16:01","endLine":251,"groupId":"66756","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/448e2be22c90eafcba6bc0e1109d6f4c2f72ae.src","preCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(RoutingService.class).asEagerSingleton();\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/ClusterModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"},{"authorDate":"2018-04-26 03:22:53","commitOrder":3,"curCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportNodesListShardStoreMetaData.class).asEagerSingleton();\n        bind(GlobalCheckpointSyncAction.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n    }\n","date":"2018-04-26 03:22:53","endLine":225,"groupId":"28087","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/faa0a71fda6c96cc6377bfd5ddf13af9aea489.src","preCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportNodesListShardStoreMetaData.class).asEagerSingleton();\n        bind(GlobalCheckpointSyncAction.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n    }\n","realPath":"server/src/main/java/org/elasticsearch/indices/IndicesModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"}],"commitId":"ddedf80c063206e9b93df5cf681d35e654e564ef","commitMessage":"@@@Defer reroute when nodes join (#42855)\n\nToday the master eagerly reroutes the cluster as part of processing node joins.\nHowever.  it is not necessary to do this reroute straight away.  and it is\nsometimes preferable to defer it until later. For instance.  when the master\nwins its election it processes joins and performs a reroute.  but it would be\nbetter to defer the reroute until after the master has become properly\nestablished.\n\nThis change defers this reroute into a separate task.  and batches multiple such\ntasks together.","date":"2019-06-11 19:16:01","modifiedFileCount":"14","status":"M","submitter":"David Turner"},{"authorTime":"2019-07-03 02:52:59","codes":[{"authorDate":"2019-06-11 19:16:01","commitOrder":4,"curCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","date":"2019-06-11 19:16:01","endLine":251,"groupId":"66756","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/448e2be22c90eafcba6bc0e1109d6f4c2f72ae.src","preCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/ClusterModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"N"},{"authorDate":"2019-07-03 02:52:59","commitOrder":4,"curCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportNodesListShardStoreMetaData.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n    }\n","date":"2019-07-03 02:52:59","endLine":248,"groupId":"28087","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fa/1fa35588ec0d748f49e7fe3730c30b3a95e04e.src","preCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportNodesListShardStoreMetaData.class).asEagerSingleton();\n        bind(GlobalCheckpointSyncAction.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n    }\n","realPath":"server/src/main/java/org/elasticsearch/indices/IndicesModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"}],"commitId":"d1c6fb865dd7109fdbe6c187ff6cb20acacb97f7","commitMessage":"@@@Convert replication calls from action.execute to nodeclient (#43834)\n\nReplication relies on some internal actions to do local replication\noperations. This commit converts these actions to registered transport\nactions so NodeClient can be used.\n","date":"2019-07-03 02:52:59","modifiedFileCount":"10","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2019-07-11 05:46:05","codes":[{"authorDate":"2019-06-11 19:16:01","commitOrder":5,"curCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","date":"2019-06-11 19:16:01","endLine":251,"groupId":"66756","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/448e2be22c90eafcba6bc0e1109d6f4c2f72ae.src","preCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/ClusterModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"N"},{"authorDate":"2019-07-11 05:46:05","commitOrder":5,"curCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n    }\n","date":"2019-07-11 05:46:05","endLine":246,"groupId":"69487","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b1/67c30e32c6e4175ee68f7a9373e189086c2018.src","preCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportNodesListShardStoreMetaData.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n    }\n","realPath":"server/src/main/java/org/elasticsearch/indices/IndicesModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"}],"commitId":"61de092679b8c2aed166b8e058df248a33608f06","commitMessage":"@@@Remove remaining TransportAction.execute calls from gateway code (#44095)\n\nThis commit removes most of the remaining direct execute calls.  mostly\nin gateway code. They are replaced with registering the actions as\ninternal actions.\n\nrelates #43881\n","date":"2019-07-11 05:46:05","modifiedFileCount":"25","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2019-11-22 03:57:38","codes":[{"authorDate":"2019-06-11 19:16:01","commitOrder":6,"curCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","date":"2019-06-11 19:16:01","endLine":251,"groupId":"66756","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/448e2be22c90eafcba6bc0e1109d6f4c2f72ae.src","preCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/ClusterModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"N"},{"authorDate":"2019-11-22 03:57:38","commitOrder":6,"curCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n        bind(RetentionLeaseSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseBackgroundSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseSyncer.class).asEagerSingleton();\n    }\n","date":"2019-11-22 03:57:38","endLine":247,"groupId":"69487","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/75/84fda21c329403e0d603e6f80faf75434221b3.src","preCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n    }\n","realPath":"server/src/main/java/org/elasticsearch/indices/IndicesModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"}],"commitId":"7754e626ce739e4b38660aa776990e4bf4e537bc","commitMessage":"@@@Use retention lease in peer recovery of closed indices (#48430)\n\nToday we do not use retention leases in peer recovery for closed indices \nbecause we can't sync retention leases on closed indices. This change\nallows that ability and adjusts peer recovery to use retention leases\nfor all indices with soft-deletes enabled.\n\nRelates #45136\n\n\nCo-authored-by: David Turner <david.turner@elastic.co>","date":"2019-11-22 03:57:38","modifiedFileCount":"16","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2020-01-16 22:43:07","codes":[{"authorDate":"2019-06-11 19:16:01","commitOrder":7,"curCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","date":"2019-06-11 19:16:01","endLine":251,"groupId":"66756","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/448e2be22c90eafcba6bc0e1109d6f4c2f72ae.src","preCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/ClusterModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"N"},{"authorDate":"2020-01-16 22:43:07","commitOrder":7,"curCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n        bind(RetentionLeaseSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseBackgroundSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseSyncer.class).asEagerSingleton();\n    }\n","date":"2020-01-16 22:43:07","endLine":245,"groupId":"69487","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/12/14103dd69c050f23c67b8287d828c58a298224.src","preCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(SyncedFlushService.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n        bind(RetentionLeaseSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseBackgroundSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseSyncer.class).asEagerSingleton();\n    }\n","realPath":"server/src/main/java/org/elasticsearch/indices/IndicesModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"09b46c86463a3628dd216e33d23c5fb9495a047c","commitMessage":"@@@Goodbye and thank you synced flush! (#50882)\n\nSynced flush was a brilliant idea. It supports instant recoveries with a \nquite small implementation. However.  with the presence of sequence\nnumbers and retention leases.  it is no longer needed. This change\nremoves it from 8.0.\n\nRelates #5077","date":"2020-01-16 22:43:07","modifiedFileCount":"29","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2020-01-16 22:43:07","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":8,"curCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetadataDeleteIndexService.class).asEagerSingleton();\n        bind(MetadataIndexStateService.class).asEagerSingleton();\n        bind(MetadataMappingService.class).asEagerSingleton();\n        bind(MetadataIndexAliasesService.class).asEagerSingleton();\n        bind(MetadataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetadataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","date":"2020-04-01 03:52:01","endLine":267,"groupId":"66756","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b8/3e15ee8e60c369bebbef345b457d5a23cd9e95.src","preCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetaDataDeleteIndexService.class).asEagerSingleton();\n        bind(MetaDataIndexStateService.class).asEagerSingleton();\n        bind(MetaDataMappingService.class).asEagerSingleton();\n        bind(MetaDataIndexAliasesService.class).asEagerSingleton();\n        bind(MetaDataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetaDataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/ClusterModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"M"},{"authorDate":"2020-01-16 22:43:07","commitOrder":8,"curCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n        bind(RetentionLeaseSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseBackgroundSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseSyncer.class).asEagerSingleton();\n    }\n","date":"2020-01-16 22:43:07","endLine":245,"groupId":"69487","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/12/14103dd69c050f23c67b8287d828c58a298224.src","preCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n        bind(RetentionLeaseSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseBackgroundSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseSyncer.class).asEagerSingleton();\n    }\n","realPath":"server/src/main/java/org/elasticsearch/indices/IndicesModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"N"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"},{"authorTime":"2020-01-16 22:43:07","codes":[{"authorDate":"2021-02-12 02:55:14","commitOrder":9,"curCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetadataDeleteIndexService.class).toInstance(metadataDeleteIndexService);\n        bind(MetadataIndexStateService.class).asEagerSingleton();\n        bind(MetadataMappingService.class).asEagerSingleton();\n        bind(MetadataIndexAliasesService.class).asEagerSingleton();\n        bind(MetadataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetadataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","date":"2021-02-12 02:55:14","endLine":277,"groupId":"66756","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/54/fb1d20a80a0ad779b348692716cabc3863bd6a.src","preCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetadataDeleteIndexService.class).asEagerSingleton();\n        bind(MetadataIndexStateService.class).asEagerSingleton();\n        bind(MetadataMappingService.class).asEagerSingleton();\n        bind(MetadataIndexAliasesService.class).asEagerSingleton();\n        bind(MetadataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetadataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/ClusterModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"M"},{"authorDate":"2020-01-16 22:43:07","commitOrder":9,"curCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n        bind(RetentionLeaseSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseBackgroundSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseSyncer.class).asEagerSingleton();\n    }\n","date":"2020-01-16 22:43:07","endLine":245,"groupId":"69487","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/12/14103dd69c050f23c67b8287d828c58a298224.src","preCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n        bind(RetentionLeaseSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseBackgroundSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseSyncer.class).asEagerSingleton();\n    }\n","realPath":"server/src/main/java/org/elasticsearch/indices/IndicesModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"N"}],"commitId":"3f6472de748d9d7dff66c6ccacea57c08b539b7e","commitMessage":"@@@Introduce \"Feature States\" for managing snapshots of system indices (#63513)\n\nThis PR expands the meaning of `include_global_state` for snapshots to include system indices. If `include_global_state` is `true` on creation.  system indices will be included in the snapshot regardless of the contents of the `indices` field. If `include_global_state` is `true` on restoration.  system indices will be restored (if included in the snapshot).  regardless of the contents of the `indices` field. Index renaming is not applied to system indices.  as system indices rely on their names matching certain patterns. If restored system indices are already present.  they are automatically deleted prior to restoration from the snapshot to avoid conflicts.\n\nThis behavior can be overridden to an extent by including a new field in the snapshot creation or restoration call.  `feature_states`.  which contains an array of strings indicating the \"feature\" for which system indices should be snapshotted or restored. For example.  this call will only restore the `watcher` and `security` system indices (in addition to `index_1`):\n\n```\nPOST /_snapshot/my_repository/snapshot_2/_restore\n{\n  \"indices\": \"index_1\". \n  \"include_global_state\": true. \n  \"feature_states\": [\"watcher\".  \"security\"]\n}\n```\n\nIf `feature_states` is present.  the system indices associated with those features will be snapshotted or restored regardless of the value of `include_global_state`. All system indices can be omitted by providing a special value of `none` (`\"feature_states\": [\"none\"]`).  or included by omitting the field or explicitly providing an empty array (`\"feature_states\": []`).  similar to the `indices` field.\n\nThe list of currently available features can be retrieved via a new \"Get Snapshottable Features\" API:\n```\nGET /_snapshottable_features\n```\n\nwhich returns a response of the form:\n```\n{\n    \"features\": [\n        {\n            \"name\": \"tasks\". \n            \"description\": \"Manages task results\"\n        }. \n        {\n            \"name\": \"kibana\". \n            \"description\": \"Manages Kibana configuration and reports\"\n        }\n    ]\n}\n```\n\nFeatures currently map one-to-one with `SystemIndexPlugin`s.  but this should be considered an implementation detail. The Get Snapshottable Features API and snapshot creation rely upon all relevant plugins being installed on the master node.\n\nFurther.  the list of feature states included in a given snapshot is exposed by the Get Snapshot API.  which now includes a new field.  `feature_states`.  which contains a list of the feature states and their associated system indices which are included in the snapshot. All system indices in feature states are also included in the `indices` array for backwards compatibility.  although explicitly requesting system indices included in a feature state is deprecated. For example.  an excerpt from the Get Snapshot API showing `feature_states`:\n```\n\"feature_states\": [\n    {\n        \"feature_name\": \"tasks\". \n        \"indices\": [\n            \".tasks\"\n        ]\n    }\n]. \n\"indices\": [\n    \".tasks\". \n    \"test1\". \n    \"test2\"\n]\n```\n\nCo-authored-by: William Brafford <william.brafford@elastic.co>","date":"2021-02-12 02:55:14","modifiedFileCount":"79","status":"M","submitter":"Gordon Brown"},{"authorTime":"2020-01-16 22:43:07","codes":[{"authorDate":"2021-02-15 20:22:09","commitOrder":10,"curCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetadataDeleteIndexService.class).toInstance(metadataDeleteIndexService);\n        bind(MetadataIndexStateService.class).asEagerSingleton();\n        bind(MetadataMappingService.class).asEagerSingleton();\n        bind(MetadataIndexAliasesService.class).asEagerSingleton();\n        bind(MetadataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetadataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","date":"2021-02-15 20:22:09","endLine":275,"groupId":"107687","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5a/36413be9d2f9dcd9e319adffb12dc5244d3474.src","preCode":"    protected void configure() {\n        bind(GatewayAllocator.class).asEagerSingleton();\n        bind(AllocationService.class).toInstance(allocationService);\n        bind(ClusterService.class).toInstance(clusterService);\n        bind(NodeConnectionsService.class).asEagerSingleton();\n        bind(MetadataDeleteIndexService.class).toInstance(metadataDeleteIndexService);\n        bind(MetadataIndexStateService.class).asEagerSingleton();\n        bind(MetadataMappingService.class).asEagerSingleton();\n        bind(MetadataIndexAliasesService.class).asEagerSingleton();\n        bind(MetadataUpdateSettingsService.class).asEagerSingleton();\n        bind(MetadataIndexTemplateService.class).asEagerSingleton();\n        bind(IndexNameExpressionResolver.class).toInstance(indexNameExpressionResolver);\n        bind(DelayedAllocationService.class).asEagerSingleton();\n        bind(ShardStateAction.class).asEagerSingleton();\n        bind(NodeMappingRefreshAction.class).asEagerSingleton();\n        bind(MappingUpdatedAction.class).asEagerSingleton();\n        bind(TaskResultsService.class).asEagerSingleton();\n        bind(AllocationDeciders.class).toInstance(allocationDeciders);\n        bind(ShardsAllocator.class).toInstance(shardsAllocator);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/ClusterModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"M"},{"authorDate":"2020-01-16 22:43:07","commitOrder":10,"curCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n        bind(RetentionLeaseSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseBackgroundSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseSyncer.class).asEagerSingleton();\n    }\n","date":"2020-01-16 22:43:07","endLine":245,"groupId":"107687","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"configure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/12/14103dd69c050f23c67b8287d828c58a298224.src","preCode":"    protected void configure() {\n        bind(IndicesStore.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(TransportResyncReplicationAction.class).asEagerSingleton();\n        bind(PrimaryReplicaSyncer.class).asEagerSingleton();\n        bind(RetentionLeaseSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseBackgroundSyncAction.class).asEagerSingleton();\n        bind(RetentionLeaseSyncer.class).asEagerSingleton();\n    }\n","realPath":"server/src/main/java/org/elasticsearch/indices/IndicesModule.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"N"}],"commitId":"c6ee6d474efefe7bbf42d1a4d72ff0eed9c90589","commitMessage":"@@@Remove node mapping refresh action (#68909)\n\nThe mapping refresh action was used when every local node used to process mappings.  to eventually ask the master node to refresh its mappings and re-send them to all nodes.\n\nThis is no longer needed and could actually be hiding some unexpected situations that we would like to know about and handle specifically.\n\nThis commit removes the node refresh action which is not expected to be called by any node.  and replaces it with an assertion that verifies that we never end up in a situation where we need a refresh.\n\nAlso.  the received mappings received by any local node are now applied as they are.  without any further merging.  as they were already merged by the master node.","date":"2021-02-15 20:22:09","modifiedFileCount":"10","status":"M","submitter":"Luca Cavanna"}]
