[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query, SearchContext context) throws IOException {\n        \r\n        if (query instanceof IndexOrDocValuesQuery) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            assertEquals(LatLonPoint.newDistanceQuery(queryBuilder.fieldName(),\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(queryBuilder.fieldName(),\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":145,"groupId":"63772","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoDistanceQueryBuilderqueryBuilder@Queryquery@SearchContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ec/a99f95c486bcc28d0211643202d60bf83f76be.src","preCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query, SearchContext context) throws IOException {\n        \r\n        if (query instanceof IndexOrDocValuesQuery) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            assertEquals(LatLonPoint.newDistanceQuery(queryBuilder.fieldName(),\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(queryBuilder.fieldName(),\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoDistanceQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, SearchContext searchContext)\n        throws IOException {\n        QueryShardContext context = searchContext.getQueryShardContext();\n        MappedFieldType fieldType = context.fieldMapper(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (query instanceof IndexOrDocValuesQuery) { \r\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            assertEquals(LatLonPoint.newBoxQuery(queryBuilder.fieldName(),\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(queryBuilder.fieldName(),\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":230,"groupId":"4791","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoBoundingBoxQueryBuilderqueryBuilder@Queryquery@SearchContextsearchContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ae/aca328ceb7b9a5aa2a35aeea87853fffb73d01.src","preCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, SearchContext searchContext)\n        throws IOException {\n        QueryShardContext context = searchContext.getQueryShardContext();\n        MappedFieldType fieldType = context.fieldMapper(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (query instanceof IndexOrDocValuesQuery) { \r\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            assertEquals(LatLonPoint.newBoxQuery(queryBuilder.fieldName(),\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(queryBuilder.fieldName(),\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-19 02:10:12","codes":[{"authorDate":"2018-07-19 02:10:12","commitOrder":2,"curCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query, SearchContext context) throws IOException {\n        \r\n        if (query instanceof IndexOrDocValuesQuery) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        }\n    }\n","date":"2018-07-19 02:10:12","endLine":148,"groupId":"63772","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoDistanceQueryBuilderqueryBuilder@Queryquery@SearchContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7b/7a1dcb7a58e5035b5d4eaac0f0d92691a726a1.src","preCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query, SearchContext context) throws IOException {\n        \r\n        if (query instanceof IndexOrDocValuesQuery) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            assertEquals(LatLonPoint.newDistanceQuery(queryBuilder.fieldName(),\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(queryBuilder.fieldName(),\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoDistanceQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"},{"authorDate":"2018-07-19 02:10:12","commitOrder":2,"curCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, SearchContext searchContext)\n        throws IOException {\n        QueryShardContext context = searchContext.getQueryShardContext();\n        MappedFieldType fieldType = context.fieldMapper(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (query instanceof IndexOrDocValuesQuery) { \r\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        }\n    }\n","date":"2018-07-19 02:10:12","endLine":234,"groupId":"4791","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoBoundingBoxQueryBuilderqueryBuilder@Queryquery@SearchContextsearchContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/d075af21a27e3928f4c9e0d0202107b9f4819b.src","preCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, SearchContext searchContext)\n        throws IOException {\n        QueryShardContext context = searchContext.getQueryShardContext();\n        MappedFieldType fieldType = context.fieldMapper(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (query instanceof IndexOrDocValuesQuery) { \r\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            assertEquals(LatLonPoint.newBoxQuery(queryBuilder.fieldName(),\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(queryBuilder.fieldName(),\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"M"}],"commitId":"a019e723b5475f0ca77063dab45fbcccd1d6559a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-19 02:10:12","modifiedFileCount":"121","status":"M","submitter":"Tal Levy"},{"authorTime":"2019-09-24 01:37:15","codes":[{"authorDate":"2019-09-24 01:37:15","commitOrder":3,"curCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query, QueryShardContext context) throws IOException {\n        \r\n        if (query instanceof IndexOrDocValuesQuery) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        }\n    }\n","date":"2019-09-24 01:37:15","endLine":146,"groupId":"63772","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoDistanceQueryBuilderqueryBuilder@Queryquery@QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/b8211463ea520f284c82083202ca33a549640a.src","preCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query, SearchContext context) throws IOException {\n        \r\n        if (query instanceof IndexOrDocValuesQuery) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoDistanceQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2019-09-24 01:37:15","commitOrder":3,"curCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, QueryShardContext context)\n        throws IOException {\n        MappedFieldType fieldType = context.fieldMapper(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (query instanceof IndexOrDocValuesQuery) { \r\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        }\n    }\n","date":"2019-09-24 01:37:15","endLine":227,"groupId":"4791","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoBoundingBoxQueryBuilderqueryBuilder@Queryquery@QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4b/49746c795112a554b8a2d6fe00c946a075fcb2.src","preCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, SearchContext searchContext)\n        throws IOException {\n        QueryShardContext context = searchContext.getQueryShardContext();\n        MappedFieldType fieldType = context.fieldMapper(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (query instanceof IndexOrDocValuesQuery) { \r\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"4414fccb2765dd24895216636e68aabea2d156ca","commitMessage":"@@@Replace SearchContext with QueryShardContext in query builder tests (#46978)\n\nThis commit replaces the SearchContext used in AbstractQueryTestCase with\na QueryShardContext in order to reduce the visibility of search contexts.\n\nRelates #46523","date":"2019-09-24 01:37:15","modifiedFileCount":"57","status":"M","submitter":"Jim Ferenczi"},{"authorTime":"2020-10-07 22:11:53","codes":[{"authorDate":"2019-09-24 01:37:15","commitOrder":4,"curCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query, QueryShardContext context) throws IOException {\n        \r\n        if (query instanceof IndexOrDocValuesQuery) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        }\n    }\n","date":"2019-09-24 01:37:15","endLine":146,"groupId":"63772","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoDistanceQueryBuilderqueryBuilder@Queryquery@QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/b8211463ea520f284c82083202ca33a549640a.src","preCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query, QueryShardContext context) throws IOException {\n        \r\n        if (query instanceof IndexOrDocValuesQuery) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoDistanceQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"N"},{"authorDate":"2020-10-07 22:11:53","commitOrder":4,"curCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, QueryShardContext context)\n        throws IOException {\n        MappedFieldType fieldType = context.getFieldType(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (query instanceof IndexOrDocValuesQuery) { \r\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        }\n    }\n","date":"2020-10-07 22:11:53","endLine":227,"groupId":"4791","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoBoundingBoxQueryBuilderqueryBuilder@Queryquery@QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c4/fa6a3cc237141b9dcb4351f26177ce05c59d50.src","preCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, QueryShardContext context)\n        throws IOException {\n        MappedFieldType fieldType = context.fieldMapper(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (query instanceof IndexOrDocValuesQuery) { \r\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"95582da9a57086c1bf519b300ffc420d03448e28","commitMessage":"@@@Rename QueryShardContext#fieldMapper to getFieldType (#63399)\n\nGiven that we have a class called `FieldMapper` and that the `fieldMapper` method exposed by `QueryShardContext` actually allows to get a `MappedFieldType` given its name.  this commit renames such method to `getFieldType`","date":"2020-10-07 22:11:53","modifiedFileCount":"72","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-10-29 14:30:53","codes":[{"authorDate":"2020-10-29 14:30:53","commitOrder":5,"curCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query, QueryShardContext context) throws IOException {\n        final MappedFieldType fieldType = context.getFieldType(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (fieldType instanceof GeoPointFieldMapper.GeoPointFieldType) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        } else {\n            assertEquals(GeoShapeFieldMapper.GeoShapeFieldType.class, fieldType.getClass());\n        }\n    }\n","date":"2020-10-29 14:30:53","endLine":153,"groupId":"63772","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoDistanceQueryBuilderqueryBuilder@Queryquery@QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8b/ba3a69675408ad4aa956c6e1099107ebce1a47.src","preCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query, QueryShardContext context) throws IOException {\n        \r\n        if (query instanceof IndexOrDocValuesQuery) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoDistanceQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2020-10-29 14:30:53","commitOrder":5,"curCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, QueryShardContext context)\n        throws IOException {\n        final MappedFieldType fieldType = context.getFieldType(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (fieldType instanceof GeoPointFieldMapper.GeoPointFieldType) {\n            assertEquals(IndexOrDocValuesQuery.class, query.getClass());\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        } else {\n            assertEquals(GeoShapeFieldMapper.GeoShapeFieldType.class, fieldType.getClass());\n        }\n    }\n","date":"2020-10-29 14:30:53","endLine":232,"groupId":"4791","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoBoundingBoxQueryBuilderqueryBuilder@Queryquery@QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a8/ca282d7a64e8617c0af6941faf4efdfb970d77.src","preCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, QueryShardContext context)\n        throws IOException {\n        MappedFieldType fieldType = context.getFieldType(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (query instanceof IndexOrDocValuesQuery) { \r\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"}],"commitId":"b72be253a92029649a7babf59858c4bb6a6ba653","commitMessage":"@@@Enable geo_distance and geo_bounding_box queries on geo_shape field type (#64224)\n\n","date":"2020-10-29 14:30:53","modifiedFileCount":"4","status":"M","submitter":"Ignacio Vera"},{"authorTime":"2021-01-15 01:11:59","codes":[{"authorDate":"2021-01-15 01:11:59","commitOrder":6,"curCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query,\n                                       SearchExecutionContext context) throws IOException {\n        final MappedFieldType fieldType = context.getFieldType(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (fieldType instanceof GeoPointFieldMapper.GeoPointFieldType) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        } else {\n            assertEquals(GeoShapeFieldMapper.GeoShapeFieldType.class, fieldType.getClass());\n        }\n    }\n","date":"2021-01-15 01:11:59","endLine":154,"groupId":"103365","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoDistanceQueryBuilderqueryBuilder@Queryquery@SearchExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/18/9da776756ba39d077327e289b52fa3203b596a.src","preCode":"    protected void doAssertLuceneQuery(GeoDistanceQueryBuilder queryBuilder, Query query, QueryShardContext context) throws IOException {\n        final MappedFieldType fieldType = context.getFieldType(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (fieldType instanceof GeoPointFieldMapper.GeoPointFieldType) {\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowDistanceQuery(expectedFieldName,\n                    queryBuilder.point().lat(),\n                    queryBuilder.point().lon(),\n                    queryBuilder.distance()),\n                    dvQuery);\n        } else {\n            assertEquals(GeoShapeFieldMapper.GeoShapeFieldType.class, fieldType.getClass());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoDistanceQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2021-01-15 01:11:59","commitOrder":6,"curCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, SearchExecutionContext context)\n        throws IOException {\n        final MappedFieldType fieldType = context.getFieldType(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (fieldType instanceof GeoPointFieldMapper.GeoPointFieldType) {\n            assertEquals(IndexOrDocValuesQuery.class, query.getClass());\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        } else {\n            assertEquals(GeoShapeFieldMapper.GeoShapeFieldType.class, fieldType.getClass());\n        }\n    }\n","date":"2021-01-15 01:11:59","endLine":232,"groupId":"103365","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doAssertLuceneQuery","params":"(GeoBoundingBoxQueryBuilderqueryBuilder@Queryquery@SearchExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ba/264dc6b579aade3ff175ec4d939dab9786fc21.src","preCode":"    protected void doAssertLuceneQuery(GeoBoundingBoxQueryBuilder queryBuilder, Query query, QueryShardContext context)\n        throws IOException {\n        final MappedFieldType fieldType = context.getFieldType(queryBuilder.fieldName());\n        if (fieldType == null) {\n            assertTrue(\"Found no indexed geo query.\", query instanceof MatchNoDocsQuery);\n        } else if (fieldType instanceof GeoPointFieldMapper.GeoPointFieldType) {\n            assertEquals(IndexOrDocValuesQuery.class, query.getClass());\n            Query indexQuery = ((IndexOrDocValuesQuery) query).getIndexQuery();\n            String expectedFieldName = expectedFieldName(queryBuilder.fieldName());\n            assertEquals(LatLonPoint.newBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), indexQuery);\n            Query dvQuery = ((IndexOrDocValuesQuery) query).getRandomAccessQuery();\n            assertEquals(LatLonDocValuesField.newSlowBoxQuery(expectedFieldName,\n                    queryBuilder.bottomRight().lat(),\n                    queryBuilder.topLeft().lat(),\n                    queryBuilder.topLeft().lon(),\n                    queryBuilder.bottomRight().lon()), dvQuery);\n        } else {\n            assertEquals(GeoShapeFieldMapper.GeoShapeFieldType.class, fieldType.getClass());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"}],"commitId":"5852fbedf52c77b0a76c2c731fdd4982fb65cd87","commitMessage":"@@@Rename QueryShardContext -> SearchExecutionContext. (#67490)\n\nWe decided to rename `QueryShardContext` to clarify that it supports all parts\nof search request execution. Before there was confusion over whether it should\nonly be used for building queries.  or maybe only used in the query phase. This\nPR also updates the javadocs.\n\nCloses #64740.","date":"2021-01-15 01:11:59","modifiedFileCount":"357","status":"M","submitter":"Julie Tibshirani"}]
