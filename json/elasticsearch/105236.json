[{"authorTime":"2018-09-07 17:59:10","codes":[{"authorDate":"2018-09-07 17:59:10","commitOrder":1,"curCode":"    public void testNoDocs() throws IOException {\n        MultiValuesSourceFieldConfig valueConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"value_field\").build();\n        MultiValuesSourceFieldConfig weightConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"weight_field\").build();\n        WeightedAvgAggregationBuilder aggregationBuilder = new WeightedAvgAggregationBuilder(\"_name\")\n            .value(valueConfig)\n            .weight(weightConfig);\n        testCase(new MatchAllDocsQuery(), aggregationBuilder, iw -> {\n            \r\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n        });\n    }\n","date":"2018-09-07 17:59:10","endLine":67,"groupId":"25847","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/38/36f0cc2ae14402dd98b589c5915ac1c693e6d1.src","preCode":"    public void testNoDocs() throws IOException {\n        MultiValuesSourceFieldConfig valueConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"value_field\").build();\n        MultiValuesSourceFieldConfig weightConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"weight_field\").build();\n        WeightedAvgAggregationBuilder aggregationBuilder = new WeightedAvgAggregationBuilder(\"_name\")\n            .value(valueConfig)\n            .weight(weightConfig);\n        testCase(new MatchAllDocsQuery(), aggregationBuilder, iw -> {\n            \r\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n        });\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/WeightedAvgAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2018-09-07 17:59:10","commitOrder":1,"curCode":"    public void testNoMatchingField() throws IOException {\n        testCase(new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 7)));\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 3)));\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n        });\n    }\n","date":"2018-09-07 17:59:10","endLine":65,"groupId":"4256","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoMatchingField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b8/3acfcba80ec91e70b1c5e73902b82986e1b0d9.src","preCode":"    public void testNoMatchingField() throws IOException {\n        testCase(new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 7)));\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 3)));\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n        });\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/AvgAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"}],"commitId":"017ffe5d127ce0fb33feb8fc4e5fededb8cbfda1","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-07 17:59:10","modifiedFileCount":"370","status":"B","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2019-01-23 01:38:55","codes":[{"authorDate":"2019-01-23 01:38:55","commitOrder":2,"curCode":"    public void testNoDocs() throws IOException {\n        MultiValuesSourceFieldConfig valueConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"value_field\").build();\n        MultiValuesSourceFieldConfig weightConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"weight_field\").build();\n        WeightedAvgAggregationBuilder aggregationBuilder = new WeightedAvgAggregationBuilder(\"_name\")\n            .value(valueConfig)\n            .weight(weightConfig);\n        testCase(new MatchAllDocsQuery(), aggregationBuilder, iw -> {\n            \r\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n            assertFalse(AggregationInspectionHelper.hasValue(avg));\n        });\n    }\n","date":"2019-01-23 01:38:55","endLine":69,"groupId":"25847","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/027208b104b4be0cfb9e381396675e4b63944e.src","preCode":"    public void testNoDocs() throws IOException {\n        MultiValuesSourceFieldConfig valueConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"value_field\").build();\n        MultiValuesSourceFieldConfig weightConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"weight_field\").build();\n        WeightedAvgAggregationBuilder aggregationBuilder = new WeightedAvgAggregationBuilder(\"_name\")\n            .value(valueConfig)\n            .weight(weightConfig);\n        testCase(new MatchAllDocsQuery(), aggregationBuilder, iw -> {\n            \r\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n        });\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/WeightedAvgAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2019-01-23 01:38:55","commitOrder":2,"curCode":"    public void testNoMatchingField() throws IOException {\n        testCase(new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 7)));\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 3)));\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n            assertFalse(AggregationInspectionHelper.hasValue(avg));\n        });\n    }\n","date":"2019-01-23 01:38:55","endLine":65,"groupId":"4256","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoMatchingField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3e/86571ae45e9d19260671ede6e494de64789c22.src","preCode":"    public void testNoMatchingField() throws IOException {\n        testCase(new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 7)));\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 3)));\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n        });\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/AvgAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"2ba9e361aba7df6e9c0b5fa8fae3d219d50ddf09","commitMessage":"@@@Add helper classes to determine if aggs have a value (#36020)\n\nThis adds a set of helper classes to determine if an agg \"has a value\". \nThis is needed because InternalAggs represent \"empty\" in different \nmanners according to convention. Some use `NaN`.  `+/- Inf`.  `0.0`.  etc.\n\nA user can pass the Internal agg type to one of these helper methods\nand it will report if the agg contains a value or not.  which allows the\nuser to differentiate \"empty\" from a real `NaN`.\n\nThese helpers are best-effort in some cases.  For example.  several\npipeline aggs share a single return class but use different conventions\nto mark \"empty\".  so the helper uses the loosest definition that applies\nto all the aggs that use the class.\n\nSums in particular are unreliable.  The InternalSum simply returns 0.0\nif the agg is empty (which is correct.  no values == sum of zero).  But this\nalso means the helper cannot differentiate from \"empty\" and `+1 + -1`.","date":"2019-01-23 01:38:55","modifiedFileCount":"45","status":"M","submitter":"Zachary Tong"},{"authorTime":"2020-04-29 21:24:07","codes":[{"authorDate":"2019-01-23 01:38:55","commitOrder":3,"curCode":"    public void testNoDocs() throws IOException {\n        MultiValuesSourceFieldConfig valueConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"value_field\").build();\n        MultiValuesSourceFieldConfig weightConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"weight_field\").build();\n        WeightedAvgAggregationBuilder aggregationBuilder = new WeightedAvgAggregationBuilder(\"_name\")\n            .value(valueConfig)\n            .weight(weightConfig);\n        testCase(new MatchAllDocsQuery(), aggregationBuilder, iw -> {\n            \r\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n            assertFalse(AggregationInspectionHelper.hasValue(avg));\n        });\n    }\n","date":"2019-01-23 01:38:55","endLine":69,"groupId":"105236","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/027208b104b4be0cfb9e381396675e4b63944e.src","preCode":"    public void testNoDocs() throws IOException {\n        MultiValuesSourceFieldConfig valueConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"value_field\").build();\n        MultiValuesSourceFieldConfig weightConfig = new MultiValuesSourceFieldConfig.Builder().setFieldName(\"weight_field\").build();\n        WeightedAvgAggregationBuilder aggregationBuilder = new WeightedAvgAggregationBuilder(\"_name\")\n            .value(valueConfig)\n            .weight(weightConfig);\n        testCase(new MatchAllDocsQuery(), aggregationBuilder, iw -> {\n            \r\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n            assertFalse(AggregationInspectionHelper.hasValue(avg));\n        });\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/WeightedAvgAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"N"},{"authorDate":"2020-04-29 21:24:07","commitOrder":3,"curCode":"    public void testNoMatchingField() throws IOException {\n        testAggregation(new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 7)));\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 3)));\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n            assertFalse(AggregationInspectionHelper.hasValue(avg));\n        });\n    }\n","date":"2020-04-29 21:24:07","endLine":152,"groupId":"105236","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoMatchingField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7a/69afd8a29e9decc184845469d3fb9f1a0411d6.src","preCode":"    public void testNoMatchingField() throws IOException {\n        testCase(new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 7)));\n            iw.addDocument(singleton(new SortedNumericDocValuesField(\"wrong_number\", 3)));\n        }, avg -> {\n            assertEquals(Double.NaN, avg.getValue(), 0);\n            assertFalse(AggregationInspectionHelper.hasValue(avg));\n        });\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/AvgAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"ceb6e6227fb48cf6986f1124014df4cbc6f82a40","commitMessage":"@@@Modified searchAndReduce() to return empty agg when no docs exist  (#55826)\n\nModified AggregatorTestCase.searchAndReduce() method so that it returns an empty aggregation result when no documents have been inserted.\n\nAlso refactored several aggregation tests so they do not re-implement method AggregatorTestCase.testCase()\n\nFixes #55824","date":"2020-04-29 21:24:07","modifiedFileCount":"12","status":"M","submitter":"Christos Soulios"}]
