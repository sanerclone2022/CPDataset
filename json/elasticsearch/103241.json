[{"authorTime":"2018-10-03 03:43:46","codes":[{"authorDate":"2018-10-03 03:43:46","commitOrder":1,"curCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"keywordfield\")\n                .field(\"type\", \"keyword\")\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .array(\"keywordfield\", \"key1\", \"key2\", \"key3\")\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"keywordfield\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"keywordfield.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","date":"2018-10-03 03:43:46","endLine":239,"groupId":"43297","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testKeywordWithSubCompletionAndContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cc/09ae16c05786def0e7c5d310cecabe617c672d.src","preCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"keywordfield\")\n                .field(\"type\", \"keyword\")\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .array(\"keywordfield\", \"key1\", \"key2\", \"key3\")\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"keywordfield\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"keywordfield.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"B"},{"authorDate":"2018-10-03 03:43:46","commitOrder":1,"curCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"suggest\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                    .startObject()\n                        .field(\"name\",\"place_type\")\n                        .field(\"type\",\"category\")\n                        .field(\"path\",\"cat\")\n                    .endObject()\n                .endArray()\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                        .startObject(\"suggest\")\n                            .array(\"input\",\"timmy\",\"starbucks\")\n                            .startObject(\"contexts\")\n                                .array(\"place_type\",\"cafe\",\"food\")\n                            .endObject()\n                            .field(\"weight\", 3)\n                        .endObject()\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n        assertThat(indexableFields.getFields(\"suggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        assertThat(indexableFields.getFields(\"suggest.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        \r\n    }\n","date":"2018-10-03 03:43:46","endLine":294,"groupId":"72535","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompletionWithContextAndSubCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cc/09ae16c05786def0e7c5d310cecabe617c672d.src","preCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"suggest\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                    .startObject()\n                        .field(\"name\",\"place_type\")\n                        .field(\"type\",\"category\")\n                        .field(\"path\",\"cat\")\n                    .endObject()\n                .endArray()\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                        .startObject(\"suggest\")\n                            .array(\"input\",\"timmy\",\"starbucks\")\n                            .startObject(\"contexts\")\n                                .array(\"place_type\",\"cafe\",\"food\")\n                            .endObject()\n                            .field(\"weight\", 3)\n                        .endObject()\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n        assertThat(indexableFields.getFields(\"suggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        assertThat(indexableFields.getFields(\"suggest.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"B"}],"commitId":"fb907706ecea4c8894075295f0aa148efe01adbf","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-10-03 03:43:46","modifiedFileCount":"70","status":"B","submitter":"Gordon Brown"},{"authorTime":"2018-12-25 03:06:50","codes":[{"authorDate":"2018-12-25 03:06:50","commitOrder":2,"curCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"keywordfield\")\n                .field(\"type\", \"keyword\")\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .array(\"keywordfield\", \"key1\", \"key2\", \"key3\")\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"keywordfield\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"keywordfield.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","date":"2018-12-25 03:06:50","endLine":245,"groupId":"43297","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testKeywordWithSubCompletionAndContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/73/54af17043eb48321afeba35f53991dc2daf421.src","preCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"keywordfield\")\n                .field(\"type\", \"keyword\")\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .array(\"keywordfield\", \"key1\", \"key2\", \"key3\")\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"keywordfield\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"keywordfield.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"},{"authorDate":"2018-12-25 03:06:50","commitOrder":2,"curCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"suggest\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                    .startObject()\n                        .field(\"name\",\"place_type\")\n                        .field(\"type\",\"category\")\n                        .field(\"path\",\"cat\")\n                    .endObject()\n                .endArray()\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                        .startObject(\"suggest\")\n                            .array(\"input\",\"timmy\",\"starbucks\")\n                            .startObject(\"contexts\")\n                                .array(\"place_type\",\"cafe\",\"food\")\n                            .endObject()\n                            .field(\"weight\", 3)\n                        .endObject()\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n        assertThat(indexableFields.getFields(\"suggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        assertThat(indexableFields.getFields(\"suggest.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        \r\n    }\n","date":"2018-12-25 03:06:50","endLine":301,"groupId":"43304","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompletionWithContextAndSubCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/73/54af17043eb48321afeba35f53991dc2daf421.src","preCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"suggest\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                    .startObject()\n                        .field(\"name\",\"place_type\")\n                        .field(\"type\",\"category\")\n                        .field(\"path\",\"cat\")\n                    .endObject()\n                .endArray()\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                        .startObject(\"suggest\")\n                            .array(\"input\",\"timmy\",\"starbucks\")\n                            .startObject(\"contexts\")\n                                .array(\"place_type\",\"cafe\",\"food\")\n                            .endObject()\n                            .field(\"weight\", 3)\n                        .endObject()\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n        assertThat(indexableFields.getFields(\"suggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        assertThat(indexableFields.getFields(\"suggest.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"M"}],"commitId":"7580d9d925d864b25466d693637b3bd3092d44cf","commitMessage":"@@@Make SourceToParse immutable (#36971)\n\nToday the routing of a SourceToParse is assigned in a separate step\nafter the object is created. We can easily forget to set the routing.\nWith this commit.  the routing must be provided in the constructor of\nSourceToParse.\n\nRelates #36921","date":"2018-12-25 03:06:50","modifiedFileCount":"66","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2019-10-15 16:05:29","codes":[{"authorDate":"2019-10-15 16:05:29","commitOrder":3,"curCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"keywordfield\")\n                .field(\"type\", \"keyword\")\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .array(\"keywordfield\", \"key1\", \"key2\", \"key3\")\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"keywordfield\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"keywordfield.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","date":"2019-10-15 16:05:29","endLine":245,"groupId":"43297","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testKeywordWithSubCompletionAndContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/29/f7eeff2ac465015b4cc0f3e42dae1d4ac9cd0b.src","preCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"keywordfield\")\n                .field(\"type\", \"keyword\")\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .array(\"keywordfield\", \"key1\", \"key2\", \"key3\")\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"keywordfield\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"keywordfield.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"},{"authorDate":"2019-10-15 16:05:29","commitOrder":3,"curCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"suggest\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                    .startObject()\n                        .field(\"name\",\"place_type\")\n                        .field(\"type\",\"category\")\n                        .field(\"path\",\"cat\")\n                    .endObject()\n                .endArray()\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                        .startObject(\"suggest\")\n                            .array(\"input\",\"timmy\",\"starbucks\")\n                            .startObject(\"contexts\")\n                                .array(\"place_type\",\"cafe\",\"food\")\n                            .endObject()\n                            .field(\"weight\", 3)\n                        .endObject()\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n        assertThat(indexableFields.getFields(\"suggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        assertThat(indexableFields.getFields(\"suggest.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        \r\n    }\n","date":"2019-10-15 16:05:29","endLine":301,"groupId":"70721","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompletionWithContextAndSubCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/29/f7eeff2ac465015b4cc0f3e42dae1d4ac9cd0b.src","preCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"suggest\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                    .startObject()\n                        .field(\"name\",\"place_type\")\n                        .field(\"type\",\"category\")\n                        .field(\"path\",\"cat\")\n                    .endObject()\n                .endArray()\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                        .startObject(\"suggest\")\n                            .array(\"input\",\"timmy\",\"starbucks\")\n                            .startObject(\"contexts\")\n                                .array(\"place_type\",\"cafe\",\"food\")\n                            .endObject()\n                            .field(\"weight\", 3)\n                        .endObject()\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n        assertThat(indexableFields.getFields(\"suggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        assertThat(indexableFields.getFields(\"suggest.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"M"}],"commitId":"6531369f11d159896957b75a7eae0b7da214d01a","commitMessage":"@@@Don't persist type information to translog (#47229)\n\nWe no longer need to store type information in the translog.  given that an index\ncan only have a single type.\n\nRelates to #41059","date":"2019-10-15 16:05:29","modifiedFileCount":"100","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-09-07 17:10:44","codes":[{"authorDate":"2020-09-07 17:10:44","commitOrder":4,"curCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(b -> {\n            b.field(\"type\", \"keyword\");\n            b.startObject(\"fields\");\n            {\n                b.startObject(\"subsuggest\");\n                {\n                    b.field(\"type\", \"completion\");\n                    b.startArray(\"contexts\");\n                    {\n                        b.startObject();\n                        b.field(\"name\", \"place_type\");\n                        b.field(\"type\", \"category\");\n                        b.field(\"path\", \"cat\");\n                        b.endObject();\n                    }\n                    b.endArray();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(source(b -> b.array(\"field\", \"key1\", \"key2\", \"key3\")));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","date":"2020-09-07 17:10:44","endLine":237,"groupId":"46003","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testKeywordWithSubCompletionAndContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/32/84b0f89502bba64f321e07a5d030ac217efdca.src","preCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"keywordfield\")\n                .field(\"type\", \"keyword\")\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .array(\"keywordfield\", \"key1\", \"key2\", \"key3\")\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"keywordfield\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"keywordfield.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"},{"authorDate":"2020-09-07 17:10:44","commitOrder":4,"curCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(b -> {\n            b.field(\"type\", \"completion\");\n            b.startArray(\"contexts\");\n            {\n                b.startObject();\n                b.field(\"name\", \"place_type\");\n                b.field(\"type\", \"category\");\n                b.field(\"path\", \"cat\");\n                b.endObject();\n            }\n            b.endArray();\n            b.startObject(\"fields\");\n            {\n                b.startObject(\"subsuggest\");\n                {\n                    b.field(\"type\", \"completion\");\n                    b.startArray(\"contexts\");\n                    {\n                        b.startObject();\n                        b.field(\"name\", \"place_type\");\n                        b.field(\"type\", \"category\");\n                        b.field(\"path\", \"cat\");\n                        b.endObject();\n                    }\n                    b.endArray();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        {\n            ParsedDocument parsedDocument = defaultMapper.parse(source(b -> {\n                b.startObject(\"field\");\n                {\n                    b.array(\"input\", \"timmy\", \"starbucks\");\n                    b.startObject(\"contexts\").array(\"place_type\", \"cafe\", \"food\").endObject();\n                    b.field(\"weight\", 3);\n                }\n                b.endObject();\n            }));\n\n            ParseContext.Document indexableFields = parsedDocument.rootDoc();\n            assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            \r\n        }\n\n        {\n            ParsedDocument parsedDocument = defaultMapper.parse(source(b -> {\n                b.array(\"field\", \"timmy\", \"starbucks\");\n                b.array(\"cat\", \"cafe\", \"food\");\n            }));\n\n            ParseContext.Document indexableFields = parsedDocument.rootDoc();\n            assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            \r\n        }\n    }\n","date":"2020-09-07 17:10:44","endLine":312,"groupId":"46002","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompletionWithContextAndSubCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/32/84b0f89502bba64f321e07a5d030ac217efdca.src","preCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n            .startObject(\"suggest\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                    .startObject()\n                        .field(\"name\",\"place_type\")\n                        .field(\"type\",\"category\")\n                        .field(\"path\",\"cat\")\n                    .endObject()\n                .endArray()\n                .startObject(\"fields\")\n                .startObject(\"subsuggest\")\n                    .field(\"type\", \"completion\")\n                    .startArray(\"contexts\")\n                        .startObject()\n                            .field(\"name\",\"place_type\")\n                            .field(\"type\",\"category\")\n                            .field(\"path\",\"cat\")\n                        .endObject()\n                    .endArray()\n                .endObject()\n            .endObject()\n            .endObject().endObject()\n            .endObject().endObject()\n        );\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                        .startObject(\"suggest\")\n                            .array(\"input\",\"timmy\",\"starbucks\")\n                            .startObject(\"contexts\")\n                                .array(\"place_type\",\"cafe\",\"food\")\n                            .endObject()\n                            .field(\"weight\", 3)\n                        .endObject()\n                    .endObject()),\n            XContentType.JSON));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n        assertThat(indexableFields.getFields(\"suggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        assertThat(indexableFields.getFields(\"suggest.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"timmy\"),\n            contextSuggestField(\"starbucks\")\n        ));\n        \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"M"}],"commitId":"98b5204bea55e9368e704c2b8e616e71a453c7b0","commitMessage":"@@@Convert completion.  binary.  boolean tests to MapperTestCase (#62004)\n\nAlso fixes a metadata serialization bug in CompletionFieldMapper.","date":"2020-09-07 17:10:44","modifiedFileCount":"4","status":"M","submitter":"Alan Woodward"},{"authorTime":"2021-05-12 20:50:26","codes":[{"authorDate":"2020-09-07 17:10:44","commitOrder":5,"curCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(b -> {\n            b.field(\"type\", \"keyword\");\n            b.startObject(\"fields\");\n            {\n                b.startObject(\"subsuggest\");\n                {\n                    b.field(\"type\", \"completion\");\n                    b.startArray(\"contexts\");\n                    {\n                        b.startObject();\n                        b.field(\"name\", \"place_type\");\n                        b.field(\"type\", \"category\");\n                        b.field(\"path\", \"cat\");\n                        b.endObject();\n                    }\n                    b.endArray();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(source(b -> b.array(\"field\", \"key1\", \"key2\", \"key3\")));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","date":"2020-09-07 17:10:44","endLine":237,"groupId":"46003","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testKeywordWithSubCompletionAndContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/32/84b0f89502bba64f321e07a5d030ac217efdca.src","preCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(b -> {\n            b.field(\"type\", \"keyword\");\n            b.startObject(\"fields\");\n            {\n                b.startObject(\"subsuggest\");\n                {\n                    b.field(\"type\", \"completion\");\n                    b.startArray(\"contexts\");\n                    {\n                        b.startObject();\n                        b.field(\"name\", \"place_type\");\n                        b.field(\"type\", \"category\");\n                        b.field(\"path\", \"cat\");\n                        b.endObject();\n                    }\n                    b.endArray();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(source(b -> b.array(\"field\", \"key1\", \"key2\", \"key3\")));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"N"},{"authorDate":"2021-05-12 20:50:26","commitOrder":5,"curCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(b -> {\n            b.field(\"type\", \"completion\");\n            b.startArray(\"contexts\");\n            {\n                b.startObject();\n                b.field(\"name\", \"place_type\");\n                b.field(\"type\", \"category\");\n                b.field(\"path\", \"cat\");\n                b.endObject();\n            }\n            b.endArray();\n            b.startObject(\"fields\");\n            {\n                b.startObject(\"subsuggest\");\n                {\n                    b.field(\"type\", \"completion\");\n                    b.startArray(\"contexts\");\n                    {\n                        b.startObject();\n                        b.field(\"name\", \"place_type\");\n                        b.field(\"type\", \"category\");\n                        b.field(\"path\", \"cat\");\n                        b.endObject();\n                    }\n                    b.endArray();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        {\n            ParsedDocument parsedDocument = defaultMapper.parse(source(b -> {\n                b.startObject(\"field\");\n                {\n                    b.array(\"input\", \"timmy\", \"starbucks\");\n                    b.startObject(\"contexts\").array(\"place_type\", \"cafe\", \"food\").endObject();\n                    b.field(\"weight\", 3);\n                }\n                b.endObject();\n            }));\n\n            ParseContext.Document indexableFields = parsedDocument.rootDoc();\n            assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            \r\n            \r\n            try (TokenStream ts = indexableFields.getFields(\"field.subsuggest\")[0].tokenStream(Lucene.WHITESPACE_ANALYZER, null)) {\n                ts.reset();\n                while (ts.incrementToken()) {}\n                ts.end();\n            }\n            \r\n        }\n\n        {\n            ParsedDocument parsedDocument = defaultMapper.parse(source(b -> {\n                b.array(\"field\", \"timmy\", \"starbucks\");\n                b.array(\"cat\", \"cafe\", \"food\");\n            }));\n\n            ParseContext.Document indexableFields = parsedDocument.rootDoc();\n            assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            \r\n        }\n    }\n","date":"2021-05-12 20:50:26","endLine":341,"groupId":"46002","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompletionWithContextAndSubCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/51/f0450ea2edcae60d6877f0ce7829889b2af182.src","preCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(b -> {\n            b.field(\"type\", \"completion\");\n            b.startArray(\"contexts\");\n            {\n                b.startObject();\n                b.field(\"name\", \"place_type\");\n                b.field(\"type\", \"category\");\n                b.field(\"path\", \"cat\");\n                b.endObject();\n            }\n            b.endArray();\n            b.startObject(\"fields\");\n            {\n                b.startObject(\"subsuggest\");\n                {\n                    b.field(\"type\", \"completion\");\n                    b.startArray(\"contexts\");\n                    {\n                        b.startObject();\n                        b.field(\"name\", \"place_type\");\n                        b.field(\"type\", \"category\");\n                        b.field(\"path\", \"cat\");\n                        b.endObject();\n                    }\n                    b.endArray();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        {\n            ParsedDocument parsedDocument = defaultMapper.parse(source(b -> {\n                b.startObject(\"field\");\n                {\n                    b.array(\"input\", \"timmy\", \"starbucks\");\n                    b.startObject(\"contexts\").array(\"place_type\", \"cafe\", \"food\").endObject();\n                    b.field(\"weight\", 3);\n                }\n                b.endObject();\n            }));\n\n            ParseContext.Document indexableFields = parsedDocument.rootDoc();\n            assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            \r\n        }\n\n        {\n            ParsedDocument parsedDocument = defaultMapper.parse(source(b -> {\n                b.array(\"field\", \"timmy\", \"starbucks\");\n                b.array(\"cat\", \"cafe\", \"food\");\n            }));\n\n            ParseContext.Document indexableFields = parsedDocument.rootDoc();\n            assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            \r\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"}],"commitId":"4528e780c48ada91fd452b9c51dc1a37772c5f07","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n\n# Conflicts:\n#\tx-pack/plugin/spatial/build.gradle\n#\tx-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/SpatialPlugin.java\n","date":"2021-05-12 20:50:26","modifiedFileCount":"564","status":"M","submitter":"iverase"},{"authorTime":"2021-06-24 16:56:30","codes":[{"authorDate":"2021-06-24 16:56:30","commitOrder":6,"curCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(b -> {\n            b.field(\"type\", \"keyword\");\n            b.startObject(\"fields\");\n            {\n                b.startObject(\"subsuggest\");\n                {\n                    b.field(\"type\", \"completion\");\n                    b.startArray(\"contexts\");\n                    {\n                        b.startObject();\n                        b.field(\"name\", \"place_type\");\n                        b.field(\"type\", \"category\");\n                        b.field(\"path\", \"cat\");\n                        b.endObject();\n                    }\n                    b.endArray();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(source(b -> b.array(\"field\", \"key1\", \"key2\", \"key3\")));\n\n        LuceneDocument indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","date":"2021-06-24 16:56:30","endLine":259,"groupId":"103241","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testKeywordWithSubCompletionAndContext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fb/023449dfc922a36dae842aa69c9f1411026f39.src","preCode":"    public void testKeywordWithSubCompletionAndContext() throws Exception {\n\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(b -> {\n            b.field(\"type\", \"keyword\");\n            b.startObject(\"fields\");\n            {\n                b.startObject(\"subsuggest\");\n                {\n                    b.field(\"type\", \"completion\");\n                    b.startArray(\"contexts\");\n                    {\n                        b.startObject();\n                        b.field(\"name\", \"place_type\");\n                        b.field(\"type\", \"category\");\n                        b.field(\"path\", \"cat\");\n                        b.endObject();\n                    }\n                    b.endArray();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        ParsedDocument parsedDocument = defaultMapper.parse(source(b -> b.array(\"field\", \"key1\", \"key2\", \"key3\")));\n\n        ParseContext.Document indexableFields = parsedDocument.rootDoc();\n\n        assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n            keywordField(\"key1\"),\n            sortedSetDocValuesField(\"key1\"),\n            keywordField(\"key2\"),\n            sortedSetDocValuesField(\"key2\"),\n            keywordField(\"key3\"),\n            sortedSetDocValuesField(\"key3\")\n        ));\n        assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n            contextSuggestField(\"key1\"),\n            contextSuggestField(\"key2\"),\n            contextSuggestField(\"key3\")\n        ));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2021-06-24 16:56:30","commitOrder":6,"curCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(b -> {\n            b.field(\"type\", \"completion\");\n            b.startArray(\"contexts\");\n            {\n                b.startObject();\n                b.field(\"name\", \"place_type\");\n                b.field(\"type\", \"category\");\n                b.field(\"path\", \"cat\");\n                b.endObject();\n            }\n            b.endArray();\n            b.startObject(\"fields\");\n            {\n                b.startObject(\"subsuggest\");\n                {\n                    b.field(\"type\", \"completion\");\n                    b.startArray(\"contexts\");\n                    {\n                        b.startObject();\n                        b.field(\"name\", \"place_type\");\n                        b.field(\"type\", \"category\");\n                        b.field(\"path\", \"cat\");\n                        b.endObject();\n                    }\n                    b.endArray();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        {\n            ParsedDocument parsedDocument = defaultMapper.parse(source(b -> {\n                b.startObject(\"field\");\n                {\n                    b.array(\"input\", \"timmy\", \"starbucks\");\n                    b.startObject(\"contexts\").array(\"place_type\", \"cafe\", \"food\").endObject();\n                    b.field(\"weight\", 3);\n                }\n                b.endObject();\n            }));\n\n            LuceneDocument indexableFields = parsedDocument.rootDoc();\n            assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            \r\n            \r\n            try (TokenStream ts = indexableFields.getFields(\"field.subsuggest\")[0].tokenStream(Lucene.WHITESPACE_ANALYZER, null)) {\n                ts.reset();\n                while (ts.incrementToken()) {}\n                ts.end();\n            }\n            \r\n        }\n\n        {\n            ParsedDocument parsedDocument = defaultMapper.parse(source(b -> {\n                b.array(\"field\", \"timmy\", \"starbucks\");\n                b.array(\"cat\", \"cafe\", \"food\");\n            }));\n\n            LuceneDocument indexableFields = parsedDocument.rootDoc();\n            assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            \r\n        }\n    }\n","date":"2021-06-24 16:56:30","endLine":341,"groupId":"103241","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompletionWithContextAndSubCompletion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fb/023449dfc922a36dae842aa69c9f1411026f39.src","preCode":"    public void testCompletionWithContextAndSubCompletion() throws Exception {\n\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(b -> {\n            b.field(\"type\", \"completion\");\n            b.startArray(\"contexts\");\n            {\n                b.startObject();\n                b.field(\"name\", \"place_type\");\n                b.field(\"type\", \"category\");\n                b.field(\"path\", \"cat\");\n                b.endObject();\n            }\n            b.endArray();\n            b.startObject(\"fields\");\n            {\n                b.startObject(\"subsuggest\");\n                {\n                    b.field(\"type\", \"completion\");\n                    b.startArray(\"contexts\");\n                    {\n                        b.startObject();\n                        b.field(\"name\", \"place_type\");\n                        b.field(\"type\", \"category\");\n                        b.field(\"path\", \"cat\");\n                        b.endObject();\n                    }\n                    b.endArray();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        {\n            ParsedDocument parsedDocument = defaultMapper.parse(source(b -> {\n                b.startObject(\"field\");\n                {\n                    b.array(\"input\", \"timmy\", \"starbucks\");\n                    b.startObject(\"contexts\").array(\"place_type\", \"cafe\", \"food\").endObject();\n                    b.field(\"weight\", 3);\n                }\n                b.endObject();\n            }));\n\n            ParseContext.Document indexableFields = parsedDocument.rootDoc();\n            assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            \r\n            \r\n            try (TokenStream ts = indexableFields.getFields(\"field.subsuggest\")[0].tokenStream(Lucene.WHITESPACE_ANALYZER, null)) {\n                ts.reset();\n                while (ts.incrementToken()) {}\n                ts.end();\n            }\n            \r\n        }\n\n        {\n            ParsedDocument parsedDocument = defaultMapper.parse(source(b -> {\n                b.array(\"field\", \"timmy\", \"starbucks\");\n                b.array(\"cat\", \"cafe\", \"food\");\n            }));\n\n            ParseContext.Document indexableFields = parsedDocument.rootDoc();\n            assertThat(indexableFields.getFields(\"field\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            assertThat(indexableFields.getFields(\"field.subsuggest\"), arrayContainingInAnyOrder(\n                contextSuggestField(\"timmy\"),\n                contextSuggestField(\"starbucks\")\n            ));\n            \r\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CompletionFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":261,"status":"M"}],"commitId":"7cedc3ec3a109f02f54b9e12a7ca8a3470b67e80","commitMessage":"@@@Make Document a top-level class (#74472)\n\nThere is no reason for Document to be an inner class of ParseContext.  especially as it is public and accessed directly from many different places.\n\nThis commit takes it out to its own top-level class file.  which has the advantage of simplifying ParseContext which could use some love too.\n","date":"2021-06-24 16:56:30","modifiedFileCount":"46","status":"M","submitter":"Luca Cavanna"}]
