[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testIndexBalance() {\n        \n        final float indexBalance = 1.0f;\n        final float replicaBalance = 0.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(), ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new NoopGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes + 1, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n    }\n","date":"2018-04-26 03:22:53","endLine":84,"groupId":"17638","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexBalance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5e/400d95e4b0242a49a023c3db6d6953bcbd6a66.src","preCode":"    public void testIndexBalance() {\n        \n        final float indexBalance = 1.0f;\n        final float replicaBalance = 0.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(), ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new NoopGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes + 1, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceConfigurationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testReplicaBalance() {\n        \n        final float indexBalance = 0.0f;\n        final float replicaBalance = 1.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(), ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new NoopGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), numberOfNodes + 1, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n    }\n","date":"2018-04-26 03:22:53","endLine":109,"groupId":"17638","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReplicaBalance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5e/400d95e4b0242a49a023c3db6d6953bcbd6a66.src","preCode":"    public void testReplicaBalance() {\n        \n        final float indexBalance = 0.0f;\n        final float replicaBalance = 1.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(), ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new NoopGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), numberOfNodes + 1, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceConfigurationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-11-08 03:18:11","codes":[{"authorDate":"2018-11-08 03:18:11","commitOrder":2,"curCode":"    public void testIndexBalance() {\n        \n        final float indexBalance = 1.0f;\n        final float replicaBalance = 0.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new TestGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(),\n            (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n    }\n","date":"2018-11-08 03:18:11","endLine":86,"groupId":"17638","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexBalance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2e/559c64678ac59d0b0cf5429704c3a8c3c7b985.src","preCode":"    public void testIndexBalance() {\n        \n        final float indexBalance = 1.0f;\n        final float replicaBalance = 0.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new NoopGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(),\n            (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceConfigurationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2018-11-08 03:18:11","commitOrder":2,"curCode":"    public void testReplicaBalance() {\n        \n        final float indexBalance = 0.0f;\n        final float replicaBalance = 1.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new TestGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(),\n            (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n    }\n","date":"2018-11-08 03:18:11","endLine":115,"groupId":"17638","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testReplicaBalance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2e/559c64678ac59d0b0cf5429704c3a8c3c7b985.src","preCode":"    public void testReplicaBalance() {\n        \n        final float indexBalance = 0.0f;\n        final float replicaBalance = 1.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new NoopGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(),\n            (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceConfigurationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"f789d49fb35f88fae7d2a966593fa1a34cdbaa54","commitMessage":"@@@Put a fake allocation id on allocate stale primary command (#34140)\n\nremoves fake allocation id after recovery is done\n\nRelates to #33432","date":"2018-11-08 03:18:11","modifiedFileCount":"7","status":"M","submitter":"Vladimir Dolzhenko"},{"authorTime":"2018-12-17 16:20:21","codes":[{"authorDate":"2018-11-08 03:18:11","commitOrder":3,"curCode":"    public void testIndexBalance() {\n        \n        final float indexBalance = 1.0f;\n        final float replicaBalance = 0.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new TestGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(),\n            (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n    }\n","date":"2018-11-08 03:18:11","endLine":86,"groupId":"17638","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexBalance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2e/559c64678ac59d0b0cf5429704c3a8c3c7b985.src","preCode":"    public void testIndexBalance() {\n        \n        final float indexBalance = 1.0f;\n        final float replicaBalance = 0.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new TestGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(),\n            (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceConfigurationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"},{"authorDate":"2018-12-17 16:20:21","commitOrder":3,"curCode":"    public void testReplicaBalance() {\n        \n        final float indexBalance = 0.0f;\n        final float replicaBalance = 1.0f;\n        final float balanceThreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceThreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new TestGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertReplicaBalance(clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceThreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertReplicaBalance(clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceThreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertReplicaBalance(clusterState.getRoutingNodes(),\n            numberOfNodes + 1 - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceThreshold);\n    }\n","date":"2018-12-17 16:20:21","endLine":117,"groupId":"17638","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testReplicaBalance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5c/2bfbadd2165c4e4cf331f14840d6b26199183a.src","preCode":"    public void testReplicaBalance() {\n        \n        final float indexBalance = 0.0f;\n        final float replicaBalance = 1.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new TestGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertReplicaBalance(logger, clusterState.getRoutingNodes(),\n            (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceConfigurationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"e82a647740ae7cbd0529f5a7bf5bd2087a77d834","commitMessage":"@@@TEST: Fix Assertion for Shard Allocation Counts (#36685)\n\n* If removing half the nodes completely removes a shard from the cluster we can't count it in the assertion\n* Also:\n   * Remove unused logger parameter\n   * Fix typo in var name\n* Closes #35365","date":"2018-12-17 16:20:21","modifiedFileCount":"1","status":"M","submitter":"Armin Braun"},{"authorTime":"2018-12-17 16:20:21","codes":[{"authorDate":"2019-06-28 21:47:24","commitOrder":4,"curCode":"    public void testIndexBalance() {\n        \n        final float indexBalance = 1.0f;\n        final float replicaBalance = 0.0f;\n        final float balanceThreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceThreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new TestGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceThreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceThreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(),\n            (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceThreshold);\n    }\n","date":"2019-06-28 21:47:24","endLine":89,"groupId":"102212","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexBalance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ba/18bc0f6d42d059e5e0c331c7463d5f6ce9fbe2.src","preCode":"    public void testIndexBalance() {\n        \n        final float indexBalance = 1.0f;\n        final float replicaBalance = 0.0f;\n        final float balanceTreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceTreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new TestGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertIndexBalance(clusterState.getRoutingTable(), clusterState.getRoutingNodes(),\n            (numberOfNodes + 1) - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceTreshold);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceConfigurationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2018-12-17 16:20:21","commitOrder":4,"curCode":"    public void testReplicaBalance() {\n        \n        final float indexBalance = 0.0f;\n        final float replicaBalance = 1.0f;\n        final float balanceThreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceThreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new TestGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertReplicaBalance(clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceThreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertReplicaBalance(clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceThreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertReplicaBalance(clusterState.getRoutingNodes(),\n            numberOfNodes + 1 - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceThreshold);\n    }\n","date":"2018-12-17 16:20:21","endLine":117,"groupId":"102212","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testReplicaBalance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5c/2bfbadd2165c4e4cf331f14840d6b26199183a.src","preCode":"    public void testReplicaBalance() {\n        \n        final float indexBalance = 0.0f;\n        final float replicaBalance = 1.0f;\n        final float balanceThreshold = 1.0f;\n\n        Settings.Builder settings = Settings.builder();\n        settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\n            ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString());\n        settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(), indexBalance);\n        settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(), replicaBalance);\n        settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(), balanceThreshold);\n\n        AllocationService strategy = createAllocationService(settings.build(), new TestGatewayAllocator());\n\n        ClusterState clusterState = initCluster(strategy);\n        assertReplicaBalance(clusterState.getRoutingNodes(), numberOfNodes, numberOfIndices,\n            numberOfReplicas, numberOfShards, balanceThreshold);\n\n        clusterState = addNode(clusterState, strategy);\n        assertReplicaBalance(clusterState.getRoutingNodes(), numberOfNodes + 1,\n            numberOfIndices, numberOfReplicas, numberOfShards, balanceThreshold);\n\n        clusterState = removeNodes(clusterState, strategy);\n        assertReplicaBalance(clusterState.getRoutingNodes(),\n            numberOfNodes + 1 - (numberOfNodes + 1) / 2, numberOfIndices, numberOfReplicas, numberOfShards, balanceThreshold);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceConfigurationTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"}],"commitId":"88c9ecb0b06c0c1951900e162687fdd8c66bd972","commitMessage":"@@@Fix threshold spelling errors (#43326)\n\nSubstitutes treshold by threshold","date":"2019-06-28 21:47:24","modifiedFileCount":"2","status":"M","submitter":"weizijun"}]
