[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testUnknownFieldClusterMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"meta-data\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        XContentParser parser = createParser(JsonXContent.jsonXContent, metadata);\n        try {\n            MetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":163,"groupId":"47548","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnknownFieldClusterMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3a/83580dc1cdd21bb930048bf9f0a1d909a6ebb1.src","preCode":"    public void testUnknownFieldClusterMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"meta-data\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        XContentParser parser = createParser(JsonXContent.jsonXContent, metadata);\n        try {\n            MetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testUnknownFieldIndexMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"index_name\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        XContentParser parser = createParser(JsonXContent.jsonXContent, metadata);\n        try {\n            IndexMetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":179,"groupId":"47548","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownFieldIndexMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3a/83580dc1cdd21bb930048bf9f0a1d909a6ebb1.src","preCode":"    public void testUnknownFieldIndexMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"index_name\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        XContentParser parser = createParser(JsonXContent.jsonXContent, metadata);\n        try {\n            IndexMetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-06-25 03:39:56","codes":[{"authorDate":"2018-06-25 03:39:56","commitOrder":2,"curCode":"    public void testUnknownFieldClusterMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"meta-data\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            MetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","date":"2018-06-25 16:41:24","endLine":190,"groupId":"47548","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnknownFieldClusterMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/32/dd4324ff83541be83ad23327e52eb067bcb8bb.src","preCode":"    public void testUnknownFieldClusterMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"meta-data\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        XContentParser parser = createParser(JsonXContent.jsonXContent, metadata);\n        try {\n            MetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"},{"authorDate":"2018-06-25 03:39:56","commitOrder":2,"curCode":"    public void testUnknownFieldIndexMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"index_name\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            IndexMetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","date":"2018-06-25 16:41:24","endLine":205,"groupId":"47548","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownFieldIndexMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/32/dd4324ff83541be83ad23327e52eb067bcb8bb.src","preCode":"    public void testUnknownFieldIndexMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"index_name\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        XContentParser parser = createParser(JsonXContent.jsonXContent, metadata);\n        try {\n            IndexMetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"M"}],"commitId":"e6dc01d2b7d36b6d2a6aa11289afb70c9568c986","commitMessage":"@@@Close xcontent parsers (partial) (#31513)\n\nPartial pass at closing XContentParsers in server.  This mostly involved adding try-with-resources statements around the usage of XContentParsers.","date":"2018-06-25 16:41:24","modifiedFileCount":"53","status":"M","submitter":"Tom Callahan"},{"authorTime":"2018-06-25 03:39:56","codes":[{"authorDate":"2019-12-10 16:45:27","commitOrder":3,"curCode":"    public void testUnknownFieldClusterMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"meta-data\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            MetaData.Builder.fromXContent(parser, randomBoolean());\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","date":"2019-12-10 16:45:27","endLine":373,"groupId":"47548","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnknownFieldClusterMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7d/2b10beb327993fd0d58821bfdfe25e55875014.src","preCode":"    public void testUnknownFieldClusterMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"meta-data\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            MetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":360,"status":"M"},{"authorDate":"2018-06-25 03:39:56","commitOrder":3,"curCode":"    public void testUnknownFieldIndexMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"index_name\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            IndexMetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","date":"2018-06-25 16:41:24","endLine":205,"groupId":"47548","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownFieldIndexMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/32/dd4324ff83541be83ad23327e52eb067bcb8bb.src","preCode":"    public void testUnknownFieldIndexMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"index_name\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            IndexMetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"N"}],"commitId":"678aeb747ea0a09c2ac96f4fae6697ec3b8a8adf","commitMessage":"@@@Make elasticsearch-node tools custom metadata-aware (#48390)\n\nThe elasticsearch-node tools allow manipulating the on-disk cluster state. The tool is currently\nunaware of plugins and will therefore drop custom metadata from the cluster state once the\nstate is written out again (as it skips over the custom metadata that it can't read). This commit\npreserves unknown customs when editing on-disk metadata through the elasticsearch-node\ncommand-line tools.","date":"2019-12-10 16:45:27","modifiedFileCount":"14","status":"M","submitter":"Yannick Welsch"},{"authorTime":"2018-06-25 03:39:56","codes":[{"authorDate":"2020-03-25 00:21:39","commitOrder":4,"curCode":"    public void testUnknownFieldClusterMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"meta-data\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            MetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","date":"2020-03-25 00:21:39","endLine":407,"groupId":"47548","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnknownFieldClusterMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/21/d4fe4ef32593d010020ddc5dea9a6e354cef9e.src","preCode":"    public void testUnknownFieldClusterMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"meta-data\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            MetaData.Builder.fromXContent(parser, randomBoolean());\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"M"},{"authorDate":"2018-06-25 03:39:56","commitOrder":4,"curCode":"    public void testUnknownFieldIndexMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"index_name\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            IndexMetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","date":"2018-06-25 16:41:24","endLine":205,"groupId":"47548","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownFieldIndexMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/32/dd4324ff83541be83ad23327e52eb067bcb8bb.src","preCode":"    public void testUnknownFieldIndexMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"index_name\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            IndexMetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":192,"status":"N"}],"commitId":"895b1605f8e5f5f9420a3654eeffb98e9b6be2b6","commitMessage":"@@@Use special XContent registry for node tool (#54050)\n\nFixes an issue where the elasticsearch-node command-line tools would not work correctly\nbecause PersistentTasksCustomMetaData contains named XContent from plugins. This PR\nmakes it so that the parsing for all custom metadata is skipped.  even if the core system would\nknow how to handle it.\n\nCloses #53549","date":"2020-03-25 00:21:39","modifiedFileCount":"14","status":"M","submitter":"Yannick Welsch"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":5,"curCode":"    public void testUnknownFieldClusterMetadata() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"meta-data\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            Metadata.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","date":"2020-04-01 03:52:01","endLine":407,"groupId":"101986","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnknownFieldClusterMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/01/ba7715ecffabe60de58e94cca60980ede6e291.src","preCode":"    public void testUnknownFieldClusterMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"meta-data\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            MetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":394,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":5,"curCode":"    public void testUnknownFieldIndexMetadata() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"index_name\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            IndexMetadata.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","date":"2020-04-01 03:52:01","endLine":422,"groupId":"101986","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownFieldIndexMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/01/ba7715ecffabe60de58e94cca60980ede6e291.src","preCode":"    public void testUnknownFieldIndexMetaData() throws IOException {\n        BytesReference metadata = BytesReference.bytes(JsonXContent.contentBuilder()\n            .startObject()\n                .startObject(\"index_name\")\n                    .field(\"random\", \"value\")\n                .endObject()\n            .endObject());\n        try (XContentParser parser = createParser(JsonXContent.jsonXContent, metadata)) {\n            IndexMetaData.Builder.fromXContent(parser);\n            fail();\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Unexpected field [random]\", e.getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":409,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
