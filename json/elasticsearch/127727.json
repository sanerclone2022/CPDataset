[{"authorTime":"2019-02-06 03:32:41","codes":[{"authorDate":"2018-12-05 00:53:20","commitOrder":4,"curCode":"    public void createEmpty(Version luceneVersion) throws IOException {\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newEmptyIndexWriter(directory, luceneVersion)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(Engine.MAX_UNSAFE_AUTO_ID_TIMESTAMP_COMMIT_ID, \"-1\");\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","date":"2018-12-05 00:53:20","endLine":1419,"groupId":"51068","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createEmpty","params":"(VersionluceneVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/66/e3e4d5558d8c32439e1777267ad1d0a7d54239.src","preCode":"    public void createEmpty(Version luceneVersion) throws IOException {\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newEmptyIndexWriter(directory, luceneVersion)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(Engine.MAX_UNSAFE_AUTO_ID_TIMESTAMP_COMMIT_ID, \"-1\");\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/store/Store.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1407,"status":"NB"},{"authorDate":"2019-02-06 03:32:41","commitOrder":4,"curCode":"    public void bootstrapNewHistory(long localCheckpoint, long maxSeqNo) throws IOException {\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newAppendingIndexWriter(directory, null)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(localCheckpoint));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(maxSeqNo));\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","date":"2019-02-06 03:32:41","endLine":1456,"groupId":"28270","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bootstrapNewHistory","params":"(longlocalCheckpoint@longmaxSeqNo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/73/ac8a65d300753bb130ebb15e51abb650231abb.src","preCode":"    public void bootstrapNewHistory(long localCheckpoint, long maxSeqNo) throws IOException {\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newAppendingIndexWriter(directory, null)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(localCheckpoint));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(maxSeqNo));\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/store/Store.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1445,"status":"B"}],"commitId":"c2a8fe1f91e2cec7c930463f65987df4e4c094bf","commitMessage":"@@@Prevent CCR recovery from missing documents (#38237)\n\nCurrently the snapshot/restore process manually sets the global\ncheckpoint to the max sequence number from the restored segements. This\ndoes not work for Ccr as this will lead to documents that would be\nrecovered in the normal followering operation from being recovered.\n\nThis commit fixes this issue by setting the initial global checkpoint to\nthe existing local checkpoint.","date":"2019-02-06 03:32:41","modifiedFileCount":"9","status":"M","submitter":"Tim Brooks"},{"authorTime":"2019-02-06 03:32:41","codes":[{"authorDate":"2020-12-04 06:02:42","commitOrder":5,"curCode":"    public void createEmpty() throws IOException {\n        Version luceneVersion = indexSettings.getIndexVersionCreated().luceneVersion;\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newEmptyIndexWriter(directory, luceneVersion)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(Engine.MAX_UNSAFE_AUTO_ID_TIMESTAMP_COMMIT_ID, \"-1\");\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","date":"2020-12-04 06:02:42","endLine":1412,"groupId":"51068","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a8/45a4765010962d7fc67af01cfc854d3f5e8fe6.src","preCode":"    public void createEmpty(Version luceneVersion) throws IOException {\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newEmptyIndexWriter(directory, luceneVersion)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(Engine.MAX_UNSAFE_AUTO_ID_TIMESTAMP_COMMIT_ID, \"-1\");\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/store/Store.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1399,"status":"M"},{"authorDate":"2019-02-06 03:32:41","commitOrder":5,"curCode":"    public void bootstrapNewHistory(long localCheckpoint, long maxSeqNo) throws IOException {\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newAppendingIndexWriter(directory, null)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(localCheckpoint));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(maxSeqNo));\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","date":"2019-02-06 03:32:41","endLine":1456,"groupId":"28270","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bootstrapNewHistory","params":"(longlocalCheckpoint@longmaxSeqNo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/73/ac8a65d300753bb130ebb15e51abb650231abb.src","preCode":"    public void bootstrapNewHistory(long localCheckpoint, long maxSeqNo) throws IOException {\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newAppendingIndexWriter(directory, null)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(localCheckpoint));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(maxSeqNo));\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/store/Store.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1445,"status":"N"}],"commitId":"ac18f24124bba3e3536d73ab81a06c3fb389c361","commitMessage":"@@@Avoid passing Lucene version to Store#createEmpty. (#65783)\n\nStore already holds onto index settings.  so it can look up the version directly.\nThis helps consolidate version checks in a smaller number of places.","date":"2020-12-04 06:02:42","modifiedFileCount":"9","status":"M","submitter":"Julie Tibshirani"},{"authorTime":"2021-04-27 19:31:29","codes":[{"authorDate":"2021-04-27 19:31:29","commitOrder":6,"curCode":"    public void createEmpty() throws IOException {\n        Version luceneVersion = indexSettings.getIndexVersionCreated().luceneVersion;\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newTemporaryEmptyIndexWriter(directory, luceneVersion)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(Engine.MAX_UNSAFE_AUTO_ID_TIMESTAMP_COMMIT_ID, \"-1\");\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","date":"2021-04-27 19:31:29","endLine":1404,"groupId":"127727","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/44/668de95c111c8e621b47d7f2f12193f4da8496.src","preCode":"    public void createEmpty() throws IOException {\n        Version luceneVersion = indexSettings.getIndexVersionCreated().luceneVersion;\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newEmptyIndexWriter(directory, luceneVersion)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(SequenceNumbers.NO_OPS_PERFORMED));\n            map.put(Engine.MAX_UNSAFE_AUTO_ID_TIMESTAMP_COMMIT_ID, \"-1\");\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/store/Store.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1391,"status":"M"},{"authorDate":"2021-04-27 19:31:29","commitOrder":6,"curCode":"    public void bootstrapNewHistory(long localCheckpoint, long maxSeqNo) throws IOException {\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newTemporaryAppendingIndexWriter(directory, null)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(localCheckpoint));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(maxSeqNo));\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","date":"2021-04-27 19:31:29","endLine":1441,"groupId":"127727","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"bootstrapNewHistory","params":"(longlocalCheckpoint@longmaxSeqNo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/44/668de95c111c8e621b47d7f2f12193f4da8496.src","preCode":"    public void bootstrapNewHistory(long localCheckpoint, long maxSeqNo) throws IOException {\n        metadataLock.writeLock().lock();\n        try (IndexWriter writer = newAppendingIndexWriter(directory, null)) {\n            final Map<String, String> map = new HashMap<>();\n            map.put(Engine.HISTORY_UUID_KEY, UUIDs.randomBase64UUID());\n            map.put(SequenceNumbers.LOCAL_CHECKPOINT_KEY, Long.toString(localCheckpoint));\n            map.put(SequenceNumbers.MAX_SEQ_NO, Long.toString(maxSeqNo));\n            updateCommitData(writer, map);\n        } finally {\n            metadataLock.writeLock().unlock();\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/store/Store.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1430,"status":"M"}],"commitId":"cf360cefb68002fb5871d879f3a07643209904dc","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-04-27 19:31:29","modifiedFileCount":"260","status":"M","submitter":"iverase"}]
