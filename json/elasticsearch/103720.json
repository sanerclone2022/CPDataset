[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testNoAllocationFound() {\n        final RoutingAllocation allocation =\n            routingAllocationWithOnePrimaryNoReplicas(yesAllocationDeciders(), CLUSTER_RECOVERED, \"allocId\");\n        testAllocator.addData(node1, null, randomBoolean());\n        testAllocator.allocateUnassigned(allocation);\n        assertThat(allocation.routingNodesChanged(), equalTo(true));\n        assertThat(allocation.routingNodes().unassigned().ignored().size(), equalTo(1));\n        assertThat(allocation.routingNodes().unassigned().ignored().get(0).shardId(), equalTo(shardId));\n        assertClusterHealthStatus(allocation, ClusterHealthStatus.YELLOW);\n    }\n","date":"2018-04-26 03:22:53","endLine":118,"groupId":"25980","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoAllocationFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e3/687548190a3c41271e5b541d858d53a809dc52.src","preCode":"    public void testNoAllocationFound() {\n        final RoutingAllocation allocation =\n            routingAllocationWithOnePrimaryNoReplicas(yesAllocationDeciders(), CLUSTER_RECOVERED, \"allocId\");\n        testAllocator.addData(node1, null, randomBoolean());\n        testAllocator.allocateUnassigned(allocation);\n        assertThat(allocation.routingNodesChanged(), equalTo(true));\n        assertThat(allocation.routingNodes().unassigned().ignored().size(), equalTo(1));\n        assertThat(allocation.routingNodes().unassigned().ignored().get(0).shardId(), equalTo(shardId));\n        assertClusterHealthStatus(allocation, ClusterHealthStatus.YELLOW);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/PrimaryShardAllocatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testFoundAllocationButThrottlingDecider() {\n        final RoutingAllocation allocation = routingAllocationWithOnePrimaryNoReplicas(throttleAllocationDeciders(), CLUSTER_RECOVERED,\n            \"allocId1\");\n        testAllocator.addData(node1, \"allocId1\", randomBoolean());\n        testAllocator.allocateUnassigned(allocation);\n        assertThat(allocation.routingNodesChanged(), equalTo(true));\n        assertThat(allocation.routingNodes().unassigned().ignored().size(), equalTo(1));\n        assertThat(allocation.routingNodes().unassigned().ignored().get(0).shardId(), equalTo(shardId));\n        assertClusterHealthStatus(allocation, ClusterHealthStatus.YELLOW);\n    }\n","date":"2018-04-26 03:22:53","endLine":304,"groupId":"25980","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFoundAllocationButThrottlingDecider","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e3/687548190a3c41271e5b541d858d53a809dc52.src","preCode":"    public void testFoundAllocationButThrottlingDecider() {\n        final RoutingAllocation allocation = routingAllocationWithOnePrimaryNoReplicas(throttleAllocationDeciders(), CLUSTER_RECOVERED,\n            \"allocId1\");\n        testAllocator.addData(node1, \"allocId1\", randomBoolean());\n        testAllocator.allocateUnassigned(allocation);\n        assertThat(allocation.routingNodesChanged(), equalTo(true));\n        assertThat(allocation.routingNodes().unassigned().ignored().size(), equalTo(1));\n        assertThat(allocation.routingNodes().unassigned().ignored().get(0).shardId(), equalTo(shardId));\n        assertClusterHealthStatus(allocation, ClusterHealthStatus.YELLOW);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/PrimaryShardAllocatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2020-04-06 21:51:05","codes":[{"authorDate":"2020-04-06 21:51:05","commitOrder":2,"curCode":"    public void testNoAllocationFound() {\n        final RoutingAllocation allocation =\n            routingAllocationWithOnePrimaryNoReplicas(yesAllocationDeciders(), CLUSTER_RECOVERED, \"allocId\");\n        testAllocator.addData(node1, null, randomBoolean());\n        allocateAllUnassigned(allocation);\n        assertThat(allocation.routingNodesChanged(), equalTo(true));\n        assertThat(allocation.routingNodes().unassigned().ignored().size(), equalTo(1));\n        assertThat(allocation.routingNodes().unassigned().ignored().get(0).shardId(), equalTo(shardId));\n        assertClusterHealthStatus(allocation, ClusterHealthStatus.YELLOW);\n    }\n","date":"2020-04-06 21:51:05","endLine":126,"groupId":"103720","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoAllocationFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/24/04facdda7301eb4453ff42dcb5e13ee382d239.src","preCode":"    public void testNoAllocationFound() {\n        final RoutingAllocation allocation =\n            routingAllocationWithOnePrimaryNoReplicas(yesAllocationDeciders(), CLUSTER_RECOVERED, \"allocId\");\n        testAllocator.addData(node1, null, randomBoolean());\n        testAllocator.allocateUnassigned(allocation);\n        assertThat(allocation.routingNodesChanged(), equalTo(true));\n        assertThat(allocation.routingNodes().unassigned().ignored().size(), equalTo(1));\n        assertThat(allocation.routingNodes().unassigned().ignored().get(0).shardId(), equalTo(shardId));\n        assertClusterHealthStatus(allocation, ClusterHealthStatus.YELLOW);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/PrimaryShardAllocatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2020-04-06 21:51:05","commitOrder":2,"curCode":"    public void testFoundAllocationButThrottlingDecider() {\n        final RoutingAllocation allocation = routingAllocationWithOnePrimaryNoReplicas(throttleAllocationDeciders(), CLUSTER_RECOVERED,\n            \"allocId1\");\n        testAllocator.addData(node1, \"allocId1\", randomBoolean());\n        allocateAllUnassigned(allocation);\n        assertThat(allocation.routingNodesChanged(), equalTo(true));\n        assertThat(allocation.routingNodes().unassigned().ignored().size(), equalTo(1));\n        assertThat(allocation.routingNodes().unassigned().ignored().get(0).shardId(), equalTo(shardId));\n        assertClusterHealthStatus(allocation, ClusterHealthStatus.YELLOW);\n    }\n","date":"2020-04-06 21:51:05","endLine":320,"groupId":"103720","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFoundAllocationButThrottlingDecider","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/24/04facdda7301eb4453ff42dcb5e13ee382d239.src","preCode":"    public void testFoundAllocationButThrottlingDecider() {\n        final RoutingAllocation allocation = routingAllocationWithOnePrimaryNoReplicas(throttleAllocationDeciders(), CLUSTER_RECOVERED,\n            \"allocId1\");\n        testAllocator.addData(node1, \"allocId1\", randomBoolean());\n        testAllocator.allocateUnassigned(allocation);\n        assertThat(allocation.routingNodesChanged(), equalTo(true));\n        assertThat(allocation.routingNodes().unassigned().ignored().size(), equalTo(1));\n        assertThat(allocation.routingNodes().unassigned().ignored().get(0).shardId(), equalTo(shardId));\n        assertClusterHealthStatus(allocation, ClusterHealthStatus.YELLOW);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/PrimaryShardAllocatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"M"}],"commitId":"f6feb6c2c845aaab31cec4b4047c77c2caf85b89","commitMessage":"@@@Merge feature/searchable-snapshots branch into master (#54803)\n\nThis commit merges the searchable-snapshots feature branch into master.\nSee #54803 for the complete list of squashed commits.\n\nCo-authored-by: David Turner <david.turner@elastic.co>\nCo-authored-by: Yannick Welsch <yannick@welsch.lu>\nCo-authored-by: Lee Hinman <dakrone@users.noreply.github.com>\nCo-authored-by: Andrei Dan <andrei.dan@elastic.co>","date":"2020-04-06 21:51:05","modifiedFileCount":"73","status":"M","submitter":"Tanguy Leroux"}]
