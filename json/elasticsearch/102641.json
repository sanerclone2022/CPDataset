[{"authorTime":"2018-08-03 19:25:38","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public void testOperationsDelayedIfBlock() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n            assertFalse(future.isDone());\n        }\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","date":"2018-04-26 03:22:53","endLine":211,"groupId":"33538","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testOperationsDelayedIfBlock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/27/d08b76c03104807701389fdef28733e6069fad.src","preCode":"    public void testOperationsDelayedIfBlock() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n            assertFalse(future.isDone());\n        }\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"NB"},{"authorDate":"2018-08-03 19:25:38","commitOrder":2,"curCode":"    public void testGetBlockWhenBlocked() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        final CountDownLatch blockAcquired = new CountDownLatch(1);\n        final CountDownLatch releaseBlock = new CountDownLatch(1);\n        final AtomicBoolean blocked = new AtomicBoolean();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n\n            permits.asyncBlockOperations(\n                30,\n                TimeUnit.MINUTES,\n                () -> {\n                    blocked.set(true);\n                    blockAcquired.countDown();\n                    releaseBlock.await();\n                },\n                e -> {\n                    throw new RuntimeException(e);\n                });\n            assertFalse(blocked.get());\n            assertFalse(future.isDone());\n        }\n        blockAcquired.await();\n        assertTrue(blocked.get());\n        assertFalse(future.isDone());\n        releaseBlock.countDown();\n\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","date":"2018-08-03 19:25:38","endLine":243,"groupId":"33538","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetBlockWhenBlocked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/23/337def2ae1b89bcf9da4c58d718278f15e83f6.src","preCode":"    public void testGetBlockWhenBlocked() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        final CountDownLatch blockAcquired = new CountDownLatch(1);\n        final CountDownLatch releaseBlock = new CountDownLatch(1);\n        final AtomicBoolean blocked = new AtomicBoolean();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n\n            permits.asyncBlockOperations(\n                30,\n                TimeUnit.MINUTES,\n                () -> {\n                    blocked.set(true);\n                    blockAcquired.countDown();\n                    releaseBlock.await();\n                },\n                e -> {\n                    throw new RuntimeException(e);\n                });\n            assertFalse(blocked.get());\n            assertFalse(future.isDone());\n        }\n        blockAcquired.await();\n        assertTrue(blocked.get());\n        assertFalse(future.isDone());\n        releaseBlock.countDown();\n\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"B"}],"commitId":"20915a9bafddf627fc65c182780379e2e0790b9a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n\nclient/rest-high-level/src/main/java/org/elasticsearch/client/XPackClien\nt.java\n/Users/colings86/dev/work/git/elasticsearch/.git/worktrees/elasticsearch\n-ilm/MERGE_HEAD\n\nclient/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLe\nvelClient.java\nclient/rest-high-level/src/main/java/org/elasticsearch/client/XPackClien\nt.java\nclient/rest-high-level/src/test/java/org/elasticsearch/client/IndexLifec\nycleIT.java\nclient/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLe\nvelClientTests.java\nclient/rest-high-level/src/test/java/org/elasticsearch/client/WatcherIT.\njava\nclient/rest-high-level/src/test/java/org/elasticsearch/client/documentat\nion/LicensingDocumentationIT.java\nclient/rest-high-level/src/test/java/org/elasticsearch/client/documentat\nion/WatcherDocumentationIT.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.\njava\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/Def.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/FunctionR\nef.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessE\nxplainError.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/ScriptCla\nssInfo.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/antlr/Enh\nancedPainlessLexer.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/lookup/Pa\ninlessLookup.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/EExp\nlicit.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/EFun\nctionRef.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/EIns\ntanceof.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/ELam\nbda.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/ELis\ntInit.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/EMap\nInit.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/ENew\nArray.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/ENew\nObj.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/ESta\ntic.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/PCal\nlInvoke.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/PFie\nld.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/PSub\nListShortcut.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/PSub\nMapShortcut.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/SCat\nch.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/SDec\nlaration.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/SEac\nh.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFun\nction.java\nmodules/lang-painless/src/main/java/org/elasticsearch/painless/node/SSub\nEachIterable.java\nmodules/lang-painless/src/test/java/org/elasticsearch/painless/OverloadT\nests.java\nmodules/lang-painless/src/test/java/org/elasticsearch/painless/PainlessD\nocGenerator.java\nmodules/lang-painless/src/test/java/org/elasticsearch/painless/RegexTest\ns.java\nmodules/lang-painless/src/test/java/org/elasticsearch/painless/node/Node\nToStringTests.java\nrest-api-spec/src/main/resources/rest-api-spec/test/cluster.stats/10_bas\nic.yml\nserver/src/main/java/org/elasticsearch/action/admin/cluster/stats/Cluste\nrStatsResponse.java\nserver/src/main/java/org/elasticsearch/action/admin/cluster/stats/Transp\nortClusterStatsAction.java\nserver/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAct\nion.java\nserver/src/main/java/org/elasticsearch/action/support/replication/Transp\nortReplicationAction.java\nserver/src/main/java/org/elasticsearch/index/engine/Engine.java\nserver/src/main/java/org/elasticsearch/index/engine/InternalEngine.java\nserver/src/main/java/org/elasticsearch/index/seqno/ReplicationTracker.ja\nva\nserver/src/main/java/org/elasticsearch/index/shard/IndexShard.java\nserver/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPe\nrmits.java\nserver/src/main/java/org/elasticsearch/index/shard/PrimaryReplicaSyncer.\njava\nserver/src/main/java/org/elasticsearch/index/shard/StoreRecovery.java\nserver/src/main/java/org/elasticsearch/index/translog/Translog.java\nserver/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHa\nndler.java\nserver/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.j\nava\nserver/src/test/java/org/elasticsearch/action/bulk/TransportShardBulkAct\nionTests.java\nserver/src/test/java/org/elasticsearch/action/search/SearchAsyncActionTe\nsts.java\nserver/src/test/java/org/elasticsearch/action/support/replication/Transp\nortReplicationActionTests.java\nserver/src/test/java/org/elasticsearch/action/support/replication/Transp\nortWriteActionTests.java\nserver/src/test/java/org/elasticsearch/cluster/routing/allocation/ShardS\ntateIT.java\nserver/src/test/java/org/elasticsearch/index/replication/IndexLevelRepli\ncationTests.java\nserver/src/test/java/org/elasticsearch/index/replication/RecoveryDuringR\neplicationTests.java\nserver/src/test/java/org/elasticsearch/index/seqno/ReplicationTrackerTes\nts.java\nserver/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPe\nrmitsTests.java\nserver/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java\nserver/src/test/java/org/elasticsearch/index/shard/IndexingOperationList\nenerTests.java\nserver/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerT\nests.java\nserver/src/test/java/org/elasticsearch/index/translog/TranslogTests.java\nserver/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHa\nndlerTests.java\nserver/src/test/java/org/elasticsearch/indices/recovery/RecoveryTests.ja\nva\nserver/src/test/java/org/elasticsearch/search/profile/query/QueryProfile\nrIT.java\ntest/framework/src/main/java/org/elasticsearch/index/replication/ESIndex\nLevelReplicationTestCase.java\ntest/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTes\ntCase.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job\n/MetricConfig.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/rollup/job\n/RollupJobConfig.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/S\necurityContext.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/U\nserSettings.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/a\nction/user/AuthenticateResponse.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/a\nction/user/ChangePasswordRequestBuilder.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/a\nction/user/GetUsersResponse.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/a\nction/user/PutUserRequestBuilder.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/a\nuthc/Authentication.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/a\nuthc/AuthenticationResult.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/a\nuthc/Realm.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/a\nuthz/RoleDescriptor.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/a\nuthz/accesscontrol/SecurityIndexSearcherWrapper.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/s\nupport/MetadataUtils.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/u\nser/AnonymousUser.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/u\nser/BeatsSystemUser.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/u\nser/ElasticUser.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/u\nser/InternalUserSerializationHelper.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/u\nser/KibanaUser.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/u\nser/LogstashSystemUser.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/u\nser/SystemUser.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/u\nser/XPackSecurityUser.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/u\nser/XPackUser.java\nx-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/rollup/Con\nfigTestHelpers.java\nx-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/rollup/job\n/MetricsConfigSerializingTests.java ->\nx-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/rollup/job\n/MetricConfigSerializingTests.java\nx-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/security/a\nuthz/accesscontrol/SecurityIndexSearcherWrapperUnitTests.java\nx-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitorin\ng/collector/cluster/ClusterStatsMonitoringDocTests.java\nx-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/Rollup\nJobIdentifierUtilTests.java\nx-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/Rollup\nRequestTranslationTests.java\nx-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/action\n/SearchActionTests.java\nx-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/config\n/ConfigTests.java\nx-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/job/In\ndexerUtilsTests.java\nx-pack/plugin/rollup/src/test/java/org/elasticsearch/xpack/rollup/job/Ro\nllupIndexerIndexingTests.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/ac\ntion/saml/TransportSamlLogoutAction.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/ac\ntion/user/TransportAuthenticateAction.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/ac\ntion/user/TransportGetUsersAction.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/ac\ntion/user/TransportHasPrivilegesAction.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\ndit/AuditTrail.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\ndit/AuditTrailService.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\ndit/index/IndexAuditTrail.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\ndit/logfile/LoggingAuditTrail.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/AuthenticationService.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/esnative/NativeRealm.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/esnative/NativeUsersStore.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/esnative/ReservedRealm.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/esnative/UserAndPassword.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/file/FileRealm.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/file/FileUserPasswdStore.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/kerberos/KerberosRealm.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/ldap/LdapRealm.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/pki/PkiRealm.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/saml/SamlRealm.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthc/support/CachingUsernamePasswordRealm.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthz/AuthorizationService.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/au\nthz/AuthorizedIndices.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/in\ngest/SetSecurityUserProcessor.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/re\nst/action/RestAuthenticateAction.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/re\nst/action/user/RestChangePasswordAction.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/re\nst/action/user/RestGetUsersAction.java\nx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/tr\nansport/ServerTransportFilter.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/integration/Clear\nRealmsCacheTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/Se\ncurityContextTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/filter/SecurityActionFilterTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/interceptor/IndicesAliasesRequestInterceptorTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/interceptor/ResizeRequestInterceptorTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/saml/TransportSamlInvalidateSessionActionTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/saml/TransportSamlLogoutActionTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/user/TransportAuthenticateActionTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/user/TransportChangePasswordActionTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/user/TransportDeleteUserActionTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/user/TransportGetUsersActionTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/user/TransportHasPrivilegesActionTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/user/TransportPutUserActionTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/ac\ntion/user/TransportSetEnabledActionTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\ndit/AuditTrailServiceTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\ndit/index/IndexAuditTrailMutedTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\ndit/index/IndexAuditTrailTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\ndit/logfile/LoggingAuditTrailFilterTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\ndit/logfile/LoggingAuditTrailTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/AuthenticationServiceTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/RealmsTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/TokenServiceTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/UserTokenTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/esnative/NativeRealmIntegTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/esnative/NativeUsersStoreTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/esnative/ReservedRealmTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/file/FileRealmTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/file/FileUserPasswdStoreTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/kerberos/KerberosRealmAuthenticateFailedTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/kerberos/KerberosRealmCacheTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/kerberos/KerberosRealmTestCase.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/kerberos/KerberosRealmTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/ldap/ActiveDirectoryRealmTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/ldap/CancellableLdapRunnableTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/ldap/LdapRealmTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/pki/PkiRealmTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/support/CachingUsernamePasswordRealmTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthc/support/mapper/NativeRoleMappingStoreTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthz/AuthorizationServiceTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthz/AuthorizationUtilsTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthz/AuthorizedIndicesTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthz/IndicesAndAliasesResolverTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/au\nthz/SecuritySearchOperationListenerTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/in\ngest/SetSecurityUserProcessorTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/tr\nansport/SecurityServerTransportInterceptorTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/tr\nansport/ServerTransportFilterTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/us\ner/AnonymousUserTests.java\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/us\ner/UserTests.java ->\nx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/us\ner/UserSerializationTests.java\nx-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/f\nunction/scalar/string/StringFunctionUtils.java\nx-pack/plugin/watcher/src/test/java/org/elasticsearch/xpack/watcher/exec\nution/ExecutionServiceTests.java\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/DefaultDetectorDescription.java\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/DetectionRule.java\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/Detector.java\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/DetectorFunction.java\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/FilterRef.java\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/MlFilter.java\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/Operator.java\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/RuleAction.java\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/RuleCondition.java\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/RuleScope.java\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/ml/packag\ne-info.java\nx-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/u\nser/User.java ->\nx-pack/protocol/src/main/java/org/elasticsearch/protocol/xpack/security/\nUser.java\nx-pack/protocol/src/test/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/DetectionRuleTests.java\nx-pack/protocol/src/test/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/DetectorTests.java\nx-pack/protocol/src/test/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/FilterRefTests.java\nx-pack/protocol/src/test/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/MlFilterTests.java\nx-pack/protocol/src/test/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/RuleConditionTests.java\nx-pack/protocol/src/test/java/org/elasticsearch/protocol/xpack/ml/job/co\nnfig/RuleScopeTests.java\nx-pack/protocol/src/test/java/org/elasticsearch/protocol/xpack/security/\nUserTests.java\nx-pack/qa/rolling-upgrade/src/test/java/org/elasticsearch/upgrades/Watch\nerRestartIT.java\nx-pack/qa/rolling-upgrade/src/test/resources/rest-api-spec/test/mixed_cl\nuster/60_watcher.yml\nx-pack/qa/rolling-upgrade/src/test/resources/rest-api-spec/test/old_clus\nter/60_watcher.yml\nx-pack/qa/rolling-upgrade/src/test/resources/rest-api-spec/test/upgraded\n_cluster/60_watcher.yml\nx-pack/qa/security-example-spi-extension/src/main/java/org/elasticsearch\n/example/realm/CustomRealm.java\nx-pack/qa/security-example-spi-extension/src/test/java/org/elasticsearch\n/example/realm/CustomRealmTests.java\nx-pack/qa/security-migrate-tests/src/test/java/org/elasticsearch/xpack/s\necurity/MigrateToolIT.java\n","date":"2018-08-03 19:25:38","modifiedFileCount":"179","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-11-08 16:23:33","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":3,"curCode":"    public void testOperationsDelayedIfBlock() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n            assertFalse(future.isDone());\n        }\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","date":"2018-04-26 03:22:53","endLine":211,"groupId":"33538","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testOperationsDelayedIfBlock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/27/d08b76c03104807701389fdef28733e6069fad.src","preCode":"    public void testOperationsDelayedIfBlock() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n            assertFalse(future.isDone());\n        }\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"N"},{"authorDate":"2018-11-08 16:23:33","commitOrder":3,"curCode":"    public void testGetBlockWhenBlocked() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        final CountDownLatch blockAcquired = new CountDownLatch(1);\n        final CountDownLatch releaseBlock = new CountDownLatch(1);\n        final AtomicBoolean blocked = new AtomicBoolean();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n\n            permits.asyncBlockOperations(wrap(() -> {\n                blocked.set(true);\n                blockAcquired.countDown();\n                releaseBlock.await();\n            }), 30, TimeUnit.MINUTES);\n            assertFalse(blocked.get());\n            assertFalse(future.isDone());\n        }\n        blockAcquired.await();\n        assertTrue(blocked.get());\n        assertFalse(future.isDone());\n        releaseBlock.countDown();\n\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","date":"2018-11-08 16:23:33","endLine":239,"groupId":"33538","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetBlockWhenBlocked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a7/85c2c4d8224f2d36fee3cb00c9ef50a85cf9f7.src","preCode":"    public void testGetBlockWhenBlocked() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        final CountDownLatch blockAcquired = new CountDownLatch(1);\n        final CountDownLatch releaseBlock = new CountDownLatch(1);\n        final AtomicBoolean blocked = new AtomicBoolean();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n\n            permits.asyncBlockOperations(\n                30,\n                TimeUnit.MINUTES,\n                () -> {\n                    blocked.set(true);\n                    blockAcquired.countDown();\n                    releaseBlock.await();\n                },\n                e -> {\n                    throw new RuntimeException(e);\n                });\n            assertFalse(blocked.get());\n            assertFalse(future.isDone());\n        }\n        blockAcquired.await();\n        assertTrue(blocked.get());\n        assertFalse(future.isDone());\n        releaseBlock.countDown();\n\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"}],"commitId":"1703a61fec098ce57749bf5ba932dbeb6560a387","commitMessage":"@@@[RCI] Add IndexShardOperationPermits.asyncBlockOperations(ActionListener<Releasable>) (#34902)\n\nThe current implementation of asyncBlockOperations() can be used to\nexecute some code once all indexing operations permits have been acquired. \n then releases all permits immediately after the code execution. This\n immediate release is not suitable for treatments that need to keep all\n permits over multiple execution steps.\n\nThis commit adds a new asyncBlockOperations() that exposes a Releasable. \n making it possible to acquire all permits and only release them all\n when needed by closing the Releasable. The existing blockOperations() \nmethod has been modified to delegate permit acquisition/releasing to this new\nmethod.\n\nRelates to #33888","date":"2018-11-08 16:23:33","modifiedFileCount":"3","status":"M","submitter":"Tanguy Leroux"},{"authorTime":"2020-11-23 22:28:19","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":4,"curCode":"    public void testOperationsDelayedIfBlock() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n            assertFalse(future.isDone());\n        }\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","date":"2018-04-26 03:22:53","endLine":211,"groupId":"33538","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testOperationsDelayedIfBlock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/27/d08b76c03104807701389fdef28733e6069fad.src","preCode":"    public void testOperationsDelayedIfBlock() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n            assertFalse(future.isDone());\n        }\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"N"},{"authorDate":"2020-11-23 22:28:19","commitOrder":4,"curCode":"    public void testGetBlockWhenBlocked() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        final CountDownLatch blockAcquired = new CountDownLatch(1);\n        final CountDownLatch releaseBlock = new CountDownLatch(1);\n        final AtomicBoolean blocked = new AtomicBoolean();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n\n            permits.asyncBlockOperations(wrap(() -> {\n                blocked.set(true);\n                blockAcquired.countDown();\n                releaseBlock.await();\n            }), 30, TimeUnit.MINUTES, ThreadPool.Names.GENERIC);\n            assertFalse(blocked.get());\n            assertFalse(future.isDone());\n        }\n        blockAcquired.await();\n        assertTrue(blocked.get());\n        assertFalse(future.isDone());\n        releaseBlock.countDown();\n\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","date":"2020-11-23 22:28:19","endLine":239,"groupId":"33538","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetBlockWhenBlocked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6a/91039a274e888f96c9d4e9d471b20f3790d453.src","preCode":"    public void testGetBlockWhenBlocked() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        final CountDownLatch blockAcquired = new CountDownLatch(1);\n        final CountDownLatch releaseBlock = new CountDownLatch(1);\n        final AtomicBoolean blocked = new AtomicBoolean();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n\n            permits.asyncBlockOperations(wrap(() -> {\n                blocked.set(true);\n                blockAcquired.countDown();\n                releaseBlock.await();\n            }), 30, TimeUnit.MINUTES);\n            assertFalse(blocked.get());\n            assertFalse(future.isDone());\n        }\n        blockAcquired.await();\n        assertTrue(blocked.get());\n        assertFalse(future.isDone());\n        releaseBlock.countDown();\n\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"}],"commitId":"7b8637e3a680af6a3930b2e2fc9f4f1f121bd797","commitMessage":"@@@Make Primary Relocation Not Blocking on Transport Request (#64098)\n\nResolving TODOs about primary relocation blocking on network IO.","date":"2020-11-23 22:28:19","modifiedFileCount":"12","status":"M","submitter":"Armin Braun"},{"authorTime":"2020-11-24 16:48:49","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":5,"curCode":"    public void testOperationsDelayedIfBlock() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n            assertFalse(future.isDone());\n        }\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","date":"2018-04-26 03:22:53","endLine":211,"groupId":"102641","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testOperationsDelayedIfBlock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/27/d08b76c03104807701389fdef28733e6069fad.src","preCode":"    public void testOperationsDelayedIfBlock() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n            assertFalse(future.isDone());\n        }\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"N"},{"authorDate":"2020-11-24 16:48:49","commitOrder":5,"curCode":"    public void testGetBlockWhenBlocked() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        final CountDownLatch blockAcquired = new CountDownLatch(1);\n        final CountDownLatch releaseBlock = new CountDownLatch(1);\n        final AtomicBoolean blocked = new AtomicBoolean();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n\n            permits.blockOperations(wrap(() -> {\n                blocked.set(true);\n                blockAcquired.countDown();\n                releaseBlock.await();\n            }), 30, TimeUnit.MINUTES, ThreadPool.Names.GENERIC);\n            assertFalse(blocked.get());\n            assertFalse(future.isDone());\n        }\n        blockAcquired.await();\n        assertTrue(blocked.get());\n        assertFalse(future.isDone());\n        releaseBlock.countDown();\n\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","date":"2020-11-24 16:48:49","endLine":237,"groupId":"102641","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetBlockWhenBlocked","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8b/8322475ea5a23c18683ea6c197caf4e5541f14.src","preCode":"    public void testGetBlockWhenBlocked() throws ExecutionException, InterruptedException, TimeoutException {\n        PlainActionFuture<Releasable> future = new PlainActionFuture<>();\n        final CountDownLatch blockAcquired = new CountDownLatch(1);\n        final CountDownLatch releaseBlock = new CountDownLatch(1);\n        final AtomicBoolean blocked = new AtomicBoolean();\n        try (Releasable ignored = blockAndWait()) {\n            permits.acquire(future, ThreadPool.Names.GENERIC, true, \"\");\n\n            permits.asyncBlockOperations(wrap(() -> {\n                blocked.set(true);\n                blockAcquired.countDown();\n                releaseBlock.await();\n            }), 30, TimeUnit.MINUTES, ThreadPool.Names.GENERIC);\n            assertFalse(blocked.get());\n            assertFalse(future.isDone());\n        }\n        blockAcquired.await();\n        assertTrue(blocked.get());\n        assertFalse(future.isDone());\n        releaseBlock.countDown();\n\n        future.get(1, TimeUnit.HOURS).close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"M"}],"commitId":"778e7d8b6518b7b81df7218669131bfe5691773c","commitMessage":"@@@Remove Unused IndexShardOperationPermits#blockOperations (#65376)\n\nFollow up to #64098.  this method was only used in tests now so this PR removes it.","date":"2020-11-24 16:48:49","modifiedFileCount":"3","status":"M","submitter":"Armin Braun"}]
