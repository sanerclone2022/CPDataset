[{"authorTime":"2018-09-03 17:01:16","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    private void assertResponseEquals(BulkByScrollResponse expected, BulkByScrollResponse actual) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertTaskStatusEquals(Version.CURRENT, expected.getStatus(), actual.getStatus());\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertEquals(expectedFailure.getMessage(), actualFailure.getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getReason().getClass(), actualFailure.getReason().getClass());\n            assertEquals(expectedFailure.getReason().getMessage(), actualFailure.getReason().getMessage());\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":96,"groupId":"45814","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertResponseEquals","params":"(BulkByScrollResponseexpected@BulkByScrollResponseactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/88328391a9de26234889968718baa570d6f84c.src","preCode":"    private void assertResponseEquals(BulkByScrollResponse expected, BulkByScrollResponse actual) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertTaskStatusEquals(Version.CURRENT, expected.getStatus(), actual.getStatus());\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertEquals(expectedFailure.getMessage(), actualFailure.getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getReason().getClass(), actualFailure.getReason().getClass());\n            assertEquals(expectedFailure.getReason().getMessage(), actualFailure.getReason().getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/BulkByScrollResponseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"NB"},{"authorDate":"2018-09-03 17:01:16","commitOrder":2,"curCode":"    public static void assertEqualBulkResponse(BulkByScrollResponse expected, BulkByScrollResponse actual,\n                                        boolean includeUpdated, boolean includeCreated) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests\n            .assertEqualStatus(expected.getStatus(), actual.getStatus(), includeUpdated, includeCreated);\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertThat(expectedFailure.getMessage(), containsString(actualFailure.getMessage()));\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertThat(expectedFailure.getReason().getMessage(), containsString(actualFailure.getReason().getMessage()));\n        }\n    }\n","date":"2018-09-03 17:01:16","endLine":131,"groupId":"33774","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEqualBulkResponse","params":"(BulkByScrollResponseexpected@BulkByScrollResponseactual@booleanincludeUpdated@booleanincludeCreated)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/71/aab8ca9f9f6e6c58333bf74c9153c3563fcb0f.src","preCode":"    public static void assertEqualBulkResponse(BulkByScrollResponse expected, BulkByScrollResponse actual,\n                                        boolean includeUpdated, boolean includeCreated) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests\n            .assertEqualStatus(expected.getStatus(), actual.getStatus(), includeUpdated, includeCreated);\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertThat(expectedFailure.getMessage(), containsString(actualFailure.getMessage()));\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertThat(expectedFailure.getReason().getMessage(), containsString(actualFailure.getReason().getMessage()));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/BulkByScrollResponseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"B"}],"commitId":"e2c1beb1be5b47d124903883bc31be8a648c8c03","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-03 17:01:16","modifiedFileCount":"71","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2019-08-14 03:55:01","codes":[{"authorDate":"2019-08-14 03:55:01","commitOrder":3,"curCode":"    private void assertResponseEquals(BulkByScrollResponse expected, BulkByScrollResponse actual) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertTaskStatusEquals(Version.CURRENT, expected.getStatus(), actual.getStatus());\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertEquals(expectedFailure.getMessage(), actualFailure.getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getReason().getClass(), actualFailure.getReason().getClass());\n            assertEquals(expectedFailure.getReason().getMessage(), actualFailure.getReason().getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n    }\n","date":"2019-08-14 03:55:01","endLine":111,"groupId":"45814","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertResponseEquals","params":"(BulkByScrollResponseexpected@BulkByScrollResponseactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a1/301fe03eaf9a1ce2a2b777400c244b6f04d4e3.src","preCode":"    private void assertResponseEquals(BulkByScrollResponse expected, BulkByScrollResponse actual) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertTaskStatusEquals(Version.CURRENT, expected.getStatus(), actual.getStatus());\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertEquals(expectedFailure.getMessage(), actualFailure.getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getReason().getClass(), actualFailure.getReason().getClass());\n            assertEquals(expectedFailure.getReason().getMessage(), actualFailure.getReason().getMessage());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/BulkByScrollResponseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2019-08-14 03:55:01","commitOrder":3,"curCode":"    public static void assertEqualBulkResponse(BulkByScrollResponse expected, BulkByScrollResponse actual, boolean includeUpdated,\n                                               boolean includeCreated) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertEqualStatus(expected.getStatus(), actual.getStatus(), includeUpdated, includeCreated);\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertThat(expectedFailure.getMessage(), containsString(actualFailure.getMessage()));\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n            assertThat(actualFailure.getReason().getMessage(), containsString(expectedFailure.getReason().getMessage()));\n        }\n    }\n","date":"2019-08-14 03:55:01","endLine":137,"groupId":"33774","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEqualBulkResponse","params":"(BulkByScrollResponseexpected@BulkByScrollResponseactual@booleanincludeUpdated@booleanincludeCreated)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a1/301fe03eaf9a1ce2a2b777400c244b6f04d4e3.src","preCode":"    public static void assertEqualBulkResponse(BulkByScrollResponse expected, BulkByScrollResponse actual,\n                                        boolean includeUpdated, boolean includeCreated) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests\n            .assertEqualStatus(expected.getStatus(), actual.getStatus(), includeUpdated, includeCreated);\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertThat(expectedFailure.getMessage(), containsString(actualFailure.getMessage()));\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertThat(expectedFailure.getReason().getMessage(), containsString(actualFailure.getReason().getMessage()));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/BulkByScrollResponseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"5efc6f99dcb58b5c61d4cc24cb86f175457d8a33","commitMessage":"@@@Fix issues with serializing BulkByScrollResponse (#45357)\n\nCurrently there are two issues with serializing BulkByScrollResponse.\nFirst.  when deserializing from XContent.  indexing exceptions and search\nexceptions are switched. Additionally.  search exceptions do no retain\nthe appropriate RestStatus code.  so you must evaluate the status code\nfrom the exception. However.  the exception class is not always correctly\nretained when serialized.\n\nThis commit adds tests in the failure case. Additionally.  fixes the\nswapping of failure types and adds the rest status code to the search\nfailure.","date":"2019-08-14 03:55:01","modifiedFileCount":"5","status":"M","submitter":"Tim Brooks"},{"authorTime":"2019-08-14 07:44:39","codes":[{"authorDate":"2019-08-14 03:55:01","commitOrder":4,"curCode":"    private void assertResponseEquals(BulkByScrollResponse expected, BulkByScrollResponse actual) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertTaskStatusEquals(Version.CURRENT, expected.getStatus(), actual.getStatus());\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertEquals(expectedFailure.getMessage(), actualFailure.getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getReason().getClass(), actualFailure.getReason().getClass());\n            assertEquals(expectedFailure.getReason().getMessage(), actualFailure.getReason().getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n    }\n","date":"2019-08-14 03:55:01","endLine":111,"groupId":"45814","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertResponseEquals","params":"(BulkByScrollResponseexpected@BulkByScrollResponseactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a1/301fe03eaf9a1ce2a2b777400c244b6f04d4e3.src","preCode":"    private void assertResponseEquals(BulkByScrollResponse expected, BulkByScrollResponse actual) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertTaskStatusEquals(Version.CURRENT, expected.getStatus(), actual.getStatus());\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertEquals(expectedFailure.getMessage(), actualFailure.getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getReason().getClass(), actualFailure.getReason().getClass());\n            assertEquals(expectedFailure.getReason().getMessage(), actualFailure.getReason().getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/BulkByScrollResponseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2019-08-14 07:44:39","commitOrder":4,"curCode":"    public static void assertEqualBulkResponse(BulkByScrollResponse expected, BulkByScrollResponse actual, boolean includeUpdated,\n                                               boolean includeCreated) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertEqualStatus(expected.getStatus(), actual.getStatus(), includeUpdated, includeCreated);\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n    }\n","date":"2019-08-14 07:44:39","endLine":134,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEqualBulkResponse","params":"(BulkByScrollResponseexpected@BulkByScrollResponseactual@booleanincludeUpdated@booleanincludeCreated)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/91c11bf2745f1edacd98ce6f254631e27a707f.src","preCode":"    public static void assertEqualBulkResponse(BulkByScrollResponse expected, BulkByScrollResponse actual, boolean includeUpdated,\n                                               boolean includeCreated) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertEqualStatus(expected.getStatus(), actual.getStatus(), includeUpdated, includeCreated);\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertThat(expectedFailure.getMessage(), containsString(actualFailure.getMessage()));\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n            assertThat(actualFailure.getReason().getMessage(), containsString(expectedFailure.getReason().getMessage()));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/BulkByScrollResponseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"20bc248054aa3cc9f5877e0b6be0224cc9237b4a","commitMessage":"@@@Fix BulkByScrollResponseTests exception assertions (#45519)\n\nCurrently in the x content serialization tests we compare the exception\nmessages that are serialized. These exceptions messages are not\nequivalent because the exception often changes when serialized to x\ncontent. This commit removes this assertion.","date":"2019-08-14 07:44:39","modifiedFileCount":"1","status":"M","submitter":"Tim Brooks"},{"authorTime":"2019-10-07 20:29:12","codes":[{"authorDate":"2019-10-07 20:29:12","commitOrder":5,"curCode":"    private void assertResponseEquals(BulkByScrollResponse expected, BulkByScrollResponse actual) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertTaskStatusEquals(Version.CURRENT, expected.getStatus(), actual.getStatus());\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertEquals(expectedFailure.getMessage(), actualFailure.getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getReason().getClass(), actualFailure.getReason().getClass());\n            assertEquals(expectedFailure.getReason().getMessage(), actualFailure.getReason().getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n    }\n","date":"2019-10-07 20:29:12","endLine":109,"groupId":"102478","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertResponseEquals","params":"(BulkByScrollResponseexpected@BulkByScrollResponseactual)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/72/6e15af4e8bcbcb4beb586a92528d229c8d1f80.src","preCode":"    private void assertResponseEquals(BulkByScrollResponse expected, BulkByScrollResponse actual) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertTaskStatusEquals(Version.CURRENT, expected.getStatus(), actual.getStatus());\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertEquals(expectedFailure.getMessage(), actualFailure.getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getReason().getClass(), actualFailure.getReason().getClass());\n            assertEquals(expectedFailure.getReason().getMessage(), actualFailure.getReason().getMessage());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/BulkByScrollResponseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2019-10-07 20:29:12","commitOrder":5,"curCode":"    public static void assertEqualBulkResponse(BulkByScrollResponse expected, BulkByScrollResponse actual, boolean includeUpdated,\n                                               boolean includeCreated) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertEqualStatus(expected.getStatus(), actual.getStatus(), includeUpdated, includeCreated);\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n    }\n","date":"2019-10-07 20:29:12","endLine":132,"groupId":"102478","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertEqualBulkResponse","params":"(BulkByScrollResponseexpected@BulkByScrollResponseactual@booleanincludeUpdated@booleanincludeCreated)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/72/6e15af4e8bcbcb4beb586a92528d229c8d1f80.src","preCode":"    public static void assertEqualBulkResponse(BulkByScrollResponse expected, BulkByScrollResponse actual, boolean includeUpdated,\n                                               boolean includeCreated) {\n        assertEquals(expected.getTook(), actual.getTook());\n        BulkByScrollTaskStatusTests.assertEqualStatus(expected.getStatus(), actual.getStatus(), includeUpdated, includeCreated);\n        assertEquals(expected.getBulkFailures().size(), actual.getBulkFailures().size());\n        for (int i = 0; i < expected.getBulkFailures().size(); i++) {\n            Failure expectedFailure = expected.getBulkFailures().get(i);\n            Failure actualFailure = actual.getBulkFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getType(), actualFailure.getType());\n            assertEquals(expectedFailure.getId(), actualFailure.getId());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n        assertEquals(expected.getSearchFailures().size(), actual.getSearchFailures().size());\n        for (int i = 0; i < expected.getSearchFailures().size(); i++) {\n            ScrollableHitSource.SearchFailure expectedFailure = expected.getSearchFailures().get(i);\n            ScrollableHitSource.SearchFailure actualFailure = actual.getSearchFailures().get(i);\n            assertEquals(expectedFailure.getIndex(), actualFailure.getIndex());\n            assertEquals(expectedFailure.getShardId(), actualFailure.getShardId());\n            assertEquals(expectedFailure.getNodeId(), actualFailure.getNodeId());\n            assertEquals(expectedFailure.getStatus(), actualFailure.getStatus());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/BulkByScrollResponseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"7a622f024f555566ab06176f85b830baf47e61c0","commitMessage":"@@@Remove types from BulkRequest (#46983)\n\nThis commit removes types entirely from BulkRequest.  both as a global\nparameter and as individual entries on update/index/delete lines.\n\nRelates to #41059","date":"2019-10-07 20:29:12","modifiedFileCount":"50","status":"M","submitter":"Alan Woodward"}]
