[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","date":"2018-04-26 03:22:53","endLine":440,"groupId":"15932","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mockIndicesService","params":"(ClusterServiceclusterService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d3/2fbf1578714dc92914f0d663ebe2ee4ffbe5e6.src","preCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/replication/TransportWriteActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":421,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","date":"2018-04-26 03:22:53","endLine":1177,"groupId":"15932","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mockIndicesService","params":"(ClusterServiceclusterService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4e/7844950d6b28dcbbe93db4426064a92a76ce45.src","preCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1158,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-09-28 01:00:37","codes":[{"authorDate":"2018-09-28 01:00:37","commitOrder":2,"curCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","date":"2018-09-28 01:00:37","endLine":440,"groupId":"15932","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mockIndicesService","params":"(ClusterServiceclusterService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1f/1e9eb2a1e962343abc607fabc9def8156918c4.src","preCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/replication/TransportWriteActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":422,"status":"M"},{"authorDate":"2018-09-28 01:00:37","commitOrder":2,"curCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","date":"2018-09-28 01:00:37","endLine":1172,"groupId":"15932","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mockIndicesService","params":"(ClusterServiceclusterService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6c/084cb29cd9cc99141f47c8fdbeb6b628ba4e07.src","preCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1154,"status":"M"}],"commitId":"a26cc1a2422c7d6eda7d0c204f7588d79fa597e6","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into index-lifecycle\n","date":"2018-09-28 01:00:37","modifiedFileCount":"338","status":"M","submitter":"Lee Hinman"},{"authorTime":"2019-04-05 15:50:44","codes":[{"authorDate":"2018-09-28 01:00:37","commitOrder":3,"curCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","date":"2018-09-28 01:00:37","endLine":440,"groupId":"15932","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"mockIndicesService","params":"(ClusterServiceclusterService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1f/1e9eb2a1e962343abc607fabc9def8156918c4.src","preCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/replication/TransportWriteActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":422,"status":"N"},{"authorDate":"2019-04-05 15:50:44","commitOrder":3,"curCode":"    private IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","date":"2019-04-05 15:50:44","endLine":1267,"groupId":"15932","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"mockIndicesService","params":"(ClusterServiceclusterService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/02/e9ff3146cf61716d3b740eb088c62650724275.src","preCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1249,"status":"M"}],"commitId":"ea84b96c8cb4f19c2569bb8f68d8f119ceed1a6b","commitMessage":"@@@Remove test-only customisation from TransReplAct (#40863)\n\nThe `getIndexShard()` and `sendReplicaRequest()` methods in\nTransportReplicationAction are effectively only used to customise some\nbehaviour in tests. However there are other ways to do this that do not cause\nsuch an obstacle to separating the TransportReplicationAction into its two\nhalves (see #40706).\n\nThis commit removes these customisation points and injects the test-only\nbehaviour using other techniques.","date":"2019-04-05 15:50:44","modifiedFileCount":"5","status":"M","submitter":"David Turner"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":4,"curCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetadata indexSafe = state.metadata().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metadata().hasIndex(index.getName())) {\n                return mockIndexService(clusterService.state().metadata().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","date":"2020-04-01 03:52:01","endLine":438,"groupId":"105677","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"mockIndicesService","params":"(ClusterServiceclusterService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3b/9aa25bc0cd3075c49ee09012086d0f5214d729.src","preCode":"    final IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/replication/TransportWriteActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":420,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":4,"curCode":"    private IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetadata indexSafe = state.metadata().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metadata().hasIndex(index.getName())) {\n                return mockIndexService(clusterService.state().metadata().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","date":"2020-04-01 03:52:01","endLine":1306,"groupId":"105677","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"mockIndicesService","params":"(ClusterServiceclusterService)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4c/e1782cc66d82cbea0b47857b6541daa12460ea.src","preCode":"    private IndicesService mockIndicesService(ClusterService clusterService) {\n        final IndicesService indicesService = mock(IndicesService.class);\n        when(indicesService.indexServiceSafe(any(Index.class))).then(invocation -> {\n            Index index = (Index)invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            final IndexMetaData indexSafe = state.metaData().getIndexSafe(index);\n            return mockIndexService(indexSafe, clusterService);\n        });\n        when(indicesService.indexService(any(Index.class))).then(invocation -> {\n            Index index = (Index) invocation.getArguments()[0];\n            final ClusterState state = clusterService.state();\n            if (state.metaData().hasIndex(index.getName())) {\n                return mockIndexService(clusterService.state().metaData().getIndexSafe(index), clusterService);\n            } else {\n                return null;\n            }\n        });\n        return indicesService;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1288,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
