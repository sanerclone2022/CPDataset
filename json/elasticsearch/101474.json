[{"authorTime":"2018-11-08 21:13:00","codes":[{"authorDate":"2018-11-08 21:13:00","commitOrder":1,"curCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","date":"2018-11-08 21:13:00","endLine":298,"groupId":"32463","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/68/5c872fa72d43c00f1ec527a4921b290fc288ae.src","preCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"B"},{"authorDate":"2018-11-08 21:13:00","commitOrder":1,"curCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\", ValueType.LONG).field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","date":"2018-11-08 21:13:00","endLine":310,"groupId":"32463","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCaseTerms","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/68/5c872fa72d43c00f1ec527a4921b290fc288ae.src","preCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\", ValueType.LONG).field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"B"}],"commitId":"d351422215548f518e497f78df32210ae245e260","commitMessage":"@@@Add parent-aggregation to parent-join module (#34210)\n\nAdd `parent` aggregation.  a special single bucket aggregation that joins children documents to their parent.","date":"2018-11-08 21:13:00","modifiedFileCount":"7","status":"B","submitter":"Dominik Stadler"},{"authorTime":"2020-03-27 03:01:07","codes":[{"authorDate":"2018-11-08 21:13:00","commitOrder":2,"curCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","date":"2018-11-08 21:13:00","endLine":298,"groupId":"32463","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/68/5c872fa72d43c00f1ec527a4921b290fc288ae.src","preCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"N"},{"authorDate":"2020-03-27 03:01:07","commitOrder":2,"curCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\").userValueTypeHint(ValueType.LONG)\n            .field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","date":"2020-03-27 03:01:07","endLine":314,"groupId":"32463","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCaseTerms","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cd/7f39508c3ac8ca10a62b84132cc9d52004777a.src","preCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\", ValueType.LONG).field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"M"}],"commitId":"a90c1de8745681356a6516f4f22a8c40f71f6b12","commitMessage":"@@@Add ValuesSource Registry and associated logic (#54281)\n\n* Remove ValuesSourceType argument to ValuesSourceAggregationBuilder (#48638)\n\n* ValuesSourceRegistry Prototype (#48758)\n\n* Remove generics from ValuesSource related classes (#49606)\n\n* fix percentile aggregation tests (#50712)\n\n* Basic thread safety for ValuesSourceRegistry (#50340)\n\n* Remove target value type from ValuesSourceAggregationBuilder (#49943)\n\n* Cleanup default values source type (#50992)\n\n* CoreValuesSourceType no longer implements Writable (#51276)\n\n* Remove genereics & hard coded ValuesSource references from Matrix Stats (#51131)\n\n* Put values source types on fields (#51503)\n\n* Remove VST Any (#51539)\n\n* Rewire terms agg to use new VS registry (#51182)\n\nAlso adds some basic AggTestCases for untested code\npaths (and boilerplate for future tests once the IT are\nconverted over)\n\n* Wire Cardinality aggregation to work with the ValuesSourceRegistry (#51337)\n\n* Wire Percentiles aggregator into new VS framework (#51639)\n\nThis required a bit of a refactor to percentiles itself.  Before. \nthe Builder would switch on the chosen algo to generate an\nalgo-specific factory.  This doesn't work (or at least.  would be\ndifficult) in the new VS framework.\n\nThis refactor consolidates both factories together and introduces\na PercentilesConfig object to act as a standardized way to pass\nalgo-specific parameters through the factory.  This object\nis then used when deciding which kind of aggregator to create\n\nNote: CoreValuesSourceType.HISTOGRAM still lives in core.  and will\nbe moved in a subsequent PR.\n\n* Remove generics and target value type from MultiVSAB (#51647)\n\n* fix checkstyle after merge (#52008)\n\n* Plumb ValuesSourceRegistry through to QuerySearchContext (#51710)\n\n* Convert RareTerms to new VS registry (#52166)\n\n* Wire up Value Count (#52225)\n\n* Wire up Max & Min aggregations (#52219)\n\n* ValuesSource refactoring: Wire up Sum aggregation (#52571)\n\n* ValuesSource refactoring: Wire up SigTerms aggregation (#52590)\n\n* Soft immutability for VSConfig (#52729)\n\n* Unmute testSupportedFieldTypes.  fix Percentiles/Ranks/Terms tests (#52734)\n\nAlso fixes Percentiles which was incorrectly specified to only accept\nnumeric.  but in fact also accepts Boolean and Date (because those are\nnumeric on master - thanks `testSupportedFieldTypes` for catching it!)\n\n* VS refactoring: Wire up stats aggregation (#52891)\n\n* ValuesSource refactoring: Wire up string_stats aggregation (#52875)\n\n* VS refactoring: Wire up median (MAD) aggregation (#52945)\n\n* fix valuesourcetype issue with constant_keyword field (#53041)\n\nthis commit implements `getValuesSourceType` for\nthe ConstantKeyword field type.\n\nmaster was merged into feature/extensible-values-source\nintroducing a new field type that was not implementing\n`getValuesSourceType`.\n\n* ValuesSource refactoring: Wire up Avg aggregation (#52752)\n\n* Wire PercentileRanks aggregator into new VS framework  (#51693)\n\n* Add a VSConfig resolver for aggregations not using the registry (#53038)\n\n* Vs refactor wire up ranges and date ranges (#52918)\n\n* Wire up geo_bounds aggregation to ValuesSourceRegistry (#53034)\n\nThis commit updates the geo_bounds aggregation to depend\non registering itself in the ValuesSourceRegistry\n\nrelates #42949.\n\n* VS refactoring: convert Boxplot to new registry (#53132)\n\n* Wire-up geotile_grid and geohash_grid to ValuesSourceRegistry (#53037)\n\nThis commit updates the geo*_grid aggregations to depend\non registering itself in the ValuesSourceRegistry\n\nrelates to the values-source refactoring meta issue #42949.\n\n* Wire-up geo_centroid agg to ValuesSourceRegistry (#53040)\n\nThis commit updates the geo_centroid aggregation to depend\non registering itself in the ValuesSourceRegistry.\n\nrelates to the values-source refactoring meta issue #42949.\n\n* Fix type tests for Missing aggregation (#53501)\n\n* ValuesSource Refactor: move histo VSType into XPack module (#53298)\n\n- Introduces a new API (`getBareAggregatorRegistrar()`) which allows plugins to register aggregations against existing agg definitions defined in Core.\n- This moves the histogram VSType over to XPack where it belongs. `getHistogramValues()` still remains as a Core concept\n- Moves the histo-specific bits over to xpack (e.g. the actual aggregator logic). This requires extra boilerplate since we need to create a new \"Analytics\" Percentile/Rank aggregators to deal with the histo field. Doubly-so since percentiles/ranks are extra boiler-plate'y... should be much lighter for other aggs\n\n* Wire up DateHistogram to the ValuesSourceRegistry (#53484)\n\n* Vs refactor parser cleanup (#53198)\n\nCo-authored-by: Zachary Tong <polyfractal@elastic.co>\nCo-authored-by: Zachary Tong <zach@elastic.co>\nCo-authored-by: Christos Soulios <1561376+csoulios@users.noreply.github.com>\nCo-authored-by: Tal Levy <JubBoy333@gmail.com>","date":"2020-03-27 03:01:07","modifiedFileCount":"214","status":"M","submitter":"Mark Tozzi"},{"authorTime":"2020-06-11 01:27:38","codes":[{"authorDate":"2018-11-08 21:13:00","commitOrder":3,"curCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","date":"2018-11-08 21:13:00","endLine":298,"groupId":"32463","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/68/5c872fa72d43c00f1ec527a4921b290fc288ae.src","preCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"N"},{"authorDate":"2020-06-11 01:27:38","commitOrder":3,"curCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","date":"2020-06-11 01:27:38","endLine":321,"groupId":"32463","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCaseTerms","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0d/7add41e5ac235ca31f01b9ed1acbec6ae4705c.src","preCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\").userValueTypeHint(ValueType.LONG)\n            .field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"M"}],"commitId":"3adbe5b106e0d124dce896d9d8b2a63ec4c70a53","commitMessage":"@@@Save memory when parent and child are not on top (#57892)\n\nReworks the `parent` and `child` aggregation are not at the top level\nusing the optimization from #55873. Instead of wrapping all\nnon-top-level `parent` and `child` aggregators we now handle being a\nchild aggregator in the aggregator.  specifically by adding recording\nwhich global ordinals show up in the parent and then checking if they\nmatch the child.\n\n","date":"2020-06-11 01:27:38","modifiedFileCount":"7","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2020-06-16 00:47:15","commitOrder":4,"curCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","date":"2020-06-16 00:47:15","endLine":308,"groupId":"33790","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/24/278aaedf1a878a4d3ad3a744003ad409b4507f.src","preCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":299,"status":"M"},{"authorDate":"2020-06-16 00:47:15","commitOrder":4,"curCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","date":"2020-06-16 00:47:15","endLine":319,"groupId":"33790","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCaseTerms","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/24/278aaedf1a878a4d3ad3a744003ad409b4507f.src","preCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(\"number\");\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"}],"commitId":"3b696828ada5953bb1669b972a353736383edf08","commitMessage":"@@@MappedFieldType should not extend FieldType (#57666)\n\nMappedFieldType is a combination of two concerns:\n\n* an extension of lucene's FieldType.  defining how a field should be indexed\n* a set of query factory methods.  defining how a field should be searched\n\nWe want to break these two concerns apart. This commit is a first step to doing this.  breaking\nthe inheritance relationship between MappedFieldType and FieldType. MappedFieldType \ninstead has a series of boolean flags defining whether or not the field is searchable or \naggregatable.  and FieldMapper has a separate FieldType passed to its constructor defining \nhow indexing should be done.\n\nRelates to #56814","date":"2020-06-16 00:47:15","modifiedFileCount":"257","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-08-07 05:14:20","codes":[{"authorDate":"2020-08-07 05:14:20","commitOrder":5,"curCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n        InternalParent result = searchAndReduce(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","date":"2020-08-07 05:14:20","endLine":308,"groupId":"33790","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/af/4a0e0bc953074a4f98db2dea4116a41c4fe5d2.src","preCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":299,"status":"M"},{"authorDate":"2020-08-07 05:14:20","commitOrder":5,"curCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n        InternalParent result = searchAndReduce(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","date":"2020-08-07 05:14:20","endLine":319,"groupId":"33790","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCaseTerms","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/af/4a0e0bc953074a4f98db2dea4116a41c4fe5d2.src","preCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n        InternalParent result = search(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"}],"commitId":"5e3ea6eb11c68bdcc9adda51715a6e1fea9186d6","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-07 05:14:20","modifiedFileCount":"73","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-12-17 00:56:04","codes":[{"authorDate":"2020-12-17 00:56:04","commitOrder":6,"curCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n        InternalParent result = searchAndReduce(indexSearcher, query, aggregationBuilder, withJoinFields(fieldType));\n        verify.accept(result);\n    }\n","date":"2020-12-17 00:56:04","endLine":277,"groupId":"101474","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a4/10405c09feb59f2251ae6e590873ff7b517fa3.src","preCode":"    private void testCase(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new MinAggregationBuilder(\"in_parent\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n        InternalParent result = searchAndReduce(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":268,"status":"M"},{"authorDate":"2020-12-17 00:56:04","commitOrder":6,"curCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n        InternalParent result = searchAndReduce(indexSearcher, query, aggregationBuilder, withJoinFields(fieldType));\n        verify.accept(result);\n    }\n","date":"2020-12-17 00:56:04","endLine":288,"groupId":"101474","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testCaseTerms","params":"(Queryquery@IndexSearcherindexSearcher@Consumer<InternalParent>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a4/10405c09feb59f2251ae6e590873ff7b517fa3.src","preCode":"    private void testCaseTerms(Query query, IndexSearcher indexSearcher, Consumer<InternalParent> verify)\n            throws IOException {\n\n        ParentAggregationBuilder aggregationBuilder = new ParentAggregationBuilder(\"_name\", CHILD_TYPE);\n        aggregationBuilder.subAggregation(new TermsAggregationBuilder(\"value_terms\").field(\"number\"));\n\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n        InternalParent result = searchAndReduce(indexSearcher, query, aggregationBuilder, fieldType);\n        verify.accept(result);\n    }\n","realPath":"modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenToParentAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"M"}],"commitId":"7b3c6f2a0c44edc768fddde111eef5780ddd3b07","commitMessage":"@@@Further clean up in AggregatorTestCase (#66395)\n\nDrops `AggregatorTestCase#mapperServiceMock` because it is getting in\nthe way of other work I'm doing for runtime fields. It was only\noverridden to test the `parent` and `child` aggregation to add the\n`MappedFieldType`s for join fields in the backdoor. Those aggregations\ncan just as easily add those fields in the normal method calls.","date":"2020-12-17 00:56:04","modifiedFileCount":"4","status":"M","submitter":"Nik Everett"}]
