[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (mapperService.fullName(field) == null) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = mapperService.getObjectMapper(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","date":"2018-04-26 03:22:53","endLine":106,"groupId":"69998","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mightMatchNestedDocs","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/a5c8143bcb09f1f99dbc474c969f00a2349302.src","preCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (mapperService.fullName(field) == null) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = mapperService.getObjectMapper(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (mapperService.fullName(field) == null) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = mapperService.getObjectMapper(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","date":"2018-04-26 03:22:53","endLine":173,"groupId":"69998","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mightMatchNonNestedDocs","params":"(Stringfield@StringnestedPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/a5c8143bcb09f1f99dbc474c969f00a2349302.src","preCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (mapperService.fullName(field) == null) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = mapperService.getObjectMapper(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2020-02-08 02:16:53","codes":[{"authorDate":"2020-02-08 02:16:53","commitOrder":2,"curCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (mapperService.fieldType(field) == null) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = mapperService.getObjectMapper(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","date":"2020-02-08 02:16:53","endLine":117,"groupId":"69998","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mightMatchNestedDocs","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4e/41002d69b28c4d6ff16f769ee6a18f2dac3937.src","preCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (mapperService.fullName(field) == null) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = mapperService.getObjectMapper(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2020-02-08 02:16:53","commitOrder":2,"curCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (mapperService.fieldType(field) == null) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = mapperService.getObjectMapper(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","date":"2020-02-08 02:16:53","endLine":193,"groupId":"69998","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mightMatchNonNestedDocs","params":"(Stringfield@StringnestedPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4e/41002d69b28c4d6ff16f769ee6a18f2dac3937.src","preCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (mapperService.fullName(field) == null) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = mapperService.getObjectMapper(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"}],"commitId":"e0b3ea041671e7600e8a1b76491f91041940a386","commitMessage":"@@@Rename MapperService#fullName to fieldType. (#52025)\n\nThe new name more accurately describes what the method returns.","date":"2020-02-08 02:16:53","modifiedFileCount":"83","status":"M","submitter":"Julie Tibshirani"},{"authorTime":"2020-10-06 00:02:55","codes":[{"authorDate":"2020-10-06 00:02:55","commitOrder":3,"curCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (fieldTypeLookup.apply(field) == null) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","date":"2020-10-06 00:02:55","endLine":121,"groupId":"12056","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"mightMatchNestedDocs","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6b/40aa647b407fa1150cd3f74a5e4da7862a9aa2.src","preCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (mapperService.fieldType(field) == null) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = mapperService.getObjectMapper(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2020-10-06 00:02:55","commitOrder":3,"curCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (fieldTypeLookup.apply(field) == null) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","date":"2020-10-06 00:02:55","endLine":197,"groupId":"12056","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"mightMatchNonNestedDocs","params":"(Stringfield@StringnestedPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6b/40aa647b407fa1150cd3f74a5e4da7862a9aa2.src","preCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (mapperService.fieldType(field) == null) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = mapperService.getObjectMapper(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"cf130f386e5a83e35508f08a1c75352d3b071a08","commitMessage":"@@@Replace some usages of QueryShardContext#getMapperService (#63239)\n\nQueryShardContext has a getter that allows to have access to MapperService. In many cases.  it is misused to lookup field types which QueryShardContext has a specific method for. This commit replaces those usages with a function String -> MappedFieldType.\n\nThere are also a few other places where MapperService is retrieved to call methods that are also available directly on QueryShardContext.  which are replaced as part of this commit too.","date":"2020-10-06 00:02:55","modifiedFileCount":"41","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-10-07 16:08:55","codes":[{"authorDate":"2020-10-07 16:08:55","commitOrder":4,"curCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldFunction.apply(field) == false) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","date":"2020-10-07 16:08:55","endLine":120,"groupId":"12056","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"mightMatchNestedDocs","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bf/9fe158364e4bf3dbc9313eccec37739407901b.src","preCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (fieldTypeLookup.apply(field) == null) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"},{"authorDate":"2020-10-07 16:08:55","commitOrder":4,"curCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldFunction.apply(field) == false) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","date":"2020-10-07 16:08:55","endLine":196,"groupId":"12056","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"mightMatchNonNestedDocs","params":"(Stringfield@StringnestedPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bf/9fe158364e4bf3dbc9313eccec37739407901b.src","preCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (fieldTypeLookup.apply(field) == null) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"}],"commitId":"b21b79d4a533507b03a756aa79ccb7a4c4601f07","commitMessage":"@@@Add isFieldMapped method to QueryShardContext (#63322)\n\nAs part of #63239 we have moved some usages of QueryShardContext#getMapperService that were looking up a field type through the fieldType method.  to use the existing QueryShardContext#fieldMapper. The latter though has additional handling for unmapped fields when the functionality is enabled.  and may throw exception if the field is not mapped. This additional behaviour is not desirable and may cause issues in cases where the callers have their own specific handling for situations where the field is not mapped.\n\nTo address this we introduce an additional isFieldMapped method to QueryShardContext that allows to check if a field is mapped or not.\n\nrelates to #63239","date":"2020-10-07 16:08:55","modifiedFileCount":"19","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-10-19 14:52:40","codes":[{"authorDate":"2020-10-19 14:52:40","commitOrder":5,"curCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","date":"2020-10-19 14:52:40","endLine":121,"groupId":"12056","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"mightMatchNestedDocs","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2b/5a924f25bf6bbd176a991c31aace2840e1eaa4.src","preCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldFunction.apply(field) == false) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2020-10-19 14:52:40","commitOrder":5,"curCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","date":"2020-10-19 14:52:40","endLine":197,"groupId":"12056","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"mightMatchNonNestedDocs","params":"(Stringfield@StringnestedPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2b/5a924f25bf6bbd176a991c31aace2840e1eaa4.src","preCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldFunction.apply(field) == false) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"6decee24b249513f690ad2cf9a54ab626833576c","commitMessage":"@@@Replace Function<Type.  Boolean> with Predicate (#63851)\n\nIn a few cases we use a Function that returns a Boolean.  for which we could simply use a Predicate instead","date":"2020-10-19 14:52:40","modifiedFileCount":"3","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2021-06-08 06:05:30","codes":[{"authorDate":"2021-06-08 06:05:30","commitOrder":6,"curCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","date":"2021-06-08 06:05:30","endLine":111,"groupId":"12056","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"mightMatchNestedDocs","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/b74660de814bb67d26536a8faf5d30ce21fd76.src","preCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-06-08 06:05:30","commitOrder":6,"curCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.isNested()) {\n                NestedObjectMapper nestedMapper = (NestedObjectMapper) mapper;\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return nestedMapper.isIncludeInParent() || nestedMapper.isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","date":"2021-06-08 06:05:30","endLine":188,"groupId":"12056","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"mightMatchNonNestedDocs","params":"(Stringfield@StringnestedPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/b74660de814bb67d26536a8faf5d30ce21fd76.src","preCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"}],"commitId":"ad111598867545d0dbeae60c6d24dfcd502c0c26","commitMessage":"@@@Merge remote-tracking branch 'elastic/master' into feature/vector-tiles\n","date":"2021-06-08 06:05:30","modifiedFileCount":"156","status":"M","submitter":"Igor Motov"},{"authorTime":"2021-06-17 05:31:31","codes":[{"authorDate":"2021-06-17 05:31:31","commitOrder":7,"curCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","date":"2021-06-17 05:31:31","endLine":110,"groupId":"12056","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"mightMatchNestedDocs","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b7/0bd9a041084d2c5f6fcc85610e903cd671e9e8.src","preCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2021-06-17 05:31:31","commitOrder":7,"curCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","date":"2021-06-17 05:31:31","endLine":186,"groupId":"12056","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"mightMatchNonNestedDocs","params":"(Stringfield@StringnestedPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b7/0bd9a041084d2c5f6fcc85610e903cd671e9e8.src","preCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.isNested()) {\n                NestedObjectMapper nestedMapper = (NestedObjectMapper) mapper;\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return nestedMapper.isIncludeInParent() || nestedMapper.isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"6a8f8f3f718bd21bf14176049c9e1f1def13463b","commitMessage":"@@@Merge remote-tracking branch 'elastic/master' into feature/vector-tiles\n","date":"2021-06-17 05:31:31","modifiedFileCount":"4429","status":"M","submitter":"Igor Motov"},{"authorTime":"2021-07-19 16:44:48","codes":[{"authorDate":"2021-07-19 16:44:48","commitOrder":8,"curCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","date":"2021-07-19 16:44:48","endLine":111,"groupId":"127747","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"mightMatchNestedDocs","params":"(Stringfield)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/b74660de814bb67d26536a8faf5d30ce21fd76.src","preCode":"    boolean mightMatchNestedDocs(String field) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            \r\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.nested().isNested()) {\n                return true;\n            }\n        }\n        return false;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2021-07-19 16:44:48","commitOrder":8,"curCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper != null && mapper.isNested()) {\n                NestedObjectMapper nestedMapper = (NestedObjectMapper) mapper;\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return nestedMapper.isIncludeInParent() || nestedMapper.isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","date":"2021-07-19 16:44:48","endLine":188,"groupId":"127747","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"mightMatchNonNestedDocs","params":"(Stringfield@StringnestedPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/b74660de814bb67d26536a8faf5d30ce21fd76.src","preCode":"    boolean mightMatchNonNestedDocs(String field, String nestedPath) {\n        if (field.startsWith(\"_\")) {\n            \r\n            \r\n            \r\n            \r\n            \r\n            return true;\n        }\n        if (isMappedFieldPredicate.test(field) == false) {\n            return false;\n        }\n        for (String parent = parentObject(field); parent != null; parent = parentObject(parent)) {\n            ObjectMapper mapper = objectMapperLookup.apply(parent);\n            if (mapper!= null && mapper.nested().isNested()) {\n                if (mapper.fullPath().equals(nestedPath)) {\n                    \r\n                    \r\n                    return mapper.nested().isIncludeInParent() || mapper.nested().isIncludeInRoot();\n                } else {\n                    \r\n                    \r\n                    return true;\n                }\n            }\n        }\n        return true; \r\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/NestedHelper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"}],"commitId":"cf575f4766e3b3d7a58698be0d91559664f1bd80","commitMessage":"@@@Make NestedObjectMapper its own class (#74410)\n\nNested objects are implemented via a Nested class directly on object mappers. \neven though nested and non-nested objects have quite different semantics. In\naddition.  most call-sites that need to get an object mapper in fact need a nested\nobject mapper. To make it clearer that nested and object mappers are different\nbeasts with different implementations and different requirements.  we should\nsplit them into different classes.","date":"2021-07-19 16:44:48","modifiedFileCount":"39","status":"M","submitter":"Alan Woodward"}]
