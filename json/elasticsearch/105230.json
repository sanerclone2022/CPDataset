[{"authorTime":"2020-04-23 10:40:34","codes":[{"authorDate":"2020-03-04 02:59:05","commitOrder":2,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType();\n            fieldType.setHasDocValues(true);\n            fieldType.setName(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-03-04 02:59:05","endLine":101,"groupId":"48589","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ef/42a2d210eed3512267cb44003aff1ef77709d6.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType();\n            fieldType.setHasDocValues(true);\n            fieldType.setName(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"NB"},{"authorDate":"2020-04-23 10:40:34","commitOrder":2,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoShapeWithDocValuesFieldMapper.GeoShapeWithDocValuesFieldType();\n            fieldType.setHasDocValues(true);\n            fieldType.setName(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-04-23 10:40:34","endLine":102,"groupId":"48589","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5e/f5be4e8b656282ec2ca7c3cfcf3b5520a2cb6d.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoShapeWithDocValuesFieldMapper.GeoShapeWithDocValuesFieldType();\n            fieldType.setHasDocValues(true);\n            fieldType.setName(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/search/aggregations/metrics/GeoShapeBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"}],"commitId":"6b7916606111827e0d9843e401291afa6627d4f3","commitMessage":"@@@Refactor GeoShape DocValues in spatial xpack (#55492)\n\nThis commit refactors geo_shape doc values.  fielddata.  and utility classes from \nthe single mapper package in x-pack spatial plugin to a package structure that \nis consistent with the server module.\n","date":"2020-04-23 10:40:34","modifiedFileCount":"9","status":"M","submitter":"Nick Knize"},{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2020-06-16 00:47:15","commitOrder":3,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-06-16 00:47:15","endLine":97,"groupId":"48589","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ca/1cb92e0fd5c455f3fa7d28a00fe78ed9921289.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType();\n            fieldType.setHasDocValues(true);\n            fieldType.setName(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2020-06-16 00:47:15","commitOrder":3,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType\n                = new GeoShapeWithDocValuesFieldMapper.GeoShapeWithDocValuesFieldType(\"field\", true, true, Collections.emptyMap());\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-06-16 00:47:15","endLine":102,"groupId":"48589","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6e/b076cba6d7b32f6eed49e31cfccdc02ebbe1aa.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoShapeWithDocValuesFieldMapper.GeoShapeWithDocValuesFieldType();\n            fieldType.setHasDocValues(true);\n            fieldType.setName(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/search/aggregations/metrics/GeoShapeBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"3b696828ada5953bb1669b972a353736383edf08","commitMessage":"@@@MappedFieldType should not extend FieldType (#57666)\n\nMappedFieldType is a combination of two concerns:\n\n* an extension of lucene's FieldType.  defining how a field should be indexed\n* a set of query factory methods.  defining how a field should be searched\n\nWe want to break these two concerns apart. This commit is a first step to doing this.  breaking\nthe inheritance relationship between MappedFieldType and FieldType. MappedFieldType \ninstead has a series of boolean flags defining whether or not the field is searchable or \naggregatable.  and FieldMapper has a separate FieldType passed to its constructor defining \nhow indexing should be done.\n\nRelates to #56814","date":"2020-06-16 00:47:15","modifiedFileCount":"257","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-08-07 05:14:20","codes":[{"authorDate":"2020-08-07 05:14:20","commitOrder":4,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":97,"groupId":"48589","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f9/a23d703097fe2887e119c3f599ab98da83f7c1.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2020-08-07 05:14:20","commitOrder":4,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType\n                = new GeoShapeWithDocValuesFieldMapper.GeoShapeWithDocValuesFieldType(\"field\", true, true, Collections.emptyMap());\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":102,"groupId":"48589","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d5/045affa949a29620038a15237f0ceb9c41f3f2.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType\n                = new GeoShapeWithDocValuesFieldMapper.GeoShapeWithDocValuesFieldType(\"field\", true, true, Collections.emptyMap());\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = search(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/search/aggregations/metrics/GeoShapeBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"5e3ea6eb11c68bdcc9adda51715a6e1fea9186d6","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-07 05:14:20","modifiedFileCount":"73","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-09-22 21:41:24","codes":[{"authorDate":"2020-08-07 05:14:20","commitOrder":5,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":97,"groupId":"48589","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f9/a23d703097fe2887e119c3f599ab98da83f7c1.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"N"},{"authorDate":"2020-09-22 21:41:24","commitOrder":5,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType\n                = new GeoShapeWithDocValuesFieldMapper.GeoShapeWithDocValuesFieldType(\"field\", true, false, true, Collections.emptyMap());\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-09-22 21:41:24","endLine":102,"groupId":"48589","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bb/850829b576770ed9070b1a135584aed828a7ef.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType\n                = new GeoShapeWithDocValuesFieldMapper.GeoShapeWithDocValuesFieldType(\"field\", true, true, Collections.emptyMap());\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/search/aggregations/metrics/GeoShapeBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"3a9b65733c50e36182c2906a692297ef80720466","commitMessage":"@@@Move stored flag from TextSearchInfo to MappedFieldType (#62717)\n\n","date":"2020-09-22 21:41:24","modifiedFileCount":"84","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-10-14 18:13:27","codes":[{"authorDate":"2020-08-07 05:14:20","commitOrder":6,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":97,"groupId":"48589","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f9/a23d703097fe2887e119c3f599ab98da83f7c1.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"N"},{"authorDate":"2020-10-14 18:13:27","commitOrder":6,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType\n                = new GeoShapeWithDocValuesFieldType(\"field\", true, false, true, null, Collections.emptyMap());\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-10-14 18:13:27","endLine":102,"groupId":"48589","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/84/6adfe87af5847ec724fe74e79f4f2cdebb8d99.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType\n                = new GeoShapeWithDocValuesFieldMapper.GeoShapeWithDocValuesFieldType(\"field\", true, false, true, Collections.emptyMap());\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/search/aggregations/metrics/GeoShapeBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"f4adb2de3871d9b4952c245fb944300c50851f94","commitMessage":"@@@Move geometry indexer to FieldMapper (#63618)\n\nIndexing and parsing of geometrical objects is handled by specialised\nGeoIndexer and GeoParser classes.  which are currently set on the FieldTypes\nfor their respective field mappers. Seeing as indexing is handled entirely\nby FieldMappers.  we should move them there instead. This allows us to\nremove the complex generics on AbstractGeometryFieldType.  and simplify\nthem on the corresponding FieldMappers as well.","date":"2020-10-14 18:13:27","modifiedFileCount":"13","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-10-22 16:11:41","codes":[{"authorDate":"2020-08-07 05:14:20","commitOrder":7,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":97,"groupId":"48589","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f9/a23d703097fe2887e119c3f599ab98da83f7c1.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"N"},{"authorDate":"2020-10-22 16:11:41","commitOrder":7,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType\n                = new GeoShapeWithDocValuesFieldType(\"field\", true, true, Orientation.RIGHT, null, Collections.emptyMap());\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-10-22 16:11:41","endLine":103,"groupId":"48589","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e4/3369d533dbcf3b083bfd3c4d9952b4cb428b0b.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType\n                = new GeoShapeWithDocValuesFieldType(\"field\", true, false, true, null, Collections.emptyMap());\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/search/aggregations/metrics/GeoShapeBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"bfaf3040c6e5245b6d3367483ba86c676dd09bd2","commitMessage":"@@@Convert geo field mappers to Parametrized form (#63836)\n\nRelates to #62988","date":"2020-10-22 16:11:41","modifiedFileCount":"42","status":"M","submitter":"Alan Woodward"},{"authorTime":"2021-07-28 15:24:54","codes":[{"authorDate":"2020-08-07 05:14:20","commitOrder":8,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":97,"groupId":"105230","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f9/a23d703097fe2887e119c3f599ab98da83f7c1.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\");\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"N"},{"authorDate":"2021-07-28 15:24:54","commitOrder":8,"curCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType\n                = new GeoShapeWithDocValuesFieldType(\"field\", true, true, Orientation.RIGHT, null, null, Collections.emptyMap());\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","date":"2021-07-28 15:24:54","endLine":102,"groupId":"105230","id":14,"instanceNumber":2,"isCurCommit":1,"methodName":"testUnmappedFieldWithDocs","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/49/34c302e833c62b79442aac32a9cd83eb7e86a3.src","preCode":"    public void testUnmappedFieldWithDocs() throws Exception {\n        try (Directory dir = newDirectory(); RandomIndexWriter w = new RandomIndexWriter(random(), dir)) {\n            if (randomBoolean()) {\n                Document doc = new Document();\n                doc.add(new LatLonDocValuesField(\"field\", 0.0, 0.0));\n                w.addDocument(doc);\n            }\n\n            GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\")\n                .field(\"non_existent\")\n                .wrapLongitude(false);\n\n            MappedFieldType fieldType\n                = new GeoShapeWithDocValuesFieldType(\"field\", true, true, Orientation.RIGHT, null, Collections.emptyMap());\n            try (IndexReader reader = w.getReader()) {\n                IndexSearcher searcher = new IndexSearcher(reader);\n                InternalGeoBounds bounds = searchAndReduce(searcher, new MatchAllDocsQuery(), aggBuilder, fieldType);\n                assertTrue(Double.isInfinite(bounds.top));\n                assertTrue(Double.isInfinite(bounds.bottom));\n                assertTrue(Double.isInfinite(bounds.posLeft));\n                assertTrue(Double.isInfinite(bounds.posRight));\n                assertTrue(Double.isInfinite(bounds.negLeft));\n                assertTrue(Double.isInfinite(bounds.negRight));\n                assertFalse(AggregationInspectionHelper.hasValue(bounds));\n            }\n        }\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/search/aggregations/metrics/GeoShapeBoundsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"368e2e0755120e0384e0b2a373d759d96a35d6e6","commitMessage":"@@@Add 'mvt' field type format to geo fields (#75367)\n\nIn this commit we extend the Fields API formats for geo data in order to produce vector tiles features directly \non the data nodes. That helps the vector tile API to reduce the size of the data that needs to pull in order to \ncreate the answer.","date":"2021-07-28 15:24:54","modifiedFileCount":"12","status":"M","submitter":"Ignacio Vera"}]
