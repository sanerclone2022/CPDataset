[{"authorTime":"2020-08-06 04:58:53","codes":[{"authorDate":"2020-08-06 04:58:53","commitOrder":1,"curCode":"    public void visitConditional(EConditional userConditionalNode, ScriptScope scriptScope) {\n        ConditionalNode irConditionalNode = new ConditionalNode();\n        irConditionalNode.setLocation(userConditionalNode.getLocation());\n        irConditionalNode.setExpressionType(scriptScope.getDecoration(userConditionalNode, ValueType.class).getValueType());\n        irConditionalNode.setConditionNode(injectCast(userConditionalNode.getConditionNode(), scriptScope));\n        irConditionalNode.setLeftNode(injectCast(userConditionalNode.getTrueNode(), scriptScope));\n        irConditionalNode.setRightNode(injectCast(userConditionalNode.getFalseNode(), scriptScope));\n\n        scriptScope.putDecoration(userConditionalNode, new IRNodeDecoration(irConditionalNode));\n    }\n","date":"2020-08-06 04:58:53","endLine":828,"groupId":"5379","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitConditional","params":"(EConditionaluserConditionalNode@ScriptScopescriptScope)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/03/79055b13dcb74561c5ebb5de1d500c338fbecb.src","preCode":"    public void visitConditional(EConditional userConditionalNode, ScriptScope scriptScope) {\n        ConditionalNode irConditionalNode = new ConditionalNode();\n        irConditionalNode.setLocation(userConditionalNode.getLocation());\n        irConditionalNode.setExpressionType(scriptScope.getDecoration(userConditionalNode, ValueType.class).getValueType());\n        irConditionalNode.setConditionNode(injectCast(userConditionalNode.getConditionNode(), scriptScope));\n        irConditionalNode.setLeftNode(injectCast(userConditionalNode.getTrueNode(), scriptScope));\n        irConditionalNode.setRightNode(injectCast(userConditionalNode.getFalseNode(), scriptScope));\n\n        scriptScope.putDecoration(userConditionalNode, new IRNodeDecoration(irConditionalNode));\n    }\n","realPath":"modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":819,"status":"B"},{"authorDate":"2020-08-06 04:58:53","commitOrder":1,"curCode":"    public void visitElvis(EElvis userElvisNode, ScriptScope scriptScope) {\n        ElvisNode irElvisNode = new ElvisNode();\n        irElvisNode.setLocation(userElvisNode.getLocation());\n        irElvisNode.setExpressionType(scriptScope.getDecoration(userElvisNode, ValueType.class).getValueType());\n        irElvisNode.setLeftNode(injectCast(userElvisNode.getLeftNode(), scriptScope));\n        irElvisNode.setRightNode(injectCast(userElvisNode.getRightNode(), scriptScope));\n\n        scriptScope.putDecoration(userElvisNode, new IRNodeDecoration(irElvisNode));\n    }\n","date":"2020-08-06 04:58:53","endLine":839,"groupId":"5379","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitElvis","params":"(EElvisuserElvisNode@ScriptScopescriptScope)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/03/79055b13dcb74561c5ebb5de1d500c338fbecb.src","preCode":"    public void visitElvis(EElvis userElvisNode, ScriptScope scriptScope) {\n        ElvisNode irElvisNode = new ElvisNode();\n        irElvisNode.setLocation(userElvisNode.getLocation());\n        irElvisNode.setExpressionType(scriptScope.getDecoration(userElvisNode, ValueType.class).getValueType());\n        irElvisNode.setLeftNode(injectCast(userElvisNode.getLeftNode(), scriptScope));\n        irElvisNode.setRightNode(injectCast(userElvisNode.getRightNode(), scriptScope));\n\n        scriptScope.putDecoration(userElvisNode, new IRNodeDecoration(irElvisNode));\n    }\n","realPath":"modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":831,"status":"B"}],"commitId":"45402118936d96100445723a849c869627cf1dc2","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-06 04:58:53","modifiedFileCount":"224","status":"B","submitter":"Nik Everett"},{"authorTime":"2020-10-01 23:35:21","codes":[{"authorDate":"2020-10-01 23:35:21","commitOrder":2,"curCode":"    public void visitConditional(EConditional userConditionalNode, ScriptScope scriptScope) {\n        ConditionalNode irConditionalNode = new ConditionalNode(userConditionalNode.getLocation());\n        irConditionalNode.setExpressionType(scriptScope.getDecoration(userConditionalNode, ValueType.class).getValueType());\n        irConditionalNode.setConditionNode(injectCast(userConditionalNode.getConditionNode(), scriptScope));\n        irConditionalNode.setLeftNode(injectCast(userConditionalNode.getTrueNode(), scriptScope));\n        irConditionalNode.setRightNode(injectCast(userConditionalNode.getFalseNode(), scriptScope));\n\n        scriptScope.putDecoration(userConditionalNode, new IRNodeDecoration(irConditionalNode));\n    }\n","date":"2020-10-01 23:35:21","endLine":1006,"groupId":"5379","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitConditional","params":"(EConditionaluserConditionalNode@ScriptScopescriptScope)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d9/5b1ad931c719b6adb1459f11931d88b63cb3df.src","preCode":"    public void visitConditional(EConditional userConditionalNode, ScriptScope scriptScope) {\n        ConditionalNode irConditionalNode = new ConditionalNode();\n        irConditionalNode.setLocation(userConditionalNode.getLocation());\n        irConditionalNode.setExpressionType(scriptScope.getDecoration(userConditionalNode, ValueType.class).getValueType());\n        irConditionalNode.setConditionNode(injectCast(userConditionalNode.getConditionNode(), scriptScope));\n        irConditionalNode.setLeftNode(injectCast(userConditionalNode.getTrueNode(), scriptScope));\n        irConditionalNode.setRightNode(injectCast(userConditionalNode.getFalseNode(), scriptScope));\n\n        scriptScope.putDecoration(userConditionalNode, new IRNodeDecoration(irConditionalNode));\n    }\n","realPath":"modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":998,"status":"M"},{"authorDate":"2020-10-01 23:35:21","commitOrder":2,"curCode":"    public void visitElvis(EElvis userElvisNode, ScriptScope scriptScope) {\n        ElvisNode irElvisNode = new ElvisNode(userElvisNode.getLocation());\n        irElvisNode.setExpressionType(scriptScope.getDecoration(userElvisNode, ValueType.class).getValueType());\n        irElvisNode.setLeftNode(injectCast(userElvisNode.getLeftNode(), scriptScope));\n        irElvisNode.setRightNode(injectCast(userElvisNode.getRightNode(), scriptScope));\n\n        scriptScope.putDecoration(userElvisNode, new IRNodeDecoration(irElvisNode));\n    }\n","date":"2020-10-01 23:35:21","endLine":1016,"groupId":"5379","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitElvis","params":"(EElvisuserElvisNode@ScriptScopescriptScope)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d9/5b1ad931c719b6adb1459f11931d88b63cb3df.src","preCode":"    public void visitElvis(EElvis userElvisNode, ScriptScope scriptScope) {\n        ElvisNode irElvisNode = new ElvisNode();\n        irElvisNode.setLocation(userElvisNode.getLocation());\n        irElvisNode.setExpressionType(scriptScope.getDecoration(userElvisNode, ValueType.class).getValueType());\n        irElvisNode.setLeftNode(injectCast(userElvisNode.getLeftNode(), scriptScope));\n        irElvisNode.setRightNode(injectCast(userElvisNode.getRightNode(), scriptScope));\n\n        scriptScope.putDecoration(userElvisNode, new IRNodeDecoration(irElvisNode));\n    }\n","realPath":"modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1009,"status":"M"}],"commitId":"d23823bfba07c147ec3d6d925314f10ad5d4041a","commitMessage":"@@@Make location final in IRNode (#63078)\n\nThis change makes Location a final member of IRNode as opposed to possibly changing it. This \nensures that all ir nodes have a Location for error information upon creation that cannot be updated \nso each node can be tracked as where it came from originally.","date":"2020-10-01 23:35:21","modifiedFileCount":"81","status":"M","submitter":"Jack Conradson"},{"authorTime":"2020-10-23 02:47:32","codes":[{"authorDate":"2020-10-23 02:47:32","commitOrder":3,"curCode":"    public void visitConditional(EConditional userConditionalNode, ScriptScope scriptScope) {\n        ConditionalNode irConditionalNode = new ConditionalNode(userConditionalNode.getLocation());\n        irConditionalNode.attachDecoration(\n                new IRDExpressionType(scriptScope.getDecoration(userConditionalNode, ValueType.class).getValueType()));\n        irConditionalNode.setConditionNode(injectCast(userConditionalNode.getConditionNode(), scriptScope));\n        irConditionalNode.setLeftNode(injectCast(userConditionalNode.getTrueNode(), scriptScope));\n        irConditionalNode.setRightNode(injectCast(userConditionalNode.getFalseNode(), scriptScope));\n\n        scriptScope.putDecoration(userConditionalNode, new IRNodeDecoration(irConditionalNode));\n    }\n","date":"2020-10-23 02:47:32","endLine":1037,"groupId":"101101","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"visitConditional","params":"(EConditionaluserConditionalNode@ScriptScopescriptScope)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/af/321f84d7e8689020f2217af4cd8922fc61d54c.src","preCode":"    public void visitConditional(EConditional userConditionalNode, ScriptScope scriptScope) {\n        ConditionalNode irConditionalNode = new ConditionalNode(userConditionalNode.getLocation());\n        irConditionalNode.setExpressionType(scriptScope.getDecoration(userConditionalNode, ValueType.class).getValueType());\n        irConditionalNode.setConditionNode(injectCast(userConditionalNode.getConditionNode(), scriptScope));\n        irConditionalNode.setLeftNode(injectCast(userConditionalNode.getTrueNode(), scriptScope));\n        irConditionalNode.setRightNode(injectCast(userConditionalNode.getFalseNode(), scriptScope));\n\n        scriptScope.putDecoration(userConditionalNode, new IRNodeDecoration(irConditionalNode));\n    }\n","realPath":"modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1028,"status":"M"},{"authorDate":"2020-10-23 02:47:32","commitOrder":3,"curCode":"    public void visitElvis(EElvis userElvisNode, ScriptScope scriptScope) {\n        ElvisNode irElvisNode = new ElvisNode(userElvisNode.getLocation());\n        irElvisNode.attachDecoration(new IRDExpressionType(scriptScope.getDecoration(userElvisNode, ValueType.class).getValueType()));\n        irElvisNode.setLeftNode(injectCast(userElvisNode.getLeftNode(), scriptScope));\n        irElvisNode.setRightNode(injectCast(userElvisNode.getRightNode(), scriptScope));\n\n        scriptScope.putDecoration(userElvisNode, new IRNodeDecoration(irElvisNode));\n    }\n","date":"2020-10-23 02:47:32","endLine":1047,"groupId":"101101","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"visitElvis","params":"(EElvisuserElvisNode@ScriptScopescriptScope)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/af/321f84d7e8689020f2217af4cd8922fc61d54c.src","preCode":"    public void visitElvis(EElvis userElvisNode, ScriptScope scriptScope) {\n        ElvisNode irElvisNode = new ElvisNode(userElvisNode.getLocation());\n        irElvisNode.setExpressionType(scriptScope.getDecoration(userElvisNode, ValueType.class).getValueType());\n        irElvisNode.setLeftNode(injectCast(userElvisNode.getLeftNode(), scriptScope));\n        irElvisNode.setRightNode(injectCast(userElvisNode.getRightNode(), scriptScope));\n\n        scriptScope.putDecoration(userElvisNode, new IRNodeDecoration(irElvisNode));\n    }\n","realPath":"modules/lang-painless/src/main/java/org/elasticsearch/painless/phase/DefaultUserTreeToIRTreePhase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1040,"status":"M"}],"commitId":"6eb168e640b1af65e307a873844f8d65e5a2e8f7","commitMessage":"@@@Add decorations to ir nodes in Painless (#63894)\n\nThis change starts to switch all ir nodes to use decorations instead of specific member data. For this \nspecific change.  we add only an expression type decoration to begin with to keep the change smaller. \nOther members of the ir nodes will be converted to decorations in future changes.\n\nThe decoration system has two important advantages:\n- The first is it's consistent with the user nodes as generated data is attached to them as a decoration.  \nso we have a clear.  consistent model for how to use both trees.\n- This allows additionally generated data to be attached as necessary for optimization phases making \nthe ir tree extendable which is one of our primary.  long-term goals.","date":"2020-10-23 02:47:32","modifiedFileCount":"6","status":"M","submitter":"Jack Conradson"}]
