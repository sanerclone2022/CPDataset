[{"authorTime":"2019-08-10 01:22:00","codes":[{"authorDate":"2019-08-10 01:22:00","commitOrder":1,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"bbox (10.0, 20.0, 40.0, 30.0)\", wkt.toWKT(new Rectangle(10, 20, 40, 30)));\n        assertEquals(new Rectangle(10, 20, 40, 30), wkt.fromWKT(\"bbox (10.0, 20.0, 40.0, 30.0)\"));\n\n        assertEquals(\"bbox EMPTY\", wkt.toWKT(Rectangle.EMPTY));\n        assertEquals(Rectangle.EMPTY, wkt.fromWKT(\"bbox EMPTY)\"));\n    }\n","date":"2019-08-10 01:22:00","endLine":45,"groupId":"53686","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b6/13e5b191f19824c8b5edff82b2adcc4228be19.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"bbox (10.0, 20.0, 40.0, 30.0)\", wkt.toWKT(new Rectangle(10, 20, 40, 30)));\n        assertEquals(new Rectangle(10, 20, 40, 30), wkt.fromWKT(\"bbox (10.0, 20.0, 40.0, 30.0)\"));\n\n        assertEquals(\"bbox EMPTY\", wkt.toWKT(Rectangle.EMPTY));\n        assertEquals(Rectangle.EMPTY, wkt.fromWKT(\"bbox EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/RectangleTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2019-08-10 01:22:00","commitOrder":1,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"circle (20.0 10.0 15.0)\", wkt.toWKT(new Circle(20, 10, 15)));\n        assertEquals(new Circle(20, 10, 15), wkt.fromWKT(\"circle (20.0 10.0 15.0)\"));\n\n        assertEquals(\"circle (20.0 10.0 15.0 25.0)\", wkt.toWKT(new Circle(20, 10, 25, 15)));\n        assertEquals(new Circle(20, 10, 25, 15), wkt.fromWKT(\"circle (20.0 10.0 15.0 25.0)\"));\n\n        assertEquals(\"circle EMPTY\", wkt.toWKT(Circle.EMPTY));\n        assertEquals(Circle.EMPTY, wkt.fromWKT(\"circle EMPTY)\"));\n    }\n","date":"2019-08-10 01:22:00","endLine":51,"groupId":"53686","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/eb/a391dc97038a3dada273e4a6098c23dd297df6.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"circle (20.0 10.0 15.0)\", wkt.toWKT(new Circle(20, 10, 15)));\n        assertEquals(new Circle(20, 10, 15), wkt.fromWKT(\"circle (20.0 10.0 15.0)\"));\n\n        assertEquals(\"circle (20.0 10.0 15.0 25.0)\", wkt.toWKT(new Circle(20, 10, 25, 15)));\n        assertEquals(new Circle(20, 10, 25, 15), wkt.fromWKT(\"circle (20.0 10.0 15.0 25.0)\"));\n\n        assertEquals(\"circle EMPTY\", wkt.toWKT(Circle.EMPTY));\n        assertEquals(Circle.EMPTY, wkt.fromWKT(\"circle EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/CircleTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"}],"commitId":"13a8835e5a8615aeb8304b48fd9e543a83361e13","commitMessage":"@@@Geo: Change order of parameter in Geometries to lon.  lat (#45332)\n\nChanges the order of parameters in Geometries from lat.  lon to lon.  lat\nand moves all Geometry classes are moved to the\norg.elasticsearch.geomtery package.\n\nCloses #45048","date":"2019-08-10 01:22:00","modifiedFileCount":"65","status":"B","submitter":"Igor Motov"},{"authorTime":"2019-12-19 01:28:56","codes":[{"authorDate":"2019-12-19 01:28:56","commitOrder":2,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"BBOX (10.0, 20.0, 40.0, 30.0)\", wkt.toWKT(new Rectangle(10, 20, 40, 30)));\n        assertEquals(new Rectangle(10, 20, 40, 30), wkt.fromWKT(\"BBOX (10.0, 20.0, 40.0, 30.0)\"));\n\n        assertEquals(\"BBOX EMPTY\", wkt.toWKT(Rectangle.EMPTY));\n        assertEquals(Rectangle.EMPTY, wkt.fromWKT(\"BBOX EMPTY)\"));\n    }\n","date":"2019-12-19 01:28:56","endLine":45,"groupId":"53686","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/32/ce6abe8de6eb482292b652493c601b42779bce.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"bbox (10.0, 20.0, 40.0, 30.0)\", wkt.toWKT(new Rectangle(10, 20, 40, 30)));\n        assertEquals(new Rectangle(10, 20, 40, 30), wkt.fromWKT(\"bbox (10.0, 20.0, 40.0, 30.0)\"));\n\n        assertEquals(\"bbox EMPTY\", wkt.toWKT(Rectangle.EMPTY));\n        assertEquals(Rectangle.EMPTY, wkt.fromWKT(\"bbox EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/RectangleTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2019-12-19 01:28:56","commitOrder":2,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"CIRCLE (20.0 10.0 15.0)\", wkt.toWKT(new Circle(20, 10, 15)));\n        assertEquals(new Circle(20, 10, 15), wkt.fromWKT(\"circle (20.0 10.0 15.0)\"));\n\n        assertEquals(\"CIRCLE (20.0 10.0 15.0 25.0)\", wkt.toWKT(new Circle(20, 10, 25, 15)));\n        assertEquals(new Circle(20, 10, 25, 15), wkt.fromWKT(\"circle (20.0 10.0 15.0 25.0)\"));\n\n        assertEquals(\"CIRCLE EMPTY\", wkt.toWKT(Circle.EMPTY));\n        assertEquals(Circle.EMPTY, wkt.fromWKT(\"CIRCLE EMPTY)\"));\n    }\n","date":"2019-12-19 01:28:56","endLine":51,"groupId":"53686","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9f/42118821fe78080a257fe937fd89a453b51008.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"circle (20.0 10.0 15.0)\", wkt.toWKT(new Circle(20, 10, 15)));\n        assertEquals(new Circle(20, 10, 15), wkt.fromWKT(\"circle (20.0 10.0 15.0)\"));\n\n        assertEquals(\"circle (20.0 10.0 15.0 25.0)\", wkt.toWKT(new Circle(20, 10, 25, 15)));\n        assertEquals(new Circle(20, 10, 25, 15), wkt.fromWKT(\"circle (20.0 10.0 15.0 25.0)\"));\n\n        assertEquals(\"circle EMPTY\", wkt.toWKT(Circle.EMPTY));\n        assertEquals(Circle.EMPTY, wkt.fromWKT(\"circle EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/CircleTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"}],"commitId":"a26e4d1e5e17d9033ba1bb1d3272cdee8709d8bd","commitMessage":"@@@Geo: Switch generated WKT to upper case (#50285)\n\nSwitches generated WKT to upper case to\nconform to the standard recommendation.\n\nRelates #49568\n","date":"2019-12-19 01:28:56","modifiedFileCount":"14","status":"M","submitter":"Igor Motov"},{"authorTime":"2021-06-17 05:31:31","codes":[{"authorDate":"2021-06-17 05:31:31","commitOrder":3,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        GeometryValidator validator = GeographyValidator.instance(true);\n        assertEquals(\"BBOX (10.0, 20.0, 40.0, 30.0)\", WellKnownText.toWKT(new Rectangle(10, 20, 40, 30)));\n        assertEquals(new Rectangle(10, 20, 40, 30), WellKnownText.fromWKT(validator, true, \"BBOX (10.0, 20.0, 40.0, 30.0)\"));\n\n        assertEquals(\"BBOX EMPTY\", WellKnownText.toWKT(Rectangle.EMPTY));\n        assertEquals(Rectangle.EMPTY, WellKnownText.fromWKT(validator, true, \"BBOX EMPTY)\"));\n    }\n","date":"2021-06-17 05:31:31","endLine":34,"groupId":"101800","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7a/442b58dce83728ee78b7ea4a9f3ad9d03223f2.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"BBOX (10.0, 20.0, 40.0, 30.0)\", wkt.toWKT(new Rectangle(10, 20, 40, 30)));\n        assertEquals(new Rectangle(10, 20, 40, 30), wkt.fromWKT(\"BBOX (10.0, 20.0, 40.0, 30.0)\"));\n\n        assertEquals(\"BBOX EMPTY\", wkt.toWKT(Rectangle.EMPTY));\n        assertEquals(Rectangle.EMPTY, wkt.fromWKT(\"BBOX EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/RectangleTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"M"},{"authorDate":"2021-06-17 05:31:31","commitOrder":3,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        GeometryValidator validator =  GeographyValidator.instance(true);\n        assertEquals(\"CIRCLE (20.0 10.0 15.0)\", WellKnownText.toWKT(new Circle(20, 10, 15)));\n        assertEquals(new Circle(20, 10, 15), WellKnownText.fromWKT(validator, true, \"circle (20.0 10.0 15.0)\"));\n\n        assertEquals(\"CIRCLE (20.0 10.0 15.0 25.0)\", WellKnownText.toWKT(new Circle(20, 10, 25, 15)));\n        assertEquals(new Circle(20, 10, 25, 15), WellKnownText.fromWKT(validator, true, \"circle (20.0 10.0 15.0 25.0)\"));\n\n        assertEquals(\"CIRCLE EMPTY\", WellKnownText.toWKT(Circle.EMPTY));\n        assertEquals(Circle.EMPTY, WellKnownText.fromWKT(validator, true, \"CIRCLE EMPTY)\"));\n    }\n","date":"2021-06-17 05:31:31","endLine":40,"groupId":"101800","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/16/b732597236af254a684a815cbc792b0fa0a3a0.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"CIRCLE (20.0 10.0 15.0)\", wkt.toWKT(new Circle(20, 10, 15)));\n        assertEquals(new Circle(20, 10, 15), wkt.fromWKT(\"circle (20.0 10.0 15.0)\"));\n\n        assertEquals(\"CIRCLE (20.0 10.0 15.0 25.0)\", wkt.toWKT(new Circle(20, 10, 25, 15)));\n        assertEquals(new Circle(20, 10, 25, 15), wkt.fromWKT(\"circle (20.0 10.0 15.0 25.0)\"));\n\n        assertEquals(\"CIRCLE EMPTY\", wkt.toWKT(Circle.EMPTY));\n        assertEquals(Circle.EMPTY, wkt.fromWKT(\"CIRCLE EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/CircleTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"}],"commitId":"6a8f8f3f718bd21bf14176049c9e1f1def13463b","commitMessage":"@@@Merge remote-tracking branch 'elastic/master' into feature/vector-tiles\n","date":"2021-06-17 05:31:31","modifiedFileCount":"4429","status":"M","submitter":"Igor Motov"}]
