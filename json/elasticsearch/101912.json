[{"authorTime":"2020-06-11 17:29:27","codes":[{"authorDate":"2020-06-08 21:39:55","commitOrder":4,"curCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate(\"@timestamp\"));\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n    }\n","date":"2020-06-08 21:39:55","endLine":60,"groupId":"4637","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateDataStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/28/669ab78010eebd3b86bec806f8a0e1d4a0524c.src","preCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate(\"@timestamp\"));\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"NB"},{"authorDate":"2020-06-11 17:29:27","commitOrder":4,"curCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate(\"@timestamp\"));\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest req =\n            new MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","date":"2020-06-11 17:29:27","endLine":147,"groupId":"4644","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createDataStream","params":"(finalStringdataStreamName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/dc/4408ca85db306545f26aa8f244a6f96b15bfd6.src","preCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate(\"@timestamp\"));\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest req =\n            new MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"B"}],"commitId":"01b70b40684a7d795aca69ac63a128474a93429c","commitMessage":"@@@Prohibit append-only writes targeting backing indices directly. (#57788)\n\nAppend-only writes can only target the corresponding data stream.\n\nRelates to #53100","date":"2020-06-11 17:29:27","modifiedFileCount":"3","status":"M","submitter":"Martijn van Groningen"},{"authorTime":"2020-07-14 20:47:57","codes":[{"authorDate":"2020-07-14 20:47:57","commitOrder":5,"curCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate());\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n    }\n","date":"2020-07-14 20:47:57","endLine":62,"groupId":"4637","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateDataStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d9/b7525c711833d4cbaee1a54a9f115d9af44124.src","preCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate(\"@timestamp\"));\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2020-07-14 20:47:57","commitOrder":5,"curCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate());\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest req =\n            new MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","date":"2020-07-14 20:47:57","endLine":150,"groupId":"44728","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createDataStream","params":"(finalStringdataStreamName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d9/b7525c711833d4cbaee1a54a9f115d9af44124.src","preCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate(\"@timestamp\"));\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest req =\n            new MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"}],"commitId":"f426916b01a3aea836dddd4a820f640ed322f94d","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-14 20:47:57","modifiedFileCount":"165","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-10-26 20:35:36","codes":[{"authorDate":"2020-10-26 20:35:36","commitOrder":6,"curCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate(), null);\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n    }\n","date":"2020-10-26 20:35:36","endLine":63,"groupId":"4637","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateDataStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3e/338058732c19a1315d3b416582d25127c82ee8.src","preCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate());\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2020-10-26 20:35:36","commitOrder":6,"curCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate(), null);\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest req =\n            new MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","date":"2020-10-26 20:35:36","endLine":152,"groupId":"36720","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createDataStream","params":"(finalStringdataStreamName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3e/338058732c19a1315d3b416582d25127c82ee8.src","preCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate());\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest req =\n            new MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"dc855add492f3b447a2d3ea0a290458f9fc9207e","commitMessage":"@@@Add a template parameter to override auto_create_index value (#61858)\n\nCloses #20640.\n\nThis PR introduces a new parameter to v2 templates.  `allow_auto_create`. \nwhich allows templates to override the cluster setting `auto_create_index`.\nNotes:\n\n   * `AutoCreateIndex` now looks for a matching v2 template.  and if its\n     `allow_auto_create` setting is true.  it overrides the usual logic.\n   * `TransportBulkAction` previously used `AutoCreateIndex` to check\n     whether missing indices should be created. We now rely on\n     `AutoCreateAction`.  which was already differentiating between creating\n     indices and creating data streams.  I've updated `AutoCreateAction` to\n     use `AutoCreateIndex`. Data streams are also influenced by\n     `allow_auto_create`.  in that their default auto-create behaviour can\n     be disabled with this setting.\n   * Most of the Java file changes are due to introducing an extra\n     constructor parameter to `ComposableIndexTemplate`.\n   * I've added the new setting to various x-pack templates\n   * I added a YAML test to check that watches can be created even when\n     `auto_create_index` is `false`.","date":"2020-10-26 20:35:36","modifiedFileCount":"32","status":"M","submitter":"Rory Hunter"},{"authorTime":"2021-01-12 00:32:42","codes":[{"authorDate":"2021-01-12 00:32:42","commitOrder":7,"curCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate.Builder()\n            .indexPatterns(List.of(dataStreamName + \"*\"))\n            .dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate())\n            .build();\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n    }\n","date":"2021-01-12 00:32:42","endLine":65,"groupId":"4637","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateDataStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/250e1ac123be4cd1573f7e292f55e7abaf16a8.src","preCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate(), null);\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2021-01-12 00:32:42","commitOrder":7,"curCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate.Builder()\n            .indexPatterns(List.of(dataStreamName + \"*\"))\n            .dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate())\n            .build();\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest req =\n            new MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","date":"2021-01-12 00:32:42","endLine":156,"groupId":"4637","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createDataStream","params":"(finalStringdataStreamName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/250e1ac123be4cd1573f7e292f55e7abaf16a8.src","preCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"), null, null, null, null, null,\n            new ComposableIndexTemplate.DataStreamTemplate(), null);\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest req =\n            new MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"d57dd0a45ad7b0fd4eba2d8ecdc85ac78a11269a","commitMessage":"@@@#60750 Added Composable  Index Template Builder (#61124)\n\n","date":"2021-01-12 00:32:42","modifiedFileCount":"10","status":"M","submitter":"Antariksh"},{"authorTime":"2021-01-12 00:32:42","codes":[{"authorDate":"2021-04-21 21:28:12","commitOrder":8,"curCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate.Builder()\n            .indexPatterns(List.of(dataStreamName + \"*\"))\n            .dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate())\n            .build();\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        ClusterState newState =\n            MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).isSystem(), is(false));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).isHidden(), is(false));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).isReplicated(), is(false));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).isSystem(), is(false));\n    }\n","date":"2021-04-21 21:28:12","endLine":66,"groupId":"4637","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateDataStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bb/b90028b01d6b7ea64387c5d0cc06658fc3724a.src","preCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate.Builder()\n            .indexPatterns(List.of(dataStreamName + \"*\"))\n            .dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate())\n            .build();\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2021-01-12 00:32:42","commitOrder":8,"curCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate.Builder()\n            .indexPatterns(List.of(dataStreamName + \"*\"))\n            .dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate())\n            .build();\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest req =\n            new MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","date":"2021-01-12 00:32:42","endLine":156,"groupId":"4637","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createDataStream","params":"(finalStringdataStreamName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/250e1ac123be4cd1573f7e292f55e7abaf16a8.src","preCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate.Builder()\n            .indexPatterns(List.of(dataStreamName + \"*\"))\n            .dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate())\n            .build();\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest req =\n            new MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"N"}],"commitId":"9a86dde3572a6f3999eea75bc3ce30b965837ba3","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-04-21 21:28:12","modifiedFileCount":"1285","status":"M","submitter":"iverase"},{"authorTime":"2021-09-14 17:13:58","codes":[{"authorDate":"2021-09-14 17:13:58","commitOrder":9,"curCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate.Builder()\n            .indexPatterns(List.of(dataStreamName + \"*\"))\n            .dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate())\n            .build();\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req = new CreateDataStreamClusterStateUpdateRequest(dataStreamName);\n        ClusterState newState =\n            MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).isSystem(), is(false));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).isHidden(), is(false));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).isReplicated(), is(false));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).isSystem(), is(false));\n    }\n","date":"2021-09-14 17:13:58","endLine":70,"groupId":"101912","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"testCreateDataStream","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0a/b1cd9fdd89f257a70c73af17b08137d7ffde16.src","preCode":"    public void testCreateDataStream() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ComposableIndexTemplate template = new ComposableIndexTemplate.Builder()\n            .indexPatterns(List.of(dataStreamName + \"*\"))\n            .dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate())\n            .build();\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        ClusterState newState =\n            MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n        assertThat(newState.metadata().dataStreams().size(), equalTo(1));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(), equalTo(dataStreamName));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).isSystem(), is(false));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).isHidden(), is(false));\n        assertThat(newState.metadata().dataStreams().get(dataStreamName).isReplicated(), is(false));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)), notNullValue());\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).getSettings().get(\"index.hidden\"),\n            equalTo(\"true\"));\n        assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName, 1)).isSystem(), is(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2021-09-14 17:13:58","commitOrder":9,"curCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate.Builder()\n            .indexPatterns(List.of(dataStreamName + \"*\"))\n            .dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate())\n            .build();\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req = new CreateDataStreamClusterStateUpdateRequest(dataStreamName);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","date":"2021-09-14 17:13:58","endLine":294,"groupId":"101912","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"createDataStream","params":"(finalStringdataStreamName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0a/b1cd9fdd89f257a70c73af17b08137d7ffde16.src","preCode":"    public static ClusterState createDataStream(final String dataStreamName) throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        ComposableIndexTemplate template = new ComposableIndexTemplate.Builder()\n            .indexPatterns(List.of(dataStreamName + \"*\"))\n            .dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate())\n            .build();\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .metadata(Metadata.builder().put(\"template\", template).build())\n            .build();\n        MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest req =\n            new MetadataCreateDataStreamService.CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":283,"status":"M"}],"commitId":"bb675924912a0ed4e30b0234003f5e28df4a008c","commitMessage":"@@@Add startTime field to create data stream action request class. (#77660)\n\nThe startTime field only exists for testing purposes. In order\nto reliable control the name of the backing index being created\nas part of this action. Note this field is not exposed on the\nrest layer.\n\nChange DataStreamIT#testCreatingDataStreamAndFirstBackingIndexExistsFails() to\nuse this new field.\n\nOther changes:\n* Removed testAutoCreatingDataStreamAndFirstBackingIndexExistsFails() test.\n  This test also tests what testCreatingDataStreamAndFirstBackingIndexExistsFails()\n  is testing and in order to test it properly we would need to change the index action\n  request in the same way the create data stream action request is changed.\n* Use `backingIndexEqualTo([name].  [gen])` over\n  `equalTo(DataStream.getDefaultBackingIndexName([name].  [gen]))` where possible.\n  This way of asserting isn't prone to timing and is easier to use.\n\nCloses #77307","date":"2021-09-14 17:13:58","modifiedFileCount":"6","status":"M","submitter":"Martijn van Groningen"}]
