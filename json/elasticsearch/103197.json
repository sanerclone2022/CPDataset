[{"authorTime":"2020-11-06 23:20:25","codes":[{"authorDate":"2020-11-05 18:48:39","commitOrder":4,"curCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new GeoPointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"27.1,42.0\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n    }\n","date":"2020-11-05 18:48:39","endLine":55,"groupId":"61101","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFetchSourceValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e8/f885c560e984d4f7b6bdee1ac2249769f3e2bc.src","preCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new GeoPointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"27.1,42.0\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldTypeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"NB"},{"authorDate":"2020-11-06 23:20:25","commitOrder":4,"curCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new PointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"42.0,27.1\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n    }\n","date":"2020-11-06 23:20:25","endLine":46,"groupId":"61101","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFetchSourceValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a3/4b9ad5f3a548132bb603d041f00455b20d919f.src","preCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new PointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"42.0,27.1\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldTypeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":19,"status":"B"}],"commitId":"038fc354abe932c3fc7615beb4e3b991f1219533","commitMessage":"@@@Use MapperTestCase for cartesian mappers tests (#64705)\n\nThis commit changes the cartesian mapper tests (point and shape fields) so that they use MapperTestCase. ","date":"2020-11-06 23:20:25","modifiedFileCount":"0","status":"M","submitter":"Ignacio Vera"},{"authorTime":"2020-11-06 23:20:25","codes":[{"authorDate":"2021-02-16 23:19:15","commitOrder":5,"curCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new GeoPointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"27.1,42.0\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"malformed\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n    }\n","date":"2021-02-16 23:19:15","endLine":48,"groupId":"61101","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFetchSourceValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/71/0cd05d9c4f197bc3e161c10d49b41f3f9fdb14.src","preCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new GeoPointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"27.1,42.0\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldTypeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":17,"status":"M"},{"authorDate":"2020-11-06 23:20:25","commitOrder":5,"curCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new PointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"42.0,27.1\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n    }\n","date":"2020-11-06 23:20:25","endLine":46,"groupId":"61101","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFetchSourceValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a3/4b9ad5f3a548132bb603d041f00455b20d919f.src","preCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new PointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"42.0,27.1\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldTypeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":19,"status":"N"}],"commitId":"8fba6e4a6d0bb4d751fc6ec161edfe7ef30e73df","commitMessage":"@@@Handle ignored fields directly in SourceValueFetcher (#68738)\n\nCurrently.  the value fetcher framework handles ignored fields by reading\nthe stored values of the _ignored metadata field.  and passing these through\non calls to fetchValues(). However.  this means that if a document has multiple\nvalues indexed for a field.  and one malformed value.  then the fields API will\nignore everything.  including the valid values.  and return an empty list for this\ndocument.\n\nIf a document source contains a malformed value.  then it must have been\nignored at index time. Therefore.  we can safely assume that if we get an\nexception parsing values from source at fetch time.  they were also ignored\nat index time and they can be skipped. This commit moves this exception\nhandling directly into SourceValueFetcher and ArraySourceValueFetcher. \nremoving the need to inspect the _ignored metadata and fixing the case\nof mixed valid and invalid values.","date":"2021-02-16 23:19:15","modifiedFileCount":"18","status":"M","submitter":"Alan Woodward"},{"authorTime":"2021-03-01 19:31:11","codes":[{"authorDate":"2021-02-16 23:19:15","commitOrder":6,"curCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new GeoPointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"27.1,42.0\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"malformed\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n    }\n","date":"2021-02-16 23:19:15","endLine":48,"groupId":"61101","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFetchSourceValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/71/0cd05d9c4f197bc3e161c10d49b41f3f9fdb14.src","preCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new GeoPointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"27.1,42.0\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"malformed\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldTypeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":17,"status":"N"},{"authorDate":"2021-03-01 19:31:11","commitOrder":6,"curCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new PointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"42.0,27.1\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"foo\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n    }\n","date":"2021-03-01 19:31:11","endLine":60,"groupId":"46168","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFetchSourceValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/da/71d912c4db2a45b66568182cb022fe9c7bea66.src","preCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new PointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"42.0,27.1\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldTypeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":20,"status":"M"}],"commitId":"5f478ac1a1bf21c1318fd61c51f6d769baec68d8","commitMessage":"@@@Always validate geo shapes when fetching (#69104)\n\nThe ValueFetcher for geo_shape will shortcut the validation of its\nsource value if it detects that the source format and the requested\nformat are the same. This worked fine when malformed values were\ndealt with by checking the _ignored metadata.  but since #68738\nwe need to always validate source values at fetch time.\n\nThis commit removes this special shortcut logic.  and adds tests\nto check that geo_shape value fetchers do not return malformed\nsource inputs.\n\nFixes #69071","date":"2021-03-01 19:31:11","modifiedFileCount":"9","status":"M","submitter":"Alan Woodward"},{"authorTime":"2021-04-21 21:28:12","codes":[{"authorDate":"2021-04-21 21:28:12","commitOrder":7,"curCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper\n            = new GeoPointFieldMapper.Builder(\"field\", ScriptCompiler.NONE, false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"27.1,42.0\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(\"a\", \"b\"), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"malformed\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n    }\n","date":"2021-04-21 21:28:12","endLine":56,"groupId":"61101","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testFetchSourceValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cb/70e66cc61f96b1b7d1ff9c5e707a086f8d8d5f.src","preCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new GeoPointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"27.1,42.0\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"malformed\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldTypeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":19,"status":"M"},{"authorDate":"2021-04-21 21:28:12","commitOrder":7,"curCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new PointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"42.0,27.1\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"foo\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(\"a\", \"b\"), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n    }\n","date":"2021-04-21 21:28:12","endLine":58,"groupId":"46168","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testFetchSourceValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/77/2635d2e61141a41f8d9ca19c5a47ec71838757.src","preCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new PointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"42.0,27.1\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"foo\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldTypeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":20,"status":"M"}],"commitId":"9a86dde3572a6f3999eea75bc3ce30b965837ba3","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-04-21 21:28:12","modifiedFileCount":"1285","status":"M","submitter":"iverase"},{"authorTime":"2021-09-08 23:34:14","codes":[{"authorDate":"2021-09-08 23:34:14","commitOrder":8,"curCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper\n            = new GeoPointFieldMapper.Builder(\"field\", ScriptCompiler.NONE, false)\n            .build(MapperBuilderContext.ROOT)\n            .fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"27.1,42.0\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(\"a\", \"b\"), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"malformed\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n    }\n","date":"2021-09-08 23:34:14","endLine":63,"groupId":"103197","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testFetchSourceValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c8/efddf9cce66f3617fef74e3834eda3071b904a.src","preCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper\n            = new GeoPointFieldMapper.Builder(\"field\", ScriptCompiler.NONE, false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"27.1,42.0\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(\"a\", \"b\"), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"malformed\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldTypeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"M"},{"authorDate":"2021-09-08 23:34:14","commitOrder":8,"curCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new PointFieldMapper.Builder(\"field\", false)\n            .build(MapperBuilderContext.ROOT)\n            .fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"42.0,27.1\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"foo\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(\"a\", \"b\"), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n    }\n","date":"2021-09-08 23:34:14","endLine":60,"groupId":"103197","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testFetchSourceValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e9/3a6cd2846d90edd95c03b5e6d59323ad81a656.src","preCode":"    public void testFetchSourceValue() throws IOException {\n        MappedFieldType mapper = new PointFieldMapper.Builder(\"field\", false).build(new ContentPath()).fieldType();\n\n        Map<String, Object> jsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(42.0, 27.1));\n        String wktPoint = \"POINT (42.0 27.1)\";\n        Map<String, Object> otherJsonPoint = Map.of(\"type\", \"Point\", \"coordinates\", List.of(30.0, 50.0));\n        String otherWktPoint = \"POINT (30.0 50.0)\";\n\n        \r\n        Object sourceValue = List.of(42.0, 27.1);\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"42.0,27.1\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"foo\";\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = \"POINT (42.0 27.1)\";\n        assertEquals(List.of(jsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n        \r\n        sourceValue = List.of(List.of(42.0, 27.1), List.of(\"a\", \"b\"), List.of(30.0, 50.0));\n        assertEquals(List.of(jsonPoint, otherJsonPoint), fetchSourceValue(mapper, sourceValue, null));\n        assertEquals(List.of(wktPoint, otherWktPoint), fetchSourceValue(mapper, sourceValue, \"wkt\"));\n\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/PointFieldTypeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":20,"status":"M"}],"commitId":"9312eba5ed2a4174e0ac1ce823e98f47a19b4fc1","commitMessage":"@@@Change Mapper.build() to take a context object (#77108)\n\nMapper.build() currently takes a ContentPath object that it can use to generate\nfield type names that will include its parent names. We would like to expand field types\nto include more information about their parents.  and ContentPath does not hold this\ninformation. This commit replaces the ContentPath parameter with a new\nMapperBuilderContext.  which currently holds only the content path information but\ncan be expanded in future to hold parent relationship information.\n\nRelates to #75474","date":"2021-09-08 23:34:14","modifiedFileCount":"97","status":"M","submitter":"Alan Woodward"}]
