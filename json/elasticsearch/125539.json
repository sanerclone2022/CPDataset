[{"authorTime":"2019-02-21 05:34:19","codes":[{"authorDate":"2018-05-03 15:54:15","commitOrder":2,"curCode":"    private void executeTestCase(Query query, AggregationBuilder aggBuilder, Consumer<InternalAggregation> verify,\n                                 CheckedConsumer<RandomIndexWriter, IOException> setup) throws IOException {\n\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n               setup.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                DateFieldMapper.Builder builder = new DateFieldMapper.Builder(\"_name\");\n                DateFieldMapper.DateFieldType fieldType = builder.fieldType();\n                fieldType.setHasDocValues(true);\n                fieldType.setName(HISTO_FIELD);\n\n                MappedFieldType valueFieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                valueFieldType.setHasDocValues(true);\n                valueFieldType.setName(\"value_field\");\n\n                InternalAggregation histogram;\n                histogram = searchAndReduce(indexSearcher, query, aggBuilder, new MappedFieldType[]{fieldType, valueFieldType});\n                verify.accept(histogram);\n            }\n        }\n    }\n","date":"2018-05-03 15:54:15","endLine":311,"groupId":"28347","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"executeTestCase","params":"(Queryquery@AggregationBuilderaggBuilder@Consumer<InternalAggregation>verify@CheckedConsumer<RandomIndexWriter@IOException>setup)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fa/46921a9416f43239a0b5a3314971b07f4631d0.src","preCode":"    private void executeTestCase(Query query, AggregationBuilder aggBuilder, Consumer<InternalAggregation> verify,\n                                 CheckedConsumer<RandomIndexWriter, IOException> setup) throws IOException {\n\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n               setup.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                DateFieldMapper.Builder builder = new DateFieldMapper.Builder(\"_name\");\n                DateFieldMapper.DateFieldType fieldType = builder.fieldType();\n                fieldType.setHasDocValues(true);\n                fieldType.setName(HISTO_FIELD);\n\n                MappedFieldType valueFieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                valueFieldType.setHasDocValues(true);\n                valueFieldType.setName(\"value_field\");\n\n                InternalAggregation histogram;\n                histogram = searchAndReduce(indexSearcher, query, aggBuilder, new MappedFieldType[]{fieldType, valueFieldType});\n                verify.accept(histogram);\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/pipeline/CumulativeSumAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"NB"},{"authorDate":"2019-02-21 05:34:19","commitOrder":2,"curCode":"    private void executeTestCase(Query query, AggregationBuilder aggBuilder, Consumer<InternalAggregation> verify,\n                                 CheckedConsumer<RandomIndexWriter, IOException> setup) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                setup.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                DateFieldMapper.Builder builder = new DateFieldMapper.Builder(\"_name\");\n                DateFieldMapper.DateFieldType fieldType = builder.fieldType();\n                fieldType.setHasDocValues(true);\n                fieldType.setName(SINGLE_VALUED_FIELD_NAME);\n\n                MappedFieldType valueFieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                valueFieldType.setHasDocValues(true);\n                valueFieldType.setName(\"value_field\");\n\n                InternalAggregation histogram;\n                histogram = searchAndReduce(indexSearcher, query, aggBuilder, new MappedFieldType[]{fieldType, valueFieldType});\n\n                verify.accept(histogram);\n            }\n        }\n    }\n","date":"2019-02-21 05:34:19","endLine":780,"groupId":"28347","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"executeTestCase","params":"(Queryquery@AggregationBuilderaggBuilder@Consumer<InternalAggregation>verify@CheckedConsumer<RandomIndexWriter@IOException>setup)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3a/d41bf3dc866b42a8b70e4db13aceaa05f989ab.src","preCode":"    private void executeTestCase(Query query, AggregationBuilder aggBuilder, Consumer<InternalAggregation> verify,\n                                 CheckedConsumer<RandomIndexWriter, IOException> setup) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                setup.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                DateFieldMapper.Builder builder = new DateFieldMapper.Builder(\"_name\");\n                DateFieldMapper.DateFieldType fieldType = builder.fieldType();\n                fieldType.setHasDocValues(true);\n                fieldType.setName(SINGLE_VALUED_FIELD_NAME);\n\n                MappedFieldType valueFieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                valueFieldType.setHasDocValues(true);\n                valueFieldType.setName(\"value_field\");\n\n                InternalAggregation histogram;\n                histogram = searchAndReduce(indexSearcher, query, aggBuilder, new MappedFieldType[]{fieldType, valueFieldType});\n\n                verify.accept(histogram);\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/pipeline/DerivativeAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":755,"status":"B"}],"commitId":"00880c0fd1edcb44a13731e0e84f0ace7bdfde6d","commitMessage":"@@@Converting Derivative Pipeline Agg integration test into AggregatorTestsCase. (#38679)\n\nReplicates the majority of existing Derivative pipeline integration tests into\nan AggregatorTestCase.  with the goal of removing the integration\ntests in the near future.","date":"2019-02-21 05:34:19","modifiedFileCount":"0","status":"M","submitter":"Mirko Jotic"},{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2020-06-16 00:47:15","commitOrder":3,"curCode":"    private void executeTestCase(Query query, AggregationBuilder aggBuilder, Consumer<InternalAggregation> verify,\n                                 CheckedConsumer<RandomIndexWriter, IOException> setup) throws IOException {\n\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n               setup.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                DateFieldMapper.DateFieldType fieldType = new DateFieldMapper.DateFieldType(HISTO_FIELD);\n                MappedFieldType valueFieldType\n                    = new NumberFieldMapper.NumberFieldType(\"value_field\", NumberFieldMapper.NumberType.LONG);\n\n                InternalAggregation histogram;\n                histogram = searchAndReduce(indexSearcher, query, aggBuilder, new MappedFieldType[]{fieldType, valueFieldType});\n                verify.accept(histogram);\n            }\n        }\n    }\n","date":"2020-06-16 00:47:15","endLine":329,"groupId":"125539","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"executeTestCase","params":"(Queryquery@AggregationBuilderaggBuilder@Consumer<InternalAggregation>verify@CheckedConsumer<RandomIndexWriter@IOException>setup)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/37/a75ff7551a3d21ad82e4bb12e6ce50f2d96db0.src","preCode":"    private void executeTestCase(Query query, AggregationBuilder aggBuilder, Consumer<InternalAggregation> verify,\n                                 CheckedConsumer<RandomIndexWriter, IOException> setup) throws IOException {\n\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n               setup.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                DateFieldMapper.Builder builder = new DateFieldMapper.Builder(\"_name\");\n                DateFieldMapper.DateFieldType fieldType = builder.fieldType();\n                fieldType.setHasDocValues(true);\n                fieldType.setName(HISTO_FIELD);\n\n                MappedFieldType valueFieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                valueFieldType.setHasDocValues(true);\n                valueFieldType.setName(\"value_field\");\n\n                InternalAggregation histogram;\n                histogram = searchAndReduce(indexSearcher, query, aggBuilder, new MappedFieldType[]{fieldType, valueFieldType});\n                verify.accept(histogram);\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/pipeline/CumulativeSumAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"M"},{"authorDate":"2020-06-16 00:47:15","commitOrder":3,"curCode":"    private void executeTestCase(Query query, AggregationBuilder aggBuilder, Consumer<InternalAggregation> verify,\n                                 CheckedConsumer<RandomIndexWriter, IOException> setup) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                setup.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                DateFieldMapper.DateFieldType fieldType = new DateFieldMapper.DateFieldType(SINGLE_VALUED_FIELD_NAME);\n                MappedFieldType valueFieldType\n                    = new NumberFieldMapper.NumberFieldType(\"value_field\", NumberFieldMapper.NumberType.LONG);\n\n                InternalAggregation histogram = searchAndReduce(indexSearcher, query, aggBuilder, fieldType, valueFieldType);\n\n                verify.accept(histogram);\n            }\n        }\n    }\n","date":"2020-06-16 00:47:15","endLine":768,"groupId":"125539","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"executeTestCase","params":"(Queryquery@AggregationBuilderaggBuilder@Consumer<InternalAggregation>verify@CheckedConsumer<RandomIndexWriter@IOException>setup)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/63/2ba6f6f48d9e8281fbf52502867546b9397653.src","preCode":"    private void executeTestCase(Query query, AggregationBuilder aggBuilder, Consumer<InternalAggregation> verify,\n                                 CheckedConsumer<RandomIndexWriter, IOException> setup) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                setup.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                DateFieldMapper.Builder builder = new DateFieldMapper.Builder(\"_name\");\n                DateFieldMapper.DateFieldType fieldType = builder.fieldType();\n                fieldType.setHasDocValues(true);\n                fieldType.setName(SINGLE_VALUED_FIELD_NAME);\n\n                MappedFieldType valueFieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                valueFieldType.setHasDocValues(true);\n                valueFieldType.setName(\"value_field\");\n\n                InternalAggregation histogram;\n                histogram = searchAndReduce(indexSearcher, query, aggBuilder, new MappedFieldType[]{fieldType, valueFieldType});\n\n                verify.accept(histogram);\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/pipeline/DerivativeAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":749,"status":"M"}],"commitId":"3b696828ada5953bb1669b972a353736383edf08","commitMessage":"@@@MappedFieldType should not extend FieldType (#57666)\n\nMappedFieldType is a combination of two concerns:\n\n* an extension of lucene's FieldType.  defining how a field should be indexed\n* a set of query factory methods.  defining how a field should be searched\n\nWe want to break these two concerns apart. This commit is a first step to doing this.  breaking\nthe inheritance relationship between MappedFieldType and FieldType. MappedFieldType \ninstead has a series of boolean flags defining whether or not the field is searchable or \naggregatable.  and FieldMapper has a separate FieldType passed to its constructor defining \nhow indexing should be done.\n\nRelates to #56814","date":"2020-06-16 00:47:15","modifiedFileCount":"257","status":"M","submitter":"Alan Woodward"}]
