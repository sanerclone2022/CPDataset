[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testDispatchRequestAddsAndFreesBytesOnlyOnceOnError() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt();\n        String content = randomAlphaOfLength(contentLength);\n        \r\n        TestRestRequest request = new TestRestRequest(\"/error\", content, XContentType.JSON);\n        ExceptionThrowingChannel channel = new ExceptionThrowingChannel(request, true);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(0, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","date":"2018-04-26 03:22:53","endLine":275,"groupId":"26575","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDispatchRequestAddsAndFreesBytesOnlyOnceOnError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f3/6638a43909f5db16708395ef8a8a7cd6703e39.src","preCode":"    public void testDispatchRequestAddsAndFreesBytesOnlyOnceOnError() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt();\n        String content = randomAlphaOfLength(contentLength);\n        \r\n        TestRestRequest request = new TestRestRequest(\"/error\", content, XContentType.JSON);\n        ExceptionThrowingChannel channel = new ExceptionThrowingChannel(request, true);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(0, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/RestControllerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testDispatchRequestLimitsBytes() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt() + 1;\n        String content = randomAlphaOfLength(contentLength);\n        TestRestRequest request = new TestRestRequest(\"/\", content, XContentType.JSON);\n        AssertingChannel channel = new AssertingChannel(request, true, RestStatus.SERVICE_UNAVAILABLE);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(1, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","date":"2018-04-26 03:22:53","endLine":287,"groupId":"67641","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDispatchRequestLimitsBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f3/6638a43909f5db16708395ef8a8a7cd6703e39.src","preCode":"    public void testDispatchRequestLimitsBytes() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt() + 1;\n        String content = randomAlphaOfLength(contentLength);\n        TestRestRequest request = new TestRestRequest(\"/\", content, XContentType.JSON);\n        AssertingChannel channel = new AssertingChannel(request, true, RestStatus.SERVICE_UNAVAILABLE);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(1, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/RestControllerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-06-15 06:32:41","codes":[{"authorDate":"2018-06-15 06:32:41","commitOrder":2,"curCode":"    public void testDispatchRequestAddsAndFreesBytesOnlyOnceOnError() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt();\n        String content = randomAlphaOfLength(contentLength);\n        \r\n        RestRequest request = testRestRequest(\"/error\", content, XContentType.JSON);\n        ExceptionThrowingChannel channel = new ExceptionThrowingChannel(request, true);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(0, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","date":"2018-06-15 06:32:41","endLine":275,"groupId":"26575","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDispatchRequestAddsAndFreesBytesOnlyOnceOnError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a0/90cc40b6857f71a53dfb379d578b990882e109.src","preCode":"    public void testDispatchRequestAddsAndFreesBytesOnlyOnceOnError() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt();\n        String content = randomAlphaOfLength(contentLength);\n        \r\n        TestRestRequest request = new TestRestRequest(\"/error\", content, XContentType.JSON);\n        ExceptionThrowingChannel channel = new ExceptionThrowingChannel(request, true);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(0, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/RestControllerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2018-06-15 06:32:41","commitOrder":2,"curCode":"    public void testDispatchRequestLimitsBytes() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt() + 1;\n        String content = randomAlphaOfLength(contentLength);\n        RestRequest request = testRestRequest(\"/\", content, XContentType.JSON);\n        AssertingChannel channel = new AssertingChannel(request, true, RestStatus.SERVICE_UNAVAILABLE);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(1, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","date":"2018-06-15 06:32:41","endLine":287,"groupId":"67641","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDispatchRequestLimitsBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a0/90cc40b6857f71a53dfb379d578b990882e109.src","preCode":"    public void testDispatchRequestLimitsBytes() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt() + 1;\n        String content = randomAlphaOfLength(contentLength);\n        TestRestRequest request = new TestRestRequest(\"/\", content, XContentType.JSON);\n        AssertingChannel channel = new AssertingChannel(request, true, RestStatus.SERVICE_UNAVAILABLE);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(1, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/RestControllerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"M"}],"commitId":"2af05e5480ab63e5602ff92ded3ca5d4d127b08b","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-15 06:32:41","modifiedFileCount":"62","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-07-10 07:44:12","codes":[{"authorDate":"2018-07-10 07:44:12","commitOrder":3,"curCode":"    public void testDispatchRequestAddsAndFreesBytesOnlyOnceOnError() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt();\n        String content = randomAlphaOfLength((int) Math.round(contentLength / inFlightRequestsBreaker.getOverhead()));\n        \r\n        RestRequest request = testRestRequest(\"/error\", content, XContentType.JSON);\n        ExceptionThrowingChannel channel = new ExceptionThrowingChannel(request, true);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(0, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","date":"2018-07-10 07:44:12","endLine":275,"groupId":"26575","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDispatchRequestAddsAndFreesBytesOnlyOnceOnError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/34/8b85a8ba4a16bddf659495391466bff0d09d56.src","preCode":"    public void testDispatchRequestAddsAndFreesBytesOnlyOnceOnError() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt();\n        String content = randomAlphaOfLength(contentLength);\n        \r\n        RestRequest request = testRestRequest(\"/error\", content, XContentType.JSON);\n        ExceptionThrowingChannel channel = new ExceptionThrowingChannel(request, true);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(0, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/RestControllerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2018-07-10 07:44:12","commitOrder":3,"curCode":"    public void testDispatchRequestLimitsBytes() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt() + 1;\n        String content = randomAlphaOfLength((int) Math.round(contentLength / inFlightRequestsBreaker.getOverhead()));\n        RestRequest request = testRestRequest(\"/\", content, XContentType.JSON);\n        AssertingChannel channel = new AssertingChannel(request, true, RestStatus.SERVICE_UNAVAILABLE);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(1, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","date":"2018-07-10 07:44:12","endLine":287,"groupId":"67641","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDispatchRequestLimitsBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/34/8b85a8ba4a16bddf659495391466bff0d09d56.src","preCode":"    public void testDispatchRequestLimitsBytes() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt() + 1;\n        String content = randomAlphaOfLength(contentLength);\n        RestRequest request = testRestRequest(\"/\", content, XContentType.JSON);\n        AssertingChannel channel = new AssertingChannel(request, true, RestStatus.SERVICE_UNAVAILABLE);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(1, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/RestControllerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"M"}],"commitId":"e9cd0556c167b257bb588af5547923e5f13a99ca","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-10 07:44:12","modifiedFileCount":"627","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-11-02 20:12:44","codes":[{"authorDate":"2018-07-10 07:44:12","commitOrder":4,"curCode":"    public void testDispatchRequestAddsAndFreesBytesOnlyOnceOnError() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt();\n        String content = randomAlphaOfLength((int) Math.round(contentLength / inFlightRequestsBreaker.getOverhead()));\n        \r\n        RestRequest request = testRestRequest(\"/error\", content, XContentType.JSON);\n        ExceptionThrowingChannel channel = new ExceptionThrowingChannel(request, true);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(0, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","date":"2018-07-10 07:44:12","endLine":275,"groupId":"26575","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testDispatchRequestAddsAndFreesBytesOnlyOnceOnError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/34/8b85a8ba4a16bddf659495391466bff0d09d56.src","preCode":"    public void testDispatchRequestAddsAndFreesBytesOnlyOnceOnError() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt();\n        String content = randomAlphaOfLength((int) Math.round(contentLength / inFlightRequestsBreaker.getOverhead()));\n        \r\n        RestRequest request = testRestRequest(\"/error\", content, XContentType.JSON);\n        ExceptionThrowingChannel channel = new ExceptionThrowingChannel(request, true);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(0, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/RestControllerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"N"},{"authorDate":"2018-11-02 20:12:44","commitOrder":4,"curCode":"    public void testDispatchRequestLimitsBytes() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt() + 1;\n        String content = randomAlphaOfLength((int) Math.round(contentLength / inFlightRequestsBreaker.getOverhead()));\n        RestRequest request = testRestRequest(\"/\", content, XContentType.JSON);\n        AssertingChannel channel = new AssertingChannel(request, true, RestStatus.TOO_MANY_REQUESTS);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(1, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","date":"2018-11-02 20:12:44","endLine":286,"groupId":"48369","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testDispatchRequestLimitsBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/29/cbb8f48ec9f784cee1cc1dfc8bd3425fc9cf93.src","preCode":"    public void testDispatchRequestLimitsBytes() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt() + 1;\n        String content = randomAlphaOfLength((int) Math.round(contentLength / inFlightRequestsBreaker.getOverhead()));\n        RestRequest request = testRestRequest(\"/\", content, XContentType.JSON);\n        AssertingChannel channel = new AssertingChannel(request, true, RestStatus.SERVICE_UNAVAILABLE);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(1, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/RestControllerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"M"}],"commitId":"ccbe80c3a00524f69ef06e4855686065733955fd","commitMessage":"@@@Introduce durability of circuit breaking exception\n\nWith this commit we differentiate between permanent circuit breaking\nexceptions (which require intervention from an operator and should not\nbe automatically retried) and transient ones (which may heal themselves\neventually and should be retried). Furthermore.  the parent circuit\nbreaker will categorize a circuit breaking exception as either transient\nor permanent based on the categorization of memory usage of its child\ncircuit breakers.\n\nCloses #31986\nRelates #34460","date":"2018-11-02 20:12:44","modifiedFileCount":"15","status":"M","submitter":"Daniel Mitterdorfer"},{"authorTime":"2020-10-07 01:13:48","codes":[{"authorDate":"2020-10-07 01:13:48","commitOrder":5,"curCode":"    public void testDispatchRequestAddsAndFreesBytesOnlyOnceOnError() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt();\n        String content = randomAlphaOfLength((int) Math.round(contentLength / inFlightRequestsBreaker.getOverhead()));\n        \r\n        RestRequest request = testRestRequest(\"/error\", content, XContentType.JSON);\n        ExceptionThrowingChannel channel = new ExceptionThrowingChannel(request, true);\n\n        restController.dispatchRequest(request, channel, client.threadPool().getThreadContext());\n\n        assertEquals(0, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","date":"2020-10-07 01:13:48","endLine":296,"groupId":"106182","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testDispatchRequestAddsAndFreesBytesOnlyOnceOnError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0b/756acb5ef86b0a32d766a778a4f94a3c5c4634.src","preCode":"    public void testDispatchRequestAddsAndFreesBytesOnlyOnceOnError() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt();\n        String content = randomAlphaOfLength((int) Math.round(contentLength / inFlightRequestsBreaker.getOverhead()));\n        \r\n        RestRequest request = testRestRequest(\"/error\", content, XContentType.JSON);\n        ExceptionThrowingChannel channel = new ExceptionThrowingChannel(request, true);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(0, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/RestControllerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"},{"authorDate":"2020-10-07 01:13:48","commitOrder":5,"curCode":"    public void testDispatchRequestLimitsBytes() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt() + 1;\n        String content = randomAlphaOfLength((int) Math.round(contentLength / inFlightRequestsBreaker.getOverhead()));\n        RestRequest request = testRestRequest(\"/\", content, XContentType.JSON);\n        AssertingChannel channel = new AssertingChannel(request, true, RestStatus.TOO_MANY_REQUESTS);\n\n        restController.dispatchRequest(request, channel, client.threadPool().getThreadContext());\n\n        assertEquals(1, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","date":"2020-10-07 01:13:48","endLine":308,"groupId":"106182","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testDispatchRequestLimitsBytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0b/756acb5ef86b0a32d766a778a4f94a3c5c4634.src","preCode":"    public void testDispatchRequestLimitsBytes() {\n        int contentLength = BREAKER_LIMIT.bytesAsInt() + 1;\n        String content = randomAlphaOfLength((int) Math.round(contentLength / inFlightRequestsBreaker.getOverhead()));\n        RestRequest request = testRestRequest(\"/\", content, XContentType.JSON);\n        AssertingChannel channel = new AssertingChannel(request, true, RestStatus.TOO_MANY_REQUESTS);\n\n        restController.dispatchRequest(request, channel, new ThreadContext(Settings.EMPTY));\n\n        assertEquals(1, inFlightRequestsBreaker.getTrippedCount());\n        assertEquals(0, inFlightRequestsBreaker.getUsed());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/RestControllerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"M"}],"commitId":"91f4b58bf71249cf81562bd6069c64aafa46591b","commitMessage":"@@@Deprecate REST access to System Indices (#60945)\n\nThis PR adds deprecation warnings when accessing System Indices via the REST layer. At this time.  these warnings are only enabled for Snapshot builds by default.  to allow projects external to Elasticsearch additional time to adjust their access patterns.\n\nDeprecation warnings will be triggered by all REST requests which access registered System Indices.  except for purpose-specific APIs which access System Indices as an implementation detail a few specific APIs which will continue to allow access to system indices by default:\n\n- `GET _cluster/health`\n- `GET {index}/_recovery`\n- `GET _cluster/allocation/explain`\n- `GET _cluster/state`\n- `POST _cluster/reroute`\n- `GET {index}/_stats`\n- `GET {index}/_segments`\n- `GET {index}/_shard_stores`\n- `GET _cat/[indices. aliases. health. recovery. shards. segments]`\n\nDeprecation warnings for accessing system indices take the form:\n```\nthis request accesses system indices: [.some_system_index].  but in a future major version.  direct access to system indices will be prevented by default\n```","date":"2020-10-07 01:13:48","modifiedFileCount":"132","status":"M","submitter":"Gordon Brown"}]
