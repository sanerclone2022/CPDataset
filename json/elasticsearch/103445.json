[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = multiMatchQuery(\"test1 test2\").field(STRING_FIELD_NAME).useDisMax(false).toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","date":"2018-04-26 03:22:53","endLine":201,"groupId":"71062","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryMultipleTermsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b6/d4816b01f4a975e26ad4031e1a10f0accb1346.src","preCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = multiMatchQuery(\"test1 test2\").field(STRING_FIELD_NAME).useDisMax(false).toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MultiMatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = queryStringQuery(\"test1 test2\").field(STRING_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","date":"2018-04-26 03:22:53","endLine":479,"groupId":"71062","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryMultipleTermsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/fc66b3985e19e663446f001ab216edcf8db93e.src","preCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = queryStringQuery(\"test1 test2\").field(STRING_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":468,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-27 17:51:09","codes":[{"authorDate":"2018-07-27 17:51:09","commitOrder":2,"curCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = multiMatchQuery(\"test1 test2\").field(STRING_FIELD_NAME).useDisMax(false).toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","date":"2018-07-27 17:51:09","endLine":196,"groupId":"71062","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryMultipleTermsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e3/0cdaca40204ff2535233ebe1e814f7ff60e954.src","preCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = multiMatchQuery(\"test1 test2\").field(STRING_FIELD_NAME).useDisMax(false).toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MultiMatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"},{"authorDate":"2018-07-27 17:51:09","commitOrder":2,"curCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test1 test2\").field(STRING_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","date":"2018-07-27 17:51:09","endLine":472,"groupId":"71062","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryMultipleTermsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/197b662d142956ef2108dfad7672add3fb9657.src","preCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = queryStringQuery(\"test1 test2\").field(STRING_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":462,"status":"M"}],"commitId":"dfb277cfb7969ad543a31dea234579d0e886a73a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-27 17:51:09","modifiedFileCount":"105","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-07-27 17:51:09","codes":[{"authorDate":"2018-12-14 03:13:16","commitOrder":3,"curCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = multiMatchQuery(\"test1 test2\").field(STRING_FIELD_NAME).toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","date":"2018-12-14 03:13:16","endLine":195,"groupId":"71062","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryMultipleTermsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/43/c76f028e22eeb9d31e767442af188646204217.src","preCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = multiMatchQuery(\"test1 test2\").field(STRING_FIELD_NAME).useDisMax(false).toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MultiMatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"},{"authorDate":"2018-07-27 17:51:09","commitOrder":3,"curCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test1 test2\").field(STRING_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","date":"2018-07-27 17:51:09","endLine":472,"groupId":"71062","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryMultipleTermsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/197b662d142956ef2108dfad7672add3fb9657.src","preCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test1 test2\").field(STRING_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":462,"status":"N"}],"commitId":"b33ff16d62e57843c407271d3aadeb6328567441","commitMessage":"@@@Remove deprecated `useDisMax` from MultiMatchQuery (#36488)\n\nThe getters and setters for useDisMax() have been deprecated since at least 6.0. \nalso there hasn't been any reference to the query parameter in the\ndocumentation. Removing it from the builder and tests and replacing it with\n`tieBreaker(1.0f)` where necessary.","date":"2018-12-14 03:13:16","modifiedFileCount":"6","status":"M","submitter":"Christoph B?scher"},{"authorTime":"2020-04-03 22:00:46","codes":[{"authorDate":"2020-04-03 22:00:46","commitOrder":4,"curCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = multiMatchQuery(\"test1 test2\").field(TEXT_FIELD_NAME).toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"test2\")));\n    }\n","date":"2020-04-03 22:00:46","endLine":206,"groupId":"71062","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryMultipleTermsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4b/227541b3a9d022dfdc905e2b00e19d548e5786.src","preCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = multiMatchQuery(\"test1 test2\").field(STRING_FIELD_NAME).toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MultiMatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"},{"authorDate":"2020-04-03 22:00:46","commitOrder":4,"curCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test1 test2\").field(TEXT_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(TEXT_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(TEXT_FIELD_NAME, \"test2\")));\n    }\n","date":"2020-04-03 22:00:46","endLine":490,"groupId":"71062","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryMultipleTermsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/7bce5edab3d92a09f5d9650631122009f57a11.src","preCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test1 test2\").field(STRING_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test2\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":480,"status":"M"}],"commitId":"f5759bb2092f1a957e79626c872c3f5707c1ee04","commitMessage":"@@@Rename field name constants in AbstractBuilderTestCase (#53234)\n\nSome field name constants were not updaten when we moved from \"string\" to \"text\"\nand \"keyword\" fields. Renaming them makes it easier and faster to know which\nfield type is used in test subclassing this base test case.","date":"2020-04-03 22:00:46","modifiedFileCount":"34","status":"M","submitter":"Christoph B?scher"},{"authorTime":"2021-01-15 01:11:59","codes":[{"authorDate":"2021-01-15 01:11:59","commitOrder":5,"curCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = multiMatchQuery(\"test1 test2\").field(TEXT_FIELD_NAME).toQuery(createSearchExecutionContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"test2\")));\n    }\n","date":"2021-01-15 01:11:59","endLine":207,"groupId":"103445","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryMultipleTermsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d2/c52824fefbdd7894f0f7f5324cc199b7229240.src","preCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = multiMatchQuery(\"test1 test2\").field(TEXT_FIELD_NAME).toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"test2\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MultiMatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"},{"authorDate":"2021-01-15 01:11:59","commitOrder":5,"curCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test1 test2\").field(TEXT_FIELD_NAME)\n            .toQuery(createSearchExecutionContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(TEXT_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(TEXT_FIELD_NAME, \"test2\")));\n    }\n","date":"2021-01-15 01:11:59","endLine":493,"groupId":"103445","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryMultipleTermsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/f2b7c45a7bb331c91e314966d9eec736b3e669.src","preCode":"    public void testToQueryMultipleTermsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test1 test2\").field(TEXT_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(BooleanQuery.class));\n        BooleanQuery bQuery = (BooleanQuery) query;\n        assertThat(bQuery.clauses().size(), equalTo(2));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(TEXT_FIELD_NAME, \"test1\")));\n        assertThat(assertBooleanSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(TEXT_FIELD_NAME, \"test2\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":483,"status":"M"}],"commitId":"5852fbedf52c77b0a76c2c731fdd4982fb65cd87","commitMessage":"@@@Rename QueryShardContext -> SearchExecutionContext. (#67490)\n\nWe decided to rename `QueryShardContext` to clarify that it supports all parts\nof search request execution. Before there was confusion over whether it should\nonly be used for building queries.  or maybe only used in the query phase. This\nPR also updates the javadocs.\n\nCloses #64740.","date":"2021-01-15 01:11:59","modifiedFileCount":"357","status":"M","submitter":"Julie Tibshirani"}]
