[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testRestoreSnapshotRequestParsing() throws IOException {\n        RestoreSnapshotRequest request = new RestoreSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        builder.field(\"rename_pattern\", \"rename-from\");\n        builder.field(\"rename_replacement\", \"rename-to\");\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(\"rename-from\", request.renamePattern());\n        assertEquals(\"rename-to\", request.renameReplacement());\n        assertEquals(partial, request.partial());\n        assertEquals(\"val1\", request.settings().get(\"set1\"));\n        assertArrayEquals(request.ignoreIndexSettings(), new String[]{\"set2\", \"set3\"});\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","date":"2018-04-26 03:22:53","endLine":100,"groupId":"17293","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRestoreSnapshotRequestParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/44/fe0d4dd5c580b828dcc716259bab36d50226bf.src","preCode":"    public void testRestoreSnapshotRequestParsing() throws IOException {\n        RestoreSnapshotRequest request = new RestoreSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        builder.field(\"rename_pattern\", \"rename-from\");\n        builder.field(\"rename_replacement\", \"rename-to\");\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(\"rename-from\", request.renamePattern());\n        assertEquals(\"rename-to\", request.renameReplacement());\n        assertEquals(partial, request.partial());\n        assertEquals(\"val1\", request.settings().get(\"set1\"));\n        assertArrayEquals(request.ignoreIndexSettings(), new String[]{\"set2\", \"set3\"});\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotRequestsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testCreateSnapshotRequestParsing() throws IOException {\n        CreateSnapshotRequest request = new CreateSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(partial, request.partial());\n        assertEquals(\"val1\", request.settings().get(\"set1\"));\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","date":"2018-04-26 03:22:53","endLine":162,"groupId":"52230","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateSnapshotRequestParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/44/fe0d4dd5c580b828dcc716259bab36d50226bf.src","preCode":"    public void testCreateSnapshotRequestParsing() throws IOException {\n        CreateSnapshotRequest request = new CreateSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(partial, request.partial());\n        assertEquals(\"val1\", request.settings().get(\"set1\"));\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotRequestsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2020-03-09 18:11:17","commitOrder":2,"curCode":"    public void testRestoreSnapshotRequestParsing() throws IOException {\n        RestoreSnapshotRequest request = new RestoreSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        builder.field(\"rename_pattern\", \"rename-from\");\n        builder.field(\"rename_replacement\", \"rename-to\");\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(\"rename-from\", request.renamePattern());\n        assertEquals(\"rename-to\", request.renameReplacement());\n        assertEquals(partial, request.partial());\n        assertArrayEquals(request.ignoreIndexSettings(), new String[]{\"set2\", \"set3\"});\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n\n        assertWarnings(\"specifying [settings] when restoring a snapshot has no effect and will not be supported in a future version\");\n    }\n","date":"2020-03-09 18:11:17","endLine":101,"groupId":"17293","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRestoreSnapshotRequestParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f7/0bfdcae400b517f55b5ced332d1de7e588fece.src","preCode":"    public void testRestoreSnapshotRequestParsing() throws IOException {\n        RestoreSnapshotRequest request = new RestoreSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        builder.field(\"rename_pattern\", \"rename-from\");\n        builder.field(\"rename_replacement\", \"rename-to\");\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(\"rename-from\", request.renamePattern());\n        assertEquals(\"rename-to\", request.renameReplacement());\n        assertEquals(partial, request.partial());\n        assertEquals(\"val1\", request.settings().get(\"set1\"));\n        assertArrayEquals(request.ignoreIndexSettings(), new String[]{\"set2\", \"set3\"});\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotRequestsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public void testCreateSnapshotRequestParsing() throws IOException {\n        CreateSnapshotRequest request = new CreateSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(partial, request.partial());\n        assertEquals(\"val1\", request.settings().get(\"set1\"));\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","date":"2018-04-26 03:22:53","endLine":162,"groupId":"52230","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateSnapshotRequestParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/44/fe0d4dd5c580b828dcc716259bab36d50226bf.src","preCode":"    public void testCreateSnapshotRequestParsing() throws IOException {\n        CreateSnapshotRequest request = new CreateSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(partial, request.partial());\n        assertEquals(\"val1\", request.settings().get(\"set1\"));\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotRequestsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"}],"commitId":"c906a7ad6902b864fdf2605af28c716f83af0dc7","commitMessage":"@@@Deprecate passing settings in restore requests (#53268)\n\nToday we accept a `settings` field in snapshot restore requests.  but this field\nis not used. This commit deprecates it.","date":"2020-03-09 18:11:17","modifiedFileCount":"4","status":"M","submitter":"David Turner"},{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2020-03-09 23:46:50","commitOrder":3,"curCode":"    public void testRestoreSnapshotRequestParsing() throws IOException {\n        RestoreSnapshotRequest request = new RestoreSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        builder.field(\"rename_pattern\", \"rename-from\");\n        builder.field(\"rename_replacement\", \"rename-to\");\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(\"rename-from\", request.renamePattern());\n        assertEquals(\"rename-to\", request.renameReplacement());\n        assertEquals(partial, request.partial());\n        assertArrayEquals(request.ignoreIndexSettings(), new String[]{\"set2\", \"set3\"});\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","date":"2020-03-09 23:46:50","endLine":98,"groupId":"46020","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRestoreSnapshotRequestParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ee/74c37fbd4016ed7daa8921f83b398144dde162.src","preCode":"    public void testRestoreSnapshotRequestParsing() throws IOException {\n        RestoreSnapshotRequest request = new RestoreSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        builder.field(\"rename_pattern\", \"rename-from\");\n        builder.field(\"rename_replacement\", \"rename-to\");\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(\"rename-from\", request.renamePattern());\n        assertEquals(\"rename-to\", request.renameReplacement());\n        assertEquals(partial, request.partial());\n        assertArrayEquals(request.ignoreIndexSettings(), new String[]{\"set2\", \"set3\"});\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n\n        assertWarnings(\"specifying [settings] when restoring a snapshot has no effect and will not be supported in a future version\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotRequestsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2018-04-26 03:22:53","commitOrder":3,"curCode":"    public void testCreateSnapshotRequestParsing() throws IOException {\n        CreateSnapshotRequest request = new CreateSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(partial, request.partial());\n        assertEquals(\"val1\", request.settings().get(\"set1\"));\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","date":"2018-04-26 03:22:53","endLine":162,"groupId":"52230","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateSnapshotRequestParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/44/fe0d4dd5c580b828dcc716259bab36d50226bf.src","preCode":"    public void testCreateSnapshotRequestParsing() throws IOException {\n        CreateSnapshotRequest request = new CreateSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(partial, request.partial());\n        assertEquals(\"val1\", request.settings().get(\"set1\"));\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotRequestsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"}],"commitId":"bfcd8dccf7d99e197eefe93aeb6310ac4ce8959b","commitMessage":"@@@Remove support for settings in restore requests (#53284)\n\nThe unused `settings` value was deprecated in #53268 so this commit removes it.","date":"2020-03-09 23:46:50","modifiedFileCount":"2","status":"M","submitter":"David Turner"},{"authorTime":"2020-07-02 18:25:49","codes":[{"authorDate":"2020-03-09 23:46:50","commitOrder":4,"curCode":"    public void testRestoreSnapshotRequestParsing() throws IOException {\n        RestoreSnapshotRequest request = new RestoreSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        builder.field(\"rename_pattern\", \"rename-from\");\n        builder.field(\"rename_replacement\", \"rename-to\");\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(\"rename-from\", request.renamePattern());\n        assertEquals(\"rename-to\", request.renameReplacement());\n        assertEquals(partial, request.partial());\n        assertArrayEquals(request.ignoreIndexSettings(), new String[]{\"set2\", \"set3\"});\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","date":"2020-03-09 23:46:50","endLine":98,"groupId":"102451","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testRestoreSnapshotRequestParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ee/74c37fbd4016ed7daa8921f83b398144dde162.src","preCode":"    public void testRestoreSnapshotRequestParsing() throws IOException {\n        RestoreSnapshotRequest request = new RestoreSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        builder.field(\"rename_pattern\", \"rename-from\");\n        builder.field(\"rename_replacement\", \"rename-to\");\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(\"rename-from\", request.renamePattern());\n        assertEquals(\"rename-to\", request.renameReplacement());\n        assertEquals(partial, request.partial());\n        assertArrayEquals(request.ignoreIndexSettings(), new String[]{\"set2\", \"set3\"});\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotRequestsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"},{"authorDate":"2020-07-02 18:25:49","commitOrder":4,"curCode":"    public void testCreateSnapshotRequestParsing() throws IOException {\n        CreateSnapshotRequest request = new CreateSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(partial, request.partial());\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","date":"2020-07-02 18:25:49","endLine":158,"groupId":"102451","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateSnapshotRequestParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/38/4435807edd45135d91bacc6ee22d9c5905b365.src","preCode":"    public void testCreateSnapshotRequestParsing() throws IOException {\n        CreateSnapshotRequest request = new CreateSnapshotRequest(\"test-repo\", \"test-snap\");\n\n        XContentBuilder builder = jsonBuilder().startObject();\n\n        if (randomBoolean()) {\n            builder.field(\"indices\", \"foo,bar,baz\");\n        } else {\n            builder.startArray(\"indices\");\n            builder.value(\"foo\");\n            builder.value(\"bar\");\n            builder.value(\"baz\");\n            builder.endArray();\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        if (indicesOptions.expandWildcardsClosed()) {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"all\");\n            } else {\n                builder.field(\"expand_wildcards\", \"closed\");\n            }\n        } else {\n            if (indicesOptions.expandWildcardsOpen()) {\n                builder.field(\"expand_wildcards\", \"open\");\n            } else {\n                builder.field(\"expand_wildcards\", \"none\");\n            }\n        }\n        builder.field(\"allow_no_indices\", indicesOptions.allowNoIndices());\n        boolean partial = randomBoolean();\n        builder.field(\"partial\", partial);\n        builder.startObject(\"settings\").field(\"set1\", \"val1\").endObject();\n        builder.startObject(\"index_settings\").field(\"set1\", \"val2\").endObject();\n        if (randomBoolean()) {\n            builder.field(\"ignore_index_settings\", \"set2,set3\");\n        } else {\n            builder.startArray(\"ignore_index_settings\");\n            builder.value(\"set2\");\n            builder.value(\"set3\");\n            builder.endArray();\n        }\n        boolean includeIgnoreUnavailable = randomBoolean();\n        if (includeIgnoreUnavailable) {\n            builder.field(\"ignore_unavailable\", indicesOptions.ignoreUnavailable());\n        }\n\n        BytesReference bytes = BytesReference.bytes(builder.endObject());\n\n        request.source(XContentHelper.convertToMap(bytes, true, builder.contentType()).v2());\n\n        assertEquals(\"test-repo\", request.repository());\n        assertEquals(\"test-snap\", request.snapshot());\n        assertArrayEquals(request.indices(), new String[]{\"foo\", \"bar\", \"baz\"});\n        assertEquals(partial, request.partial());\n        assertEquals(\"val1\", request.settings().get(\"set1\"));\n        boolean expectedIgnoreAvailable = includeIgnoreUnavailable\n            ? indicesOptions.ignoreUnavailable()\n            : IndicesOptions.strictExpandOpen().ignoreUnavailable();\n        assertEquals(expectedIgnoreAvailable, request.indicesOptions().ignoreUnavailable());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/snapshots/SnapshotRequestsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"59fc3d74d58c390828267569022ac177e77ffbd1","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-02 18:25:49","modifiedFileCount":"724","status":"M","submitter":"Luca Cavanna"}]
