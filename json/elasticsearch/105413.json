[{"authorTime":"2018-09-07 17:59:10","codes":[{"authorDate":"2018-09-07 17:59:10","commitOrder":1,"curCode":"    public void testScriptedMetricWithCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT).combineScript(COMBINE_SCRIPT);\n                ScriptedMetric scriptedMetric = search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                assertEquals(numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","date":"2018-09-07 17:59:10","endLine":220,"groupId":"23807","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testScriptedMetricWithCombine","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/56/b8938b6e54b9ced647f1fc233a5f9aa5206adf.src","preCode":"    public void testScriptedMetricWithCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT).combineScript(COMBINE_SCRIPT);\n                ScriptedMetric scriptedMetric = search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                assertEquals(numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"B"},{"authorDate":"2018-09-07 17:59:10","commitOrder":1,"curCode":"    public void testScriptedMetricWithCombineAccessesScores() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SCORE).mapScript(MAP_SCRIPT_SCORE).combineScript(COMBINE_SCRIPT_SCORE);\n                ScriptedMetric scriptedMetric = search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                \r\n                assertEquals((double) numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","date":"2018-09-07 17:59:10","endLine":243,"groupId":"37600","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testScriptedMetricWithCombineAccessesScores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/56/b8938b6e54b9ced647f1fc233a5f9aa5206adf.src","preCode":"    public void testScriptedMetricWithCombineAccessesScores() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SCORE).mapScript(MAP_SCRIPT_SCORE).combineScript(COMBINE_SCRIPT_SCORE);\n                ScriptedMetric scriptedMetric = search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                \r\n                assertEquals((double) numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"B"}],"commitId":"017ffe5d127ce0fb33feb8fc4e5fededb8cbfda1","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-07 17:59:10","modifiedFileCount":"370","status":"B","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-10-03 23:11:28","codes":[{"authorDate":"2018-10-03 23:11:28","commitOrder":2,"curCode":"    public void testScriptedMetricWithCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT)\n                    .combineScript(COMBINE_SCRIPT).reduceScript(REDUCE_SCRIPT);\n                ScriptedMetric scriptedMetric = search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                assertEquals(numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","date":"2018-10-03 23:11:28","endLine":241,"groupId":"23807","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testScriptedMetricWithCombine","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/115a03e300f6323fe6b1e80b791eb761cf2536.src","preCode":"    public void testScriptedMetricWithCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT).combineScript(COMBINE_SCRIPT);\n                ScriptedMetric scriptedMetric = search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                assertEquals(numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"},{"authorDate":"2018-10-03 23:11:28","commitOrder":2,"curCode":"    public void testScriptedMetricWithCombineAccessesScores() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SCORE).mapScript(MAP_SCRIPT_SCORE)\n                    .combineScript(COMBINE_SCRIPT_SCORE).reduceScript(REDUCE_SCRIPT);\n                ScriptedMetric scriptedMetric = search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                \r\n                assertEquals((double) numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","date":"2018-10-03 23:11:28","endLine":265,"groupId":"18160","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testScriptedMetricWithCombineAccessesScores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/115a03e300f6323fe6b1e80b791eb761cf2536.src","preCode":"    public void testScriptedMetricWithCombineAccessesScores() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SCORE).mapScript(MAP_SCRIPT_SCORE).combineScript(COMBINE_SCRIPT_SCORE);\n                ScriptedMetric scriptedMetric = search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                \r\n                assertEquals((double) numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"}],"commitId":"90c55f5e36ddc9d7cbf2fcde8e88027db8a5e060","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into index-lifecycle\n","date":"2018-10-03 23:11:28","modifiedFileCount":"33","status":"M","submitter":"Lee Hinman"},{"authorTime":"2020-08-07 05:14:20","codes":[{"authorDate":"2020-08-07 05:14:20","commitOrder":3,"curCode":"    public void testScriptedMetricWithCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT)\n                    .combineScript(COMBINE_SCRIPT).reduceScript(REDUCE_SCRIPT);\n                ScriptedMetric scriptedMetric =\n                    searchAndReduce(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                assertEquals(numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":335,"groupId":"105413","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testScriptedMetricWithCombine","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8d/8b3da169249f41d4459c9e3853a1516f4722ed.src","preCode":"    public void testScriptedMetricWithCombine() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT).mapScript(MAP_SCRIPT)\n                    .combineScript(COMBINE_SCRIPT).reduceScript(REDUCE_SCRIPT);\n                ScriptedMetric scriptedMetric = search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                assertEquals(numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"M"},{"authorDate":"2020-08-07 05:14:20","commitOrder":3,"curCode":"    public void testScriptedMetricWithCombineAccessesScores() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SCORE).mapScript(MAP_SCRIPT_SCORE)\n                    .combineScript(COMBINE_SCRIPT_SCORE).reduceScript(REDUCE_SCRIPT);\n                ScriptedMetric scriptedMetric =\n                    searchAndReduce(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                \r\n                assertEquals(numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":360,"groupId":"105413","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testScriptedMetricWithCombineAccessesScores","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8d/8b3da169249f41d4459c9e3853a1516f4722ed.src","preCode":"    public void testScriptedMetricWithCombineAccessesScores() throws IOException {\n        try (Directory directory = newDirectory()) {\n            Integer numDocs = randomInt(100);\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                for (int i = 0; i < numDocs; i++) {\n                    indexWriter.addDocument(singleton(new SortedNumericDocValuesField(\"number\", i)));\n                }\n            }\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                ScriptedMetricAggregationBuilder aggregationBuilder = new ScriptedMetricAggregationBuilder(AGG_NAME);\n                aggregationBuilder.initScript(INIT_SCRIPT_SCORE).mapScript(MAP_SCRIPT_SCORE)\n                    .combineScript(COMBINE_SCRIPT_SCORE).reduceScript(REDUCE_SCRIPT);\n                ScriptedMetric scriptedMetric = search(newSearcher(indexReader, true, true), new MatchAllDocsQuery(), aggregationBuilder);\n                assertEquals(AGG_NAME, scriptedMetric.getName());\n                assertNotNull(scriptedMetric.aggregation());\n                \r\n                assertEquals((double) numDocs, scriptedMetric.aggregation());\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":340,"status":"M"}],"commitId":"5e3ea6eb11c68bdcc9adda51715a6e1fea9186d6","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-07 05:14:20","modifiedFileCount":"73","status":"M","submitter":"Nik Everett"}]
