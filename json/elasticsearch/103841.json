[{"authorTime":"2019-01-25 21:22:48","codes":[{"authorDate":"2019-01-25 21:22:48","commitOrder":1,"curCode":"    private void verifyFailsOnShardData(Settings settings, Path indexPath, String shardDataDirName) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has shard data if node.data=false\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(shardDataDirName).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(),\n            startsWith(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data\"));\n    }\n","date":"2019-01-25 21:22:48","endLine":550,"groupId":"68324","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyFailsOnShardData","params":"(Settingssettings@PathindexPath@StringshardDataDirName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/67514fa7ef26c829d15aae024d1ddf54f0f3a4.src","preCode":"    private void verifyFailsOnShardData(Settings settings, Path indexPath, String shardDataDirName) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has shard data if node.data=false\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(shardDataDirName).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(),\n            startsWith(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":539,"status":"B"},{"authorDate":"2019-01-25 21:22:48","commitOrder":1,"curCode":"    private void verifyFailsOnMetaData(Settings settings, Path indexPath) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has index meta-data if node.data=false and node.master=false\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(MetaDataStateFormat.STATE_DIR_NAME).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(),\n            startsWith(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata\"));\n    }\n","date":"2019-01-25 21:22:48","endLine":565,"groupId":"54439","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyFailsOnMetaData","params":"(Settingssettings@PathindexPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/67514fa7ef26c829d15aae024d1ddf54f0f3a4.src","preCode":"    private void verifyFailsOnMetaData(Settings settings, Path indexPath) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has index meta-data if node.data=false and node.master=false\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(MetaDataStateFormat.STATE_DIR_NAME).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(),\n            startsWith(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":552,"status":"B"}],"commitId":"49073dd2f680c0fde81c810b8da28a0af33f63e5","commitMessage":"@@@Fail start on invalid index metadata (#37748)\n\nNode started with node.data=false and node.master=false can no longer\nstart if they have index metadata. This avoids resurrecting old indexes\ninto the cluster and ensures metadata is cleaned out before\nre-purposing a node that was previously master or data node.\n\nIssue #27073","date":"2019-01-25 21:22:48","modifiedFileCount":"3","status":"B","submitter":"Henning Andersen"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2019-01-25 21:22:48","commitOrder":2,"curCode":"    private void verifyFailsOnShardData(Settings settings, Path indexPath, String shardDataDirName) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has shard data if node.data=false\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(shardDataDirName).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(),\n            startsWith(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data\"));\n    }\n","date":"2019-01-25 21:22:48","endLine":550,"groupId":"68324","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyFailsOnShardData","params":"(Settingssettings@PathindexPath@StringshardDataDirName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/67514fa7ef26c829d15aae024d1ddf54f0f3a4.src","preCode":"    private void verifyFailsOnShardData(Settings settings, Path indexPath, String shardDataDirName) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has shard data if node.data=false\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(shardDataDirName).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(),\n            startsWith(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":539,"status":"N"},{"authorDate":"2020-04-01 03:52:01","commitOrder":2,"curCode":"    private void verifyFailsOnMetadata(Settings settings, Path indexPath) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has index meta-data if node.data=false and node.master=false\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(MetadataStateFormat.STATE_DIR_NAME).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(),\n            startsWith(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata\"));\n    }\n","date":"2020-04-01 03:52:01","endLine":505,"groupId":"54439","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyFailsOnMetadata","params":"(Settingssettings@PathindexPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/89/0e9b0b7b27362717af9618247c44e9bc23275c.src","preCode":"    private void verifyFailsOnMetaData(Settings settings, Path indexPath) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has index meta-data if node.data=false and node.master=false\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(MetaDataStateFormat.STATE_DIR_NAME).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(),\n            startsWith(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":492,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"},{"authorTime":"2020-06-26 22:33:37","codes":[{"authorDate":"2020-06-26 22:33:37","commitOrder":3,"curCode":"    private void verifyFailsOnShardData(Settings settings, Path indexPath, String shardDataDirName) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has shard data if node does not have data role\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(shardDataDirName).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(), startsWith(\"node does not have the data role but has shard data\"));\n    }\n","date":"2020-06-26 22:33:37","endLine":484,"groupId":"103841","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"verifyFailsOnShardData","params":"(Settingssettings@PathindexPath@StringshardDataDirName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/22/3ad11739b5124e6f003c26dd36a456dff5d884.src","preCode":"    private void verifyFailsOnShardData(Settings settings, Path indexPath, String shardDataDirName) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has shard data if node.data=false\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(shardDataDirName).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(),\n            startsWith(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"M"},{"authorDate":"2020-06-26 22:33:37","commitOrder":3,"curCode":"    private void verifyFailsOnMetadata(Settings settings, Path indexPath) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has index metadata if node does not have data and master roles\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(MetadataStateFormat.STATE_DIR_NAME).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(), startsWith(\"node does not have the data and master roles but has index metadata\"));\n    }\n","date":"2020-06-26 22:33:37","endLine":494,"groupId":"103841","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"verifyFailsOnMetadata","params":"(Settingssettings@PathindexPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/22/3ad11739b5124e6f003c26dd36a456dff5d884.src","preCode":"    private void verifyFailsOnMetadata(Settings settings, Path indexPath) {\n        IllegalStateException ex = expectThrows(IllegalStateException.class,\n            \"Must fail creating NodeEnvironment on a data path that has index meta-data if node.data=false and node.master=false\",\n            () -> newNodeEnvironment(settings).close());\n\n        assertThat(ex.getMessage(),\n            containsString(indexPath.resolve(MetadataStateFormat.STATE_DIR_NAME).toAbsolutePath().toString()));\n        assertThat(ex.getMessage(),\n            startsWith(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":486,"status":"M"}],"commitId":"cac5f29cee7572a3695e2b8d17d0a0cb7ac473dd","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-06-26 22:33:37","modifiedFileCount":"731","status":"M","submitter":"Nik Everett"}]
