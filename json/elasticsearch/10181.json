[{"authorTime":"2019-03-28 01:03:30","codes":[{"authorDate":"2019-03-28 01:03:30","commitOrder":1,"curCode":"   public void testDefaultConfiguration() throws IOException {\n        final String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject()\n            .startObject(\"_doc\")\n                .startObject(\"properties\")\n                    .startObject(\"a_field\")\n                        .field(\"type\", \"search_as_you_type\")\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject());\n\n        final DocumentMapper defaultMapper = createIndex(\"test\")\n            .mapperService()\n            .documentMapperParser()\n            .parse(\"_doc\", new CompressedXContent(mapping));\n\n        final SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"a_field\");\n        assertRootFieldMapper(rootMapper, 3, \"default\");\n\n\n        final PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"a_field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper.fieldType(), 3, \"default\");\n\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._2gram\").fieldType(), 2, \"default\", prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._3gram\").fieldType(), 3, \"default\", prefixFieldMapper.fieldType());\n    }\n","date":"2019-03-28 01:03:30","endLine":145,"groupId":"18142","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9e/d43a9505624d952b738f414f1c97168115e3c4.src","preCode":"   public void testDefaultConfiguration() throws IOException {\n        final String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject()\n            .startObject(\"_doc\")\n                .startObject(\"properties\")\n                    .startObject(\"a_field\")\n                        .field(\"type\", \"search_as_you_type\")\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject());\n\n        final DocumentMapper defaultMapper = createIndex(\"test\")\n            .mapperService()\n            .documentMapperParser()\n            .parse(\"_doc\", new CompressedXContent(mapping));\n\n        final SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"a_field\");\n        assertRootFieldMapper(rootMapper, 3, \"default\");\n\n\n        final PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"a_field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper.fieldType(), 3, \"default\");\n\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._2gram\").fieldType(), 2, \"default\", prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._3gram\").fieldType(), 3, \"default\", prefixFieldMapper.fieldType());\n    }\n","realPath":"modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/SearchAsYouTypeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"},{"authorDate":"2019-03-28 01:03:30","commitOrder":1,"curCode":"    public void testConfiguration() throws IOException {\n        final int maxShingleSize = 4;\n        final String analyzerName = \"simple\";\n\n        final String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject()\n            .startObject(\"_doc\")\n                .startObject(\"properties\")\n                    .startObject(\"a_field\")\n                        .field(\"type\", \"search_as_you_type\")\n                        .field(\"analyzer\", analyzerName)\n                        .field(\"max_shingle_size\", maxShingleSize)\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject());\n\n        final DocumentMapper defaultMapper = createIndex(\"test\")\n            .mapperService()\n            .documentMapperParser()\n            .parse(\"_doc\", new CompressedXContent(mapping));\n\n        final SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"a_field\");\n        assertRootFieldMapper(rootMapper, maxShingleSize, analyzerName);\n\n        final PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"a_field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper.fieldType(), maxShingleSize, analyzerName);\n\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._2gram\").fieldType(), 2, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._3gram\").fieldType(), 3, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._4gram\").fieldType(), 4, analyzerName, prefixFieldMapper.fieldType());\n    }\n","date":"2019-03-28 01:03:30","endLine":181,"groupId":"66490","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9e/d43a9505624d952b738f414f1c97168115e3c4.src","preCode":"    public void testConfiguration() throws IOException {\n        final int maxShingleSize = 4;\n        final String analyzerName = \"simple\";\n\n        final String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject()\n            .startObject(\"_doc\")\n                .startObject(\"properties\")\n                    .startObject(\"a_field\")\n                        .field(\"type\", \"search_as_you_type\")\n                        .field(\"analyzer\", analyzerName)\n                        .field(\"max_shingle_size\", maxShingleSize)\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject());\n\n        final DocumentMapper defaultMapper = createIndex(\"test\")\n            .mapperService()\n            .documentMapperParser()\n            .parse(\"_doc\", new CompressedXContent(mapping));\n\n        final SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"a_field\");\n        assertRootFieldMapper(rootMapper, maxShingleSize, analyzerName);\n\n        final PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"a_field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper.fieldType(), maxShingleSize, analyzerName);\n\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._2gram\").fieldType(), 2, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._3gram\").fieldType(), 3, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._4gram\").fieldType(), 4, analyzerName, prefixFieldMapper.fieldType());\n    }\n","realPath":"modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/SearchAsYouTypeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"}],"commitId":"6bba9fc83bc30d29c67e66e8e4c70f4dcc3b7494","commitMessage":"@@@search as you type fieldmapper (#35600)\n\nAdds the search_as_you_type field type that acts like a text field optimized\nfor as-you-type search completion. It creates a couple subfields that analyze\nthe indexed terms as shingles.  against which full terms are queried.  and a\nprefix subfield that analyze terms as the largest shingle size used and\nedge-ngrams.  against which partial terms are queried\n\nAdds a match_bool_prefix query type that creates a boolean clause of a term\nquery for each term except the last.  for which a boolean clause with a prefix\nquery is created.\n\nThe match_bool_prefix query is the recommended way of querying a search as you\ntype field.  which will boil down to term queries for each shingle of the input\ntext on the appropriate shingle field.  and the final (possibly partial) term\nas a term query on the prefix field. This field type also supports phrase and\nphrase prefix queries however\n","date":"2019-03-28 01:03:30","modifiedFileCount":"10","status":"B","submitter":"Andy Bristol"},{"authorTime":"2020-08-27 20:29:24","codes":[{"authorDate":"2020-08-27 20:29:24","commitOrder":2,"curCode":"   public void testDefaultConfiguration() throws IOException {\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"field\");\n        assertRootFieldMapper(rootMapper, 3, \"default\");\n\n        PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper.fieldType(), 3, \"default\");\n\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"field._2gram\").fieldType(), 2, \"default\", prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"field._3gram\").fieldType(), 3, \"default\", prefixFieldMapper.fieldType());\n    }\n","date":"2020-08-27 20:29:24","endLine":165,"groupId":"18142","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/43/c252ef5952ace57f01d84723e272d066577b9f.src","preCode":"   public void testDefaultConfiguration() throws IOException {\n        final String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject()\n            .startObject(\"_doc\")\n                .startObject(\"properties\")\n                    .startObject(\"a_field\")\n                        .field(\"type\", \"search_as_you_type\")\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject());\n\n        final DocumentMapper defaultMapper = createIndex(\"test\")\n            .mapperService()\n            .documentMapperParser()\n            .parse(\"_doc\", new CompressedXContent(mapping));\n\n        final SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"a_field\");\n        assertRootFieldMapper(rootMapper, 3, \"default\");\n\n\n        final PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"a_field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper.fieldType(), 3, \"default\");\n\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._2gram\").fieldType(), 2, \"default\", prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._3gram\").fieldType(), 3, \"default\", prefixFieldMapper.fieldType());\n    }\n","realPath":"modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/SearchAsYouTypeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"},{"authorDate":"2020-08-27 20:29:24","commitOrder":2,"curCode":"    public void testConfiguration() throws IOException {\n        int maxShingleSize = 4;\n        String analyzerName = \"simple\";\n        DocumentMapper defaultMapper = createDocumentMapper(\n            fieldMapping(\n                b -> b.field(\"type\", \"search_as_you_type\").field(\"analyzer\", analyzerName).field(\"max_shingle_size\", maxShingleSize)\n            )\n        ); \n\n        SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"field\");\n        assertRootFieldMapper(rootMapper, maxShingleSize, analyzerName);\n\n        PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper.fieldType(), maxShingleSize, analyzerName);\n\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"field._2gram\").fieldType(), 2, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"field._3gram\").fieldType(), 3, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"field._4gram\").fieldType(), 4, analyzerName, prefixFieldMapper.fieldType());\n    }\n","date":"2020-08-27 20:29:24","endLine":188,"groupId":"66490","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/43/c252ef5952ace57f01d84723e272d066577b9f.src","preCode":"    public void testConfiguration() throws IOException {\n        final int maxShingleSize = 4;\n        final String analyzerName = \"simple\";\n\n        final String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject()\n            .startObject(\"_doc\")\n                .startObject(\"properties\")\n                    .startObject(\"a_field\")\n                        .field(\"type\", \"search_as_you_type\")\n                        .field(\"analyzer\", analyzerName)\n                        .field(\"max_shingle_size\", maxShingleSize)\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject());\n\n        final DocumentMapper defaultMapper = createIndex(\"test\")\n            .mapperService()\n            .documentMapperParser()\n            .parse(\"_doc\", new CompressedXContent(mapping));\n\n        final SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"a_field\");\n        assertRootFieldMapper(rootMapper, maxShingleSize, analyzerName);\n\n        final PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"a_field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper.fieldType(), maxShingleSize, analyzerName);\n\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._2gram\").fieldType(), 2, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._3gram\").fieldType(), 3, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"a_field._4gram\").fieldType(), 4, analyzerName, prefixFieldMapper.fieldType());\n    }\n","realPath":"modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/SearchAsYouTypeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"}],"commitId":"0a3d3919a141e6e3c9bbddc43d046a4c9211b6be","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-27 20:29:24","modifiedFileCount":"256","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-11-04 21:53:09","codes":[{"authorDate":"2020-11-04 21:53:09","commitOrder":3,"curCode":"   public void testDefaultConfiguration() throws IOException {\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"field\");\n        assertRootFieldMapper(rootMapper, 3, \"default\");\n\n        PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper, rootMapper.indexAnalyzers(), 3, \"default\");\n\n        assertShingleFieldType(getShingleFieldMapper(defaultMapper, \"field._2gram\"),\n            rootMapper.indexAnalyzers(), 2, \"default\", prefixFieldMapper.fieldType());\n        assertShingleFieldType(getShingleFieldMapper(defaultMapper, \"field._3gram\"),\n            rootMapper.indexAnalyzers(), 3, \"default\", prefixFieldMapper.fieldType());\n   }\n","date":"2020-11-04 21:53:09","endLine":188,"groupId":"10181","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d4/76951e3603421bc0a1229b41a2f579a1b25143.src","preCode":"   public void testDefaultConfiguration() throws IOException {\n        DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"field\");\n        assertRootFieldMapper(rootMapper, 3, \"default\");\n\n        PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper.fieldType(), 3, \"default\");\n\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"field._2gram\").fieldType(), 2, \"default\", prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"field._3gram\").fieldType(), 3, \"default\", prefixFieldMapper.fieldType());\n   }\n","realPath":"modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/SearchAsYouTypeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"},{"authorDate":"2020-11-04 21:53:09","commitOrder":3,"curCode":"    public void testConfiguration() throws IOException {\n        int maxShingleSize = 4;\n        String analyzerName = \"simple\";\n        DocumentMapper defaultMapper = createDocumentMapper(\n            fieldMapping(\n                b -> b.field(\"type\", \"search_as_you_type\").field(\"analyzer\", analyzerName).field(\"max_shingle_size\", maxShingleSize)\n            )\n        );\n\n        SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"field\");\n        assertRootFieldMapper(rootMapper, maxShingleSize, analyzerName);\n\n        PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper, rootMapper.indexAnalyzers(), maxShingleSize, analyzerName);\n\n        assertShingleFieldType(getShingleFieldMapper(defaultMapper, \"field._2gram\"),\n            rootMapper.indexAnalyzers(), 2, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(getShingleFieldMapper(defaultMapper, \"field._3gram\"),\n            rootMapper.indexAnalyzers(), 3, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(getShingleFieldMapper(defaultMapper, \"field._4gram\"),\n            rootMapper.indexAnalyzers(), 4, analyzerName, prefixFieldMapper.fieldType());\n    }\n","date":"2020-11-04 21:53:09","endLine":211,"groupId":"10181","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d4/76951e3603421bc0a1229b41a2f579a1b25143.src","preCode":"    public void testConfiguration() throws IOException {\n        int maxShingleSize = 4;\n        String analyzerName = \"simple\";\n        DocumentMapper defaultMapper = createDocumentMapper(\n            fieldMapping(\n                b -> b.field(\"type\", \"search_as_you_type\").field(\"analyzer\", analyzerName).field(\"max_shingle_size\", maxShingleSize)\n            )\n        );\n\n        SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper, \"field\");\n        assertRootFieldMapper(rootMapper, maxShingleSize, analyzerName);\n\n        PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper, \"field._index_prefix\");\n        assertPrefixFieldType(prefixFieldMapper.fieldType(), maxShingleSize, analyzerName);\n\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"field._2gram\").fieldType(), 2, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"field._3gram\").fieldType(), 3, analyzerName, prefixFieldMapper.fieldType());\n        assertShingleFieldType(\n            getShingleFieldMapper(defaultMapper, \"field._4gram\").fieldType(), 4, analyzerName, prefixFieldMapper.fieldType());\n    }\n","realPath":"modules/mapper-extras/src/test/java/org/elasticsearch/index/mapper/SearchAsYouTypeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"}],"commitId":"f010269ab797e2502d8145799fc4eb19a954aea6","commitMessage":"@@@Move index analyzer management to FieldMapper/MapperService (#63937)\n\nIndex-time analyzers are currently specified on the MappedFieldType. This\nhas a number of unfortunate consequences; for example.  field mappers that\nindex data into implementation sub-fields.  such as prefix or phrase\naccelerators on text fields.  need to expose these sub-fields as MappedFieldTypes. \nwhich means that they then appear in field caps.  are externally searchable. \netc. It also adds index-time logic to a class that should only be concerned\nwith search-time behaviour.\n\nThis commit removes references to the index analyzer from MappedFieldType.\nInstead.  FieldMappers that use the terms index can pass either a single analyzer\nor a Map of fields to analyzers to their super constructor.  which are then\nexposed via a new FieldMapper#indexAnalyzers() method; all index-time analysis \nis mediated through the delegating analyzer wrapper on MapperService. \nIn a follow-up.  this will make it possible to register multiple field analyzers from \na single FieldMapper.  removing the need for 'hidden' mapper implementations \non text field.  parent joins.  and elsewhere.","date":"2020-11-04 21:53:09","modifiedFileCount":"54","status":"M","submitter":"Alan Woodward"}]
