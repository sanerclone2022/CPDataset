[{"authorTime":"2021-06-18 07:33:58","codes":[{"authorDate":"2021-06-18 07:33:58","commitOrder":1,"curCode":"    private static void assertStablePagination(String repoName, Collection<String> allSnapshotNames, GetSnapshotsRequest.SortBy sort) {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, null, i, order);\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, after, i, order);\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","date":"2021-06-18 07:33:58","endLine":191,"groupId":"38654","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertStablePagination","params":"(StringrepoName@Collection<String>allSnapshotNames@GetSnapshotsRequest.SortBysort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2c/12224472a73e05001369d606246eeec793cad8.src","preCode":"    private static void assertStablePagination(String repoName, Collection<String> allSnapshotNames, GetSnapshotsRequest.SortBy sort) {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, null, i, order);\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, after, i, order);\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"B"},{"authorDate":"2021-06-18 07:33:58","commitOrder":1,"curCode":"    private static void assertStablePagination(String repoName,\n                                               Collection<String> allSnapshotNames,\n                                               GetSnapshotsRequest.SortBy sort) throws IOException {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, i, order);\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, after, i, order);\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","date":"2021-06-18 07:33:58","endLine":187,"groupId":"51271","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertStablePagination","params":"(StringrepoName@Collection<String>allSnapshotNames@GetSnapshotsRequest.SortBysort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/72/514beed85042539e5a4505478ea77339f5818f.src","preCode":"    private static void assertStablePagination(String repoName,\n                                               Collection<String> allSnapshotNames,\n                                               GetSnapshotsRequest.SortBy sort) throws IOException {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, i, order);\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, after, i, order);\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"B"}],"commitId":"82ae6742eba59c58a93bf9e32ea37220d01ab75c","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles","date":"2021-06-18 07:33:58","modifiedFileCount":"125","status":"B","submitter":"Elastic Machine"},{"authorTime":"2021-06-29 04:28:30","codes":[{"authorDate":"2021-06-29 04:28:30","commitOrder":2,"curCode":"    private static void assertStablePagination(String repoName, Collection<String> allSnapshotNames, GetSnapshotsRequest.SortBy sort) {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final Tuple<String, List<SnapshotInfo>> subsetSorted = sortedWithLimit(repoName, sort, null, i, order);\n            assertEquals(allSorted.subList(0, i), subsetSorted.v2());\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final List<SnapshotInfo> subsetSorted = sortedWithLimit(\n                    repoName,\n                    sort,\n                    GetSnapshotsRequest.After.from(after, sort).asQueryParam(),\n                    i,\n                    order\n                ).v2();\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","date":"2021-06-29 04:28:30","endLine":207,"groupId":"38654","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertStablePagination","params":"(StringrepoName@Collection<String>allSnapshotNames@GetSnapshotsRequest.SortBysort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/93/c217e3cd6a03e99dc1dae7bd3752893b3e48cc.src","preCode":"    private static void assertStablePagination(String repoName, Collection<String> allSnapshotNames, GetSnapshotsRequest.SortBy sort) {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, null, i, order);\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, after, i, order);\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"},{"authorDate":"2021-06-29 04:28:30","commitOrder":2,"curCode":"    private static void assertStablePagination(String repoName,\n                                               Collection<String> allSnapshotNames,\n                                               GetSnapshotsRequest.SortBy sort) throws IOException {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, null, i, order).v2();\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final List<SnapshotInfo> subsetSorted = sortedWithLimit(\n                        repoName, sort, GetSnapshotsRequest.After.from(after, sort).asQueryParam(), i, order).v2();\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","date":"2021-06-29 04:28:30","endLine":195,"groupId":"38654","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertStablePagination","params":"(StringrepoName@Collection<String>allSnapshotNames@GetSnapshotsRequest.SortBysort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/95/496e3e537c6beda053c6a82fa0e55750172b91.src","preCode":"    private static void assertStablePagination(String repoName,\n                                               Collection<String> allSnapshotNames,\n                                               GetSnapshotsRequest.SortBy sort) throws IOException {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, i, order);\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, after, i, order);\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"}],"commitId":"5f89f8be3ff96ba9593838ff85731cd860138bcf","commitMessage":"@@@Introduce Next Field in Paginated GetSnapshots Response (#74236)\n\nFollow up to #73952 adding documentation for the `after` query parameter\nand the related `next` response field.\n\n","date":"2021-06-29 04:28:30","modifiedFileCount":"10","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-08-09 17:34:24","codes":[{"authorDate":"2021-08-09 17:34:24","commitOrder":3,"curCode":"    private static void assertStablePagination(String repoName, Collection<String> allSnapshotNames, GetSnapshotsRequest.SortBy sort) {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final GetSnapshotsResponse subsetSorted = sortedWithLimit(repoName, sort, null, i, order);\n            assertEquals(allSorted.subList(0, i), subsetSorted.getSnapshots());\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final GetSnapshotsResponse getSnapshotsResponse = sortedWithLimit(\n                    repoName,\n                    sort,\n                    GetSnapshotsRequest.After.from(after, sort).asQueryParam(),\n                    i,\n                    order\n                );\n                final List<SnapshotInfo> subsetSorted = getSnapshotsResponse.getSnapshots();\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(allSnapshotNames.size(), getSnapshotsResponse.totalCount());\n                assertEquals(allSnapshotNames.size() - (j + i + 1), getSnapshotsResponse.remaining());\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","date":"2021-08-09 17:34:24","endLine":207,"groupId":"38654","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertStablePagination","params":"(StringrepoName@Collection<String>allSnapshotNames@GetSnapshotsRequest.SortBysort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0e/e1be41b78495fc39b8befc0fdbae16eabaa607.src","preCode":"    private static void assertStablePagination(String repoName, Collection<String> allSnapshotNames, GetSnapshotsRequest.SortBy sort) {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final Tuple<String, List<SnapshotInfo>> subsetSorted = sortedWithLimit(repoName, sort, null, i, order);\n            assertEquals(allSorted.subList(0, i), subsetSorted.v2());\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final List<SnapshotInfo> subsetSorted = sortedWithLimit(\n                    repoName,\n                    sort,\n                    GetSnapshotsRequest.After.from(after, sort).asQueryParam(),\n                    i,\n                    order\n                ).v2();\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"},{"authorDate":"2021-08-09 17:34:24","commitOrder":3,"curCode":"    private static void assertStablePagination(String repoName,\n                                               Collection<String> allSnapshotNames,\n                                               GetSnapshotsRequest.SortBy sort) throws IOException {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, null, i, order).getSnapshots();\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final GetSnapshotsResponse getSnapshotsResponse =\n                    sortedWithLimit(repoName, sort, GetSnapshotsRequest.After.from(after, sort).asQueryParam(), i, order);\n                final List<SnapshotInfo> subsetSorted = getSnapshotsResponse.getSnapshots();\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(allSnapshotNames.size(), getSnapshotsResponse.totalCount());\n                assertEquals(allSnapshotNames.size() - (j + i + 1), getSnapshotsResponse.remaining());\n            }\n        }\n    }\n","date":"2021-08-09 17:34:24","endLine":200,"groupId":"38654","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertStablePagination","params":"(StringrepoName@Collection<String>allSnapshotNames@GetSnapshotsRequest.SortBysort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d3/949e6a98e13088ac79c8af60e94368c851df93.src","preCode":"    private static void assertStablePagination(String repoName,\n                                               Collection<String> allSnapshotNames,\n                                               GetSnapshotsRequest.SortBy sort) throws IOException {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, null, i, order).v2();\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final List<SnapshotInfo> subsetSorted = sortedWithLimit(\n                        repoName, sort, GetSnapshotsRequest.After.from(after, sort).asQueryParam(), i, order).v2();\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"}],"commitId":"a4983f5ab9812e0cc79d0914aee8a61c6fae0680","commitMessage":"@@@Return Total Result Count and Remaining Count in Get Snapshots Response (#76150)\n\nAdd total result count and remaining count to get snapshots response.","date":"2021-08-09 17:34:24","modifiedFileCount":"7","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-08-09 22:23:43","codes":[{"authorDate":"2021-08-09 22:23:43","commitOrder":4,"curCode":"    private static void assertStablePagination(String repoName, Collection<String> allSnapshotNames, GetSnapshotsRequest.SortBy sort) {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final GetSnapshotsResponse subsetSorted = sortedWithLimit(repoName, sort, null, i, order);\n            assertEquals(allSorted.subList(0, i), subsetSorted.getSnapshots());\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final GetSnapshotsResponse getSnapshotsResponse = sortedWithLimit(\n                    repoName,\n                    sort,\n                    GetSnapshotsRequest.After.from(after, sort).asQueryParam(),\n                    i,\n                    order\n                );\n                final GetSnapshotsResponse getSnapshotsResponseNumeric = sortedWithLimit(repoName, sort, j + 1, i, order);\n                final List<SnapshotInfo> subsetSorted = getSnapshotsResponse.getSnapshots();\n                assertEquals(subsetSorted, getSnapshotsResponseNumeric.getSnapshots());\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(allSnapshotNames.size(), getSnapshotsResponse.totalCount());\n                assertEquals(allSnapshotNames.size() - (j + i + 1), getSnapshotsResponse.remaining());\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(getSnapshotsResponseNumeric.totalCount(), getSnapshotsResponse.totalCount());\n                assertEquals(getSnapshotsResponseNumeric.remaining(), getSnapshotsResponse.remaining());\n            }\n        }\n    }\n","date":"2021-08-09 22:23:43","endLine":211,"groupId":"14979","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertStablePagination","params":"(StringrepoName@Collection<String>allSnapshotNames@GetSnapshotsRequest.SortBysort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/06/a00a6c7162cec14874ed2274c77c7e88a250dc.src","preCode":"    private static void assertStablePagination(String repoName, Collection<String> allSnapshotNames, GetSnapshotsRequest.SortBy sort) {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final GetSnapshotsResponse subsetSorted = sortedWithLimit(repoName, sort, null, i, order);\n            assertEquals(allSorted.subList(0, i), subsetSorted.getSnapshots());\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final GetSnapshotsResponse getSnapshotsResponse = sortedWithLimit(\n                    repoName,\n                    sort,\n                    GetSnapshotsRequest.After.from(after, sort).asQueryParam(),\n                    i,\n                    order\n                );\n                final List<SnapshotInfo> subsetSorted = getSnapshotsResponse.getSnapshots();\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(allSnapshotNames.size(), getSnapshotsResponse.totalCount());\n                assertEquals(allSnapshotNames.size() - (j + i + 1), getSnapshotsResponse.remaining());\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n            }\n        }\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"},{"authorDate":"2021-08-09 22:23:43","commitOrder":4,"curCode":"    private static void assertStablePagination(String repoName,\n                                               Collection<String> allSnapshotNames,\n                                               GetSnapshotsRequest.SortBy sort) throws IOException {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, null, i, order).getSnapshots();\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final GetSnapshotsResponse getSnapshotsResponse =\n                    sortedWithLimit(repoName, sort, GetSnapshotsRequest.After.from(after, sort).asQueryParam(), i, order);\n                final GetSnapshotsResponse getSnapshotsResponseNumeric = sortedWithLimit(repoName, sort, j + 1, i, order);\n                final List<SnapshotInfo> subsetSorted = getSnapshotsResponse.getSnapshots();\n                assertEquals(subsetSorted, getSnapshotsResponseNumeric.getSnapshots());\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(allSnapshotNames.size(), getSnapshotsResponse.totalCount());\n                assertEquals(allSnapshotNames.size() - (j + i + 1), getSnapshotsResponse.remaining());\n                assertEquals(getSnapshotsResponseNumeric.totalCount(), getSnapshotsResponse.totalCount());\n                assertEquals(getSnapshotsResponseNumeric.remaining(), getSnapshotsResponse.remaining());\n            }\n        }\n    }\n","date":"2021-08-09 22:23:43","endLine":204,"groupId":"38654","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertStablePagination","params":"(StringrepoName@Collection<String>allSnapshotNames@GetSnapshotsRequest.SortBysort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/70/da8e782b8878fd6ee3d4ef01d3c87886fa780a.src","preCode":"    private static void assertStablePagination(String repoName,\n                                               Collection<String> allSnapshotNames,\n                                               GetSnapshotsRequest.SortBy sort) throws IOException {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, null, i, order).getSnapshots();\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final GetSnapshotsResponse getSnapshotsResponse =\n                    sortedWithLimit(repoName, sort, GetSnapshotsRequest.After.from(after, sort).asQueryParam(), i, order);\n                final List<SnapshotInfo> subsetSorted = getSnapshotsResponse.getSnapshots();\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(allSnapshotNames.size(), getSnapshotsResponse.totalCount());\n                assertEquals(allSnapshotNames.size() - (j + i + 1), getSnapshotsResponse.remaining());\n            }\n        }\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"}],"commitId":"ffaa0f2742050fad76734a800bcda33c8944ff84","commitMessage":"@@@Implement Numeric Offset Parameter in Get Snapshots API (#76233)\n\nAdd numeric offset parameter to this API.\n\nRelates #74350","date":"2021-08-09 22:23:43","modifiedFileCount":"7","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-08-09 22:23:43","codes":[{"authorDate":"2021-09-10 21:00:44","commitOrder":5,"curCode":"    private static void assertStablePagination(String[] repoNames, Collection<String> allSnapshotNames, GetSnapshotsRequest.SortBy sort) {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoNames, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final GetSnapshotsResponse subsetSorted = sortedWithLimit(repoNames, sort, null, i, order);\n            assertEquals(allSorted.subList(0, i), subsetSorted.getSnapshots());\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final GetSnapshotsResponse getSnapshotsResponse = sortedWithLimit(\n                    repoNames,\n                    sort,\n                    GetSnapshotsRequest.After.from(after, sort).asQueryParam(),\n                    i,\n                    order\n                );\n                final GetSnapshotsResponse getSnapshotsResponseNumeric = sortedWithLimit(repoNames, sort, j + 1, i, order);\n                final List<SnapshotInfo> subsetSorted = getSnapshotsResponse.getSnapshots();\n                assertEquals(subsetSorted, getSnapshotsResponseNumeric.getSnapshots());\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(allSnapshotNames.size(), getSnapshotsResponse.totalCount());\n                assertEquals(allSnapshotNames.size() - (j + i + 1), getSnapshotsResponse.remaining());\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(getSnapshotsResponseNumeric.totalCount(), getSnapshotsResponse.totalCount());\n                assertEquals(getSnapshotsResponseNumeric.remaining(), getSnapshotsResponse.remaining());\n            }\n        }\n    }\n","date":"2021-09-10 21:00:44","endLine":493,"groupId":"106299","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"assertStablePagination","params":"(String[]repoNames@Collection<String>allSnapshotNames@GetSnapshotsRequest.SortBysort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d6/a124ff8f5876a469afd2ec1d3982fc177544c8.src","preCode":"    private static void assertStablePagination(String repoName, Collection<String> allSnapshotNames, GetSnapshotsRequest.SortBy sort) {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final GetSnapshotsResponse subsetSorted = sortedWithLimit(repoName, sort, null, i, order);\n            assertEquals(allSorted.subList(0, i), subsetSorted.getSnapshots());\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final GetSnapshotsResponse getSnapshotsResponse = sortedWithLimit(\n                    repoName,\n                    sort,\n                    GetSnapshotsRequest.After.from(after, sort).asQueryParam(),\n                    i,\n                    order\n                );\n                final GetSnapshotsResponse getSnapshotsResponseNumeric = sortedWithLimit(repoName, sort, j + 1, i, order);\n                final List<SnapshotInfo> subsetSorted = getSnapshotsResponse.getSnapshots();\n                assertEquals(subsetSorted, getSnapshotsResponseNumeric.getSnapshots());\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(allSnapshotNames.size(), getSnapshotsResponse.totalCount());\n                assertEquals(allSnapshotNames.size() - (j + i + 1), getSnapshotsResponse.remaining());\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(getSnapshotsResponseNumeric.totalCount(), getSnapshotsResponse.totalCount());\n                assertEquals(getSnapshotsResponseNumeric.remaining(), getSnapshotsResponse.remaining());\n            }\n        }\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":463,"status":"M"},{"authorDate":"2021-08-09 22:23:43","commitOrder":5,"curCode":"    private static void assertStablePagination(String repoName,\n                                               Collection<String> allSnapshotNames,\n                                               GetSnapshotsRequest.SortBy sort) throws IOException {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, null, i, order).getSnapshots();\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final GetSnapshotsResponse getSnapshotsResponse =\n                    sortedWithLimit(repoName, sort, GetSnapshotsRequest.After.from(after, sort).asQueryParam(), i, order);\n                final GetSnapshotsResponse getSnapshotsResponseNumeric = sortedWithLimit(repoName, sort, j + 1, i, order);\n                final List<SnapshotInfo> subsetSorted = getSnapshotsResponse.getSnapshots();\n                assertEquals(subsetSorted, getSnapshotsResponseNumeric.getSnapshots());\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(allSnapshotNames.size(), getSnapshotsResponse.totalCount());\n                assertEquals(allSnapshotNames.size() - (j + i + 1), getSnapshotsResponse.remaining());\n                assertEquals(getSnapshotsResponseNumeric.totalCount(), getSnapshotsResponse.totalCount());\n                assertEquals(getSnapshotsResponseNumeric.remaining(), getSnapshotsResponse.remaining());\n            }\n        }\n    }\n","date":"2021-08-09 22:23:43","endLine":204,"groupId":"106299","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"assertStablePagination","params":"(StringrepoName@Collection<String>allSnapshotNames@GetSnapshotsRequest.SortBysort)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/70/da8e782b8878fd6ee3d4ef01d3c87886fa780a.src","preCode":"    private static void assertStablePagination(String repoName,\n                                               Collection<String> allSnapshotNames,\n                                               GetSnapshotsRequest.SortBy sort) throws IOException {\n        final SortOrder order = randomFrom(SortOrder.values());\n        final List<SnapshotInfo> allSorted = allSnapshotsSorted(allSnapshotNames, repoName, sort, order);\n\n        for (int i = 1; i <= allSnapshotNames.size(); i++) {\n            final List<SnapshotInfo> subsetSorted = sortedWithLimit(repoName, sort, null, i, order).getSnapshots();\n            assertEquals(subsetSorted, allSorted.subList(0, i));\n        }\n\n        for (int j = 0; j < allSnapshotNames.size(); j++) {\n            final SnapshotInfo after = allSorted.get(j);\n            for (int i = 1; i < allSnapshotNames.size() - j; i++) {\n                final GetSnapshotsResponse getSnapshotsResponse =\n                    sortedWithLimit(repoName, sort, GetSnapshotsRequest.After.from(after, sort).asQueryParam(), i, order);\n                final GetSnapshotsResponse getSnapshotsResponseNumeric = sortedWithLimit(repoName, sort, j + 1, i, order);\n                final List<SnapshotInfo> subsetSorted = getSnapshotsResponse.getSnapshots();\n                assertEquals(subsetSorted, getSnapshotsResponseNumeric.getSnapshots());\n                assertEquals(subsetSorted, allSorted.subList(j + 1, j + i + 1));\n                assertEquals(allSnapshotNames.size(), getSnapshotsResponse.totalCount());\n                assertEquals(allSnapshotNames.size() - (j + i + 1), getSnapshotsResponse.remaining());\n                assertEquals(getSnapshotsResponseNumeric.totalCount(), getSnapshotsResponse.totalCount());\n                assertEquals(getSnapshotsResponseNumeric.remaining(), getSnapshotsResponse.remaining());\n            }\n        }\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"N"}],"commitId":"f1a4551e9363d2633b7807ab770029482d9efe53","commitMessage":"@@@Implement Exclude Patterns for Snapshot- and Repository Names in Get Snapshots API (#77308)\n\nIt's in the title. Adds support for exclude patterns combined with wildcard requests\nsimilar to what we support for index names.\n","date":"2021-09-10 21:00:44","modifiedFileCount":"5","status":"M","submitter":"Armin Braun"}]
