[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    private List<ClusterState> simulateIndexCreationStates(final String indexName, final boolean withPrimaryAllocationFailures) {\n        final int numberOfShards = randomIntBetween(1, 5);\n        final int numberOfReplicas = randomIntBetween(1, numberOfShards);\n        \r\n        final IndexMetaData indexMetaData = IndexMetaData.builder(indexName)\n                                                         .settings(settings(Version.CURRENT)\n                                                                       .put(IndexMetaData.SETTING_INDEX_UUID, UUIDs.randomBase64UUID()))\n                                                         .numberOfShards(numberOfShards)\n                                                         .numberOfReplicas(numberOfReplicas)\n                                                         .build();\n        final MetaData metaData = MetaData.builder().put(indexMetaData, true).build();\n        final RoutingTable routingTable = RoutingTable.builder().addAsNew(indexMetaData).build();\n\n        ClusterState clusterState = ClusterState.builder(new ClusterName(\"test_cluster\"))\n                                                .metaData(metaData)\n                                                .routingTable(routingTable)\n                                                .build();\n        return generateClusterStates(clusterState, indexName, numberOfReplicas, withPrimaryAllocationFailures);\n    }\n","date":"2018-04-26 03:22:53","endLine":317,"groupId":"60","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"simulateIndexCreationStates","params":"(finalStringindexName@finalbooleanwithPrimaryAllocationFailures)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0f/5f4870ae1bb0958806015fad420de95c3ef82a.src","preCode":"    private List<ClusterState> simulateIndexCreationStates(final String indexName, final boolean withPrimaryAllocationFailures) {\n        final int numberOfShards = randomIntBetween(1, 5);\n        final int numberOfReplicas = randomIntBetween(1, numberOfShards);\n        \r\n        final IndexMetaData indexMetaData = IndexMetaData.builder(indexName)\n                                                         .settings(settings(Version.CURRENT)\n                                                                       .put(IndexMetaData.SETTING_INDEX_UUID, UUIDs.randomBase64UUID()))\n                                                         .numberOfShards(numberOfShards)\n                                                         .numberOfReplicas(numberOfReplicas)\n                                                         .build();\n        final MetaData metaData = MetaData.builder().put(indexMetaData, true).build();\n        final RoutingTable routingTable = RoutingTable.builder().addAsNew(indexMetaData).build();\n\n        ClusterState clusterState = ClusterState.builder(new ClusterName(\"test_cluster\"))\n                                                .metaData(metaData)\n                                                .routingTable(routingTable)\n                                                .build();\n        return generateClusterStates(clusterState, indexName, numberOfReplicas, withPrimaryAllocationFailures);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/health/ClusterStateHealthTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":299,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    private ClusterState initializeWithNewIndex(final String indexName, final int numShards, final int numReplicas) {\n        \r\n        final IndexMetaData indexMetaData = IndexMetaData.builder(indexName)\n                                                .settings(settings(Version.CURRENT)\n                                                              .put(IndexMetaData.SETTING_INDEX_UUID, UUIDs.randomBase64UUID()))\n                                                .numberOfShards(numShards)\n                                                .numberOfReplicas(numReplicas)\n                                                .build();\n        final MetaData metaData = MetaData.builder().put(indexMetaData, true).build();\n        final RoutingTable routingTable = RoutingTable.builder().addAsNew(indexMetaData).build();\n        return ClusterState.builder(new ClusterName(\"test_cluster\")).metaData(metaData).routingTable(routingTable).build();\n    }\n","date":"2018-04-26 03:22:53","endLine":193,"groupId":"60","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initializeWithNewIndex","params":"(finalStringindexName@finalintnumShards@finalintnumReplicas)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4f/b03bf393b3c146f233457d5a5a86231e9c0186.src","preCode":"    private ClusterState initializeWithNewIndex(final String indexName, final int numShards, final int numReplicas) {\n        \r\n        final IndexMetaData indexMetaData = IndexMetaData.builder(indexName)\n                                                .settings(settings(Version.CURRENT)\n                                                              .put(IndexMetaData.SETTING_INDEX_UUID, UUIDs.randomBase64UUID()))\n                                                .numberOfShards(numShards)\n                                                .numberOfReplicas(numReplicas)\n                                                .build();\n        final MetaData metaData = MetaData.builder().put(indexMetaData, true).build();\n        final RoutingTable routingTable = RoutingTable.builder().addAsNew(indexMetaData).build();\n        return ClusterState.builder(new ClusterName(\"test_cluster\")).metaData(metaData).routingTable(routingTable).build();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/ActiveShardCountTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":2,"curCode":"    private List<ClusterState> simulateIndexCreationStates(final String indexName, final boolean withPrimaryAllocationFailures) {\n        final int numberOfShards = randomIntBetween(1, 5);\n        final int numberOfReplicas = randomIntBetween(1, numberOfShards);\n        \r\n        final IndexMetadata indexMetadata = IndexMetadata.builder(indexName)\n                                                         .settings(settings(Version.CURRENT)\n                                                                       .put(IndexMetadata.SETTING_INDEX_UUID, UUIDs.randomBase64UUID()))\n                                                         .numberOfShards(numberOfShards)\n                                                         .numberOfReplicas(numberOfReplicas)\n                                                         .build();\n        final Metadata metadata = Metadata.builder().put(indexMetadata, true).build();\n        final RoutingTable routingTable = RoutingTable.builder().addAsNew(indexMetadata).build();\n\n        ClusterState clusterState = ClusterState.builder(new ClusterName(\"test_cluster\"))\n                                                .metadata(metadata)\n                                                .routingTable(routingTable)\n                                                .build();\n        return generateClusterStates(clusterState, indexName, numberOfReplicas, withPrimaryAllocationFailures);\n    }\n","date":"2020-04-01 03:52:01","endLine":319,"groupId":"102119","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"simulateIndexCreationStates","params":"(finalStringindexName@finalbooleanwithPrimaryAllocationFailures)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/68/ea6c5e4f69dffb85921c8ff05a8b7cc1be3d50.src","preCode":"    private List<ClusterState> simulateIndexCreationStates(final String indexName, final boolean withPrimaryAllocationFailures) {\n        final int numberOfShards = randomIntBetween(1, 5);\n        final int numberOfReplicas = randomIntBetween(1, numberOfShards);\n        \r\n        final IndexMetaData indexMetaData = IndexMetaData.builder(indexName)\n                                                         .settings(settings(Version.CURRENT)\n                                                                       .put(IndexMetaData.SETTING_INDEX_UUID, UUIDs.randomBase64UUID()))\n                                                         .numberOfShards(numberOfShards)\n                                                         .numberOfReplicas(numberOfReplicas)\n                                                         .build();\n        final MetaData metaData = MetaData.builder().put(indexMetaData, true).build();\n        final RoutingTable routingTable = RoutingTable.builder().addAsNew(indexMetaData).build();\n\n        ClusterState clusterState = ClusterState.builder(new ClusterName(\"test_cluster\"))\n                                                .metaData(metaData)\n                                                .routingTable(routingTable)\n                                                .build();\n        return generateClusterStates(clusterState, indexName, numberOfReplicas, withPrimaryAllocationFailures);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/health/ClusterStateHealthTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":2,"curCode":"    private ClusterState initializeWithNewIndex(final String indexName, final int numShards, final int numReplicas) {\n        \r\n        final IndexMetadata indexMetadata = IndexMetadata.builder(indexName)\n                                                .settings(settings(Version.CURRENT)\n                                                              .put(IndexMetadata.SETTING_INDEX_UUID, UUIDs.randomBase64UUID()))\n                                                .numberOfShards(numShards)\n                                                .numberOfReplicas(numReplicas)\n                                                .build();\n        final Metadata metadata = Metadata.builder().put(indexMetadata, true).build();\n        final RoutingTable routingTable = RoutingTable.builder().addAsNew(indexMetadata).build();\n        return ClusterState.builder(new ClusterName(\"test_cluster\")).metadata(metadata).routingTable(routingTable).build();\n    }\n","date":"2020-04-01 03:52:01","endLine":205,"groupId":"102119","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initializeWithNewIndex","params":"(finalStringindexName@finalintnumShards@finalintnumReplicas)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/77/1ae75d6313d2bdd31159e12ff063a2fe853d8a.src","preCode":"    private ClusterState initializeWithNewIndex(final String indexName, final int numShards, final int numReplicas) {\n        \r\n        final IndexMetaData indexMetaData = IndexMetaData.builder(indexName)\n                                                .settings(settings(Version.CURRENT)\n                                                              .put(IndexMetaData.SETTING_INDEX_UUID, UUIDs.randomBase64UUID()))\n                                                .numberOfShards(numShards)\n                                                .numberOfReplicas(numReplicas)\n                                                .build();\n        final MetaData metaData = MetaData.builder().put(indexMetaData, true).build();\n        final RoutingTable routingTable = RoutingTable.builder().addAsNew(indexMetaData).build();\n        return ClusterState.builder(new ClusterName(\"test_cluster\")).metaData(metaData).routingTable(routingTable).build();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/ActiveShardCountTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
