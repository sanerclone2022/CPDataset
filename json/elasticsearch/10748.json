[{"authorTime":"2019-02-14 00:14:56","codes":[{"authorDate":"2018-11-29 18:35:38","commitOrder":2,"curCode":"    public void testSynonymsWrappedByMultiplexer() throws IOException {\n        Settings settings = Settings.builder()\n            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)\n            .put(\"path.home\", createTempDir().toString())\n            .put(\"index.analysis.filter.synonyms.type\", \"synonym\")\n            .putList(\"index.analysis.filter.synonyms.synonyms\", \"programmer, developer\")\n            .put(\"index.analysis.filter.my_english.type\", \"stemmer\")\n            .put(\"index.analysis.filter.my_english.language\", \"porter2\")\n            .put(\"index.analysis.filter.stem_repeat.type\", \"multiplexer\")\n            .putList(\"index.analysis.filter.stem_repeat.filters\", \"my_english, synonyms\")\n            .put(\"index.analysis.analyzer.synonymAnalyzer.tokenizer\", \"standard\")\n            .putList(\"index.analysis.analyzer.synonymAnalyzer.filter\", \"lowercase\", \"stem_repeat\")\n            .build();\n        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings(\"index\", settings);\n        indexAnalyzers = createTestAnalysis(idxSettings, settings, new CommonAnalysisPlugin()).indexAnalyzers;\n\n        BaseTokenStreamTestCase.assertAnalyzesTo(indexAnalyzers.get(\"synonymAnalyzer\"), \"Some developers are odd\",\n            new String[]{ \"some\", \"developers\", \"develop\", \"programm\", \"are\", \"odd\" },\n            new int[]{ 1, 1, 0, 0, 1, 1 });\n    }\n","date":"2018-11-29 18:35:38","endLine":147,"groupId":"69984","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSynonymsWrappedByMultiplexer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/3dd975688075e79e9a1e10f33ea1d02c248604.src","preCode":"    public void testSynonymsWrappedByMultiplexer() throws IOException {\n        Settings settings = Settings.builder()\n            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)\n            .put(\"path.home\", createTempDir().toString())\n            .put(\"index.analysis.filter.synonyms.type\", \"synonym\")\n            .putList(\"index.analysis.filter.synonyms.synonyms\", \"programmer, developer\")\n            .put(\"index.analysis.filter.my_english.type\", \"stemmer\")\n            .put(\"index.analysis.filter.my_english.language\", \"porter2\")\n            .put(\"index.analysis.filter.stem_repeat.type\", \"multiplexer\")\n            .putList(\"index.analysis.filter.stem_repeat.filters\", \"my_english, synonyms\")\n            .put(\"index.analysis.analyzer.synonymAnalyzer.tokenizer\", \"standard\")\n            .putList(\"index.analysis.analyzer.synonymAnalyzer.filter\", \"lowercase\", \"stem_repeat\")\n            .build();\n        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings(\"index\", settings);\n        indexAnalyzers = createTestAnalysis(idxSettings, settings, new CommonAnalysisPlugin()).indexAnalyzers;\n\n        BaseTokenStreamTestCase.assertAnalyzesTo(indexAnalyzers.get(\"synonymAnalyzer\"), \"Some developers are odd\",\n            new String[]{ \"some\", \"developers\", \"develop\", \"programm\", \"are\", \"odd\" },\n            new int[]{ 1, 1, 0, 0, 1, 1 });\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/SynonymsAnalysisTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"NB"},{"authorDate":"2019-02-14 00:14:56","commitOrder":2,"curCode":"    public void testPreconfigured() throws IOException {\n        Settings settings = Settings.builder()\n            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)\n            .put(\"path.home\", createTempDir().toString())\n            .put(\"index.analysis.filter.synonyms.type\", \"synonym\")\n            .putList(\"index.analysis.filter.synonyms.synonyms\", \"w������rst, sausage\")\n            .put(\"index.analysis.analyzer.my_analyzer.tokenizer\", \"standard\")\n            .putList(\"index.analysis.analyzer.my_analyzer.filter\", \"lowercase\", \"asciifolding\", \"synonyms\")\n            .build();\n        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings(\"index\", settings);\n        indexAnalyzers = createTestAnalysis(idxSettings, settings, new CommonAnalysisPlugin()).indexAnalyzers;\n\n        BaseTokenStreamTestCase.assertAnalyzesTo(indexAnalyzers.get(\"my_analyzer\"), \"w������rst\",\n            new String[]{ \"wurst\", \"sausage\"},\n            new int[]{ 1, 0 });\n    }\n","date":"2019-02-14 00:14:56","endLine":185,"groupId":"69983","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPreconfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/65/82188f33c0b976ba657976cac32e92eb9220d3.src","preCode":"    public void testPreconfigured() throws IOException {\n        Settings settings = Settings.builder()\n            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)\n            .put(\"path.home\", createTempDir().toString())\n            .put(\"index.analysis.filter.synonyms.type\", \"synonym\")\n            .putList(\"index.analysis.filter.synonyms.synonyms\", \"w������rst, sausage\")\n            .put(\"index.analysis.analyzer.my_analyzer.tokenizer\", \"standard\")\n            .putList(\"index.analysis.analyzer.my_analyzer.filter\", \"lowercase\", \"asciifolding\", \"synonyms\")\n            .build();\n        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings(\"index\", settings);\n        indexAnalyzers = createTestAnalysis(idxSettings, settings, new CommonAnalysisPlugin()).indexAnalyzers;\n\n        BaseTokenStreamTestCase.assertAnalyzesTo(indexAnalyzers.get(\"my_analyzer\"), \"w������rst\",\n            new String[]{ \"wurst\", \"sausage\"},\n            new int[]{ 1, 0 });\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/SynonymsAnalysisTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"B"}],"commitId":"25d4e415c139f61d3a87d4305e12101d9d8cdc26","commitMessage":"@@@Fix PreConfiguredTokenFilters getSynonymFilter() implementations (#38839)\n\nWhen we added support for TokenFilterFactories to specialise how they were used when parsing\nsynonym files.  PreConfiguredTokenFilters were set up to either apply themselves.  or be ignored.\nThis behaviour is a leftover from an earlier iteration.  and also has an incorrect default.\n\nThis commit makes preconfigured token filters usable in synonym file parsing by default.  and brings\nthose filters that should not be used into line with index-specific filter factories; in indexes created\nbefore version 7 we emit a deprecation warning.  and we throw an error in indexes created after.\n\nFixes #38793","date":"2019-02-14 00:14:56","modifiedFileCount":"3","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    public void testSynonymsWrappedByMultiplexer() throws IOException {\n        Settings settings = Settings.builder()\n            .put(IndexMetadata.SETTING_VERSION_CREATED, Version.CURRENT)\n            .put(\"path.home\", createTempDir().toString())\n            .put(\"index.analysis.filter.synonyms.type\", \"synonym\")\n            .putList(\"index.analysis.filter.synonyms.synonyms\", \"programmer, developer\")\n            .put(\"index.analysis.filter.my_english.type\", \"stemmer\")\n            .put(\"index.analysis.filter.my_english.language\", \"porter2\")\n            .put(\"index.analysis.filter.stem_repeat.type\", \"multiplexer\")\n            .putList(\"index.analysis.filter.stem_repeat.filters\", \"my_english, synonyms\")\n            .put(\"index.analysis.analyzer.synonymAnalyzer.tokenizer\", \"standard\")\n            .putList(\"index.analysis.analyzer.synonymAnalyzer.filter\", \"lowercase\", \"stem_repeat\")\n            .build();\n        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings(\"index\", settings);\n        indexAnalyzers = createTestAnalysis(idxSettings, settings, new CommonAnalysisPlugin()).indexAnalyzers;\n\n        BaseTokenStreamTestCase.assertAnalyzesTo(indexAnalyzers.get(\"synonymAnalyzer\"), \"Some developers are odd\",\n            new String[]{ \"some\", \"developers\", \"develop\", \"programm\", \"are\", \"odd\" },\n            new int[]{ 1, 1, 0, 0, 1, 1 });\n    }\n","date":"2020-04-01 03:52:01","endLine":149,"groupId":"10748","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSynonymsWrappedByMultiplexer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/88/0f006c4c6dc9faf7355b88e49ed6188d34aaa1.src","preCode":"    public void testSynonymsWrappedByMultiplexer() throws IOException {\n        Settings settings = Settings.builder()\n            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)\n            .put(\"path.home\", createTempDir().toString())\n            .put(\"index.analysis.filter.synonyms.type\", \"synonym\")\n            .putList(\"index.analysis.filter.synonyms.synonyms\", \"programmer, developer\")\n            .put(\"index.analysis.filter.my_english.type\", \"stemmer\")\n            .put(\"index.analysis.filter.my_english.language\", \"porter2\")\n            .put(\"index.analysis.filter.stem_repeat.type\", \"multiplexer\")\n            .putList(\"index.analysis.filter.stem_repeat.filters\", \"my_english, synonyms\")\n            .put(\"index.analysis.analyzer.synonymAnalyzer.tokenizer\", \"standard\")\n            .putList(\"index.analysis.analyzer.synonymAnalyzer.filter\", \"lowercase\", \"stem_repeat\")\n            .build();\n        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings(\"index\", settings);\n        indexAnalyzers = createTestAnalysis(idxSettings, settings, new CommonAnalysisPlugin()).indexAnalyzers;\n\n        BaseTokenStreamTestCase.assertAnalyzesTo(indexAnalyzers.get(\"synonymAnalyzer\"), \"Some developers are odd\",\n            new String[]{ \"some\", \"developers\", \"develop\", \"programm\", \"are\", \"odd\" },\n            new int[]{ 1, 1, 0, 0, 1, 1 });\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/SynonymsAnalysisTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    public void testPreconfigured() throws IOException {\n        Settings settings = Settings.builder()\n            .put(IndexMetadata.SETTING_VERSION_CREATED, Version.CURRENT)\n            .put(\"path.home\", createTempDir().toString())\n            .put(\"index.analysis.filter.synonyms.type\", \"synonym\")\n            .putList(\"index.analysis.filter.synonyms.synonyms\", \"w������rst, sausage\")\n            .put(\"index.analysis.analyzer.my_analyzer.tokenizer\", \"standard\")\n            .putList(\"index.analysis.analyzer.my_analyzer.filter\", \"lowercase\", \"asciifolding\", \"synonyms\")\n            .build();\n        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings(\"index\", settings);\n        indexAnalyzers = createTestAnalysis(idxSettings, settings, new CommonAnalysisPlugin()).indexAnalyzers;\n\n        BaseTokenStreamTestCase.assertAnalyzesTo(indexAnalyzers.get(\"my_analyzer\"), \"w������rst\",\n            new String[]{ \"wurst\", \"sausage\"},\n            new int[]{ 1, 0 });\n    }\n","date":"2020-04-01 03:52:01","endLine":183,"groupId":"10748","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPreconfigured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/88/0f006c4c6dc9faf7355b88e49ed6188d34aaa1.src","preCode":"    public void testPreconfigured() throws IOException {\n        Settings settings = Settings.builder()\n            .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)\n            .put(\"path.home\", createTempDir().toString())\n            .put(\"index.analysis.filter.synonyms.type\", \"synonym\")\n            .putList(\"index.analysis.filter.synonyms.synonyms\", \"w������rst, sausage\")\n            .put(\"index.analysis.analyzer.my_analyzer.tokenizer\", \"standard\")\n            .putList(\"index.analysis.analyzer.my_analyzer.filter\", \"lowercase\", \"asciifolding\", \"synonyms\")\n            .build();\n        IndexSettings idxSettings = IndexSettingsModule.newIndexSettings(\"index\", settings);\n        indexAnalyzers = createTestAnalysis(idxSettings, settings, new CommonAnalysisPlugin()).indexAnalyzers;\n\n        BaseTokenStreamTestCase.assertAnalyzesTo(indexAnalyzers.get(\"my_analyzer\"), \"w������rst\",\n            new String[]{ \"wurst\", \"sausage\"},\n            new int[]{ 1, 0 });\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/SynonymsAnalysisTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
