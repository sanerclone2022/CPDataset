[{"authorTime":"2020-07-10 21:44:56","codes":[{"authorDate":"2020-07-10 21:44:56","commitOrder":1,"curCode":"    public void testFailsHealthOnSinglePathFsyncFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemFsyncIOExceptionProvider disruptFsyncFileSystemProvider = new FileSystemFsyncIOExceptionProvider(fileSystem);\n        fileSystem = disruptFsyncFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = env.nodeDataPaths();\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            disruptFsyncFileSystemProvider.injectIOException.set(true);\n            String disruptedPath = randomFrom(paths).toString();\n            disruptFsyncFileSystemProvider.restrictPathPrefix(disruptedPath);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptFsyncFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptFsyncFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","date":"2020-07-10 21:44:56","endLine":203,"groupId":"7565","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailsHealthOnSinglePathFsyncFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/66/ff327363969bac4368e6067eaed9c1a23a2969.src","preCode":"    public void testFailsHealthOnSinglePathFsyncFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemFsyncIOExceptionProvider disruptFsyncFileSystemProvider = new FileSystemFsyncIOExceptionProvider(fileSystem);\n        fileSystem = disruptFsyncFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = env.nodeDataPaths();\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            disruptFsyncFileSystemProvider.injectIOException.set(true);\n            String disruptedPath = randomFrom(paths).toString();\n            disruptFsyncFileSystemProvider.restrictPathPrefix(disruptedPath);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptFsyncFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptFsyncFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/monitor/fs/FsHealthServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"B"},{"authorDate":"2020-07-10 21:44:56","commitOrder":1,"curCode":"    public void testFailsHealthOnSinglePathWriteFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemIOExceptionProvider disruptWritesFileSystemProvider = new FileSystemIOExceptionProvider(fileSystem);\n        fileSystem = disruptWritesFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = env.nodeDataPaths();\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            disruptWritesFileSystemProvider.injectIOException.set(true);\n            String disruptedPath = randomFrom(paths).toString();\n            disruptWritesFileSystemProvider.restrictPathPrefix(disruptedPath);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptWritesFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptWritesFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","date":"2020-07-10 21:44:56","endLine":234,"groupId":"7565","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailsHealthOnSinglePathWriteFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/66/ff327363969bac4368e6067eaed9c1a23a2969.src","preCode":"    public void testFailsHealthOnSinglePathWriteFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemIOExceptionProvider disruptWritesFileSystemProvider = new FileSystemIOExceptionProvider(fileSystem);\n        fileSystem = disruptWritesFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = env.nodeDataPaths();\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            disruptWritesFileSystemProvider.injectIOException.set(true);\n            String disruptedPath = randomFrom(paths).toString();\n            disruptWritesFileSystemProvider.restrictPathPrefix(disruptedPath);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptWritesFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptWritesFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/monitor/fs/FsHealthServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":205,"status":"B"}],"commitId":"366ca378a8644d6654417988820c67f4feb714fe","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-10 21:44:56","modifiedFileCount":"565","status":"B","submitter":"Luca Cavanna"},{"authorTime":"2020-07-13 20:09:56","codes":[{"authorDate":"2020-07-10 21:44:56","commitOrder":2,"curCode":"    public void testFailsHealthOnSinglePathFsyncFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemFsyncIOExceptionProvider disruptFsyncFileSystemProvider = new FileSystemFsyncIOExceptionProvider(fileSystem);\n        fileSystem = disruptFsyncFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = env.nodeDataPaths();\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            disruptFsyncFileSystemProvider.injectIOException.set(true);\n            String disruptedPath = randomFrom(paths).toString();\n            disruptFsyncFileSystemProvider.restrictPathPrefix(disruptedPath);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptFsyncFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptFsyncFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","date":"2020-07-10 21:44:56","endLine":203,"groupId":"7565","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailsHealthOnSinglePathFsyncFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/66/ff327363969bac4368e6067eaed9c1a23a2969.src","preCode":"    public void testFailsHealthOnSinglePathFsyncFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemFsyncIOExceptionProvider disruptFsyncFileSystemProvider = new FileSystemFsyncIOExceptionProvider(fileSystem);\n        fileSystem = disruptFsyncFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = env.nodeDataPaths();\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            disruptFsyncFileSystemProvider.injectIOException.set(true);\n            String disruptedPath = randomFrom(paths).toString();\n            disruptFsyncFileSystemProvider.restrictPathPrefix(disruptedPath);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptFsyncFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptFsyncFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/monitor/fs/FsHealthServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"N"},{"authorDate":"2020-07-13 20:09:56","commitOrder":2,"curCode":"    public void testFailsHealthOnSinglePathWriteFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemIOExceptionProvider disruptWritesFileSystemProvider = new FileSystemIOExceptionProvider(fileSystem);\n        fileSystem = disruptWritesFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = env.nodeDataPaths();\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            String disruptedPath = randomFrom(paths).toString();\n            disruptWritesFileSystemProvider.restrictPathPrefix(disruptedPath);\n            disruptWritesFileSystemProvider.injectIOException.set(true);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptWritesFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptWritesFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","date":"2020-07-13 20:09:56","endLine":232,"groupId":"7566","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailsHealthOnSinglePathWriteFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/04/efdfdab808e4ffb37b811849a6c9dc25eb5f9e.src","preCode":"    public void testFailsHealthOnSinglePathWriteFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemIOExceptionProvider disruptWritesFileSystemProvider = new FileSystemIOExceptionProvider(fileSystem);\n        fileSystem = disruptWritesFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = env.nodeDataPaths();\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            disruptWritesFileSystemProvider.injectIOException.set(true);\n            String disruptedPath = randomFrom(paths).toString();\n            disruptWritesFileSystemProvider.restrictPathPrefix(disruptedPath);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptWritesFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptWritesFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/monitor/fs/FsHealthServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"}],"commitId":"fa48ccd15f145a96e9a988d422dac58fdfbd839e","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-13 20:09:56","modifiedFileCount":"64","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2021-05-12 20:50:26","codes":[{"authorDate":"2021-05-12 20:50:26","commitOrder":3,"curCode":"    public void testFailsHealthOnSinglePathFsyncFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemFsyncIOExceptionProvider disruptFsyncFileSystemProvider = new FileSystemFsyncIOExceptionProvider(fileSystem);\n        fileSystem = disruptFsyncFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = new Path[] { env.nodeDataPath() };\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            disruptFsyncFileSystemProvider.injectIOException.set(true);\n            String disruptedPath = randomFrom(paths).toString();\n            disruptFsyncFileSystemProvider.restrictPathPrefix(disruptedPath);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptFsyncFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptFsyncFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","date":"2021-05-12 20:50:26","endLine":186,"groupId":"106058","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFailsHealthOnSinglePathFsyncFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/76/ba92a4849664224163b3ae334afb1739799e03.src","preCode":"    public void testFailsHealthOnSinglePathFsyncFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemFsyncIOExceptionProvider disruptFsyncFileSystemProvider = new FileSystemFsyncIOExceptionProvider(fileSystem);\n        fileSystem = disruptFsyncFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = env.nodeDataPaths();\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            disruptFsyncFileSystemProvider.injectIOException.set(true);\n            String disruptedPath = randomFrom(paths).toString();\n            disruptFsyncFileSystemProvider.restrictPathPrefix(disruptedPath);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptFsyncFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptFsyncFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/monitor/fs/FsHealthServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2021-05-12 20:50:26","commitOrder":3,"curCode":"    public void testFailsHealthOnSinglePathWriteFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemIOExceptionProvider disruptWritesFileSystemProvider = new FileSystemIOExceptionProvider(fileSystem);\n        fileSystem = disruptWritesFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = new Path[] { env.nodeDataPath() };\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            String disruptedPath = randomFrom(paths).toString();\n            disruptWritesFileSystemProvider.restrictPathPrefix(disruptedPath);\n            disruptWritesFileSystemProvider.injectIOException.set(true);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptWritesFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptWritesFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","date":"2021-05-12 20:50:26","endLine":217,"groupId":"106058","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailsHealthOnSinglePathWriteFailure","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/76/ba92a4849664224163b3ae334afb1739799e03.src","preCode":"    public void testFailsHealthOnSinglePathWriteFailure() throws IOException {\n        FileSystem fileSystem = PathUtils.getDefaultFileSystem();\n        FileSystemIOExceptionProvider disruptWritesFileSystemProvider = new FileSystemIOExceptionProvider(fileSystem);\n        fileSystem = disruptWritesFileSystemProvider.getFileSystem(null);\n        PathUtilsForTesting.installMock(fileSystem);\n        final Settings settings = Settings.EMPTY;\n        final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS);\n        TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(), settings);\n        try (NodeEnvironment env = newNodeEnvironment()) {\n            Path[] paths = env.nodeDataPaths();\n            FsHealthService fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(HEALTHY, fsHealthService.getHealth().getStatus());\n            assertEquals(\"health check passed\", fsHealthService.getHealth().getInfo());\n\n            \r\n            String disruptedPath = randomFrom(paths).toString();\n            disruptWritesFileSystemProvider.restrictPathPrefix(disruptedPath);\n            disruptWritesFileSystemProvider.injectIOException.set(true);\n            fsHealthService = new FsHealthService(settings, clusterSettings, testThreadPool, env);\n            fsHealthService.new FsHealthMonitor().run();\n            assertEquals(UNHEALTHY, fsHealthService.getHealth().getStatus());\n            assertThat(fsHealthService.getHealth().getInfo(), is(\"health check failed on [\" + disruptedPath + \"]\"));\n            assertEquals(1, disruptWritesFileSystemProvider.getInjectedPathCount());\n        } finally {\n            disruptWritesFileSystemProvider.injectIOException.set(false);\n            PathUtilsForTesting.teardown();\n            ThreadPool.terminate(testThreadPool, 500, TimeUnit.MILLISECONDS);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/monitor/fs/FsHealthServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"}],"commitId":"4528e780c48ada91fd452b9c51dc1a37772c5f07","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n\n# Conflicts:\n#\tx-pack/plugin/spatial/build.gradle\n#\tx-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/SpatialPlugin.java\n","date":"2021-05-12 20:50:26","modifiedFileCount":"564","status":"M","submitter":"iverase"}]
