[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testDeleteteByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        SearchRequest searchRequest = new SearchRequest(indices);\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        searchRequest.indicesOptions(indicesOptions);\n\n        DeleteByQueryRequest request = new DeleteByQueryRequest(searchRequest);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":65,"groupId":"16492","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDeleteteByQueryRequestImplementsIndicesRequestReplaceable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8c/84c8f3f56808d69b8af76879863499b0114b56.src","preCode":"    public void testDeleteteByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        SearchRequest searchRequest = new SearchRequest(indices);\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        searchRequest.indicesOptions(indicesOptions);\n\n        DeleteByQueryRequest request = new DeleteByQueryRequest(searchRequest);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/DeleteByQueryRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testUpdateByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        SearchRequest searchRequest = new SearchRequest(indices);\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        searchRequest.indicesOptions(indicesOptions);\n\n        UpdateByQueryRequest request = new UpdateByQueryRequest(searchRequest);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":59,"groupId":"16492","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateByQueryRequestImplementsIndicesRequestReplaceable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b3/0968cf056b5c7ee0338edc97fb96f8445067e7.src","preCode":"    public void testUpdateByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        SearchRequest searchRequest = new SearchRequest(indices);\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        searchRequest.indicesOptions(indicesOptions);\n\n        UpdateByQueryRequest request = new UpdateByQueryRequest(searchRequest);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/UpdateByQueryRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-09-03 17:01:16","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public void testDeleteteByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        SearchRequest searchRequest = new SearchRequest(indices);\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        searchRequest.indicesOptions(indicesOptions);\n\n        DeleteByQueryRequest request = new DeleteByQueryRequest(searchRequest);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":65,"groupId":"16492","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDeleteteByQueryRequestImplementsIndicesRequestReplaceable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8c/84c8f3f56808d69b8af76879863499b0114b56.src","preCode":"    public void testDeleteteByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        SearchRequest searchRequest = new SearchRequest(indices);\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        searchRequest.indicesOptions(indicesOptions);\n\n        DeleteByQueryRequest request = new DeleteByQueryRequest(searchRequest);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/DeleteByQueryRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"N"},{"authorDate":"2018-09-03 17:01:16","commitOrder":2,"curCode":"    public void testUpdateByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n\n        UpdateByQueryRequest request = new UpdateByQueryRequest();\n        request.indices(indices);\n        request.setIndicesOptions(indicesOptions);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","date":"2018-09-03 17:01:16","endLine":58,"groupId":"43521","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateByQueryRequestImplementsIndicesRequestReplaceable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/47/449eb739199d7d703066fc50581f2c11b671d7.src","preCode":"    public void testUpdateByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        SearchRequest searchRequest = new SearchRequest(indices);\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        searchRequest.indicesOptions(indicesOptions);\n\n        UpdateByQueryRequest request = new UpdateByQueryRequest(searchRequest);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/UpdateByQueryRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"M"}],"commitId":"e2c1beb1be5b47d124903883bc31be8a648c8c03","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-03 17:01:16","modifiedFileCount":"71","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2019-01-25 21:23:02","codes":[{"authorDate":"2019-01-25 21:23:02","commitOrder":3,"curCode":"    public void testDeleteteByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        SearchRequest searchRequest = new SearchRequest(indices);\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        searchRequest.indicesOptions(indicesOptions);\n\n        DeleteByQueryRequest request = new DeleteByQueryRequest(searchRequest);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","date":"2019-01-25 21:23:02","endLine":65,"groupId":"102477","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDeleteteByQueryRequestImplementsIndicesRequestReplaceable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/76/c6dc03b5a4964c182cb9461e3011f1f62c79d9.src","preCode":"    public void testDeleteteByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        SearchRequest searchRequest = new SearchRequest(indices);\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n        searchRequest.indicesOptions(indicesOptions);\n\n        DeleteByQueryRequest request = new DeleteByQueryRequest(searchRequest);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/DeleteByQueryRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2019-01-25 21:23:02","commitOrder":3,"curCode":"    public void testUpdateByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n\n        UpdateByQueryRequest request = new UpdateByQueryRequest();\n        request.indices(indices);\n        request.setIndicesOptions(indicesOptions);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","date":"2019-01-25 21:23:02","endLine":58,"groupId":"102477","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateByQueryRequestImplementsIndicesRequestReplaceable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/20/7f0f12ff23d96c3dd04685df567b6b5189196d.src","preCode":"    public void testUpdateByQueryRequestImplementsIndicesRequestReplaceable() {\n        int numIndices = between(1, 100);\n        String[] indices = new String[numIndices];\n        for (int i = 0; i < numIndices; i++) {\n            indices[i] = randomSimpleString(random(), 1, 30);\n        }\n\n        IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean());\n\n        UpdateByQueryRequest request = new UpdateByQueryRequest();\n        request.indices(indices);\n        request.setIndicesOptions(indicesOptions);\n        for (int i = 0; i < numIndices; i++) {\n            assertEquals(indices[i], request.indices()[i]);\n        }\n\n        assertSame(indicesOptions, request.indicesOptions());\n        assertSame(request.indicesOptions(), request.getSearchRequest().indicesOptions());\n\n        int numNewIndices = between(1, 100);\n        String[] newIndices = new String[numNewIndices];\n        for (int i = 0; i < numNewIndices; i++) {\n            newIndices[i] = randomSimpleString(random(), 1, 30);\n        }\n        request.indices(newIndices);\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.indices()[i]);\n        }\n        for (int i = 0; i < numNewIndices; i++) {;\n            assertEquals(newIndices[i], request.getSearchRequest().indices()[i]);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/reindex/UpdateByQueryRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"M"}],"commitId":"b4b4cd6ebd09c88d857b50f43b9b7b3331ead5d3","commitMessage":"@@@Clean codebase from empty statements (#37822)\n\n* Remove empty statements\n\nThere are a couple of instances of undocumented empty statements all across the\ncode base. While they are mostly harmless.  they make the code hard to read and\nare potentially error-prone. Removing most of these instances and marking blocks\nthat look empty by intention as such.\n\n* Change test.  slightly more verbose but less confusing\n","date":"2019-01-25 21:23:02","modifiedFileCount":"41","status":"M","submitter":"Christoph B?scher"}]
