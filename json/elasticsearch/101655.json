[{"authorTime":"2018-06-11 16:47:26","codes":[{"authorDate":"2018-06-11 16:47:26","commitOrder":1,"curCode":"    public void testIncrementIndex() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 10, channelBuffer.getRemaining());\n    }\n","date":"2018-06-11 16:47:26","endLine":97,"groupId":"5692","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIncrementIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/9a509cbfabb3753993b3fffa574e4cfb2b286f.src","preCode":"    public void testIncrementIndex() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 10, channelBuffer.getRemaining());\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"},{"authorDate":"2018-06-11 16:47:26","commitOrder":1,"curCode":"    public void testIncrementIndexWithOffset() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.release(10);\n        assertEquals(PAGE_SIZE - 10, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 20, channelBuffer.getRemaining());\n\n        channelBuffer.release(2);\n        assertEquals(8, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 20, channelBuffer.getRemaining());\n    }\n","date":"2018-06-11 16:47:26","endLine":116,"groupId":"5692","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIncrementIndexWithOffset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/9a509cbfabb3753993b3fffa574e4cfb2b286f.src","preCode":"    public void testIncrementIndexWithOffset() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.release(10);\n        assertEquals(PAGE_SIZE - 10, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 20, channelBuffer.getRemaining());\n\n        channelBuffer.release(2);\n        assertEquals(8, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 20, channelBuffer.getRemaining());\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"B"}],"commitId":"9ee492a3f0768a3790671bfe46223e700082730a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-11 16:47:26","modifiedFileCount":"192","status":"B","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-06-20 02:37:47","codes":[{"authorDate":"2018-06-20 02:37:47","commitOrder":2,"curCode":"    public void testIncrementIndex() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier);\n        channelBuffer.ensureCapacity(PAGE_SIZE);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 10, channelBuffer.getRemaining());\n    }\n","date":"2018-06-20 02:37:47","endLine":105,"groupId":"5692","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIncrementIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/16/2094953d2bbae8044c23a24229eef32306cbe7.src","preCode":"    public void testIncrementIndex() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 10, channelBuffer.getRemaining());\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2018-06-20 02:37:47","commitOrder":2,"curCode":"    public void testIncrementIndexWithOffset() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier);\n        channelBuffer.ensureCapacity(PAGE_SIZE);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.release(10);\n        assertEquals(PAGE_SIZE - 10, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 20, channelBuffer.getRemaining());\n\n        channelBuffer.release(2);\n        assertEquals(8, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 20, channelBuffer.getRemaining());\n    }\n","date":"2018-06-20 02:37:47","endLine":125,"groupId":"5692","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIncrementIndexWithOffset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/16/2094953d2bbae8044c23a24229eef32306cbe7.src","preCode":"    public void testIncrementIndexWithOffset() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.release(10);\n        assertEquals(PAGE_SIZE - 10, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 20, channelBuffer.getRemaining());\n\n        channelBuffer.release(2);\n        assertEquals(8, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 20, channelBuffer.getRemaining());\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"eee1a451fc3159e2d6f85692a741c85f54cb8a20","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-20 02:37:47","modifiedFileCount":"306","status":"M","submitter":"Tal Levy"},{"authorTime":"2019-05-03 04:44:22","codes":[{"authorDate":"2019-05-03 04:44:22","commitOrder":3,"curCode":"    public void testIncrementIndex() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageAllocator);\n        channelBuffer.ensureCapacity(InboundChannelBuffer.PAGE_SIZE);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(InboundChannelBuffer.PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(InboundChannelBuffer.PAGE_SIZE - 10, channelBuffer.getRemaining());\n    }\n","date":"2019-05-03 04:44:22","endLine":107,"groupId":"101655","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIncrementIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/49/e4fbecec90163cde3094496e0ae394f7449e9e.src","preCode":"    public void testIncrementIndex() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier);\n        channelBuffer.ensureCapacity(PAGE_SIZE);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 10, channelBuffer.getRemaining());\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2019-05-03 04:44:22","commitOrder":3,"curCode":"    public void testIncrementIndexWithOffset() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageAllocator);\n        channelBuffer.ensureCapacity(InboundChannelBuffer.PAGE_SIZE);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(InboundChannelBuffer.PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.release(10);\n        assertEquals(InboundChannelBuffer.PAGE_SIZE - 10, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(InboundChannelBuffer.PAGE_SIZE - 20, channelBuffer.getRemaining());\n\n        channelBuffer.release(2);\n        assertEquals(8, channelBuffer.getIndex());\n        assertEquals(InboundChannelBuffer.PAGE_SIZE - 20, channelBuffer.getRemaining());\n    }\n","date":"2019-05-03 04:44:22","endLine":127,"groupId":"101655","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testIncrementIndexWithOffset","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/49/e4fbecec90163cde3094496e0ae394f7449e9e.src","preCode":"    public void testIncrementIndexWithOffset() {\n        InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier);\n        channelBuffer.ensureCapacity(PAGE_SIZE);\n\n        assertEquals(0, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE, channelBuffer.getRemaining());\n\n        channelBuffer.release(10);\n        assertEquals(PAGE_SIZE - 10, channelBuffer.getRemaining());\n\n        channelBuffer.incrementIndex(10);\n\n        assertEquals(10, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 20, channelBuffer.getRemaining());\n\n        channelBuffer.release(2);\n        assertEquals(8, channelBuffer.getIndex());\n        assertEquals(PAGE_SIZE - 20, channelBuffer.getRemaining());\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/InboundChannelBufferTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"cb2bd0bb6b907c141a857d23d2630d7af80d5768","commitMessage":"@@@Read multiple TLS packets in one read call (#41725)\n\nThis is related to #27260. Currently we have a single read buffer that\nis no larger than a single TLS packet. This prevents us from reading\nmultiple TLS packets in a single socket read call. This commit modifies\nour TLS work to support reading similar to the plaintext case. The data\nwill be copied to a (potentially) recycled TLS packet-sized buffer for\ninteraction with the SSLEngine.","date":"2019-05-03 04:44:22","modifiedFileCount":"13","status":"M","submitter":"Tim Brooks"}]
