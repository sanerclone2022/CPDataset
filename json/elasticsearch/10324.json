[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), new Text(\"type\"), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new Index(\"index\", \"uuid\"), 0, null));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.getQualityLevel(), DELTA);\n        assertEquals(1, filterUnknownDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).getQualityLevel(), DELTA);\n    }\n","date":"2018-04-26 03:22:53","endLine":206,"groupId":"33658","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDCGAtFourMoreRatings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ba/03a734ec760f944f6bd82b7cb82bd662f4770b.src","preCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), new Text(\"type\"), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new Index(\"index\", \"uuid\"), 0, null));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.getQualityLevel(), DELTA);\n        assertEquals(1, filterUnknownDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).getQualityLevel(), DELTA);\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.getQualityLevel(), DELTA);\n        assertEquals(0, filterUnknownDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.getQualityLevel(), DELTA);\n        assertEquals(0, filterUnknownDocuments(result.getHitsAndRatings()).size());\n    }\n","date":"2018-04-26 03:22:53","endLine":232,"groupId":"36115","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoResults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ba/03a734ec760f944f6bd82b7cb82bd662f4770b.src","preCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.getQualityLevel(), DELTA);\n        assertEquals(0, filterUnknownDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.getQualityLevel(), DELTA);\n        assertEquals(0, filterUnknownDocuments(result.getHitsAndRatings()).size());\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-23 21:49:40","codes":[{"authorDate":"2018-07-23 21:49:40","commitOrder":2,"curCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), new Text(\"type\"), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new Index(\"index\", \"uuid\"), 0, null));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.getQualityLevel(), DELTA);\n        assertEquals(1, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).getQualityLevel(), DELTA);\n    }\n","date":"2018-07-23 21:49:40","endLine":208,"groupId":"33658","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDCGAtFourMoreRatings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e7/68c2973330e1833a94b69ccfefd14de7f14a75.src","preCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), new Text(\"type\"), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new Index(\"index\", \"uuid\"), 0, null));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.getQualityLevel(), DELTA);\n        assertEquals(1, filterUnknownDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).getQualityLevel(), DELTA);\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"},{"authorDate":"2018-07-23 21:49:40","commitOrder":2,"curCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.getQualityLevel(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.getQualityLevel(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n    }\n","date":"2018-07-23 21:49:40","endLine":234,"groupId":"36115","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoResults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e7/68c2973330e1833a94b69ccfefd14de7f14a75.src","preCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.getQualityLevel(), DELTA);\n        assertEquals(0, filterUnknownDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.getQualityLevel(), DELTA);\n        assertEquals(0, filterUnknownDocuments(result.getHitsAndRatings()).size());\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"M"}],"commitId":"5f696e15eac1b7c806980f92442ef6df17aa5a9c","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-23 21:49:40","modifiedFileCount":"133","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-07-24 20:13:52","codes":[{"authorDate":"2018-07-24 20:13:52","commitOrder":3,"curCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), new Text(\"type\"), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new Index(\"index\", \"uuid\"), 0, null));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.metricScore(), DELTA);\n        assertEquals(1, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).metricScore(), DELTA);\n    }\n","date":"2018-07-24 20:13:52","endLine":208,"groupId":"33658","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDCGAtFourMoreRatings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/46/8a1ac2e5721ad08cc0c5ef179b9c73f66c513e.src","preCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), new Text(\"type\"), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new Index(\"index\", \"uuid\"), 0, null));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.getQualityLevel(), DELTA);\n        assertEquals(1, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).getQualityLevel(), DELTA);\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"},{"authorDate":"2018-07-24 20:13:52","commitOrder":3,"curCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n    }\n","date":"2018-07-24 20:13:52","endLine":234,"groupId":"36115","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoResults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/46/8a1ac2e5721ad08cc0c5ef179b9c73f66c513e.src","preCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.getQualityLevel(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.getQualityLevel(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"M"}],"commitId":"a2abc8659595bc51e46550bf32b3c78ca071d664","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-24 20:13:52","modifiedFileCount":"55","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-07-24 20:13:52","codes":[{"authorDate":"2019-01-29 21:58:11","commitOrder":4,"curCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), new Text(\"type\"), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new ShardId(\"index\", \"uuid\", 0), null, OriginalIndices.NONE));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.metricScore(), DELTA);\n        assertEquals(1, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).metricScore(), DELTA);\n    }\n","date":"2019-01-29 21:58:11","endLine":209,"groupId":"20585","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testDCGAtFourMoreRatings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0e/2d2b482e0b4b1b202205a604f03defadeb9c4c.src","preCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), new Text(\"type\"), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new Index(\"index\", \"uuid\"), 0, null));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.metricScore(), DELTA);\n        assertEquals(1, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).metricScore(), DELTA);\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2018-07-24 20:13:52","commitOrder":4,"curCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n    }\n","date":"2018-07-24 20:13:52","endLine":234,"groupId":"36115","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoResults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/46/8a1ac2e5721ad08cc0c5ef179b9c73f66c513e.src","preCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"N"}],"commitId":"2325fb9cb3530607475233e7c7281e5ff7241001","commitMessage":"@@@Remove test only SearchShardTarget constructor (#37912)\n\nRemove SearchShardTarget test only constructor and replace all the usages with calls to the other constructor that accepts a ShardId.","date":"2019-01-29 21:58:11","modifiedFileCount":"21","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2018-07-24 20:13:52","codes":[{"authorDate":"2019-02-11 12:45:14","commitOrder":5,"curCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), new Text(MapperService.SINGLE_MAPPING_NAME), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new ShardId(\"index\", \"uuid\", 0), null, OriginalIndices.NONE));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.metricScore(), DELTA);\n        assertEquals(1, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).metricScore(), DELTA);\n    }\n","date":"2019-02-11 12:45:14","endLine":210,"groupId":"20585","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testDCGAtFourMoreRatings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/30/c4f037b2a5953212614cd73c7e307046a30f16.src","preCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), new Text(\"type\"), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new ShardId(\"index\", \"uuid\", 0), null, OriginalIndices.NONE));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.metricScore(), DELTA);\n        assertEquals(1, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).metricScore(), DELTA);\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2018-07-24 20:13:52","commitOrder":5,"curCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n    }\n","date":"2018-07-24 20:13:52","endLine":234,"groupId":"36115","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoResults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/46/8a1ac2e5721ad08cc0c5ef179b9c73f66c513e.src","preCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"N"}],"commitId":"a10e4deee1aa497afbabb5daa054ccc2b44191d3","commitMessage":"@@@Use only default type in rank_eval API (#38530)\n\nCurrently tests still use custom type names. In preparation for the final types\nremoval this change moves all of them to use the default \"_doc\" type in tests.","date":"2019-02-11 12:45:14","modifiedFileCount":"6","status":"M","submitter":"Christoph B?scher"},{"authorTime":"2018-07-24 20:13:52","codes":[{"authorDate":"2019-09-24 02:14:54","commitOrder":6,"curCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new ShardId(\"index\", \"uuid\", 0), null, OriginalIndices.NONE));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.metricScore(), DELTA);\n        assertEquals(1, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).metricScore(), DELTA);\n    }\n","date":"2019-09-24 02:14:54","endLine":208,"groupId":"33658","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testDCGAtFourMoreRatings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ae/c3abbaf2046e95f500449afed16353c51fc80c.src","preCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), new Text(MapperService.SINGLE_MAPPING_NAME), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new ShardId(\"index\", \"uuid\", 0), null, OriginalIndices.NONE));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.metricScore(), DELTA);\n        assertEquals(1, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).metricScore(), DELTA);\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"},{"authorDate":"2018-07-24 20:13:52","commitOrder":6,"curCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n    }\n","date":"2018-07-24 20:13:52","endLine":234,"groupId":"36115","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoResults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/46/8a1ac2e5721ad08cc0c5ef179b9c73f66c513e.src","preCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"N"}],"commitId":"c1f99e2d75b8aa6a5e146971e6db876065436902","commitMessage":"@@@Remove `_type` from SearchHit (#46942)\n\nThis commit removes the `_type` field from all search hit responses.\n\nRelates to #41059 ","date":"2019-09-24 02:14:54","modifiedFileCount":"57","status":"M","submitter":"Alan Woodward"},{"authorTime":"2018-07-24 20:13:52","codes":[{"authorDate":"2020-03-30 21:29:47","commitOrder":7,"curCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), Collections.emptyMap(), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new ShardId(\"index\", \"uuid\", 0), null, OriginalIndices.NONE));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.metricScore(), DELTA);\n        assertEquals(1, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).metricScore(), DELTA);\n    }\n","date":"2020-03-30 21:29:47","endLine":208,"groupId":"10324","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testDCGAtFourMoreRatings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/08/edec1eb4bb736ec33cf8b5d3b9bcb5a07176ad.src","preCode":"    public void testDCGAtFourMoreRatings() {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        \r\n        SearchHit[] hits = new SearchHit[4];\n        for (int i = 0; i < 4; i++) {\n            hits[i] = new SearchHit(i, Integer.toString(i), Collections.emptyMap());\n            hits[i].shard(new SearchShardTarget(\"testnode\", new ShardId(\"index\", \"uuid\", 0), null, OriginalIndices.NONE));\n        }\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(12.392789260714371, result.metricScore(), DELTA);\n        assertEquals(1, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        assertEquals(12.392789260714371 / 13.347184833073591, dcg.evaluate(\"id\", hits, ratedDocs).metricScore(), DELTA);\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"},{"authorDate":"2018-07-24 20:13:52","commitOrder":7,"curCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n    }\n","date":"2018-07-24 20:13:52","endLine":234,"groupId":"10324","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoResults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/46/8a1ac2e5721ad08cc0c5ef179b9c73f66c513e.src","preCode":"    public void testNoResults() throws Exception {\n        Integer[] relevanceRatings = new Integer[] { 3, 2, 3, null, 1, null };\n        List<RatedDocument> ratedDocs = new ArrayList<>();\n        for (int i = 0; i < 6; i++) {\n            if (i < relevanceRatings.length) {\n                if (relevanceRatings[i] != null) {\n                    ratedDocs.add(new RatedDocument(\"index\", Integer.toString(i), relevanceRatings[i]));\n                }\n            }\n        }\n        SearchHit[] hits = new SearchHit[0];\n        DiscountedCumulativeGain dcg = new DiscountedCumulativeGain();\n        EvalQueryQuality result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n\n        \r\n        dcg = new DiscountedCumulativeGain(true, null, 10);\n        result = dcg.evaluate(\"id\", hits, ratedDocs);\n        assertEquals(0.0d, result.metricScore(), DELTA);\n        assertEquals(0, filterUnratedDocuments(result.getHitsAndRatings()).size());\n    }\n","realPath":"modules/rank-eval/src/test/java/org/elasticsearch/index/rankeval/DiscountedCumulativeGainTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"N"}],"commitId":"128bcc59d802b2e1a6062edb09a302d5e79ab9f6","commitMessage":"@@@Search hit refactoring (#41656)\n\nRefactor SearchHit to have separate document and meta fields.\nThis is a part of bigger refactoring of issue #24422 to remove\ndependency on MapperService to check if a field is metafield.\n\nRelates to PR: #38373\nRelates to issue #24422","date":"2020-03-30 21:29:47","modifiedFileCount":"34","status":"M","submitter":"sandmannn"}]
