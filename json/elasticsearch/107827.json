[{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeoShapeFieldType geoShapeFieldType = (GeoShapeFieldType)fieldType;\n\n            if (geoShapeFieldType.treeLevels() == 0 && geoShapeFieldType.precisionInMeters() < 0) {\n                geoShapeFieldType.setDefaultDistanceErrorPct(Defaults.LEGACY_DISTANCE_ERROR_PCT);\n            }\n            setupFieldType(context);\n\n            return new GeoShapeFieldMapper(name, fieldType, ignoreMalformed(context), coerce(context), ignoreZValue(context),\n                    context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","date":"2018-04-26 03:22:53","endLine":194,"groupId":"24557","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/75/3d91f7be231d268afbedeb9a661f7dbe843e2d.src","preCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeoShapeFieldType geoShapeFieldType = (GeoShapeFieldType)fieldType;\n\n            if (geoShapeFieldType.treeLevels() == 0 && geoShapeFieldType.precisionInMeters() < 0) {\n                geoShapeFieldType.setDefaultDistanceErrorPct(Defaults.LEGACY_DISTANCE_ERROR_PCT);\n            }\n            setupFieldType(context);\n\n            return new GeoShapeFieldMapper(name, fieldType, ignoreMalformed(context), coerce(context), ignoreZValue(context),\n                    context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"NB"},{"authorDate":"2020-06-16 00:47:15","commitOrder":2,"curCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, hasDocValues, meta);\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            ft.setGeometryParser((parser, mapper) -> geometryParser.parse(parser));\n            ft.setGeometryIndexer(new ShapeIndexer(ft.name()));\n            ft.setGeometryQueryBuilder(new ShapeQueryProcessor());\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","date":"2020-06-16 00:47:15","endLine":63,"groupId":"72089","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/65/6acf42898182fdc37d633134834770b7b6b679.src","preCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, hasDocValues, meta);\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            ft.setGeometryParser((parser, mapper) -> geometryParser.parse(parser));\n            ft.setGeometryIndexer(new ShapeIndexer(ft.name()));\n            ft.setGeometryQueryBuilder(new ShapeQueryProcessor());\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"3b696828ada5953bb1669b972a353736383edf08","commitMessage":"@@@MappedFieldType should not extend FieldType (#57666)\n\nMappedFieldType is a combination of two concerns:\n\n* an extension of lucene's FieldType.  defining how a field should be indexed\n* a set of query factory methods.  defining how a field should be searched\n\nWe want to break these two concerns apart. This commit is a first step to doing this.  breaking\nthe inheritance relationship between MappedFieldType and FieldType. MappedFieldType \ninstead has a series of boolean flags defining whether or not the field is searchable or \naggregatable.  and FieldMapper has a separate FieldType passed to its constructor defining \nhow indexing should be done.\n\nRelates to #56814","date":"2020-06-16 00:47:15","modifiedFileCount":"257","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-06-26 22:33:37","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":3,"curCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeoShapeFieldType geoShapeFieldType = (GeoShapeFieldType)fieldType;\n\n            if (geoShapeFieldType.treeLevels() == 0 && geoShapeFieldType.precisionInMeters() < 0) {\n                geoShapeFieldType.setDefaultDistanceErrorPct(Defaults.LEGACY_DISTANCE_ERROR_PCT);\n            }\n            setupFieldType(context);\n\n            return new GeoShapeFieldMapper(name, fieldType, ignoreMalformed(context), coerce(context), ignoreZValue(context),\n                    context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","date":"2018-04-26 03:22:53","endLine":194,"groupId":"24557","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/75/3d91f7be231d268afbedeb9a661f7dbe843e2d.src","preCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeoShapeFieldType geoShapeFieldType = (GeoShapeFieldType)fieldType;\n\n            if (geoShapeFieldType.treeLevels() == 0 && geoShapeFieldType.precisionInMeters() < 0) {\n                geoShapeFieldType.setDefaultDistanceErrorPct(Defaults.LEGACY_DISTANCE_ERROR_PCT);\n            }\n            setupFieldType(context);\n\n            return new GeoShapeFieldMapper(name, fieldType, ignoreMalformed(context), coerce(context), ignoreZValue(context),\n                    context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"N"},{"authorDate":"2020-06-26 22:33:37","commitOrder":3,"curCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, hasDocValues, meta);\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            ft.setGeometryParser((parser, mapper) -> geometryParser.parse(parser));\n            ft.setGeometryIndexer(new ShapeIndexer(ft.name()));\n            ft.setGeometryQueryBuilder(new ShapeQueryProcessor());\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","date":"2020-06-26 22:33:37","endLine":62,"groupId":"72089","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cd/ddabc8e8994d836be4f5bb8feaaa5da98015ef.src","preCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, hasDocValues, meta);\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            ft.setGeometryParser((parser, mapper) -> geometryParser.parse(parser));\n            ft.setGeometryIndexer(new ShapeIndexer(ft.name()));\n            ft.setGeometryQueryBuilder(new ShapeQueryProcessor());\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"cac5f29cee7572a3695e2b8d17d0a0cb7ac473dd","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-06-26 22:33:37","modifiedFileCount":"731","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-07-29 01:14:40","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":4,"curCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeoShapeFieldType geoShapeFieldType = (GeoShapeFieldType)fieldType;\n\n            if (geoShapeFieldType.treeLevels() == 0 && geoShapeFieldType.precisionInMeters() < 0) {\n                geoShapeFieldType.setDefaultDistanceErrorPct(Defaults.LEGACY_DISTANCE_ERROR_PCT);\n            }\n            setupFieldType(context);\n\n            return new GeoShapeFieldMapper(name, fieldType, ignoreMalformed(context), coerce(context), ignoreZValue(context),\n                    context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","date":"2018-04-26 03:22:53","endLine":194,"groupId":"24557","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/75/3d91f7be231d268afbedeb9a661f7dbe843e2d.src","preCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeoShapeFieldType geoShapeFieldType = (GeoShapeFieldType)fieldType;\n\n            if (geoShapeFieldType.treeLevels() == 0 && geoShapeFieldType.precisionInMeters() < 0) {\n                geoShapeFieldType.setDefaultDistanceErrorPct(Defaults.LEGACY_DISTANCE_ERROR_PCT);\n            }\n            setupFieldType(context);\n\n            return new GeoShapeFieldMapper(name, fieldType, ignoreMalformed(context), coerce(context), ignoreZValue(context),\n                    context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"N"},{"authorDate":"2020-07-29 01:14:40","commitOrder":4,"curCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, hasDocValues, meta);\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            ft.setGeometryParser(new GeoShapeParser(geometryParser));\n            ft.setGeometryIndexer(new ShapeIndexer(ft.name()));\n            ft.setGeometryQueryBuilder(new ShapeQueryProcessor());\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","date":"2020-07-29 01:42:59","endLine":63,"groupId":"18188","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/27/b1214d9c2d8caa3096d5396ae0bea1592d8adb.src","preCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, hasDocValues, meta);\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            ft.setGeometryParser((parser, mapper) -> geometryParser.parse(parser));\n            ft.setGeometryIndexer(new ShapeIndexer(ft.name()));\n            ft.setGeometryQueryBuilder(new ShapeQueryProcessor());\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"e3bbb3bed4ed9430ab43eb4a3e8276ae503c13ab","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-29 01:42:59","modifiedFileCount":"261","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-09-22 21:41:24","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":5,"curCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeoShapeFieldType geoShapeFieldType = (GeoShapeFieldType)fieldType;\n\n            if (geoShapeFieldType.treeLevels() == 0 && geoShapeFieldType.precisionInMeters() < 0) {\n                geoShapeFieldType.setDefaultDistanceErrorPct(Defaults.LEGACY_DISTANCE_ERROR_PCT);\n            }\n            setupFieldType(context);\n\n            return new GeoShapeFieldMapper(name, fieldType, ignoreMalformed(context), coerce(context), ignoreZValue(context),\n                    context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","date":"2018-04-26 03:22:53","endLine":194,"groupId":"24557","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/75/3d91f7be231d268afbedeb9a661f7dbe843e2d.src","preCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeoShapeFieldType geoShapeFieldType = (GeoShapeFieldType)fieldType;\n\n            if (geoShapeFieldType.treeLevels() == 0 && geoShapeFieldType.precisionInMeters() < 0) {\n                geoShapeFieldType.setDefaultDistanceErrorPct(Defaults.LEGACY_DISTANCE_ERROR_PCT);\n            }\n            setupFieldType(context);\n\n            return new GeoShapeFieldMapper(name, fieldType, ignoreMalformed(context), coerce(context), ignoreZValue(context),\n                    context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"N"},{"authorDate":"2020-09-22 21:41:24","commitOrder":5,"curCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, fieldType.stored(), hasDocValues, meta);\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            ft.setGeometryParser(new GeoShapeParser(geometryParser));\n            ft.setGeometryIndexer(new ShapeIndexer(ft.name()));\n            ft.setGeometryQueryBuilder(new ShapeQueryProcessor());\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","date":"2020-09-22 21:41:24","endLine":63,"groupId":"18188","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d3/2f42aa0697cc3e72152f0437a63ab7d1b34f14.src","preCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, hasDocValues, meta);\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            ft.setGeometryParser(new GeoShapeParser(geometryParser));\n            ft.setGeometryIndexer(new ShapeIndexer(ft.name()));\n            ft.setGeometryQueryBuilder(new ShapeQueryProcessor());\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"3a9b65733c50e36182c2906a692297ef80720466","commitMessage":"@@@Move stored flag from TextSearchInfo to MappedFieldType (#62717)\n\n","date":"2020-09-22 21:41:24","modifiedFileCount":"84","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-10-01 15:27:56","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":6,"curCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeoShapeFieldType geoShapeFieldType = (GeoShapeFieldType)fieldType;\n\n            if (geoShapeFieldType.treeLevels() == 0 && geoShapeFieldType.precisionInMeters() < 0) {\n                geoShapeFieldType.setDefaultDistanceErrorPct(Defaults.LEGACY_DISTANCE_ERROR_PCT);\n            }\n            setupFieldType(context);\n\n            return new GeoShapeFieldMapper(name, fieldType, ignoreMalformed(context), coerce(context), ignoreZValue(context),\n                    context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","date":"2018-04-26 03:22:53","endLine":194,"groupId":"24557","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/75/3d91f7be231d268afbedeb9a661f7dbe843e2d.src","preCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeoShapeFieldType geoShapeFieldType = (GeoShapeFieldType)fieldType;\n\n            if (geoShapeFieldType.treeLevels() == 0 && geoShapeFieldType.precisionInMeters() < 0) {\n                geoShapeFieldType.setDefaultDistanceErrorPct(Defaults.LEGACY_DISTANCE_ERROR_PCT);\n            }\n            setupFieldType(context);\n\n            return new GeoShapeFieldMapper(name, fieldType, ignoreMalformed(context), coerce(context), ignoreZValue(context),\n                    context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"N"},{"authorDate":"2020-10-01 15:27:56","commitOrder":6,"curCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, fieldType.stored(), hasDocValues, meta);\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            ft.setGeometryParser(new GeoShapeParser(geometryParser));\n            ft.setGeometryIndexer(new ShapeIndexer(ft.name()));\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","date":"2020-10-01 15:27:56","endLine":65,"groupId":"55023","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cb/94f279618f9d6da8879c7512a8b0b2c441309a.src","preCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, fieldType.stored(), hasDocValues, meta);\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            ft.setGeometryParser(new GeoShapeParser(geometryParser));\n            ft.setGeometryIndexer(new ShapeIndexer(ft.name()));\n            ft.setGeometryQueryBuilder(new ShapeQueryProcessor());\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"31a77869f11538874bf15da3134d1a5658249cc6","commitMessage":"@@@Remove dependency of Geometry queries with mapped type names (#63077)\n\n It extracts the query capabilities from AbstractGeometryFieldType into two new interfaces.  GeoshapeQueryable and ShapeQueryable. Those interfaces are implemented by the final mappers.","date":"2020-10-01 15:27:56","modifiedFileCount":"19","status":"M","submitter":"Ignacio Vera"},{"authorTime":"2020-10-14 18:13:27","codes":[{"authorDate":"2020-10-14 18:13:27","commitOrder":7,"curCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeometryParser geometryParser = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(),\n                ignoreZValue().value());\n            GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser);\n            GeoShapeFieldType ft = buildFieldType(context, geoShapeParser);\n            return new GeoShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(),\n                multiFieldsBuilder.build(this, context), copyTo,\n                new GeoShapeIndexer(orientation().value().getAsBoolean(), buildFullName(context)),\n                new GeoShapeParser(new GeometryParser(orientation().value().getAsBoolean(),\n                    coerce(context).value(), ignoreZValue().value())));\n        }\n","date":"2020-10-14 18:13:27","endLine":91,"groupId":"0","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1c/97c9be60c46b35bd4e4d878e373413e61b04fc.src","preCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeoShapeFieldType geoShapeFieldType = (GeoShapeFieldType)fieldType;\n\n            if (geoShapeFieldType.treeLevels() == 0 && geoShapeFieldType.precisionInMeters() < 0) {\n                geoShapeFieldType.setDefaultDistanceErrorPct(Defaults.LEGACY_DISTANCE_ERROR_PCT);\n            }\n            setupFieldType(context);\n\n            return new GeoShapeFieldMapper(name, fieldType, ignoreMalformed(context), coerce(context), ignoreZValue(context),\n                    context.indexSettings(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2020-10-14 18:13:27","commitOrder":7,"curCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            Parser<Geometry> parser = new GeoShapeParser(geometryParser);\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, fieldType.stored(), hasDocValues, parser, meta);\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), multiFieldsBuilder.build(this, context), copyTo,\n                new ShapeIndexer(ft.name()), parser);\n        }\n","date":"2020-10-14 18:13:27","endLine":63,"groupId":"12232","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9c/17cd35681ac7789ed845c5e151192541b0d77f.src","preCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, fieldType.stored(), hasDocValues, meta);\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            ft.setGeometryParser(new GeoShapeParser(geometryParser));\n            ft.setGeometryIndexer(new ShapeIndexer(ft.name()));\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), multiFieldsBuilder.build(this, context), copyTo);\n        }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"f4adb2de3871d9b4952c245fb944300c50851f94","commitMessage":"@@@Move geometry indexer to FieldMapper (#63618)\n\nIndexing and parsing of geometrical objects is handled by specialised\nGeoIndexer and GeoParser classes.  which are currently set on the FieldTypes\nfor their respective field mappers. Seeing as indexing is handled entirely\nby FieldMappers.  we should move them there instead. This allows us to\nremove the complex generics on AbstractGeometryFieldType.  and simplify\nthem on the corresponding FieldMappers as well.","date":"2020-10-14 18:13:27","modifiedFileCount":"13","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-10-22 16:11:41","codes":[{"authorDate":"2020-10-22 16:11:41","commitOrder":8,"curCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeometryParser geometryParser = new GeometryParser(\n                orientation.get().value().getAsBoolean(),\n                coerce.get().value(),\n                ignoreZValue.get().value());\n            GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser);\n            GeoShapeFieldType ft = new GeoShapeFieldType(\n                buildFullName(context),\n                indexed.get(),\n                orientation.get().value(),\n                geoShapeParser,\n                meta.get());\n            return new GeoShapeFieldMapper(name, ft, multiFieldsBuilder.build(this, context), copyTo.build(),\n                new GeoShapeIndexer(orientation.get().value().getAsBoolean(), buildFullName(context)),\n                geoShapeParser, this);\n        }\n","date":"2020-10-22 16:11:41","endLine":107,"groupId":"39963","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5c/4b1958cad0d204c39b16b4eeaa2c4266f0947c.src","preCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeometryParser geometryParser = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(),\n                ignoreZValue().value());\n            GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser);\n            GeoShapeFieldType ft = buildFieldType(context, geoShapeParser);\n            return new GeoShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(),\n                multiFieldsBuilder.build(this, context), copyTo,\n                new GeoShapeIndexer(orientation().value().getAsBoolean(), buildFullName(context)),\n                new GeoShapeParser(new GeometryParser(orientation().value().getAsBoolean(),\n                    coerce(context).value(), ignoreZValue().value())));\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2020-10-22 16:11:41","commitOrder":8,"curCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            GeometryParser geometryParser\n                = new GeometryParser(orientation.get().value().getAsBoolean(), coerce.get().value(), ignoreZValue.get().value());\n            Parser<Geometry> parser = new GeoShapeParser(geometryParser);\n            ShapeFieldType ft\n                = new ShapeFieldType(buildFullName(context), indexed.get(), orientation.get().value(), parser, meta.get());\n            return new ShapeFieldMapper(name, ft,\n                multiFieldsBuilder.build(this, context), copyTo.build(),\n                new ShapeIndexer(ft.name()), parser, this);\n        }\n","date":"2020-10-22 16:11:41","endLine":84,"groupId":"33868","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(BuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/78/a1a5732f6d0191c4b748adcbf32f5b82d6e502.src","preCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            GeometryParser geometryParser\n                = new GeometryParser(orientation().value().getAsBoolean(), coerce().value(), ignoreZValue().value());\n            Parser<Geometry> parser = new GeoShapeParser(geometryParser);\n            ShapeFieldType ft = new ShapeFieldType(buildFullName(context), indexed, fieldType.stored(), hasDocValues, parser, meta);\n            ft.setOrientation(orientation().value());\n            return new ShapeFieldMapper(name, fieldType, ft, ignoreMalformed(context), coerce(context),\n                ignoreZValue(), orientation(), multiFieldsBuilder.build(this, context), copyTo,\n                new ShapeIndexer(ft.name()), parser);\n        }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"bfaf3040c6e5245b6d3367483ba86c676dd09bd2","commitMessage":"@@@Convert geo field mappers to Parametrized form (#63836)\n\nRelates to #62988","date":"2020-10-22 16:11:41","modifiedFileCount":"42","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-11-05 18:48:39","codes":[{"authorDate":"2020-11-05 18:48:39","commitOrder":9,"curCode":"        public GeoShapeFieldMapper build(ContentPath contentPath) {\n            GeometryParser geometryParser = new GeometryParser(\n                orientation.get().value().getAsBoolean(),\n                coerce.get().value(),\n                ignoreZValue.get().value());\n            GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser);\n            GeoShapeFieldType ft = new GeoShapeFieldType(\n                buildFullName(contentPath),\n                indexed.get(),\n                orientation.get().value(),\n                geoShapeParser,\n                meta.get());\n            return new GeoShapeFieldMapper(name, ft, multiFieldsBuilder.build(this, contentPath), copyTo.build(),\n                new GeoShapeIndexer(orientation.get().value().getAsBoolean(), buildFullName(contentPath)),\n                geoShapeParser, this);\n        }\n","date":"2020-11-05 18:48:39","endLine":107,"groupId":"51342","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(ContentPathcontentPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0e/1caa2318b44362d463239c74dff6dc8362f098.src","preCode":"        public GeoShapeFieldMapper build(BuilderContext context) {\n            GeometryParser geometryParser = new GeometryParser(\n                orientation.get().value().getAsBoolean(),\n                coerce.get().value(),\n                ignoreZValue.get().value());\n            GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser);\n            GeoShapeFieldType ft = new GeoShapeFieldType(\n                buildFullName(context),\n                indexed.get(),\n                orientation.get().value(),\n                geoShapeParser,\n                meta.get());\n            return new GeoShapeFieldMapper(name, ft, multiFieldsBuilder.build(this, context), copyTo.build(),\n                new GeoShapeIndexer(orientation.get().value().getAsBoolean(), buildFullName(context)),\n                geoShapeParser, this);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2020-11-05 18:48:39","commitOrder":9,"curCode":"        public ShapeFieldMapper build(ContentPath contentPath) {\n            GeometryParser geometryParser\n                = new GeometryParser(orientation.get().value().getAsBoolean(), coerce.get().value(), ignoreZValue.get().value());\n            Parser<Geometry> parser = new GeoShapeParser(geometryParser);\n            ShapeFieldType ft\n                = new ShapeFieldType(buildFullName(contentPath), indexed.get(), orientation.get().value(), parser, meta.get());\n            return new ShapeFieldMapper(name, ft,\n                multiFieldsBuilder.build(this, contentPath), copyTo.build(),\n                new ShapeIndexer(ft.name()), parser, this);\n        }\n","date":"2020-11-05 18:48:39","endLine":84,"groupId":"33868","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(ContentPathcontentPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/59/8295fef55ff0d9f5272e21841e9eb66c82ebf0.src","preCode":"        public ShapeFieldMapper build(BuilderContext context) {\n            GeometryParser geometryParser\n                = new GeometryParser(orientation.get().value().getAsBoolean(), coerce.get().value(), ignoreZValue.get().value());\n            Parser<Geometry> parser = new GeoShapeParser(geometryParser);\n            ShapeFieldType ft\n                = new ShapeFieldType(buildFullName(context), indexed.get(), orientation.get().value(), parser, meta.get());\n            return new ShapeFieldMapper(name, ft,\n                multiFieldsBuilder.build(this, context), copyTo.build(),\n                new ShapeIndexer(ft.name()), parser, this);\n        }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"}],"commitId":"0fd70ae383620d587a36ea71baca9295da93a76a","commitMessage":"@@@Remove Mapper.BuilderContext (#64625)\n\nMapper.BuilderContext is a simple wrapper around two objects.  some\nIndexSettings and a ContentPath. The IndexSettings are the same as\nthose provided in the ParserContext.  so we can simplify things here\nby removing them and just passing ContentPath directly to\nMapper.Builder#build()","date":"2020-11-05 18:48:39","modifiedFileCount":"103","status":"M","submitter":"Alan Woodward"},{"authorTime":"2021-04-21 21:28:12","codes":[{"authorDate":"2021-04-21 21:28:12","commitOrder":10,"curCode":"        public GeoShapeFieldMapper build(ContentPath contentPath) {\n            if (multiFieldsBuilder.hasMultiFields()) {\n                DEPRECATION_LOGGER.deprecate(\n                    DeprecationCategory.MAPPINGS,\n                    \"geo_shape_multifields\",\n                    \"Adding multifields to [geo_shape] mappers has no effect and will be forbidden in future\"\n                );\n            }\n            GeometryParser geometryParser = new GeometryParser(\n                orientation.get().value().getAsBoolean(),\n                coerce.get().value(),\n                ignoreZValue.get().value());\n            GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser);\n            GeoShapeFieldType ft = new GeoShapeFieldType(\n                buildFullName(contentPath),\n                indexed.get(),\n                orientation.get().value(),\n                geoShapeParser,\n                meta.get());\n            return new GeoShapeFieldMapper(name, ft, multiFieldsBuilder.build(this, contentPath), copyTo.build(),\n                new GeoShapeIndexer(orientation.get().value().getAsBoolean(), buildFullName(contentPath)),\n                geoShapeParser, this);\n        }\n","date":"2021-04-21 21:28:12","endLine":111,"groupId":"51342","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(ContentPathcontentPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/90/ee3cccfe666750dcc9878951d28cc9ac3864f6.src","preCode":"        public GeoShapeFieldMapper build(ContentPath contentPath) {\n            GeometryParser geometryParser = new GeometryParser(\n                orientation.get().value().getAsBoolean(),\n                coerce.get().value(),\n                ignoreZValue.get().value());\n            GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser);\n            GeoShapeFieldType ft = new GeoShapeFieldType(\n                buildFullName(contentPath),\n                indexed.get(),\n                orientation.get().value(),\n                geoShapeParser,\n                meta.get());\n            return new GeoShapeFieldMapper(name, ft, multiFieldsBuilder.build(this, contentPath), copyTo.build(),\n                new GeoShapeIndexer(orientation.get().value().getAsBoolean(), buildFullName(contentPath)),\n                geoShapeParser, this);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-04-21 21:28:12","commitOrder":10,"curCode":"        public ShapeFieldMapper build(ContentPath contentPath) {\n            if (multiFieldsBuilder.hasMultiFields()) {\n                DEPRECATION_LOGGER.deprecate(\n                    DeprecationCategory.MAPPINGS,\n                    \"shape_multifields\",\n                    \"Adding multifields to [shape] mappers has no effect and will be forbidden in future\"\n                );\n            }\n            GeometryParser geometryParser\n                = new GeometryParser(orientation.get().value().getAsBoolean(), coerce.get().value(), ignoreZValue.get().value());\n            Parser<Geometry> parser = new GeoShapeParser(geometryParser);\n            ShapeFieldType ft\n                = new ShapeFieldType(buildFullName(contentPath), indexed.get(), orientation.get().value(), parser, meta.get());\n            return new ShapeFieldMapper(name, ft,\n                multiFieldsBuilder.build(this, contentPath), copyTo.build(), parser, this);\n        }\n","date":"2021-04-21 21:28:12","endLine":96,"groupId":"33868","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(ContentPathcontentPath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/e8c7f4647268365dc620ad6493ef6f824f5e57.src","preCode":"        public ShapeFieldMapper build(ContentPath contentPath) {\n            GeometryParser geometryParser\n                = new GeometryParser(orientation.get().value().getAsBoolean(), coerce.get().value(), ignoreZValue.get().value());\n            Parser<Geometry> parser = new GeoShapeParser(geometryParser);\n            ShapeFieldType ft\n                = new ShapeFieldType(buildFullName(contentPath), indexed.get(), orientation.get().value(), parser, meta.get());\n            return new ShapeFieldMapper(name, ft,\n                multiFieldsBuilder.build(this, contentPath), copyTo.build(),\n                new ShapeIndexer(ft.name()), parser, this);\n        }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"9a86dde3572a6f3999eea75bc3ce30b965837ba3","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-04-21 21:28:12","modifiedFileCount":"1285","status":"M","submitter":"iverase"},{"authorTime":"2021-09-08 23:34:14","codes":[{"authorDate":"2021-09-08 23:34:14","commitOrder":11,"curCode":"        public GeoShapeFieldMapper build(MapperBuilderContext context) {\n            if (multiFieldsBuilder.hasMultiFields()) {\n                DEPRECATION_LOGGER.deprecate(\n                    DeprecationCategory.MAPPINGS,\n                    \"geo_shape_multifields\",\n                    \"Adding multifields to [geo_shape] mappers has no effect and will be forbidden in future\"\n                );\n            }\n            GeometryParser geometryParser = new GeometryParser(\n                orientation.get().value().getAsBoolean(),\n                coerce.get().value(),\n                ignoreZValue.get().value());\n            GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser);\n            GeoShapeFieldType ft = new GeoShapeFieldType(\n                context.buildFullName(name),\n                indexed.get(),\n                orientation.get().value(),\n                geoShapeParser,\n                meta.get());\n            return new GeoShapeFieldMapper(name, ft, multiFieldsBuilder.build(this, context), copyTo.build(),\n                new GeoShapeIndexer(orientation.get().value().getAsBoolean(), context.buildFullName(name)),\n                geoShapeParser, this);\n        }\n","date":"2021-09-08 23:34:14","endLine":114,"groupId":"30811","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(MapperBuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/34/3d1b5bef69fcfc37e5a72c61109285238db4d9.src","preCode":"        public GeoShapeFieldMapper build(ContentPath contentPath) {\n            if (multiFieldsBuilder.hasMultiFields()) {\n                DEPRECATION_LOGGER.deprecate(\n                    DeprecationCategory.MAPPINGS,\n                    \"geo_shape_multifields\",\n                    \"Adding multifields to [geo_shape] mappers has no effect and will be forbidden in future\"\n                );\n            }\n            GeometryParser geometryParser = new GeometryParser(\n                orientation.get().value().getAsBoolean(),\n                coerce.get().value(),\n                ignoreZValue.get().value());\n            GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser);\n            GeoShapeFieldType ft = new GeoShapeFieldType(\n                buildFullName(contentPath),\n                indexed.get(),\n                orientation.get().value(),\n                geoShapeParser,\n                meta.get());\n            return new GeoShapeFieldMapper(name, ft, multiFieldsBuilder.build(this, contentPath), copyTo.build(),\n                new GeoShapeIndexer(orientation.get().value().getAsBoolean(), buildFullName(contentPath)),\n                geoShapeParser, this);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2021-09-08 23:34:14","commitOrder":11,"curCode":"        public ShapeFieldMapper build(MapperBuilderContext context) {\n            if (multiFieldsBuilder.hasMultiFields()) {\n                DEPRECATION_LOGGER.deprecate(\n                    DeprecationCategory.MAPPINGS,\n                    \"shape_multifields\",\n                    \"Adding multifields to [shape] mappers has no effect and will be forbidden in future\"\n                );\n            }\n            GeometryParser geometryParser\n                = new GeometryParser(orientation.get().value().getAsBoolean(), coerce.get().value(), ignoreZValue.get().value());\n            Parser<Geometry> parser = new GeoShapeParser(geometryParser);\n            ShapeFieldType ft\n                = new ShapeFieldType(context.buildFullName(name), indexed.get(), orientation.get().value(), parser, meta.get());\n            return new ShapeFieldMapper(name, ft,\n                multiFieldsBuilder.build(this, context), copyTo.build(), parser, this);\n        }\n","date":"2021-09-08 23:34:14","endLine":98,"groupId":"33868","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"(MapperBuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/39/33e6ede26f082c1d898edd327c76530168dcc9.src","preCode":"        public ShapeFieldMapper build(ContentPath contentPath) {\n            if (multiFieldsBuilder.hasMultiFields()) {\n                DEPRECATION_LOGGER.deprecate(\n                    DeprecationCategory.MAPPINGS,\n                    \"shape_multifields\",\n                    \"Adding multifields to [shape] mappers has no effect and will be forbidden in future\"\n                );\n            }\n            GeometryParser geometryParser\n                = new GeometryParser(orientation.get().value().getAsBoolean(), coerce.get().value(), ignoreZValue.get().value());\n            Parser<Geometry> parser = new GeoShapeParser(geometryParser);\n            ShapeFieldType ft\n                = new ShapeFieldType(buildFullName(contentPath), indexed.get(), orientation.get().value(), parser, meta.get());\n            return new ShapeFieldMapper(name, ft,\n                multiFieldsBuilder.build(this, contentPath), copyTo.build(), parser, this);\n        }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"9312eba5ed2a4174e0ac1ce823e98f47a19b4fc1","commitMessage":"@@@Change Mapper.build() to take a context object (#77108)\n\nMapper.build() currently takes a ContentPath object that it can use to generate\nfield type names that will include its parent names. We would like to expand field types\nto include more information about their parents.  and ContentPath does not hold this\ninformation. This commit replaces the ContentPath parameter with a new\nMapperBuilderContext.  which currently holds only the content path information but\ncan be expanded in future to hold parent relationship information.\n\nRelates to #75474","date":"2021-09-08 23:34:14","modifiedFileCount":"97","status":"M","submitter":"Alan Woodward"},{"authorTime":"2021-09-09 18:23:52","codes":[{"authorDate":"2021-09-09 18:23:52","commitOrder":12,"curCode":"        public GeoShapeFieldMapper build(MapperBuilderContext context) {\n            if (multiFieldsBuilder.hasMultiFields()) {\n                DEPRECATION_LOGGER.critical(\n                    DeprecationCategory.MAPPINGS,\n                    \"geo_shape_multifields\",\n                    \"Adding multifields to [geo_shape] mappers has no effect and will be forbidden in future\"\n                );\n            }\n            GeometryParser geometryParser = new GeometryParser(\n                orientation.get().value().getAsBoolean(),\n                coerce.get().value(),\n                ignoreZValue.get().value());\n            GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser);\n            GeoShapeFieldType ft = new GeoShapeFieldType(\n                context.buildFullName(name),\n                indexed.get(),\n                orientation.get().value(),\n                geoShapeParser,\n                meta.get());\n            return new GeoShapeFieldMapper(name, ft, multiFieldsBuilder.build(this, context), copyTo.build(),\n                new GeoShapeIndexer(orientation.get().value().getAsBoolean(), context.buildFullName(name)),\n                geoShapeParser, this);\n        }\n","date":"2021-09-09 18:23:52","endLine":114,"groupId":"107827","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"(MapperBuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bf/5686538e1d40d0d03dc43edd3a653804ad1008.src","preCode":"        public GeoShapeFieldMapper build(MapperBuilderContext context) {\n            if (multiFieldsBuilder.hasMultiFields()) {\n                DEPRECATION_LOGGER.deprecate(\n                    DeprecationCategory.MAPPINGS,\n                    \"geo_shape_multifields\",\n                    \"Adding multifields to [geo_shape] mappers has no effect and will be forbidden in future\"\n                );\n            }\n            GeometryParser geometryParser = new GeometryParser(\n                orientation.get().value().getAsBoolean(),\n                coerce.get().value(),\n                ignoreZValue.get().value());\n            GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser);\n            GeoShapeFieldType ft = new GeoShapeFieldType(\n                context.buildFullName(name),\n                indexed.get(),\n                orientation.get().value(),\n                geoShapeParser,\n                meta.get());\n            return new GeoShapeFieldMapper(name, ft, multiFieldsBuilder.build(this, context), copyTo.build(),\n                new GeoShapeIndexer(orientation.get().value().getAsBoolean(), context.buildFullName(name)),\n                geoShapeParser, this);\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2021-09-09 18:23:52","commitOrder":12,"curCode":"        public ShapeFieldMapper build(MapperBuilderContext context) {\n            if (multiFieldsBuilder.hasMultiFields()) {\n                DEPRECATION_LOGGER.critical(\n                    DeprecationCategory.MAPPINGS,\n                    \"shape_multifields\",\n                    \"Adding multifields to [shape] mappers has no effect and will be forbidden in future\"\n                );\n            }\n            GeometryParser geometryParser\n                = new GeometryParser(orientation.get().value().getAsBoolean(), coerce.get().value(), ignoreZValue.get().value());\n            Parser<Geometry> parser = new GeoShapeParser(geometryParser);\n            ShapeFieldType ft\n                = new ShapeFieldType(context.buildFullName(name), indexed.get(), orientation.get().value(), parser, meta.get());\n            return new ShapeFieldMapper(name, ft,\n                multiFieldsBuilder.build(this, context), copyTo.build(), parser, this);\n        }\n","date":"2021-09-09 18:23:52","endLine":98,"groupId":"107827","id":22,"instanceNumber":2,"isCurCommit":1,"methodName":"build","params":"(MapperBuilderContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8e/47ca8cd91e9d535a49add3f3f728701518c733.src","preCode":"        public ShapeFieldMapper build(MapperBuilderContext context) {\n            if (multiFieldsBuilder.hasMultiFields()) {\n                DEPRECATION_LOGGER.deprecate(\n                    DeprecationCategory.MAPPINGS,\n                    \"shape_multifields\",\n                    \"Adding multifields to [shape] mappers has no effect and will be forbidden in future\"\n                );\n            }\n            GeometryParser geometryParser\n                = new GeometryParser(orientation.get().value().getAsBoolean(), coerce.get().value(), ignoreZValue.get().value());\n            Parser<Geometry> parser = new GeoShapeParser(geometryParser);\n            ShapeFieldType ft\n                = new ShapeFieldType(context.buildFullName(name), indexed.get(), orientation.get().value(), parser, meta.get());\n            return new ShapeFieldMapper(name, ft,\n                multiFieldsBuilder.build(this, context), copyTo.build(), parser, this);\n        }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/mapper/ShapeFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"0d3cebe812080ea153d124b313fb2c184c7df75b","commitMessage":"@@@Change default deprecation logger level to CRITICAL (#77030)\n\nThis commit changes default deprecation logger level to CRITICAL.  where default means deprecations emitted by DeprecationLogger#critical method.\nIt also introduces WARN deprecations which are emitted by DeprecationLogger#warn Those log lines emitted at WARN are meant to indicate that a functionality is deprecated but will not break at next major version.\nrelates #76754","date":"2021-09-09 18:23:52","modifiedFileCount":"122","status":"M","submitter":"Przemyslaw Gomulka"}]
