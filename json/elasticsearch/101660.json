[{"authorTime":"2018-06-11 16:47:26","codes":[{"authorDate":"2018-06-11 16:47:26","commitOrder":1,"curCode":"    public void testSendMessageFromDifferentThreadIsQueuedWithSelector() throws Exception {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        when(selector.isOnCurrentThread()).thenReturn(false);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWrite(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","date":"2018-06-11 16:47:26","endLine":163,"groupId":"71808","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendMessageFromDifferentThreadIsQueuedWithSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fd/b4a77b922e281718aee9b9ce80181df3686cc3.src","preCode":"    public void testSendMessageFromDifferentThreadIsQueuedWithSelector() throws Exception {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        when(selector.isOnCurrentThread()).thenReturn(false);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWrite(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/SocketChannelContextTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"B"},{"authorDate":"2018-06-11 16:47:26","commitOrder":1,"curCode":"    public void testSendMessageFromSameThreadIsQueuedInChannel() {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWriteInChannelBuffer(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","date":"2018-06-11 16:47:26","endLine":177,"groupId":"71808","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendMessageFromSameThreadIsQueuedInChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fd/b4a77b922e281718aee9b9ce80181df3686cc3.src","preCode":"    public void testSendMessageFromSameThreadIsQueuedInChannel() {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWriteInChannelBuffer(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/SocketChannelContextTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"}],"commitId":"9ee492a3f0768a3790671bfe46223e700082730a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-11 16:47:26","modifiedFileCount":"192","status":"B","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-06-14 06:56:47","codes":[{"authorDate":"2018-06-11 16:47:26","commitOrder":2,"curCode":"    public void testSendMessageFromDifferentThreadIsQueuedWithSelector() throws Exception {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        when(selector.isOnCurrentThread()).thenReturn(false);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWrite(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","date":"2018-06-11 16:47:26","endLine":163,"groupId":"71808","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendMessageFromDifferentThreadIsQueuedWithSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fd/b4a77b922e281718aee9b9ce80181df3686cc3.src","preCode":"    public void testSendMessageFromDifferentThreadIsQueuedWithSelector() throws Exception {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        when(selector.isOnCurrentThread()).thenReturn(false);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWrite(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/SocketChannelContextTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"N"},{"authorDate":"2018-06-14 06:56:47","commitOrder":2,"curCode":"    public void testSendMessageFromSameThreadIsQueuedInChannel() {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).writeToChannel(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","date":"2018-06-14 06:56:47","endLine":177,"groupId":"71808","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendMessageFromSameThreadIsQueuedInChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/de/e50724f34c9b88610dd3e550350ad955858324.src","preCode":"    public void testSendMessageFromSameThreadIsQueuedInChannel() {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWriteInChannelBuffer(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/SocketChannelContextTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"11ef3b90a32fd853fbc45b316ae33d6f334bc336","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-14 06:56:47","modifiedFileCount":"8","status":"M","submitter":"Tal Levy"},{"authorTime":"2019-06-26 23:13:45","codes":[{"authorDate":"2018-06-11 16:47:26","commitOrder":3,"curCode":"    public void testSendMessageFromDifferentThreadIsQueuedWithSelector() throws Exception {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        when(selector.isOnCurrentThread()).thenReturn(false);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWrite(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","date":"2018-06-11 16:47:26","endLine":163,"groupId":"71808","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendMessageFromDifferentThreadIsQueuedWithSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fd/b4a77b922e281718aee9b9ce80181df3686cc3.src","preCode":"    public void testSendMessageFromDifferentThreadIsQueuedWithSelector() throws Exception {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        when(selector.isOnCurrentThread()).thenReturn(false);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWrite(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/SocketChannelContextTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"N"},{"authorDate":"2019-06-26 23:13:45","commitOrder":3,"curCode":"    public void testSendMessageFromSameThreadIsQueuedInChannel() {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWrite(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","date":"2019-06-26 23:13:45","endLine":182,"groupId":"71808","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendMessageFromSameThreadIsQueuedInChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/55/63ccc43063bde568bee84171408b22d2b766f5.src","preCode":"    public void testSendMessageFromSameThreadIsQueuedInChannel() {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).writeToChannel(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/SocketChannelContextTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"018a80bb1a1fbdd05516d5a7988a89f64de631fc","commitMessage":"@@@Optimize Selector Wakeups (#43515)\n\n* Use atomic boolean to guard wakeups\n* Don't trigger wakeups from the select loops thread itself for registering and closing channels\n* Don't needlessly queue writes\n\nCo-authored-by:  Tim Brooks <tim@uncontended.net>","date":"2019-06-26 23:13:45","modifiedFileCount":"6","status":"M","submitter":"Armin Braun"},{"authorTime":"2019-07-17 06:46:41","codes":[{"authorDate":"2019-07-17 06:46:41","commitOrder":4,"curCode":"    public void testSendMessageFromDifferentThreadIsQueuedWithSelector() throws Exception {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        when(selector.isOnCurrentThread()).thenReturn(false);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(handler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWrite(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","date":"2019-07-17 06:46:41","endLine":173,"groupId":"101660","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSendMessageFromDifferentThreadIsQueuedWithSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/21/0a27aa109fa0e74cb0ce0ff2f083990298feb8.src","preCode":"    public void testSendMessageFromDifferentThreadIsQueuedWithSelector() throws Exception {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        when(selector.isOnCurrentThread()).thenReturn(false);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWrite(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/SocketChannelContextTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2019-07-17 06:46:41","commitOrder":4,"curCode":"    public void testSendMessageFromSameThreadIsQueuedInChannel() {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(handler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWrite(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","date":"2019-07-17 06:46:41","endLine":187,"groupId":"101660","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSendMessageFromSameThreadIsQueuedInChannel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/21/0a27aa109fa0e74cb0ce0ff2f083990298feb8.src","preCode":"    public void testSendMessageFromSameThreadIsQueuedInChannel() {\n        ArgumentCaptor<WriteOperation> writeOpCaptor = ArgumentCaptor.forClass(WriteOperation.class);\n\n        ByteBuffer[] buffers = {ByteBuffer.wrap(createMessage(10))};\n        WriteOperation writeOperation = mock(WriteOperation.class);\n        when(readWriteHandler.createWriteOperation(context, buffers, listener)).thenReturn(writeOperation);\n        context.sendMessage(buffers, listener);\n\n        verify(selector).queueWrite(writeOpCaptor.capture());\n        WriteOperation writeOp = writeOpCaptor.getValue();\n\n        assertSame(writeOperation, writeOp);\n    }\n","realPath":"libs/nio/src/test/java/org/elasticsearch/nio/SocketChannelContextTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"}],"commitId":"b75003fd53615ff4ac03b23201748b9705a8fff1","commitMessage":"@@@Isolate nio channel registered from channel active (#44388)\n\nRegistering a channel with a selector is a required operation for the\nchannel to be handled properly. Currently.  we mix the registeration with\nother setup operations (ip filtering.  SSL initiation.  etc). However.  a\nfail to register is fatal. This PR modifies how registeration occurs to\nimmediately close the channel if it fails.\n\nThere are still two clear loopholes for how a user can interact with a\nchannel even if registration fails. 1. through the exception handler.\n2. through the channel accepted callback. These can perhaps be improved\nin the future. For now.  this PR prevents writes from proceeding if the\nchannel is not registered.","date":"2019-07-17 06:46:41","modifiedFileCount":"18","status":"M","submitter":"Tim Brooks"}]
