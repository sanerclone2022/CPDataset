[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testRethrottleSuccessfulResponse() {\n        List<TaskInfo> tasks = new ArrayList<>();\n        List<BulkByScrollTask.StatusOrException> sliceStatuses = new ArrayList<>(slices);\n        for (int i = 0; i < slices; i++) {\n            BulkByScrollTask.Status status = believeableInProgressStatus(i);\n            tasks.add(new TaskInfo(new TaskId(\"test\", 123), \"test\", \"test\", \"test\", status, 0, 0, true, new TaskId(\"test\", task.getId()),\n                Collections.emptyMap()));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        rethrottleTestCase(slices,\n                listener -> listener.onResponse(new ListTasksResponse(tasks, emptyList(), emptyList())),\n                expectSuccessfulRethrottleWithStatuses(sliceStatuses));\n    }\n","date":"2018-04-26 03:22:53","endLine":112,"groupId":"52776","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRethrottleSuccessfulResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3c/2f5194fceda84e1d4cc8e27a9de54b1ee44b93.src","preCode":"    public void testRethrottleSuccessfulResponse() {\n        List<TaskInfo> tasks = new ArrayList<>();\n        List<BulkByScrollTask.StatusOrException> sliceStatuses = new ArrayList<>(slices);\n        for (int i = 0; i < slices; i++) {\n            BulkByScrollTask.Status status = believeableInProgressStatus(i);\n            tasks.add(new TaskInfo(new TaskId(\"test\", 123), \"test\", \"test\", \"test\", status, 0, 0, true, new TaskId(\"test\", task.getId()),\n                Collections.emptyMap()));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        rethrottleTestCase(slices,\n                listener -> listener.onResponse(new ListTasksResponse(tasks, emptyList(), emptyList())),\n                expectSuccessfulRethrottleWithStatuses(sliceStatuses));\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/TransportRethrottleActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testRethrottleWithSomeSucceeded() {\n        int succeeded = between(1, slices - 1);\n        List<BulkByScrollTask.StatusOrException> sliceStatuses = new ArrayList<>(slices);\n        for (int i = 0; i < succeeded; i++) {\n            BulkByScrollTask.Status status = believeableCompletedStatus(i);\n            task.getLeaderState().onSliceResponse(neverCalled(), i,\n                    new BulkByScrollResponse(timeValueMillis(10), status, emptyList(), emptyList(), false));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        List<TaskInfo> tasks = new ArrayList<>();\n        for (int i = succeeded; i < slices; i++) {\n            BulkByScrollTask.Status status = believeableInProgressStatus(i);\n            tasks.add(new TaskInfo(new TaskId(\"test\", 123), \"test\", \"test\", \"test\", status, 0, 0, true, new TaskId(\"test\", task.getId()),\n                Collections.emptyMap()));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        rethrottleTestCase(slices - succeeded,\n                listener -> listener.onResponse(new ListTasksResponse(tasks, emptyList(), emptyList())),\n                expectSuccessfulRethrottleWithStatuses(sliceStatuses));\n    }\n","date":"2018-04-26 03:22:53","endLine":133,"groupId":"52776","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRethrottleWithSomeSucceeded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3c/2f5194fceda84e1d4cc8e27a9de54b1ee44b93.src","preCode":"    public void testRethrottleWithSomeSucceeded() {\n        int succeeded = between(1, slices - 1);\n        List<BulkByScrollTask.StatusOrException> sliceStatuses = new ArrayList<>(slices);\n        for (int i = 0; i < succeeded; i++) {\n            BulkByScrollTask.Status status = believeableCompletedStatus(i);\n            task.getLeaderState().onSliceResponse(neverCalled(), i,\n                    new BulkByScrollResponse(timeValueMillis(10), status, emptyList(), emptyList(), false));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        List<TaskInfo> tasks = new ArrayList<>();\n        for (int i = succeeded; i < slices; i++) {\n            BulkByScrollTask.Status status = believeableInProgressStatus(i);\n            tasks.add(new TaskInfo(new TaskId(\"test\", 123), \"test\", \"test\", \"test\", status, 0, 0, true, new TaskId(\"test\", task.getId()),\n                Collections.emptyMap()));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        rethrottleTestCase(slices - succeeded,\n                listener -> listener.onResponse(new ListTasksResponse(tasks, emptyList(), emptyList())),\n                expectSuccessfulRethrottleWithStatuses(sliceStatuses));\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/TransportRethrottleActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2021-05-26 14:46:59","codes":[{"authorDate":"2021-05-26 14:46:59","commitOrder":2,"curCode":"    public void testRethrottleSuccessfulResponse() {\n        List<TaskInfo> tasks = new ArrayList<>();\n        List<BulkByScrollTask.StatusOrException> sliceStatuses = new ArrayList<>(slices);\n        for (int i = 0; i < slices; i++) {\n            BulkByScrollTask.Status status = believeableInProgressStatus(i);\n            tasks.add(new TaskInfo(\n                    new TaskId(\"test\", 123),\n                    \"test\",\n                    \"test\",\n                    \"test\",\n                    status,\n                    0,\n                    0,\n                    true,\n                    false,\n                    new TaskId(\"test\", task.getId()),\n                    Collections.emptyMap()));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        rethrottleTestCase(slices,\n                listener -> listener.onResponse(new ListTasksResponse(tasks, emptyList(), emptyList())),\n                expectSuccessfulRethrottleWithStatuses(sliceStatuses));\n    }\n","date":"2021-05-26 14:46:59","endLine":111,"groupId":"10251","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRethrottleSuccessfulResponse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d2/4b7220d79d767ce7dbc059e9a9cfd3356e5fdb.src","preCode":"    public void testRethrottleSuccessfulResponse() {\n        List<TaskInfo> tasks = new ArrayList<>();\n        List<BulkByScrollTask.StatusOrException> sliceStatuses = new ArrayList<>(slices);\n        for (int i = 0; i < slices; i++) {\n            BulkByScrollTask.Status status = believeableInProgressStatus(i);\n            tasks.add(new TaskInfo(new TaskId(\"test\", 123), \"test\", \"test\", \"test\", status, 0, 0, true, new TaskId(\"test\", task.getId()),\n                Collections.emptyMap()));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        rethrottleTestCase(slices,\n                listener -> listener.onResponse(new ListTasksResponse(tasks, emptyList(), emptyList())),\n                expectSuccessfulRethrottleWithStatuses(sliceStatuses));\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/TransportRethrottleActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"},{"authorDate":"2021-05-26 14:46:59","commitOrder":2,"curCode":"    public void testRethrottleWithSomeSucceeded() {\n        int succeeded = between(1, slices - 1);\n        List<BulkByScrollTask.StatusOrException> sliceStatuses = new ArrayList<>(slices);\n        for (int i = 0; i < succeeded; i++) {\n            BulkByScrollTask.Status status = believeableCompletedStatus(i);\n            task.getLeaderState().onSliceResponse(neverCalled(), i,\n                    new BulkByScrollResponse(timeValueMillis(10), status, emptyList(), emptyList(), false));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        List<TaskInfo> tasks = new ArrayList<>();\n        for (int i = succeeded; i < slices; i++) {\n            BulkByScrollTask.Status status = believeableInProgressStatus(i);\n            tasks.add(new TaskInfo(\n                    new TaskId(\"test\", 123),\n                    \"test\",\n                    \"test\",\n                    \"test\",\n                    status,\n                    0,\n                    0,\n                    true,\n                    false,\n                    new TaskId(\"test\", task.getId()),\n                    Collections.emptyMap()));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        rethrottleTestCase(slices - succeeded,\n                listener -> listener.onResponse(new ListTasksResponse(tasks, emptyList(), emptyList())),\n                expectSuccessfulRethrottleWithStatuses(sliceStatuses));\n    }\n","date":"2021-05-26 14:46:59","endLine":142,"groupId":"10251","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRethrottleWithSomeSucceeded","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d2/4b7220d79d767ce7dbc059e9a9cfd3356e5fdb.src","preCode":"    public void testRethrottleWithSomeSucceeded() {\n        int succeeded = between(1, slices - 1);\n        List<BulkByScrollTask.StatusOrException> sliceStatuses = new ArrayList<>(slices);\n        for (int i = 0; i < succeeded; i++) {\n            BulkByScrollTask.Status status = believeableCompletedStatus(i);\n            task.getLeaderState().onSliceResponse(neverCalled(), i,\n                    new BulkByScrollResponse(timeValueMillis(10), status, emptyList(), emptyList(), false));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        List<TaskInfo> tasks = new ArrayList<>();\n        for (int i = succeeded; i < slices; i++) {\n            BulkByScrollTask.Status status = believeableInProgressStatus(i);\n            tasks.add(new TaskInfo(new TaskId(\"test\", 123), \"test\", \"test\", \"test\", status, 0, 0, true, new TaskId(\"test\", task.getId()),\n                Collections.emptyMap()));\n            sliceStatuses.add(new BulkByScrollTask.StatusOrException(status));\n        }\n        rethrottleTestCase(slices - succeeded,\n                listener -> listener.onResponse(new ListTasksResponse(tasks, emptyList(), emptyList())),\n                expectSuccessfulRethrottleWithStatuses(sliceStatuses));\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/TransportRethrottleActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"18e30d98bbd2c5825f40e8aa659217bbaab8eb00","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-05-26 14:46:59","modifiedFileCount":"317","status":"M","submitter":"iverase"}]
