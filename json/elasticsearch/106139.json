[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testParseXContentForAnalyzeRequestWithUnknownParamThrowsException() throws Exception {\n        AnalyzeRequest analyzeRequest = new AnalyzeRequest(\"for test\");\n        XContentParser invalidContent = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n                .field(\"text\", \"THIS IS A TEST\")\n                .field(\"unknown\", \"keyword\")\n            .endObject());\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n                () -> RestAnalyzeAction.buildFromContent(invalidContent, analyzeRequest));\n        assertThat(e.getMessage(), startsWith(\"Unknown parameter [unknown]\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":114,"groupId":"63508","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseXContentForAnalyzeRequestWithUnknownParamThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/66/f0bd796eaef3b444b0819f3f1e40a3f0d79449.src","preCode":"    public void testParseXContentForAnalyzeRequestWithUnknownParamThrowsException() throws Exception {\n        AnalyzeRequest analyzeRequest = new AnalyzeRequest(\"for test\");\n        XContentParser invalidContent = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n                .field(\"text\", \"THIS IS A TEST\")\n                .field(\"unknown\", \"keyword\")\n            .endObject());\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n                () -> RestAnalyzeAction.buildFromContent(invalidContent, analyzeRequest));\n        assertThat(e.getMessage(), startsWith(\"Unknown parameter [unknown]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/action/admin/indices/RestAnalyzeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testParseXContentForAnalyzeRequestWithInvalidNormalizerThrowsException() throws Exception {\n        AnalyzeRequest analyzeRequest = new AnalyzeRequest(\"for test\");\n        XContentParser invalidExplain = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n            .field(\"normalizer\", true)\n            .endObject());\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> RestAnalyzeAction.buildFromContent(invalidExplain, analyzeRequest));\n        assertThat(e.getMessage(), startsWith(\"normalizer should be normalizer's name\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":136,"groupId":"63510","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseXContentForAnalyzeRequestWithInvalidNormalizerThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/66/f0bd796eaef3b444b0819f3f1e40a3f0d79449.src","preCode":"    public void testParseXContentForAnalyzeRequestWithInvalidNormalizerThrowsException() throws Exception {\n        AnalyzeRequest analyzeRequest = new AnalyzeRequest(\"for test\");\n        XContentParser invalidExplain = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n            .field(\"normalizer\", true)\n            .endObject());\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> RestAnalyzeAction.buildFromContent(invalidExplain, analyzeRequest));\n        assertThat(e.getMessage(), startsWith(\"normalizer should be normalizer's name\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/action/admin/indices/RestAnalyzeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-06-25 03:39:56","codes":[{"authorDate":"2018-06-25 03:39:56","commitOrder":2,"curCode":"    public void testParseXContentForAnalyzeRequestWithUnknownParamThrowsException() throws Exception {\n        AnalyzeRequest analyzeRequest = new AnalyzeRequest(\"for test\");\n        try (XContentParser invalidContent = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n                .field(\"text\", \"THIS IS A TEST\")\n                .field(\"unknown\", \"keyword\")\n            .endObject())) {\n            IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n                () -> RestAnalyzeAction.buildFromContent(invalidContent, analyzeRequest));\n            assertThat(e.getMessage(), startsWith(\"Unknown parameter [unknown]\"));\n        }\n    }\n","date":"2018-06-25 16:41:24","endLine":117,"groupId":"63508","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseXContentForAnalyzeRequestWithUnknownParamThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/40/6e9b1d36c07c409e00d9a219c5d6ad39f68ac1.src","preCode":"    public void testParseXContentForAnalyzeRequestWithUnknownParamThrowsException() throws Exception {\n        AnalyzeRequest analyzeRequest = new AnalyzeRequest(\"for test\");\n        XContentParser invalidContent = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n                .field(\"text\", \"THIS IS A TEST\")\n                .field(\"unknown\", \"keyword\")\n            .endObject());\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n                () -> RestAnalyzeAction.buildFromContent(invalidContent, analyzeRequest));\n        assertThat(e.getMessage(), startsWith(\"Unknown parameter [unknown]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/action/admin/indices/RestAnalyzeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2018-06-25 03:39:56","commitOrder":2,"curCode":"    public void testParseXContentForAnalyzeRequestWithInvalidNormalizerThrowsException() throws Exception {\n        AnalyzeRequest analyzeRequest = new AnalyzeRequest(\"for test\");\n        try (XContentParser invalidExplain = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n            .field(\"normalizer\", true)\n            .endObject())) {\n            IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n                () -> RestAnalyzeAction.buildFromContent(invalidExplain, analyzeRequest));\n            assertThat(e.getMessage(), startsWith(\"normalizer should be normalizer's name\"));\n        }\n    }\n","date":"2018-06-25 16:41:24","endLine":141,"groupId":"63510","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseXContentForAnalyzeRequestWithInvalidNormalizerThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/40/6e9b1d36c07c409e00d9a219c5d6ad39f68ac1.src","preCode":"    public void testParseXContentForAnalyzeRequestWithInvalidNormalizerThrowsException() throws Exception {\n        AnalyzeRequest analyzeRequest = new AnalyzeRequest(\"for test\");\n        XContentParser invalidExplain = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n            .field(\"normalizer\", true)\n            .endObject());\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> RestAnalyzeAction.buildFromContent(invalidExplain, analyzeRequest));\n        assertThat(e.getMessage(), startsWith(\"normalizer should be normalizer's name\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/action/admin/indices/RestAnalyzeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"}],"commitId":"e6dc01d2b7d36b6d2a6aa11289afb70c9568c986","commitMessage":"@@@Close xcontent parsers (partial) (#31513)\n\nPartial pass at closing XContentParsers in server.  This mostly involved adding try-with-resources statements around the usage of XContentParsers.","date":"2018-06-25 16:41:24","modifiedFileCount":"53","status":"M","submitter":"Tom Callahan"},{"authorTime":"2019-06-03 16:16:54","codes":[{"authorDate":"2019-06-03 16:16:54","commitOrder":3,"curCode":"    public void testParseXContentForAnalyzeRequestWithUnknownParamThrowsException() throws Exception {\n        try (XContentParser invalidContent = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n                .field(\"text\", \"THIS IS A TEST\")\n                .field(\"unknown\", \"keyword\")\n            .endObject())) {\n            IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n                () -> AnalyzeAction.Request.fromXContent(invalidContent, \"for test\"));\n            assertThat(e.getMessage(), containsString(\"unknown field [unknown]\"));\n        }\n    }\n","date":"2019-06-03 16:16:54","endLine":114,"groupId":"106139","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseXContentForAnalyzeRequestWithUnknownParamThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1c/d79b3ae0c47068a38d82498746e17936b38565.src","preCode":"    public void testParseXContentForAnalyzeRequestWithUnknownParamThrowsException() throws Exception {\n        AnalyzeRequest analyzeRequest = new AnalyzeRequest(\"for test\");\n        try (XContentParser invalidContent = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n                .field(\"text\", \"THIS IS A TEST\")\n                .field(\"unknown\", \"keyword\")\n            .endObject())) {\n            IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n                () -> RestAnalyzeAction.buildFromContent(invalidContent, analyzeRequest));\n            assertThat(e.getMessage(), startsWith(\"Unknown parameter [unknown]\"));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/action/admin/indices/RestAnalyzeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2019-06-03 16:16:54","commitOrder":3,"curCode":"    public void testParseXContentForAnalyzeRequestWithInvalidNormalizerThrowsException() throws Exception {\n        try (XContentParser invalidExplain = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n            .field(\"normalizer\", true)\n            .endObject())) {\n            IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n                () -> AnalyzeAction.Request.fromXContent(invalidExplain, \"for test\"));\n            assertThat(e.getMessage(), containsString(\"normalizer doesn't support values of type: VALUE_BOOLEAN\"));\n        }\n    }\n","date":"2019-06-03 16:16:54","endLine":136,"groupId":"106139","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testParseXContentForAnalyzeRequestWithInvalidNormalizerThrowsException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1c/d79b3ae0c47068a38d82498746e17936b38565.src","preCode":"    public void testParseXContentForAnalyzeRequestWithInvalidNormalizerThrowsException() throws Exception {\n        AnalyzeRequest analyzeRequest = new AnalyzeRequest(\"for test\");\n        try (XContentParser invalidExplain = createParser(XContentFactory.jsonBuilder()\n            .startObject()\n            .field(\"normalizer\", true)\n            .endObject())) {\n            IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n                () -> RestAnalyzeAction.buildFromContent(invalidExplain, analyzeRequest));\n            assertThat(e.getMessage(), startsWith(\"normalizer should be normalizer's name\"));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/rest/action/admin/indices/RestAnalyzeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"17581f2f6f52369b93d15fa534ce9c1fa6d0846a","commitMessage":"@@@Create client-only AnalyzeRequest/AnalyzeResponse classes (#42197)\n\nThis commit clones the existing AnalyzeRequest/AnalyzeResponse classes\nto the high-level rest client.  and adjusts request converters to use these new\nclasses.\n\nThis is a prerequisite to removing the Streamable interface from the internal\nserver version of these classes.","date":"2019-06-03 16:16:54","modifiedFileCount":"21","status":"M","submitter":"Alan Woodward"}]
