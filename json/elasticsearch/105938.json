[{"authorTime":"2018-07-10 07:44:12","codes":[{"authorDate":"2018-05-07 06:17:36","commitOrder":2,"curCode":"    public void testIncludeDefaults() {\n        GetSettingsRequest noDefaultsRequest = new GetSettingsRequest().indices(indexName);\n        getSettingsAction.execute(null, noDefaultsRequest, ActionListener.wrap(noDefaultsResponse -> {\n            assertNull(\"index.refresh_interval should be null as it was never set\", noDefaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n        GetSettingsRequest defaultsRequest = new GetSettingsRequest().indices(indexName).includeDefaults(true);\n\n        getSettingsAction.execute(null, defaultsRequest, ActionListener.wrap(defaultsResponse -> {\n            assertNotNull(\"index.refresh_interval should be set as we are including defaults\", defaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n    }\n","date":"2018-05-07 06:17:36","endLine":112,"groupId":"21898","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIncludeDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/11/f0188c8c0b0e3119a774e4180af050ab2a37a8.src","preCode":"    public void testIncludeDefaults() {\n        GetSettingsRequest noDefaultsRequest = new GetSettingsRequest().indices(indexName);\n        getSettingsAction.execute(null, noDefaultsRequest, ActionListener.wrap(noDefaultsResponse -> {\n            assertNull(\"index.refresh_interval should be null as it was never set\", noDefaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n        GetSettingsRequest defaultsRequest = new GetSettingsRequest().indices(indexName).includeDefaults(true);\n\n        getSettingsAction.execute(null, defaultsRequest, ActionListener.wrap(defaultsResponse -> {\n            assertNotNull(\"index.refresh_interval should be set as we are including defaults\", defaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/settings/get/GetSettingsActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"NB"},{"authorDate":"2018-07-10 07:44:12","commitOrder":2,"curCode":"    public void testIncludeDefaults() {\n        GetIndexRequest defaultsRequest = new GetIndexRequest().indices(indexName).includeDefaults(true);\n        getIndexAction.execute(null, defaultsRequest, ActionListener.wrap(\n            defaultsResponse -> {\n                assertNotNull(\n                    \"index.refresh_interval should be set as we are including defaults\",\n                    defaultsResponse.getSetting(indexName, \"index.refresh_interval\")\n                );\n            }, exception -> {\n                throw new AssertionError(exception);\n            })\n        );\n    }\n","date":"2018-07-10 07:44:12","endLine":93,"groupId":"21898","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIncludeDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/02/a98eacda0e98e74246eeaa3203cc2229f6ef71.src","preCode":"    public void testIncludeDefaults() {\n        GetIndexRequest defaultsRequest = new GetIndexRequest().indices(indexName).includeDefaults(true);\n        getIndexAction.execute(null, defaultsRequest, ActionListener.wrap(\n            defaultsResponse -> {\n                assertNotNull(\n                    \"index.refresh_interval should be set as we are including defaults\",\n                    defaultsResponse.getSetting(indexName, \"index.refresh_interval\")\n                );\n            }, exception -> {\n                throw new AssertionError(exception);\n            })\n        );\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"B"}],"commitId":"e9cd0556c167b257bb588af5547923e5f13a99ca","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-10 07:44:12","modifiedFileCount":"627","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-08-14 07:31:40","codes":[{"authorDate":"2018-05-07 06:17:36","commitOrder":3,"curCode":"    public void testIncludeDefaults() {\n        GetSettingsRequest noDefaultsRequest = new GetSettingsRequest().indices(indexName);\n        getSettingsAction.execute(null, noDefaultsRequest, ActionListener.wrap(noDefaultsResponse -> {\n            assertNull(\"index.refresh_interval should be null as it was never set\", noDefaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n        GetSettingsRequest defaultsRequest = new GetSettingsRequest().indices(indexName).includeDefaults(true);\n\n        getSettingsAction.execute(null, defaultsRequest, ActionListener.wrap(defaultsResponse -> {\n            assertNotNull(\"index.refresh_interval should be set as we are including defaults\", defaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n    }\n","date":"2018-05-07 06:17:36","endLine":112,"groupId":"21898","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIncludeDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/11/f0188c8c0b0e3119a774e4180af050ab2a37a8.src","preCode":"    public void testIncludeDefaults() {\n        GetSettingsRequest noDefaultsRequest = new GetSettingsRequest().indices(indexName);\n        getSettingsAction.execute(null, noDefaultsRequest, ActionListener.wrap(noDefaultsResponse -> {\n            assertNull(\"index.refresh_interval should be null as it was never set\", noDefaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n        GetSettingsRequest defaultsRequest = new GetSettingsRequest().indices(indexName).includeDefaults(true);\n\n        getSettingsAction.execute(null, defaultsRequest, ActionListener.wrap(defaultsResponse -> {\n            assertNotNull(\"index.refresh_interval should be set as we are including defaults\", defaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/settings/get/GetSettingsActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"N"},{"authorDate":"2018-08-14 07:31:40","commitOrder":3,"curCode":"    public void testIncludeDefaults() {\n        GetIndexRequest defaultsRequest = new GetIndexRequest().indices(indexName).includeDefaults(true);\n        getIndexAction.execute(null, defaultsRequest, ActionListener.wrap(\n            defaultsResponse -> assertNotNull(\n                \"index.refresh_interval should be set as we are including defaults\",\n                defaultsResponse.getSetting(indexName, \"index.refresh_interval\")\n            ), exception -> {\n                throw new AssertionError(exception);\n            })\n        );\n    }\n","date":"2018-08-14 07:31:40","endLine":91,"groupId":"21898","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIncludeDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b6/7c2e2954d041bffcc12c1de05289034d6c7722.src","preCode":"    public void testIncludeDefaults() {\n        GetIndexRequest defaultsRequest = new GetIndexRequest().indices(indexName).includeDefaults(true);\n        getIndexAction.execute(null, defaultsRequest, ActionListener.wrap(\n            defaultsResponse -> {\n                assertNotNull(\n                    \"index.refresh_interval should be set as we are including defaults\",\n                    defaultsResponse.getSetting(indexName, \"index.refresh_interval\")\n                );\n            }, exception -> {\n                throw new AssertionError(exception);\n            })\n        );\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"e78f537e5857c7562db06d99cadc6fa396274996","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-08-14 07:31:40","modifiedFileCount":"47","status":"M","submitter":"Tal Levy"},{"authorTime":"2019-07-12 04:53:46","codes":[{"authorDate":"2019-07-12 04:53:46","commitOrder":4,"curCode":"    public void testIncludeDefaults() {\n        GetSettingsRequest noDefaultsRequest = new GetSettingsRequest().indices(indexName);\n        ActionTestUtils.execute(getSettingsAction, null, noDefaultsRequest, ActionListener.wrap(noDefaultsResponse -> {\n            assertNull(\"index.refresh_interval should be null as it was never set\", noDefaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n        GetSettingsRequest defaultsRequest = new GetSettingsRequest().indices(indexName).includeDefaults(true);\n\n        ActionTestUtils.execute(getSettingsAction, null, defaultsRequest, ActionListener.wrap(defaultsResponse -> {\n            assertNotNull(\"index.refresh_interval should be set as we are including defaults\", defaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n    }\n","date":"2019-07-12 04:53:46","endLine":117,"groupId":"105938","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIncludeDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/db/443cf97f126b74443b93c0caca4874de6bdd63.src","preCode":"    public void testIncludeDefaults() {\n        GetSettingsRequest noDefaultsRequest = new GetSettingsRequest().indices(indexName);\n        getSettingsAction.execute(null, noDefaultsRequest, ActionListener.wrap(noDefaultsResponse -> {\n            assertNull(\"index.refresh_interval should be null as it was never set\", noDefaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n        GetSettingsRequest defaultsRequest = new GetSettingsRequest().indices(indexName).includeDefaults(true);\n\n        getSettingsAction.execute(null, defaultsRequest, ActionListener.wrap(defaultsResponse -> {\n            assertNotNull(\"index.refresh_interval should be set as we are including defaults\", defaultsResponse.getSetting(indexName,\n                \"index.refresh_interval\"));\n        }, exception -> {\n            throw new AssertionError(exception);\n        }));\n\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/settings/get/GetSettingsActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2019-07-12 04:53:46","commitOrder":4,"curCode":"    public void testIncludeDefaults() {\n        GetIndexRequest defaultsRequest = new GetIndexRequest().indices(indexName).includeDefaults(true);\n        ActionTestUtils.execute(getIndexAction, null, defaultsRequest, ActionListener.wrap(\n            defaultsResponse -> assertNotNull(\n                \"index.refresh_interval should be set as we are including defaults\",\n                defaultsResponse.getSetting(indexName, \"index.refresh_interval\")\n            ), exception -> {\n                throw new AssertionError(exception);\n            })\n        );\n    }\n","date":"2019-07-12 04:53:46","endLine":94,"groupId":"105938","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testIncludeDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0f/f854af20c54456d0e5133d170f1b7589423e65.src","preCode":"    public void testIncludeDefaults() {\n        GetIndexRequest defaultsRequest = new GetIndexRequest().indices(indexName).includeDefaults(true);\n        getIndexAction.execute(null, defaultsRequest, ActionListener.wrap(\n            defaultsResponse -> assertNotNull(\n                \"index.refresh_interval should be set as we are including defaults\",\n                defaultsResponse.getSetting(indexName, \"index.refresh_interval\")\n            ), exception -> {\n                throw new AssertionError(exception);\n            })\n        );\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"f7d06eea557cc5bb0f5a56c4ec0716bd58ef7bca","commitMessage":"@@@Remove most direct test calls to TransportAction.execute (#44241)\n\nThere are currently 3 variants of TransportAction.execute. The\nimplementations of these require additional ctor arguments to all\nTransportAction implementations. While the non test uses can be\nconverted to using NodeClient to execute other actions.  using that for\ntest cases would be cumbersome and defeat the purpose of unit tests\ntesting an action's implementation directly. This commit adds a public\ntest-only utility method for test to use to call execute. This method\nwill continue to be available when the execute implementations are\ncollapsed and made package private.\n\nrelates #43881","date":"2019-07-12 04:53:46","modifiedFileCount":"12","status":"M","submitter":"Ryan Ernst"}]
