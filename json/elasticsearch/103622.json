[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":171,"groupId":"57756","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingleValueWithMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/6328feabc865db8afb2692bf94aeaebd89f8af.src","preCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        \r\n        \r\n        writer.forceMerge(1);\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n            assertValues(bytesValues, 0, two(), four());\n            assertValues(bytesValues, 1, one());\n            assertValues(bytesValues, 2, three());\n\n            IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer));\n            SortField sortField = indexFieldData.sortField(null, MultiValueMode.MIN, null, false);\n            TopFieldDocs topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(1));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(2))\n            ;\n            sortField = indexFieldData.sortField(null, MultiValueMode.MAX, null, true);\n            topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(2));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(1));\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":208,"groupId":"57756","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiValueAllSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/6328feabc865db8afb2692bf94aeaebd89f8af.src","preCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        \r\n        \r\n        writer.forceMerge(1);\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n            assertValues(bytesValues, 0, two(), four());\n            assertValues(bytesValues, 1, one());\n            assertValues(bytesValues, 2, three());\n\n            IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer));\n            SortField sortField = indexFieldData.sortField(null, MultiValueMode.MIN, null, false);\n            TopFieldDocs topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(1));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(2))\n            ;\n            sortField = indexFieldData.sortField(null, MultiValueMode.MAX, null, true);\n            topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(2));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(1));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-10 07:44:12","codes":[{"authorDate":"2018-07-10 07:44:12","commitOrder":2,"curCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","date":"2018-07-10 07:44:12","endLine":172,"groupId":"57756","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingleValueWithMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cd/1dc01d9ef4ac161287b2906f8dc451489fc146.src","preCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2018-07-10 07:44:12","commitOrder":2,"curCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        \r\n        \r\n        writer.forceMerge(1);\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n            assertValues(bytesValues, 0, two(), four());\n            assertValues(bytesValues, 1, one());\n            assertValues(bytesValues, 2, three());\n\n            IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer));\n            SortField sortField = indexFieldData.sortField(null, MultiValueMode.MIN, null, false);\n            TopFieldDocs topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(1));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(2))\n            ;\n            sortField = indexFieldData.sortField(null, MultiValueMode.MAX, null, true);\n            topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(2));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(1));\n        }\n    }\n","date":"2018-07-10 07:44:12","endLine":209,"groupId":"57756","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiValueAllSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cd/1dc01d9ef4ac161287b2906f8dc451489fc146.src","preCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        \r\n        \r\n        writer.forceMerge(1);\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n            assertValues(bytesValues, 0, two(), four());\n            assertValues(bytesValues, 1, one());\n            assertValues(bytesValues, 2, three());\n\n            IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer));\n            SortField sortField = indexFieldData.sortField(null, MultiValueMode.MIN, null, false);\n            TopFieldDocs topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(1));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(2))\n            ;\n            sortField = indexFieldData.sortField(null, MultiValueMode.MAX, null, true);\n            topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(2));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(1));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"}],"commitId":"e9cd0556c167b257bb588af5547923e5f13a99ca","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-10 07:44:12","modifiedFileCount":"627","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-09-07 17:59:10","codes":[{"authorDate":"2018-07-10 07:44:12","commitOrder":3,"curCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","date":"2018-07-10 07:44:12","endLine":172,"groupId":"57756","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingleValueWithMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cd/1dc01d9ef4ac161287b2906f8dc451489fc146.src","preCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"N"},{"authorDate":"2018-09-07 17:59:10","commitOrder":3,"curCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        \r\n        \r\n        writer.forceMerge(1);\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n            assertValues(bytesValues, 0, two(), four());\n            assertValues(bytesValues, 1, one());\n            assertValues(bytesValues, 2, three());\n\n            IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer));\n            SortField sortField = indexFieldData.sortField(null, MultiValueMode.MIN, null, false);\n            TopFieldDocs topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits.value, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(1));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(2))\n            ;\n            sortField = indexFieldData.sortField(null, MultiValueMode.MAX, null, true);\n            topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits.value, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(2));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(1));\n        }\n    }\n","date":"2018-09-07 17:59:10","endLine":209,"groupId":"57756","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiValueAllSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/04/8455ccb41e270952671e335c18b2e0e71c85db.src","preCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        \r\n        \r\n        writer.forceMerge(1);\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n            assertValues(bytesValues, 0, two(), four());\n            assertValues(bytesValues, 1, one());\n            assertValues(bytesValues, 2, three());\n\n            IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer));\n            SortField sortField = indexFieldData.sortField(null, MultiValueMode.MIN, null, false);\n            TopFieldDocs topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(1));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(2))\n            ;\n            sortField = indexFieldData.sortField(null, MultiValueMode.MAX, null, true);\n            topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(2));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(1));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"}],"commitId":"017ffe5d127ce0fb33feb8fc4e5fededb8cbfda1","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-07 17:59:10","modifiedFileCount":"370","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2020-03-17 20:25:51","codes":[{"authorDate":"2020-03-17 20:25:51","commitOrder":4,"curCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            LeafFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","date":"2020-03-17 20:25:51","endLine":172,"groupId":"103622","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSingleValueWithMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/49/8884b6cffaae8cd1c223bc57ed77c13d017b04.src","preCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2020-03-17 20:25:51","commitOrder":4,"curCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        \r\n        \r\n        writer.forceMerge(1);\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            LeafFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n            assertValues(bytesValues, 0, two(), four());\n            assertValues(bytesValues, 1, one());\n            assertValues(bytesValues, 2, three());\n\n            IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer));\n            SortField sortField = indexFieldData.sortField(null, MultiValueMode.MIN, null, false);\n            TopFieldDocs topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits.value, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(1));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(2))\n            ;\n            sortField = indexFieldData.sortField(null, MultiValueMode.MAX, null, true);\n            topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits.value, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(2));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(1));\n        }\n    }\n","date":"2020-03-17 20:25:51","endLine":209,"groupId":"103622","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testMultiValueAllSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/49/8884b6cffaae8cd1c223bc57ed77c13d017b04.src","preCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        \r\n        \r\n        writer.forceMerge(1);\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n            assertValues(bytesValues, 0, two(), four());\n            assertValues(bytesValues, 1, one());\n            assertValues(bytesValues, 2, three());\n\n            IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer));\n            SortField sortField = indexFieldData.sortField(null, MultiValueMode.MIN, null, false);\n            TopFieldDocs topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits.value, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(1));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(2))\n            ;\n            sortField = indexFieldData.sortField(null, MultiValueMode.MAX, null, true);\n            topDocs = searcher.search(new MatchAllDocsQuery(), 10, new Sort(sortField));\n            assertThat(topDocs.totalHits.value, equalTo(3L));\n            assertThat(topDocs.scoreDocs.length, equalTo(3));\n            assertThat(topDocs.scoreDocs[0].doc, equalTo(0));\n            assertThat(topDocs.scoreDocs[1].doc, equalTo(2));\n            assertThat(topDocs.scoreDocs[2].doc, equalTo(1));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":176,"status":"M"}],"commitId":"3e607d9e93c6319fcd606714aabca4af91f133d3","commitMessage":"@@@Rename AtomicFieldData to LeafFieldData (#53554)\n\nThis conforms with lucene's LeafReader naming convention.  and\nmatches other per-segment structures in elasticsearch.","date":"2020-03-17 20:25:51","modifiedFileCount":"59","status":"M","submitter":"Alan Woodward"}]
