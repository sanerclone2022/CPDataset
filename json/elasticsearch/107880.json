[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        Query query = null;\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.prefixQuery(value, method, context);\n        }\n        if (query == null) {\n            PrefixQuery prefixQuery = new PrefixQuery(new Term(fieldName, BytesRefs.toBytesRef(value)));\n            if (method != null) {\n                prefixQuery.setRewriteMethod(method);\n            }\n            query = prefixQuery;\n        }\n\n        return query;\n    }\n","date":"2018-04-26 03:22:53","endLine":189,"groupId":"36098","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c1/cd99d712a5a1cc07e85a8a9c2b5afcb432c58d.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        Query query = null;\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.prefixQuery(value, method, context);\n        }\n        if (query == null) {\n            PrefixQuery prefixQuery = new PrefixQuery(new Term(fieldName, BytesRefs.toBytesRef(value)));\n            if (method != null) {\n                prefixQuery.setRewriteMethod(method);\n            }\n            query = prefixQuery;\n        }\n\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        Query query = null;\n        String rewrite = this.rewrite;\n        if (rewrite == null && context.isFilter()) {\n            rewrite = QueryParsers.CONSTANT_SCORE.getPreferredName();\n        }\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions);\n        }\n        if (query == null) {\n            int maxEdits = fuzziness.asDistance(BytesRefs.toString(value));\n            query = new FuzzyQuery(new Term(fieldName, BytesRefs.toBytesRef(value)), maxEdits, prefixLength, maxExpansions, transpositions);\n        }\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","date":"2018-04-26 03:22:53","endLine":345,"groupId":"39074","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/37/9f583ef608295afc4f122a467597663934cdc0.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        Query query = null;\n        String rewrite = this.rewrite;\n        if (rewrite == null && context.isFilter()) {\n            rewrite = QueryParsers.CONSTANT_SCORE.getPreferredName();\n        }\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions);\n        }\n        if (query == null) {\n            int maxEdits = fuzziness.asDistance(BytesRefs.toString(value));\n            query = new FuzzyQuery(new Term(fieldName, BytesRefs.toBytesRef(value)), maxEdits, prefixLength, maxExpansions, transpositions);\n        }\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-12-03 18:49:11","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        Query query = null;\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.prefixQuery(value, method, context);\n        }\n        if (query == null) {\n            PrefixQuery prefixQuery = new PrefixQuery(new Term(fieldName, BytesRefs.toBytesRef(value)));\n            if (method != null) {\n                prefixQuery.setRewriteMethod(method);\n            }\n            query = prefixQuery;\n        }\n\n        return query;\n    }\n","date":"2018-04-26 03:22:53","endLine":189,"groupId":"36098","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c1/cd99d712a5a1cc07e85a8a9c2b5afcb432c58d.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        Query query = null;\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.prefixQuery(value, method, context);\n        }\n        if (query == null) {\n            PrefixQuery prefixQuery = new PrefixQuery(new Term(fieldName, BytesRefs.toBytesRef(value)));\n            if (method != null) {\n                prefixQuery.setRewriteMethod(method);\n            }\n            query = prefixQuery;\n        }\n\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"N"},{"authorDate":"2018-12-03 18:49:11","commitOrder":2,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        Query query = null;\n        String rewrite = this.rewrite;\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions);\n        }\n        if (query == null) {\n            int maxEdits = fuzziness.asDistance(BytesRefs.toString(value));\n            query = new FuzzyQuery(new Term(fieldName, BytesRefs.toBytesRef(value)), maxEdits, prefixLength, maxExpansions, transpositions);\n        }\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","date":"2018-12-03 18:49:11","endLine":343,"groupId":"39074","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/95/4107c6560869bbb266225f26908c7da1d4550d.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        Query query = null;\n        String rewrite = this.rewrite;\n        if (rewrite == null && context.isFilter()) {\n            rewrite = QueryParsers.CONSTANT_SCORE.getPreferredName();\n        }\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions);\n        }\n        if (query == null) {\n            int maxEdits = fuzziness.asDistance(BytesRefs.toString(value));\n            query = new FuzzyQuery(new Term(fieldName, BytesRefs.toBytesRef(value)), maxEdits, prefixLength, maxExpansions, transpositions);\n        }\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"M"}],"commitId":"74aca756b80ff5ad5e633ab54f184cc3ec1ba7a0","commitMessage":"@@@Remove the distinction between query and filter context in QueryBuilders (#35354)\n\nWhen building a query Lucene distinguishes two cases.  queries that require to produce a score and queries that only need to match. We cloned this mechanism in the QueryBuilders in order to be able to produce different queries based on whether they need to produce a score or not. However the only case in es that require this distinction is the BoolQueryBuilder that sets a different minimum_should_match when a `bool` query is built in a filter context..\nThis behavior doesn't seem right because it makes the matching of `should` clauses different when the score is not required.\n\nCloses #35293\n","date":"2018-12-03 18:49:11","modifiedFileCount":"26","status":"M","submitter":"Jim Ferenczi"},{"authorTime":"2020-02-13 01:06:04","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":3,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        Query query = null;\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.prefixQuery(value, method, context);\n        }\n        if (query == null) {\n            PrefixQuery prefixQuery = new PrefixQuery(new Term(fieldName, BytesRefs.toBytesRef(value)));\n            if (method != null) {\n                prefixQuery.setRewriteMethod(method);\n            }\n            query = prefixQuery;\n        }\n\n        return query;\n    }\n","date":"2018-04-26 03:22:53","endLine":189,"groupId":"36098","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c1/cd99d712a5a1cc07e85a8a9c2b5afcb432c58d.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        Query query = null;\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.prefixQuery(value, method, context);\n        }\n        if (query == null) {\n            PrefixQuery prefixQuery = new PrefixQuery(new Term(fieldName, BytesRefs.toBytesRef(value)));\n            if (method != null) {\n                prefixQuery.setRewriteMethod(method);\n            }\n            query = prefixQuery;\n        }\n\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"N"},{"authorDate":"2020-02-13 01:06:04","commitOrder":3,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        Query query = null;\n        String rewrite = this.rewrite;\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions, context);\n        }\n        if (query == null) {\n            int maxEdits = fuzziness.asDistance(BytesRefs.toString(value));\n            query = new FuzzyQuery(new Term(fieldName, BytesRefs.toBytesRef(value)), maxEdits, prefixLength, maxExpansions, transpositions);\n        }\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","date":"2020-02-13 01:06:04","endLine":343,"groupId":"39074","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8d/f0fec044124385ae009ef2fcec1f5819d08832.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        Query query = null;\n        String rewrite = this.rewrite;\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions);\n        }\n        if (query == null) {\n            int maxEdits = fuzziness.asDistance(BytesRefs.toString(value));\n            query = new FuzzyQuery(new Term(fieldName, BytesRefs.toBytesRef(value)), maxEdits, prefixLength, maxExpansions, transpositions);\n        }\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"M"}],"commitId":"a8b39ed842c7770bd9275958c9f747502fd9a3ea","commitMessage":"@@@Add a cluster setting to disallow expensive queries (#51385)\n\nAdd a new cluster setting `search.allow_expensive_queries` which by\ndefault is `true`. If set to `false`.  certain queries that have \nusually slow performance cannot be executed and an error message\nis returned.\n\n- Queries that need to do linear scans to identify matches:\n  - Script queries\n- Queries that have a high up-front cost:\n  - Fuzzy queries\n  - Regexp queries\n  - Prefix queries (without index_prefixes enabled\n  - Wildcard queries\n  - Range queries on text and keyword fields\n- Joining queries\n  - HasParent queries\n  - HasChild queries\n  - ParentId queries\n  - Nested queries\n- Queries on deprecated 6.x geo shapes (using PrefixTree implementation)\n- Queries that may have a high per-document cost:\n  - Script score queries\n  - Percolate queries\n\nCloses: #29050","date":"2020-02-13 01:06:04","modifiedFileCount":"66","status":"M","submitter":"Marios Trivyzas"},{"authorTime":"2020-02-26 17:25:38","codes":[{"authorDate":"2020-02-26 17:25:38","commitOrder":4,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        return fieldType.prefixQuery(value, method, context);\n    }\n","date":"2020-02-26 17:25:37","endLine":206,"groupId":"17154","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/44/c8dd44b49c8f18881d49d5938f5fd036f05799.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        Query query = null;\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.prefixQuery(value, method, context);\n        }\n        if (query == null) {\n            PrefixQuery prefixQuery = new PrefixQuery(new Term(fieldName, BytesRefs.toBytesRef(value)));\n            if (method != null) {\n                prefixQuery.setRewriteMethod(method);\n            }\n            query = prefixQuery;\n        }\n\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"},{"authorDate":"2020-02-26 17:25:38","commitOrder":4,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        String rewrite = this.rewrite;\n        Query query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions, context);\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","date":"2020-02-26 17:25:37","endLine":349,"groupId":"14778","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bd/3048da29bb42e5cdbecde5699462386a9ba617.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        Query query = null;\n        String rewrite = this.rewrite;\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType != null) {\n            query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions, context);\n        }\n        if (query == null) {\n            int maxEdits = fuzziness.asDistance(BytesRefs.toString(value));\n            query = new FuzzyQuery(new Term(fieldName, BytesRefs.toBytesRef(value)), maxEdits, prefixLength, maxExpansions, transpositions);\n        }\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"M"}],"commitId":"8830eb6b9a8da0202806791f29f049b764ad19af","commitMessage":"@@@Generalize how queries on `_index` are handled at rewrite time (#52486)\n\n#49713 aims at introducing a new constant_keyword field which.  like _index.  always rewrites queries to a MatchAllQueryBuilder or a MatchNoneQueryBuilder in order to skip shards in the can_match phase. This change introduces a new ConstantFieldType marker class that helps get this functionality with any field and not just _index.\n\nSince this change refactors rewrites.  I also took it as an opportunity to adrress #49254: instead of returning the same queries you would get on a keyword field when a field is unmapped.  queries get rewritten to a MatchNoDocsQueryBuilder.\n\nThis change exposed a couple bugs.  like the fact that the percolator doesn't rewrite queries at query time.  or that the significant_terms aggregation doesn't rewrite its inner filter.  which I fixed.\n\nCloses #49254","date":"2020-02-26 17:25:37","modifiedFileCount":"36","status":"M","submitter":"Adrien Grand"},{"authorTime":"2020-02-26 17:25:38","codes":[{"authorDate":"2020-09-19 00:17:08","commitOrder":5,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        return fieldType.prefixQuery(value, method, caseInsensitive, context);\n    }\n","date":"2020-09-19 00:17:08","endLine":244,"groupId":"17154","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e2/273a9dbf19df2ca3e8ee3f6f1ad96c9cb94ba2.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        return fieldType.prefixQuery(value, method, context);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"},{"authorDate":"2020-02-26 17:25:38","commitOrder":5,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        String rewrite = this.rewrite;\n        Query query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions, context);\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","date":"2020-02-26 17:25:37","endLine":349,"groupId":"14778","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bd/3048da29bb42e5cdbecde5699462386a9ba617.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        String rewrite = this.rewrite;\n        Query query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions, context);\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"N"}],"commitId":"fe9145fa5e7fb26c190725486eb6d573e5e311ef","commitMessage":"@@@Search - add case insensitive flag for \"term\" family of queries (#61596)\n\nAdds  case insensitive flag for term.  prefix.  and wildcard queries\n\nCloses #61546","date":"2020-09-19 00:17:08","modifiedFileCount":"42","status":"M","submitter":"markharwood"},{"authorTime":"2020-10-07 22:11:53","codes":[{"authorDate":"2020-10-07 22:11:53","commitOrder":6,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        MappedFieldType fieldType = context.getFieldType(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        return fieldType.prefixQuery(value, method, caseInsensitive, context);\n    }\n","date":"2020-10-07 22:11:53","endLine":244,"groupId":"12726","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2e/8f6606a33114eaeea93c2305fffa5c0ae22509.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        return fieldType.prefixQuery(value, method, caseInsensitive, context);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"},{"authorDate":"2020-10-07 22:11:53","commitOrder":6,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MappedFieldType fieldType = context.getFieldType(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        String rewrite = this.rewrite;\n        Query query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions, context);\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","date":"2020-10-07 22:11:53","endLine":349,"groupId":"14778","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/32/ebf73e1ffffbcf9935f98ca149b54639af0d3f.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MappedFieldType fieldType = context.fieldMapper(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        String rewrite = this.rewrite;\n        Query query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions, context);\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"M"}],"commitId":"95582da9a57086c1bf519b300ffc420d03448e28","commitMessage":"@@@Rename QueryShardContext#fieldMapper to getFieldType (#63399)\n\nGiven that we have a class called `FieldMapper` and that the `fieldMapper` method exposed by `QueryShardContext` actually allows to get a `MappedFieldType` given its name.  this commit renames such method to `getFieldType`","date":"2020-10-07 22:11:53","modifiedFileCount":"72","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2021-01-15 01:11:59","codes":[{"authorDate":"2021-01-15 01:11:59","commitOrder":7,"curCode":"    protected Query doToQuery(SearchExecutionContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        MappedFieldType fieldType = context.getFieldType(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        return fieldType.prefixQuery(value, method, caseInsensitive, context);\n    }\n","date":"2021-01-15 01:11:59","endLine":235,"groupId":"107880","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(SearchExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9c/bfdd72ff9f08898c2679729640d22392099563.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MultiTermQuery.RewriteMethod method = QueryParsers.parseRewriteMethod(rewrite, null, LoggingDeprecationHandler.INSTANCE);\n\n        MappedFieldType fieldType = context.getFieldType(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        return fieldType.prefixQuery(value, method, caseInsensitive, context);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"},{"authorDate":"2021-01-15 01:11:59","commitOrder":7,"curCode":"    protected Query doToQuery(SearchExecutionContext context) throws IOException {\n        MappedFieldType fieldType = context.getFieldType(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        String rewrite = this.rewrite;\n        Query query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions, context);\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","date":"2021-01-15 01:11:59","endLine":349,"groupId":"107880","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(SearchExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fc/9a919bf94b470118617891867a619118a2692f.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        MappedFieldType fieldType = context.getFieldType(fieldName);\n        if (fieldType == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        String rewrite = this.rewrite;\n        Query query = fieldType.fuzzyQuery(value, fuzziness, prefixLength, maxExpansions, transpositions, context);\n        if (query instanceof MultiTermQuery) {\n            MultiTermQuery.RewriteMethod rewriteMethod = QueryParsers.parseRewriteMethod(rewrite, null,\n                LoggingDeprecationHandler.INSTANCE);\n            QueryParsers.setRewriteMethod((MultiTermQuery) query, rewriteMethod);\n        }\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"M"}],"commitId":"5852fbedf52c77b0a76c2c731fdd4982fb65cd87","commitMessage":"@@@Rename QueryShardContext -> SearchExecutionContext. (#67490)\n\nWe decided to rename `QueryShardContext` to clarify that it supports all parts\nof search request execution. Before there was confusion over whether it should\nonly be used for building queries.  or maybe only used in the query phase. This\nPR also updates the javadocs.\n\nCloses #64740.","date":"2021-01-15 01:11:59","modifiedFileCount":"357","status":"M","submitter":"Julie Tibshirani"}]
