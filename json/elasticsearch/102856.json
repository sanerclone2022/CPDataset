[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"person\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(SourceToParse.source(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().fieldType().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").fieldType().name()), equalTo(\"shay\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":1019,"groupId":"60696","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseToJsonAndParse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/11/f69c738e949d93045fcd94f9dee0b99ddc0359.src","preCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"person\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(SourceToParse.source(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().fieldType().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").fieldType().name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1008,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(SourceToParse.source(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().fieldType().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").fieldType().name()), equalTo(\"shay\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":1031,"groupId":"61115","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/11/f69c738e949d93045fcd94f9dee0b99ddc0359.src","preCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(SourceToParse.source(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().fieldType().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").fieldType().name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1021,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-19 02:10:12","codes":[{"authorDate":"2018-07-19 02:10:12","commitOrder":2,"curCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"person\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(SourceToParse.source(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2018-07-19 02:10:12","endLine":1019,"groupId":"60696","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseToJsonAndParse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/09/8aacc799f5daefd2772966a193a0cc26eb8d93.src","preCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"person\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(SourceToParse.source(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().fieldType().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").fieldType().name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1008,"status":"M"},{"authorDate":"2018-07-19 02:10:12","commitOrder":2,"curCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(SourceToParse.source(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2018-07-19 02:10:12","endLine":1031,"groupId":"61115","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/09/8aacc799f5daefd2772966a193a0cc26eb8d93.src","preCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(SourceToParse.source(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().fieldType().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").fieldType().name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1021,"status":"M"}],"commitId":"a019e723b5475f0ca77063dab45fbcccd1d6559a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-19 02:10:12","modifiedFileCount":"121","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-12-25 03:06:50","codes":[{"authorDate":"2018-12-25 03:06:50","commitOrder":3,"curCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"person\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2018-12-25 03:06:50","endLine":1073,"groupId":"33485","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseToJsonAndParse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/db93474c0e954401f67f66f5529d7452db700a.src","preCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"person\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(SourceToParse.source(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1062,"status":"M"},{"authorDate":"2018-12-25 03:06:50","commitOrder":3,"curCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2018-12-25 03:06:50","endLine":1086,"groupId":"58940","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/db93474c0e954401f67f66f5529d7452db700a.src","preCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(SourceToParse.source(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1075,"status":"M"}],"commitId":"7580d9d925d864b25466d693637b3bd3092d44cf","commitMessage":"@@@Make SourceToParse immutable (#36971)\n\nToday the routing of a SourceToParse is assigned in a separate step\nafter the object is created. We can easily forget to set the routing.\nWith this commit.  the routing must be provided in the constructor of\nSourceToParse.\n\nRelates #36921","date":"2018-12-25 03:06:50","modifiedFileCount":"66","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2019-10-15 16:05:29","codes":[{"authorDate":"2019-10-15 16:05:29","commitOrder":4,"curCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"person\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2019-10-15 16:05:29","endLine":1183,"groupId":"58940","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseToJsonAndParse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/8518d073d058bcafb3785a743b3df978586b3d.src","preCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"person\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1172,"status":"M"},{"authorDate":"2019-10-15 16:05:29","commitOrder":4,"curCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2019-10-15 16:05:29","endLine":1196,"groupId":"58940","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/8518d073d058bcafb3785a743b3df978586b3d.src","preCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"person\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1185,"status":"M"}],"commitId":"6531369f11d159896957b75a7eae0b7da214d01a","commitMessage":"@@@Don't persist type information to translog (#47229)\n\nWe no longer need to store type information in the translog.  given that an index\ncan only have a single type.\n\nRelates to #41059","date":"2019-10-15 16:05:29","modifiedFileCount":"100","status":"M","submitter":"Alan Woodward"},{"authorTime":"2019-10-15 16:05:29","codes":[{"authorDate":"2020-01-14 23:15:19","commitOrder":5,"curCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"_doc\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2020-01-14 23:15:19","endLine":1183,"groupId":"58940","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseToJsonAndParse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1d/76efdd008b490fac504872d6078a6839a4897c.src","preCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"person\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1172,"status":"M"},{"authorDate":"2019-10-15 16:05:29","commitOrder":5,"curCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2019-10-15 16:05:29","endLine":1196,"groupId":"58940","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/8518d073d058bcafb3785a743b3df978586b3d.src","preCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1185,"status":"N"}],"commitId":"774bfb5e22389a923678ed8013e8cd284703d5dd","commitMessage":"@@@Don't use user-supplied type when building DocumentMapper (#50960)\n\nThis commit begins the process of removing types from the document parsing\ninfrastructure. Initially.  we just ignore the user-supplied type after it has been\nremoved from the mapping json structure.  and always supply _doc as the name\nof the root parser.\n\nThe production code change is very small here.  and most of the changeset\nconsists of alterations to Mapper test code that was passing in non-standard\ntype names and checking serialization.\n\nRelates to #41059","date":"2020-01-14 23:15:19","modifiedFileCount":"28","status":"M","submitter":"Alan Woodward"},{"authorTime":"2019-10-15 16:05:29","codes":[{"authorDate":"2020-01-20 19:14:49","commitOrder":6,"curCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"person\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2020-01-20 19:14:49","endLine":1183,"groupId":"58940","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseToJsonAndParse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e4/30125f281877f227ae8d9a2a375367f4b716ad.src","preCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"_doc\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1172,"status":"M"},{"authorDate":"2019-10-15 16:05:29","commitOrder":6,"curCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2019-10-15 16:05:29","endLine":1196,"groupId":"58940","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/8518d073d058bcafb3785a743b3df978586b3d.src","preCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1185,"status":"N"}],"commitId":"3d796248437e06dc90c15077702b67851bcb63a8","commitMessage":"@@@Revert \"Don't use user-supplied type when building DocumentMapper (#50960)\" (#51214)\n\nReverts #50960\n\nThis commit has been causing test failures during upgrade tests: specifically.  an upgraded\nnode becomes master and sends a cluster state update to a 7.x node; this node sees that the\nmapping version of its .tasks index is the same as the master.  so asserts that the serialized\nmappings are the same; however.  because the master has rewritten the mapping to use\n_docinstead oftasks`.  we get an assertion failure. The logical fix is for the master to\nincrement its mapping version when it rewrites the mapping.  but there isn't a simple way to\ndo that currently.\n\nThis reverts commit 774bfb5e22389a923678ed8013e8cd284703d5dd.","date":"2020-01-20 19:14:49","modifiedFileCount":"28","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-09-09 00:25:01","codes":[{"authorDate":"2020-09-09 00:25:01","commitOrder":7,"curCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        MapperService mapperService = createMapperService(mapping(b -> {}));\n        merge(mapperService, mapping);\n        String builtMapping = mapperService.documentMapper().mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = createDocumentMapper(builtMapping);\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(builtDocMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(builtDocMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2020-09-09 00:25:01","endLine":983,"groupId":"58940","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseToJsonAndParse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/39/40a9ae572a6047475b9316c7c3d4e34d1d3bca.src","preCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapperParser parser = createIndex(\"test\").mapperService().documentMapperParser();\n        DocumentMapper docMapper = parser.parse(\"person\", new CompressedXContent(mapping));\n        String builtMapping = docMapper.mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = parser.parse(\"person\", new CompressedXContent(builtMapping));\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":972,"status":"M"},{"authorDate":"2020-09-09 00:25:01","commitOrder":7,"curCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createDocumentMapper(mapping);\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2020-09-09 00:25:01","endLine":995,"groupId":"58940","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/39/40a9ae572a6047475b9316c7c3d4e34d1d3bca.src","preCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"person\", new CompressedXContent(mapping));\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":985,"status":"M"}],"commitId":"98590517f5ecb504874ca24c9d01b5d092b79360","commitMessage":"@@@Convert some more mapping tests to MapperServiceTestCase (#62089)\n\nWe don't need to extend ESSingleNodeTestCase for all these tests.","date":"2020-09-09 00:25:01","modifiedFileCount":"7","status":"M","submitter":"Alan Woodward"},{"authorTime":"2021-03-02 22:26:50","codes":[{"authorDate":"2020-09-09 00:25:01","commitOrder":8,"curCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        MapperService mapperService = createMapperService(mapping(b -> {}));\n        merge(mapperService, mapping);\n        String builtMapping = mapperService.documentMapper().mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = createDocumentMapper(builtMapping);\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(builtDocMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(builtDocMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2020-09-09 00:25:01","endLine":983,"groupId":"58940","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseToJsonAndParse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/39/40a9ae572a6047475b9316c7c3d4e34d1d3bca.src","preCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        MapperService mapperService = createMapperService(mapping(b -> {}));\n        merge(mapperService, mapping);\n        String builtMapping = mapperService.documentMapper().mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = createDocumentMapper(builtMapping);\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(builtDocMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(builtDocMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":972,"status":"N"},{"authorDate":"2021-03-02 22:26:50","commitOrder":8,"curCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createDocumentMapper(mapping);\n\n        assertThat((String) docMapper.mapping().getMeta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2021-03-02 22:26:50","endLine":1340,"groupId":"58940","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b2/9c7b31dfc8c00166510b35f9ad1aab14d36016.src","preCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createDocumentMapper(mapping);\n\n        assertThat((String) docMapper.meta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1330,"status":"M"}],"commitId":"8ac243666af4854ea67f416522babc69401379ad","commitMessage":"@@@Remove redundant methods from DocumentMapper (#69803)\n\nDocumentMapper exposes root() and meta() methods.  which can be accessed through the mapping() method which exposes the entire Mapping instance.\n\nThis commit removes such redundant methods in favour of accessing mapping and retrieving root and meta from them. Additionally.  access to Mapping's members is made consistent through getters rather than package private fields in some cases and getters is some other case.","date":"2021-03-02 22:26:50","modifiedFileCount":"15","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2021-06-24 16:56:30","codes":[{"authorDate":"2021-06-24 16:56:30","commitOrder":9,"curCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        MapperService mapperService = createMapperService(mapping(b -> {}));\n        merge(mapperService, mapping);\n        String builtMapping = mapperService.documentMapper().mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = createDocumentMapper(builtMapping);\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        LuceneDocument doc = builtDocMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(builtDocMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(builtDocMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2021-06-24 16:56:30","endLine":1486,"groupId":"102856","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testParseToJsonAndParse","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/57cef593a75c3a966dbf89342b7d59dc729bfd.src","preCode":"    public void testParseToJsonAndParse() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        MapperService mapperService = createMapperService(mapping(b -> {}));\n        merge(mapperService, mapping);\n        String builtMapping = mapperService.documentMapper().mappingSource().string();\n        \r\n        DocumentMapper builtDocMapper = createDocumentMapper(builtMapping);\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = builtDocMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(builtDocMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(builtDocMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1475,"status":"M"},{"authorDate":"2021-06-24 16:56:30","commitOrder":9,"curCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createDocumentMapper(mapping);\n\n        assertThat((String) docMapper.mapping().getMeta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        LuceneDocument doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","date":"2021-06-24 16:56:30","endLine":1498,"groupId":"102856","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testSimpleParser","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/57cef593a75c3a966dbf89342b7d59dc729bfd.src","preCode":"    public void testSimpleParser() throws Exception {\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/simple/test-mapping.json\");\n        DocumentMapper docMapper = createDocumentMapper(mapping);\n\n        assertThat((String) docMapper.mapping().getMeta().get(\"param1\"), equalTo(\"value1\"));\n\n        BytesReference json = new BytesArray(copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/simple/test1.json\"));\n        Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json, XContentType.JSON)).rootDoc();\n        assertThat(doc.getBinaryValue(docMapper.idFieldMapper().name()), equalTo(Uid.encodeId(\"1\")));\n        assertThat(doc.get(docMapper.mappers().getMapper(\"name.first\").name()), equalTo(\"shay\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1488,"status":"M"}],"commitId":"7cedc3ec3a109f02f54b9e12a7ca8a3470b67e80","commitMessage":"@@@Make Document a top-level class (#74472)\n\nThere is no reason for Document to be an inner class of ParseContext.  especially as it is public and accessed directly from many different places.\n\nThis commit takes it out to its own top-level class file.  which has the advantage of simplifying ParseContext which could use some love too.\n","date":"2021-06-24 16:56:30","modifiedFileCount":"46","status":"M","submitter":"Luca Cavanna"}]
