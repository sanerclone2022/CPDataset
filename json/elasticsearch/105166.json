[{"authorTime":"2021-02-22 20:16:52","codes":[{"authorDate":"2021-02-20 06:16:24","commitOrder":13,"curCode":"    public void testSimple() throws Exception {\n        MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType(\"string\", randomBoolean(), true, null);\n        TermsAggregationBuilder aggregationBuilder = new TermsAggregationBuilder(\"_name\")\n            .executionHint(randomFrom(TermsAggregatorFactory.ExecutionMode.values()).toString())\n            .field(\"string\")\n            .order(BucketOrder.key(true));\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(doc(fieldType, \"a\", \"b\"));\n            iw.addDocument(doc(fieldType, \"\", \"c\", \"a\"));\n            iw.addDocument(doc(fieldType, \"b\", \"d\"));\n            iw.addDocument(doc(fieldType, \"\"));\n        }, (InternalTerms<?, ?> result) -> {\n            assertEquals(5, result.getBuckets().size());\n            assertEquals(\"\", result.getBuckets().get(0).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(0).getDocCount());\n            assertEquals(\"a\", result.getBuckets().get(1).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(1).getDocCount());\n            assertEquals(\"b\", result.getBuckets().get(2).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(2).getDocCount());\n            assertEquals(\"c\", result.getBuckets().get(3).getKeyAsString());\n            assertEquals(1L, result.getBuckets().get(3).getDocCount());\n            assertEquals(\"d\", result.getBuckets().get(4).getKeyAsString());\n            assertEquals(1L, result.getBuckets().get(4).getDocCount());\n            assertTrue(AggregationInspectionHelper.hasValue(result));\n        }, fieldType);\n    }\n","date":"2021-02-20 06:16:24","endLine":259,"groupId":"67011","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/95/24b52f25cb65318b8da8dd394973c5f585d968.src","preCode":"    public void testSimple() throws Exception {\n        MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType(\"string\", randomBoolean(), true, null);\n        TermsAggregationBuilder aggregationBuilder = new TermsAggregationBuilder(\"_name\")\n            .executionHint(randomFrom(TermsAggregatorFactory.ExecutionMode.values()).toString())\n            .field(\"string\")\n            .order(BucketOrder.key(true));\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(doc(fieldType, \"a\", \"b\"));\n            iw.addDocument(doc(fieldType, \"\", \"c\", \"a\"));\n            iw.addDocument(doc(fieldType, \"b\", \"d\"));\n            iw.addDocument(doc(fieldType, \"\"));\n        }, (InternalTerms<?, ?> result) -> {\n            assertEquals(5, result.getBuckets().size());\n            assertEquals(\"\", result.getBuckets().get(0).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(0).getDocCount());\n            assertEquals(\"a\", result.getBuckets().get(1).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(1).getDocCount());\n            assertEquals(\"b\", result.getBuckets().get(2).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(2).getDocCount());\n            assertEquals(\"c\", result.getBuckets().get(3).getKeyAsString());\n            assertEquals(1L, result.getBuckets().get(3).getDocCount());\n            assertEquals(\"d\", result.getBuckets().get(4).getKeyAsString());\n            assertEquals(1L, result.getBuckets().get(4).getDocCount());\n            assertTrue(AggregationInspectionHelper.hasValue(result));\n        }, fieldType);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"NB"},{"authorDate":"2021-02-22 20:16:52","commitOrder":13,"curCode":"    public void testStringShardMinDocCount() throws IOException {\n        MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType(\"string\", true, true, null);\n        for (TermsAggregatorFactory.ExecutionMode executionMode : TermsAggregatorFactory.ExecutionMode.values()) {\n            TermsAggregationBuilder aggregationBuilder = new TermsAggregationBuilder(\"_name\")\n                .field(\"string\")\n                .executionHint(executionMode.toString())\n                .size(2)\n                .minDocCount(2)\n                .shardMinDocCount(2)\n                .order(BucketOrder.key(true));\n            testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n                \r\n                iw.addDocuments(Arrays.asList(\n                    doc(fieldType, \"a\", \"b\"),\n                    doc(fieldType, \"\", \"c\", \"d\"),\n                    doc(fieldType, \"b\", \"d\"),\n                    doc(fieldType, \"b\")));\n            }, (InternalTerms<?, ?> result) -> {\n                assertEquals(2, result.getBuckets().size());\n                assertEquals(\"b\", result.getBuckets().get(0).getKeyAsString());\n                assertEquals(3L, result.getBuckets().get(0).getDocCount());\n                assertEquals(\"d\", result.getBuckets().get(1).getKeyAsString());\n                assertEquals(2L, result.getBuckets().get(1).getDocCount());\n            }, fieldType);\n        }\n    }\n","date":"2021-02-22 20:16:52","endLine":287,"groupId":"3776","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testStringShardMinDocCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cd/be9bbe278626b627b9f5c0d1ae7a828839d45c.src","preCode":"    public void testStringShardMinDocCount() throws IOException {\n        MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType(\"string\", true, true, null);\n        for (TermsAggregatorFactory.ExecutionMode executionMode : TermsAggregatorFactory.ExecutionMode.values()) {\n            TermsAggregationBuilder aggregationBuilder = new TermsAggregationBuilder(\"_name\")\n                .field(\"string\")\n                .executionHint(executionMode.toString())\n                .size(2)\n                .minDocCount(2)\n                .shardMinDocCount(2)\n                .order(BucketOrder.key(true));\n            testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n                \r\n                iw.addDocuments(Arrays.asList(\n                    doc(fieldType, \"a\", \"b\"),\n                    doc(fieldType, \"\", \"c\", \"d\"),\n                    doc(fieldType, \"b\", \"d\"),\n                    doc(fieldType, \"b\")));\n            }, (InternalTerms<?, ?> result) -> {\n                assertEquals(2, result.getBuckets().size());\n                assertEquals(\"b\", result.getBuckets().get(0).getKeyAsString());\n                assertEquals(3L, result.getBuckets().get(0).getDocCount());\n                assertEquals(\"d\", result.getBuckets().get(1).getKeyAsString());\n                assertEquals(2L, result.getBuckets().get(1).getDocCount());\n            }, fieldType);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":262,"status":"B"}],"commitId":"27c31fa9480fa499ff937eb8bd1d971752e184fa","commitMessage":"@@@Terms aggs that run as filters ignore shard_min_doc_count (#69323)\n\nThis change handles `shard_min_doc_count` for terms aggregation that run as filters.\n\nCloses #69312","date":"2021-02-22 20:16:52","modifiedFileCount":"2","status":"M","submitter":"Jim Ferenczi"},{"authorTime":"2021-03-09 23:40:03","codes":[{"authorDate":"2021-03-09 23:40:03","commitOrder":14,"curCode":"    public void testSimple() throws Exception {\n        MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType(\"string\", randomBoolean(), true, Collections.emptyMap());\n        TermsAggregationBuilder aggregationBuilder = new TermsAggregationBuilder(\"_name\")\n            .executionHint(randomFrom(TermsAggregatorFactory.ExecutionMode.values()).toString())\n            .field(\"string\")\n            .order(BucketOrder.key(true));\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(doc(fieldType, \"a\", \"b\"));\n            iw.addDocument(doc(fieldType, \"\", \"c\", \"a\"));\n            iw.addDocument(doc(fieldType, \"b\", \"d\"));\n            iw.addDocument(doc(fieldType, \"\"));\n        }, (InternalTerms<?, ?> result) -> {\n            assertEquals(5, result.getBuckets().size());\n            assertEquals(\"\", result.getBuckets().get(0).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(0).getDocCount());\n            assertEquals(\"a\", result.getBuckets().get(1).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(1).getDocCount());\n            assertEquals(\"b\", result.getBuckets().get(2).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(2).getDocCount());\n            assertEquals(\"c\", result.getBuckets().get(3).getKeyAsString());\n            assertEquals(1L, result.getBuckets().get(3).getDocCount());\n            assertEquals(\"d\", result.getBuckets().get(4).getKeyAsString());\n            assertEquals(1L, result.getBuckets().get(4).getDocCount());\n            assertTrue(AggregationInspectionHelper.hasValue(result));\n        }, fieldType);\n    }\n","date":"2021-03-09 23:40:03","endLine":261,"groupId":"105166","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimple","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9b/eb66a28c27239be5d338cfb32013d842e2ebf4.src","preCode":"    public void testSimple() throws Exception {\n        MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType(\"string\", randomBoolean(), true, null);\n        TermsAggregationBuilder aggregationBuilder = new TermsAggregationBuilder(\"_name\")\n            .executionHint(randomFrom(TermsAggregatorFactory.ExecutionMode.values()).toString())\n            .field(\"string\")\n            .order(BucketOrder.key(true));\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(doc(fieldType, \"a\", \"b\"));\n            iw.addDocument(doc(fieldType, \"\", \"c\", \"a\"));\n            iw.addDocument(doc(fieldType, \"b\", \"d\"));\n            iw.addDocument(doc(fieldType, \"\"));\n        }, (InternalTerms<?, ?> result) -> {\n            assertEquals(5, result.getBuckets().size());\n            assertEquals(\"\", result.getBuckets().get(0).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(0).getDocCount());\n            assertEquals(\"a\", result.getBuckets().get(1).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(1).getDocCount());\n            assertEquals(\"b\", result.getBuckets().get(2).getKeyAsString());\n            assertEquals(2L, result.getBuckets().get(2).getDocCount());\n            assertEquals(\"c\", result.getBuckets().get(3).getKeyAsString());\n            assertEquals(1L, result.getBuckets().get(3).getDocCount());\n            assertEquals(\"d\", result.getBuckets().get(4).getKeyAsString());\n            assertEquals(1L, result.getBuckets().get(4).getDocCount());\n            assertTrue(AggregationInspectionHelper.hasValue(result));\n        }, fieldType);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"},{"authorDate":"2021-03-09 23:40:03","commitOrder":14,"curCode":"    public void testStringShardMinDocCount() throws IOException {\n        MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType(\"string\", true, true, Collections.emptyMap());\n        for (TermsAggregatorFactory.ExecutionMode executionMode : TermsAggregatorFactory.ExecutionMode.values()) {\n            TermsAggregationBuilder aggregationBuilder = new TermsAggregationBuilder(\"_name\")\n                .field(\"string\")\n                .executionHint(executionMode.toString())\n                .size(2)\n                .minDocCount(2)\n                .shardMinDocCount(2)\n                .order(BucketOrder.key(true));\n            testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n                \r\n                iw.addDocuments(Arrays.asList(\n                    doc(fieldType, \"a\", \"b\"),\n                    doc(fieldType, \"\", \"c\", \"d\"),\n                    doc(fieldType, \"b\", \"d\"),\n                    doc(fieldType, \"b\")));\n            }, (InternalTerms<?, ?> result) -> {\n                assertEquals(2, result.getBuckets().size());\n                assertEquals(\"b\", result.getBuckets().get(0).getKeyAsString());\n                assertEquals(3L, result.getBuckets().get(0).getDocCount());\n                assertEquals(\"d\", result.getBuckets().get(1).getKeyAsString());\n                assertEquals(2L, result.getBuckets().get(1).getDocCount());\n            }, fieldType);\n        }\n    }\n","date":"2021-03-09 23:40:03","endLine":288,"groupId":"105166","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testStringShardMinDocCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9b/eb66a28c27239be5d338cfb32013d842e2ebf4.src","preCode":"    public void testStringShardMinDocCount() throws IOException {\n        MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType(\"string\", true, true, null);\n        for (TermsAggregatorFactory.ExecutionMode executionMode : TermsAggregatorFactory.ExecutionMode.values()) {\n            TermsAggregationBuilder aggregationBuilder = new TermsAggregationBuilder(\"_name\")\n                .field(\"string\")\n                .executionHint(executionMode.toString())\n                .size(2)\n                .minDocCount(2)\n                .shardMinDocCount(2)\n                .order(BucketOrder.key(true));\n            testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n                \r\n                iw.addDocuments(Arrays.asList(\n                    doc(fieldType, \"a\", \"b\"),\n                    doc(fieldType, \"\", \"c\", \"d\"),\n                    doc(fieldType, \"b\", \"d\"),\n                    doc(fieldType, \"b\")));\n            }, (InternalTerms<?, ?> result) -> {\n                assertEquals(2, result.getBuckets().size());\n                assertEquals(\"b\", result.getBuckets().get(0).getKeyAsString());\n                assertEquals(3L, result.getBuckets().get(0).getDocCount());\n                assertEquals(\"d\", result.getBuckets().get(1).getKeyAsString());\n                assertEquals(2L, result.getBuckets().get(1).getDocCount());\n            }, fieldType);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"M"}],"commitId":"139ff8657ab3dcd869b75de1df2e605b39fb3c0f","commitMessage":"@@@Require `meta` field for MappedFieldType to be non-null (#70145)\n\nThe transport action for FieldCapabilities assumes the meta field for a MappedFieldType\nis traversable. This commit adds a requirement to MappedFieldType itself to ensure that\nit is implemented for all subtypes.","date":"2021-03-09 23:40:03","modifiedFileCount":"11","status":"M","submitter":"Alan Woodward"}]
