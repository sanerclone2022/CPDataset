[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        new Action(Settings.EMPTY, \"testAction\", transportService, clusterService, threadPool).execute(request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","date":"2018-04-26 03:22:53","endLine":313,"groupId":"36801","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMasterBecomesAvailable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f2/b18a8c8f56177b0d453ae2936430aaca1042ea.src","preCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        new Action(Settings.EMPTY, \"testAction\", transportService, clusterService, threadPool).execute(request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        new Action(Settings.EMPTY, \"testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new Discovery.FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }.execute(request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","date":"2018-04-26 03:22:53","endLine":437,"groupId":"37435","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMasterFailoverAfterStepDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f2/b18a8c8f56177b0d453ae2936430aaca1042ea.src","preCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        new Action(Settings.EMPTY, \"testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new Discovery.FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }.execute(request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":408,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-10 07:44:12","codes":[{"authorDate":"2018-07-10 07:44:12","commitOrder":2,"curCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        new Action(Settings.EMPTY, \"internal:testAction\", transportService, clusterService, threadPool).execute(request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","date":"2018-07-10 07:44:12","endLine":313,"groupId":"36801","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMasterBecomesAvailable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b2/7bc9ad79432d9d1cb4f9061a20d3a196c20608.src","preCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        new Action(Settings.EMPTY, \"testAction\", transportService, clusterService, threadPool).execute(request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"M"},{"authorDate":"2018-07-10 07:44:12","commitOrder":2,"curCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        new Action(Settings.EMPTY, \"internal:testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new Discovery.FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }.execute(request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"internal:testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","date":"2018-07-10 07:44:12","endLine":437,"groupId":"37435","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMasterFailoverAfterStepDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b2/7bc9ad79432d9d1cb4f9061a20d3a196c20608.src","preCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        new Action(Settings.EMPTY, \"testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new Discovery.FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }.execute(request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":408,"status":"M"}],"commitId":"e9cd0556c167b257bb588af5547923e5f13a99ca","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-10 07:44:12","modifiedFileCount":"627","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-11-05 20:08:18","codes":[{"authorDate":"2018-11-05 20:08:18","commitOrder":3,"curCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        new Action(\"internal:testAction\", transportService, clusterService, threadPool).execute(request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","date":"2018-11-05 20:08:18","endLine":314,"groupId":"36801","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMasterBecomesAvailable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d7/917ceb2322df29301b66cf7f29f955d62f4c14.src","preCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        new Action(Settings.EMPTY, \"internal:testAction\", transportService, clusterService, threadPool).execute(request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"M"},{"authorDate":"2018-11-05 20:08:18","commitOrder":3,"curCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        new Action( \"internal:testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new Discovery.FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }.execute(request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"internal:testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","date":"2018-11-05 20:08:18","endLine":438,"groupId":"37435","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMasterFailoverAfterStepDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d7/917ceb2322df29301b66cf7f29f955d62f4c14.src","preCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        new Action(Settings.EMPTY, \"internal:testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new Discovery.FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }.execute(request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"internal:testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":409,"status":"M"}],"commitId":"409050e8de4cacbfac4b68ab12bbb928437a4499","commitMessage":"@@@Refactor: Remove settings from transport action CTOR (#35208)\n\nAs settings are not used in the transport action constructor.  this\nremoves the passing of the settings in all the transport actions.","date":"2018-11-05 20:08:18","modifiedFileCount":"289","status":"M","submitter":"Alexander Reelsen"},{"authorTime":"2018-12-06 15:31:46","codes":[{"authorDate":"2018-11-05 20:08:18","commitOrder":4,"curCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        new Action(\"internal:testAction\", transportService, clusterService, threadPool).execute(request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","date":"2018-11-05 20:08:18","endLine":314,"groupId":"36801","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testMasterBecomesAvailable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d7/917ceb2322df29301b66cf7f29f955d62f4c14.src","preCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        new Action(\"internal:testAction\", transportService, clusterService, threadPool).execute(request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"N"},{"authorDate":"2018-12-06 15:31:46","commitOrder":4,"curCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        new Action( \"internal:testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }.execute(request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"internal:testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","date":"2018-12-06 15:31:46","endLine":468,"groupId":"29831","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testMasterFailoverAfterStepDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/39/67123ad50657992a6550d9205e29fe672c9cf3.src","preCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        new Action( \"internal:testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new Discovery.FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }.execute(request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"internal:testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":439,"status":"M"}],"commitId":"ee05ef131286eead295cf58ed4393af56f0d7ade","commitMessage":"@@@Merge branch 'zen2'\n","date":"2018-12-06 15:31:46","modifiedFileCount":"122","status":"M","submitter":"Yannick Welsch"},{"authorTime":"2019-06-26 23:58:35","codes":[{"authorDate":"2018-11-05 20:08:18","commitOrder":5,"curCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        new Action(\"internal:testAction\", transportService, clusterService, threadPool).execute(request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","date":"2018-11-05 20:08:18","endLine":314,"groupId":"36801","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testMasterBecomesAvailable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d7/917ceb2322df29301b66cf7f29f955d62f4c14.src","preCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        new Action(\"internal:testAction\", transportService, clusterService, threadPool).execute(request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"N"},{"authorDate":"2019-06-26 23:58:35","commitOrder":5,"curCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        new Action( \"internal:testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Task task, Request request, ClusterState state,\n                                           ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }.execute(request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"internal:testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","date":"2019-06-26 23:58:35","endLine":470,"groupId":"23820","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testMasterFailoverAfterStepDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fc/33ee768671582623b222c28e0b1106dc28b38d.src","preCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        new Action( \"internal:testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }.execute(request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"internal:testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":440,"status":"M"}],"commitId":"516b4b9e5f5677d0468b8924e247613961731373","commitMessage":"@@@Remove non task-aware version of master and node operations (#43563)\n\nTransportNodeAction and TransportMasterNodeAction contains two\nvariations of their abstract operation methods: one taking a Task and\none that does not. This commit removes the variant that does not take a\nTask.  eliminating the need to override that method and throw an\nunsupported operation exception in those cases when the task is\nrequired.\n","date":"2019-06-26 23:58:35","modifiedFileCount":"149","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2019-07-12 04:53:46","codes":[{"authorDate":"2019-07-12 04:53:46","commitOrder":6,"curCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        ActionTestUtils.execute(new Action(\"internal:testAction\", transportService, clusterService, threadPool), null, request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","date":"2019-07-12 04:53:46","endLine":345,"groupId":"105699","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testMasterBecomesAvailable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2a/a6f83df8fcf63eded0662d06e83682785c1f2d.src","preCode":"    public void testMasterBecomesAvailable() throws ExecutionException, InterruptedException {\n        Request request = new Request();\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, null, allNodes));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n        new Action(\"internal:testAction\", transportService, clusterService, threadPool).execute(request, listener);\n        assertFalse(listener.isDone());\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n        assertTrue(listener.isDone());\n        listener.get();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":336,"status":"M"},{"authorDate":"2019-07-12 04:53:46","commitOrder":6,"curCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        ActionTestUtils.execute(new Action( \"internal:testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Task task, Request request, ClusterState state,\n                                           ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }, null, request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"internal:testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","date":"2019-07-12 04:53:46","endLine":470,"groupId":"105699","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testMasterFailoverAfterStepDown","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2a/a6f83df8fcf63eded0662d06e83682785c1f2d.src","preCode":"    public void testMasterFailoverAfterStepDown() throws ExecutionException, InterruptedException {\n        Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1));\n        PlainActionFuture<Response> listener = new PlainActionFuture<>();\n\n        final Response response = new Response();\n\n        setState(clusterService, ClusterStateCreationUtils.state(localNode, localNode, allNodes));\n\n        new Action( \"internal:testAction\", transportService, clusterService, threadPool) {\n            @Override\n            protected void masterOperation(Task task, Request request, ClusterState state,\n                                           ActionListener<Response> listener) throws Exception {\n                \r\n                setState(clusterService, ClusterStateCreationUtils.state(localNode, remoteNode, allNodes));\n                Exception failure = randomBoolean()\n                        ? new FailedToCommitClusterStateException(\"Fake error\")\n                        : new NotMasterException(\"Fake error\");\n                listener.onFailure(failure);\n            }\n        }.execute(request, listener);\n\n        assertThat(transport.capturedRequests().length, equalTo(1));\n        CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()[0];\n        assertTrue(capturedRequest.node.isMasterNode());\n        assertThat(capturedRequest.request, equalTo(request));\n        assertThat(capturedRequest.action, equalTo(\"internal:testAction\"));\n\n        transport.handleResponse(capturedRequest.requestId, response);\n        assertTrue(listener.isDone());\n        assertThat(listener.get(), equalTo(response));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":440,"status":"M"}],"commitId":"f7d06eea557cc5bb0f5a56c4ec0716bd58ef7bca","commitMessage":"@@@Remove most direct test calls to TransportAction.execute (#44241)\n\nThere are currently 3 variants of TransportAction.execute. The\nimplementations of these require additional ctor arguments to all\nTransportAction implementations. While the non test uses can be\nconverted to using NodeClient to execute other actions.  using that for\ntest cases would be cumbersome and defeat the purpose of unit tests\ntesting an action's implementation directly. This commit adds a public\ntest-only utility method for test to use to call execute. This method\nwill continue to be available when the execute implementations are\ncollapsed and made package private.\n\nrelates #43881","date":"2019-07-12 04:53:46","modifiedFileCount":"12","status":"M","submitter":"Ryan Ernst"}]
