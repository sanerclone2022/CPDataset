[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            bootstrap = createBootstrap();\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":142,"groupId":"11429","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f4/818a2e567521eb2233d9ddcec9d6c50e82b8fe.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            bootstrap = createBootstrap();\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            int acceptorCount = 0;\n            boolean useNetworkServer = NetworkService.NETWORK_SERVER.get(settings);\n            if (useNetworkServer) {\n                acceptorCount = NioTransport.NIO_ACCEPTOR_COUNT.get(settings);\n            }\n            nioGroup = new NioGroup(logger, daemonThreadFactory(this.settings, TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX), acceptorCount,\n                AcceptorEventHandler::new, daemonThreadFactory(this.settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX),\n                NioTransport.NIO_WORKER_COUNT.get(settings), SocketEventHandler::new);\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = channelFactory(clientProfileSettings, true);\n\n            if (useNetworkServer) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = channelFactory(profileSettings, false);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":136,"groupId":"59579","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/eb/3d7f3d710dca8807b2eb09b6cbe67e6533ed00.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            int acceptorCount = 0;\n            boolean useNetworkServer = NetworkService.NETWORK_SERVER.get(settings);\n            if (useNetworkServer) {\n                acceptorCount = NioTransport.NIO_ACCEPTOR_COUNT.get(settings);\n            }\n            nioGroup = new NioGroup(logger, daemonThreadFactory(this.settings, TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX), acceptorCount,\n                AcceptorEventHandler::new, daemonThreadFactory(this.settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX),\n                NioTransport.NIO_WORKER_COUNT.get(settings), SocketEventHandler::new);\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = channelFactory(clientProfileSettings, true);\n\n            if (useNetworkServer) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = channelFactory(profileSettings, false);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-05-22 17:32:49","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            bootstrap = createBootstrap();\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":142,"groupId":"11429","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f4/818a2e567521eb2233d9ddcec9d6c50e82b8fe.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            bootstrap = createBootstrap();\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2018-05-22 17:32:49","commitOrder":2,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            int acceptorCount = 0;\n            boolean useNetworkServer = NetworkService.NETWORK_SERVER.get(settings);\n            if (useNetworkServer) {\n                acceptorCount = NioTransport.NIO_ACCEPTOR_COUNT.get(settings);\n            }\n            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX), acceptorCount,\n                (s) -> new AcceptorEventHandler(s, this::onNonChannelException),\n                daemonThreadFactory(this.settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX), NioTransport.NIO_WORKER_COUNT.get(settings),\n                () -> new SocketEventHandler(this::onNonChannelException));\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = channelFactory(clientProfileSettings, true);\n\n            if (useNetworkServer) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = channelFactory(profileSettings, false);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-05-22 17:32:49","endLine":136,"groupId":"59579","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2e/f49d7791234b83431edabb94229864f54bbfd4.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            int acceptorCount = 0;\n            boolean useNetworkServer = NetworkService.NETWORK_SERVER.get(settings);\n            if (useNetworkServer) {\n                acceptorCount = NioTransport.NIO_ACCEPTOR_COUNT.get(settings);\n            }\n            nioGroup = new NioGroup(logger, daemonThreadFactory(this.settings, TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX), acceptorCount,\n                AcceptorEventHandler::new, daemonThreadFactory(this.settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX),\n                NioTransport.NIO_WORKER_COUNT.get(settings), SocketEventHandler::new);\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = channelFactory(clientProfileSettings, true);\n\n            if (useNetworkServer) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = channelFactory(profileSettings, false);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"bfd6e60a759c737cf86e2952f268d06839226cbb","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-05-22 17:32:49","modifiedFileCount":"74","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-06-11 16:47:26","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":3,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            bootstrap = createBootstrap();\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":142,"groupId":"11429","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f4/818a2e567521eb2233d9ddcec9d6c50e82b8fe.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            bootstrap = createBootstrap();\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2018-06-11 16:47:26","commitOrder":3,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX),\n                NioTransport.NIO_WORKER_COUNT.get(settings), (s) -> new EventHandler(this::onNonChannelException, s));\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = channelFactory(clientProfileSettings, true);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = channelFactory(profileSettings, false);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-06-11 16:47:26","endLine":122,"groupId":"52388","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b8/5d707dcd9340f9af8286982ee21471d8013adb.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            int acceptorCount = 0;\n            boolean useNetworkServer = NetworkService.NETWORK_SERVER.get(settings);\n            if (useNetworkServer) {\n                acceptorCount = NioTransport.NIO_ACCEPTOR_COUNT.get(settings);\n            }\n            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TRANSPORT_ACCEPTOR_THREAD_NAME_PREFIX), acceptorCount,\n                (s) -> new AcceptorEventHandler(s, this::onNonChannelException),\n                daemonThreadFactory(this.settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX), NioTransport.NIO_WORKER_COUNT.get(settings),\n                () -> new SocketEventHandler(this::onNonChannelException));\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = channelFactory(clientProfileSettings, true);\n\n            if (useNetworkServer) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = channelFactory(profileSettings, false);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"9ee492a3f0768a3790671bfe46223e700082730a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-11 16:47:26","modifiedFileCount":"192","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-06-11 16:47:26","codes":[{"authorDate":"2018-09-06 15:17:40","commitOrder":4,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            clientBootstrap = createClientBootstrap();\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-09-06 15:17:40","endLine":142,"groupId":"11429","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/00/9a75b3e33015b6b18ec2062646a3af46c8a345.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            bootstrap = createBootstrap();\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2018-06-11 16:47:26","commitOrder":4,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX),\n                NioTransport.NIO_WORKER_COUNT.get(settings), (s) -> new EventHandler(this::onNonChannelException, s));\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = channelFactory(clientProfileSettings, true);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = channelFactory(profileSettings, false);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-06-11 16:47:26","endLine":122,"groupId":"52388","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b8/5d707dcd9340f9af8286982ee21471d8013adb.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX),\n                NioTransport.NIO_WORKER_COUNT.get(settings), (s) -> new EventHandler(this::onNonChannelException, s));\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = channelFactory(clientProfileSettings, true);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = channelFactory(profileSettings, false);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"N"}],"commitId":"b1257d873bc8541b15d7c933a383344c151a1333","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-06 15:17:40","modifiedFileCount":"43","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-11-03 06:31:19","codes":[{"authorDate":"2018-11-03 06:31:19","commitOrder":5,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);\n            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);\n            clientBootstrap = createClientBootstrap(eventLoopGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, eventLoopGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-11-03 06:31:19","endLine":141,"groupId":"17985","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a4/e5731cd6226a6e43e69766a647f4c006a744f7.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            clientBootstrap = createClientBootstrap();\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"},{"authorDate":"2018-11-03 06:31:19","commitOrder":5,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TcpTransport.TRANSPORT_WORKER_THREAD_NAME_PREFIX),\n                NioTransport.NIO_WORKER_COUNT.get(settings), (s) -> new EventHandler(this::onNonChannelException, s));\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = channelFactory(clientProfileSettings, true);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = channelFactory(profileSettings, false);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-11-03 06:31:19","endLine":119,"groupId":"52388","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/f7d1e28943f2e5622dadca18b63d729afb75dc.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX),\n                NioTransport.NIO_WORKER_COUNT.get(settings), (s) -> new EventHandler(this::onNonChannelException, s));\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = channelFactory(clientProfileSettings, true);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = channelFactory(profileSettings, false);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"0166388d7427643d565dc0e0af9a8cc58c804b24","commitMessage":"@@@Use single netty event loop group for transports (#35181)\n\nCurrently we create a new netty event loop group for client connections\nand all server profiles. Each new group creates new threads for io\nprocessing. This means 2 * num of processors new threads for each group.\nA single group should be able to handle all io processing (for the\ntransports). This also brings the netty module inline with what we do\nfor nio.\n\nAdditionally.  this PR renames the worker threads to be the same for\nnetty and nio.","date":"2018-11-03 06:31:19","modifiedFileCount":"5","status":"M","submitter":"Tim Brooks"},{"authorTime":"2018-11-28 00:06:52","codes":[{"authorDate":"2018-11-03 06:31:19","commitOrder":6,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);\n            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);\n            clientBootstrap = createClientBootstrap(eventLoopGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, eventLoopGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-11-03 06:31:19","endLine":141,"groupId":"17985","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a4/e5731cd6226a6e43e69766a647f4c006a744f7.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);\n            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);\n            clientBootstrap = createClientBootstrap(eventLoopGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, eventLoopGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"N"},{"authorDate":"2018-11-28 00:06:52","commitOrder":6,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TcpTransport.TRANSPORT_WORKER_THREAD_NAME_PREFIX),\n                NioTransport.NIO_WORKER_COUNT.get(settings), (s) -> new EventHandler(this::onNonChannelException, s));\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = clientChannelFactoryFunction(clientProfileSettings);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = serverChannelFactory(profileSettings);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-11-28 00:06:52","endLine":121,"groupId":"51446","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c0/005cffc79a7ae4d6be997bcfc6ed427074e4a9.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TcpTransport.TRANSPORT_WORKER_THREAD_NAME_PREFIX),\n                NioTransport.NIO_WORKER_COUNT.get(settings), (s) -> new EventHandler(this::onNonChannelException, s));\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = channelFactory(clientProfileSettings, true);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = channelFactory(profileSettings, false);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"b6ed6ef1892150aadbb1eb330f88bc71628b345e","commitMessage":"@@@Add sni name to SSLEngine in nio transport (#35920)\n\nThis commit is related to #32517. It allows an \"sni_server_name\"\nattribute on a DiscoveryNode to be propagated to the server using\nthe TLS SNI extentsion. Prior to this commit.  this functionality\nwas only support for the netty transport. This commit adds this\nfunctionality to the security nio transport.","date":"2018-11-28 00:06:52","modifiedFileCount":"6","status":"M","submitter":"Tim Brooks"},{"authorTime":"2019-01-22 04:50:56","codes":[{"authorDate":"2018-11-03 06:31:19","commitOrder":7,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);\n            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);\n            clientBootstrap = createClientBootstrap(eventLoopGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, eventLoopGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-11-03 06:31:19","endLine":141,"groupId":"17985","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a4/e5731cd6226a6e43e69766a647f4c006a744f7.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);\n            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);\n            clientBootstrap = createClientBootstrap(eventLoopGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, eventLoopGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"N"},{"authorDate":"2019-01-22 04:50:56","commitOrder":7,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = groupFactory.getTransportGroup();\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = clientChannelFactoryFunction(clientProfileSettings);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = serverChannelFactory(profileSettings);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2019-01-22 04:50:56","endLine":111,"groupId":"51446","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/a1c716ef82afa3f2cc2afb6ecbba8f5261bd96.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = new NioGroup(daemonThreadFactory(this.settings, TcpTransport.TRANSPORT_WORKER_THREAD_NAME_PREFIX),\n                NioTransport.NIO_WORKER_COUNT.get(settings), (s) -> new EventHandler(this::onNonChannelException, s));\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = clientChannelFactoryFunction(clientProfileSettings);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = serverChannelFactory(profileSettings);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"f516d68fb28ef56271f2784715a68908570d9b87","commitMessage":"@@@Share `NioGroup` between http and transport impls (#37396)\n\nCurrently we create dedicated network threads for both the http and\ntransport implementations. Since these these threads should never\nperform blocking operations.  these threads could be shared. This commit\nmodifies the nio-transport to have 0 http workers be default. If the\ndefault configs are used.  this will cause the http transport to be run\non the transport worker threads. The http worker setting will still exist\nin case the user would like to configure dedicated workers. Additionally. \nthis commmit deletes dedicated acceptor threads. We have never had these\nfor the netty transport and they can be added back if a need is\ndetermined in the future.","date":"2019-01-22 04:50:56","modifiedFileCount":"19","status":"M","submitter":"Tim Brooks"},{"authorTime":"2019-07-31 00:41:51","codes":[{"authorDate":"2018-11-03 06:31:19","commitOrder":8,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);\n            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);\n            clientBootstrap = createClientBootstrap(eventLoopGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, eventLoopGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2018-11-03 06:31:19","endLine":141,"groupId":"17985","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a4/e5731cd6226a6e43e69766a647f4c006a744f7.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);\n            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);\n            clientBootstrap = createClientBootstrap(eventLoopGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, eventLoopGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"N"},{"authorDate":"2019-07-31 00:41:51","commitOrder":8,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = groupFactory.getTransportGroup();\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, TransportSettings.DEFAULT_PROFILE);\n            clientChannelFactory = clientChannelFactoryFunction(clientProfileSettings);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = serverChannelFactory(profileSettings);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2019-07-31 00:41:51","endLine":118,"groupId":"51446","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/de/7fbdd26493cd1b5580cdb47c5549cec388eea3.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = groupFactory.getTransportGroup();\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, \"default\");\n            clientChannelFactory = clientChannelFactoryFunction(clientProfileSettings);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = serverChannelFactory(profileSettings);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"f39e8e5dcf9bb3ffb1bf416fee9e66fb4b356141","commitMessage":"@@@Move nio channel initialization to event loop (#43780)\n\nCurrently in the transport-nio work we connect and bind channels on the\na thread before the channel is registered with a selector. Additionally. \nit is at this point that we set all the socket options. This commit\nmoves these operations onto the event-loop after the channel has been\nregistered with a selector. It attempts to set the socket options for a\nnon-server channel at registration time. If that fails.  it will attempt\nto set the options after the channel is connected. This should fix\n#41071.","date":"2019-07-31 00:41:51","modifiedFileCount":"20","status":"M","submitter":"Tim Brooks"},{"authorTime":"2019-07-31 00:41:51","codes":[{"authorDate":"2020-05-12 04:49:40","commitOrder":9,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            sharedGroup = sharedGroupFactory.getTransportGroup();\n            clientBootstrap = createClientBootstrap(sharedGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, sharedGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2020-05-12 04:49:40","endLine":139,"groupId":"17985","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6e/1b2a5eb9b8ed730da7ff271c765a79fa540bd6.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            ThreadFactory threadFactory = daemonThreadFactory(settings, TRANSPORT_WORKER_THREAD_NAME_PREFIX);\n            eventLoopGroup = new NioEventLoopGroup(workerCount, threadFactory);\n            clientBootstrap = createClientBootstrap(eventLoopGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, eventLoopGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2019-07-31 00:41:51","commitOrder":9,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = groupFactory.getTransportGroup();\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, TransportSettings.DEFAULT_PROFILE);\n            clientChannelFactory = clientChannelFactoryFunction(clientProfileSettings);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = serverChannelFactory(profileSettings);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2019-07-31 00:41:51","endLine":118,"groupId":"51446","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/de/7fbdd26493cd1b5580cdb47c5549cec388eea3.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = groupFactory.getTransportGroup();\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, TransportSettings.DEFAULT_PROFILE);\n            clientChannelFactory = clientChannelFactoryFunction(clientProfileSettings);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = serverChannelFactory(profileSettings);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"}],"commitId":"0bf4be7dd7f1f2393d65ddd01f2f052ed6f270d5","commitMessage":"@@@Share netty event loops between transports (#46346)\n\nCurrently Elasticsearch creates independent event loop groups for each\ntransport (http and internal) transport type. This is unnecessary and\ncan lead to contention when different threads access shared resources\n(ex: allocators). This commit moves to a model where.  by default.  the\nevent loops are shared between the transports. The previous behavior can\nbe attained by specifically setting the http worker count.","date":"2020-05-12 04:49:40","modifiedFileCount":"15","status":"M","submitter":"Tim Brooks"},{"authorTime":"2021-09-10 17:58:56","codes":[{"authorDate":"2021-09-10 17:58:56","commitOrder":10,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            sharedGroup = sharedGroupFactory.getTransportGroup();\n            clientBootstrap = createClientBootstrap(sharedGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, sharedGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2021-09-10 17:58:56","endLine":128,"groupId":"17985","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5b/12268f21afe701596b4d784d5ae87cf03333b4.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            sharedGroup = sharedGroupFactory.getTransportGroup();\n            clientBootstrap = createClientBootstrap(sharedGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, sharedGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            super.doStart();\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2021-09-10 17:58:56","commitOrder":10,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = groupFactory.getTransportGroup();\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, TransportSettings.DEFAULT_PROFILE);\n            clientChannelFactory = clientChannelFactoryFunction(clientProfileSettings);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = serverChannelFactory(profileSettings);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2021-09-10 17:58:56","endLine":106,"groupId":"51446","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b4/babb9bbc23042e7da829645b2a62687c08b7e4.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = groupFactory.getTransportGroup();\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, TransportSettings.DEFAULT_PROFILE);\n            clientChannelFactory = clientChannelFactoryFunction(clientProfileSettings);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = serverChannelFactory(profileSettings);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            super.doStart();\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"0d54332f98e69c7a730fef5aed57363719379c06","commitMessage":"@@@Avoid Needless Forking when Closing Transports (#66834)\n\nNo need to fork off in the changed spots if we block the calling thread anyway.\nAlso.  some other minor cleanups.","date":"2021-09-10 17:58:56","modifiedFileCount":"7","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-09-13 20:48:46","codes":[{"authorDate":"2021-09-13 20:48:46","commitOrder":11,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            sharedGroup = sharedGroupFactory.getTransportGroup();\n            clientBootstrap = createClientBootstrap(sharedGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettingsSet) {\n                    createServerBootstrap(profileSettings, sharedGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2021-09-13 20:48:46","endLine":128,"groupId":"10687","id":21,"instanceNumber":1,"isCurCommit":1,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/54/bbfb82ad9e2d0fc9561a0e58a7cf73cb94a355.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            sharedGroup = sharedGroupFactory.getTransportGroup();\n            clientBootstrap = createClientBootstrap(sharedGroup);\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                for (ProfileSettings profileSettings : profileSettings) {\n                    createServerBootstrap(profileSettings, sharedGroup);\n                    bindServer(profileSettings);\n                }\n            }\n            success = true;\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2021-09-13 20:48:46","commitOrder":11,"curCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = groupFactory.getTransportGroup();\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, TransportSettings.DEFAULT_PROFILE);\n            clientChannelFactory = clientChannelFactoryFunction(clientProfileSettings);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettingsSet) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = serverChannelFactory(profileSettings);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","date":"2021-09-13 20:48:46","endLine":106,"groupId":"10687","id":22,"instanceNumber":2,"isCurCommit":1,"methodName":"doStart","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cf/b8871f0e3181275c84ad64cbad926f8e0eaaae.src","preCode":"    protected void doStart() {\n        boolean success = false;\n        try {\n            nioGroup = groupFactory.getTransportGroup();\n\n            ProfileSettings clientProfileSettings = new ProfileSettings(settings, TransportSettings.DEFAULT_PROFILE);\n            clientChannelFactory = clientChannelFactoryFunction(clientProfileSettings);\n\n            if (NetworkService.NETWORK_SERVER.get(settings)) {\n                \r\n                for (ProfileSettings profileSettings : profileSettings) {\n                    String profileName = profileSettings.profileName;\n                    TcpChannelFactory factory = serverChannelFactory(profileSettings);\n                    profileToChannelFactory.putIfAbsent(profileName, factory);\n                    bindServer(profileSettings);\n                }\n            }\n\n            success = true;\n        } catch (IOException e) {\n            throw new ElasticsearchException(e);\n        } finally {\n            if (success == false) {\n                doStop();\n            }\n        }\n    }\n","realPath":"plugins/transport-nio/src/main/java/org/elasticsearch/transport/nio/NioTransport.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"e55edf937ab947d09617edeba926e6020909b392","commitMessage":"@@@Fix shadowed variables in various places - part 1 (#77555)\n\nPart of #19752.\n\nFix a number of locations where local variables or parameters are shadowing a field\nthat is defined in the same class.","date":"2021-09-13 20:48:46","modifiedFileCount":"44","status":"M","submitter":"Rory Hunter"}]
