[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest(new SearchRequest());\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(parseScript(o)));\n\n        parseInternalRequest(internal, request, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","date":"2018-04-26 03:22:53","endLine":77,"groupId":"31966","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/09afbb17c6c177ffb1c66acd6e36dbff1061e5.src","preCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest(new SearchRequest());\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(parseScript(o)));\n\n        parseInternalRequest(internal, request, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestUpdateByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest(new SearchRequest());\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n\n        parseInternalRequest(internal, request, consumers);\n\n        return internal;\n    }\n","date":"2018-04-26 03:22:53","endLine":67,"groupId":"31966","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e0/ebaa85193db01f5ea54437b522e55c32912744.src","preCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest(new SearchRequest());\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n\n        parseInternalRequest(internal, request, consumers);\n\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestDeleteByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-09-03 17:01:16","commitOrder":2,"curCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(parseScript(o)));\n\n        parseInternalRequest(internal, request, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","date":"2018-09-03 17:01:16","endLine":75,"groupId":"31966","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/72/a2a0d73356b80cfc18c459f157da328a40e068.src","preCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest(new SearchRequest());\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(parseScript(o)));\n\n        parseInternalRequest(internal, request, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestUpdateByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest(new SearchRequest());\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n\n        parseInternalRequest(internal, request, consumers);\n\n        return internal;\n    }\n","date":"2018-04-26 03:22:53","endLine":67,"groupId":"31966","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e0/ebaa85193db01f5ea54437b522e55c32912744.src","preCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest(new SearchRequest());\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n\n        parseInternalRequest(internal, request, consumers);\n\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestDeleteByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"}],"commitId":"e2c1beb1be5b47d124903883bc31be8a648c8c03","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-03 17:01:16","modifiedFileCount":"71","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-09-05 16:48:48","codes":[{"authorDate":"2018-09-03 17:01:16","commitOrder":3,"curCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(parseScript(o)));\n\n        parseInternalRequest(internal, request, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","date":"2018-09-03 17:01:16","endLine":75,"groupId":"31966","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/72/a2a0d73356b80cfc18c459f157da328a40e068.src","preCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(parseScript(o)));\n\n        parseInternalRequest(internal, request, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestUpdateByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"},{"authorDate":"2018-09-05 16:48:48","commitOrder":3,"curCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n\n        parseInternalRequest(internal, request, consumers);\n\n        return internal;\n    }\n","date":"2018-09-05 16:48:48","endLine":66,"groupId":"31966","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/be/232ca7c402fb98fbcb9217a39806a03e0a597c.src","preCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest(new SearchRequest());\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n\n        parseInternalRequest(internal, request, consumers);\n\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestDeleteByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"f00a28a909be71e17f0d1bc4c4a6ee15c5fdd0cb","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-05 16:48:48","modifiedFileCount":"122","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2019-06-06 22:01:24","codes":[{"authorDate":"2019-06-06 22:01:24","commitOrder":4,"curCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(parseScript(o)));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","date":"2019-06-06 22:01:24","endLine":75,"groupId":"31966","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ea/715aee7bd3a6b47c1374b7ed29d6458d9567ab.src","preCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(parseScript(o)));\n\n        parseInternalRequest(internal, request, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestUpdateByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2019-06-06 22:01:24","commitOrder":4,"curCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, consumers);\n\n        return internal;\n    }\n","date":"2019-06-06 22:01:24","endLine":66,"groupId":"31966","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/74/e600f32cd755909aa69600870d88e72109aa6b.src","preCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n\n        parseInternalRequest(internal, request, consumers);\n\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestDeleteByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"a6b5aaa3b466cf4204b80f225787504320f4ed40","commitMessage":"@@@Reindex max_docs parameter name (#41894)\n\nPreviously.  a reindex request had two different size specifications in the body:\n* Outer level.  determining the maximum documents to process\n* Inside the source element.  determining the scroll/batch size.\n\nThe outer level size has now been renamed to max_docs to\navoid confusion and clarify its semantics.  with backwards compatibility and\ndeprecation warnings for using size.\nSimilarly.  the size parameter has been renamed to max_docs for\nupdate/delete-by-query to keep the 3 interfaces consistent.\n\nFinally.  all 3 endpoints now support max_docs in both body and URL.\n\nRelates #24344\n","date":"2019-06-06 22:01:24","modifiedFileCount":"17","status":"M","submitter":"Henning Andersen"},{"authorTime":"2019-06-06 22:01:24","codes":[{"authorDate":"2020-07-14 20:47:57","commitOrder":5,"curCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(Script.parse(o)));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","date":"2020-07-14 20:47:57","endLine":73,"groupId":"31966","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f6/d5b1647fef5bbf97bf58788068fc5b7782d784.src","preCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(parseScript(o)));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestUpdateByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2019-06-06 22:01:24","commitOrder":5,"curCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, consumers);\n\n        return internal;\n    }\n","date":"2019-06-06 22:01:24","endLine":66,"groupId":"31966","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/74/e600f32cd755909aa69600870d88e72109aa6b.src","preCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, consumers);\n\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestDeleteByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"}],"commitId":"f426916b01a3aea836dddd4a820f640ed322f94d","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-14 20:47:57","modifiedFileCount":"165","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-09-01 20:12:53","codes":[{"authorDate":"2020-09-01 20:12:53","commitOrder":6,"curCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request, NamedWriteableRegistry namedWriteableRegistry) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(Script.parse(o)));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, namedWriteableRegistry, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","date":"2020-09-01 20:12:53","endLine":74,"groupId":"31966","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest@NamedWriteableRegistrynamedWriteableRegistry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/93/95a7c09730151be7930750e35af74ccc14bbe4.src","preCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(Script.parse(o)));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestUpdateByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2020-09-01 20:12:53","commitOrder":6,"curCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request, NamedWriteableRegistry namedWriteableRegistry) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, namedWriteableRegistry, consumers);\n\n        return internal;\n    }\n","date":"2020-09-01 20:12:53","endLine":71,"groupId":"31966","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest@NamedWriteableRegistrynamedWriteableRegistry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/60/de875a95e8ba20fde2470d4ec3693ab06c5c40.src","preCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, consumers);\n\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestDeleteByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"d47d450baff4951da9379234a1b04d417b7ec6af","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-09-01 20:12:53","modifiedFileCount":"119","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-09-01 20:12:53","codes":[{"authorDate":"2021-05-26 14:46:59","commitOrder":7,"curCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request, NamedWriteableRegistry namedWriteableRegistry) throws IOException {\n        if (request.getRestApiVersion() == RestApiVersion.V_7 && request.hasParam(\"type\")) {\n            request.param(\"type\");\n        }\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(Script.parse(o)));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, namedWriteableRegistry, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","date":"2021-05-26 14:46:59","endLine":73,"groupId":"10257","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest@NamedWriteableRegistrynamedWriteableRegistry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b5/19790ddc1f97be12855e9b1f68ad4489aa327f.src","preCode":"    protected UpdateByQueryRequest buildRequest(RestRequest request, NamedWriteableRegistry namedWriteableRegistry) throws IOException {\n        \r\n\r\n\r\n\r\n\n        UpdateByQueryRequest internal = new UpdateByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"script\", o -> internal.setScript(Script.parse(o)));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, namedWriteableRegistry, consumers);\n\n        internal.setPipeline(request.param(\"pipeline\"));\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestUpdateByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2020-09-01 20:12:53","commitOrder":7,"curCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request, NamedWriteableRegistry namedWriteableRegistry) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, namedWriteableRegistry, consumers);\n\n        return internal;\n    }\n","date":"2020-09-01 20:12:53","endLine":71,"groupId":"10257","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"buildRequest","params":"(RestRequestrequest@NamedWriteableRegistrynamedWriteableRegistry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/60/de875a95e8ba20fde2470d4ec3693ab06c5c40.src","preCode":"    protected DeleteByQueryRequest buildRequest(RestRequest request, NamedWriteableRegistry namedWriteableRegistry) throws IOException {\n        \r\n\r\n\r\n\r\n\n        DeleteByQueryRequest internal = new DeleteByQueryRequest();\n\n        Map<String, Consumer<Object>> consumers = new HashMap<>();\n        consumers.put(\"conflicts\", o -> internal.setConflicts((String) o));\n        consumers.put(\"max_docs\", s -> setMaxDocsValidateIdentical(internal, ((Number) s).intValue()));\n\n        parseInternalRequest(internal, request, namedWriteableRegistry, consumers);\n\n        return internal;\n    }\n","realPath":"modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestDeleteByQueryAction.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"18e30d98bbd2c5825f40e8aa659217bbaab8eb00","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-05-26 14:46:59","modifiedFileCount":"317","status":"M","submitter":"iverase"}]
