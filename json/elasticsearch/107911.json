[{"authorTime":"2019-08-09 04:28:35","codes":[{"authorDate":"2019-07-27 00:14:05","commitOrder":3,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (fieldType.typeName().equals(GeoShapeFieldMapper.CONTENT_TYPE) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + queryFieldType() + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldMapper.AbstractGeometryFieldType ft = (AbstractGeometryFieldMapper.AbstractGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, fieldName, strategy, relation, context));\n    }\n","date":"2019-07-27 00:14:05","endLine":220,"groupId":"57602","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7f/54f8d261a0be096582c933ca11f4aa357d192c.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (fieldType.typeName().equals(GeoShapeFieldMapper.CONTENT_TYPE) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + queryFieldType() + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldMapper.AbstractGeometryFieldType ft = (AbstractGeometryFieldMapper.AbstractGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, fieldName, strategy, relation, context));\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"NB"},{"authorDate":"2019-08-09 04:28:35","commitOrder":3,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (fieldType.typeName().equals(ShapeFieldMapper.CONTENT_TYPE) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + queryFieldType() + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldMapper.AbstractGeometryFieldType ft = (AbstractGeometryFieldMapper.AbstractGeometryFieldType) fieldType;\n        return ft.geometryQueryBuilder().process(shape, ft.name(), relation, context);\n    }\n","date":"2019-08-09 04:28:35","endLine":141,"groupId":"57602","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/27/21cc78cef5341883e4ffc65254d05bcfe7374c.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (fieldType.typeName().equals(ShapeFieldMapper.CONTENT_TYPE) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + queryFieldType() + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldMapper.AbstractGeometryFieldType ft = (AbstractGeometryFieldMapper.AbstractGeometryFieldType) fieldType;\n        return ft.geometryQueryBuilder().process(shape, ft.name(), relation, context);\n    }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/query/ShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"}],"commitId":"c89b66afcb43fa0caa2acf81ab137b02a686b3e5","commitMessage":"@@@[SPATIAL] New ShapeQueryBuilder for querying indexed cartesian geometry (#45108)\n\nThis commit adds a new ShapeQueryBuilder to the xpack spatial module for\nquerying arbitrary Cartesian geometries indexed using the new shape field\ntype.\n\nThe query builder extends AbstractGeometryQueryBuilder and leverages the\nShapeQueryProcessor added in the previous field mapper commit.\n\nTests are provided in ShapeQueryTests in the same manner as\nGeoShapeQueryTests and docs are updated to explain how the query works.","date":"2019-08-09 04:28:35","modifiedFileCount":"5","status":"M","submitter":"Nick Knize"},{"authorTime":"2020-03-19 00:03:52","codes":[{"authorDate":"2020-03-19 00:03:52","commitOrder":4,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (validContentTypes().contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"]. [\"\n                + NAME + \"] query supports the following types [\"\n                + String.join(\",\", validContentTypes()) +  \"]\");\n        }\n\n        final AbstractSearchableGeometryFieldType ft =\n            (AbstractSearchableGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, fieldName, strategy, relation, context));\n    }\n","date":"2020-03-19 00:03:52","endLine":213,"groupId":"48263","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d5/d940b353f90463080bda701c432d50ebb88661.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (fieldType.typeName().equals(GeoShapeFieldMapper.CONTENT_TYPE) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + queryFieldType() + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldMapper.AbstractGeometryFieldType ft = (AbstractGeometryFieldMapper.AbstractGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, fieldName, strategy, relation, context));\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"},{"authorDate":"2020-03-19 00:03:52","commitOrder":4,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        List<String> validContentTypes = validContentTypes();\n        if (validContentTypes.contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + String.join(\" or \", validContentTypes())\n                    + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldMapper.AbstractGeometryFieldType ft = (AbstractGeometryFieldMapper.AbstractGeometryFieldType) fieldType;\n        return ft.geometryQueryBuilder().process(shape, ft.name(), relation, context);\n    }\n","date":"2020-03-19 00:03:52","endLine":125,"groupId":"65034","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/2e827b8f66e26b7fc7194b87685b31ea893993.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (fieldType.typeName().equals(ShapeFieldMapper.CONTENT_TYPE) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + queryFieldType() + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldMapper.AbstractGeometryFieldType ft = (AbstractGeometryFieldMapper.AbstractGeometryFieldType) fieldType;\n        return ft.geometryQueryBuilder().process(shape, ft.name(), relation, context);\n    }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/query/ShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"}],"commitId":"d1cbdfb753045a0eafebefe22cf7aa6b235a3da3","commitMessage":"@@@Geo shape query vs geo point (#52382)\n\nEnable geo_shape query to work on geo_point fields for shapes: circle.  polygon.  multipolygon.  rectangle\n\nsee: #48928\n\nCo-Authored-By:  @iverase ","date":"2020-03-19 00:03:52","modifiedFileCount":"15","status":"M","submitter":"Dominic Page"},{"authorTime":"2020-03-19 21:27:38","codes":[{"authorDate":"2020-03-19 00:03:52","commitOrder":5,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (validContentTypes().contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"]. [\"\n                + NAME + \"] query supports the following types [\"\n                + String.join(\",\", validContentTypes()) +  \"]\");\n        }\n\n        final AbstractSearchableGeometryFieldType ft =\n            (AbstractSearchableGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, fieldName, strategy, relation, context));\n    }\n","date":"2020-03-19 00:03:52","endLine":213,"groupId":"48263","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d5/d940b353f90463080bda701c432d50ebb88661.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (validContentTypes().contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"]. [\"\n                + NAME + \"] query supports the following types [\"\n                + String.join(\",\", validContentTypes()) +  \"]\");\n        }\n\n        final AbstractSearchableGeometryFieldType ft =\n            (AbstractSearchableGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, fieldName, strategy, relation, context));\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"N"},{"authorDate":"2020-03-19 21:27:38","commitOrder":5,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        List<String> validContentTypes = validContentTypes();\n        if (validContentTypes.contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + String.join(\" or \", validContentTypes())\n                    + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldMapper.AbstractGeometryFieldType ft = (AbstractGeometryFieldMapper.AbstractGeometryFieldType) fieldType;\n        return  new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, ft.name(), relation, context));\n    }\n","date":"2020-03-19 21:27:38","endLine":126,"groupId":"65034","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/89b4ab18019e5e66b16bac660daf8675fa0367.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        List<String> validContentTypes = validContentTypes();\n        if (validContentTypes.contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + String.join(\" or \", validContentTypes())\n                    + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldMapper.AbstractGeometryFieldType ft = (AbstractGeometryFieldMapper.AbstractGeometryFieldType) fieldType;\n        return ft.geometryQueryBuilder().process(shape, ft.name(), relation, context);\n    }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/query/ShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"112ae9cb1796737e6b4d92caf17965c7cfed0f6f","commitMessage":"@@@Add support for distance queries on shape queries (#53468)\n\nWith the upgrade to Lucene 8.5.  XYShape field has support for distance queries. This change implements this new feature and removes the limitation.","date":"2020-03-19 21:27:38","modifiedFileCount":"4","status":"M","submitter":"Ignacio Vera"},{"authorTime":"2020-04-07 19:08:02","codes":[{"authorDate":"2020-03-19 00:03:52","commitOrder":6,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (validContentTypes().contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"]. [\"\n                + NAME + \"] query supports the following types [\"\n                + String.join(\",\", validContentTypes()) +  \"]\");\n        }\n\n        final AbstractSearchableGeometryFieldType ft =\n            (AbstractSearchableGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, fieldName, strategy, relation, context));\n    }\n","date":"2020-03-19 00:03:52","endLine":213,"groupId":"48263","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d5/d940b353f90463080bda701c432d50ebb88661.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (validContentTypes().contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"]. [\"\n                + NAME + \"] query supports the following types [\"\n                + String.join(\",\", validContentTypes()) +  \"]\");\n        }\n\n        final AbstractSearchableGeometryFieldType ft =\n            (AbstractSearchableGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, fieldName, strategy, relation, context));\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"N"},{"authorDate":"2020-04-07 19:08:02","commitOrder":6,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        List<String> validContentTypes = validContentTypes();\n        if (validContentTypes.contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + String.join(\" or \", validContentTypes())\n                    + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractSearchableGeometryFieldType ft = (AbstractSearchableGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, ft.name(), relation, context));\n    }\n","date":"2020-04-07 19:08:02","endLine":127,"groupId":"65034","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/48/0e4b25445018b8bb9dc18b02fd57e7a7643a01.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        List<String> validContentTypes = validContentTypes();\n        if (validContentTypes.contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + String.join(\" or \", validContentTypes())\n                    + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldMapper.AbstractGeometryFieldType ft = (AbstractGeometryFieldMapper.AbstractGeometryFieldType) fieldType;\n        return  new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, ft.name(), relation, context));\n    }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/query/ShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"6182db5b77b4f349cb7ec2d52a7e3a9a42dff47e","commitMessage":"@@@Add new point field. (#53804)\n\nThis commit adds a new point field that is able to index arbitrary pair of values (x/y)\n in the cartesian space. It only supports filtering using shape queries at the moment.","date":"2020-04-07 19:08:02","modifiedFileCount":"5","status":"M","submitter":"Ignacio Vera"},{"authorTime":"2020-04-24 00:40:04","codes":[{"authorDate":"2020-04-24 00:40:04","commitOrder":7,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (validContentTypes().contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"]. [\"\n                + NAME + \"] query supports the following types [\"\n                + String.join(\",\", validContentTypes()) +  \"]\");\n        }\n\n        final AbstractGeometryFieldType ft =\n            (AbstractGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, fieldName, strategy, relation, context));\n    }\n","date":"2020-04-24 00:40:04","endLine":213,"groupId":"48263","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/fa9aa6675d0e22da33d3faddb48f12616b5f95.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (validContentTypes().contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"]. [\"\n                + NAME + \"] query supports the following types [\"\n                + String.join(\",\", validContentTypes()) +  \"]\");\n        }\n\n        final AbstractSearchableGeometryFieldType ft =\n            (AbstractSearchableGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, fieldName, strategy, relation, context));\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"},{"authorDate":"2020-04-24 00:40:04","commitOrder":7,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        List<String> validContentTypes = validContentTypes();\n        if (validContentTypes.contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + String.join(\" or \", validContentTypes())\n                    + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldType ft = (AbstractGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, ft.name(), relation, context));\n    }\n","date":"2020-04-24 00:40:04","endLine":127,"groupId":"65034","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/83/74f936c4ad9fe8312172a21c815db653080bd1.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        List<String> validContentTypes = validContentTypes();\n        if (validContentTypes.contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + String.join(\" or \", validContentTypes())\n                    + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractSearchableGeometryFieldType ft = (AbstractSearchableGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, ft.name(), relation, context));\n    }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/query/ShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"eb0b2c8f6996ff90becc8875f20ac34b925f5795","commitMessage":"@@@Refactor Spatial Field Mappers (#55621)\n\nThis commit refactors all spatial Field Mappers to a common \nAbstractGeometryFieldMapper that implements shared parameter functionality \n(e.g..  ignore_malformed.  ignore_z_value) and provides a common framework for \noverriding type parsing.  and building in xpack. Common shape functionality is \nimplemented in a new AbstractShapeGeometryFieldMapper that is reused and \noverridden in GeoShapeFieldMapper.  GeoShapeFieldMapperWithDocValues.  \nLegacyGeoShapeFieldMapper.  and ShapeFieldMapper. This abstraction provides a \nreusable foundation for adding new xpack features; such as coordinate reference \nsystem support.","date":"2020-04-24 00:40:04","modifiedFileCount":"30","status":"M","submitter":"Nick Knize"},{"authorTime":"2020-10-01 15:27:56","codes":[{"authorDate":"2020-10-01 15:27:56","commitOrder":8,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if ((fieldType instanceof GeoShapeQueryable) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"] for [\" + NAME + \"] query\");\n        }\n        final GeoShapeQueryable ft = (GeoShapeQueryable) fieldType;\n        return new ConstantScoreQuery(ft.geoShapeQuery(shape, fieldName, strategy, relation, context));\n    }\n","date":"2020-10-01 15:27:56","endLine":191,"groupId":"35662","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/42/e5271833b622d378b9edee367db5a8182f0f97.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if (validContentTypes().contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"]. [\"\n                + NAME + \"] query supports the following types [\"\n                + String.join(\",\", validContentTypes()) +  \"]\");\n        }\n\n        final AbstractGeometryFieldType ft =\n            (AbstractGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, fieldName, strategy, relation, context));\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2020-10-01 15:27:56","commitOrder":8,"curCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if ((fieldType instanceof ShapeQueryable) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"] for [\" + NAME + \"] query\");\n        }\n        final ShapeQueryable ft = (ShapeQueryable) fieldType;\n        return new ConstantScoreQuery(ft.shapeQuery(shape, fieldType.name(), relation, context));\n    }\n","date":"2020-10-01 15:27:56","endLine":111,"groupId":"35662","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(QueryShardContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/45/e1007686ec32f369077ea4481d8d3bac3878a9.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        List<String> validContentTypes = validContentTypes();\n        if (validContentTypes.contains(fieldType.typeName()) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is not of type [\" + String.join(\" or \", validContentTypes())\n                    + \"] but of type [\" + fieldType.typeName() + \"]\");\n        }\n\n        final AbstractGeometryFieldType ft = (AbstractGeometryFieldType) fieldType;\n        return new ConstantScoreQuery(ft.geometryQueryBuilder().process(shape, ft.name(), relation, context));\n    }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/query/ShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"31a77869f11538874bf15da3134d1a5658249cc6","commitMessage":"@@@Remove dependency of Geometry queries with mapped type names (#63077)\n\n It extracts the query capabilities from AbstractGeometryFieldType into two new interfaces.  GeoshapeQueryable and ShapeQueryable. Those interfaces are implemented by the final mappers.","date":"2020-10-01 15:27:56","modifiedFileCount":"19","status":"M","submitter":"Ignacio Vera"},{"authorTime":"2021-01-15 01:11:59","codes":[{"authorDate":"2021-01-15 01:11:59","commitOrder":9,"curCode":"    public Query buildShapeQuery(SearchExecutionContext context, MappedFieldType fieldType) {\n        if ((fieldType instanceof GeoShapeQueryable) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"] for [\" + NAME + \"] query\");\n        }\n        final GeoShapeQueryable ft = (GeoShapeQueryable) fieldType;\n        return new ConstantScoreQuery(ft.geoShapeQuery(shape, fieldName, strategy, relation, context));\n    }\n","date":"2021-01-15 01:11:59","endLine":191,"groupId":"35662","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(SearchExecutionContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3e/df7f3d73430d614cab71b230a8e145c0d753e9.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if ((fieldType instanceof GeoShapeQueryable) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"] for [\" + NAME + \"] query\");\n        }\n        final GeoShapeQueryable ft = (GeoShapeQueryable) fieldType;\n        return new ConstantScoreQuery(ft.geoShapeQuery(shape, fieldName, strategy, relation, context));\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2021-01-15 01:11:59","commitOrder":9,"curCode":"    public Query buildShapeQuery(SearchExecutionContext context, MappedFieldType fieldType) {\n        if ((fieldType instanceof ShapeQueryable) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"] for [\" + NAME + \"] query\");\n        }\n        final ShapeQueryable ft = (ShapeQueryable) fieldType;\n        return new ConstantScoreQuery(ft.shapeQuery(shape, fieldType.name(), relation, context));\n    }\n","date":"2021-01-15 01:11:59","endLine":111,"groupId":"35662","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(SearchExecutionContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a8/8138dd37f492d853f035129122e4539b6a0335.src","preCode":"    public Query buildShapeQuery(QueryShardContext context, MappedFieldType fieldType) {\n        if ((fieldType instanceof ShapeQueryable) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"] for [\" + NAME + \"] query\");\n        }\n        final ShapeQueryable ft = (ShapeQueryable) fieldType;\n        return new ConstantScoreQuery(ft.shapeQuery(shape, fieldType.name(), relation, context));\n    }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/query/ShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"5852fbedf52c77b0a76c2c731fdd4982fb65cd87","commitMessage":"@@@Rename QueryShardContext -> SearchExecutionContext. (#67490)\n\nWe decided to rename `QueryShardContext` to clarify that it supports all parts\nof search request execution. Before there was confusion over whether it should\nonly be used for building queries.  or maybe only used in the query phase. This\nPR also updates the javadocs.\n\nCloses #64740.","date":"2021-01-15 01:11:59","modifiedFileCount":"357","status":"M","submitter":"Julie Tibshirani"},{"authorTime":"2021-01-15 01:11:59","codes":[{"authorDate":"2021-07-08 13:19:38","commitOrder":10,"curCode":"    public Query buildShapeQuery(SearchExecutionContext context, MappedFieldType fieldType) {\n        if ((fieldType instanceof GeoShapeQueryable) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"] for [\" + NAME + \"] query\");\n        }\n        final GeoShapeQueryable ft = (GeoShapeQueryable) fieldType;\n        return new ConstantScoreQuery(ft.geoShapeQuery(shape, fieldType.name(), strategy, relation, context));\n    }\n","date":"2021-07-08 13:19:38","endLine":164,"groupId":"107911","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"buildShapeQuery","params":"(SearchExecutionContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9d/c685040102f4041b5b56b766091aea6dbb0f07.src","preCode":"    public Query buildShapeQuery(SearchExecutionContext context, MappedFieldType fieldType) {\n        if ((fieldType instanceof GeoShapeQueryable) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"] for [\" + NAME + \"] query\");\n        }\n        final GeoShapeQueryable ft = (GeoShapeQueryable) fieldType;\n        return new ConstantScoreQuery(ft.geoShapeQuery(shape, fieldName, strategy, relation, context));\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2021-01-15 01:11:59","commitOrder":10,"curCode":"    public Query buildShapeQuery(SearchExecutionContext context, MappedFieldType fieldType) {\n        if ((fieldType instanceof ShapeQueryable) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"] for [\" + NAME + \"] query\");\n        }\n        final ShapeQueryable ft = (ShapeQueryable) fieldType;\n        return new ConstantScoreQuery(ft.shapeQuery(shape, fieldType.name(), relation, context));\n    }\n","date":"2021-01-15 01:11:59","endLine":111,"groupId":"107911","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"buildShapeQuery","params":"(SearchExecutionContextcontext@MappedFieldTypefieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a8/8138dd37f492d853f035129122e4539b6a0335.src","preCode":"    public Query buildShapeQuery(SearchExecutionContext context, MappedFieldType fieldType) {\n        if ((fieldType instanceof ShapeQueryable) == false) {\n            throw new QueryShardException(context,\n                \"Field [\" + fieldName + \"] is of unsupported type [\" + fieldType.typeName() + \"] for [\" + NAME + \"] query\");\n        }\n        final ShapeQueryable ft = (ShapeQueryable) fieldType;\n        return new ConstantScoreQuery(ft.shapeQuery(shape, fieldType.name(), relation, context));\n    }\n","realPath":"x-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/index/query/ShapeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"N"}],"commitId":"ebe8a9b58f58796298044f75edf628d1772edcb3","commitMessage":"@@@Alias field does not work with geo_shape query (#74895)\n\nFixes the resolution of the field name in the geo_shape query.","date":"2021-07-08 13:19:38","modifiedFileCount":"6","status":"M","submitter":"Ignacio Vera"}]
