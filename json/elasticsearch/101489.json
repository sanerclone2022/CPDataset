[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, true);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n            Query childFilter = parentIdFieldMapper.getChildrenFilter();\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetDVOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n                HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n                fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a parent\");\n            }\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":197,"groupId":"19771","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ac/a5f4a56d393992eb5a6d0f0b1810e02af024d0.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, true);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n            Query childFilter = parentIdFieldMapper.getChildrenFilter();\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetDVOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n                HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n                fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a parent\");\n            }\n        }\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, false);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query childFilter = parentIdFieldMapper.getChildFilter(type);\n            Query innerQuery = Queries.filtered(query.toQuery(context), childFilter);\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetDVOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new LateParsingQuery(parentFilter, innerQuery, minChildren(), maxChildren(),\n                fieldType.name(), scoreMode, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":333,"groupId":"35510","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/eb/feb5ab019315b9ec00d22a8e3401757e941a11.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, false);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query childFilter = parentIdFieldMapper.getChildFilter(type);\n            Query innerQuery = Queries.filtered(query.toQuery(context), childFilter);\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetDVOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new LateParsingQuery(parentFilter, innerQuery, minChildren(), maxChildren(),\n                fieldType.name(), scoreMode, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":306,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2020-02-13 01:06:04","codes":[{"authorDate":"2020-02-13 01:06:04","commitOrder":2,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, true);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n            Query childFilter = parentIdFieldMapper.getChildrenFilter();\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetDVOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n                HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n                fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a parent\");\n            }\n        }\n    }\n","date":"2020-02-13 01:06:04","endLine":196,"groupId":"19771","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7d/d3a6dbbd5a44865c5b7d3f48438e5fd58907a6.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, true);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n            Query childFilter = parentIdFieldMapper.getChildrenFilter();\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetDVOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n                HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n                fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a parent\");\n            }\n        }\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2020-02-13 01:06:04","commitOrder":2,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, false);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query childFilter = parentIdFieldMapper.getChildFilter(type);\n            Query innerQuery = Queries.filtered(query.toQuery(context), childFilter);\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetDVOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new LateParsingQuery(parentFilter, innerQuery, minChildren(), maxChildren(),\n                fieldType.name(), scoreMode, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n    }\n","date":"2020-02-13 01:06:04","endLine":332,"groupId":"35510","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/80/f389521e75a1364d91a3c42c4476aa2135c71d.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, false);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query childFilter = parentIdFieldMapper.getChildFilter(type);\n            Query innerQuery = Queries.filtered(query.toQuery(context), childFilter);\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetDVOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new LateParsingQuery(parentFilter, innerQuery, minChildren(), maxChildren(),\n                fieldType.name(), scoreMode, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"M"}],"commitId":"a8b39ed842c7770bd9275958c9f747502fd9a3ea","commitMessage":"@@@Add a cluster setting to disallow expensive queries (#51385)\n\nAdd a new cluster setting `search.allow_expensive_queries` which by\ndefault is `true`. If set to `false`.  certain queries that have \nusually slow performance cannot be executed and an error message\nis returned.\n\n- Queries that need to do linear scans to identify matches:\n  - Script queries\n- Queries that have a high up-front cost:\n  - Fuzzy queries\n  - Regexp queries\n  - Prefix queries (without index_prefixes enabled\n  - Wildcard queries\n  - Range queries on text and keyword fields\n- Joining queries\n  - HasParent queries\n  - HasChild queries\n  - ParentId queries\n  - Nested queries\n- Queries on deprecated 6.x geo shapes (using PrefixTree implementation)\n- Queries that may have a high per-document cost:\n  - Script score queries\n  - Percolate queries\n\nCloses: #29050","date":"2020-02-13 01:06:04","modifiedFileCount":"66","status":"M","submitter":"Marios Trivyzas"},{"authorTime":"2020-05-13 22:09:38","codes":[{"authorDate":"2020-05-13 22:09:38","commitOrder":3,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, true);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n            Query childFilter = parentIdFieldMapper.getChildrenFilter();\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n                HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n                fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a parent\");\n            }\n        }\n    }\n","date":"2020-05-13 22:09:38","endLine":196,"groupId":"19771","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0e/66b3d35a1746ce3aedb3f8876ab95b26548ab7.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, true);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n            Query childFilter = parentIdFieldMapper.getChildrenFilter();\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetDVOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n                HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n                fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a parent\");\n            }\n        }\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2020-05-13 22:09:38","commitOrder":3,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, false);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query childFilter = parentIdFieldMapper.getChildFilter(type);\n            Query innerQuery = Queries.filtered(query.toQuery(context), childFilter);\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new LateParsingQuery(parentFilter, innerQuery, minChildren(), maxChildren(),\n                fieldType.name(), scoreMode, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n    }\n","date":"2020-05-13 22:09:38","endLine":332,"groupId":"35510","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ec/8fc501e624145f83a236037f8930c434eb156c.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, false);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query childFilter = parentIdFieldMapper.getChildFilter(type);\n            Query innerQuery = Queries.filtered(query.toQuery(context), childFilter);\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetDVOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new LateParsingQuery(parentFilter, innerQuery, minChildren(), maxChildren(),\n                fieldType.name(), scoreMode, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"M"}],"commitId":"954afd94fe859209522a6d63fcb15dd9ef6c9df2","commitMessage":"@@@Clean up DocValuesIndexFieldData (#56372)\n\n","date":"2020-05-13 22:09:38","modifiedFileCount":"34","status":"M","submitter":"Mark Tozzi"},{"authorTime":"2020-10-13 01:11:44","codes":[{"authorDate":"2020-10-13 01:11:44","commitOrder":4,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context);\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, true);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n            Query childFilter = parentIdFieldMapper.getChildrenFilter();\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n                HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n                fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a parent\");\n            }\n        }\n    }\n","date":"2020-10-13 01:11:44","endLine":196,"groupId":"19771","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/35/4fac99b81d15f48b9246e4d7212179b12bb167.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, true);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n            Query childFilter = parentIdFieldMapper.getChildrenFilter();\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n                HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n                fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a parent\");\n            }\n        }\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2020-10-13 01:11:44","commitOrder":4,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context);\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, false);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query childFilter = parentIdFieldMapper.getChildFilter(type);\n            Query innerQuery = Queries.filtered(query.toQuery(context), childFilter);\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new LateParsingQuery(parentFilter, innerQuery, minChildren(), maxChildren(),\n                fieldType.name(), scoreMode, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n    }\n","date":"2020-10-13 01:11:44","endLine":332,"groupId":"35510","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5e/b4985953bf1cf68329f43fb7460085fef299c4.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context.getMapperService());\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, false);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query childFilter = parentIdFieldMapper.getChildFilter(type);\n            Query innerQuery = Queries.filtered(query.toQuery(context), childFilter);\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new LateParsingQuery(parentFilter, innerQuery, minChildren(), maxChildren(),\n                fieldType.name(), scoreMode, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"M"}],"commitId":"4aaffc6a3deef28e8dedd3d9211951e3db0e2d8e","commitMessage":"@@@Consider query when optimizing date rounding (#63403)\n\nBefore this change we inspected the index when optimizing\n`date_histogram` aggregations.  precalculating the divisions for the\nbuckets for the entire range of dates on the index so long as there\naren't a ton of these buckets. This works very well when you query all\nof the dates in the index which is quite common - after all.  folks\nfrequently want to query a week of data and have daily indices.\n\nBut it doesn't work as well when the index is much larger than the\nquery. This is quite common when dumping data into ES just to\ninvestigate it but less common in the traditional time series use case.\nBut even there it still happens.  it is just less impactful. Consider\nthe default query produced by Kibana's Discover app: a range of 15\nminutes and a interval of 30 seconds. This optimization saves something\nlike 3 to 12 nanoseconds per document.  so that 15 minutes would have to\nhave hundreds of millions of documents for it to be impactful.\n\nAnyway.  this commit takes the query into account when precalculating the\nbuckets. Mostly this is good when you have \"dirty data\". Immagine\nloading 80 billion docs in an index to investigate them. Most of them\nhave dates around 2015 and 2016 but some have dates in 1970 and\nothers have dates in 2030. These outlier dates are \"dirty\" \"garbage\".\nWell.  without this change a `date_histogram` across many of these docs\nis significantly slowed down because we don't precalculate the range due\nto the outliers. That's just rude! So this change takes the query into\naccount.\n\nThe bulk of the code change here is plumbing the query into place. It\nturns out that its a *ton* of plumbing.  so instead of just adding a\n`Query` member in hundreds of args replace `QueryShardContext` with a\nnew `AggregationContext` which does two things:\n1. Has the top level `Query`.\n2. Exposes just the parts of `QueryShardContext` that we actually need\n   to run aggregation. This lets us simplify a few tests now and will\n   let us simplify many.  many tests later.\n","date":"2020-10-13 01:11:44","modifiedFileCount":"156","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-10-19 19:17:48","codes":[{"authorDate":"2020-10-19 19:17:48","commitOrder":5,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        Joiner joiner = Joiner.getJoiner(context);\n        if (joiner == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n        if (joiner.parentTypeExists(parentType) == false) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joiner.getJoinField() +\n                    \"] doesn't hold [\" + parentType + \"] as a parent\");\n            }\n        }\n\n        Query parentFilter = joiner.filter(parentType);\n        Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n        Query childFilter = joiner.childrenFilter(parentType);\n        MappedFieldType fieldType = context.getFieldType(joiner.childJoinField(parentType));\n        final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n        return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n            HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n            fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n    }\n","date":"2020-10-19 19:17:48","endLine":193,"groupId":"20208","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0d/7e6852b2aac4f374f980bb99ed7bd51ff46c36.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context);\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, true);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n            Query childFilter = parentIdFieldMapper.getChildrenFilter();\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n                HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n                fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a parent\");\n            }\n        }\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"},{"authorDate":"2020-10-19 19:17:48","commitOrder":5,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        Joiner joiner = Joiner.getJoiner(context);\n        if (joiner == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        if (joiner.childTypeExists(type) == false) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joiner.getJoinField() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n\n        String parentJoinField = joiner.parentJoinField(type);\n        if (context.isFieldMapped(parentJoinField) == false) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            }\n            throw new QueryShardException(context, \"[\" + NAME + \"] no parent join field [\" + parentJoinField + \"] configured\");\n        }\n\n        Query parentFilter = joiner.parentFilter(type);\n        Query childFilter = joiner.filter(type);\n        Query filteredQuery = Queries.filtered(query.toQuery(context), childFilter);\n        MappedFieldType ft = context.getFieldType(parentJoinField);\n        final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(ft);\n        return new LateParsingQuery(parentFilter, filteredQuery, minChildren, maxChildren,\n            parentJoinField, scoreMode, fieldData, context.getSearchSimilarity());\n    }\n","date":"2020-10-19 19:17:48","endLine":338,"groupId":"27088","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/57/35e20457265b2b421cd08ca64c34ca41ec4118.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        ParentJoinFieldMapper joinFieldMapper = ParentJoinFieldMapper.getMapper(context);\n        if (joinFieldMapper == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        ParentIdFieldMapper parentIdFieldMapper = joinFieldMapper.getParentIdFieldMapper(type, false);\n        if (parentIdFieldMapper != null) {\n            Query parentFilter = parentIdFieldMapper.getParentFilter();\n            Query childFilter = parentIdFieldMapper.getChildFilter(type);\n            Query innerQuery = Queries.filtered(query.toQuery(context), childFilter);\n            MappedFieldType fieldType = parentIdFieldMapper.fieldType();\n            final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n            return new LateParsingQuery(parentFilter, innerQuery, minChildren(), maxChildren(),\n                fieldType.name(), scoreMode, fieldData, context.getSearchSimilarity());\n        } else {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joinFieldMapper.name() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":299,"status":"M"}],"commitId":"70d88ef62d7ea287907c98b3f3263e3b08e60f3f","commitMessage":"@@@Rework parent-join to not require access to DocumentMapper (#63738)\n\nParent joins work using a cluster of field mappers: the join field itself;\na set of subfields that allow multiple relationships between parents and\nchildren to be defined; and a metadata field that acts to only allow a\nsingle join field per index to be defined. The various queries and\naggregations that use this infrastructure retrieve the join field mapper\nvia a static method and then build themselves by pulling individual\nrelationship mappers from this main mapper.\n\nUsing mappers rather than MappedFieldTypes means that we need to\nexpose DocumentMapper at search time.  which is something we are\ntrying to avoid. This commit refactors things so that the join relations\nare encapsulated in a Joiner object.  which lives instead on the\nMappedFieldType associated with the metadata join field. Rather than\nusing the ParentJoinFieldMapper and connected ParentIdFieldMappers. \nwe can now build queries and aggregations using this Joiner object. \nretrieved via the QueryShardContext or AggregationContext using\na static helper method on Joiner itself.","date":"2020-10-19 19:17:48","modifiedFileCount":"16","status":"M","submitter":"Alan Woodward"},{"authorTime":"2021-01-15 01:11:59","codes":[{"authorDate":"2021-01-15 01:11:59","commitOrder":6,"curCode":"    protected Query doToQuery(SearchExecutionContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        Joiner joiner = Joiner.getJoiner(context);\n        if (joiner == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n        if (joiner.parentTypeExists(parentType) == false) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joiner.getJoinField() +\n                    \"] doesn't hold [\" + parentType + \"] as a parent\");\n            }\n        }\n\n        Query parentFilter = joiner.filter(parentType);\n        Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n        Query childFilter = joiner.childrenFilter(parentType);\n        MappedFieldType fieldType = context.getFieldType(joiner.childJoinField(parentType));\n        final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n        return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n            HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n            fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n    }\n","date":"2021-01-15 01:11:59","endLine":193,"groupId":"101489","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"doToQuery","params":"(SearchExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/48/d496dd7e95c00897bd819a8f292bdea6d0ac7d.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        Joiner joiner = Joiner.getJoiner(context);\n        if (joiner == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n        if (joiner.parentTypeExists(parentType) == false) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joiner.getJoinField() +\n                    \"] doesn't hold [\" + parentType + \"] as a parent\");\n            }\n        }\n\n        Query parentFilter = joiner.filter(parentType);\n        Query innerQuery = Queries.filtered(query.toQuery(context), parentFilter);\n        Query childFilter = joiner.childrenFilter(parentType);\n        MappedFieldType fieldType = context.getFieldType(joiner.childJoinField(parentType));\n        final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(fieldType);\n        return new HasChildQueryBuilder.LateParsingQuery(childFilter, innerQuery,\n            HasChildQueryBuilder.DEFAULT_MIN_CHILDREN, HasChildQueryBuilder.DEFAULT_MAX_CHILDREN,\n            fieldType.name(), score ? ScoreMode.Max : ScoreMode.None, fieldData, context.getSearchSimilarity());\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"},{"authorDate":"2021-01-15 01:11:59","commitOrder":6,"curCode":"    protected Query doToQuery(SearchExecutionContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        Joiner joiner = Joiner.getJoiner(context);\n        if (joiner == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        if (joiner.childTypeExists(type) == false) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joiner.getJoinField() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n\n        String parentJoinField = joiner.parentJoinField(type);\n        if (context.isFieldMapped(parentJoinField) == false) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            }\n            throw new QueryShardException(context, \"[\" + NAME + \"] no parent join field [\" + parentJoinField + \"] configured\");\n        }\n\n        Query parentFilter = joiner.parentFilter(type);\n        Query childFilter = joiner.filter(type);\n        Query filteredQuery = Queries.filtered(query.toQuery(context), childFilter);\n        MappedFieldType ft = context.getFieldType(parentJoinField);\n        final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(ft);\n        return new LateParsingQuery(parentFilter, filteredQuery, minChildren, maxChildren,\n            parentJoinField, scoreMode, fieldData, context.getSearchSimilarity());\n    }\n","date":"2021-01-15 01:11:59","endLine":338,"groupId":"101489","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(SearchExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/13814bd1770066d09e7d1356bebae08196b10e.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (context.allowExpensiveQueries() == false) {\n            throw new ElasticsearchException(\"[joining] queries cannot be executed when '\" +\n                    ALLOW_EXPENSIVE_QUERIES.getKey() + \"' is set to false.\");\n        }\n\n        Joiner joiner = Joiner.getJoiner(context);\n        if (joiner == null) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] no join field has been configured\");\n            }\n        }\n\n        if (joiner.childTypeExists(type) == false) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            } else {\n                throw new QueryShardException(context, \"[\" + NAME + \"] join field [\" + joiner.getJoinField() +\n                    \"] doesn't hold [\" + type + \"] as a child\");\n            }\n        }\n\n        String parentJoinField = joiner.parentJoinField(type);\n        if (context.isFieldMapped(parentJoinField) == false) {\n            if (ignoreUnmapped) {\n                return new MatchNoDocsQuery();\n            }\n            throw new QueryShardException(context, \"[\" + NAME + \"] no parent join field [\" + parentJoinField + \"] configured\");\n        }\n\n        Query parentFilter = joiner.parentFilter(type);\n        Query childFilter = joiner.filter(type);\n        Query filteredQuery = Queries.filtered(query.toQuery(context), childFilter);\n        MappedFieldType ft = context.getFieldType(parentJoinField);\n        final SortedSetOrdinalsIndexFieldData fieldData = context.getForField(ft);\n        return new LateParsingQuery(parentFilter, filteredQuery, minChildren, maxChildren,\n            parentJoinField, scoreMode, fieldData, context.getSearchSimilarity());\n    }\n","realPath":"modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":299,"status":"M"}],"commitId":"5852fbedf52c77b0a76c2c731fdd4982fb65cd87","commitMessage":"@@@Rename QueryShardContext -> SearchExecutionContext. (#67490)\n\nWe decided to rename `QueryShardContext` to clarify that it supports all parts\nof search request execution. Before there was confusion over whether it should\nonly be used for building queries.  or maybe only used in the query phase. This\nPR also updates the javadocs.\n\nCloses #64740.","date":"2021-01-15 01:11:59","modifiedFileCount":"357","status":"M","submitter":"Julie Tibshirani"}]
