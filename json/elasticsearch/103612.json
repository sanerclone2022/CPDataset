[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            MultiGeoPointValues fieldValues = ((AbstractAtomicGeoPointFieldData)fieldData).getGeoPointValues();\n            assertValues(fieldValues, 0);\n            assertValues(fieldValues, 1);\n            assertValues(fieldValues, 2);\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":199,"groupId":"57756","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultiValueAllSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3c/362d48c118aca1d1b0b4e5e6737f44a4e087ee.src","preCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            MultiGeoPointValues fieldValues = ((AbstractAtomicGeoPointFieldData)fieldData).getGeoPointValues();\n            assertValues(fieldValues, 0);\n            assertValues(fieldValues, 1);\n            assertValues(fieldValues, 2);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/GeoFieldDataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":171,"groupId":"57756","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSingleValueWithMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/6328feabc865db8afb2692bf94aeaebd89f8af.src","preCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-10 07:44:12","codes":[{"authorDate":"2018-07-10 07:44:12","commitOrder":2,"curCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            MultiGeoPointValues fieldValues = ((AbstractAtomicGeoPointFieldData)fieldData).getGeoPointValues();\n            assertValues(fieldValues, 0);\n            assertValues(fieldValues, 1);\n            assertValues(fieldValues, 2);\n        }\n    }\n","date":"2018-07-10 07:44:12","endLine":200,"groupId":"57756","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultiValueAllSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/d2474886381141c8df9dbd73379f0acbfcecb5.src","preCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            MultiGeoPointValues fieldValues = ((AbstractAtomicGeoPointFieldData)fieldData).getGeoPointValues();\n            assertValues(fieldValues, 0);\n            assertValues(fieldValues, 1);\n            assertValues(fieldValues, 2);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/GeoFieldDataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"},{"authorDate":"2018-07-10 07:44:12","commitOrder":2,"curCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","date":"2018-07-10 07:44:12","endLine":172,"groupId":"57756","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSingleValueWithMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cd/1dc01d9ef4ac161287b2906f8dc451489fc146.src","preCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"}],"commitId":"e9cd0556c167b257bb588af5547923e5f13a99ca","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-10 07:44:12","modifiedFileCount":"627","status":"M","submitter":"Tal Levy"},{"authorTime":"2020-03-17 20:25:51","codes":[{"authorDate":"2020-03-17 20:25:51","commitOrder":3,"curCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            LeafFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            MultiGeoPointValues fieldValues = ((AbstractLeafGeoPointFieldData)fieldData).getGeoPointValues();\n            assertValues(fieldValues, 0);\n            assertValues(fieldValues, 1);\n            assertValues(fieldValues, 2);\n        }\n    }\n","date":"2020-03-17 20:25:51","endLine":200,"groupId":"103612","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMultiValueAllSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/68/a91402f33d909805768792941750ce5b239f8c.src","preCode":"    public void testMultiValueAllSet() throws Exception {\n        fillMultiValueAllSet();\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            MultiGeoPointValues fieldValues = ((AbstractAtomicGeoPointFieldData)fieldData).getGeoPointValues();\n            assertValues(fieldValues, 0);\n            assertValues(fieldValues, 1);\n            assertValues(fieldValues, 2);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/GeoFieldDataTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"},{"authorDate":"2020-03-17 20:25:51","commitOrder":3,"curCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            LeafFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","date":"2020-03-17 20:25:51","endLine":172,"groupId":"103612","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSingleValueWithMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/49/8884b6cffaae8cd1c223bc57ed77c13d017b04.src","preCode":"    public void testSingleValueWithMissing() throws Exception {\n        fillSingleValueWithMissing();\n        IndexFieldData<?> indexFieldData = getForField(\"value\");\n        List<LeafReaderContext> readerContexts = refreshReader();\n        for (LeafReaderContext readerContext : readerContexts) {\n            AtomicFieldData fieldData = indexFieldData.load(readerContext);\n            assertThat(fieldData.ramBytesUsed(), greaterThanOrEqualTo(minRamBytesUsed()));\n\n            SortedBinaryDocValues bytesValues = fieldData.getBytesValues();\n\n            assertValues(bytesValues, 0, two());\n            assertValues(bytesValues, 1, Strings.EMPTY_ARRAY);\n            assertValues(bytesValues, 2, three());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"}],"commitId":"3e607d9e93c6319fcd606714aabca4af91f133d3","commitMessage":"@@@Rename AtomicFieldData to LeafFieldData (#53554)\n\nThis conforms with lucene's LeafReader naming convention.  and\nmatches other per-segment structures in elasticsearch.","date":"2020-03-17 20:25:51","modifiedFileCount":"59","status":"M","submitter":"Alan Woodward"}]
