[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        if (!super.equals(o)) return false;\n        IndexVersionValue that = (IndexVersionValue) o;\n        return Objects.equals(translogLocation, that.translogLocation);\n    }\n","date":"2018-04-26 03:22:53","endLine":50,"groupId":"28092","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/58c84c16bbd90a622472b4fe996fe11b2e7c8a.src","preCode":"    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        if (!super.equals(o)) return false;\n        IndexVersionValue that = (IndexVersionValue) o;\n        return Objects.equals(translogLocation, that.translogLocation);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/engine/IndexVersionValue.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            if (!super.equals(o)) return false;\n\n            IntMinMaxTrackingBasicValue that = (IntMinMaxTrackingBasicValue) o;\n\n            if (minValue != that.minValue) return false;\n            return maxValue == that.maxValue;\n\n        }\n","date":"2018-04-26 03:22:53","endLine":435,"groupId":"28092","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4e/e2e473890e2d24848e01c6e01a3d099b2e343e.src","preCode":"        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            if (!super.equals(o)) return false;\n\n            IntMinMaxTrackingBasicValue that = (IntMinMaxTrackingBasicValue) o;\n\n            if (minValue != that.minValue) return false;\n            return maxValue == that.maxValue;\n\n        }\n","realPath":"test/logger-usage/src/main/java/org/elasticsearch/test/loggerusage/ESLoggerUsageChecker.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":425,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2021-01-26 22:47:09","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        if (!super.equals(o)) return false;\n        IndexVersionValue that = (IndexVersionValue) o;\n        return Objects.equals(translogLocation, that.translogLocation);\n    }\n","date":"2018-04-26 03:22:53","endLine":50,"groupId":"28092","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/58c84c16bbd90a622472b4fe996fe11b2e7c8a.src","preCode":"    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        if (!super.equals(o)) return false;\n        IndexVersionValue that = (IndexVersionValue) o;\n        return Objects.equals(translogLocation, that.translogLocation);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/engine/IndexVersionValue.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2021-01-26 22:47:09","commitOrder":2,"curCode":"        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            if (super.equals(o) == false) return false;\n\n            IntMinMaxTrackingBasicValue that = (IntMinMaxTrackingBasicValue) o;\n\n            if (minValue != that.minValue) return false;\n            return maxValue == that.maxValue;\n\n        }\n","date":"2021-01-26 22:47:09","endLine":493,"groupId":"56773","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/40/321df24cb389438b0770a17fea13e00d6b9434.src","preCode":"        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            if (!super.equals(o)) return false;\n\n            IntMinMaxTrackingBasicValue that = (IntMinMaxTrackingBasicValue) o;\n\n            if (minValue != that.minValue) return false;\n            return maxValue == that.maxValue;\n\n        }\n","realPath":"test/logger-usage/src/main/java/org/elasticsearch/test/loggerusage/ESLoggerUsageChecker.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":483,"status":"M"}],"commitId":"ad1f876daa714001877622ae4d6c91043c38eae7","commitMessage":"@@@Replace NOT operator with explicit `false` check (#67817)\n\nWe have an in-house rule to compare explicitly against `false` instead\nof using the logical not operator (`!`). However.  this hasn't\nhistorically been enforced.  meaning that there are many violations in\nthe source at present.\n\nWe now have a Checkstyle rule that can detect these cases.  but before we\ncan turn it on.  we need to fix the existing violations. This is being\ndone over a series of PRs.  since there are a lot to fix.","date":"2021-01-26 22:47:09","modifiedFileCount":"117","status":"M","submitter":"Rory Hunter"},{"authorTime":"2021-01-26 22:47:09","codes":[{"authorDate":"2021-01-29 21:51:41","commitOrder":3,"curCode":"    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        if (super.equals(o) == false) return false;\n        IndexVersionValue that = (IndexVersionValue) o;\n        return Objects.equals(translogLocation, that.translogLocation);\n    }\n","date":"2021-01-29 21:51:41","endLine":50,"groupId":"107721","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e0/c49b08761bf597f7a0d963f473d0eb81f99b22.src","preCode":"    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n        if (!super.equals(o)) return false;\n        IndexVersionValue that = (IndexVersionValue) o;\n        return Objects.equals(translogLocation, that.translogLocation);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/engine/IndexVersionValue.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2021-01-26 22:47:09","commitOrder":3,"curCode":"        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            if (super.equals(o) == false) return false;\n\n            IntMinMaxTrackingBasicValue that = (IntMinMaxTrackingBasicValue) o;\n\n            if (minValue != that.minValue) return false;\n            return maxValue == that.maxValue;\n\n        }\n","date":"2021-01-26 22:47:09","endLine":493,"groupId":"107721","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/40/321df24cb389438b0770a17fea13e00d6b9434.src","preCode":"        public boolean equals(Object o) {\n            if (this == o) return true;\n            if (o == null || getClass() != o.getClass()) return false;\n            if (super.equals(o) == false) return false;\n\n            IntMinMaxTrackingBasicValue that = (IntMinMaxTrackingBasicValue) o;\n\n            if (minValue != that.minValue) return false;\n            return maxValue == that.maxValue;\n\n        }\n","realPath":"test/logger-usage/src/main/java/org/elasticsearch/test/loggerusage/ESLoggerUsageChecker.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":483,"status":"N"}],"commitId":"d5c5f9e9a6916c38818817b60a23f268bdd67fa5","commitMessage":"@@@Replace NOT operator with explicit `false` check (#68124)\n\nPart 3.\n\nWe have an in-house rule to compare explicitly against `false` instead\nof using the logical not operator (`!`). However.  this hasn't\nhistorically been enforced.  meaning that there are many violations in\nthe source at present.\n\nWe now have a Checkstyle rule that can detect these cases.  but before we\ncan turn it on.  we need to fix the existing violations. This is being\ndone over a series of PRs.  since there are a lot to fix.","date":"2021-01-29 21:51:41","modifiedFileCount":"101","status":"M","submitter":"Rory Hunter"}]
