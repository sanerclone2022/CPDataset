[{"authorTime":"2018-10-26 01:00:36","codes":[{"authorDate":"2018-10-26 01:00:36","commitOrder":1,"curCode":"    public void testRepeatedClassBinding() {\n        String script = \"testAddWithState(4, 5, test, 0.0)\";\n        BindingsTestScript.Factory factory = scriptEngine.compile(null, script, BindingsTestScript.CONTEXT, Collections.emptyMap());\n        BindingsTestScript executableScript = factory.newInstance();\n\n        assertEquals(14, executableScript.execute(5, 0));\n        assertEquals(13, executableScript.execute(4, 0));\n        assertEquals(16, executableScript.execute(7, 0));\n    }\n","date":"2018-10-26 01:00:36","endLine":91,"groupId":"58960","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRepeatedClassBinding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3f/3d589702a5efa81ee5e9a6c64278c7c284602c.src","preCode":"    public void testRepeatedClassBinding() {\n        String script = \"testAddWithState(4, 5, test, 0.0)\";\n        BindingsTestScript.Factory factory = scriptEngine.compile(null, script, BindingsTestScript.CONTEXT, Collections.emptyMap());\n        BindingsTestScript executableScript = factory.newInstance();\n\n        assertEquals(14, executableScript.execute(5, 0));\n        assertEquals(13, executableScript.execute(4, 0));\n        assertEquals(16, executableScript.execute(7, 0));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/BindingsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"},{"authorDate":"2018-10-26 01:00:36","commitOrder":1,"curCode":"    public void testBoundClassBinding() {\n        String script = \"testAddWithState(4, bound, test, 0.0)\";\n        BindingsTestScript.Factory factory = scriptEngine.compile(null, script, BindingsTestScript.CONTEXT, Collections.emptyMap());\n        BindingsTestScript executableScript = factory.newInstance();\n\n        assertEquals(10, executableScript.execute(5, 1));\n        assertEquals(9, executableScript.execute(4, 2));\n    }\n","date":"2018-10-26 01:00:36","endLine":100,"groupId":"58960","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBoundClassBinding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3f/3d589702a5efa81ee5e9a6c64278c7c284602c.src","preCode":"    public void testBoundClassBinding() {\n        String script = \"testAddWithState(4, bound, test, 0.0)\";\n        BindingsTestScript.Factory factory = scriptEngine.compile(null, script, BindingsTestScript.CONTEXT, Collections.emptyMap());\n        BindingsTestScript executableScript = factory.newInstance();\n\n        assertEquals(10, executableScript.execute(5, 1));\n        assertEquals(9, executableScript.execute(4, 2));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/BindingsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"}],"commitId":"3e7042832acfffad4de4214ad6491b147f5157b0","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into index-lifecycle\n","date":"2018-10-26 01:00:36","modifiedFileCount":"350","status":"B","submitter":"Lee Hinman"},{"authorTime":"2019-03-23 03:54:26","codes":[{"authorDate":"2019-03-23 03:54:26","commitOrder":2,"curCode":"    public void testRepeatedClassBinding() {\n        String script = \"addWithState(4, 5, test, 0.0)\";\n        BindingsTestScript.Factory factory = scriptEngine.compile(null, script, BindingsTestScript.CONTEXT, Collections.emptyMap());\n        BindingsTestScript executableScript = factory.newInstance();\n\n        assertEquals(14, executableScript.execute(5, 0));\n        assertEquals(13, executableScript.execute(4, 0));\n        assertEquals(16, executableScript.execute(7, 0));\n    }\n","date":"2019-03-23 03:54:26","endLine":136,"groupId":"10962","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRepeatedClassBinding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6a/ca40fc4cdaf0cae416a096404b0af204c72117.src","preCode":"    public void testRepeatedClassBinding() {\n        String script = \"testAddWithState(4, 5, test, 0.0)\";\n        BindingsTestScript.Factory factory = scriptEngine.compile(null, script, BindingsTestScript.CONTEXT, Collections.emptyMap());\n        BindingsTestScript executableScript = factory.newInstance();\n\n        assertEquals(14, executableScript.execute(5, 0));\n        assertEquals(13, executableScript.execute(4, 0));\n        assertEquals(16, executableScript.execute(7, 0));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/BindingsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2019-03-23 03:54:26","commitOrder":2,"curCode":"    public void testBoundClassBinding() {\n        String script = \"addWithState(4, bound, test, 0.0)\";\n        BindingsTestScript.Factory factory = scriptEngine.compile(null, script, BindingsTestScript.CONTEXT, Collections.emptyMap());\n        BindingsTestScript executableScript = factory.newInstance();\n\n        assertEquals(10, executableScript.execute(5, 1));\n        assertEquals(9, executableScript.execute(4, 2));\n    }\n","date":"2019-03-23 03:54:26","endLine":145,"groupId":"10962","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBoundClassBinding","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6a/ca40fc4cdaf0cae416a096404b0af204c72117.src","preCode":"    public void testBoundClassBinding() {\n        String script = \"testAddWithState(4, bound, test, 0.0)\";\n        BindingsTestScript.Factory factory = scriptEngine.compile(null, script, BindingsTestScript.CONTEXT, Collections.emptyMap());\n        BindingsTestScript executableScript = factory.newInstance();\n\n        assertEquals(10, executableScript.execute(5, 1));\n        assertEquals(9, executableScript.execute(4, 2));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/BindingsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"}],"commitId":"8da56dc79d9e3fb4933a1e8e1b7dd0bce3e3d796","commitMessage":"@@@Add implicit this for class binding in Painless (#40285)\n\nThis change allows class bindings to add as their first argument.  the base script \nclass. The this reference to the base script class will be implicitly passed into a \nclass binding as the first constructor argument upon initialization when \nspecified as the first argument in whitelist entry for the class binding. This \nallows a class binding access to additional information added to the base script \nclass such as more information about the current document or current shard. \nOne extra requirement for this to work is the appropriate script base class \nmust be whitelisted (should be empty).","date":"2019-03-23 03:54:26","modifiedFileCount":"4","status":"M","submitter":"Jack Conradson"}]
