[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testFilterPathWithSubField() {\n        final String input = \"foo.bar\";\n\n        FilterPath[] filterPaths = FilterPath.compile(singleton(input));\n        assertNotNull(filterPaths);\n        assertThat(filterPaths, arrayWithSize(1));\n\n        FilterPath filterPath = filterPaths[0];\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"foo\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"bar\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(true));\n        assertThat(filterPath.getSegment(), isEmptyString());\n        assertSame(filterPath, FilterPath.EMPTY);\n    }\n","date":"2018-04-26 03:22:53","endLine":78,"groupId":"22172","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFilterPathWithSubField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e1/51ac67a332fbc7991bb29083ca817d30a41cc5.src","preCode":"    public void testFilterPathWithSubField() {\n        final String input = \"foo.bar\";\n\n        FilterPath[] filterPaths = FilterPath.compile(singleton(input));\n        assertNotNull(filterPaths);\n        assertThat(filterPaths, arrayWithSize(1));\n\n        FilterPath filterPath = filterPaths[0];\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"foo\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"bar\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(true));\n        assertThat(filterPath.getSegment(), isEmptyString());\n        assertSame(filterPath, FilterPath.EMPTY);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/xcontent/support/filtering/FilterPathTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testWildcardInNameFilterPath() {\n        String input = \"f*o.bar\";\n\n        FilterPath[] filterPaths = FilterPath.compile(singleton(input));\n        assertNotNull(filterPaths);\n        assertThat(filterPaths, arrayWithSize(1));\n\n        FilterPath filterPath = filterPaths[0];\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"f*o\"));\n        assertThat(filterPath.matchProperty(\"foo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"flo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"foooo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"boo\"), nullValue());\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"bar\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(true));\n        assertThat(filterPath.getSegment(), isEmptyString());\n        assertSame(filterPath, FilterPath.EMPTY);\n    }\n","date":"2018-04-26 03:22:53","endLine":236,"groupId":"72698","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWildcardInNameFilterPath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e1/51ac67a332fbc7991bb29083ca817d30a41cc5.src","preCode":"    public void testWildcardInNameFilterPath() {\n        String input = \"f*o.bar\";\n\n        FilterPath[] filterPaths = FilterPath.compile(singleton(input));\n        assertNotNull(filterPaths);\n        assertThat(filterPaths, arrayWithSize(1));\n\n        FilterPath filterPath = filterPaths[0];\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"f*o\"));\n        assertThat(filterPath.matchProperty(\"foo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"flo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"foooo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"boo\"), nullValue());\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"bar\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(true));\n        assertThat(filterPath.getSegment(), isEmptyString());\n        assertSame(filterPath, FilterPath.EMPTY);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/xcontent/support/filtering/FilterPathTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2020-04-16 04:31:51","codes":[{"authorDate":"2020-04-16 04:31:51","commitOrder":2,"curCode":"    public void testFilterPathWithSubField() {\n        final String input = \"foo.bar\";\n\n        FilterPath[] filterPaths = FilterPath.compile(singleton(input));\n        assertNotNull(filterPaths);\n        assertThat(filterPaths, arrayWithSize(1));\n\n        FilterPath filterPath = filterPaths[0];\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"foo\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"bar\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(true));\n        assertThat(filterPath.getSegment(), is(emptyString()));\n        assertSame(filterPath, FilterPath.EMPTY);\n    }\n","date":"2020-04-16 04:31:51","endLine":78,"groupId":"103981","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFilterPathWithSubField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fd/9755429299d34d0388b90f65a1698b1f21be3e.src","preCode":"    public void testFilterPathWithSubField() {\n        final String input = \"foo.bar\";\n\n        FilterPath[] filterPaths = FilterPath.compile(singleton(input));\n        assertNotNull(filterPaths);\n        assertThat(filterPaths, arrayWithSize(1));\n\n        FilterPath filterPath = filterPaths[0];\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"foo\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"bar\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(true));\n        assertThat(filterPath.getSegment(), isEmptyString());\n        assertSame(filterPath, FilterPath.EMPTY);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/xcontent/support/filtering/FilterPathTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2020-04-16 04:31:51","commitOrder":2,"curCode":"    public void testWildcardInNameFilterPath() {\n        String input = \"f*o.bar\";\n\n        FilterPath[] filterPaths = FilterPath.compile(singleton(input));\n        assertNotNull(filterPaths);\n        assertThat(filterPaths, arrayWithSize(1));\n\n        FilterPath filterPath = filterPaths[0];\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"f*o\"));\n        assertThat(filterPath.matchProperty(\"foo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"flo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"foooo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"boo\"), nullValue());\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"bar\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(true));\n        assertThat(filterPath.getSegment(), is(emptyString()));\n        assertSame(filterPath, FilterPath.EMPTY);\n    }\n","date":"2020-04-16 04:31:51","endLine":236,"groupId":"103981","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWildcardInNameFilterPath","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fd/9755429299d34d0388b90f65a1698b1f21be3e.src","preCode":"    public void testWildcardInNameFilterPath() {\n        String input = \"f*o.bar\";\n\n        FilterPath[] filterPaths = FilterPath.compile(singleton(input));\n        assertNotNull(filterPaths);\n        assertThat(filterPaths, arrayWithSize(1));\n\n        FilterPath filterPath = filterPaths[0];\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"f*o\"));\n        assertThat(filterPath.matchProperty(\"foo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"flo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"foooo\"), notNullValue());\n        assertThat(filterPath.matchProperty(\"boo\"), nullValue());\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(false));\n        assertThat(filterPath.getSegment(), equalTo(\"bar\"));\n\n        filterPath = filterPath.getNext();\n        assertNotNull(filterPath);\n        assertThat(filterPath.matches(), is(true));\n        assertThat(filterPath.getSegment(), isEmptyString());\n        assertSame(filterPath, FilterPath.EMPTY);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/xcontent/support/filtering/FilterPathTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"}],"commitId":"38cd668ad045ae451ba895b7e41929b86d340cec","commitMessage":"@@@Remove deprecated third-party methods from tests (#55255)\n\nI've noticed that a lot of our tests are using deprecated static methods\nfrom the Hamcrest matchers. While this is not a big deal in any\nobjective sense.  it seems like a small good thing to reduce compilation\nwarnings and be ready for a new release of the matcher library if we\nneed to upgrade. I've also switched a few other methods in tests that\nhave drop-in replacements.","date":"2020-04-16 04:31:51","modifiedFileCount":"56","status":"M","submitter":"William Brafford"}]
