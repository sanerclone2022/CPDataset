[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (fieldName.equals(STRING_FIELD_NAME)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && fieldName.equals(STRING_FIELD_NAME)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (fieldName.equals(STRING_FIELD_NAME) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.cutoffFrequency((float) 10 / randomIntBetween(1, 100));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","date":"2018-04-26 03:22:53","endLine":126,"groupId":"16188","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/a4b99f19d1a7c3b886c31c92293620178d966b.src","preCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (fieldName.equals(STRING_FIELD_NAME)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && fieldName.equals(STRING_FIELD_NAME)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (fieldName.equals(STRING_FIELD_NAME) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.cutoffFrequency((float) 10 / randomIntBetween(1, 100));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (fieldName.equals(STRING_FIELD_NAME)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean()) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","date":"2018-04-26 03:22:53","endLine":80,"groupId":"16188","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1a/c53992ebe8caa6c5ecfed729723054e1c40b0e.src","preCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (fieldName.equals(STRING_FIELD_NAME)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean()) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchPhraseQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-06-05 10:59:49","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (fieldName.equals(STRING_FIELD_NAME)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && fieldName.equals(STRING_FIELD_NAME)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (fieldName.equals(STRING_FIELD_NAME) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.cutoffFrequency((float) 10 / randomIntBetween(1, 100));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","date":"2018-04-26 03:22:53","endLine":126,"groupId":"16188","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/a4b99f19d1a7c3b886c31c92293620178d966b.src","preCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (fieldName.equals(STRING_FIELD_NAME)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && fieldName.equals(STRING_FIELD_NAME)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (fieldName.equals(STRING_FIELD_NAME) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.cutoffFrequency((float) 10 / randomIntBetween(1, 100));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"},{"authorDate":"2018-06-05 10:59:49","commitOrder":2,"curCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (fieldName.equals(STRING_FIELD_NAME)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && fieldName.equals(STRING_FIELD_NAME)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","date":"2018-06-05 10:59:49","endLine":80,"groupId":"16188","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fb/03d54aeff8c169bc71a4f2613c65cfa6f5da38.src","preCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (fieldName.equals(STRING_FIELD_NAME)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean()) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchPhraseQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"2820dba2d7cbbd39e32df7216bbb00a15a0784ad","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-05 10:59:49","modifiedFileCount":"48","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-07-19 02:10:12","codes":[{"authorDate":"2018-07-19 02:10:12","commitOrder":3,"curCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = STRING_ALIAS_FIELD_NAME; \r\n            \r\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (isTextField(fieldName) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.cutoffFrequency((float) 10 / randomIntBetween(1, 100));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","date":"2018-07-19 02:10:12","endLine":128,"groupId":"29590","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7d/72ad9a4e16e470111c5f6220dfbd6a84cc0f33.src","preCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (fieldName.equals(STRING_FIELD_NAME)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && fieldName.equals(STRING_FIELD_NAME)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (fieldName.equals(STRING_FIELD_NAME) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.cutoffFrequency((float) 10 / randomIntBetween(1, 100));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2018-07-19 02:10:12","commitOrder":3,"curCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME,\n            INT_FIELD_NAME, DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","date":"2018-07-19 02:10:12","endLine":80,"groupId":"29590","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e5/9c5d6e0c4c0d3a8f5b7df146856b72f5f9c1d6.src","preCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (fieldName.equals(STRING_FIELD_NAME)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && fieldName.equals(STRING_FIELD_NAME)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchPhraseQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"a019e723b5475f0ca77063dab45fbcccd1d6559a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-19 02:10:12","modifiedFileCount":"121","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-07-19 02:10:12","codes":[{"authorDate":"2018-07-25 17:39:14","commitOrder":4,"curCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME,\n            INT_FIELD_NAME, DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (isTextField(fieldName) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.cutoffFrequency((float) 10 / randomIntBetween(1, 100));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","date":"2018-07-25 17:39:14","endLine":128,"groupId":"29590","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cd/accb486f289e751aa6b5cc1113ffd1101b1fb5.src","preCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = STRING_ALIAS_FIELD_NAME; \r\n            \r\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (isTextField(fieldName) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.cutoffFrequency((float) 10 / randomIntBetween(1, 100));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2018-07-19 02:10:12","commitOrder":4,"curCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME,\n            INT_FIELD_NAME, DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","date":"2018-07-19 02:10:12","endLine":80,"groupId":"29590","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e5/9c5d6e0c4c0d3a8f5b7df146856b72f5f9c1d6.src","preCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME,\n            INT_FIELD_NAME, DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchPhraseQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"}],"commitId":"81faa2fe6b73a251aa16c17fb6266d56b5205b2b","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-25 17:39:14","modifiedFileCount":"13","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-07-27 17:51:09","codes":[{"authorDate":"2018-07-27 17:51:09","commitOrder":5,"curCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (isTextField(fieldName) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.cutoffFrequency((float) 10 / randomIntBetween(1, 100));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","date":"2018-07-27 17:51:09","endLine":125,"groupId":"29590","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0d/e9cac885502f8903e07e295b658b65d7596654.src","preCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME,\n            INT_FIELD_NAME, DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (isTextField(fieldName) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.cutoffFrequency((float) 10 / randomIntBetween(1, 100));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2018-07-27 17:51:09","commitOrder":5,"curCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","date":"2018-07-27 17:51:09","endLine":78,"groupId":"29590","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/14/ef794046790559a0550d7018b84526057a7ec5.src","preCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME,\n            INT_FIELD_NAME, DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        if (fieldName.equals(DATE_FIELD_NAME)) {\n            assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        }\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchPhraseQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"dfb277cfb7969ad543a31dea234579d0e886a73a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-27 17:51:09","modifiedFileCount":"105","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-07-27 17:51:09","codes":[{"authorDate":"2019-05-30 15:31:11","commitOrder":6,"curCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n            DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (isTextField(fieldName) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","date":"2019-05-30 15:31:11","endLine":131,"groupId":"29590","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f7/9bbb86242d9e32d6bb410ae30bd814ee3eeab3.src","preCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n            DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (isTextField(fieldName) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.cutoffFrequency((float) 10 / randomIntBetween(1, 100));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2018-07-27 17:51:09","commitOrder":6,"curCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","date":"2018-07-27 17:51:09","endLine":78,"groupId":"29590","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/14/ef794046790559a0550d7018b84526057a7ec5.src","preCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchPhraseQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"N"}],"commitId":"04b74497314eeec076753a33b3b6cc11549646e8","commitMessage":"@@@Deprecate CommonTermsQuery and cutoff_frequency (#42619)\n\n* Deprecate CommonTermsQuery and cutoff_frequency\n\nSince the max_score optimization landed in Elasticsearch 7. \nthe CommonTermsQuery is redundant and slower. Moreover the\ncutoff_frequency parameter for MatchQuery and MultiMatchQuery\nis redundant.\n\nRelates to #27096\n\n","date":"2019-05-30 15:31:11","modifiedFileCount":"15","status":"M","submitter":"Marios Trivyzas"},{"authorTime":"2020-04-03 22:00:46","codes":[{"authorDate":"2020-04-03 22:00:46","commitOrder":7,"curCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(TEXT_FIELD_NAME, TEXT_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n            DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (isTextField(fieldName) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","date":"2020-04-03 22:00:46","endLine":129,"groupId":"29590","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4e/893073487b1ad267c1b94e02c02a5fcfdbddfb.src","preCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n            DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (isTextField(fieldName) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2020-04-03 22:00:46","commitOrder":7,"curCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(TEXT_FIELD_NAME, TEXT_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","date":"2020-04-03 22:00:46","endLine":76,"groupId":"29590","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/52/9eea78c2482d72eadcece1ec41ecf2c1f94c59.src","preCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(STRING_FIELD_NAME, STRING_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchPhraseQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"f5759bb2092f1a957e79626c872c3f5707c1ee04","commitMessage":"@@@Rename field name constants in AbstractBuilderTestCase (#53234)\n\nSome field name constants were not updaten when we moved from \"string\" to \"text\"\nand \"keyword\" fields. Renaming them makes it easier and faster to know which\nfield type is used in test subclassing this base test case.","date":"2020-04-03 22:00:46","modifiedFileCount":"34","status":"M","submitter":"Christoph B?scher"},{"authorTime":"2021-04-21 21:28:12","codes":[{"authorDate":"2021-04-21 21:28:12","commitOrder":8,"curCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(TEXT_FIELD_NAME, TEXT_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n            DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (isTextField(fieldName) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQueryOption.ALL, ZeroTermsQueryOption.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","date":"2021-04-21 21:28:12","endLine":118,"groupId":"103329","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6f/bfa88a61b356ec979d21b74cb2d490338390bf.src","preCode":"    protected MatchQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(TEXT_FIELD_NAME, TEXT_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n            DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchQueryBuilder matchQuery = new MatchQueryBuilder(fieldName, value);\n        matchQuery.operator(randomFrom(Operator.values()));\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (isTextField(fieldName) && randomBoolean()) {\n            matchQuery.fuzziness(randomFuzziness(fieldName));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.prefixLength(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.maxExpansions(randomIntBetween(1, 1000));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.minimumShouldMatch(randomMinimumShouldMatch());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyRewrite(getRandomRewriteMethod());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.fuzzyTranspositions(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.lenient(randomBoolean());\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.autoGenerateSynonymsPhraseQuery(randomBoolean());\n        }\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2021-04-21 21:28:12","commitOrder":8,"curCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(TEXT_FIELD_NAME, TEXT_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQueryOption.ALL, ZeroTermsQueryOption.NONE));\n        }\n\n        return matchQuery;\n    }\n","date":"2021-04-21 21:28:12","endLine":64,"groupId":"103329","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"doCreateTestQueryBuilder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3e/83472f8d9158378d50af02ed048f9705f440d1.src","preCode":"    protected MatchPhraseQueryBuilder doCreateTestQueryBuilder() {\n        String fieldName = randomFrom(TEXT_FIELD_NAME, TEXT_ALIAS_FIELD_NAME, BOOLEAN_FIELD_NAME, INT_FIELD_NAME,\n                DOUBLE_FIELD_NAME, DATE_FIELD_NAME);\n        Object value;\n        if (isTextField(fieldName)) {\n            int terms = randomIntBetween(0, 3);\n            StringBuilder builder = new StringBuilder();\n            for (int i = 0; i < terms; i++) {\n                builder.append(randomAlphaOfLengthBetween(1, 10)).append(\" \");\n            }\n            value = builder.toString().trim();\n        } else {\n            value = getRandomValueForFieldName(fieldName);\n        }\n\n        MatchPhraseQueryBuilder matchQuery = new MatchPhraseQueryBuilder(fieldName, value);\n\n        if (randomBoolean() && isTextField(fieldName)) {\n            matchQuery.analyzer(randomFrom(\"simple\", \"keyword\", \"whitespace\"));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.slop(randomIntBetween(0, 10));\n        }\n\n        if (randomBoolean()) {\n            matchQuery.zeroTermsQuery(randomFrom(ZeroTermsQuery.ALL, ZeroTermsQuery.NONE));\n        }\n\n        return matchQuery;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MatchPhraseQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"9a86dde3572a6f3999eea75bc3ce30b965837ba3","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-04-21 21:28:12","modifiedFileCount":"1285","status":"M","submitter":"iverase"}]
