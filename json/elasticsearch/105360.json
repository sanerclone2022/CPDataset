[{"authorTime":"2018-09-07 17:59:10","codes":[{"authorDate":"2018-09-07 17:59:10","commitOrder":1,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder =\n                        new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","date":"2018-09-07 17:59:10","endLine":160,"groupId":"40197","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalTDigestPercentiles>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8a/4f399cb25253092b177b7f69a7ce159b5c75e4.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder =\n                        new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/TDigestPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"},{"authorDate":"2018-09-07 17:59:10","commitOrder":1,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder =\n                        new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.HDR);\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","date":"2018-09-07 17:59:10","endLine":140,"groupId":"71901","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalHDRPercentiles>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b6/8b68dd544eaddec74ba4148d664417c0b49e93.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder =\n                        new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.HDR);\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/HDRPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"}],"commitId":"017ffe5d127ce0fb33feb8fc4e5fededb8cbfda1","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-07 17:59:10","modifiedFileCount":"370","status":"B","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2020-02-12 04:32:03","codes":[{"authorDate":"2020-02-12 04:32:03","commitOrder":2,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.TDigest();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").percentilesConfig(hdr);\n                }\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","date":"2020-02-12 04:32:03","endLine":184,"groupId":"47265","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalTDigestPercentiles>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/65ae6f28bdd5c4924ef023c4a49ac56d49e427.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder =\n                        new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/TDigestPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2020-02-12 04:32:03","commitOrder":2,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.HDR);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.Hdr();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").percentilesConfig(hdr);\n                }\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","date":"2020-02-12 04:32:03","endLine":163,"groupId":"47265","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalHDRPercentiles>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/40/ba3ef617b8c841d580a8203449306a7581e46a.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder =\n                        new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.HDR);\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/HDRPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"ba9c4fb98702825d33f24dcc5798d2b5d1cc5b96","commitMessage":"@@@Refactor Percentiles/Ranks aggregation builders and factories (#51887)\n\n- Consolidates HDR/TDigest factories into a single factory\n- Consolidates most HDR/TDigest builder into an abstract builder\n- Deprecates method().  compression().  numSigFig() in favor of a new\nunified PercentileConfig object\n- Disallows setting algo options that don't apply to current algo\n\nThe unified config method carries both the method and algo-specific\nsetting. This provides a mechanism to reject settings that apply\nto the wrong algorithm.  For BWC the old methods are retained\nbut marked as deprecated.  and can be removed in future versions.\n\nCo-authored-by: Mark Tozzi <mark.tozzi@gmail.com>\n","date":"2020-02-12 04:32:03","modifiedFileCount":"8","status":"M","submitter":"Zachary Tong"},{"authorTime":"2020-03-27 03:01:07","codes":[{"authorDate":"2020-02-12 04:32:03","commitOrder":3,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.TDigest();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").percentilesConfig(hdr);\n                }\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","date":"2020-02-12 04:32:03","endLine":184,"groupId":"47265","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalTDigestPercentiles>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/65ae6f28bdd5c4924ef023c4a49ac56d49e427.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.TDigest();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").percentilesConfig(hdr);\n                }\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/TDigestPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"N"},{"authorDate":"2020-03-27 03:01:07","commitOrder":3,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify, MappedFieldType fieldType, String fieldName) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).method(PercentilesMethod.HDR);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.Hdr();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).percentilesConfig(hdr);\n                }\n\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","date":"2020-03-27 03:01:07","endLine":226,"groupId":"15420","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalHDRPercentiles>verify@MappedFieldTypefieldType@StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a0/a0c5a9118a0151562ed214b7579981562a8bb4.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.HDR);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.Hdr();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").percentilesConfig(hdr);\n                }\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/HDRPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"}],"commitId":"a90c1de8745681356a6516f4f22a8c40f71f6b12","commitMessage":"@@@Add ValuesSource Registry and associated logic (#54281)\n\n* Remove ValuesSourceType argument to ValuesSourceAggregationBuilder (#48638)\n\n* ValuesSourceRegistry Prototype (#48758)\n\n* Remove generics from ValuesSource related classes (#49606)\n\n* fix percentile aggregation tests (#50712)\n\n* Basic thread safety for ValuesSourceRegistry (#50340)\n\n* Remove target value type from ValuesSourceAggregationBuilder (#49943)\n\n* Cleanup default values source type (#50992)\n\n* CoreValuesSourceType no longer implements Writable (#51276)\n\n* Remove genereics & hard coded ValuesSource references from Matrix Stats (#51131)\n\n* Put values source types on fields (#51503)\n\n* Remove VST Any (#51539)\n\n* Rewire terms agg to use new VS registry (#51182)\n\nAlso adds some basic AggTestCases for untested code\npaths (and boilerplate for future tests once the IT are\nconverted over)\n\n* Wire Cardinality aggregation to work with the ValuesSourceRegistry (#51337)\n\n* Wire Percentiles aggregator into new VS framework (#51639)\n\nThis required a bit of a refactor to percentiles itself.  Before. \nthe Builder would switch on the chosen algo to generate an\nalgo-specific factory.  This doesn't work (or at least.  would be\ndifficult) in the new VS framework.\n\nThis refactor consolidates both factories together and introduces\na PercentilesConfig object to act as a standardized way to pass\nalgo-specific parameters through the factory.  This object\nis then used when deciding which kind of aggregator to create\n\nNote: CoreValuesSourceType.HISTOGRAM still lives in core.  and will\nbe moved in a subsequent PR.\n\n* Remove generics and target value type from MultiVSAB (#51647)\n\n* fix checkstyle after merge (#52008)\n\n* Plumb ValuesSourceRegistry through to QuerySearchContext (#51710)\n\n* Convert RareTerms to new VS registry (#52166)\n\n* Wire up Value Count (#52225)\n\n* Wire up Max & Min aggregations (#52219)\n\n* ValuesSource refactoring: Wire up Sum aggregation (#52571)\n\n* ValuesSource refactoring: Wire up SigTerms aggregation (#52590)\n\n* Soft immutability for VSConfig (#52729)\n\n* Unmute testSupportedFieldTypes.  fix Percentiles/Ranks/Terms tests (#52734)\n\nAlso fixes Percentiles which was incorrectly specified to only accept\nnumeric.  but in fact also accepts Boolean and Date (because those are\nnumeric on master - thanks `testSupportedFieldTypes` for catching it!)\n\n* VS refactoring: Wire up stats aggregation (#52891)\n\n* ValuesSource refactoring: Wire up string_stats aggregation (#52875)\n\n* VS refactoring: Wire up median (MAD) aggregation (#52945)\n\n* fix valuesourcetype issue with constant_keyword field (#53041)\n\nthis commit implements `getValuesSourceType` for\nthe ConstantKeyword field type.\n\nmaster was merged into feature/extensible-values-source\nintroducing a new field type that was not implementing\n`getValuesSourceType`.\n\n* ValuesSource refactoring: Wire up Avg aggregation (#52752)\n\n* Wire PercentileRanks aggregator into new VS framework  (#51693)\n\n* Add a VSConfig resolver for aggregations not using the registry (#53038)\n\n* Vs refactor wire up ranges and date ranges (#52918)\n\n* Wire up geo_bounds aggregation to ValuesSourceRegistry (#53034)\n\nThis commit updates the geo_bounds aggregation to depend\non registering itself in the ValuesSourceRegistry\n\nrelates #42949.\n\n* VS refactoring: convert Boxplot to new registry (#53132)\n\n* Wire-up geotile_grid and geohash_grid to ValuesSourceRegistry (#53037)\n\nThis commit updates the geo*_grid aggregations to depend\non registering itself in the ValuesSourceRegistry\n\nrelates to the values-source refactoring meta issue #42949.\n\n* Wire-up geo_centroid agg to ValuesSourceRegistry (#53040)\n\nThis commit updates the geo_centroid aggregation to depend\non registering itself in the ValuesSourceRegistry.\n\nrelates to the values-source refactoring meta issue #42949.\n\n* Fix type tests for Missing aggregation (#53501)\n\n* ValuesSource Refactor: move histo VSType into XPack module (#53298)\n\n- Introduces a new API (`getBareAggregatorRegistrar()`) which allows plugins to register aggregations against existing agg definitions defined in Core.\n- This moves the histogram VSType over to XPack where it belongs. `getHistogramValues()` still remains as a Core concept\n- Moves the histo-specific bits over to xpack (e.g. the actual aggregator logic). This requires extra boilerplate since we need to create a new \"Analytics\" Percentile/Rank aggregators to deal with the histo field. Doubly-so since percentiles/ranks are extra boiler-plate'y... should be much lighter for other aggs\n\n* Wire up DateHistogram to the ValuesSourceRegistry (#53484)\n\n* Vs refactor parser cleanup (#53198)\n\nCo-authored-by: Zachary Tong <polyfractal@elastic.co>\nCo-authored-by: Zachary Tong <zach@elastic.co>\nCo-authored-by: Christos Soulios <1561376+csoulios@users.noreply.github.com>\nCo-authored-by: Tal Levy <JubBoy333@gmail.com>","date":"2020-03-27 03:01:07","modifiedFileCount":"214","status":"M","submitter":"Mark Tozzi"},{"authorTime":"2020-03-27 03:01:07","codes":[{"authorDate":"2020-06-16 00:47:15","commitOrder":4,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.TDigest();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").percentilesConfig(hdr);\n                }\n\n                MappedFieldType fieldType\n                    = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","date":"2020-06-16 00:47:15","endLine":202,"groupId":"51085","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalTDigestPercentiles>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2f/24d1c04bc851095dba04a7e794d26f91a5122e.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.TDigest();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").percentilesConfig(hdr);\n                }\n\n                MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n                fieldType.setName(\"number\");\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/TDigestPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"},{"authorDate":"2020-03-27 03:01:07","commitOrder":4,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify, MappedFieldType fieldType, String fieldName) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).method(PercentilesMethod.HDR);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.Hdr();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).percentilesConfig(hdr);\n                }\n\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","date":"2020-03-27 03:01:07","endLine":226,"groupId":"15420","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalHDRPercentiles>verify@MappedFieldTypefieldType@StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a0/a0c5a9118a0151562ed214b7579981562a8bb4.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify, MappedFieldType fieldType, String fieldName) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).method(PercentilesMethod.HDR);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.Hdr();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).percentilesConfig(hdr);\n                }\n\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/HDRPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"N"}],"commitId":"3b696828ada5953bb1669b972a353736383edf08","commitMessage":"@@@MappedFieldType should not extend FieldType (#57666)\n\nMappedFieldType is a combination of two concerns:\n\n* an extension of lucene's FieldType.  defining how a field should be indexed\n* a set of query factory methods.  defining how a field should be searched\n\nWe want to break these two concerns apart. This commit is a first step to doing this.  breaking\nthe inheritance relationship between MappedFieldType and FieldType. MappedFieldType \ninstead has a series of boolean flags defining whether or not the field is searchable or \naggregatable.  and FieldMapper has a separate FieldType passed to its constructor defining \nhow indexing should be done.\n\nRelates to #56814","date":"2020-06-16 00:47:15","modifiedFileCount":"257","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-10-29 05:33:27","codes":[{"authorDate":"2020-10-29 05:33:27","commitOrder":5,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.TDigest();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").percentilesConfig(hdr);\n                }\n\n                MappedFieldType fieldType\n                    = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","date":"2020-10-29 05:33:27","endLine":201,"groupId":"51085","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalTDigestPercentiles>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/25/a7a37e69cfbd986d246eaf88257d19e71f309e.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.TDigest();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").percentilesConfig(hdr);\n                }\n\n                MappedFieldType fieldType\n                    = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/TDigestPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"},{"authorDate":"2020-10-29 05:33:27","commitOrder":5,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify, MappedFieldType fieldType, String fieldName) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).method(PercentilesMethod.HDR);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.Hdr();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).percentilesConfig(hdr);\n                }\n\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","date":"2020-10-29 05:33:27","endLine":221,"groupId":"15420","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalHDRPercentiles>verify@MappedFieldTypefieldType@StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8a/0ea815e72b2bbf0290f7882572a5c939dc2269.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify, MappedFieldType fieldType, String fieldName) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).method(PercentilesMethod.HDR);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.Hdr();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).percentilesConfig(hdr);\n                }\n\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/HDRPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"M"}],"commitId":"3af540b50dd526ee035c20d691d8ec32e8b5068a","commitMessage":"@@@Remove aggregation's postCollect phase (#64016)\n\nAfter #63811 it became clear to me that `postCollect` is kind of\ndangerous and not all that useful. So this removes it.\n\nThe trouble with `postCollect` is that it all happened right after we\nfinished calling `collect` on the `LeafBucketCollectors` but before we\nbuilt the aggregation results. But in #63811 we found out that we can't\ncall `postCollect` on the children of `parent` or `child` aggregators\nuntil we know which *which* aggregation results we're building.\n\nSo this removes `postCollect` and moves all of the things we did at\npost-collect phase into `buildAggregations` or into hooks called in\nthose methods.\n","date":"2020-10-29 05:33:27","modifiedFileCount":"41","status":"M","submitter":"Nik Everett"},{"authorTime":"2021-02-11 08:12:50","codes":[{"authorDate":"2021-02-11 08:12:50","commitOrder":6,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.TDigest();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").percentilesConfig(hdr);\n                }\n\n                MappedFieldType fieldType\n                    = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","date":"2021-02-11 08:12:50","endLine":191,"groupId":"105360","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalTDigestPercentiles>verify)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/16/b585d621d2a56ca34c45485656a05920ae506b.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalTDigestPercentiles> verify) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").method(PercentilesMethod.TDIGEST);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.TDigest();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(\"number\").percentilesConfig(hdr);\n                }\n\n                MappedFieldType fieldType\n                    = new NumberFieldMapper.NumberFieldType(\"number\", NumberFieldMapper.NumberType.LONG);\n                TDigestPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                verify.accept((InternalTDigestPercentiles) aggregator.buildAggregation(0L));\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/TDigestPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"},{"authorDate":"2021-02-11 08:12:50","commitOrder":6,"curCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify, MappedFieldType fieldType, String fieldName) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).method(PercentilesMethod.HDR);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.Hdr();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).percentilesConfig(hdr);\n                }\n\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                aggregator.postCollection();\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","date":"2021-02-11 08:12:50","endLine":211,"groupId":"105360","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testCase","params":"(Queryquery@CheckedConsumer<RandomIndexWriter@IOException>buildIndex@Consumer<InternalHDRPercentiles>verify@MappedFieldTypefieldType@StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a4/dbefe92a109ff8796e3fbf7d6f8d21b0d46cd0.src","preCode":"    private void testCase(Query query, CheckedConsumer<RandomIndexWriter, IOException> buildIndex,\n                          Consumer<InternalHDRPercentiles> verify, MappedFieldType fieldType, String fieldName) throws IOException {\n        try (Directory directory = newDirectory()) {\n            try (RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory)) {\n                buildIndex.accept(indexWriter);\n            }\n\n            try (IndexReader indexReader = DirectoryReader.open(directory)) {\n                IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n\n                PercentilesAggregationBuilder builder;\n                \r\n                if (randomBoolean()) {\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).method(PercentilesMethod.HDR);\n                } else {\n                    PercentilesConfig hdr = new PercentilesConfig.Hdr();\n                    builder = new PercentilesAggregationBuilder(\"test\").field(fieldName).percentilesConfig(hdr);\n                }\n\n                HDRPercentilesAggregator aggregator = createAggregator(builder, indexSearcher, fieldType);\n                aggregator.preCollection();\n                indexSearcher.search(query, aggregator);\n                verify.accept((InternalHDRPercentiles) aggregator.buildAggregation(0L));\n\n            }\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/HDRPercentilesAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"}],"commitId":"0bbc6addd9b5314db9115fa4ac10211e43ba2d66","commitMessage":"@@@Revert \"Remove aggregation's postCollect phase (#68615)\n\nThis partially reverts #64016 and  and adds #67839 and adds\nadditional tests that would have caught issues with the changes\nin #64016. It's mostly Nik's code.  I am just cleaning things up\na bit.\n\nCo-authored-by: Nik Everett <nik9000@gmail.com>\n","date":"2021-02-11 08:12:50","modifiedFileCount":"40","status":"M","submitter":"Igor Motov"}]
